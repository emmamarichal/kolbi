{
.appVersion = "3420";
.formatVersion = 3;
customParameters = (
{
name = panose;
value = (
0,
0,
0,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
4,
5,
6,
7,
9,
29,
31,
32,
33,
35,
36,
37,
38,
42,
45,
47,
60,
62
);
},
{
name = fsType;
value = (
);
},
{
disabled = 1;
name = glyphOrder;
value = (
.notdef,
CR,
space,
A,
Aacute,
Abreve,
uni01CD,
Acircumflex,
Adieresis,
Agrave,
Amacron,
Aogonek,
Aring,
Atilde,
AE,
AEacute,
B,
C,
Cacute,
Ccaron,
Ccedilla,
Cdotaccent,
D,
Dcaron,
Dcroat,
Eth,
E,
Eacute,
Ebreve,
Ecaron,
Ecircumflex,
Edieresis,
Edotaccent,
Egrave,
Emacron,
Eogonek,
uni018E,
uni1EBC,
uni018F,
F,
G,
Gbreve,
uni0122,
Gdotaccent,
H,
Hbar,
I,
IJ,
Iacute,
Ibreve,
Icircumflex,
Idieresis,
Idotaccent,
Igrave,
Imacron,
Iogonek,
Itilde,
J,
uni004A0301,
K,
uni0136,
L,
Lacute,
Lcaron,
uni013B,
Ldot,
Lslash,
M,
N,
Nacute,
Ncaron,
uni0145,
Ntilde,
Eng,
O,
Oacute,
Obreve,
Ocircumflex,
Odieresis,
Ograve,
Ohungarumlaut,
Omacron,
Oslash,
Otilde,
OE,
P,
Thorn,
Q,
R,
Racute,
Rcaron,
uni0156,
S,
Sacute,
Scaron,
Scedilla,
uni0218,
uni1E9E,
T,
Tcaron,
uni0162,
uni021A,
U,
Uacute,
Ubreve,
Ucircumflex,
Udieresis,
Ugrave,
Uhungarumlaut,
Umacron,
Uogonek,
Uring,
Utilde,
V,
W,
Wacute,
Wcircumflex,
Wdieresis,
Wgrave,
X,
Y,
Yacute,
Ycircumflex,
Ydieresis,
Ygrave,
uni1EF8,
Z,
Zacute,
Zcaron,
Zdotaccent,
uniA78B,
a,
aacute,
abreve,
uni01CE,
acircumflex,
adieresis,
agrave,
amacron,
aogonek,
aring,
atilde,
ae,
aeacute,
b,
c,
cacute,
ccaron,
ccedilla,
cdotaccent,
d,
dcaron,
dcroat,
eth,
e,
eacute,
ebreve,
ecaron,
ecircumflex,
edieresis,
edotaccent,
egrave,
emacron,
eogonek,
uni1EBD,
uni0259,
f,
g,
gbreve,
uni0123,
gdotaccent,
h,
hbar,
i,
dotlessi,
iacute,
ibreve,
icircumflex,
idieresis,
i.loclTRK,
igrave,
imacron,
iogonek,
itilde,
ij,
j,
uni0237,
uni006A0301,
k,
uni0137,
l,
lacute,
lcaron,
uni013C,
ldot,
lslash,
m,
n,
nacute,
ncaron,
uni0146,
ntilde,
eng,
o,
oacute,
obreve,
ocircumflex,
odieresis,
ograve,
ohungarumlaut,
omacron,
oslash,
otilde,
oe,
p,
thorn,
q,
r,
racute,
rcaron,
uni0157,
s,
sacute,
scaron,
scedilla,
uni0219,
germandbls,
t,
tcaron,
uni0163,
uni021B,
u,
uacute,
ubreve,
ucircumflex,
udieresis,
ugrave,
uhungarumlaut,
umacron,
uogonek,
uring,
utilde,
v,
w,
wacute,
wcircumflex,
wdieresis,
wgrave,
x,
y,
yacute,
ycircumflex,
ydieresis,
ygrave,
uni1EF9,
z,
zacute,
zcaron,
zdotaccent,
uniA78C,
fi,
fl,
ordfeminine,
ordmasculine,
uni042F,
uni0394,
Pi,
uni03A9,
uni03BC,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
uni24EA,
uni2780,
uni2781,
uni2782,
uni2783,
uni2784,
uni2785,
uni2786,
uni2787,
uni2788,
uni278A,
uni278B,
uni278C,
uni278D,
uni278E,
uni278F,
uni2790,
uni2791,
uni2792,
uni24EA.solid,
zero.dnom,
one.dnom,
two.dnom,
three.dnom,
four.dnom,
five.dnom,
six.dnom,
seven.dnom,
eight.dnom,
nine.dnom,
zero.numr,
one.numr,
two.numr,
three.numr,
four.numr,
five.numr,
six.numr,
seven.numr,
eight.numr,
nine.numr,
fraction,
onehalf,
onequarter,
threequarters,
oneeighth,
threeeighths,
fiveeighths,
seveneighths,
uni2080,
uni2081,
uni2082,
uni2083,
uni2084,
uni2085,
uni2086,
uni2087,
uni2088,
uni2089,
uni2070,
uni00B9,
uni00B2,
uni00B3,
uni2074,
uni2075,
uni2076,
uni2077,
uni2078,
uni2079,
uni00A0,
period,
comma,
colon,
semicolon,
ellipsis,
exclam,
exclamdown,
question,
questiondown,
periodcentered,
bullet,
asterisk,
numbersign,
slash,
backslash,
periodcentered.loclCAT,
periodcentered.loclCAT.case,
hyphen,
endash,
emdash,
underscore,
parenleft,
parenright,
braceleft,
braceright,
bracketleft,
bracketright,
quotesinglbase,
quotedblbase,
quotedblleft,
quotedblright,
quoteleft,
quoteright,
guillemotleft,
guillemotright,
guilsinglleft,
guilsinglright,
quotedbl,
quotesingle,
florin,
at,
ampersand,
paragraph,
section,
copyright,
registered,
trademark,
degree,
bar,
brokenbar,
dagger,
uni2113,
daggerdbl,
estimated,
at.case,
registered.case,
uni20BF,
cent,
currency,
dollar,
Euro,
uni20BD,
uni20A8,
sterling,
yen,
cent.001,
uni2215,
plus,
minus,
multiply,
divide,
equal,
notequal,
greater,
less,
greaterequal,
lessequal,
plusminus,
approxequal,
asciitilde,
logicalnot,
asciicircum,
infinity,
integral,
uni2126,
uni2206,
product,
summation,
radical,
uni00B5,
partialdiff,
percent,
perthousand,
plus.case,
arrowup,
arrowright,
arrowdown,
arrowleft,
lozenge,
uni0308,
uni0307,
gravecomb,
acutecomb,
uni030B,
uni030C.alt,
uni0302,
uni030C,
uni0306,
uni030A,
tildecomb,
uni0304,
uni0312,
uni0326,
uni0327,
uni0328,
uni0308.case,
uni0307.case,
gravecomb.case,
acutecomb.case,
uni030B.case,
uni030C.alt.case,
uni0302.case,
uni030C.case,
uni0306.case,
uni030A.case,
tildecomb.case,
uni0304.case,
uni0327.case,
uni0328.case,
uni0308.narrow,
dieresis,
dotaccent,
grave,
acute,
hungarumlaut,
circumflex,
caron,
breve,
ring,
tilde,
macron,
cedilla,
ogonek,
uni02BA,
uni02B9,
uniE000,
uniE001,
uniE002,
uniE003,
uniE004,
uniE005,
REbackwards,
RethinkWordmark,
Rlogobig
);
}
);
date = "2021-03-04 17:58:23 +0000";
familyName = "Kolbi Sans";
featurePrefixes = (
{
code = "lookup SUB_1 {
	sub L periodcentered by Ldot;
	sub l periodcentered by ldot;
} SUB_1;
lookup SUB_20 {
	sub i by dotlessi;
	sub j by uni0237;
	sub uni0308 by uni0308.case;
	sub uni0307 by uni0307.case;
	sub gravecomb by gravecomb.case;
	sub acutecomb by acutecomb.case;
	sub uni030B by uni030B.case;
	sub uni030C.alt by uni030C.alt.case;
	sub uni0302 by uni0302.case;
	sub uni030C by uni030C.case;
	sub uni0306 by uni0306.case;
	sub uni030A by uni030A.case;
	sub tildecomb by tildecomb.case;
	sub uni0304 by uni0304.case;
	sub uni0327 by uni0327.case;
	sub uni0328 by uni0328.case;
} SUB_20;
lookup SUB_21 {
	sub iogonek by dotlessi uni0328;
} SUB_21;
lookup SUB_22 {
	sub uni0308 by uni0308.case;
	sub uni0307 by uni0307.case;
	sub gravecomb by gravecomb.case;
	sub acutecomb by acutecomb.case;
	sub uni030B by uni030B.case;
	sub uni030C.alt by uni030C.alt.case;
	sub uni0302 by uni0302.case;
	sub uni030C by uni030C.case;
	sub uni0306 by uni0306.case;
	sub uni030A by uni030A.case;
	sub tildecomb by tildecomb.case;
	sub uni0304 by uni0304.case;
	sub uni0327 by uni0327.case;
	sub uni0328 by uni0328.case;
} SUB_22;
lookup SUB_23 {
	sub periodcentered by periodcentered.loclCAT;
} SUB_23;
lookup SUB_24 {
	sub J by uni004A0301;
	sub j by uni006A0301;
	sub periodcentered by periodcentered.loclCAT.case;
} SUB_24;
lookup SUB_25 {
	sub zero.numr by zero.dnom;
	sub one.numr by one.dnom;
	sub two.numr by two.dnom;
	sub three.numr by three.dnom;
	sub four.numr by four.dnom;
	sub five.numr by five.dnom;
	sub six.numr by six.dnom;
	sub seven.numr by seven.dnom;
	sub eight.numr by eight.dnom;
	sub nine.numr by nine.dnom;
} SUB_25;
lookup SUB_26 {
	sub A by ordfeminine;
	sub O by ordmasculine;
	sub a by ordfeminine;
	sub o by ordmasculine;
} SUB_26;
";
name = Prefix;
}
);
features = (
{
automatic = 1;
code = "";
tag = aalt;
},
{
code = "script DFLT;
language dflt;
lookup SUB_2 {
	@SUB_2_0_LA_0 = [uni0308 uni0307 gravecomb acutecomb uni030B uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0312];
	sub [i j]' lookup SUB_20 @SUB_2_0_LA_0;
	@SUB_2_1_LA_0 = [uni0308 uni0307 gravecomb acutecomb uni030B uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0312];
	sub [i j]' lookup SUB_20 [uni0327 uni0328] @SUB_2_1_LA_0;
	@SUB_2_2_BT_0 = [uni0308 uni0307 gravecomb acutecomb uni030B uni030C.alt uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0327 uni0328];
	@SUB_2_2_1 = [uni0308 uni0307 gravecomb acutecomb uni030B uni030C.alt uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0327 uni0328];
	sub @SUB_2_2_BT_0 @SUB_2_2_1' lookup SUB_20;
	@SUB_2_3_BT_0 = [A Aacute Abreve uni01CD Acircumflex Adieresis Agrave Amacron Aogonek Aring Atilde AE AEacute B C Cacute Ccaron Ccedilla Cdotaccent D Dcaron Dcroat Eth E Eacute Ebreve Ecaron Ecircumflex Edieresis Edotaccent Egrave Emacron Eogonek uni018E uni1EBC uni018F F G Gbreve uni0122 Gdotaccent H Hbar I IJ Iacute Ibreve Icircumflex Idieresis Idotaccent Igrave Imacron Iogonek Itilde J uni004A0301 K uni0136 L Lacute Lcaron uni013B Ldot Lslash M N Nacute Ncaron uni0145 Ntilde Eng O Oacute Obreve Ocircumflex Odieresis Ograve Ohungarumlaut Omacron Oslash Otilde OE P Thorn Q R Racute Rcaron uni0156 S Sacute Scaron Scedilla uni0218 uni1E9E T Tcaron uni0162 uni021A U Uacute Ubreve Ucircumflex Udieresis Ugrave Uhungarumlaut Umacron Uogonek Uring Utilde V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ygrave uni1EF8 Z Zacute Zcaron Zdotaccent uniA78B uni042F uni0394 Pi uni03A9];
	@SUB_2_3_1 = [uni0308 uni0307 gravecomb acutecomb uni030B uni030C.alt uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0327 uni0328];
	sub @SUB_2_3_BT_0 @SUB_2_3_1' lookup SUB_20;
	@SUB_2_4_LA_0 = [uni0308 uni0307 gravecomb acutecomb uni030B uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0312];
	sub iogonek' lookup SUB_21 @SUB_2_4_LA_0;
} SUB_2;
lookup SUB_3 {
	@SUB_3_0_0 = [uni0308 uni0307 gravecomb acutecomb uni030B uni030C.alt uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0327 uni0328];
	@SUB_3_0_LA_1 = [uni0308.case uni0307.case gravecomb.case acutecomb.case uni030B.case uni030C.alt.case uni0302.case uni030C.case uni0306.case uni030A.case tildecomb.case uni0304.case uni0327.case uni0328.case];
	sub @SUB_3_0_0' lookup SUB_22 @SUB_3_0_LA_1;
	@SUB_3_1_BT_0 = [uni0308.case uni0307.case gravecomb.case acutecomb.case uni030B.case uni030C.alt.case uni0302.case uni030C.case uni0306.case uni030A.case tildecomb.case uni0304.case uni0327.case uni0328.case];
	@SUB_3_1_1 = [uni0308 uni0307 gravecomb acutecomb uni030B uni030C.alt uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0327 uni0328];
	sub @SUB_3_1_BT_0 @SUB_3_1_1' lookup SUB_22;
} SUB_3;
lookup SUB_4 {
	sub Ldot by L periodcentered.loclCAT.case;
	sub fi by f i;
	sub fl by f l;
} SUB_4;
script latn;
language dflt;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
language AZE;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
language CAT;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
language CRT;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
language KAZ;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
language MOL;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
language NLD;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
language ROM;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
language TAT;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
language TRK;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
";
tag = ccmp;
},
{
code = "script latn;
language AZE;
lookup SUB_5 {
	sub i by i.loclTRK;
} SUB_5;
language CRT;
lookup SUB_5;
language KAZ;
lookup SUB_5;
language TAT;
lookup SUB_5;
language TRK;
lookup SUB_5;
language MOL;
lookup SUB_6 {
	sub Scedilla by uni0218;
	sub uni0162 by uni021A;
	sub uni0163 by uni021B;
} SUB_6;
language ROM;
lookup SUB_6;
language CAT;
lookup SUB_7 {
	sub L periodcentered' lookup SUB_24 L;
	sub l periodcentered' lookup SUB_23 l;
} SUB_7;
language NLD;
lookup SUB_8 {
	sub Iacute J' lookup SUB_24;
	sub iacute j' lookup SUB_24;
} SUB_8;
";
tag = locl;
},
{
code = "script DFLT;
language dflt;
lookup SUB_9 {
	sub zero by uni2080;
	sub one by uni2081;
	sub two by uni2082;
	sub three by uni2083;
	sub four by uni2084;
	sub five by uni2085;
	sub six by uni2086;
	sub seven by uni2087;
	sub eight by uni2088;
	sub nine by uni2089;
} SUB_9;
script latn;
language dflt;
lookup SUB_9;
language AZE;
lookup SUB_9;
language CAT;
lookup SUB_9;
language CRT;
lookup SUB_9;
language KAZ;
lookup SUB_9;
language MOL;
lookup SUB_9;
language NLD;
lookup SUB_9;
language ROM;
lookup SUB_9;
language TAT;
lookup SUB_9;
language TRK;
lookup SUB_9;
";
tag = subs;
},
{
code = "script DFLT;
language dflt;
lookup SUB_10 {
	sub zero by uni2080;
	sub one by uni2081;
	sub two by uni2082;
	sub three by uni2083;
	sub four by uni2084;
	sub five by uni2085;
	sub six by uni2086;
	sub seven by uni2087;
	sub eight by uni2088;
	sub nine by uni2089;
} SUB_10;
script latn;
language dflt;
lookup SUB_10;
language AZE;
lookup SUB_10;
language CAT;
lookup SUB_10;
language CRT;
lookup SUB_10;
language KAZ;
lookup SUB_10;
language MOL;
lookup SUB_10;
language NLD;
lookup SUB_10;
language ROM;
lookup SUB_10;
language TAT;
lookup SUB_10;
language TRK;
lookup SUB_10;
";
tag = sinf;
},
{
code = "script DFLT;
language dflt;
lookup SUB_11 {
	sub zero by uni2070;
	sub one by uni00B9;
	sub two by uni00B2;
	sub three by uni00B3;
	sub four by uni2074;
	sub five by uni2075;
	sub six by uni2076;
	sub seven by uni2077;
	sub eight by uni2078;
	sub nine by uni2079;
} SUB_11;
script latn;
language dflt;
lookup SUB_11;
language AZE;
lookup SUB_11;
language CAT;
lookup SUB_11;
language CRT;
lookup SUB_11;
language KAZ;
lookup SUB_11;
language MOL;
lookup SUB_11;
language NLD;
lookup SUB_11;
language ROM;
lookup SUB_11;
language TAT;
lookup SUB_11;
language TRK;
lookup SUB_11;
";
tag = sups;
},
{
code = "script DFLT;
language dflt;
lookup SUB_12 {
	sub zero by zero.numr;
	sub one by one.numr;
	sub two by two.numr;
	sub three by three.numr;
	sub four by four.numr;
	sub five by five.numr;
	sub six by six.numr;
	sub seven by seven.numr;
	sub eight by eight.numr;
	sub nine by nine.numr;
} SUB_12;
script latn;
language dflt;
lookup SUB_12;
language AZE;
lookup SUB_12;
language CAT;
lookup SUB_12;
language CRT;
lookup SUB_12;
language KAZ;
lookup SUB_12;
language MOL;
lookup SUB_12;
language NLD;
lookup SUB_12;
language ROM;
lookup SUB_12;
language TAT;
lookup SUB_12;
language TRK;
lookup SUB_12;
";
tag = numr;
},
{
code = "script DFLT;
language dflt;
lookup SUB_13 {
	sub zero by zero.dnom;
	sub one by one.dnom;
	sub two by two.dnom;
	sub three by three.dnom;
	sub four by four.dnom;
	sub five by five.dnom;
	sub six by six.dnom;
	sub seven by seven.dnom;
	sub eight by eight.dnom;
	sub nine by nine.dnom;
} SUB_13;
script latn;
language dflt;
lookup SUB_13;
language AZE;
lookup SUB_13;
language CAT;
lookup SUB_13;
language CRT;
lookup SUB_13;
language KAZ;
lookup SUB_13;
language MOL;
lookup SUB_13;
language NLD;
lookup SUB_13;
language ROM;
lookup SUB_13;
language TAT;
lookup SUB_13;
language TRK;
lookup SUB_13;
";
tag = dnom;
},
{
code = "script DFLT;
language dflt;
lookup SUB_14 {
	sub slash by fraction;
} SUB_14;
lookup SUB_15 {
	sub zero by zero.numr;
	sub one by one.numr;
	sub two by two.numr;
	sub three by three.numr;
	sub four by four.numr;
	sub five by five.numr;
	sub six by six.numr;
	sub seven by seven.numr;
	sub eight by eight.numr;
	sub nine by nine.numr;
} SUB_15;
lookup SUB_16 {
	@SUB_16_0_0 = [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
	sub fraction @SUB_16_0_0' lookup SUB_25;
	@SUB_16_1_BT_0 = [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
	@SUB_16_1_1 = [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
	sub @SUB_16_1_BT_0 @SUB_16_1_1' lookup SUB_25;
} SUB_16;
script latn;
language dflt;
lookup SUB_14;
lookup SUB_15;
lookup SUB_16;
language AZE;
lookup SUB_14;
lookup SUB_15;
lookup SUB_16;
language CAT;
lookup SUB_14;
lookup SUB_15;
lookup SUB_16;
language CRT;
lookup SUB_14;
lookup SUB_15;
lookup SUB_16;
language KAZ;
lookup SUB_14;
lookup SUB_15;
lookup SUB_16;
language MOL;
lookup SUB_14;
lookup SUB_15;
lookup SUB_16;
language NLD;
lookup SUB_14;
lookup SUB_15;
lookup SUB_16;
language ROM;
lookup SUB_14;
lookup SUB_15;
lookup SUB_16;
language TAT;
lookup SUB_14;
lookup SUB_15;
lookup SUB_16;
language TRK;
lookup SUB_14;
lookup SUB_15;
lookup SUB_16;
";
tag = frac;
},
{
code = "script DFLT;
language dflt;
lookup SUB_17 {
	lookupflag IgnoreMarks;
	sub E less by uni018E;
	sub R E less by REbackwards;
	sub R less E by REbackwards;
	sub R greater by RethinkWordmark;
	sub R less by uni042F;
	sub f i by fi;
	sub f l by fl;
	sub hyphen hyphen hyphen greater by arrowdown;
	sub hyphen hyphen greater by arrowright;
	sub parenleft R parenright by Rlogobig;
	sub parenleft zero parenright by uni24EA;
	sub parenleft one parenright by uni2780;
	sub parenleft two parenright by uni2781;
	sub parenleft three parenright by uni2782;
	sub parenleft four parenright by uni2783;
	sub parenleft five parenright by uni2784;
	sub parenleft six parenright by uni2785;
	sub parenleft seven parenright by uni2786;
	sub parenleft eight parenright by uni2787;
	sub parenleft nine parenright by uni2788;
	sub braceleft zero braceright by uni24EA.solid;
	sub braceleft one braceright by uni278A;
	sub braceleft two braceright by uni278B;
	sub braceleft three braceright by uni278C;
	sub braceleft four braceright by uni278D;
	sub braceleft five braceright by uni278E;
	sub braceleft six braceright by uni278F;
	sub braceleft seven braceright by uni2790;
	sub braceleft eight braceright by uni2791;
	sub braceleft nine braceright by uni2792;
	sub registered plus by registered.case;
	sub less hyphen hyphen hyphen by arrowup;
	sub less hyphen hyphen by arrowleft;
} SUB_17;
script latn;
language dflt;
lookup SUB_17;
language AZE;
lookup SUB_17;
language CAT;
lookup SUB_17;
language CRT;
lookup SUB_17;
language KAZ;
lookup SUB_17;
language MOL;
lookup SUB_17;
language NLD;
lookup SUB_17;
language ROM;
lookup SUB_17;
language TAT;
lookup SUB_17;
language TRK;
lookup SUB_17;
";
tag = liga;
},
{
code = "script DFLT;
language dflt;
lookup SUB_18 {
	@SUB_18_0_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_18_0_BT_0 [A a]' lookup SUB_26;
	@SUB_18_1_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_18_1_BT_0 [O o]' lookup SUB_26;
} SUB_18;
script latn;
language dflt;
lookup SUB_18;
language AZE;
lookup SUB_18;
language CAT;
lookup SUB_18;
language CRT;
lookup SUB_18;
language KAZ;
lookup SUB_18;
language MOL;
lookup SUB_18;
language NLD;
lookup SUB_18;
language ROM;
lookup SUB_18;
language TAT;
lookup SUB_18;
language TRK;
lookup SUB_18;
";
tag = ordn;
},
{
code = "script DFLT;
language dflt;
lookup SUB_19 {
	sub periodcentered.loclCAT by periodcentered.loclCAT.case;
	sub at by at.case;
	sub registered by registered.case;
	sub plus by plus.case;
	sub uni0308 by uni0308.case;
	sub uni0307 by uni0307.case;
	sub gravecomb by gravecomb.case;
	sub acutecomb by acutecomb.case;
	sub uni030B by uni030B.case;
	sub uni030C.alt by uni030C.alt.case;
	sub uni0302 by uni0302.case;
	sub uni030C by uni030C.case;
	sub uni0306 by uni0306.case;
	sub uni030A by uni030A.case;
	sub tildecomb by tildecomb.case;
	sub uni0304 by uni0304.case;
	sub uni0327 by uni0327.case;
	sub uni0328 by uni0328.case;
} SUB_19;
script latn;
language dflt;
lookup SUB_19;
language AZE;
lookup SUB_19;
language CAT;
lookup SUB_19;
language CRT;
lookup SUB_19;
language KAZ;
lookup SUB_19;
language MOL;
lookup SUB_19;
language NLD;
lookup SUB_19;
language ROM;
lookup SUB_19;
language TAT;
lookup SUB_19;
language TRK;
lookup SUB_19;
";
tag = case;
},
{
code = "script DFLT;
language dflt;
lookup POS_2 {
	markClass uni0326 <anchor 12 0> @POS_2_0_MARK_0;
	markClass uni0327 <anchor 41 0> @POS_2_0_MARK_0;
	markClass uni0327.case <anchor 38 0> @POS_2_0_MARK_0;
	markClass uni0308 <anchor 216 496> @POS_2_0_MARK_1;
	markClass uni0307 <anchor 116 496> @POS_2_0_MARK_1;
	markClass gravecomb <anchor 153 496> @POS_2_0_MARK_1;
	markClass acutecomb <anchor 153 496> @POS_2_0_MARK_1;
	markClass uni030B <anchor 176 496> @POS_2_0_MARK_1;
	markClass uni0302 <anchor 186 496> @POS_2_0_MARK_1;
	markClass uni030C <anchor 186 496> @POS_2_0_MARK_1;
	markClass uni0306 <anchor 193 496> @POS_2_0_MARK_1;
	markClass uni030A <anchor 156 496> @POS_2_0_MARK_1;
	markClass tildecomb <anchor 208 496> @POS_2_0_MARK_1;
	markClass uni0304 <anchor 232 496> @POS_2_0_MARK_1;
	markClass uni0312 <anchor 102 496> @POS_2_0_MARK_1;
	markClass uni0308.case <anchor 252 700> @POS_2_0_MARK_1;
	markClass uni0307.case <anchor 152 700> @POS_2_0_MARK_1;
	markClass gravecomb.case <anchor 189 700> @POS_2_0_MARK_1;
	markClass acutecomb.case <anchor 189 700> @POS_2_0_MARK_1;
	markClass uni030B.case <anchor 242 700> @POS_2_0_MARK_1;
	markClass uni0302.case <anchor 221 700> @POS_2_0_MARK_1;
	markClass uni030C.case <anchor 222 700> @POS_2_0_MARK_1;
	markClass uni0306.case <anchor 229 700> @POS_2_0_MARK_1;
	markClass uni030A.case <anchor 191 700> @POS_2_0_MARK_1;
	markClass tildecomb.case <anchor 244 700> @POS_2_0_MARK_1;
	markClass uni0304.case <anchor 261 700> @POS_2_0_MARK_1;
	markClass uni0308.narrow <anchor 226 496> @POS_2_0_MARK_1;
	pos base cent <anchor 313 0> mark @POS_2_0_MARK_0 <anchor 435 691> mark @POS_2_0_MARK_1;
	pos base uni20A8 <anchor 793 0> mark @POS_2_0_MARK_0 <anchor 881 496> mark @POS_2_0_MARK_1;
} POS_2;
lookup POS_3 {
	markClass uni0326 <anchor 12 0> @POS_3_0_MARK_0;
	markClass uni0327 <anchor 41 0> @POS_3_0_MARK_0;
	markClass uni0327.case <anchor 38 0> @POS_3_0_MARK_0;
	markClass uni0308 <anchor 216 496> @POS_3_0_MARK_1;
	markClass uni0307 <anchor 116 496> @POS_3_0_MARK_1;
	markClass gravecomb <anchor 153 496> @POS_3_0_MARK_1;
	markClass acutecomb <anchor 153 496> @POS_3_0_MARK_1;
	markClass uni030B <anchor 176 496> @POS_3_0_MARK_1;
	markClass uni0302 <anchor 186 496> @POS_3_0_MARK_1;
	markClass uni030C <anchor 186 496> @POS_3_0_MARK_1;
	markClass uni0306 <anchor 193 496> @POS_3_0_MARK_1;
	markClass uni030A <anchor 156 496> @POS_3_0_MARK_1;
	markClass tildecomb <anchor 208 496> @POS_3_0_MARK_1;
	markClass uni0304 <anchor 232 496> @POS_3_0_MARK_1;
	markClass uni0312 <anchor 102 496> @POS_3_0_MARK_1;
	markClass uni0308.case <anchor 252 700> @POS_3_0_MARK_1;
	markClass uni0307.case <anchor 152 700> @POS_3_0_MARK_1;
	markClass gravecomb.case <anchor 189 700> @POS_3_0_MARK_1;
	markClass acutecomb.case <anchor 189 700> @POS_3_0_MARK_1;
	markClass uni030B.case <anchor 242 700> @POS_3_0_MARK_1;
	markClass uni0302.case <anchor 221 700> @POS_3_0_MARK_1;
	markClass uni030C.case <anchor 222 700> @POS_3_0_MARK_1;
	markClass uni0306.case <anchor 229 700> @POS_3_0_MARK_1;
	markClass uni030A.case <anchor 191 700> @POS_3_0_MARK_1;
	markClass tildecomb.case <anchor 244 700> @POS_3_0_MARK_1;
	markClass uni0304.case <anchor 261 700> @POS_3_0_MARK_1;
	markClass uni0308.narrow <anchor 226 496> @POS_3_0_MARK_1;
	pos base A <anchor 293 0> mark @POS_3_0_MARK_0 <anchor 417 700> mark @POS_3_0_MARK_1;
	pos base Aacute <anchor 293 0> mark @POS_3_0_MARK_0 <anchor 460 942> mark @POS_3_0_MARK_1;
	pos base Abreve <anchor 293 0> mark @POS_3_0_MARK_0 <anchor 454 909> mark @POS_3_0_MARK_1;
	pos base uni01CD <anchor 293 0> mark @POS_3_0_MARK_0 <anchor 453 910> mark @POS_3_0_MARK_1;
	pos base Acircumflex <anchor 293 0> mark @POS_3_0_MARK_0 <anchor 454 911> mark @POS_3_0_MARK_1;
	pos base Adieresis <anchor 293 0> mark @POS_3_0_MARK_0 <anchor 454 912> mark @POS_3_0_MARK_1;
	pos base Agrave <anchor 293 0> mark @POS_3_0_MARK_0 <anchor 460 942> mark @POS_3_0_MARK_1;
	pos base Amacron <anchor 293 0> mark @POS_3_0_MARK_0 <anchor 446 867> mark @POS_3_0_MARK_1;
	pos base Aogonek <anchor 293 0> mark @POS_3_0_MARK_0 <anchor 417 700> mark @POS_3_0_MARK_1;
	pos base Aring <anchor 293 0> mark @POS_3_0_MARK_0 <anchor 465 971> mark @POS_3_0_MARK_1;
	pos base Atilde <anchor 293 0> mark @POS_3_0_MARK_0 <anchor 446 868> mark @POS_3_0_MARK_1;
	pos base AE <anchor 417 0> mark @POS_3_0_MARK_0 <anchor 701 700> mark @POS_3_0_MARK_1;
	pos base AEacute <anchor 417 0> mark @POS_3_0_MARK_0 <anchor 744 942> mark @POS_3_0_MARK_1;
	pos base C <anchor 317 0> mark @POS_3_0_MARK_0 <anchor 441 700> mark @POS_3_0_MARK_1;
	pos base Cacute <anchor 317 0> mark @POS_3_0_MARK_0 <anchor 484 942> mark @POS_3_0_MARK_1;
	pos base Ccaron <anchor 317 0> mark @POS_3_0_MARK_0 <anchor 477 910> mark @POS_3_0_MARK_1;
	pos base Ccedilla <anchor 271 -261> mark @POS_3_0_MARK_0 <anchor 441 700> mark @POS_3_0_MARK_1;
	pos base Cdotaccent <anchor 317 0> mark @POS_3_0_MARK_0 <anchor 478 912> mark @POS_3_0_MARK_1;
	pos base D <anchor 306 0> mark @POS_3_0_MARK_0 <anchor 430 700> mark @POS_3_0_MARK_1;
	pos base Dcaron <anchor 306 0> mark @POS_3_0_MARK_0 <anchor 466 910> mark @POS_3_0_MARK_1;
	pos base E <anchor 228 0> mark @POS_3_0_MARK_0 <anchor 352 700> mark @POS_3_0_MARK_1;
	pos base Eacute <anchor 228 0> mark @POS_3_0_MARK_0 <anchor 395 942> mark @POS_3_0_MARK_1;
	pos base Ebreve <anchor 228 0> mark @POS_3_0_MARK_0 <anchor 389 909> mark @POS_3_0_MARK_1;
	pos base Ecaron <anchor 228 0> mark @POS_3_0_MARK_0 <anchor 389 910> mark @POS_3_0_MARK_1;
	pos base Ecircumflex <anchor 228 0> mark @POS_3_0_MARK_0 <anchor 389 911> mark @POS_3_0_MARK_1;
	pos base Edieresis <anchor 228 0> mark @POS_3_0_MARK_0 <anchor 390 912> mark @POS_3_0_MARK_1;
	pos base Edotaccent <anchor 228 0> mark @POS_3_0_MARK_0 <anchor 390 912> mark @POS_3_0_MARK_1;
	pos base Egrave <anchor 228 0> mark @POS_3_0_MARK_0 <anchor 395 942> mark @POS_3_0_MARK_1;
	pos base Emacron <anchor 228 0> mark @POS_3_0_MARK_0 <anchor 382 867> mark @POS_3_0_MARK_1;
	pos base Eogonek <anchor 228 0> mark @POS_3_0_MARK_0 <anchor 352 700> mark @POS_3_0_MARK_1;
	pos base uni1EBC <anchor 228 0> mark @POS_3_0_MARK_0 <anchor 382 868> mark @POS_3_0_MARK_1;
	pos base G <anchor 336 0> mark @POS_3_0_MARK_0 <anchor 460 700> mark @POS_3_0_MARK_1;
	pos base Gbreve <anchor 336 0> mark @POS_3_0_MARK_0 <anchor 497 909> mark @POS_3_0_MARK_1;
	pos base uni0122 <anchor 291 -256> mark @POS_3_0_MARK_0 <anchor 460 700> mark @POS_3_0_MARK_1;
	pos base Gdotaccent <anchor 336 0> mark @POS_3_0_MARK_0 <anchor 498 912> mark @POS_3_0_MARK_1;
	pos base I <anchor 76 0> mark @POS_3_0_MARK_0 <anchor 200 700> mark @POS_3_0_MARK_1;
	pos base IJ <anchor 442 0> mark @POS_3_0_MARK_0 <anchor 691 700> mark @POS_3_0_MARK_1;
	pos base Iacute <anchor 76 0> mark @POS_3_0_MARK_0 <anchor 243 942> mark @POS_3_0_MARK_1;
	pos base Ibreve <anchor 76 0> mark @POS_3_0_MARK_0 <anchor 237 909> mark @POS_3_0_MARK_1;
	pos base Icircumflex <anchor 76 0> mark @POS_3_0_MARK_0 <anchor 237 911> mark @POS_3_0_MARK_1;
	pos base Idieresis <anchor 76 0> mark @POS_3_0_MARK_0 <anchor 237 912> mark @POS_3_0_MARK_1;
	pos base Idotaccent <anchor 76 0> mark @POS_3_0_MARK_0 <anchor 237 912> mark @POS_3_0_MARK_1;
	pos base Igrave <anchor 76 0> mark @POS_3_0_MARK_0 <anchor 243 942> mark @POS_3_0_MARK_1;
	pos base Imacron <anchor 76 0> mark @POS_3_0_MARK_0 <anchor 229 867> mark @POS_3_0_MARK_1;
	pos base Iogonek <anchor 76 0> mark @POS_3_0_MARK_0 <anchor 200 700> mark @POS_3_0_MARK_1;
	pos base Itilde <anchor 76 0> mark @POS_3_0_MARK_0 <anchor 229 868> mark @POS_3_0_MARK_1;
	pos base J <anchor 203 0> mark @POS_3_0_MARK_0 <anchor 452 700> mark @POS_3_0_MARK_1;
	pos base uni004A0301 <anchor 203 0> mark @POS_3_0_MARK_0 <anchor 495 942> mark @POS_3_0_MARK_1;
	pos base K <anchor 261 0> mark @POS_3_0_MARK_0 <anchor 385 700> mark @POS_3_0_MARK_1;
	pos base uni0136 <anchor 216 -256> mark @POS_3_0_MARK_0 <anchor 385 700> mark @POS_3_0_MARK_1;
	pos base L <anchor 219 0> mark @POS_3_0_MARK_0 <anchor 251 700> mark @POS_3_0_MARK_1;
	pos base Lacute <anchor 219 0> mark @POS_3_0_MARK_0 <anchor 294 942> mark @POS_3_0_MARK_1;
	pos base Lcaron <anchor 219 0> mark @POS_3_0_MARK_0 <anchor 251 700> mark @POS_3_0_MARK_1;
	pos base uni013B <anchor 174 -256> mark @POS_3_0_MARK_0 <anchor 251 700> mark @POS_3_0_MARK_1;
	pos base N <anchor 304 0> mark @POS_3_0_MARK_0 <anchor 428 700> mark @POS_3_0_MARK_1;
	pos base Nacute <anchor 304 0> mark @POS_3_0_MARK_0 <anchor 471 942> mark @POS_3_0_MARK_1;
	pos base Ncaron <anchor 304 0> mark @POS_3_0_MARK_0 <anchor 465 910> mark @POS_3_0_MARK_1;
	pos base uni0145 <anchor 259 -256> mark @POS_3_0_MARK_0 <anchor 428 700> mark @POS_3_0_MARK_1;
	pos base Ntilde <anchor 304 0> mark @POS_3_0_MARK_0 <anchor 458 868> mark @POS_3_0_MARK_1;
	pos base Eng <anchor 304 0> mark @POS_3_0_MARK_0 <anchor 428 700> mark @POS_3_0_MARK_1;
	pos base O <anchor 350 0> mark @POS_3_0_MARK_0 <anchor 474 700> mark @POS_3_0_MARK_1;
	pos base Oacute <anchor 350 0> mark @POS_3_0_MARK_0 <anchor 517 942> mark @POS_3_0_MARK_1;
	pos base Obreve <anchor 350 0> mark @POS_3_0_MARK_0 <anchor 511 909> mark @POS_3_0_MARK_1;
	pos base Ocircumflex <anchor 350 0> mark @POS_3_0_MARK_0 <anchor 511 911> mark @POS_3_0_MARK_1;
	pos base Odieresis <anchor 350 0> mark @POS_3_0_MARK_0 <anchor 512 912> mark @POS_3_0_MARK_1;
	pos base Ograve <anchor 350 0> mark @POS_3_0_MARK_0 <anchor 517 942> mark @POS_3_0_MARK_1;
	pos base Ohungarumlaut <anchor 350 0> mark @POS_3_0_MARK_0 <anchor 512 915> mark @POS_3_0_MARK_1;
	pos base Omacron <anchor 350 0> mark @POS_3_0_MARK_0 <anchor 504 867> mark @POS_3_0_MARK_1;
	pos base Otilde <anchor 350 0> mark @POS_3_0_MARK_0 <anchor 504 868> mark @POS_3_0_MARK_1;
	pos base OE <anchor 511 0> mark @POS_3_0_MARK_0 <anchor 635 700> mark @POS_3_0_MARK_1;
	pos base R <anchor 253 0> mark @POS_3_0_MARK_0 <anchor 377 700> mark @POS_3_0_MARK_1;
	pos base Racute <anchor 253 0> mark @POS_3_0_MARK_0 <anchor 420 942> mark @POS_3_0_MARK_1;
	pos base Rcaron <anchor 253 0> mark @POS_3_0_MARK_0 <anchor 413 910> mark @POS_3_0_MARK_1;
	pos base uni0156 <anchor 208 -256> mark @POS_3_0_MARK_0 <anchor 377 700> mark @POS_3_0_MARK_1;
	pos base S <anchor 250 0> mark @POS_3_0_MARK_0 <anchor 374 700> mark @POS_3_0_MARK_1;
	pos base Sacute <anchor 250 0> mark @POS_3_0_MARK_0 <anchor 417 942> mark @POS_3_0_MARK_1;
	pos base Scaron <anchor 250 0> mark @POS_3_0_MARK_0 <anchor 411 910> mark @POS_3_0_MARK_1;
	pos base Scedilla <anchor 204 -261> mark @POS_3_0_MARK_0 <anchor 374 700> mark @POS_3_0_MARK_1;
	pos base uni0218 <anchor 205 -256> mark @POS_3_0_MARK_0 <anchor 374 700> mark @POS_3_0_MARK_1;
	pos base T <anchor 239 0> mark @POS_3_0_MARK_0 <anchor 363 700> mark @POS_3_0_MARK_1;
	pos base Tcaron <anchor 239 0> mark @POS_3_0_MARK_0 <anchor 399 910> mark @POS_3_0_MARK_1;
	pos base uni0162 <anchor 193 -261> mark @POS_3_0_MARK_0 <anchor 363 700> mark @POS_3_0_MARK_1;
	pos base uni021A <anchor 194 -256> mark @POS_3_0_MARK_0 <anchor 363 700> mark @POS_3_0_MARK_1;
	pos base U <anchor 290 0> mark @POS_3_0_MARK_0 <anchor 414 700> mark @POS_3_0_MARK_1;
	pos base Uacute <anchor 290 0> mark @POS_3_0_MARK_0 <anchor 457 942> mark @POS_3_0_MARK_1;
	pos base Ubreve <anchor 290 0> mark @POS_3_0_MARK_0 <anchor 451 909> mark @POS_3_0_MARK_1;
	pos base Ucircumflex <anchor 290 0> mark @POS_3_0_MARK_0 <anchor 451 911> mark @POS_3_0_MARK_1;
	pos base Udieresis <anchor 290 0> mark @POS_3_0_MARK_0 <anchor 451 912> mark @POS_3_0_MARK_1;
	pos base Ugrave <anchor 290 0> mark @POS_3_0_MARK_0 <anchor 457 942> mark @POS_3_0_MARK_1;
	pos base Uhungarumlaut <anchor 290 0> mark @POS_3_0_MARK_0 <anchor 451 915> mark @POS_3_0_MARK_1;
	pos base Umacron <anchor 290 0> mark @POS_3_0_MARK_0 <anchor 443 867> mark @POS_3_0_MARK_1;
	pos base Uogonek <anchor 290 0> mark @POS_3_0_MARK_0 <anchor 414 700> mark @POS_3_0_MARK_1;
	pos base Uring <anchor 290 0> mark @POS_3_0_MARK_0 <anchor 462 971> mark @POS_3_0_MARK_1;
	pos base Utilde <anchor 290 0> mark @POS_3_0_MARK_0 <anchor 443 868> mark @POS_3_0_MARK_1;
	pos base W <anchor 453 0> mark @POS_3_0_MARK_0 <anchor 571 700> mark @POS_3_0_MARK_1;
	pos base Wacute <anchor 453 0> mark @POS_3_0_MARK_0 <anchor 614 942> mark @POS_3_0_MARK_1;
	pos base Wcircumflex <anchor 453 0> mark @POS_3_0_MARK_0 <anchor 608 911> mark @POS_3_0_MARK_1;
	pos base Wdieresis <anchor 453 0> mark @POS_3_0_MARK_0 <anchor 609 912> mark @POS_3_0_MARK_1;
	pos base Wgrave <anchor 453 0> mark @POS_3_0_MARK_0 <anchor 614 942> mark @POS_3_0_MARK_1;
	pos base Y <anchor 251 0> mark @POS_3_0_MARK_0 <anchor 375 700> mark @POS_3_0_MARK_1;
	pos base Yacute <anchor 251 0> mark @POS_3_0_MARK_0 <anchor 418 942> mark @POS_3_0_MARK_1;
	pos base Ycircumflex <anchor 251 0> mark @POS_3_0_MARK_0 <anchor 412 911> mark @POS_3_0_MARK_1;
	pos base Ydieresis <anchor 251 0> mark @POS_3_0_MARK_0 <anchor 413 912> mark @POS_3_0_MARK_1;
	pos base Ygrave <anchor 251 0> mark @POS_3_0_MARK_0 <anchor 418 942> mark @POS_3_0_MARK_1;
	pos base uni1EF8 <anchor 251 0> mark @POS_3_0_MARK_0 <anchor 405 868> mark @POS_3_0_MARK_1;
	pos base Z <anchor 227 0> mark @POS_3_0_MARK_0 <anchor 351 700> mark @POS_3_0_MARK_1;
	pos base Zacute <anchor 227 0> mark @POS_3_0_MARK_0 <anchor 394 942> mark @POS_3_0_MARK_1;
	pos base Zcaron <anchor 227 0> mark @POS_3_0_MARK_0 <anchor 387 910> mark @POS_3_0_MARK_1;
	pos base Zdotaccent <anchor 227 0> mark @POS_3_0_MARK_0 <anchor 388 912> mark @POS_3_0_MARK_1;
	pos base a <anchor 234 0> mark @POS_3_0_MARK_0 <anchor 322 496> mark @POS_3_0_MARK_1;
	pos base aacute <anchor 234 0> mark @POS_3_0_MARK_0 <anchor 367 749> mark @POS_3_0_MARK_1;
	pos base abreve <anchor 234 0> mark @POS_3_0_MARK_0 <anchor 362 722> mark @POS_3_0_MARK_1;
	pos base uni01CE <anchor 234 0> mark @POS_3_0_MARK_0 <anchor 363 730> mark @POS_3_0_MARK_1;
	pos base acircumflex <anchor 234 0> mark @POS_3_0_MARK_0 <anchor 363 730> mark @POS_3_0_MARK_1;
	pos base adieresis <anchor 234 0> mark @POS_3_0_MARK_0 <anchor 362 723> mark @POS_3_0_MARK_1;
	pos base agrave <anchor 234 0> mark @POS_3_0_MARK_0 <anchor 367 749> mark @POS_3_0_MARK_1;
	pos base amacron <anchor 234 0> mark @POS_3_0_MARK_0 <anchor 350 693> mark @POS_3_0_MARK_1;
	pos base aogonek <anchor 234 0> mark @POS_3_0_MARK_0 <anchor 322 496> mark @POS_3_0_MARK_1;
	pos base aring <anchor 234 0> mark @POS_3_0_MARK_0 <anchor 370 766> mark @POS_3_0_MARK_1;
	pos base atilde <anchor 234 0> mark @POS_3_0_MARK_0 <anchor 359 705> mark @POS_3_0_MARK_1;
	pos base ae <anchor 415 0> mark @POS_3_0_MARK_0 <anchor 503 496> mark @POS_3_0_MARK_1;
	pos base aeacute <anchor 415 0> mark @POS_3_0_MARK_0 <anchor 548 749> mark @POS_3_0_MARK_1;
	pos base c <anchor 238 0> mark @POS_3_0_MARK_0 <anchor 326 496> mark @POS_3_0_MARK_1;
	pos base cacute <anchor 238 0> mark @POS_3_0_MARK_0 <anchor 371 749> mark @POS_3_0_MARK_1;
	pos base ccaron <anchor 238 0> mark @POS_3_0_MARK_0 <anchor 367 730> mark @POS_3_0_MARK_1;
	pos base ccedilla <anchor 192 -261> mark @POS_3_0_MARK_0 <anchor 326 496> mark @POS_3_0_MARK_1;
	pos base cdotaccent <anchor 238 0> mark @POS_3_0_MARK_0 <anchor 366 723> mark @POS_3_0_MARK_1;
	pos base d <anchor 262 0> mark @POS_3_0_MARK_0 <anchor 437 992> mark @POS_3_0_MARK_1;
	pos base dcaron <anchor 262 0> mark @POS_3_0_MARK_0 <anchor 437 992> mark @POS_3_0_MARK_1;
	pos base e <anchor 237 0> mark @POS_3_0_MARK_0 <anchor 325 496> mark @POS_3_0_MARK_1;
	pos base eacute <anchor 237 0> mark @POS_3_0_MARK_0 <anchor 370 749> mark @POS_3_0_MARK_1;
	pos base ebreve <anchor 237 0> mark @POS_3_0_MARK_0 <anchor 365 722> mark @POS_3_0_MARK_1;
	pos base ecaron <anchor 237 0> mark @POS_3_0_MARK_0 <anchor 366 730> mark @POS_3_0_MARK_1;
	pos base ecircumflex <anchor 237 0> mark @POS_3_0_MARK_0 <anchor 366 730> mark @POS_3_0_MARK_1;
	pos base edieresis <anchor 237 0> mark @POS_3_0_MARK_0 <anchor 365 723> mark @POS_3_0_MARK_1;
	pos base edotaccent <anchor 237 0> mark @POS_3_0_MARK_0 <anchor 365 723> mark @POS_3_0_MARK_1;
	pos base egrave <anchor 237 0> mark @POS_3_0_MARK_0 <anchor 370 749> mark @POS_3_0_MARK_1;
	pos base emacron <anchor 237 0> mark @POS_3_0_MARK_0 <anchor 353 693> mark @POS_3_0_MARK_1;
	pos base eogonek <anchor 237 0> mark @POS_3_0_MARK_0 <anchor 325 496> mark @POS_3_0_MARK_1;
	pos base uni1EBD <anchor 237 0> mark @POS_3_0_MARK_0 <anchor 362 705> mark @POS_3_0_MARK_1;
	pos base g <anchor 159 -310> mark @POS_3_0_MARK_0 <anchor 292 496> mark @POS_3_0_MARK_1;
	pos base gbreve <anchor 159 -310> mark @POS_3_0_MARK_0 <anchor 332 722> mark @POS_3_0_MARK_1;
	pos base uni0123 <anchor 159 -310> mark @POS_3_0_MARK_0 <anchor 347 804> mark @POS_3_0_MARK_1;
	pos base gdotaccent <anchor 159 -310> mark @POS_3_0_MARK_0 <anchor 332 723> mark @POS_3_0_MARK_1;
	pos base i <anchor 74 0> mark @POS_3_0_MARK_0;
	pos base dotlessi <anchor 67 0> mark @POS_3_0_MARK_0 <anchor 154 496> mark @POS_3_0_MARK_1;
	pos base iacute <anchor 67 0> mark @POS_3_0_MARK_0 <anchor 199 749> mark @POS_3_0_MARK_1;
	pos base ibreve <anchor 67 0> mark @POS_3_0_MARK_0 <anchor 194 722> mark @POS_3_0_MARK_1;
	pos base icircumflex <anchor 67 0> mark @POS_3_0_MARK_0 <anchor 195 730> mark @POS_3_0_MARK_1;
	pos base idieresis <anchor 67 0> mark @POS_3_0_MARK_0 <anchor 194 723> mark @POS_3_0_MARK_1;
	pos base i.loclTRK <anchor 67 0> mark @POS_3_0_MARK_0 <anchor 194 723> mark @POS_3_0_MARK_1;
	pos base igrave <anchor 67 0> mark @POS_3_0_MARK_0 <anchor 199 749> mark @POS_3_0_MARK_1;
	pos base imacron <anchor 67 0> mark @POS_3_0_MARK_0 <anchor 182 693> mark @POS_3_0_MARK_1;
	pos base iogonek <anchor 67 0> mark @POS_3_0_MARK_0 <anchor 194 723> mark @POS_3_0_MARK_1;
	pos base itilde <anchor 67 0> mark @POS_3_0_MARK_0 <anchor 191 705> mark @POS_3_0_MARK_1;
	pos base ij <anchor 74 0> mark @POS_3_0_MARK_0;
	pos base uni0237 <anchor 20 -310> mark @POS_3_0_MARK_0 <anchor 162 496> mark @POS_3_0_MARK_1;
	pos base uni006A0301 <anchor 20 -310> mark @POS_3_0_MARK_0 <anchor 207 749> mark @POS_3_0_MARK_1;
	pos base k <anchor 211 0> mark @POS_3_0_MARK_0 <anchor 386 992> mark @POS_3_0_MARK_1;
	pos base uni0137 <anchor 166 -256> mark @POS_3_0_MARK_0 <anchor 386 992> mark @POS_3_0_MARK_1;
	pos base l <anchor 67 0> mark @POS_3_0_MARK_0 <anchor 190 700> mark @POS_3_0_MARK_1;
	pos base lacute <anchor 67 0> mark @POS_3_0_MARK_0 <anchor 233 942> mark @POS_3_0_MARK_1;
	pos base lcaron <anchor 67 0> mark @POS_3_0_MARK_0 <anchor 190 700> mark @POS_3_0_MARK_1;
	pos base uni013C <anchor 22 -256> mark @POS_3_0_MARK_0 <anchor 190 700> mark @POS_3_0_MARK_1;
	pos base n <anchor 242 0> mark @POS_3_0_MARK_0 <anchor 330 496> mark @POS_3_0_MARK_1;
	pos base nacute <anchor 242 0> mark @POS_3_0_MARK_0 <anchor 375 749> mark @POS_3_0_MARK_1;
	pos base ncaron <anchor 242 0> mark @POS_3_0_MARK_0 <anchor 371 730> mark @POS_3_0_MARK_1;
	pos base uni0146 <anchor 197 -256> mark @POS_3_0_MARK_0 <anchor 330 496> mark @POS_3_0_MARK_1;
	pos base ntilde <anchor 242 0> mark @POS_3_0_MARK_0 <anchor 367 705> mark @POS_3_0_MARK_1;
	pos base eng <anchor 242 0> mark @POS_3_0_MARK_0 <anchor 330 496> mark @POS_3_0_MARK_1;
	pos base o <anchor 249 0> mark @POS_3_0_MARK_0 <anchor 337 496> mark @POS_3_0_MARK_1;
	pos base oacute <anchor 249 0> mark @POS_3_0_MARK_0 <anchor 382 749> mark @POS_3_0_MARK_1;
	pos base obreve <anchor 249 0> mark @POS_3_0_MARK_0 <anchor 377 722> mark @POS_3_0_MARK_1;
	pos base ocircumflex <anchor 249 0> mark @POS_3_0_MARK_0 <anchor 378 730> mark @POS_3_0_MARK_1;
	pos base odieresis <anchor 249 0> mark @POS_3_0_MARK_0 <anchor 377 723> mark @POS_3_0_MARK_1;
	pos base ograve <anchor 249 0> mark @POS_3_0_MARK_0 <anchor 382 749> mark @POS_3_0_MARK_1;
	pos base ohungarumlaut <anchor 249 0> mark @POS_3_0_MARK_0 <anchor 374 711> mark @POS_3_0_MARK_1;
	pos base omacron <anchor 249 0> mark @POS_3_0_MARK_0 <anchor 364 693> mark @POS_3_0_MARK_1;
	pos base otilde <anchor 249 0> mark @POS_3_0_MARK_0 <anchor 374 705> mark @POS_3_0_MARK_1;
	pos base oe <anchor 442 0> mark @POS_3_0_MARK_0 <anchor 530 496> mark @POS_3_0_MARK_1;
	pos base r <anchor 73 0> mark @POS_3_0_MARK_0 <anchor 228 496> mark @POS_3_0_MARK_1;
	pos base racute <anchor 73 0> mark @POS_3_0_MARK_0 <anchor 273 749> mark @POS_3_0_MARK_1;
	pos base rcaron <anchor 73 0> mark @POS_3_0_MARK_0 <anchor 269 730> mark @POS_3_0_MARK_1;
	pos base uni0157 <anchor 28 -256> mark @POS_3_0_MARK_0 <anchor 228 496> mark @POS_3_0_MARK_1;
	pos base s <anchor 211 0> mark @POS_3_0_MARK_0 <anchor 299 496> mark @POS_3_0_MARK_1;
	pos base sacute <anchor 211 0> mark @POS_3_0_MARK_0 <anchor 344 749> mark @POS_3_0_MARK_1;
	pos base scaron <anchor 211 0> mark @POS_3_0_MARK_0 <anchor 340 730> mark @POS_3_0_MARK_1;
	pos base scedilla <anchor 165 -261> mark @POS_3_0_MARK_0 <anchor 299 496> mark @POS_3_0_MARK_1;
	pos base uni0219 <anchor 166 -256> mark @POS_3_0_MARK_0 <anchor 299 496> mark @POS_3_0_MARK_1;
	pos base t <anchor 170 0> mark @POS_3_0_MARK_0 <anchor 230 496> mark @POS_3_0_MARK_1;
	pos base tcaron <anchor 170 0> mark @POS_3_0_MARK_0 <anchor 230 496> mark @POS_3_0_MARK_1;
	pos base uni0163 <anchor 124 -261> mark @POS_3_0_MARK_0 <anchor 230 496> mark @POS_3_0_MARK_1;
	pos base uni021B <anchor 125 -256> mark @POS_3_0_MARK_0 <anchor 230 496> mark @POS_3_0_MARK_1;
	pos base u <anchor 242 0> mark @POS_3_0_MARK_0 <anchor 330 496> mark @POS_3_0_MARK_1;
	pos base uacute <anchor 242 0> mark @POS_3_0_MARK_0 <anchor 375 749> mark @POS_3_0_MARK_1;
	pos base ubreve <anchor 242 0> mark @POS_3_0_MARK_0 <anchor 370 722> mark @POS_3_0_MARK_1;
	pos base ucircumflex <anchor 242 0> mark @POS_3_0_MARK_0 <anchor 371 730> mark @POS_3_0_MARK_1;
	pos base udieresis <anchor 242 0> mark @POS_3_0_MARK_0 <anchor 370 723> mark @POS_3_0_MARK_1;
	pos base ugrave <anchor 242 0> mark @POS_3_0_MARK_0 <anchor 375 749> mark @POS_3_0_MARK_1;
	pos base uhungarumlaut <anchor 242 0> mark @POS_3_0_MARK_0 <anchor 368 711> mark @POS_3_0_MARK_1;
	pos base umacron <anchor 242 0> mark @POS_3_0_MARK_0 <anchor 358 693> mark @POS_3_0_MARK_1;
	pos base uogonek <anchor 242 0> mark @POS_3_0_MARK_0 <anchor 330 496> mark @POS_3_0_MARK_1;
	pos base uring <anchor 242 0> mark @POS_3_0_MARK_0 <anchor 378 766> mark @POS_3_0_MARK_1;
	pos base utilde <anchor 242 0> mark @POS_3_0_MARK_0 <anchor 367 705> mark @POS_3_0_MARK_1;
	pos base w <anchor 334 0> mark @POS_3_0_MARK_0 <anchor 422 496> mark @POS_3_0_MARK_1;
	pos base wacute <anchor 334 0> mark @POS_3_0_MARK_0 <anchor 467 749> mark @POS_3_0_MARK_1;
	pos base wcircumflex <anchor 334 0> mark @POS_3_0_MARK_0 <anchor 463 730> mark @POS_3_0_MARK_1;
	pos base wdieresis <anchor 334 0> mark @POS_3_0_MARK_0 <anchor 462 723> mark @POS_3_0_MARK_1;
	pos base wgrave <anchor 334 0> mark @POS_3_0_MARK_0 <anchor 467 749> mark @POS_3_0_MARK_1;
	pos base y <anchor 233 0> mark @POS_3_0_MARK_0 <anchor 321 496> mark @POS_3_0_MARK_1;
	pos base yacute <anchor 233 0> mark @POS_3_0_MARK_0 <anchor 366 749> mark @POS_3_0_MARK_1;
	pos base ycircumflex <anchor 233 0> mark @POS_3_0_MARK_0 <anchor 362 730> mark @POS_3_0_MARK_1;
	pos base ydieresis <anchor 233 0> mark @POS_3_0_MARK_0 <anchor 361 723> mark @POS_3_0_MARK_1;
	pos base ygrave <anchor 233 0> mark @POS_3_0_MARK_0 <anchor 366 749> mark @POS_3_0_MARK_1;
	pos base uni1EF9 <anchor 233 0> mark @POS_3_0_MARK_0 <anchor 358 705> mark @POS_3_0_MARK_1;
	pos base z <anchor 190 0> mark @POS_3_0_MARK_0 <anchor 278 496> mark @POS_3_0_MARK_1;
	pos base zacute <anchor 190 0> mark @POS_3_0_MARK_0 <anchor 323 749> mark @POS_3_0_MARK_1;
	pos base zcaron <anchor 190 0> mark @POS_3_0_MARK_0 <anchor 319 730> mark @POS_3_0_MARK_1;
	pos base zdotaccent <anchor 190 0> mark @POS_3_0_MARK_0 <anchor 318 723> mark @POS_3_0_MARK_1;
} POS_3;
lookup POS_4 {
	markClass uni0328 <anchor 159 0> @POS_4_0_MARK_0;
	markClass uni0328.case <anchor 159 0> @POS_4_0_MARK_0;
	pos base A <anchor 608 0> mark @POS_4_0_MARK_0;
	pos base Aacute <anchor 608 0> mark @POS_4_0_MARK_0;
	pos base Abreve <anchor 608 0> mark @POS_4_0_MARK_0;
	pos base uni01CD <anchor 608 0> mark @POS_4_0_MARK_0;
	pos base Acircumflex <anchor 608 0> mark @POS_4_0_MARK_0;
	pos base Adieresis <anchor 608 0> mark @POS_4_0_MARK_0;
	pos base Agrave <anchor 608 0> mark @POS_4_0_MARK_0;
	pos base Amacron <anchor 608 0> mark @POS_4_0_MARK_0;
	pos base Aogonek <anchor 608 0> mark @POS_4_0_MARK_0;
	pos base Aring <anchor 608 0> mark @POS_4_0_MARK_0;
	pos base Atilde <anchor 608 0> mark @POS_4_0_MARK_0;
	pos base E <anchor 444 0> mark @POS_4_0_MARK_0;
	pos base Eacute <anchor 444 0> mark @POS_4_0_MARK_0;
	pos base Ebreve <anchor 444 0> mark @POS_4_0_MARK_0;
	pos base Ecaron <anchor 444 0> mark @POS_4_0_MARK_0;
	pos base Ecircumflex <anchor 444 0> mark @POS_4_0_MARK_0;
	pos base Edieresis <anchor 444 0> mark @POS_4_0_MARK_0;
	pos base Edotaccent <anchor 444 0> mark @POS_4_0_MARK_0;
	pos base Egrave <anchor 444 0> mark @POS_4_0_MARK_0;
	pos base Emacron <anchor 444 0> mark @POS_4_0_MARK_0;
	pos base Eogonek <anchor 444 0> mark @POS_4_0_MARK_0;
	pos base uni1EBC <anchor 444 0> mark @POS_4_0_MARK_0;
	pos base I <anchor 129 0> mark @POS_4_0_MARK_0;
	pos base IJ <anchor 129 0> mark @POS_4_0_MARK_0;
	pos base Iacute <anchor 129 0> mark @POS_4_0_MARK_0;
	pos base Ibreve <anchor 129 0> mark @POS_4_0_MARK_0;
	pos base Icircumflex <anchor 129 0> mark @POS_4_0_MARK_0;
	pos base Idieresis <anchor 129 0> mark @POS_4_0_MARK_0;
	pos base Idotaccent <anchor 129 0> mark @POS_4_0_MARK_0;
	pos base Igrave <anchor 129 0> mark @POS_4_0_MARK_0;
	pos base Imacron <anchor 129 0> mark @POS_4_0_MARK_0;
	pos base Iogonek <anchor 129 0> mark @POS_4_0_MARK_0;
	pos base Itilde <anchor 129 0> mark @POS_4_0_MARK_0;
	pos base K <anchor 129 0> mark @POS_4_0_MARK_0;
	pos base uni0136 <anchor 129 0> mark @POS_4_0_MARK_0;
	pos base O <anchor 430 10> mark @POS_4_0_MARK_0;
	pos base Oacute <anchor 430 10> mark @POS_4_0_MARK_0;
	pos base Obreve <anchor 430 10> mark @POS_4_0_MARK_0;
	pos base Ocircumflex <anchor 430 10> mark @POS_4_0_MARK_0;
	pos base Odieresis <anchor 430 10> mark @POS_4_0_MARK_0;
	pos base Ograve <anchor 430 10> mark @POS_4_0_MARK_0;
	pos base Ohungarumlaut <anchor 430 10> mark @POS_4_0_MARK_0;
	pos base Omacron <anchor 430 10> mark @POS_4_0_MARK_0;
	pos base Otilde <anchor 430 10> mark @POS_4_0_MARK_0;
	pos base U <anchor 403 10> mark @POS_4_0_MARK_0;
	pos base Uacute <anchor 403 10> mark @POS_4_0_MARK_0;
	pos base Ubreve <anchor 403 10> mark @POS_4_0_MARK_0;
	pos base Ucircumflex <anchor 403 10> mark @POS_4_0_MARK_0;
	pos base Udieresis <anchor 403 10> mark @POS_4_0_MARK_0;
	pos base Ugrave <anchor 403 10> mark @POS_4_0_MARK_0;
	pos base Uhungarumlaut <anchor 403 10> mark @POS_4_0_MARK_0;
	pos base Umacron <anchor 403 10> mark @POS_4_0_MARK_0;
	pos base Uogonek <anchor 403 10> mark @POS_4_0_MARK_0;
	pos base Uring <anchor 403 10> mark @POS_4_0_MARK_0;
	pos base Utilde <anchor 403 10> mark @POS_4_0_MARK_0;
	pos base a <anchor 490 0> mark @POS_4_0_MARK_0;
	pos base aacute <anchor 490 0> mark @POS_4_0_MARK_0;
	pos base abreve <anchor 490 0> mark @POS_4_0_MARK_0;
	pos base uni01CE <anchor 490 0> mark @POS_4_0_MARK_0;
	pos base acircumflex <anchor 490 0> mark @POS_4_0_MARK_0;
	pos base adieresis <anchor 490 0> mark @POS_4_0_MARK_0;
	pos base agrave <anchor 490 0> mark @POS_4_0_MARK_0;
	pos base amacron <anchor 490 0> mark @POS_4_0_MARK_0;
	pos base aogonek <anchor 490 0> mark @POS_4_0_MARK_0;
	pos base aring <anchor 490 0> mark @POS_4_0_MARK_0;
	pos base atilde <anchor 490 0> mark @POS_4_0_MARK_0;
	pos base e <anchor 353 10> mark @POS_4_0_MARK_0;
	pos base eacute <anchor 353 10> mark @POS_4_0_MARK_0;
	pos base ebreve <anchor 353 10> mark @POS_4_0_MARK_0;
	pos base ecaron <anchor 353 10> mark @POS_4_0_MARK_0;
	pos base ecircumflex <anchor 353 10> mark @POS_4_0_MARK_0;
	pos base edieresis <anchor 353 10> mark @POS_4_0_MARK_0;
	pos base edotaccent <anchor 353 10> mark @POS_4_0_MARK_0;
	pos base egrave <anchor 353 10> mark @POS_4_0_MARK_0;
	pos base emacron <anchor 353 10> mark @POS_4_0_MARK_0;
	pos base eogonek <anchor 353 10> mark @POS_4_0_MARK_0;
	pos base uni1EBD <anchor 353 10> mark @POS_4_0_MARK_0;
	pos base dotlessi <anchor 120 0> mark @POS_4_0_MARK_0;
	pos base iacute <anchor 120 0> mark @POS_4_0_MARK_0;
	pos base ibreve <anchor 120 0> mark @POS_4_0_MARK_0;
	pos base icircumflex <anchor 120 0> mark @POS_4_0_MARK_0;
	pos base idieresis <anchor 120 0> mark @POS_4_0_MARK_0;
	pos base i.loclTRK <anchor 120 0> mark @POS_4_0_MARK_0;
	pos base igrave <anchor 120 0> mark @POS_4_0_MARK_0;
	pos base imacron <anchor 120 0> mark @POS_4_0_MARK_0;
	pos base iogonek <anchor 120 0> mark @POS_4_0_MARK_0;
	pos base itilde <anchor 120 0> mark @POS_4_0_MARK_0;
	pos base o <anchor 365 10> mark @POS_4_0_MARK_0;
	pos base oacute <anchor 365 10> mark @POS_4_0_MARK_0;
	pos base obreve <anchor 365 10> mark @POS_4_0_MARK_0;
	pos base ocircumflex <anchor 365 10> mark @POS_4_0_MARK_0;
	pos base odieresis <anchor 365 10> mark @POS_4_0_MARK_0;
	pos base ograve <anchor 365 10> mark @POS_4_0_MARK_0;
	pos base ohungarumlaut <anchor 365 10> mark @POS_4_0_MARK_0;
	pos base omacron <anchor 365 10> mark @POS_4_0_MARK_0;
	pos base otilde <anchor 365 10> mark @POS_4_0_MARK_0;
	pos base u <anchor 470 0> mark @POS_4_0_MARK_0;
	pos base uacute <anchor 470 0> mark @POS_4_0_MARK_0;
	pos base ubreve <anchor 470 0> mark @POS_4_0_MARK_0;
	pos base ucircumflex <anchor 470 0> mark @POS_4_0_MARK_0;
	pos base udieresis <anchor 470 0> mark @POS_4_0_MARK_0;
	pos base ugrave <anchor 470 0> mark @POS_4_0_MARK_0;
	pos base uhungarumlaut <anchor 470 0> mark @POS_4_0_MARK_0;
	pos base umacron <anchor 470 0> mark @POS_4_0_MARK_0;
	pos base uogonek <anchor 470 0> mark @POS_4_0_MARK_0;
	pos base uring <anchor 470 0> mark @POS_4_0_MARK_0;
	pos base utilde <anchor 470 0> mark @POS_4_0_MARK_0;
} POS_4;
lookup POS_5 {
	markClass uni030C.alt <anchor 132 992> @POS_5_0_MARK_0;
	markClass uni030C.alt.case <anchor 83 700> @POS_5_0_MARK_0;
	pos base L <anchor 340 700> mark @POS_5_0_MARK_0;
	pos base Lacute <anchor 340 700> mark @POS_5_0_MARK_0;
	pos base Lcaron <anchor 340 700> mark @POS_5_0_MARK_0;
	pos base uni013B <anchor 340 700> mark @POS_5_0_MARK_0;
	pos base O <anchor 854 700> mark @POS_5_0_MARK_0;
	pos base Oacute <anchor 854 700> mark @POS_5_0_MARK_0;
	pos base Obreve <anchor 854 700> mark @POS_5_0_MARK_0;
	pos base Ocircumflex <anchor 854 700> mark @POS_5_0_MARK_0;
	pos base Odieresis <anchor 854 700> mark @POS_5_0_MARK_0;
	pos base Ograve <anchor 854 700> mark @POS_5_0_MARK_0;
	pos base Ohungarumlaut <anchor 854 700> mark @POS_5_0_MARK_0;
	pos base Omacron <anchor 854 700> mark @POS_5_0_MARK_0;
	pos base Otilde <anchor 854 700> mark @POS_5_0_MARK_0;
	pos base U <anchor 732 700> mark @POS_5_0_MARK_0;
	pos base Uacute <anchor 732 700> mark @POS_5_0_MARK_0;
	pos base Ubreve <anchor 732 700> mark @POS_5_0_MARK_0;
	pos base Ucircumflex <anchor 732 700> mark @POS_5_0_MARK_0;
	pos base Udieresis <anchor 732 700> mark @POS_5_0_MARK_0;
	pos base Ugrave <anchor 732 700> mark @POS_5_0_MARK_0;
	pos base Uhungarumlaut <anchor 732 700> mark @POS_5_0_MARK_0;
	pos base Umacron <anchor 732 700> mark @POS_5_0_MARK_0;
	pos base Uogonek <anchor 732 700> mark @POS_5_0_MARK_0;
	pos base Uring <anchor 732 700> mark @POS_5_0_MARK_0;
	pos base Utilde <anchor 732 700> mark @POS_5_0_MARK_0;
	pos base d <anchor 728 992> mark @POS_5_0_MARK_0;
	pos base dcaron <anchor 728 992> mark @POS_5_0_MARK_0;
	pos base l <anchor 338 992> mark @POS_5_0_MARK_0;
	pos base lacute <anchor 338 992> mark @POS_5_0_MARK_0;
	pos base lcaron <anchor 338 992> mark @POS_5_0_MARK_0;
	pos base uni013C <anchor 338 992> mark @POS_5_0_MARK_0;
	pos base o <anchor 611 496> mark @POS_5_0_MARK_0;
	pos base oacute <anchor 611 496> mark @POS_5_0_MARK_0;
	pos base obreve <anchor 611 496> mark @POS_5_0_MARK_0;
	pos base ocircumflex <anchor 611 496> mark @POS_5_0_MARK_0;
	pos base odieresis <anchor 611 496> mark @POS_5_0_MARK_0;
	pos base ograve <anchor 611 496> mark @POS_5_0_MARK_0;
	pos base ohungarumlaut <anchor 611 496> mark @POS_5_0_MARK_0;
	pos base omacron <anchor 611 496> mark @POS_5_0_MARK_0;
	pos base otilde <anchor 611 496> mark @POS_5_0_MARK_0;
	pos base t <anchor 366 992> mark @POS_5_0_MARK_0;
	pos base tcaron <anchor 366 992> mark @POS_5_0_MARK_0;
	pos base uni0163 <anchor 366 992> mark @POS_5_0_MARK_0;
	pos base uni021B <anchor 366 992> mark @POS_5_0_MARK_0;
	pos base u <anchor 600 496> mark @POS_5_0_MARK_0;
	pos base uacute <anchor 600 496> mark @POS_5_0_MARK_0;
	pos base ubreve <anchor 600 496> mark @POS_5_0_MARK_0;
	pos base ucircumflex <anchor 600 496> mark @POS_5_0_MARK_0;
	pos base udieresis <anchor 600 496> mark @POS_5_0_MARK_0;
	pos base ugrave <anchor 600 496> mark @POS_5_0_MARK_0;
	pos base uhungarumlaut <anchor 600 496> mark @POS_5_0_MARK_0;
	pos base umacron <anchor 600 496> mark @POS_5_0_MARK_0;
	pos base uogonek <anchor 600 496> mark @POS_5_0_MARK_0;
	pos base uring <anchor 600 496> mark @POS_5_0_MARK_0;
	pos base utilde <anchor 600 496> mark @POS_5_0_MARK_0;
} POS_5;
script latn;
language dflt;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language AZE;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language CAT;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language CRT;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language KAZ;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language MOL;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language NLD;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language ROM;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language TAT;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language TRK;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
";
tag = mark;
},
{
code = "script DFLT;
language dflt;
lookup POS_6 {
	lookupflag UseMarkFilteringSet [uni0326 uni0327 uni0327.case];
	markClass uni0326 <anchor 12 0> @POS_6_0_MARK_0;
	markClass uni0327 <anchor 41 0> @POS_6_0_MARK_0;
	markClass uni0327.case <anchor 38 0> @POS_6_0_MARK_0;
	pos mark uni0326 <anchor -34 -256> mark @POS_6_0_MARK_0;
	pos mark uni0327 <anchor -6 -261> mark @POS_6_0_MARK_0;
	pos mark uni0327.case <anchor -9 -261> mark @POS_6_0_MARK_0;
} POS_6;
lookup POS_7 {
	lookupflag UseMarkFilteringSet [uni0308 uni0307 gravecomb acutecomb uni030B uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0312 uni0308.case uni0307.case gravecomb.case acutecomb.case uni030B.case uni0302.case uni030C.case uni0306.case uni030A.case tildecomb.case uni0304.case uni0308.narrow];
	markClass uni0308 <anchor 216 496> @POS_7_0_MARK_0;
	markClass uni0307 <anchor 116 496> @POS_7_0_MARK_0;
	markClass gravecomb <anchor 153 496> @POS_7_0_MARK_0;
	markClass acutecomb <anchor 153 496> @POS_7_0_MARK_0;
	markClass uni030B <anchor 176 496> @POS_7_0_MARK_0;
	markClass uni0302 <anchor 186 496> @POS_7_0_MARK_0;
	markClass uni030C <anchor 186 496> @POS_7_0_MARK_0;
	markClass uni0306 <anchor 193 496> @POS_7_0_MARK_0;
	markClass uni030A <anchor 156 496> @POS_7_0_MARK_0;
	markClass tildecomb <anchor 208 496> @POS_7_0_MARK_0;
	markClass uni0304 <anchor 232 496> @POS_7_0_MARK_0;
	markClass uni0312 <anchor 102 496> @POS_7_0_MARK_0;
	markClass uni0308.case <anchor 252 700> @POS_7_0_MARK_0;
	markClass uni0307.case <anchor 152 700> @POS_7_0_MARK_0;
	markClass gravecomb.case <anchor 189 700> @POS_7_0_MARK_0;
	markClass acutecomb.case <anchor 189 700> @POS_7_0_MARK_0;
	markClass uni030B.case <anchor 242 700> @POS_7_0_MARK_0;
	markClass uni0302.case <anchor 221 700> @POS_7_0_MARK_0;
	markClass uni030C.case <anchor 222 700> @POS_7_0_MARK_0;
	markClass uni0306.case <anchor 229 700> @POS_7_0_MARK_0;
	markClass uni030A.case <anchor 191 700> @POS_7_0_MARK_0;
	markClass tildecomb.case <anchor 244 700> @POS_7_0_MARK_0;
	markClass uni0304.case <anchor 261 700> @POS_7_0_MARK_0;
	markClass uni0308.narrow <anchor 226 496> @POS_7_0_MARK_0;
	pos mark uni0308 <anchor 256 723> mark @POS_7_0_MARK_0;
	pos mark uni0307 <anchor 156 723> mark @POS_7_0_MARK_0;
	pos mark gravecomb <anchor 198 749> mark @POS_7_0_MARK_0;
	pos mark acutecomb <anchor 198 749> mark @POS_7_0_MARK_0;
	pos mark uni030B <anchor 214 711> mark @POS_7_0_MARK_0;
	pos mark uni0302 <anchor 227 730> mark @POS_7_0_MARK_0;
	pos mark uni030C <anchor 227 730> mark @POS_7_0_MARK_0;
	pos mark uni0306 <anchor 233 722> mark @POS_7_0_MARK_0;
	pos mark uni030A <anchor 203 766> mark @POS_7_0_MARK_0;
	pos mark tildecomb <anchor 245 705> mark @POS_7_0_MARK_0;
	pos mark uni0304 <anchor 260 693> mark @POS_7_0_MARK_0;
	pos mark uni0312 <anchor 156 804> mark @POS_7_0_MARK_0;
	pos mark uni0308.case <anchor 289 912> mark @POS_7_0_MARK_0;
	pos mark uni0307.case <anchor 189 912> mark @POS_7_0_MARK_0;
	pos mark gravecomb.case <anchor 232 942> mark @POS_7_0_MARK_0;
	pos mark acutecomb.case <anchor 232 942> mark @POS_7_0_MARK_0;
	pos mark uni030B.case <anchor 280 915> mark @POS_7_0_MARK_0;
	pos mark uni0302.case <anchor 258 911> mark @POS_7_0_MARK_0;
	pos mark uni030C.case <anchor 259 910> mark @POS_7_0_MARK_0;
	pos mark uni0306.case <anchor 266 909> mark @POS_7_0_MARK_0;
	pos mark uni030A.case <anchor 239 971> mark @POS_7_0_MARK_0;
	pos mark tildecomb.case <anchor 273 868> mark @POS_7_0_MARK_0;
	pos mark uni0304.case <anchor 290 867> mark @POS_7_0_MARK_0;
	pos mark uni0308.narrow <anchor 266 723> mark @POS_7_0_MARK_0;
} POS_7;
script latn;
language dflt;
lookup POS_6;
lookup POS_7;
language AZE;
lookup POS_6;
lookup POS_7;
language CAT;
lookup POS_6;
lookup POS_7;
language CRT;
lookup POS_6;
lookup POS_7;
language KAZ;
lookup POS_6;
lookup POS_7;
language MOL;
lookup POS_6;
lookup POS_7;
language NLD;
lookup POS_6;
lookup POS_7;
language ROM;
lookup POS_6;
lookup POS_7;
language TAT;
lookup POS_6;
lookup POS_7;
language TRK;
lookup POS_6;
lookup POS_7;
";
tag = mkmk;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 992;
},
{
name = typoDescender;
value = -310;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 992;
},
{
name = winDescent;
value = 310;
},
{
name = hheaAscender;
value = 992;
},
{
name = hheaDescender;
value = -310;
},
{
name = strikeoutPosition;
value = 297;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
200
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 1
INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
WCVTF[ ]	/* WriteCVTInFUnits */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 6 values pushed */
0 0 42 0 4 0
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
NPUSHB[ ]	/* 10 values pushed */
55 4 47 4 31 8 21 5 4 10
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
NPUSHB[ ]	/* 10 values pushed */
59 2 51 2 39 6 26 3 4 10
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 11
WS[ ]	/* WriteStore */
PUSHW[ ]	/* 6 values pushed */
3584 3072 2048 1408 4 11
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 15
WS[ ]	/* WriteStore */
PUSHW[ ]	/* 6 values pushed */
64 64 64 64 4 11
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
36 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
40 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2048
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
39 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 3 values pushed */
2176 1 1088
GETINFO[ ]	/* GetInfo */
MUL[ ]	/* Multiply */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
57 2 49 2 33 6 23 3 4 14
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
4
SCANTYPE[ ]	/* ScanType */
PUSHB[ ]	/* 2 values pushed */
2 0
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 4 values pushed */
5 100 6 0
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */
0
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
RCVT[ ]	/* ReadCVT */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
14
LTEQ[ ]	/* LessThenOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
6
GTEQ[ ]	/* GreaterThanOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
52
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
40
EIF[ ]	/* EndIf */
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
2
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 4 values pushed */
3 20 21 0
WS[ ]	/* WriteStore */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
19
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
2 20
RS[ ]	/* ReadStore */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
37 3
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
EQ[ ]	/* Equal */
JROT[ ]	/* JumpRelativeOnTrue */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
4
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 3 values pushed */
2 2 2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
33
NEG[ ]	/* Negate */
JMPR[ ]	/* Jump */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 3 values pushed */
14 21 1
WS[ ]	/* WriteStore */
JMPR[ ]	/* Jump */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
19 1 19
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 1 2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
4
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
21
RS[ ]	/* ReadStore */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
22
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
AND[ ]	/* LogicalAnd */
PUSHB[ ]	/* 3 values pushed */
40 1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
EIF[ ]	/* EndIf */
GT[ ]	/* GreaterThan */
OR[ ]	/* LogicalOr */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
80
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
56
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
56
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
40
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
48
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
10
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
54
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
54
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
30
MPPEM[ ]	/* MeasurePixelPerEm */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 1 value pushed */
4096
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1280
DIV[ ]	/* Divide */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ABS[ ]	/* Absolute */
SUB[ ]	/* Subtract */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
22
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
5
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
7
RS[ ]	/* ReadStore */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
6
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 2 values pushed */
7 98
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
5
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
48 5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
ADD[ ]	/* Add */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
SUB[ ]	/* Subtract */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
0 2 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
7
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
9 14 0
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
11
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
12
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
13
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
36
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
14
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 4 values pushed */
13 12 0 3
RCVT[ ]	/* ReadCVT */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
15
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 2
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
100
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
16
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
15
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
15
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
MUL[ ]	/* Multiply */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
17
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
17
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
4 100
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
13
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
MPPEM[ ]	/* MeasurePixelPerEm */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
4 100
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
19
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 18
RS[ ]	/* ReadStore */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
18 18
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
17
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
15 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
16 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
16
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
0 0
SZP0[ ]	/* SetZonePointer0 */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
0
MIAP[0]	/* MoveIndirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
1 1 1
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
14
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
13
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 8 values pushed */
24 24 1 0 17 0 19 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
20
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 2 values pushed */
20 8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
139
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
24
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
25
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
26
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
27
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
28
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
29
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
30
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
31
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
43
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
6
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP1[ ]	/* DeltaExceptionP1 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
44
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
22
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP2[ ]	/* DeltaExceptionP2 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
45
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
38
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP3[ ]	/* DeltaExceptionP3 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
15
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
14
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
13
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
24 24 1 0 17 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
20 8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
139
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
33
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
34
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
35
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
36
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
38
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
39
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
40
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
41
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
42
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
46
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
24
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
46
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
47
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
49
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
15
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
49
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
SHC[1]	/* ShiftContourByLastPt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 5 values pushed */
0 0 0 0 0
WCVTP[ ]	/* WriteCVTInPixels */
MIAP[0]	/* MoveIndirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
52 1
SZP2[ ]	/* SetZonePointer2 */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
54
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55
FDEF[ ]	/* FunctionDefinition */
MDAP[0]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
56
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 0
SZPS[ ]	/* SetZonePointerS */
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
56 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
4 32 5 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
4 38 5 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
60
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
61
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
62
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
0
EQ[ ]	/* Equal */
IF[ ]	/* If */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
63
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
64
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
65
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
GT[ ]	/* GreaterThan */
ELSE[ ]	/* Else */
LT[ ]	/* LessThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
66
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
GT[ ]	/* GreaterThan */
ELSE[ ]	/* Else */
LT[ ]	/* LessThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
67
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
68
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
CALL[ ]	/* CallFunction */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
69
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
70
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
10 4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
4 32 5 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
4 38 5 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
71
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 58
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
72
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 59
CALL[ ]	/* CallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
73
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
54
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
74
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
54
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
75
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 1
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
PUSHB[ ]	/* 1 value pushed */
55
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
76
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
77
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
78
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
77
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
79
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
80
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
81
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
82
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
83
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
84
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
85
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
86
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
87
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
88
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
89
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
90
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
91
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
92
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
93
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
94
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
95
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
96
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
97
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
98
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
99
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
100
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
101
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
102
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
103
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
104
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
105
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
106
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
107
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
108
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
109
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
110
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
111
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
112
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
113
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
114
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
115
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
116
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
117
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
118
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
119
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
120
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
121
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
122
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
123
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
124
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
125
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
126
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
127
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
128
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
129
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
130
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
131
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
132
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
133
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
134
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
135
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
136
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
137
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
138
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
139
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
11 0 3
RCVT[ ]	/* ReadCVT */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6
ELSE[ ]	/* Else */
PUSHB[ ]	/* 3 values pushed */
4 2 3
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
8
NEG[ ]	/* Negate */
PUSHB[ ]	/* 1 value pushed */
3
DEPTH[ ]	/* GetDepthStack */
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    24,
    24,
    24,
    712,
    0,
    \"-220\",
    712,
    0,
    \"-220\",
    107,
    107,
    91,
    91,
    700,
    0,
    700,
    496,
    0,
    \"-220\",
    712,
    \"-12\",
    723,
    508,
    \"-12\",
    \"-220\",
    72,
    72,
    63,
    63,
    353,
    0,
    358,
    \"-5\",
    72,
    72,
    63,
    63,
    700,
    347,
    705,
    342
)";
}
);
id = m01;
metricValues = (
{
pos = 992;
},
{
pos = 700;
},
{
pos = 496;
},
{
},
{
pos = -310;
},
{
pos = 10;
}
);
name = Medium;
},
{
customParameters = (
{
name = typoAscender;
value = 992;
},
{
name = typoDescender;
value = -310;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 992;
},
{
name = winDescent;
value = 310;
},
{
name = hheaAscender;
value = 992;
},
{
name = hheaDescender;
value = -310;
},
{
name = strikeoutPosition;
value = 297;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
200
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 1
INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
WCVTF[ ]	/* WriteCVTInFUnits */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 6 values pushed */
0 0 42 0 4 0
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
NPUSHB[ ]	/* 10 values pushed */
55 4 47 4 31 8 21 5 4 10
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
NPUSHB[ ]	/* 10 values pushed */
59 2 51 2 39 6 26 3 4 10
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 11
WS[ ]	/* WriteStore */
PUSHW[ ]	/* 6 values pushed */
3584 3072 2048 1408 4 11
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 15
WS[ ]	/* WriteStore */
PUSHW[ ]	/* 6 values pushed */
64 64 64 64 4 11
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
36 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
40 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2048
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
39 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 3 values pushed */
2176 1 1088
GETINFO[ ]	/* GetInfo */
MUL[ ]	/* Multiply */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
57 2 49 2 33 6 23 3 4 14
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
4
SCANTYPE[ ]	/* ScanType */
PUSHB[ ]	/* 2 values pushed */
2 0
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 4 values pushed */
5 100 6 0
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */
0
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
RCVT[ ]	/* ReadCVT */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
14
LTEQ[ ]	/* LessThenOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
6
GTEQ[ ]	/* GreaterThanOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
52
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
40
EIF[ ]	/* EndIf */
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
2
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 4 values pushed */
3 20 21 0
WS[ ]	/* WriteStore */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
19
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
2 20
RS[ ]	/* ReadStore */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
37 3
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
EQ[ ]	/* Equal */
JROT[ ]	/* JumpRelativeOnTrue */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
4
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 3 values pushed */
2 2 2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
33
NEG[ ]	/* Negate */
JMPR[ ]	/* Jump */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 3 values pushed */
14 21 1
WS[ ]	/* WriteStore */
JMPR[ ]	/* Jump */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
19 1 19
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 1 2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
4
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
21
RS[ ]	/* ReadStore */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
22
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
AND[ ]	/* LogicalAnd */
PUSHB[ ]	/* 3 values pushed */
40 1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
EIF[ ]	/* EndIf */
GT[ ]	/* GreaterThan */
OR[ ]	/* LogicalOr */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
80
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
56
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
56
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
40
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
48
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
10
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
54
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
54
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
30
MPPEM[ ]	/* MeasurePixelPerEm */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 1 value pushed */
4096
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1280
DIV[ ]	/* Divide */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ABS[ ]	/* Absolute */
SUB[ ]	/* Subtract */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
22
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
5
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
7
RS[ ]	/* ReadStore */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
6
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 2 values pushed */
7 98
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
5
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
48 5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
ADD[ ]	/* Add */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
SUB[ ]	/* Subtract */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
0 2 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
7
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
9 14 0
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
11
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
12
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
13
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
36
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
14
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 4 values pushed */
13 12 0 3
RCVT[ ]	/* ReadCVT */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
15
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 2
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
100
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
16
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
15
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
15
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
MUL[ ]	/* Multiply */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
17
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
17
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
4 100
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
13
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
MPPEM[ ]	/* MeasurePixelPerEm */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
4 100
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
19
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 18
RS[ ]	/* ReadStore */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
18 18
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
17
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
15 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
16 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
16
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
0 0
SZP0[ ]	/* SetZonePointer0 */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
0
MIAP[0]	/* MoveIndirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
1 1 1
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
14
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
13
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 8 values pushed */
24 24 1 0 17 0 19 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
20
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 2 values pushed */
20 8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
139
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
24
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
25
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
26
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
27
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
28
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
29
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
30
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
31
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
43
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
6
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP1[ ]	/* DeltaExceptionP1 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
44
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
22
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP2[ ]	/* DeltaExceptionP2 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
45
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
38
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP3[ ]	/* DeltaExceptionP3 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
15
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
14
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
13
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
24 24 1 0 17 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
20 8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
139
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
33
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
34
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
35
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
36
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
38
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
39
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
40
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
41
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
42
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
46
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
24
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
46
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
47
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
49
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
15
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
49
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
SHC[1]	/* ShiftContourByLastPt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 5 values pushed */
0 0 0 0 0
WCVTP[ ]	/* WriteCVTInPixels */
MIAP[0]	/* MoveIndirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
52 1
SZP2[ ]	/* SetZonePointer2 */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
54
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55
FDEF[ ]	/* FunctionDefinition */
MDAP[0]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
56
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 0
SZPS[ ]	/* SetZonePointerS */
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
56 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
4 32 5 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
4 38 5 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
60
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
61
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
62
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
0
EQ[ ]	/* Equal */
IF[ ]	/* If */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
63
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
64
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
65
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
GT[ ]	/* GreaterThan */
ELSE[ ]	/* Else */
LT[ ]	/* LessThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
66
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
GT[ ]	/* GreaterThan */
ELSE[ ]	/* Else */
LT[ ]	/* LessThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
67
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
68
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
CALL[ ]	/* CallFunction */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
69
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
70
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
10 4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
4 32 5 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
4 38 5 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
71
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 58
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
72
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 59
CALL[ ]	/* CallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
73
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
54
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
74
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
54
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
75
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 1
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
PUSHB[ ]	/* 1 value pushed */
55
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
76
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
77
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
78
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
77
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
79
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
80
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
81
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
82
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
83
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
84
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
85
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
86
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
87
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
88
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
89
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
90
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
91
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
92
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
93
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
94
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
95
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
96
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
97
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
98
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
99
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
100
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
101
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
102
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
103
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
104
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
105
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
106
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
107
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
108
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
109
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
110
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
111
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
112
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
113
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
114
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
115
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
116
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
117
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
118
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
119
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
120
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
121
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
122
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
123
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
124
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
125
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
126
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
127
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
128
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
129
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
130
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
131
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
132
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
133
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
134
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
135
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
136
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
137
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
138
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
139
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
11 0 3
RCVT[ ]	/* ReadCVT */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6
ELSE[ ]	/* Else */
PUSHB[ ]	/* 3 values pushed */
4 2 3
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
8
NEG[ ]	/* Negate */
PUSHB[ ]	/* 1 value pushed */
3
DEPTH[ ]	/* GetDepthStack */
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    24,
    24,
    24,
    712,
    0,
    \"-220\",
    712,
    0,
    \"-220\",
    87,
    87,
    72,
    72,
    700,
    0,
    700,
    496,
    0,
    \"-220\",
    712,
    \"-12\",
    720,
    508,
    \"-12\",
    \"-220\",
    66,
    66,
    57,
    57,
    353,
    0,
    358,
    \"-5\",
    66,
    66,
    57,
    57,
    700,
    347,
    705,
    342
)";
}
);
id = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
metricValues = (
{
pos = 992;
},
{
pos = 700;
},
{
pos = 496;
},
{
},
{
pos = -310;
},
{
pos = 10;
}
);
name = Italic;
},
{
customParameters = (
{
name = typoAscender;
value = 992;
},
{
name = typoDescender;
value = -310;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 992;
},
{
name = winDescent;
value = 310;
},
{
name = hheaAscender;
value = 992;
},
{
name = hheaDescender;
value = -310;
},
{
name = strikeoutPosition;
value = 297;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
200
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 1
INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
WCVTF[ ]	/* WriteCVTInFUnits */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 6 values pushed */
0 0 42 0 4 0
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
NPUSHB[ ]	/* 10 values pushed */
55 4 47 4 31 8 21 5 4 10
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
NPUSHB[ ]	/* 10 values pushed */
59 2 51 2 39 6 26 3 4 10
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 11
WS[ ]	/* WriteStore */
PUSHW[ ]	/* 6 values pushed */
3584 3072 2048 1408 4 11
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 15
WS[ ]	/* WriteStore */
PUSHW[ ]	/* 6 values pushed */
64 64 64 64 4 11
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
36 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
40 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2048
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
39 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 3 values pushed */
2176 1 1088
GETINFO[ ]	/* GetInfo */
MUL[ ]	/* Multiply */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
57 2 49 2 33 6 23 3 4 14
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
4
SCANTYPE[ ]	/* ScanType */
PUSHB[ ]	/* 2 values pushed */
2 0
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 4 values pushed */
5 100 6 0
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */
0
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
RCVT[ ]	/* ReadCVT */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
14
LTEQ[ ]	/* LessThenOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
6
GTEQ[ ]	/* GreaterThanOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
52
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
40
EIF[ ]	/* EndIf */
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
2
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 4 values pushed */
3 20 21 0
WS[ ]	/* WriteStore */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
19
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
2 20
RS[ ]	/* ReadStore */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
37 3
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
EQ[ ]	/* Equal */
JROT[ ]	/* JumpRelativeOnTrue */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
4
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 3 values pushed */
2 2 2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
33
NEG[ ]	/* Negate */
JMPR[ ]	/* Jump */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 3 values pushed */
14 21 1
WS[ ]	/* WriteStore */
JMPR[ ]	/* Jump */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
19 1 19
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 1 2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
4
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
21
RS[ ]	/* ReadStore */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
22
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
AND[ ]	/* LogicalAnd */
PUSHB[ ]	/* 3 values pushed */
40 1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
EIF[ ]	/* EndIf */
GT[ ]	/* GreaterThan */
OR[ ]	/* LogicalOr */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
80
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
56
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
56
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
40
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
48
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
10
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
54
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
54
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
30
MPPEM[ ]	/* MeasurePixelPerEm */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 1 value pushed */
4096
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1280
DIV[ ]	/* Divide */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ABS[ ]	/* Absolute */
SUB[ ]	/* Subtract */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
22
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
5
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
7
RS[ ]	/* ReadStore */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
6
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 2 values pushed */
7 98
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
5
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
48 5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
ADD[ ]	/* Add */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
SUB[ ]	/* Subtract */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
0 2 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
7
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
9 14 0
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
11
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
12
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
13
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
36
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
14
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 4 values pushed */
13 12 0 3
RCVT[ ]	/* ReadCVT */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
15
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 2
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
100
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
16
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
15
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
15
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
MUL[ ]	/* Multiply */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
17
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
17
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
4 100
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
13
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
MPPEM[ ]	/* MeasurePixelPerEm */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
4 100
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
19
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 18
RS[ ]	/* ReadStore */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
18 18
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
17
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
15 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
16 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
16
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
0 0
SZP0[ ]	/* SetZonePointer0 */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
0
MIAP[0]	/* MoveIndirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
1 1 1
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
14
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
13
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 8 values pushed */
24 24 1 0 17 0 19 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
20
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 2 values pushed */
20 8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
139
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
24
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
25
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
26
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
27
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
28
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
29
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
30
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
31
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
43
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
6
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP1[ ]	/* DeltaExceptionP1 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
44
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
22
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP2[ ]	/* DeltaExceptionP2 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
45
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
38
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP3[ ]	/* DeltaExceptionP3 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
15
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
14
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
13
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
24 24 1 0 17 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
20 8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
139
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
33
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
34
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
35
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
36
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
38
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
39
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
40
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
41
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
42
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
46
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
24
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
46
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
47
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
49
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
15
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
49
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
SHC[1]	/* ShiftContourByLastPt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 5 values pushed */
0 0 0 0 0
WCVTP[ ]	/* WriteCVTInPixels */
MIAP[0]	/* MoveIndirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
52 1
SZP2[ ]	/* SetZonePointer2 */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
54
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55
FDEF[ ]	/* FunctionDefinition */
MDAP[0]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
56
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 0
SZPS[ ]	/* SetZonePointerS */
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
56 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
4 32 5 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
4 38 5 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
60
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
61
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
62
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
0
EQ[ ]	/* Equal */
IF[ ]	/* If */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
63
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
64
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
65
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
GT[ ]	/* GreaterThan */
ELSE[ ]	/* Else */
LT[ ]	/* LessThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
66
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
GT[ ]	/* GreaterThan */
ELSE[ ]	/* Else */
LT[ ]	/* LessThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
67
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
68
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
CALL[ ]	/* CallFunction */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
69
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
70
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
10 4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
4 32 5 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
4 38 5 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
71
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 58
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
72
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 59
CALL[ ]	/* CallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
73
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
54
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
74
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
54
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
75
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 1
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
PUSHB[ ]	/* 1 value pushed */
55
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
76
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
77
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
78
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
77
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
79
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
80
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
81
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
82
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
83
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
84
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
85
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
86
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
87
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
88
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
89
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
90
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
91
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
92
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
93
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
94
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
95
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
96
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
97
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
98
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
99
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
100
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
101
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
102
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
103
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
104
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
105
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
106
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
107
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
108
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
109
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
110
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
111
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
112
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
113
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
114
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
115
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
116
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
117
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
118
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
119
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
120
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
121
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
122
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
123
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
124
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
125
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
126
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
127
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
128
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
129
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
130
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
131
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
132
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
133
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
134
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
135
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
136
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
137
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
138
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
139
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
11 0 3
RCVT[ ]	/* ReadCVT */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6
ELSE[ ]	/* Else */
PUSHB[ ]	/* 3 values pushed */
4 2 3
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
8
NEG[ ]	/* Negate */
PUSHB[ ]	/* 1 value pushed */
3
DEPTH[ ]	/* GetDepthStack */
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    24,
    24,
    24,
    712,
    0,
    \"-220\",
    712,
    0,
    \"-220\",
    114,
    114,
    98,
    98,
    700,
    0,
    700,
    496,
    0,
    \"-220\",
    712,
    \"-12\",
    724,
    508,
    \"-12\",
    \"-220\",
    74,
    74,
    66,
    66,
    353,
    0,
    358,
    \"-5\",
    74,
    74,
    66,
    66,
    700,
    347,
    705,
    342
)";
}
);
iconName = SemiBold;
id = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
metricValues = (
{
pos = 992;
},
{
pos = 700;
},
{
pos = 496;
},
{
},
{
pos = -310;
},
{
pos = 10;
}
);
name = SemiBold;
},
{
customParameters = (
{
name = typoAscender;
value = 992;
},
{
name = typoDescender;
value = -310;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 992;
},
{
name = winDescent;
value = 310;
},
{
name = hheaAscender;
value = 992;
},
{
name = hheaDescender;
value = -310;
},
{
name = strikeoutPosition;
value = 297;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
200
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 1
INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
WCVTF[ ]	/* WriteCVTInFUnits */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 6 values pushed */
0 0 42 0 4 0
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
NPUSHB[ ]	/* 10 values pushed */
55 4 47 4 31 8 21 5 4 10
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
NPUSHB[ ]	/* 10 values pushed */
59 2 51 2 39 6 26 3 4 10
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 11
WS[ ]	/* WriteStore */
PUSHW[ ]	/* 6 values pushed */
3584 3072 2048 1408 4 11
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 15
WS[ ]	/* WriteStore */
PUSHW[ ]	/* 6 values pushed */
64 64 64 64 4 11
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
36 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
40 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2048
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
39 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 3 values pushed */
2176 1 1088
GETINFO[ ]	/* GetInfo */
MUL[ ]	/* Multiply */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
57 2 49 2 33 6 23 3 4 14
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
4
SCANTYPE[ ]	/* ScanType */
PUSHB[ ]	/* 2 values pushed */
2 0
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 4 values pushed */
5 100 6 0
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */
0
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
RCVT[ ]	/* ReadCVT */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
14
LTEQ[ ]	/* LessThenOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
6
GTEQ[ ]	/* GreaterThanOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
52
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
40
EIF[ ]	/* EndIf */
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
2
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 4 values pushed */
3 20 21 0
WS[ ]	/* WriteStore */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
19
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
2 20
RS[ ]	/* ReadStore */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
37 3
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
EQ[ ]	/* Equal */
JROT[ ]	/* JumpRelativeOnTrue */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
4
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 3 values pushed */
2 2 2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
33
NEG[ ]	/* Negate */
JMPR[ ]	/* Jump */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 3 values pushed */
14 21 1
WS[ ]	/* WriteStore */
JMPR[ ]	/* Jump */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
19 1 19
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 1 2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
4
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
21
RS[ ]	/* ReadStore */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
22
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
AND[ ]	/* LogicalAnd */
PUSHB[ ]	/* 3 values pushed */
40 1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
EIF[ ]	/* EndIf */
GT[ ]	/* GreaterThan */
OR[ ]	/* LogicalOr */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
80
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
56
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
56
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
40
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
48
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
10
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
54
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
54
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
30
MPPEM[ ]	/* MeasurePixelPerEm */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 1 value pushed */
4096
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1280
DIV[ ]	/* Divide */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ABS[ ]	/* Absolute */
SUB[ ]	/* Subtract */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
22
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
5
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
7
RS[ ]	/* ReadStore */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
6
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 2 values pushed */
7 98
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
5
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
48 5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
ADD[ ]	/* Add */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
SUB[ ]	/* Subtract */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
0 2 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
7
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
9 14 0
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
11
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
12
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
13
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
36
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
14
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 4 values pushed */
13 12 0 3
RCVT[ ]	/* ReadCVT */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
15
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 2
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
100
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
16
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
15
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
15
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
MUL[ ]	/* Multiply */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
17
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
17
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
4 100
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
13
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
MPPEM[ ]	/* MeasurePixelPerEm */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
4 100
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
19
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 18
RS[ ]	/* ReadStore */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
18 18
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
17
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
15 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
16 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
16
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
0 0
SZP0[ ]	/* SetZonePointer0 */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
0
MIAP[0]	/* MoveIndirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
1 1 1
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
14
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
13
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 8 values pushed */
24 24 1 0 17 0 19 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
20
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 2 values pushed */
20 8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
139
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
24
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
25
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
26
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
27
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
28
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
29
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
30
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
31
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
43
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
6
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP1[ ]	/* DeltaExceptionP1 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
44
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
22
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP2[ ]	/* DeltaExceptionP2 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
45
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
38
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP3[ ]	/* DeltaExceptionP3 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
15
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
14
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
13
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
24 24 1 0 17 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
20 8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
139
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
33
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
34
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
35
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
36
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
38
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
39
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
40
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
41
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
42
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
46
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
24
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
46
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
47
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
49
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
15
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
49
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
SHC[1]	/* ShiftContourByLastPt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 5 values pushed */
0 0 0 0 0
WCVTP[ ]	/* WriteCVTInPixels */
MIAP[0]	/* MoveIndirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
52 1
SZP2[ ]	/* SetZonePointer2 */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
54
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55
FDEF[ ]	/* FunctionDefinition */
MDAP[0]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
56
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 0
SZPS[ ]	/* SetZonePointerS */
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
56 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
4 32 5 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
4 38 5 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
60
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
61
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
62
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
0
EQ[ ]	/* Equal */
IF[ ]	/* If */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
63
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
64
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
65
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
GT[ ]	/* GreaterThan */
ELSE[ ]	/* Else */
LT[ ]	/* LessThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
66
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
GT[ ]	/* GreaterThan */
ELSE[ ]	/* Else */
LT[ ]	/* LessThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
67
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
68
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
CALL[ ]	/* CallFunction */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
69
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
70
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
10 4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
4 32 5 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
4 38 5 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
71
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 58
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
72
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 59
CALL[ ]	/* CallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
73
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
54
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
74
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
54
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
75
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 1
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
PUSHB[ ]	/* 1 value pushed */
55
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
76
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
77
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
78
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
77
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
79
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
80
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
81
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
82
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
83
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
84
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
85
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
86
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
87
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
88
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
89
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
90
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
91
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
92
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
93
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
94
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
95
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
96
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
97
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
98
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
99
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
100
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
101
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
102
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
103
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
104
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
105
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
106
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
107
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
108
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
109
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
110
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
111
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
112
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
113
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
114
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
115
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
116
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
117
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
118
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
119
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
120
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
121
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
122
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
123
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
124
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
125
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
126
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
127
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
128
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
129
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
130
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
131
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
132
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
133
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
134
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
135
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
136
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
137
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
138
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
139
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
11 0 3
RCVT[ ]	/* ReadCVT */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6
ELSE[ ]	/* Else */
PUSHB[ ]	/* 3 values pushed */
4 2 3
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
8
NEG[ ]	/* Negate */
PUSHB[ ]	/* 1 value pushed */
3
DEPTH[ ]	/* GetDepthStack */
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    24,
    24,
    24,
    712,
    0,
    \"-220\",
    712,
    0,
    \"-220\",
    127,
    127,
    111,
    111,
    700,
    0,
    700,
    496,
    0,
    \"-220\",
    712,
    \"-12\",
    726,
    508,
    \"-12\",
    \"-220\",
    78,
    78,
    70,
    70,
    353,
    0,
    358,
    \"-5\",
    78,
    78,
    70,
    70,
    700,
    347,
    705,
    342
)";
}
);
iconName = Bold;
id = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
metricValues = (
{
pos = 992;
},
{
pos = 700;
},
{
pos = 496;
},
{
},
{
pos = -310;
},
{
pos = 10;
}
);
name = Bold;
}
);
glyphs = (
{
glyphname = A;
kernLeft = A;
kernRight = A;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (293,0);
},
{
name = ogonek;
pos = (608,0);
},
{
name = top;
pos = (417,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,0,l),
(181,171,l),
(466,171,l),
(497,0,l),
(608,0,l),
(475,700,l),
(358,700,l),
(-22,0,l)
);
},
{
closed = 1;
nodes = (
(395,578,l),
(452,253,l),
(224,253,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
9 1 4 0 1 76 5 1 4 0 2 1 4 2 104 0 0 0 33 77 3 1 1 1 34 1 78 8 8 8 10 8 10 17 17 17 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (288,0);
},
{
name = ogonek;
pos = (590,0);
},
{
name = top;
pos = (412,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(76,0,l),
(172,180,l),
(470,180,l),
(503,0,l),
(590,0,l),
(457,700,l),
(368,700,l),
(-14,0,l)
);
},
{
closed = 1;
nodes = (
(394,600,l),
(458,246,l),
(207,246,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
9 1 4 0 1 76 5 1 4 0 2 1 4 2 104 0 0 0 33 77 3 1 1 1 34 1 78 8 8 8 10 8 10 17 17 17 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (294,0);
},
{
name = ogonek;
pos = (613,0);
},
{
name = top;
pos = (418,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(95,0,l),
(183,168,l),
(465,168,l),
(494,0,l),
(613,0,l),
(481,700,l),
(355,700,l),
(-25,0,l)
);
},
{
closed = 1;
nodes = (
(395,571,l),
(450,255,l),
(229,255,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
9 1 4 0 1 76 5 1 4 0 2 1 4 2 104 0 0 0 33 77 3 1 1 1 34 1 78 8 8 8 10 8 10 17 17 17 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 675;
},
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (625,0);
},
{
name = top;
pos = (421,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(104,0,l),
(189,162,l),
(462,162,l),
(490,0,l),
(625,0,l),
(493,700,l),
(348,700,l),
(-31,0,l)
);
},
{
closed = 1;
nodes = (
(395,556,l),
(446,260,l),
(240,260,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
9 1 4 0 1 76 5 1 4 0 2 1 4 2 104 0 0 0 33 77 3 1 1 1 34 1 78 8 8 8 10 8 10 17 17 17 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = A;
unicode = 65;
},
{
glyphname = Aacute;
kernLeft = A;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (293,0);
},
{
name = ogonek;
pos = (608,0);
},
{
name = top;
pos = (460,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (228,0);
ref = acutecomb.case;
}
);
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (288,0);
},
{
name = ogonek;
pos = (590,0);
},
{
name = top;
pos = (453,931);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (227,0);
ref = acutecomb.case;
}
);
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (294,0);
},
{
name = ogonek;
pos = (613,0);
},
{
name = top;
pos = (462,945);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (228,0);
ref = acutecomb.case;
}
);
width = 675;
},
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (625,0);
},
{
name = top;
pos = (466,952);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (228,0);
ref = acutecomb.case;
}
);
width = 681;
}
);
note = Aacute;
unicode = 193;
},
{
glyphname = Abreve;
kernLeft = A;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (293,0);
},
{
name = ogonek;
pos = (608,0);
},
{
name = top;
pos = (454,909);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (188,0);
ref = uni0306.case;
}
);
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (288,0);
},
{
name = ogonek;
pos = (590,0);
},
{
name = top;
pos = (448,901);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (191,0);
ref = uni0306.case;
}
);
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (294,0);
},
{
name = ogonek;
pos = (613,0);
},
{
name = top;
pos = (455,912);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (186,0);
ref = uni0306.case;
}
);
width = 675;
},
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (625,0);
},
{
name = top;
pos = (459,917);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (184,0);
ref = uni0306.case;
}
);
width = 681;
}
);
note = Abreve;
unicode = 258;
},
{
glyphname = Acircumflex;
kernLeft = A;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (293,0);
},
{
name = ogonek;
pos = (608,0);
},
{
name = top;
pos = (454,911);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (196,0);
ref = uni0302.case;
}
);
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (288,0);
},
{
name = ogonek;
pos = (590,0);
},
{
name = top;
pos = (448,902);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (196,0);
ref = uni0302.case;
}
);
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (294,0);
},
{
name = ogonek;
pos = (613,0);
},
{
name = top;
pos = (455,913);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (195,0);
ref = uni0302.case;
}
);
width = 675;
},
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (625,0);
},
{
name = top;
pos = (459,919);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (195,0);
ref = uni0302.case;
}
);
width = 681;
}
);
note = Acircumflex;
unicode = 194;
},
{
glyphname = Adieresis;
kernLeft = A;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (293,0);
},
{
name = ogonek;
pos = (608,0);
},
{
name = top;
pos = (454,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (165,0);
ref = uni0308.case;
}
);
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (288,0);
},
{
name = ogonek;
pos = (590,0);
},
{
name = top;
pos = (445,889);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (184,0);
ref = uni0308.case;
}
);
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (294,0);
},
{
name = ogonek;
pos = (613,0);
},
{
name = top;
pos = (457,919);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (159,0);
ref = uni0308.case;
}
);
width = 675;
},
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (625,0);
},
{
name = top;
pos = (463,934);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (146,0);
ref = uni0308.case;
}
);
width = 681;
}
);
note = Adieresis;
unicode = 196;
},
{
glyphname = Agrave;
kernLeft = A;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (293,0);
},
{
name = ogonek;
pos = (608,0);
},
{
name = top;
pos = (460,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (228,0);
ref = gravecomb.case;
}
);
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (288,0);
},
{
name = ogonek;
pos = (590,0);
},
{
name = top;
pos = (453,931);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (227,0);
ref = gravecomb.case;
}
);
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (294,0);
},
{
name = ogonek;
pos = (613,0);
},
{
name = top;
pos = (462,945);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (228,0);
ref = gravecomb.case;
}
);
width = 675;
},
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (625,0);
},
{
name = top;
pos = (466,952);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (228,0);
ref = gravecomb.case;
}
);
width = 681;
}
);
note = Agrave;
unicode = 192;
},
{
glyphname = Amacron;
kernLeft = A;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (293,0);
},
{
name = ogonek;
pos = (608,0);
},
{
name = top;
pos = (446,867);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (156,0);
ref = uni0304.case;
}
);
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (288,0);
},
{
name = ogonek;
pos = (590,0);
},
{
name = top;
pos = (440,859);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (157,0);
ref = uni0304.case;
}
);
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (294,0);
},
{
name = ogonek;
pos = (613,0);
},
{
name = top;
pos = (448,869);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (156,0);
ref = uni0304.case;
}
);
width = 675;
},
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (625,0);
},
{
name = top;
pos = (452,874);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (155,0);
ref = uni0304.case;
}
);
width = 681;
}
);
note = Amacron;
unicode = 256;
},
{
glyphname = Aogonek;
kernLeft = A;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (293,0);
},
{
name = ogonek;
pos = (608,0);
},
{
name = top;
pos = (417,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,0,l),
(181,171,l),
(466,171,l),
(495,10,l),
(436,-19,o),
(385,-86,o),
(385,-126,qs),
(385,-165,o),
(446,-206,o),
(495,-206,qs),
(535,-206,o),
(579,-193,q),
(590,-127,l),
(551,-142,o),
(519,-142,qs),
(496,-142,o),
(470,-122,o),
(470,-105,qs),
(470,-83,o),
(506,-46,o),
(549,-27,qs),
(608,0,l),
(475,700,l),
(358,700,l),
(-22,0,l)
);
},
{
closed = 1;
nodes = (
(395,578,l),
(452,253,l),
(224,253,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
26 1 5 0 20 1 4 3 11 1 1 4 3 76 2 1 4 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 5 0 3 4 5 3 104 0 0 0 33 77 0 4 4 34 77 0 1 1 2 97 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
6 1 5 0 3 4 5 3 104 0 1 0 2 1 2 101 0 0 0 33 77 0 4 4 34 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 25 25 27 25 27 17 22 35 39 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (288,0);
},
{
name = ogonek;
pos = (590,0);
},
{
name = top;
pos = (412,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(76,0,l),
(172,180,l),
(470,180,l),
(501,12,l),
(436,-17,o),
(379,-86,o),
(379,-127,qs),
(379,-164,o),
(437,-203,o),
(482,-203,qs),
(521,-203,o),
(560,-190,q),
(569,-134,l),
(533,-149,o),
(502,-149,qs),
(478,-149,o),
(449,-128,o),
(449,-109,qs),
(449,-63,o),
(527,-28,qs),
(590,0,l),
(457,700,l),
(368,700,l),
(-14,0,l)
);
},
{
closed = 1;
nodes = (
(394,600,l),
(458,246,l),
(207,246,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
25 1 5 0 19 1 4 3 10 1 1 4 3 76 2 1 4 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 5 0 3 4 5 3 104 0 0 0 33 77 0 4 4 34 77 0 1 1 2 97 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
6 1 5 0 3 4 5 3 104 0 1 0 2 1 2 101 0 0 0 33 77 0 4 4 34 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
24 24 24 26 24 26 17 22 35 38 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (294,0);
},
{
name = ogonek;
pos = (613,0);
},
{
name = top;
pos = (418,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(95,0,l),
(183,168,l),
(465,168,l),
(492,9,l),
(435,-20,o),
(386,-86,o),
(386,-126,qs),
(386,-166,o),
(449,-208,o),
(498,-208,qs),
(537,-208,o),
(584,-194,q),
(595,-125,l),
(556,-140,o),
(524,-140,qs),
(502,-140,o),
(476,-121,o),
(476,-104,qs),
(476,-82,o),
(512,-46,o),
(555,-27,qs),
(613,0,l),
(481,700,l),
(355,700,l),
(-25,0,l)
);
},
{
closed = 1;
nodes = (
(395,571,l),
(450,255,l),
(229,255,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
26 1 5 0 20 1 4 3 11 1 1 4 3 76 2 1 4 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 5 0 3 4 5 3 104 0 0 0 33 77 0 4 4 34 77 0 1 1 2 97 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
6 1 5 0 3 4 5 3 104 0 1 0 2 1 2 101 0 0 0 33 77 0 4 4 34 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 25 25 27 25 27 17 22 35 39 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 675;
},
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (625,0);
},
{
name = top;
pos = (421,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(104,0,l),
(189,162,l),
(462,162,l),
(489,8,l),
(435,-22,o),
(390,-88,o),
(390,-126,qs),
(390,-168,o),
(454,-210,o),
(506,-210,qs),
(549,-210,o),
(596,-196,q),
(609,-120,l),
(567,-135,o),
(535,-135,qs),
(514,-135,o),
(490,-117,o),
(490,-102,qs),
(490,-81,o),
(525,-46,o),
(569,-26,qs),
(625,0,l),
(493,700,l),
(348,700,l),
(-31,0,l)
);
},
{
closed = 1;
nodes = (
(395,556,l),
(446,260,l),
(240,260,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
26 1 5 0 20 1 4 3 11 1 1 4 3 76 2 1 4 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 5 0 3 4 5 3 104 0 0 0 33 77 0 4 4 34 77 0 1 1 2 97 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
6 1 5 0 3 4 5 3 104 0 1 0 2 1 2 101 0 0 0 33 77 0 4 4 34 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 25 25 27 25 27 17 22 35 39 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 681;
}
);
note = Aogonek;
unicode = 260;
},
{
glyphname = Aring;
kernLeft = A;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (293,0);
},
{
name = ogonek;
pos = (608,0);
},
{
name = top;
pos = (465,971);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (226,0);
ref = uni030A.case;
}
);
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (288,0);
},
{
name = ogonek;
pos = (590,0);
},
{
name = top;
pos = (459,967);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (226,0);
ref = uni030A.case;
}
);
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (294,0);
},
{
name = ogonek;
pos = (613,0);
},
{
name = top;
pos = (466,972);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (226,0);
ref = uni030A.case;
}
);
width = 675;
},
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (625,0);
},
{
name = top;
pos = (470,975);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (226,0);
ref = uni030A.case;
}
);
width = 681;
}
);
note = Aring;
unicode = 197;
},
{
glyphname = Atilde;
kernLeft = A;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (293,0);
},
{
name = ogonek;
pos = (608,0);
},
{
name = top;
pos = (446,868);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (173,0);
ref = tildecomb.case;
}
);
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (288,0);
},
{
name = ogonek;
pos = (590,0);
},
{
name = top;
pos = (440,859);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (181,0);
ref = tildecomb.case;
}
);
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (294,0);
},
{
name = ogonek;
pos = (613,0);
},
{
name = top;
pos = (448,871);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (170,0);
ref = tildecomb.case;
}
);
width = 675;
},
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (625,0);
},
{
name = top;
pos = (452,877);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (165,0);
ref = tildecomb.case;
}
);
width = 681;
}
);
note = Atilde;
unicode = 195;
},
{
glyphname = AE;
kernLeft = AE;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (417,0);
},
{
name = top;
pos = (701,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,0,l),
(203,149,l),
(461,149,l),
(435,0,l),
(821,0,l),
(836,84,l),
(557,84,l),
(597,313,l),
(847,313,l),
(861,396,l),
(610,396,l),
(650,616,l),
(930,616,l),
(945,700,l),
(491,700,l),
(-22,0,l)
);
},
{
closed = 1;
nodes = (
(544,617,l),
(476,232,l),
(262,232,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
17 1 1 0 1 76 0 2 0 3 8 2 3 103 9 1 8 0 6 4 8 6 103 0 1 1 0 95 0 0 0 33 77 0 4 4 5 95 7 1 5 5 34 5 78 16 16 16 18 16 18 17 17 17 17 17 17 17 16 10 8 30
CALL[ ]	/* CallFunction */";
};
width = 921;
},
{
anchors = (
{
name = bottom;
pos = (415,0);
},
{
name = top;
pos = (719,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(78,0,l),
(197,159,l),
(465,159,l),
(437,0,l),
(810,0,l),
(822,67,l),
(534,67,l),
(578,320,l),
(837,320,l),
(848,386,l),
(589,386,l),
(633,633,l),
(922,633,l),
(934,700,l),
(509,700,l),
(-14,0,l)
);
},
{
closed = 1;
nodes = (
(549,631,l),
(477,226,l),
(246,226,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
17 1 2 1 1 76 0 2 0 3 8 2 3 103 9 1 8 0 6 4 8 6 103 0 1 1 0 95 0 0 0 33 77 0 4 4 5 95 7 1 5 5 34 5 78 16 16 16 18 16 18 17 17 17 17 17 17 17 16 10 8 30
CALL[ ]	/* CallFunction */";
};
width = 917;
},
{
anchors = (
{
name = bottom;
pos = (418,0);
},
{
name = top;
pos = (695,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(98,0,l),
(204,145,l),
(460,145,l),
(434,0,l),
(824,0,l),
(840,90,l),
(564,90,l),
(603,311,l),
(850,311,l),
(865,399,l),
(617,399,l),
(655,610,l),
(932,610,l),
(948,700,l),
(484,700,l),
(-25,0,l)
);
},
{
closed = 1;
nodes = (
(542,612,l),
(475,233,l),
(267,233,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
17 1 1 0 1 76 0 2 0 3 8 2 3 103 9 1 8 0 6 4 8 6 103 0 1 1 0 95 0 0 0 33 77 0 4 4 5 95 7 1 5 5 34 5 78 16 16 16 18 16 18 17 17 17 17 17 17 17 16 10 8 30
CALL[ ]	/* CallFunction */";
};
width = 922;
},
{
anchors = (
{
name = bottom;
pos = (419,0);
},
{
name = top;
pos = (683,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(108,0,l),
(208,138,l),
(457,138,l),
(432,0,l),
(831,0,l),
(849,101,l),
(579,101,l),
(615,306,l),
(856,306,l),
(873,405,l),
(631,405,l),
(666,599,l),
(937,599,l),
(955,700,l),
(472,700,l),
(-31,0,l)
);
},
{
closed = 1;
nodes = (
(539,602,l),
(474,237,l),
(278,237,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
17 1 1 0 1 76 0 2 0 3 8 2 3 103 9 1 8 0 6 4 8 6 103 0 1 1 0 95 0 0 0 33 77 0 4 4 5 95 7 1 5 5 34 5 78 16 16 16 18 16 18 17 17 17 17 17 17 17 16 10 8 30
CALL[ ]	/* CallFunction */";
};
width = 925;
}
);
note = AE;
unicode = 198;
},
{
glyphname = AEacute;
kernLeft = AE;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (417,0);
},
{
name = top;
pos = (744,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = AE;
},
{
alignment = -1;
pos = (512,0);
ref = acutecomb.case;
}
);
width = 921;
},
{
anchors = (
{
name = bottom;
pos = (415,0);
},
{
name = top;
pos = (760,931);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = AE;
},
{
alignment = -1;
pos = (534,0);
ref = acutecomb.case;
}
);
width = 917;
},
{
anchors = (
{
name = bottom;
pos = (418,0);
},
{
name = top;
pos = (739,945);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = AE;
},
{
alignment = -1;
pos = (505,0);
ref = acutecomb.case;
}
);
width = 922;
},
{
anchors = (
{
name = bottom;
pos = (419,0);
},
{
name = top;
pos = (728,952);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = AE;
},
{
alignment = -1;
pos = (490,0);
ref = acutecomb.case;
}
);
width = 925;
}
);
note = AEacute;
unicode = 508;
},
{
glyphname = B;
kernRight = B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(300,0,ls),
(378,0,o),
(499,57,o),
(565,158,o),
(565,221,qs),
(565,273,o),
(506,358,o),
(456,376,q),
(519,397,o),
(591,491,o),
(591,548,qs),
(591,615,o),
(493,700,o),
(400,700,qs),
(147,700,l),
(23,0,l)
);
},
{
closed = 1;
nodes = (
(145,90,l),
(186,325,l),
(337,325,ls),
(397,325,o),
(458,272,o),
(458,224,qs),
(458,160,o),
(377,90,o),
(298,90,qs)
);
},
{
closed = 1;
nodes = (
(202,413,l),
(236,611,l),
(372,611,ls),
(428,611,o),
(480,564,o),
(480,524,qs),
(480,473,o),
(409,413,o),
(340,413,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
7 1 2 5 1 76 7 1 5 0 2 3 5 2 103 0 4 4 0 95 0 0 0 33 77 6 1 3 3 1 95 0 1 1 34 1 78 25 25 16 16 25 33 25 32 31 29 16 24 16 23 37 43 32 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 614;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(295,0,ls),
(374,0,o),
(493,57,o),
(556,160,o),
(556,225,qs),
(556,277,o),
(499,359,o),
(445,377,q),
(505,394,o),
(583,488,o),
(583,548,qs),
(583,616,o),
(489,700,o),
(396,700,qs),
(155,700,l),
(31,0,l)
);
},
{
closed = 1;
nodes = (
(128,70,l),
(175,339,l),
(327,339,ls),
(398,339,o),
(472,279,o),
(472,223,qs),
(472,149,o),
(374,70,o),
(282,70,qs)
);
},
{
closed = 1;
nodes = (
(187,406,l),
(226,630,l),
(374,630,ls),
(438,630,o),
(495,577,o),
(495,531,qs),
(495,472,o),
(409,406,o),
(338,406,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
7 1 2 5 1 76 7 1 5 0 2 3 5 2 103 0 4 4 0 95 0 0 0 33 77 6 1 3 3 1 95 0 1 1 34 1 78 25 25 16 16 25 33 25 32 31 29 16 24 16 23 37 43 32 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 609;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(302,0,ls),
(380,0,o),
(500,57,o),
(567,157,o),
(567,220,qs),
(567,272,o),
(508,358,o),
(460,376,q),
(524,397,o),
(594,491,o),
(594,547,qs),
(594,615,o),
(495,700,o),
(401,700,qs),
(144,700,l),
(20,0,l)
);
},
{
closed = 1;
nodes = (
(151,96,l),
(190,320,l),
(340,320,ls),
(396,320,o),
(453,269,o),
(453,224,qs),
(453,162,o),
(377,96,o),
(303,96,qs)
);
},
{
closed = 1;
nodes = (
(206,415,l),
(239,604,l),
(371,604,ls),
(425,604,o),
(474,559,o),
(474,521,qs),
(474,473,o),
(408,415,o),
(341,415,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
7 1 2 5 1 76 7 1 5 0 2 3 5 2 103 0 4 4 0 95 0 0 0 33 77 6 1 3 3 1 95 0 1 1 34 1 78 25 25 16 16 25 33 25 32 31 29 16 24 16 23 37 43 32 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 615;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(305,0,ls),
(382,0,o),
(504,57,o),
(573,156,o),
(573,217,qs),
(573,269,o),
(513,358,o),
(467,375,q),
(532,399,o),
(599,492,o),
(599,547,qs),
(599,615,o),
(498,700,o),
(403,700,qs),
(138,700,l),
(14,0,l)
);
},
{
closed = 1;
nodes = (
(162,109,l),
(197,311,l),
(346,311,ls),
(395,311,o),
(444,264,o),
(444,225,qs),
(444,170,o),
(378,109,o),
(313,109,qs)
);
},
{
closed = 1;
nodes = (
(216,420,l),
(246,591,l),
(370,591,ls),
(418,591,o),
(464,550,o),
(464,516,qs),
(464,420,o),
(342,420,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
7 1 2 5 1 76 7 1 5 0 2 3 5 2 103 0 4 4 0 95 0 0 0 33 77 6 1 3 3 1 95 0 1 1 34 1 78 25 25 16 16 25 32 25 31 30 28 16 24 16 23 37 43 32 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
kernLeft = C;
kernRight = B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (317,0);
},
{
name = top;
pos = (441,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(457,-12,o),
(634,105,o),
(673,211,q),
(555,211,l),
(530,150,o),
(427,83,o),
(352,83,qs),
(263,83,o),
(163,186,o),
(163,279,qs),
(163,365,o),
(230,521,o),
(358,617,o),
(444,617,qs),
(519,617,o),
(601,547,o),
(603,484,q),
(721,484,l),
(719,592,o),
(583,712,o),
(460,712,qs),
(344,712,o),
(158,594,o),
(53,391,o),
(53,269,qs),
(53,195,o),
(111,68,o),
(237,-12,o),
(335,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 39 77 0 3 3 5 97 6 1 5 5 40 5 78 0 0 0 28 0 27 18 37 34 18 38 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 721;
},
{
anchors = (
{
name = bottom;
pos = (317,0);
},
{
name = top;
pos = (441,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(458,-12,o),
(628,100,o),
(667,203,q),
(572,203,l),
(545,136,o),
(433,62,o),
(351,62,qs),
(255,62,o),
(147,174,o),
(147,275,qs),
(147,373,o),
(223,539,o),
(362,638,o),
(451,638,qs),
(533,638,o),
(621,562,o),
(623,494,q),
(718,494,l),
(715,597,o),
(582,712,o),
(463,712,qs),
(347,712,o),
(163,593,o),
(59,390,o),
(59,268,qs),
(59,195,o),
(116,68,o),
(241,-12,o),
(339,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 39 77 0 3 3 5 97 6 1 5 5 40 5 78 0 0 0 28 0 27 18 37 34 18 38 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 722;
},
{
anchors = (
{
name = bottom;
pos = (316,0);
},
{
name = top;
pos = (440,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(457,-12,o),
(635,106,o),
(675,213,q),
(549,213,l),
(524,153,o),
(424,89,o),
(352,89,qs),
(265,89,o),
(168,190,o),
(168,280,qs),
(168,362,o),
(232,514,o),
(357,610,o),
(442,610,qs),
(515,610,o),
(594,542,o),
(596,481,q),
(722,481,l),
(720,591,o),
(583,712,o),
(459,712,qs),
(343,712,o),
(156,594,o),
(51,391,o),
(51,269,qs),
(51,195,o),
(109,68,o),
(236,-12,o),
(334,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 39 77 0 3 3 5 97 6 1 5 5 40 5 78 0 0 0 28 0 27 18 37 34 18 38 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 720;
},
{
anchors = (
{
name = bottom;
pos = (316,0);
},
{
name = top;
pos = (440,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(456,-12,o),
(639,109,o),
(679,218,q),
(537,218,l),
(513,162,o),
(420,103,o),
(352,103,qs),
(270,103,o),
(179,198,o),
(179,283,qs),
(179,358,o),
(237,502,o),
(353,596,o),
(437,596,qs),
(505,596,o),
(580,532,o),
(582,474,q),
(724,474,l),
(723,587,o),
(583,712,o),
(457,712,qs),
(340,712,o),
(153,594,o),
(47,391,o),
(47,269,qs),
(47,195,o),
(106,68,o),
(233,-12,o),
(331,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 39 77 0 3 3 5 97 6 1 5 5 40 5 78 0 0 0 28 0 27 18 37 34 18 38 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 719;
}
);
note = C;
unicode = 67;
},
{
glyphname = Cacute;
kernLeft = C;
kernRight = Cacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (317,0);
},
{
name = top;
pos = (484,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (252,0);
ref = acutecomb.case;
}
);
width = 721;
},
{
anchors = (
{
name = bottom;
pos = (317,0);
},
{
name = top;
pos = (482,931);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (256,0);
ref = acutecomb.case;
}
);
width = 722;
},
{
anchors = (
{
name = bottom;
pos = (316,0);
},
{
name = top;
pos = (484,945);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (250,0);
ref = acutecomb.case;
}
);
width = 720;
},
{
anchors = (
{
name = bottom;
pos = (316,0);
},
{
name = top;
pos = (485,952);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (247,0);
ref = acutecomb.case;
}
);
width = 719;
}
);
note = Cacute;
unicode = 262;
},
{
glyphname = Ccaron;
kernLeft = C;
kernRight = Cacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (317,0);
},
{
name = top;
pos = (477,910);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (219,0);
ref = uni030C.case;
}
);
width = 721;
},
{
anchors = (
{
name = bottom;
pos = (317,0);
},
{
name = top;
pos = (476,901);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (223,0);
ref = uni030C.case;
}
);
width = 722;
},
{
anchors = (
{
name = bottom;
pos = (316,0);
},
{
name = top;
pos = (477,912);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (217,0);
ref = uni030C.case;
}
);
width = 720;
},
{
anchors = (
{
name = bottom;
pos = (316,0);
},
{
name = top;
pos = (478,918);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (214,0);
ref = uni030C.case;
}
);
width = 719;
}
);
note = Ccaron;
unicode = 268;
},
{
glyphname = Ccedilla;
kernLeft = C;
kernRight = Cacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (271,-261);
},
{
name = top;
pos = (441,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(309,-261,ls),
(369,-261,o),
(454,-194,o),
(454,-137,qs),
(454,-97,o),
(392,-55,o),
(341,-56,q),
(349,-12,l),
(466,-8,o),
(635,108,o),
(673,211,q),
(555,211,l),
(530,150,o),
(427,83,o),
(352,83,qs),
(263,83,o),
(163,186,o),
(163,279,qs),
(163,365,o),
(230,521,o),
(358,617,o),
(444,617,qs),
(519,617,o),
(601,547,o),
(603,484,q),
(721,484,l),
(719,592,o),
(583,712,o),
(460,712,qs),
(344,712,o),
(158,594,o),
(53,391,o),
(53,269,qs),
(53,203,o),
(100,85,o),
(203,2,o),
(281,-8,q),
(262,-115,l),
(317,-115,ls),
(372,-115,o),
(372,-148,qs),
(371,-172,o),
(334,-197,o),
(303,-197,qs),
(201,-197,l),
(190,-261,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
8 1 7 5 1 76 0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 99 0 4 4 2 97 0 2 2 39 77 0 5 5 7 97 0 7 7 40 7 78 45 43 17 18 18 37 34 18 40 35 32 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 721;
},
{
anchors = (
{
name = bottom;
pos = (272,-259);
},
{
name = top;
pos = (441,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(310,-259,ls),
(369,-259,o),
(449,-194,o),
(449,-140,qs),
(449,-102,o),
(387,-62,o),
(335,-63,q),
(344,-12,l),
(461,-11,o),
(629,102,o),
(667,203,q),
(572,203,l),
(545,136,o),
(433,62,o),
(351,62,qs),
(255,62,o),
(147,174,o),
(147,275,qs),
(147,373,o),
(223,539,o),
(362,638,o),
(451,638,qs),
(533,638,o),
(621,562,o),
(623,494,q),
(718,494,l),
(715,597,o),
(582,712,o),
(463,712,qs),
(347,712,o),
(163,593,o),
(59,390,o),
(59,268,qs),
(59,164,o),
(171,6,o),
(288,-9,q),
(270,-113,l),
(319,-113,ls),
(380,-113,o),
(380,-149,qs),
(380,-177,o),
(340,-206,o),
(303,-206,qs),
(211,-206,l),
(202,-259,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
8 1 7 5 1 76 0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 99 0 4 4 2 97 0 2 2 39 77 0 5 5 7 97 0 7 7 40 7 78 44 42 17 18 18 37 34 18 39 35 32 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 722;
},
{
anchors = (
{
name = bottom;
pos = (270,-262);
},
{
name = top;
pos = (440,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(309,-262,ls),
(369,-262,o),
(456,-195,o),
(456,-136,qs),
(456,-95,o),
(393,-53,o),
(342,-54,q),
(350,-12,l),
(467,-8,o),
(637,110,o),
(675,213,q),
(549,213,l),
(524,153,o),
(424,89,o),
(352,89,qs),
(265,89,o),
(168,190,o),
(168,280,qs),
(168,362,o),
(232,514,o),
(357,610,o),
(442,610,qs),
(515,610,o),
(594,542,o),
(596,481,q),
(722,481,l),
(720,591,o),
(583,712,o),
(459,712,qs),
(343,712,o),
(156,594,o),
(51,391,o),
(51,269,qs),
(51,165,o),
(163,8,o),
(278,-8,q),
(259,-116,l),
(316,-116,ls),
(369,-116,o),
(369,-148,qs),
(368,-171,o),
(332,-195,o),
(302,-195,qs),
(197,-195,l),
(185,-262,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
8 1 7 5 1 76 0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 99 0 4 4 2 97 0 2 2 39 77 0 5 5 7 97 0 7 7 40 7 78 44 42 17 18 18 37 34 18 39 35 32 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 720;
},
{
anchors = (
{
name = bottom;
pos = (269,-263);
},
{
name = top;
pos = (440,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(308,-263,ls),
(369,-263,o),
(459,-195,o),
(459,-134,qs),
(459,-92,o),
(395,-48,o),
(346,-50,q),
(353,-12,l),
(470,-6,o),
(641,114,o),
(679,218,q),
(537,218,l),
(513,162,o),
(420,103,o),
(352,103,qs),
(270,103,o),
(179,198,o),
(179,283,qs),
(179,358,o),
(237,502,o),
(353,596,o),
(437,596,qs),
(505,596,o),
(580,532,o),
(582,474,q),
(724,474,l),
(723,587,o),
(583,712,o),
(457,712,qs),
(340,712,o),
(153,594,o),
(47,391,o),
(47,269,qs),
(47,203,o),
(94,86,o),
(196,3,o),
(274,-8,q),
(254,-118,l),
(315,-118,ls),
(363,-118,o),
(363,-147,qs),
(362,-168,o),
(328,-189,o),
(302,-189,qs),
(190,-189,l),
(177,-263,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
8 1 7 5 1 76 0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 99 0 4 4 2 97 0 2 2 39 77 0 5 5 7 97 0 7 7 40 7 78 45 43 17 18 18 37 34 18 40 35 32 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 719;
}
);
note = Ccedilla;
unicode = 199;
},
{
glyphname = Cdotaccent;
kernLeft = C;
kernRight = Cacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (317,0);
},
{
name = top;
pos = (478,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (289,0);
ref = uni0307.case;
}
);
width = 721;
},
{
anchors = (
{
name = bottom;
pos = (317,0);
},
{
name = top;
pos = (474,889);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (302,0);
ref = uni0307.case;
}
);
width = 722;
},
{
anchors = (
{
name = bottom;
pos = (316,0);
},
{
name = top;
pos = (479,919);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (285,0);
ref = uni0307.case;
}
);
width = 720;
},
{
anchors = (
{
name = bottom;
pos = (316,0);
},
{
name = top;
pos = (482,934);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (276,0);
ref = uni0307.case;
}
);
width = 719;
}
);
note = Cdotaccent;
unicode = 266;
},
{
glyphname = D;
kernRight = B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (306,0);
},
{
name = top;
pos = (430,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,700,l),
(23,0,l),
(250,0,ls),
(364,0,o),
(560,93,o),
(680,280,o),
(680,416,qs),
(680,553,o),
(528,700,o),
(373,700,qs)
);
},
{
closed = 1;
nodes = (
(145,90,l),
(237,611,l),
(354,611,ls),
(466,611,o),
(570,510,o),
(570,408,qs),
(570,320,o),
(506,177,o),
(368,90,o),
(262,90,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 1 95 4 1 1 1 33 77 5 1 3 3 0 95 0 0 0 34 0 78 10 10 0 0 10 19 10 18 17 15 0 9 0 8 37 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 699;
},
{
anchors = (
{
name = bottom;
pos = (307,0);
},
{
name = top;
pos = (431,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(154,700,l),
(31,0,l),
(246,0,ls),
(364,0,o),
(559,95,o),
(676,283,o),
(676,417,qs),
(676,555,o),
(525,700,o),
(369,700,qs)
);
},
{
closed = 1;
nodes = (
(127,70,l),
(226,630,l),
(355,630,ls),
(478,630,o),
(589,521,o),
(589,411,qs),
(589,317,o),
(519,163,o),
(369,70,o),
(257,70,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 1 95 4 1 1 1 33 77 5 1 3 3 0 95 0 0 0 34 0 78 10 10 0 0 10 19 10 18 17 15 0 9 0 8 37 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 701;
},
{
anchors = (
{
name = bottom;
pos = (305,0);
},
{
name = top;
pos = (429,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(143,700,l),
(20,0,l),
(251,0,ls),
(364,0,o),
(560,92,o),
(681,279,o),
(681,416,qs),
(681,552,o),
(529,700,o),
(374,700,qs)
);
},
{
closed = 1;
nodes = (
(150,97,l),
(240,604,l),
(353,604,ls),
(462,604,o),
(564,506,o),
(564,406,qs),
(564,321,o),
(502,181,o),
(367,97,o),
(264,97,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 1 95 4 1 1 1 33 77 5 1 3 3 0 95 0 0 0 34 0 78 10 10 0 0 10 19 10 18 17 15 0 9 0 8 37 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
anchors = (
{
name = bottom;
pos = (304,0);
},
{
name = top;
pos = (428,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(138,700,l),
(15,0,l),
(254,0,ls),
(364,0,o),
(560,90,o),
(683,277,o),
(683,415,qs),
(683,550,o),
(531,700,o),
(377,700,qs)
);
},
{
closed = 1;
nodes = (
(162,110,l),
(247,591,l),
(352,591,ls),
(454,591,o),
(551,498,o),
(551,404,qs),
(551,323,o),
(493,191,o),
(366,110,o),
(267,110,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 1 95 4 1 1 1 33 77 5 1 3 3 0 95 0 0 0 34 0 78 10 10 0 0 10 19 10 18 17 15 0 9 0 8 37 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 696;
}
);
note = D;
unicode = 68;
},
{
glyphname = Dcaron;
kernRight = B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (306,0);
},
{
name = top;
pos = (466,910);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = D;
},
{
alignment = -1;
pos = (208,0);
ref = uni030C.case;
}
);
width = 699;
},
{
anchors = (
{
name = bottom;
pos = (307,0);
},
{
name = top;
pos = (466,901);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = D;
},
{
alignment = -1;
pos = (213,0);
ref = uni030C.case;
}
);
width = 701;
},
{
anchors = (
{
name = bottom;
pos = (305,0);
},
{
name = top;
pos = (466,912);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = D;
},
{
alignment = -1;
pos = (206,0);
ref = uni030C.case;
}
);
width = 698;
},
{
anchors = (
{
name = bottom;
pos = (304,0);
},
{
name = top;
pos = (466,918);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = D;
},
{
alignment = -1;
pos = (202,0);
ref = uni030C.case;
}
);
width = 696;
}
);
note = Dcaron;
unicode = 270;
},
{
glyphname = Dcroat;
kernRight = B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,0,l),
(261,0,ls),
(390,0,o),
(488,53,qs),
(585,107,o),
(690,294,o),
(690,416,qs),
(690,553,o),
(538,700,o),
(384,700,qs),
(157,700,l),
(104,396,l),
(23,396,l),
(7,303,l),
(87,303,l)
);
},
{
closed = 1;
nodes = (
(156,90,l),
(193,303,l),
(382,303,l),
(398,396,l),
(210,396,l),
(248,611,l),
(365,611,ls),
(477,611,o),
(581,510,o),
(581,408,qs),
(581,311,o),
(545,240,qs),
(508,168,o),
(369,90,o),
(273,90,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
5 1 0 6 8 2 3 7 0 3 103 0 4 4 1 95 0 1 1 33 77 9 1 7 7 2 95 0 2 2 34 2 78 15 15 0 0 15 29 15 28 27 26 25 24 23 21 0 14 0 14 38 33 17 10 8 25
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(46,0,l),
(261,0,ls),
(391,0,o),
(489,53,qs),
(586,107,o),
(691,295,o),
(691,417,qs),
(691,555,o),
(540,700,o),
(384,700,qs),
(169,700,l),
(114,387,l),
(27,387,l),
(14,311,l),
(101,311,l)
);
},
{
closed = 1;
nodes = (
(143,70,l),
(185,311,l),
(386,311,l),
(399,387,l),
(198,387,l),
(241,630,l),
(370,630,ls),
(493,630,o),
(604,521,o),
(604,411,qs),
(604,308,o),
(565,231,qs),
(525,153,o),
(376,70,o),
(272,70,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
5 1 0 6 8 2 3 7 0 3 103 0 4 4 1 95 0 1 1 33 77 9 1 7 7 2 95 0 2 2 34 2 78 15 15 0 0 15 29 15 28 27 26 25 24 23 21 0 14 0 14 38 33 17 10 8 25
CALL[ ]	/* CallFunction */";
};
width = 716;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(29,0,l),
(261,0,ls),
(390,0,o),
(488,53,qs),
(585,106,o),
(690,294,o),
(690,416,qs),
(690,552,o),
(538,700,o),
(384,700,qs),
(152,700,l),
(100,399,l),
(21,399,l),
(4,300,l),
(82,300,l)
);
},
{
closed = 1;
nodes = (
(160,97,l),
(196,300,l),
(381,300,l),
(398,399,l),
(213,399,l),
(250,604,l),
(363,604,ls),
(471,604,o),
(573,506,o),
(573,406,qs),
(573,311,o),
(538,242,qs),
(502,172,o),
(367,97,o),
(273,97,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
5 1 0 6 8 2 3 7 0 3 103 0 4 4 1 95 0 1 1 33 77 9 1 7 7 2 95 0 2 2 34 2 78 15 15 0 0 15 29 15 28 27 26 25 24 23 21 0 14 0 14 38 33 17 10 8 25
CALL[ ]	/* CallFunction */";
};
width = 707;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(21,0,l),
(261,0,ls),
(389,0,o),
(487,53,qs),
(584,106,o),
(689,293,o),
(689,415,qs),
(689,550,o),
(537,700,o),
(384,700,qs),
(144,700,l),
(93,405,l),
(18,405,l),
(-1,295,l),
(73,295,l)
);
},
{
closed = 1;
nodes = (
(169,110,l),
(201,295,l),
(378,295,l),
(397,405,l),
(221,405,l),
(254,591,l),
(359,591,ls),
(460,591,o),
(558,498,o),
(558,404,qs),
(558,314,o),
(525,248,qs),
(491,181,o),
(363,110,o),
(274,110,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
5 1 0 6 8 2 3 7 0 3 103 0 4 4 1 95 0 1 1 33 77 9 1 7 7 2 95 0 2 2 34 2 78 15 15 0 0 15 29 15 28 27 26 25 24 23 21 0 14 0 14 38 33 17 10 8 25
CALL[ ]	/* CallFunction */";
};
width = 703;
}
);
note = Dcroat;
unicode = 272;
},
{
glyphname = Eth;
kernRight = B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,0,l),
(261,0,ls),
(390,0,o),
(488,53,qs),
(585,107,o),
(690,294,o),
(690,416,qs),
(690,553,o),
(538,700,o),
(384,700,qs),
(157,700,l),
(104,396,l),
(23,396,l),
(7,303,l),
(87,303,l)
);
},
{
closed = 1;
nodes = (
(156,90,l),
(193,303,l),
(382,303,l),
(398,396,l),
(210,396,l),
(248,611,l),
(365,611,ls),
(477,611,o),
(581,510,o),
(581,408,qs),
(581,311,o),
(545,240,qs),
(508,168,o),
(369,90,o),
(273,90,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
5 1 0 6 8 2 3 7 0 3 103 0 4 4 1 95 0 1 1 33 77 9 1 7 7 2 95 0 2 2 34 2 78 15 15 0 0 15 29 15 28 27 26 25 24 23 21 0 14 0 14 38 33 17 10 8 25
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(46,0,l),
(261,0,ls),
(391,0,o),
(489,53,qs),
(586,107,o),
(691,295,o),
(691,417,qs),
(691,555,o),
(540,700,o),
(384,700,qs),
(169,700,l),
(114,387,l),
(27,387,l),
(14,311,l),
(101,311,l)
);
},
{
closed = 1;
nodes = (
(143,70,l),
(185,311,l),
(386,311,l),
(399,387,l),
(198,387,l),
(241,630,l),
(370,630,ls),
(493,630,o),
(604,521,o),
(604,411,qs),
(604,308,o),
(565,231,qs),
(525,153,o),
(376,70,o),
(272,70,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
5 1 0 6 8 2 3 7 0 3 103 0 4 4 1 95 0 1 1 33 77 9 1 7 7 2 95 0 2 2 34 2 78 15 15 0 0 15 29 15 28 27 26 25 24 23 21 0 14 0 14 38 33 17 10 8 25
CALL[ ]	/* CallFunction */";
};
width = 716;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(29,0,l),
(261,0,ls),
(390,0,o),
(488,53,qs),
(585,106,o),
(690,294,o),
(690,416,qs),
(690,552,o),
(538,700,o),
(384,700,qs),
(152,700,l),
(100,399,l),
(21,399,l),
(4,300,l),
(82,300,l)
);
},
{
closed = 1;
nodes = (
(160,97,l),
(196,300,l),
(381,300,l),
(398,399,l),
(213,399,l),
(250,604,l),
(363,604,ls),
(471,604,o),
(573,506,o),
(573,406,qs),
(573,311,o),
(538,242,qs),
(502,172,o),
(367,97,o),
(273,97,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
5 1 0 6 8 2 3 7 0 3 103 0 4 4 1 95 0 1 1 33 77 9 1 7 7 2 95 0 2 2 34 2 78 15 15 0 0 15 29 15 28 27 26 25 24 23 21 0 14 0 14 38 33 17 10 8 25
CALL[ ]	/* CallFunction */";
};
width = 707;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(21,0,l),
(261,0,ls),
(389,0,o),
(487,53,qs),
(584,106,o),
(689,293,o),
(689,415,qs),
(689,550,o),
(537,700,o),
(384,700,qs),
(144,700,l),
(93,405,l),
(18,405,l),
(-1,295,l),
(73,295,l)
);
},
{
closed = 1;
nodes = (
(169,110,l),
(201,295,l),
(378,295,l),
(397,405,l),
(221,405,l),
(254,591,l),
(359,591,ls),
(460,591,o),
(558,498,o),
(558,404,qs),
(558,314,o),
(525,248,qs),
(491,181,o),
(363,110,o),
(274,110,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
5 1 0 6 8 2 3 7 0 3 103 0 4 4 1 95 0 1 1 33 77 9 1 7 7 2 95 0 2 2 34 2 78 15 15 0 0 15 29 15 28 27 26 25 24 23 21 0 14 0 14 38 33 17 10 8 25
CALL[ ]	/* CallFunction */";
};
width = 703;
}
);
note = Eth;
unicode = 208;
},
{
glyphname = E;
kernRight = E;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (444,0);
},
{
name = top;
pos = (352,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(444,0,l),
(460,89,l),
(144,89,l),
(186,326,l),
(457,326,l),
(473,414,l),
(202,414,l),
(236,611,l),
(552,611,l),
(568,700,l),
(146,700,l),
(22,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 5 95 0 5 5 34 5 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = ogonek;
pos = (435,0);
},
{
name = top;
pos = (351,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(435,0,l),
(447,69,l),
(126,69,l),
(174,336,l),
(451,336,l),
(463,404,l),
(186,404,l),
(226,631,l),
(547,631,l),
(559,700,l),
(154,700,l),
(30,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 5 95 0 5 5 34 5 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 542;
},
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (447,0);
},
{
name = top;
pos = (352,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(447,0,l),
(464,96,l),
(150,96,l),
(190,322,l),
(459,322,l),
(476,417,l),
(207,417,l),
(239,604,l),
(554,604,l),
(571,700,l),
(143,700,l),
(19,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 5 95 0 5 5 34 5 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (229,0);
},
{
name = ogonek;
pos = (453,0);
},
{
name = top;
pos = (353,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(453,0,l),
(473,109,l),
(162,109,l),
(198,315,l),
(463,315,l),
(482,424,l),
(217,424,l),
(246,591,l),
(557,591,l),
(577,700,l),
(138,700,l),
(14,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 5 95 0 5 5 34 5 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 545;
}
);
note = E;
unicode = 69;
},
{
glyphname = Eacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (444,0);
},
{
name = top;
pos = (395,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (163,0);
ref = acutecomb.case;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = ogonek;
pos = (435,0);
},
{
name = top;
pos = (392,931);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (166,0);
ref = acutecomb.case;
}
);
width = 542;
},
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (447,0);
},
{
name = top;
pos = (396,945);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (162,0);
ref = acutecomb.case;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (229,0);
},
{
name = ogonek;
pos = (453,0);
},
{
name = top;
pos = (398,952);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (160,0);
ref = acutecomb.case;
}
);
width = 545;
}
);
note = Eacute;
unicode = 201;
},
{
glyphname = Ebreve;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (444,0);
},
{
name = top;
pos = (389,909);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (123,0);
ref = uni0306.case;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = ogonek;
pos = (435,0);
},
{
name = top;
pos = (387,901);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (130,0);
ref = uni0306.case;
}
);
width = 542;
},
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (447,0);
},
{
name = top;
pos = (390,912);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (121,0);
ref = uni0306.case;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (229,0);
},
{
name = ogonek;
pos = (453,0);
},
{
name = top;
pos = (391,917);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (116,0);
ref = uni0306.case;
}
);
width = 545;
}
);
note = Ebreve;
unicode = 276;
},
{
glyphname = Ecaron;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (444,0);
},
{
name = top;
pos = (389,910);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (130,0);
ref = uni030C.case;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = ogonek;
pos = (435,0);
},
{
name = top;
pos = (386,901);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (133,0);
ref = uni030C.case;
}
);
width = 542;
},
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (447,0);
},
{
name = top;
pos = (389,912);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (129,0);
ref = uni030C.case;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (229,0);
},
{
name = ogonek;
pos = (453,0);
},
{
name = top;
pos = (391,918);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (127,0);
ref = uni030C.case;
}
);
width = 545;
}
);
note = Ecaron;
unicode = 282;
},
{
glyphname = Ecircumflex;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (444,0);
},
{
name = top;
pos = (389,911);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (131,0);
ref = uni0302.case;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = ogonek;
pos = (435,0);
},
{
name = top;
pos = (387,902);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (135,0);
ref = uni0302.case;
}
);
width = 542;
},
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (447,0);
},
{
name = top;
pos = (390,913);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (130,0);
ref = uni0302.case;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (229,0);
},
{
name = ogonek;
pos = (453,0);
},
{
name = top;
pos = (391,919);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (127,0);
ref = uni0302.case;
}
);
width = 545;
}
);
note = Ecircumflex;
unicode = 202;
},
{
glyphname = Edieresis;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (444,0);
},
{
name = top;
pos = (390,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (101,0);
ref = uni0308.case;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = ogonek;
pos = (435,0);
},
{
name = top;
pos = (384,889);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (123,0);
ref = uni0308.case;
}
);
width = 542;
},
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (447,0);
},
{
name = top;
pos = (391,919);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (93,0);
ref = uni0308.case;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (229,0);
},
{
name = ogonek;
pos = (453,0);
},
{
name = top;
pos = (395,934);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (78,0);
ref = uni0308.case;
}
);
width = 545;
}
);
note = Edieresis;
unicode = 203;
},
{
glyphname = Edotaccent;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (444,0);
},
{
name = top;
pos = (390,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (201,0);
ref = uni0307.case;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = ogonek;
pos = (435,0);
},
{
name = top;
pos = (384,889);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (212,0);
ref = uni0307.case;
}
);
width = 542;
},
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (447,0);
},
{
name = top;
pos = (391,919);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (197,0);
ref = uni0307.case;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (229,0);
},
{
name = ogonek;
pos = (453,0);
},
{
name = top;
pos = (395,934);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (189,0);
ref = uni0307.case;
}
);
width = 545;
}
);
note = Edotaccent;
unicode = 278;
},
{
glyphname = Egrave;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (444,0);
},
{
name = top;
pos = (395,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (163,0);
ref = gravecomb.case;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = ogonek;
pos = (435,0);
},
{
name = top;
pos = (392,931);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (166,0);
ref = gravecomb.case;
}
);
width = 542;
},
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (447,0);
},
{
name = top;
pos = (396,945);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (162,0);
ref = gravecomb.case;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (229,0);
},
{
name = ogonek;
pos = (453,0);
},
{
name = top;
pos = (398,952);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (160,0);
ref = gravecomb.case;
}
);
width = 545;
}
);
note = Egrave;
unicode = 200;
},
{
glyphname = Emacron;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (444,0);
},
{
name = top;
pos = (382,867);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (92,0);
ref = uni0304.case;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = ogonek;
pos = (435,0);
},
{
name = top;
pos = (379,859);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (96,0);
ref = uni0304.case;
}
);
width = 542;
},
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (447,0);
},
{
name = top;
pos = (382,869);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (90,0);
ref = uni0304.case;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (229,0);
},
{
name = ogonek;
pos = (453,0);
},
{
name = top;
pos = (384,874);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (87,0);
ref = uni0304.case;
}
);
width = 545;
}
);
note = Emacron;
unicode = 274;
},
{
glyphname = Eogonek;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (444,0);
},
{
name = top;
pos = (352,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(312,0,l),
(263,-28,o),
(221,-90,o),
(221,-126,qs),
(221,-165,o),
(282,-206,o),
(331,-206,qs),
(371,-206,o),
(415,-193,q),
(426,-127,l),
(387,-142,o),
(355,-142,qs),
(332,-142,o),
(306,-122,o),
(306,-105,qs),
(306,-83,o),
(342,-46,o),
(385,-27,qs),
(444,0,l),
(460,89,l),
(144,89,l),
(186,326,l),
(457,326,l),
(473,414,l),
(202,414,l),
(236,611,l),
(552,611,l),
(568,700,l),
(146,700,l),
(22,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 5 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 7 95 0 7 7 34 77 0 5 5 6 97 0 6 6 38 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 3 4 2 3 103 0 5 0 6 5 6 101 0 1 1 0 95 0 0 0 33 77 0 4 4 7 95 0 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
21 35 39 17 17 17 17 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = ogonek;
pos = (435,0);
},
{
name = top;
pos = (351,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(322,0,l),
(269,-27,o),
(224,-90,o),
(224,-127,qs),
(224,-164,o),
(282,-203,o),
(327,-203,qs),
(366,-203,o),
(405,-190,q),
(414,-134,l),
(378,-149,o),
(347,-149,qs),
(323,-149,o),
(294,-128,o),
(294,-109,qs),
(294,-63,o),
(372,-28,qs),
(435,0,l),
(447,69,l),
(126,69,l),
(174,336,l),
(451,336,l),
(463,404,l),
(186,404,l),
(226,631,l),
(547,631,l),
(559,700,l),
(154,700,l),
(30,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
18 1 5 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 7 95 0 7 7 34 77 0 5 5 6 97 0 6 6 38 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 3 4 2 3 103 0 5 0 6 5 6 101 0 1 1 0 95 0 0 0 33 77 0 4 4 7 95 0 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
21 35 38 17 17 17 17 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 542;
},
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (447,0);
},
{
name = top;
pos = (352,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(309,0,l),
(261,-28,o),
(220,-90,o),
(220,-126,qs),
(220,-166,o),
(283,-208,o),
(332,-208,qs),
(371,-208,o),
(418,-194,q),
(429,-125,l),
(390,-140,o),
(358,-140,qs),
(336,-140,o),
(310,-121,o),
(310,-104,qs),
(310,-82,o),
(346,-46,o),
(389,-27,qs),
(447,0,l),
(464,96,l),
(150,96,l),
(190,322,l),
(459,322,l),
(476,417,l),
(207,417,l),
(239,604,l),
(554,604,l),
(571,700,l),
(143,700,l),
(19,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 5 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 7 95 0 7 7 34 77 0 5 5 6 97 0 6 6 38 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 3 4 2 3 103 0 5 0 6 5 6 101 0 1 1 0 95 0 0 0 33 77 0 4 4 7 95 0 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
21 35 39 17 17 17 17 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (229,0);
},
{
name = ogonek;
pos = (453,0);
},
{
name = top;
pos = (353,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(303,0,l),
(257,-28,o),
(218,-90,o),
(218,-126,qs),
(218,-168,o),
(282,-210,o),
(334,-210,qs),
(377,-210,o),
(424,-196,q),
(437,-120,l),
(395,-135,o),
(363,-135,qs),
(342,-135,o),
(318,-117,o),
(318,-102,qs),
(318,-81,o),
(353,-46,o),
(397,-26,qs),
(453,0,l),
(473,109,l),
(162,109,l),
(198,315,l),
(463,315,l),
(482,424,l),
(217,424,l),
(246,591,l),
(557,591,l),
(577,700,l),
(138,700,l),
(14,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 5 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 7 95 0 7 7 34 77 0 5 5 6 97 0 6 6 38 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 3 4 2 3 103 0 5 0 6 5 6 101 0 1 1 0 95 0 0 0 33 77 0 4 4 7 95 0 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
21 35 39 17 17 17 17 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 545;
}
);
note = Eogonek;
unicode = 280;
},
{
glyphname = uni018F;
kernLeft = uni018F;
kernRight = B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(444,-12,o),
(631,109,o),
(734,313,o),
(734,434,qs),
(734,507,o),
(672,633,o),
(545,712,o),
(451,712,qs),
(380,712,o),
(241,662,o),
(122,557,o),
(87,477,q),
(205,477,l),
(236,542,o),
(361,616,o),
(436,616,qs),
(521,616,o),
(622,513,o),
(622,425,qs),
(622,398,o),
(619,382,q),
(68,382,l),
(48,314,o),
(48,256,qs),
(48,182,o),
(112,60,o),
(237,-12,o),
(324,-12,qs)
);
},
{
closed = 1;
nodes = (
(254,85,o),
(156,174,o),
(156,253,qs),
(156,270,o),
(160,300,q),
(607,300,l),
(594,244,o),
(523,146,o),
(410,85,o),
(338,85,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 2 1 0 1 2 0 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 39 77 8 1 6 6 4 97 7 1 4 4 40 4 78 28 28 0 0 28 37 28 36 32 31 0 27 0 26 35 18 36 21 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 752;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(444,-12,o),
(630,107,o),
(732,311,o),
(732,434,qs),
(732,507,o),
(671,633,o),
(545,712,o),
(452,712,qs),
(342,712,o),
(144,594,o),
(91,479,q),
(187,479,l),
(220,552,o),
(358,636,o),
(440,636,qs),
(532,636,o),
(642,522,o),
(642,425,qs),
(642,399,o),
(638,375,q),
(72,375,l),
(53,308,o),
(53,250,qs),
(53,180,o),
(113,60,o),
(236,-12,o),
(325,-12,qs)
);
},
{
closed = 1;
nodes = (
(245,64,o),
(139,162,o),
(139,248,qs),
(139,272,o),
(144,304,q),
(629,304,l),
(615,242,o),
(539,133,o),
(416,64,o),
(336,64,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 2 1 0 1 2 0 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 39 77 8 1 6 6 4 97 7 1 4 4 40 4 78 27 27 0 0 27 36 27 35 31 30 0 26 0 25 34 18 36 21 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 756;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(445,-12,o),
(632,109,o),
(735,313,o),
(735,433,qs),
(735,506,o),
(673,633,o),
(544,712,o),
(450,712,qs),
(380,712,o),
(240,663,o),
(121,557,o),
(86,476,q),
(211,476,l),
(242,538,o),
(362,609,o),
(434,609,qs),
(517,609,o),
(615,509,o),
(615,424,qs),
(615,399,o),
(613,384,q),
(66,384,l),
(46,314,o),
(46,257,qs),
(46,181,o),
(111,59,o),
(237,-12,o),
(324,-12,qs)
);
},
{
closed = 1;
nodes = (
(257,91,o),
(162,178,o),
(162,255,qs),
(162,277,o),
(165,299,q),
(600,299,l),
(587,245,o),
(518,150,o),
(408,91,o),
(339,91,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 2 1 0 1 2 0 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 39 77 8 1 6 6 4 97 7 1 4 4 40 4 78 28 28 0 0 28 37 28 36 32 31 0 27 0 26 35 18 36 21 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 750;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(444,-12,o),
(633,109,o),
(736,314,o),
(736,433,qs),
(736,506,o),
(673,633,o),
(544,712,o),
(449,712,qs),
(379,712,o),
(238,663,o),
(118,556,o),
(83,474,q),
(223,474,l),
(252,531,o),
(364,596,o),
(431,596,qs),
(510,596,o),
(602,503,o),
(602,424,qs),
(602,402,o),
(600,388,q),
(63,388,l),
(43,322,o),
(43,261,qs),
(43,183,o),
(111,59,o),
(238,-12,o),
(323,-12,qs)
);
},
{
closed = 1;
nodes = (
(263,105,o),
(173,186,o),
(173,258,qs),
(173,278,o),
(176,296,q),
(585,296,l),
(574,246,o),
(507,159,o),
(404,105,o),
(340,105,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 2 1 0 1 2 0 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 39 77 8 1 6 6 4 97 7 1 4 4 40 4 78 28 28 0 0 28 37 28 36 32 31 0 27 0 26 35 18 36 21 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 747;
}
);
note = uni018F;
unicode = 399;
},
{
glyphname = F;
kernRight = F;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,0,l),
(184,317,l),
(462,317,l),
(478,406,l),
(200,406,l),
(236,611,l),
(559,611,l),
(575,700,l),
(146,700,l),
(22,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 34 4 78 17 17 17 17 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 528;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(114,0,l),
(172,327,l),
(453,327,l),
(465,395,l),
(184,395,l),
(226,631,l),
(558,631,l),
(570,700,l),
(154,700,l),
(30,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 34 4 78 17 17 17 17 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 530;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(133,0,l),
(188,314,l),
(464,314,l),
(482,409,l),
(205,409,l),
(239,604,l),
(559,604,l),
(576,700,l),
(143,700,l),
(19,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 34 4 78 17 17 17 17 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 527;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(142,0,l),
(196,307,l),
(470,307,l),
(490,416,l),
(216,416,l),
(246,591,l),
(559,591,l),
(579,700,l),
(138,700,l),
(14,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 34 4 78 17 17 17 17 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 525;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
kernLeft = C;
kernRight = G;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (336,0);
},
{
name = top;
pos = (460,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(411,-12,o),
(527,46,o),
(575,104,q),
(566,0,l),
(663,0,l),
(729,376,l),
(382,376,l),
(367,289,l),
(605,289,l),
(577,191,o),
(450,83,o),
(352,83,qs),
(265,83,o),
(165,193,o),
(165,288,qs),
(165,369,o),
(227,519,o),
(357,615,o),
(453,615,qs),
(528,615,o),
(612,551,o),
(617,494,q),
(737,494,l),
(732,596,o),
(588,712,o),
(467,712,qs),
(348,712,o),
(161,601,o),
(55,404,o),
(55,280,qs),
(55,205,o),
(114,72,o),
(236,-12,o),
(328,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 3 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 5 2 1 5 128 0 5 0 4 3 5 4 103 0 2 2 0 97 0 0 0 39 77 0 3 3 6 97 8 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 5 2 1 5 128 0 5 0 4 3 5 4 103 0 2 2 0 97 0 0 0 39 77 0 6 6 34 77 0 3 3 7 97 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 0 32 17 17 18 37 34 18 38 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 759;
},
{
anchors = (
{
name = bottom;
pos = (337,0);
},
{
name = top;
pos = (461,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(421,-12,o),
(542,51,o),
(594,115,q),
(581,0,l),
(658,0,l),
(724,374,l),
(385,374,l),
(374,308,l),
(626,308,l),
(598,191,o),
(458,63,o),
(349,63,qs),
(256,63,o),
(149,182,o),
(149,284,qs),
(149,370,o),
(214,531,o),
(353,635,o),
(457,635,qs),
(540,635,o),
(633,562,o),
(636,498,q),
(733,498,l),
(728,598,o),
(585,712,o),
(466,712,qs),
(348,712,o),
(163,599,o),
(61,402,o),
(61,279,qs),
(61,205,o),
(119,72,o),
(241,-12,o),
(333,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 3 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 5 2 1 5 128 0 5 0 4 3 5 4 103 0 2 2 0 97 0 0 0 39 77 0 3 3 6 97 8 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 5 2 1 5 128 0 5 0 4 3 5 4 103 0 2 2 0 97 0 0 0 39 77 0 6 6 34 77 0 3 3 7 97 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 0 32 17 17 18 37 34 18 38 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 761;
},
{
anchors = (
{
name = bottom;
pos = (336,0);
},
{
name = top;
pos = (460,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(408,-12,o),
(522,44,o),
(568,100,q),
(561,0,l),
(664,0,l),
(731,377,l),
(381,377,l),
(364,283,l),
(597,283,l),
(570,191,o),
(448,89,o),
(353,89,qs),
(268,89,o),
(170,196,o),
(170,289,qs),
(170,369,o),
(231,515,o),
(358,608,o),
(452,608,qs),
(523,608,o),
(605,547,o),
(611,493,q),
(738,493,l),
(733,596,o),
(589,712,o),
(467,712,qs),
(348,712,o),
(160,602,o),
(53,405,o),
(53,280,qs),
(53,205,o),
(112,72,o),
(235,-12,o),
(326,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 3 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 5 2 1 5 128 0 5 0 4 3 5 4 103 0 2 2 0 97 0 0 0 39 77 0 3 3 6 97 8 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 5 2 1 5 128 0 5 0 4 3 5 4 103 0 2 2 0 97 0 0 0 39 77 0 6 6 34 77 0 3 3 7 97 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 0 32 17 17 18 37 34 18 38 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 758;
},
{
anchors = (
{
name = bottom;
pos = (335,0);
},
{
name = top;
pos = (459,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(401,-12,o),
(511,40,o),
(555,92,q),
(551,0,l),
(667,0,l),
(734,378,l),
(379,378,l),
(359,270,l),
(583,270,l),
(556,191,o),
(442,102,o),
(355,102,qs),
(273,102,o),
(181,203,o),
(181,291,qs),
(181,368,o),
(239,507,o),
(360,594,o),
(449,594,qs),
(515,594,o),
(591,539,o),
(598,490,q),
(741,490,l),
(736,594,o),
(590,712,o),
(467,712,qs),
(348,712,o),
(158,603,o),
(49,407,o),
(49,281,qs),
(49,205,o),
(108,72,o),
(232,-12,o),
(323,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 6 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 5 2 1 5 128 0 5 0 4 3 5 4 103 0 2 2 0 97 0 0 0 39 77 0 3 3 6 97 8 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 5 2 1 5 128 0 5 0 4 3 5 4 103 0 2 2 0 97 0 0 0 39 77 0 6 6 34 77 0 3 3 7 97 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 0 32 17 17 18 37 34 18 38 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 757;
}
);
note = G;
unicode = 71;
},
{
glyphname = Gbreve;
kernLeft = C;
kernRight = G;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (336,0);
},
{
name = top;
pos = (497,909);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (231,0);
ref = uni0306.case;
}
);
width = 759;
},
{
anchors = (
{
name = bottom;
pos = (337,0);
},
{
name = top;
pos = (497,901);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (240,0);
ref = uni0306.case;
}
);
width = 761;
},
{
anchors = (
{
name = bottom;
pos = (336,0);
},
{
name = top;
pos = (497,912);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (228,0);
ref = uni0306.case;
}
);
width = 758;
},
{
anchors = (
{
name = bottom;
pos = (335,0);
},
{
name = top;
pos = (497,917);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (222,0);
ref = uni0306.case;
}
);
width = 757;
}
);
note = Gbreve;
unicode = 286;
},
{
glyphname = Gdotaccent;
kernLeft = C;
kernRight = G;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (336,0);
},
{
name = top;
pos = (498,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (309,0);
ref = uni0307.case;
}
);
width = 759;
},
{
anchors = (
{
name = bottom;
pos = (337,0);
},
{
name = top;
pos = (494,889);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (322,0);
ref = uni0307.case;
}
);
width = 761;
},
{
anchors = (
{
name = bottom;
pos = (336,0);
},
{
name = top;
pos = (499,919);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (304,0);
ref = uni0307.case;
}
);
width = 758;
},
{
anchors = (
{
name = bottom;
pos = (335,0);
},
{
name = top;
pos = (501,934);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (295,0);
ref = uni0307.case;
}
);
width = 757;
}
);
note = Gdotaccent;
unicode = 288;
},
{
glyphname = H;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,0,l),
(187,326,l),
(525,326,l),
(467,0,l),
(573,0,l),
(697,700,l),
(591,700,l),
(541,415,l),
(202,415,l),
(253,700,l),
(147,700,l),
(23,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 0 4 3 1 4 104 2 1 0 0 33 77 5 1 3 3 34 3 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 683;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(115,0,l),
(175,336,l),
(538,336,l),
(478,0,l),
(562,0,l),
(686,700,l),
(602,700,l),
(550,405,l),
(187,405,l),
(239,700,l),
(155,700,l),
(31,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 0 4 3 1 4 104 2 1 0 0 33 77 5 1 3 3 34 3 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 680;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(133,0,l),
(190,323,l),
(521,323,l),
(463,0,l),
(577,0,l),
(701,700,l),
(587,700,l),
(537,418,l),
(207,418,l),
(257,700,l),
(144,700,l),
(20,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 0 4 3 1 4 104 2 1 0 0 33 77 5 1 3 3 34 3 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(142,0,l),
(198,316,l),
(512,316,l),
(456,0,l),
(584,0,l),
(708,700,l),
(580,700,l),
(531,425,l),
(217,425,l),
(266,700,l),
(138,700,l),
(14,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 0 4 3 1 4 104 2 1 0 0 33 77 5 1 3 3 34 3 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 686;
}
);
note = H;
unicode = 72;
},
{
glyphname = Hbar;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,0,l),
(187,326,l),
(525,326,l),
(467,0,l),
(573,0,l),
(662,503,l),
(707,503,l),
(723,592,l),
(678,592,l),
(697,700,l),
(591,700,l),
(572,592,l),
(233,592,l),
(253,700,l),
(147,700,l),
(127,592,l),
(82,592,l),
(66,503,l),
(112,503,l),
(23,0,l)
);
},
{
closed = 1;
nodes = (
(218,503,l),
(556,503,l),
(541,415,l),
(202,415,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
5 3 2 1 10 6 2 0 11 1 0 104 12 1 11 0 8 7 11 8 103 4 1 2 2 33 77 9 1 7 7 34 7 78 20 20 20 23 20 23 22 21 19 18 17 17 17 17 17 17 17 17 16 13 8 31
CALL[ ]	/* CallFunction */";
};
width = 683;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(115,0,l),
(175,336,l),
(538,336,l),
(478,0,l),
(562,0,l),
(653,513,l),
(703,513,l),
(715,582,l),
(665,582,l),
(686,700,l),
(602,700,l),
(581,582,l),
(218,582,l),
(239,700,l),
(155,700,l),
(134,582,l),
(84,582,l),
(72,513,l),
(122,513,l),
(31,0,l)
);
},
{
closed = 1;
nodes = (
(206,513,l),
(569,513,l),
(550,405,l),
(187,405,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
5 3 2 1 10 6 2 0 11 1 0 104 12 1 11 0 8 7 11 8 103 4 1 2 2 33 77 9 1 7 7 34 7 78 20 20 20 23 20 23 22 21 19 18 17 17 17 17 17 17 17 17 16 13 8 31
CALL[ ]	/* CallFunction */";
};
width = 681;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(133,0,l),
(190,323,l),
(521,323,l),
(463,0,l),
(577,0,l),
(665,500,l),
(708,500,l),
(725,595,l),
(682,595,l),
(701,700,l),
(587,700,l),
(568,595,l),
(238,595,l),
(257,700,l),
(144,700,l),
(125,595,l),
(81,595,l),
(64,500,l),
(108,500,l),
(20,0,l)
);
},
{
closed = 1;
nodes = (
(221,500,l),
(552,500,l),
(537,418,l),
(207,418,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
5 3 2 1 10 6 2 0 11 1 0 104 12 1 11 0 8 7 11 8 103 4 1 2 2 33 77 9 1 7 7 34 7 78 20 20 20 23 20 23 22 21 19 18 17 17 17 17 17 17 17 17 16 13 8 31
CALL[ ]	/* CallFunction */";
};
width = 684;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(142,0,l),
(198,316,l),
(512,316,l),
(456,0,l),
(584,0,l),
(671,493,l),
(711,493,l),
(730,602,l),
(690,602,l),
(708,700,l),
(580,700,l),
(562,602,l),
(248,602,l),
(266,700,l),
(138,700,l),
(120,602,l),
(79,602,l),
(60,493,l),
(101,493,l),
(14,0,l)
);
},
{
closed = 1;
nodes = (
(229,493,l),
(543,493,l),
(531,425,l),
(217,425,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
5 3 2 1 10 6 2 0 11 1 0 104 12 1 11 0 8 7 11 8 103 4 1 2 2 33 77 9 1 7 7 34 7 78 20 20 20 23 20 23 22 21 19 18 17 17 17 17 17 17 17 17 16 13 8 31
CALL[ ]	/* CallFunction */";
};
width = 685;
}
);
note = Hbar;
unicode = 294;
},
{
glyphname = I;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (129,0);
},
{
name = top;
pos = (200,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,0,l),
(252,700,l),
(146,700,l),
(23,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 239;
},
{
anchors = (
{
name = bottom;
pos = (73,0);
},
{
name = ogonek;
pos = (115,0);
},
{
name = top;
pos = (197,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(115,0,l),
(238,700,l),
(154,700,l),
(31,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 233;
},
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (133,0);
},
{
name = top;
pos = (200,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(133,0,l),
(257,700,l),
(143,700,l),
(20,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 240;
},
{
anchors = (
{
name = bottom;
pos = (78,0);
},
{
name = ogonek;
pos = (142,0);
},
{
name = top;
pos = (202,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(142,0,l),
(266,700,l),
(138,700,l),
(14,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 244;
}
);
note = I;
unicode = 73;
},
{
glyphname = IJ;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (442,0);
},
{
name = ogonek;
pos = (129,0);
},
{
name = top;
pos = (691,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (239,0);
ref = J;
}
);
width = 733;
},
{
anchors = (
{
name = bottom;
pos = (432,0);
},
{
name = ogonek;
pos = (115,0);
},
{
name = top;
pos = (680,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (233,0);
ref = J;
}
);
width = 719;
},
{
anchors = (
{
name = bottom;
pos = (445,0);
},
{
name = ogonek;
pos = (133,0);
},
{
name = top;
pos = (694,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (240,0);
ref = J;
}
);
width = 737;
},
{
anchors = (
{
name = bottom;
pos = (451,0);
},
{
name = ogonek;
pos = (142,0);
},
{
name = top;
pos = (701,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (244,0);
ref = J;
}
);
width = 746;
}
);
note = IJ;
unicode = 306;
},
{
glyphname = Iacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (129,0);
},
{
name = top;
pos = (243,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (11,0);
ref = acutecomb.case;
}
);
width = 239;
},
{
anchors = (
{
name = bottom;
pos = (73,0);
},
{
name = ogonek;
pos = (115,0);
},
{
name = top;
pos = (238,931);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (12,0);
ref = acutecomb.case;
}
);
width = 233;
},
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (133,0);
},
{
name = top;
pos = (244,945);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (10,0);
ref = acutecomb.case;
}
);
width = 240;
},
{
anchors = (
{
name = bottom;
pos = (78,0);
},
{
name = ogonek;
pos = (142,0);
},
{
name = top;
pos = (247,952);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (9,0);
ref = acutecomb.case;
}
);
width = 244;
}
);
note = Iacute;
unicode = 205;
},
{
glyphname = Ibreve;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (129,0);
},
{
name = top;
pos = (237,909);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-30,0);
ref = uni0306.case;
}
);
width = 239;
},
{
anchors = (
{
name = bottom;
pos = (73,0);
},
{
name = ogonek;
pos = (115,0);
},
{
name = top;
pos = (233,901);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-24,0);
ref = uni0306.case;
}
);
width = 233;
},
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (133,0);
},
{
name = top;
pos = (238,912);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-31,0);
ref = uni0306.case;
}
);
width = 240;
},
{
anchors = (
{
name = bottom;
pos = (78,0);
},
{
name = ogonek;
pos = (142,0);
},
{
name = top;
pos = (240,917);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-35,0);
ref = uni0306.case;
}
);
width = 244;
}
);
note = Ibreve;
unicode = 300;
},
{
glyphname = Icircumflex;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (129,0);
},
{
name = top;
pos = (237,911);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-22,0);
ref = uni0302.case;
}
);
width = 239;
},
{
anchors = (
{
name = bottom;
pos = (73,0);
},
{
name = ogonek;
pos = (115,0);
},
{
name = top;
pos = (233,902);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-19,0);
ref = uni0302.case;
}
);
width = 233;
},
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (133,0);
},
{
name = top;
pos = (238,913);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-22,0);
ref = uni0302.case;
}
);
width = 240;
},
{
anchors = (
{
name = bottom;
pos = (78,0);
},
{
name = ogonek;
pos = (142,0);
},
{
name = top;
pos = (240,919);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-24,0);
ref = uni0302.case;
}
);
width = 244;
}
);
note = Icircumflex;
unicode = 206;
},
{
glyphname = Idieresis;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (129,0);
},
{
name = top;
pos = (237,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-52,0);
ref = uni0308.case;
}
);
width = 239;
},
{
anchors = (
{
name = bottom;
pos = (73,0);
},
{
name = ogonek;
pos = (115,0);
},
{
name = top;
pos = (230,889);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-31,0);
ref = uni0308.case;
}
);
width = 233;
},
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (133,0);
},
{
name = top;
pos = (239,919);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-59,0);
ref = uni0308.case;
}
);
width = 240;
},
{
anchors = (
{
name = bottom;
pos = (78,0);
},
{
name = ogonek;
pos = (142,0);
},
{
name = top;
pos = (244,934);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-73,0);
ref = uni0308.case;
}
);
width = 244;
}
);
note = Idieresis;
unicode = 207;
},
{
glyphname = Idotaccent;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (129,0);
},
{
name = top;
pos = (237,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (48,0);
ref = uni0307.case;
}
);
width = 239;
},
{
anchors = (
{
name = bottom;
pos = (73,0);
},
{
name = ogonek;
pos = (115,0);
},
{
name = top;
pos = (230,889);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (58,0);
ref = uni0307.case;
}
);
width = 233;
},
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (133,0);
},
{
name = top;
pos = (239,919);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (45,0);
ref = uni0307.case;
}
);
width = 240;
},
{
anchors = (
{
name = bottom;
pos = (78,0);
},
{
name = ogonek;
pos = (142,0);
},
{
name = top;
pos = (244,934);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (38,0);
ref = uni0307.case;
}
);
width = 244;
}
);
note = Idotaccent;
unicode = 304;
},
{
glyphname = Igrave;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (129,0);
},
{
name = top;
pos = (243,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (11,0);
ref = gravecomb.case;
}
);
width = 239;
},
{
anchors = (
{
name = bottom;
pos = (73,0);
},
{
name = ogonek;
pos = (115,0);
},
{
name = top;
pos = (238,931);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (12,0);
ref = gravecomb.case;
}
);
width = 233;
},
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (133,0);
},
{
name = top;
pos = (244,945);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (10,0);
ref = gravecomb.case;
}
);
width = 240;
},
{
anchors = (
{
name = bottom;
pos = (78,0);
},
{
name = ogonek;
pos = (142,0);
},
{
name = top;
pos = (247,952);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (9,0);
ref = gravecomb.case;
}
);
width = 244;
}
);
note = Igrave;
unicode = 204;
},
{
glyphname = Imacron;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (129,0);
},
{
name = top;
pos = (229,867);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-61,0);
ref = uni0304.case;
}
);
width = 239;
},
{
anchors = (
{
name = bottom;
pos = (73,0);
},
{
name = ogonek;
pos = (115,0);
},
{
name = top;
pos = (225,859);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-58,0);
ref = uni0304.case;
}
);
width = 233;
},
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (133,0);
},
{
name = top;
pos = (230,869);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-62,0);
ref = uni0304.case;
}
);
width = 240;
},
{
anchors = (
{
name = bottom;
pos = (78,0);
},
{
name = ogonek;
pos = (142,0);
},
{
name = top;
pos = (233,874);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-64,0);
ref = uni0304.case;
}
);
width = 244;
}
);
note = Imacron;
unicode = 298;
},
{
glyphname = Iogonek;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (129,0);
},
{
name = top;
pos = (200,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,-206,o),
(100,-193,q),
(111,-127,l),
(72,-142,o),
(40,-142,qs),
(17,-142,o),
(-9,-122,o),
(-9,-105,qs),
(-9,-83,o),
(27,-46,o),
(70,-27,qs),
(129,0,l),
(252,700,l),
(146,700,l),
(26,15,l),
(-39,-16,o),
(-94,-85,o),
(-94,-126,qs),
(-94,-165,o),
(-33,-206,o),
(16,-206,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
17 1 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 33 77 0 1 1 2 97 3 1 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
0 1 3 1 2 1 2 101 0 0 0 33 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 0 19 39 22 4 8 24
CALL[ ]	/* CallFunction */";
};
width = 239;
},
{
anchors = (
{
name = bottom;
pos = (73,0);
},
{
name = ogonek;
pos = (115,0);
},
{
name = top;
pos = (197,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(46,-203,o),
(85,-190,q),
(94,-134,l),
(58,-149,o),
(27,-149,qs),
(3,-149,o),
(-26,-128,o),
(-26,-109,qs),
(-26,-63,o),
(52,-28,qs),
(115,0,l),
(238,700,l),
(154,700,l),
(34,15,l),
(-36,-15,o),
(-96,-85,o),
(-96,-127,qs),
(-96,-164,o),
(-38,-203,o),
(7,-203,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 33 77 0 1 1 2 97 3 1 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
0 1 3 1 2 1 2 101 0 0 0 33 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 19 0 18 38 22 4 8 24
CALL[ ]	/* CallFunction */";
};
width = 233;
},
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (133,0);
},
{
name = top;
pos = (200,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(57,-208,o),
(104,-194,q),
(115,-125,l),
(76,-140,o),
(44,-140,qs),
(22,-140,o),
(-4,-121,o),
(-4,-104,qs),
(-4,-82,o),
(32,-46,o),
(75,-27,qs),
(133,0,l),
(257,700,l),
(143,700,l),
(23,15,l),
(-41,-17,o),
(-94,-85,o),
(-94,-126,qs),
(-94,-166,o),
(-31,-208,o),
(18,-208,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
17 1 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 33 77 0 1 1 2 97 3 1 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
0 1 3 1 2 1 2 101 0 0 0 33 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 0 19 39 22 4 8 24
CALL[ ]	/* CallFunction */";
};
width = 240;
},
{
anchors = (
{
name = bottom;
pos = (78,0);
},
{
name = ogonek;
pos = (142,0);
},
{
name = top;
pos = (202,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(66,-210,o),
(113,-196,q),
(126,-120,l),
(84,-135,o),
(52,-135,qs),
(31,-135,o),
(7,-117,o),
(7,-102,qs),
(7,-81,o),
(42,-46,o),
(86,-26,qs),
(142,0,l),
(266,700,l),
(138,700,l),
(16,14,l),
(-43,-18,o),
(-93,-85,o),
(-93,-126,qs),
(-93,-168,o),
(-29,-210,o),
(23,-210,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
17 1 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 33 77 0 1 1 2 97 3 1 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
0 1 3 1 2 1 2 101 0 0 0 33 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 0 19 39 22 4 8 24
CALL[ ]	/* CallFunction */";
};
width = 244;
}
);
note = Iogonek;
unicode = 302;
},
{
glyphname = Itilde;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (129,0);
},
{
name = top;
pos = (229,868);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-44,0);
ref = tildecomb.case;
}
);
width = 239;
},
{
anchors = (
{
name = bottom;
pos = (73,0);
},
{
name = ogonek;
pos = (115,0);
},
{
name = top;
pos = (225,859);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-34,0);
ref = tildecomb.case;
}
);
width = 233;
},
{
anchors = (
{
name = bottom;
pos = (76,0);
},
{
name = ogonek;
pos = (133,0);
},
{
name = top;
pos = (230,871);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-47,0);
ref = tildecomb.case;
}
);
width = 240;
},
{
anchors = (
{
name = bottom;
pos = (78,0);
},
{
name = ogonek;
pos = (142,0);
},
{
name = top;
pos = (233,877);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-54,0);
ref = tildecomb.case;
}
);
width = 244;
}
);
note = Itilde;
unicode = 296;
},
{
glyphname = J;
kernLeft = J;
kernRight = J;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (203,0);
},
{
name = top;
pos = (452,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(274,-12,o),
(401,93,o),
(417,184,qs),
(507,700,l),
(401,700,l),
(311,184,ls),
(303,140,o),
(246,83,o),
(199,83,qs),
(158,83,o),
(117,127,o),
(117,165,qs),
(117,181,o),
(120,197,q),
(14,197,l),
(9,169,o),
(9,149,qs),
(9,73,o),
(102,-12,o),
(183,-12,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 0 2 1 1 0 114 0 2 2 33 77 0 1 1 3 98 4 1 3 3 40 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 1 2 0 1 128 0 2 2 33 77 0 1 1 3 98 4 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 19 0 18 19 36 20 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 494;
},
{
anchors = (
{
name = bottom;
pos = (199,0);
},
{
name = top;
pos = (447,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(264,-12,o),
(384,88,o),
(399,172,qs),
(491,700,l),
(407,700,l),
(315,172,ls),
(307,126,o),
(244,63,o),
(191,63,qs),
(145,63,o),
(101,112,o),
(101,153,qs),
(101,170,o),
(104,186,q),
(19,186,l),
(15,165,o),
(15,141,qs),
(15,68,o),
(101,-12,o),
(178,-12,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 0 2 1 1 0 114 0 2 2 33 77 0 1 1 3 98 4 1 3 3 40 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 1 2 0 1 128 0 2 2 33 77 0 1 1 3 98 4 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 19 0 18 19 36 20 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 486;
},
{
anchors = (
{
name = bottom;
pos = (204,0);
},
{
name = top;
pos = (454,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(278,-12,o),
(407,95,o),
(423,188,qs),
(512,700,l),
(399,700,l),
(310,188,ls),
(302,144,o),
(246,89,o),
(201,89,qs),
(161,89,o),
(122,131,o),
(122,168,qs),
(122,185,o),
(125,201,q),
(12,201,l),
(7,171,o),
(7,152,qs),
(7,74,o),
(102,-12,o),
(185,-12,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 0 2 1 1 0 114 0 2 2 33 77 0 1 1 3 98 4 1 3 3 40 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 1 2 0 1 128 0 2 2 33 77 0 1 1 3 98 4 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 19 0 18 19 36 20 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 497;
},
{
anchors = (
{
name = bottom;
pos = (207,0);
},
{
name = top;
pos = (457,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(284,-12,o),
(418,98,o),
(435,196,qs),
(523,700,l),
(395,700,l),
(307,196,ls),
(299,153,o),
(247,102,o),
(206,102,qs),
(169,102,o),
(133,141,o),
(133,176,qs),
(133,192,o),
(136,208,q),
(8,208,l),
(3,178,o),
(3,157,qs),
(3,77,o),
(102,-12,o),
(188,-12,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 0 2 1 1 0 114 0 2 2 33 77 0 1 1 3 98 4 1 3 3 40 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 1 2 0 1 128 0 2 2 33 77 0 1 1 3 98 4 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 19 0 18 19 36 20 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = J;
unicode = 74;
},
{
glyphname = uni004A0301;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (203,0);
},
{
name = top;
pos = (495,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = J;
},
{
alignment = -1;
pos = (263,0);
ref = acutecomb.case;
}
);
width = 494;
},
{
anchors = (
{
name = bottom;
pos = (199,0);
},
{
name = top;
pos = (488,931);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = J;
},
{
alignment = -1;
pos = (262,0);
ref = acutecomb.case;
}
);
width = 486;
},
{
anchors = (
{
name = bottom;
pos = (204,0);
},
{
name = top;
pos = (497,945);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = J;
},
{
alignment = -1;
pos = (263,0);
ref = acutecomb.case;
}
);
width = 497;
},
{
anchors = (
{
name = bottom;
pos = (207,0);
},
{
name = top;
pos = (502,952);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = J;
},
{
alignment = -1;
pos = (264,0);
ref = acutecomb.case;
}
);
width = 502;
}
);
note = uni004A0301;
},
{
glyphname = K;
kernRight = K;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (261,0);
},
{
name = ogonek;
pos = (129,0);
},
{
name = top;
pos = (385,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,0,l),
(188,336,l),
(427,0,l),
(561,0,l),
(297,357,l),
(655,700,l),
(518,700,l),
(196,382,l),
(252,700,l),
(146,700,l),
(23,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
8 5 2 3 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 608;
},
{
anchors = (
{
name = bottom;
pos = (251,0);
},
{
name = ogonek;
pos = (115,0);
},
{
name = top;
pos = (375,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(115,0,l),
(175,342,l),
(436,0,l),
(541,0,l),
(264,357,l),
(632,700,l),
(523,700,l),
(181,375,l),
(238,700,l),
(154,700,l),
(31,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
8 5 2 3 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 589;
},
{
anchors = (
{
name = bottom;
pos = (264,0);
},
{
name = ogonek;
pos = (133,0);
},
{
name = top;
pos = (388,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(133,0,l),
(192,333,l),
(423,0,l),
(568,0,l),
(308,357,l),
(663,700,l),
(516,700,l),
(201,384,l),
(257,700,l),
(143,700,l),
(20,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
8 5 2 3 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 614;
},
{
anchors = (
{
name = bottom;
pos = (270,0);
},
{
name = ogonek;
pos = (142,0);
},
{
name = top;
pos = (394,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(142,0,l),
(200,330,l),
(417,0,l),
(581,0,l),
(330,356,l),
(678,700,l),
(513,700,l),
(211,388,l),
(266,700,l),
(138,700,l),
(14,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
8 5 2 3 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 627;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
kernRight = L;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (219,0);
},
{
name = top;
pos = (251,700);
},
{
name = topright;
pos = (340,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(443,0,l),
(459,88,l),
(145,88,l),
(252,700,l),
(146,700,l),
(23,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 17 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 525;
},
{
anchors = (
{
name = bottom;
pos = (219,0);
},
{
name = top;
pos = (254,700);
},
{
name = topright;
pos = (345,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(441,0,l),
(453,67,l),
(127,67,l),
(238,700,l),
(154,700,l),
(31,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 17 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 526;
},
{
anchors = (
{
name = bottom;
pos = (218,0);
},
{
name = top;
pos = (250,700);
},
{
name = topright;
pos = (338,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(443,0,l),
(460,95,l),
(150,95,l),
(257,700,l),
(143,700,l),
(20,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 17 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 525;
},
{
anchors = (
{
name = bottom;
pos = (218,0);
},
{
name = top;
pos = (248,700);
},
{
name = topright;
pos = (335,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(444,0,l),
(464,109,l),
(162,109,l),
(266,700,l),
(138,700,l),
(14,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 17 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 524;
}
);
note = L;
unicode = 76;
},
{
glyphname = Lacute;
kernRight = L;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (219,0);
},
{
name = top;
pos = (294,942);
},
{
name = topright;
pos = (340,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (62,0);
ref = acutecomb.case;
}
);
width = 525;
},
{
anchors = (
{
name = bottom;
pos = (219,0);
},
{
name = top;
pos = (295,931);
},
{
name = topright;
pos = (345,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (69,0);
ref = acutecomb.case;
}
);
width = 526;
},
{
anchors = (
{
name = bottom;
pos = (218,0);
},
{
name = top;
pos = (294,945);
},
{
name = topright;
pos = (338,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (60,0);
ref = acutecomb.case;
}
);
width = 525;
},
{
anchors = (
{
name = bottom;
pos = (218,0);
},
{
name = top;
pos = (293,952);
},
{
name = topright;
pos = (335,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (55,0);
ref = acutecomb.case;
}
);
width = 524;
}
);
note = Lacute;
unicode = 313;
},
{
glyphname = Lcaron;
kernRight = L;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (219,0);
},
{
name = top;
pos = (251,700);
},
{
name = topright;
pos = (340,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (257,0);
ref = uni030C.alt.case;
}
);
width = 525;
},
{
anchors = (
{
name = bottom;
pos = (219,0);
},
{
name = top;
pos = (254,700);
},
{
name = topright;
pos = (345,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (260,0);
ref = uni030C.alt.case;
}
);
width = 526;
},
{
anchors = (
{
name = bottom;
pos = (218,0);
},
{
name = top;
pos = (250,700);
},
{
name = topright;
pos = (338,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (256,0);
ref = uni030C.alt.case;
}
);
width = 525;
},
{
anchors = (
{
name = bottom;
pos = (218,0);
},
{
name = top;
pos = (248,700);
},
{
name = topright;
pos = (335,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (254,0);
ref = uni030C.alt.case;
}
);
width = 524;
}
);
note = Lcaron;
unicode = 317;
},
{
glyphname = Ldot;
kernRight = L;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(443,0,l),
(459,88,l),
(145,88,l),
(252,700,l),
(146,700,l),
(23,0,l)
);
},
{
closed = 1;
nodes = (
(414,280,o),
(455,321,o),
(455,350,qs),
(455,379,o),
(414,420,o),
(385,420,qs),
(355,420,o),
(314,379,o),
(314,350,qs),
(314,321,o),
(355,280,o),
(385,280,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 5 1 4 1 3 4 105 0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 6 6 6 17 6 16 37 17 17 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 525;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(441,0,l),
(453,67,l),
(127,67,l),
(238,700,l),
(154,700,l),
(31,0,l)
);
},
{
closed = 1;
nodes = (
(400,292,o),
(433,325,o),
(433,349,qs),
(433,374,o),
(400,406,o),
(376,406,qs),
(351,406,o),
(318,374,o),
(318,349,qs),
(318,325,o),
(351,292,o),
(376,292,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 5 1 4 1 3 4 105 0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 6 6 6 17 6 16 37 17 17 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 526;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(443,0,l),
(460,95,l),
(150,95,l),
(257,700,l),
(143,700,l),
(20,0,l)
);
},
{
closed = 1;
nodes = (
(419,275,o),
(462,319,o),
(462,350,qs),
(462,381,o),
(418,424,o),
(387,424,qs),
(356,424,o),
(313,381,o),
(313,350,qs),
(313,318,o),
(356,275,o),
(387,275,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 5 1 4 1 3 4 105 0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 6 6 6 17 6 16 37 17 17 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 525;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(444,0,l),
(464,109,l),
(162,109,l),
(266,700,l),
(138,700,l),
(14,0,l)
);
},
{
closed = 1;
nodes = (
(428,267,o),
(476,316,o),
(476,350,qs),
(476,385,o),
(428,433,o),
(393,433,qs),
(358,433,o),
(310,385,o),
(310,350,qs),
(310,315,o),
(358,267,o),
(393,267,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 5 1 4 1 3 4 105 0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 6 6 6 17 6 16 37 17 17 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 524;
}
);
note = Ldot;
unicode = 319;
},
{
glyphname = Lslash;
kernRight = L;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(468,0,l),
(483,88,l),
(169,88,l),
(213,334,l),
(333,375,l),
(350,476,l),
(231,435,l),
(277,700,l),
(171,700,l),
(118,398,l),
(37,371,l),
(19,270,l),
(100,297,l),
(48,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
7 6 1 3 1 0 1 76 0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 17 21 20 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 550;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(467,0,l),
(478,67,l),
(152,67,l),
(201,341,l),
(331,388,l),
(345,467,l),
(215,421,l),
(264,700,l),
(180,700,l),
(125,389,l),
(40,359,l),
(26,280,l),
(111,310,l),
(57,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
7 6 1 3 1 0 1 76 0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 17 21 20 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 552;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(468,0,l),
(485,95,l),
(175,95,l),
(216,332,l),
(333,370,l),
(352,478,l),
(236,440,l),
(281,700,l),
(168,700,l),
(115,400,l),
(36,374,l),
(17,267,l),
(96,293,l),
(44,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
7 6 1 3 1 0 1 76 0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 17 21 20 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 549;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(468,0,l),
(488,109,l),
(186,109,l),
(224,327,l),
(334,361,l),
(355,484,l),
(246,449,l),
(290,700,l),
(162,700,l),
(110,406,l),
(34,382,l),
(12,260,l),
(88,284,l),
(38,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
7 6 1 3 1 0 1 76 0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 17 21 20 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 548;
}
);
note = Lslash;
unicode = 321;
},
{
glyphname = M;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,0,l),
(219,511,l),
(348,95,l),
(430,95,l),
(706,511,l),
(616,0,l),
(722,0,l),
(845,700,l),
(720,700,l),
(414,230,l),
(271,700,l),
(146,700,l),
(23,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
10 7 2 3 3 0 1 76 0 3 0 2 0 3 2 128 1 1 0 0 33 77 4 1 2 2 34 2 78 18 18 17 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 832;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(115,0,l),
(212,549,l),
(367,100,l),
(430,100,l),
(742,550,l),
(646,0,l),
(730,0,l),
(853,700,l),
(754,700,l),
(418,212,l),
(252,700,l),
(154,700,l),
(31,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
10 7 2 3 3 0 1 76 0 3 0 2 0 3 2 128 1 1 0 0 33 77 4 1 2 2 34 2 78 18 18 17 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 848;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(133,0,l),
(221,498,l),
(342,93,l),
(430,93,l),
(693,498,l),
(605,0,l),
(719,0,l),
(842,700,l),
(708,700,l),
(412,236,l),
(277,700,l),
(143,700,l),
(20,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
10 7 2 3 3 0 1 76 0 3 0 2 0 3 2 128 1 1 0 0 33 77 4 1 2 2 34 2 78 18 18 17 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 826;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(142,0,l),
(226,472,l),
(329,89,l),
(430,89,l),
(669,472,l),
(585,0,l),
(713,0,l),
(837,700,l),
(685,700,l),
(409,248,l),
(290,700,l),
(138,700,l),
(14,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
10 7 2 3 3 0 1 76 0 3 0 2 0 3 2 128 1 1 0 0 33 77 4 1 2 2 34 2 78 18 18 17 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 815;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
kernRight = N;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (304,0);
},
{
name = top;
pos = (428,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,0,l),
(222,528,l),
(480,0,l),
(586,0,l),
(709,700,l),
(603,700,l),
(510,172,l),
(252,700,l),
(146,700,l),
(23,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
7 2 2 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 17 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 696;
},
{
anchors = (
{
name = bottom;
pos = (301,0);
},
{
name = top;
pos = (425,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(115,0,l),
(215,567,l),
(488,0,l),
(572,0,l),
(695,700,l),
(611,700,l),
(512,133,l),
(237,700,l),
(154,700,l),
(31,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
7 2 2 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 17 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 690;
},
{
anchors = (
{
name = bottom;
pos = (305,0);
},
{
name = top;
pos = (429,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(133,0,l),
(224,514,l),
(477,0,l),
(590,0,l),
(714,700,l),
(600,700,l),
(509,185,l),
(256,700,l),
(143,700,l),
(20,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
7 2 2 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 17 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 697;
},
{
anchors = (
{
name = bottom;
pos = (307,0);
},
{
name = top;
pos = (431,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(142,0,l),
(228,488,l),
(471,0,l),
(599,0,l),
(723,700,l),
(595,700,l),
(508,211,l),
(266,700,l),
(138,700,l),
(14,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
7 2 2 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 17 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 701;
}
);
note = N;
unicode = 78;
},
{
glyphname = Nacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (304,0);
},
{
name = top;
pos = (471,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (239,0);
ref = acutecomb.case;
}
);
width = 696;
},
{
anchors = (
{
name = bottom;
pos = (301,0);
},
{
name = top;
pos = (466,931);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (240,0);
ref = acutecomb.case;
}
);
width = 690;
},
{
anchors = (
{
name = bottom;
pos = (305,0);
},
{
name = top;
pos = (473,945);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (239,0);
ref = acutecomb.case;
}
);
width = 697;
},
{
anchors = (
{
name = bottom;
pos = (307,0);
},
{
name = top;
pos = (476,952);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (238,0);
ref = acutecomb.case;
}
);
width = 701;
}
);
note = Nacute;
unicode = 323;
},
{
glyphname = Ncaron;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (304,0);
},
{
name = top;
pos = (465,910);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (206,0);
ref = uni030C.case;
}
);
width = 696;
},
{
anchors = (
{
name = bottom;
pos = (301,0);
},
{
name = top;
pos = (460,901);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (207,0);
ref = uni030C.case;
}
);
width = 690;
},
{
anchors = (
{
name = bottom;
pos = (305,0);
},
{
name = top;
pos = (466,912);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (206,0);
ref = uni030C.case;
}
);
width = 697;
},
{
anchors = (
{
name = bottom;
pos = (307,0);
},
{
name = top;
pos = (469,918);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (205,0);
ref = uni030C.case;
}
);
width = 701;
}
);
note = Ncaron;
unicode = 327;
},
{
glyphname = Ntilde;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (304,0);
},
{
name = top;
pos = (458,868);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (185,0);
ref = tildecomb.case;
}
);
width = 696;
},
{
anchors = (
{
name = bottom;
pos = (301,0);
},
{
name = top;
pos = (453,859);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (194,0);
ref = tildecomb.case;
}
);
width = 690;
},
{
anchors = (
{
name = bottom;
pos = (305,0);
},
{
name = top;
pos = (459,871);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (181,0);
ref = tildecomb.case;
}
);
width = 697;
},
{
anchors = (
{
name = bottom;
pos = (307,0);
},
{
name = top;
pos = (462,877);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (175,0);
ref = tildecomb.case;
}
);
width = 701;
}
);
note = Ntilde;
unicode = 209;
},
{
glyphname = Eng;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (304,0);
},
{
name = top;
pos = (428,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,0,l),
(222,528,l),
(480,0,l),
(468,-67,ls),
(462,-100,o),
(426,-129,o),
(392,-129,qs),
(359,-129,l),
(343,-220,l),
(392,-220,ls),
(546,-220,o),
(574,-68,qs),
(709,700,l),
(603,700,l),
(511,172,l),
(252,700,l),
(146,700,l),
(23,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
15 2 2 4 0 1 76 14 1 4 1 75 1 1 0 0 33 77 0 4 4 34 77 0 3 3 2 97 0 2 2 38 2 78 21 33 34 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 695;
},
{
anchors = (
{
name = bottom;
pos = (301,0);
},
{
name = top;
pos = (425,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(115,0,l),
(215,567,l),
(488,0,l),
(474,-80,ls),
(467,-117,o),
(429,-148,o),
(392,-148,qs),
(353,-148,l),
(340,-220,l),
(392,-220,ls),
(462,-220,o),
(544,-153,o),
(557,-82,qs),
(695,700,l),
(611,700,l),
(512,133,l),
(237,700,l),
(154,700,l),
(31,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
16 2 2 4 0 1 76 15 1 4 1 75 1 1 0 0 33 77 0 4 4 34 77 0 3 3 2 97 0 2 2 38 2 78 21 33 35 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 689;
},
{
anchors = (
{
name = bottom;
pos = (305,0);
},
{
name = top;
pos = (429,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(133,0,l),
(224,514,l),
(477,0,l),
(466,-63,ls),
(460,-96,o),
(425,-123,o),
(391,-123,qs),
(360,-123,l),
(343,-220,l),
(392,-220,ls),
(552,-220,o),
(579,-63,qs),
(714,700,l),
(600,700,l),
(510,185,l),
(256,700,l),
(143,700,l),
(20,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
15 2 2 4 0 1 76 14 1 4 1 75 1 1 0 0 33 77 0 4 4 34 77 0 3 3 2 97 0 2 2 38 2 78 21 33 34 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 697;
},
{
anchors = (
{
name = bottom;
pos = (307,0);
},
{
name = top;
pos = (431,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(142,0,l),
(228,488,l),
(472,0,l),
(462,-54,ls),
(456,-85,o),
(423,-111,o),
(391,-111,qs),
(364,-111,l),
(345,-220,l),
(392,-220,ls),
(561,-220,o),
(590,-54,qs),
(723,700,l),
(595,700,l),
(509,211,l),
(266,700,l),
(138,700,l),
(15,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
15 2 2 4 0 1 76 14 1 4 1 75 1 1 0 0 33 77 0 4 4 34 77 0 3 3 2 97 0 2 2 38 2 78 21 33 34 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 701;
}
);
note = Eng;
unicode = 330;
},
{
glyphname = O;
kernLeft = C;
kernRight = B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (350,0);
},
{
name = ogonek;
pos = (430,10);
},
{
name = top;
pos = (474,700);
},
{
name = topright;
pos = (854,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(464,-12,o),
(656,101,o),
(770,296,o),
(770,413,qs),
(770,490,o),
(703,627,o),
(569,712,o),
(473,712,qs),
(359,712,o),
(167,599,o),
(54,404,o),
(54,288,qs),
(54,211,o),
(122,73,o),
(256,-12,o),
(351,-12,qs)
);
},
{
closed = 1;
nodes = (
(273,83,o),
(164,200,o),
(164,296,qs),
(164,384,o),
(243,531,o),
(378,617,o),
(459,617,qs),
(552,617,o),
(660,502,o),
(660,406,qs),
(660,318,o),
(581,170,o),
(446,83,o),
(365,83,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 39 77 5 1 3 3 1 97 4 1 1 1 40 1 78 16 16 0 0 16 29 16 28 23 21 0 15 0 14 38 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 787;
},
{
anchors = (
{
name = bottom;
pos = (352,0);
},
{
name = ogonek;
pos = (427,10);
},
{
name = top;
pos = (476,700);
},
{
name = topright;
pos = (853,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(461,-12,o),
(653,101,o),
(768,297,o),
(768,415,qs),
(768,491,o),
(704,627,o),
(572,712,o),
(476,712,qs),
(363,712,o),
(172,598,o),
(59,402,o),
(59,286,qs),
(59,212,o),
(123,75,o),
(255,-12,o),
(351,-12,qs)
);
},
{
closed = 1;
nodes = (
(297,62,o),
(199,120,o),
(146,224,o),
(146,291,qs),
(146,387,o),
(231,545,o),
(377,637,o),
(464,637,qs),
(530,637,o),
(628,580,o),
(681,478,o),
(681,411,qs),
(681,316,o),
(596,155,o),
(450,62,o),
(363,62,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 39 77 5 1 3 3 1 97 4 1 1 1 40 1 78 16 16 0 0 16 31 16 30 24 22 0 15 0 14 38 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
anchors = (
{
name = bottom;
pos = (349,0);
},
{
name = ogonek;
pos = (431,10);
},
{
name = top;
pos = (473,700);
},
{
name = topright;
pos = (854,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(464,-12,o),
(657,101,o),
(770,296,o),
(770,412,qs),
(770,489,o),
(703,627,o),
(568,712,o),
(471,712,qs),
(357,712,o),
(165,599,o),
(52,404,o),
(52,289,qs),
(52,210,o),
(122,72,o),
(257,-12,o),
(351,-12,qs)
);
},
{
closed = 1;
nodes = (
(275,90,o),
(169,204,o),
(169,298,qs),
(169,383,o),
(246,526,o),
(378,610,o),
(457,610,qs),
(548,610,o),
(653,498,o),
(653,404,qs),
(653,318,o),
(576,174,o),
(444,90,o),
(366,90,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 39 77 5 1 3 3 1 97 4 1 1 1 40 1 78 16 16 0 0 16 29 16 28 23 21 0 15 0 14 38 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 786;
},
{
anchors = (
{
name = bottom;
pos = (348,0);
},
{
name = ogonek;
pos = (433,10);
},
{
name = top;
pos = (472,700);
},
{
name = topright;
pos = (854,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(466,-12,o),
(659,101,o),
(771,295,o),
(771,411,qs),
(771,489,o),
(702,627,o),
(566,712,o),
(469,712,qs),
(354,712,o),
(162,599,o),
(49,405,o),
(49,290,qs),
(49,209,o),
(121,71,o),
(258,-12,o),
(351,-12,qs)
);
},
{
closed = 1;
nodes = (
(281,104,o),
(181,211,o),
(181,301,qs),
(181,381,o),
(254,517,o),
(379,597,o),
(454,597,qs),
(540,597,o),
(639,491,o),
(639,400,qs),
(639,319,o),
(566,183,o),
(441,104,o),
(367,104,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 39 77 5 1 3 3 1 97 4 1 1 1 40 1 78 16 16 0 0 16 29 16 28 23 21 0 15 0 14 38 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 784;
}
);
note = O;
unicode = 79;
},
{
glyphname = Oacute;
kernLeft = C;
kernRight = B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (350,0);
},
{
name = ogonek;
pos = (430,10);
},
{
name = top;
pos = (517,942);
},
{
name = topright;
pos = (854,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (285,0);
ref = acutecomb.case;
}
);
width = 787;
},
{
anchors = (
{
name = bottom;
pos = (352,0);
},
{
name = ogonek;
pos = (427,10);
},
{
name = top;
pos = (517,931);
},
{
name = topright;
pos = (853,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (291,0);
ref = acutecomb.case;
}
);
width = 790;
},
{
anchors = (
{
name = bottom;
pos = (349,0);
},
{
name = ogonek;
pos = (431,10);
},
{
name = top;
pos = (517,945);
},
{
name = topright;
pos = (854,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (283,0);
ref = acutecomb.case;
}
);
width = 786;
},
{
anchors = (
{
name = bottom;
pos = (348,0);
},
{
name = ogonek;
pos = (433,10);
},
{
name = top;
pos = (517,952);
},
{
name = topright;
pos = (854,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (279,0);
ref = acutecomb.case;
}
);
width = 784;
}
);
note = Oacute;
unicode = 211;
},
{
glyphname = Obreve;
kernLeft = C;
kernRight = B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (350,0);
},
{
name = ogonek;
pos = (430,10);
},
{
name = top;
pos = (511,909);
},
{
name = topright;
pos = (854,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (245,0);
ref = uni0306.case;
}
);
width = 787;
},
{
anchors = (
{
name = bottom;
pos = (352,0);
},
{
name = ogonek;
pos = (427,10);
},
{
name = top;
pos = (512,901);
},
{
name = topright;
pos = (853,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (255,0);
ref = uni0306.case;
}
);
width = 790;
},
{
anchors = (
{
name = bottom;
pos = (349,0);
},
{
name = ogonek;
pos = (431,10);
},
{
name = top;
pos = (511,912);
},
{
name = topright;
pos = (854,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (242,0);
ref = uni0306.case;
}
);
width = 786;
},
{
anchors = (
{
name = bottom;
pos = (348,0);
},
{
name = ogonek;
pos = (433,10);
},
{
name = top;
pos = (510,917);
},
{
name = topright;
pos = (854,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (235,0);
ref = uni0306.case;
}
);
width = 784;
}
);
note = Obreve;
unicode = 334;
},
{
glyphname = Ocircumflex;
kernLeft = C;
kernRight = B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (350,0);
},
{
name = ogonek;
pos = (430,10);
},
{
name = top;
pos = (511,911);
},
{
name = topright;
pos = (854,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (253,0);
ref = uni0302.case;
}
);
width = 787;
},
{
anchors = (
{
name = bottom;
pos = (352,0);
},
{
name = ogonek;
pos = (427,10);
},
{
name = top;
pos = (512,902);
},
{
name = topright;
pos = (853,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (260,0);
ref = uni0302.case;
}
);
width = 790;
},
{
anchors = (
{
name = bottom;
pos = (349,0);
},
{
name = ogonek;
pos = (431,10);
},
{
name = top;
pos = (511,913);
},
{
name = topright;
pos = (854,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (251,0);
ref = uni0302.case;
}
);
width = 786;
},
{
anchors = (
{
name = bottom;
pos = (348,0);
},
{
name = ogonek;
pos = (433,10);
},
{
name = top;
pos = (510,919);
},
{
name = topright;
pos = (854,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (246,0);
ref = uni0302.case;
}
);
width = 784;
}
);
note = Ocircumflex;
unicode = 212;
},
{
glyphname = Odieresis;
kernLeft = C;
kernRight = B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (350,0);
},
{
name = ogonek;
pos = (430,10);
},
{
name = top;
pos = (512,912);
},
{
name = topright;
pos = (854,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (223,0);
ref = uni0308.case;
}
);
width = 787;
},
{
anchors = (
{
name = bottom;
pos = (352,0);
},
{
name = ogonek;
pos = (427,10);
},
{
name = top;
pos = (509,889);
},
{
name = topright;
pos = (853,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (248,0);
ref = uni0308.case;
}
);
width = 790;
},
{
anchors = (
{
name = bottom;
pos = (349,0);
},
{
name = ogonek;
pos = (431,10);
},
{
name = top;
pos = (512,919);
},
{
name = topright;
pos = (854,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (214,0);
ref = uni0308.case;
}
);
width = 786;
},
{
anchors = (
{
name = bottom;
pos = (348,0);
},
{
name = ogonek;
pos = (433,10);
},
{
name = top;
pos = (514,934);
},
{
name = topright;
pos = (854,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (197,0);
ref = uni0308.case;
}
);
width = 784;
}
);
note = Odieresis;
unicode = 214;
},
{
glyphname = Ograve;
kernLeft = C;
kernRight = B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (350,0);
},
{
name = ogonek;
pos = (430,10);
},
{
name = top;
pos = (517,942);
},
{
name = topright;
pos = (854,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (285,0);
ref = gravecomb.case;
}
);
width = 787;
},
{
anchors = (
{
name = bottom;
pos = (352,0);
},
{
name = ogonek;
pos = (427,10);
},
{
name = top;
pos = (517,931);
},
{
name = topright;
pos = (853,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (291,0);
ref = gravecomb.case;
}
);
width = 790;
},
{
anchors = (
{
name = bottom;
pos = (349,0);
},
{
name = ogonek;
pos = (431,10);
},
{
name = top;
pos = (517,945);
},
{
name = topright;
pos = (854,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (283,0);
ref = gravecomb.case;
}
);
width = 786;
},
{
anchors = (
{
name = bottom;
pos = (348,0);
},
{
name = ogonek;
pos = (433,10);
},
{
name = top;
pos = (517,952);
},
{
name = topright;
pos = (854,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (279,0);
ref = gravecomb.case;
}
);
width = 784;
}
);
note = Ograve;
unicode = 210;
},
{
glyphname = Ohungarumlaut;
kernLeft = C;
kernRight = B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (350,0);
},
{
name = ogonek;
pos = (430,10);
},
{
name = top;
pos = (512,915);
},
{
name = topright;
pos = (854,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (232,0);
ref = uni030B.case;
}
);
width = 787;
},
{
anchors = (
{
name = bottom;
pos = (352,0);
},
{
name = ogonek;
pos = (427,10);
},
{
name = top;
pos = (511,902);
},
{
name = topright;
pos = (853,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (250,0);
ref = uni030B.case;
}
);
width = 790;
},
{
anchors = (
{
name = bottom;
pos = (349,0);
},
{
name = ogonek;
pos = (431,10);
},
{
name = top;
pos = (512,919);
},
{
name = topright;
pos = (854,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (226,0);
ref = uni030B.case;
}
);
width = 786;
},
{
anchors = (
{
name = bottom;
pos = (348,0);
},
{
name = ogonek;
pos = (433,10);
},
{
name = top;
pos = (512,927);
},
{
name = topright;
pos = (854,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (214,0);
ref = uni030B.case;
}
);
width = 784;
}
);
note = Ohungarumlaut;
unicode = 336;
},
{
glyphname = Omacron;
kernLeft = C;
kernRight = B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (350,0);
},
{
name = ogonek;
pos = (430,10);
},
{
name = top;
pos = (504,867);
},
{
name = topright;
pos = (854,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (214,0);
ref = uni0304.case;
}
);
width = 787;
},
{
anchors = (
{
name = bottom;
pos = (352,0);
},
{
name = ogonek;
pos = (427,10);
},
{
name = top;
pos = (504,859);
},
{
name = topright;
pos = (853,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (221,0);
ref = uni0304.case;
}
);
width = 790;
},
{
anchors = (
{
name = bottom;
pos = (349,0);
},
{
name = ogonek;
pos = (431,10);
},
{
name = top;
pos = (503,869);
},
{
name = topright;
pos = (854,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (211,0);
ref = uni0304.case;
}
);
width = 786;
},
{
anchors = (
{
name = bottom;
pos = (348,0);
},
{
name = ogonek;
pos = (433,10);
},
{
name = top;
pos = (503,874);
},
{
name = topright;
pos = (854,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (206,0);
ref = uni0304.case;
}
);
width = 784;
}
);
note = Omacron;
unicode = 332;
},
{
glyphname = Oslash;
kernLeft = Oslash;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(462,-12,o),
(654,102,o),
(767,297,o),
(767,413,qs),
(767,465,o),
(739,557,o),
(713,593,q),
(826,700,l),
(720,700,l),
(663,646,l),
(625,678,o),
(526,712,o),
(470,712,qs),
(356,712,o),
(163,599,o),
(51,404,o),
(51,288,qs),
(51,189,o),
(102,112,q),
(-14,0,l),
(92,0,l),
(152,57,l),
(232,-12,o),
(348,-12,qs)
);
},
{
closed = 1;
nodes = (
(281,83,o),
(228,130,q),
(633,516,l),
(657,470,o),
(657,406,qs),
(657,318,o),
(577,169,o),
(442,83,o),
(362,83,qs)
);
},
{
closed = 1;
nodes = (
(183,189,l),
(161,234,o),
(161,296,qs),
(161,382,o),
(239,530,o),
(374,617,o),
(456,617,qs),
(537,617,o),
(587,574,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
13 1 5 1 41 40 30 29 16 4 6 4 5 1 1 0 4 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
13 1 5 2 41 40 30 29 16 4 6 4 5 1 1 0 4 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 1 97 2 1 1 1 39 77 7 1 4 4 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 33 77 0 5 5 1 97 0 1 1 39 77 0 0 0 34 77 7 1 4 4 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
24 24 0 0 35 33 24 32 24 31 0 23 0 22 19 38 18 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 777;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(463,-12,o),
(655,103,o),
(767,299,o),
(767,415,qs),
(767,518,o),
(715,594,q),
(827,700,l),
(738,700,l),
(674,640,l),
(635,675,o),
(534,712,o),
(475,712,qs),
(361,712,o),
(169,597,o),
(57,401,o),
(57,286,qs),
(57,236,o),
(84,144,o),
(109,108,q),
(-5,0,l),
(85,0,l),
(150,61,l),
(229,-12,o),
(349,-12,qs)
);
},
{
closed = 1;
nodes = (
(270,62,o),
(211,118,q),
(651,534,l),
(680,481,o),
(680,411,qs),
(680,315,o),
(593,155,o),
(446,62,o),
(361,62,qs)
);
},
{
closed = 1;
nodes = (
(173,168,l),
(144,221,o),
(144,291,qs),
(144,383,o),
(227,542,o),
(373,637,o),
(463,637,qs),
(555,637,o),
(613,582,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
14 1 5 1 41 40 30 29 17 4 6 4 5 1 1 0 4 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
14 1 5 2 41 40 30 29 17 4 6 4 5 1 1 0 4 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 1 97 2 1 1 1 39 77 7 1 4 4 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 33 77 0 5 5 1 97 0 1 1 39 77 0 0 0 34 77 7 1 4 4 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
24 24 0 0 35 33 24 32 24 31 0 23 0 22 19 39 18 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 787;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(462,-12,o),
(654,102,o),
(766,296,o),
(766,412,qs),
(766,517,o),
(712,593,q),
(825,700,l),
(714,700,l),
(659,648,l),
(622,679,o),
(524,712,o),
(468,712,qs),
(354,712,o),
(161,599,o),
(49,405,o),
(49,289,qs),
(49,187,o),
(100,113,q),
(-17,0,l),
(94,0,l),
(152,55,l),
(191,23,o),
(290,-12,o),
(347,-12,qs)
);
},
{
closed = 1;
nodes = (
(285,89,o),
(233,133,q),
(627,510,l),
(649,466,o),
(649,404,qs),
(649,318,o),
(572,173,o),
(440,89,o),
(362,89,qs)
);
},
{
closed = 1;
nodes = (
(186,195,l),
(166,241,o),
(166,298,qs),
(166,382,o),
(242,525,o),
(374,610,o),
(454,610,qs),
(529,610,o),
(578,571,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
14 1 5 1 41 40 30 29 17 5 6 4 5 2 1 0 4 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
14 1 5 2 41 40 30 29 17 5 6 4 5 2 1 0 4 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 1 97 2 1 1 1 39 77 7 1 4 4 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 33 77 0 5 5 1 97 0 1 1 39 77 0 0 0 34 77 7 1 4 4 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
24 24 0 0 35 33 24 32 24 31 0 23 0 22 19 38 19 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 773;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(461,-12,o),
(654,101,o),
(766,295,o),
(766,411,qs),
(766,517,o),
(711,592,q),
(824,700,l),
(702,700,l),
(652,652,l),
(615,681,o),
(519,712,o),
(464,712,qs),
(350,712,o),
(158,600,o),
(45,407,o),
(45,290,qs),
(45,190,o),
(95,115,q),
(-23,0,l),
(99,0,l),
(153,52,l),
(235,-12,o),
(346,-12,qs)
);
},
{
closed = 1;
nodes = (
(293,103,o),
(244,141,q),
(615,498,l),
(634,457,o),
(634,400,qs),
(634,319,o),
(561,183,o),
(436,103,o),
(362,103,qs)
);
},
{
closed = 1;
nodes = (
(193,209,l),
(177,248,o),
(177,301,qs),
(177,381,o),
(249,517,o),
(374,597,o),
(449,597,qs),
(515,597,o),
(561,565,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
13 1 5 1 40 39 29 28 16 4 6 4 5 1 1 0 4 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
13 1 5 2 40 39 29 28 16 4 6 4 5 1 1 0 4 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 1 97 2 1 1 1 39 77 7 1 4 4 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 33 77 0 5 5 1 97 0 1 1 39 77 0 0 0 34 77 7 1 4 4 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
23 23 0 0 34 32 23 31 23 30 0 22 0 21 19 38 18 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 766;
}
);
note = Oslash;
unicode = 216;
},
{
glyphname = Otilde;
kernLeft = C;
kernRight = B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (350,0);
},
{
name = ogonek;
pos = (430,10);
},
{
name = top;
pos = (504,868);
},
{
name = topright;
pos = (854,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (231,0);
ref = tildecomb.case;
}
);
width = 787;
},
{
anchors = (
{
name = bottom;
pos = (352,0);
},
{
name = ogonek;
pos = (427,10);
},
{
name = top;
pos = (504,859);
},
{
name = topright;
pos = (853,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (245,0);
ref = tildecomb.case;
}
);
width = 790;
},
{
anchors = (
{
name = bottom;
pos = (349,0);
},
{
name = ogonek;
pos = (431,10);
},
{
name = top;
pos = (503,871);
},
{
name = topright;
pos = (854,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (226,0);
ref = tildecomb.case;
}
);
width = 786;
},
{
anchors = (
{
name = bottom;
pos = (348,0);
},
{
name = ogonek;
pos = (433,10);
},
{
name = top;
pos = (503,877);
},
{
name = topright;
pos = (854,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (216,0);
ref = tildecomb.case;
}
);
width = 784;
}
);
note = Otilde;
unicode = 213;
},
{
glyphname = OE;
kernLeft = C;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (511,0);
},
{
name = top;
pos = (635,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(412,-12,o),
(554,52,o),
(606,110,q),
(586,0,l),
(1007,0,l),
(1023,89,l),
(708,89,l),
(748,317,l),
(1025,317,l),
(1041,406,l),
(764,406,l),
(800,611,l),
(1115,611,l),
(1131,700,l),
(710,700,l),
(690,588,l),
(659,647,o),
(534,712,o),
(456,712,qs),
(350,712,o),
(165,600,o),
(56,409,o),
(56,297,qs),
(56,222,o),
(117,80,o),
(244,-12,o),
(338,-12,qs)
);
},
{
closed = 1;
nodes = (
(303,83,o),
(215,140,o),
(167,241,o),
(167,304,qs),
(167,387,o),
(244,532,o),
(375,617,o),
(450,617,qs),
(540,617,o),
(652,507,o),
(652,410,qs),
(652,322,o),
(574,172,o),
(441,83,o),
(361,83,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 3 2 23 1 5 4 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 1 1 0 0 39 77 11 9 2 5 5 6 97 10 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 0 0 0 39 77 8 1 2 2 1 95 0 1 1 33 77 11 9 2 5 5 6 95 0 6 6 34 77 11 9 2 5 5 7 97 10 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 3 0 4 5 3 4 103 0 8 8 0 97 0 0 0 39 77 0 2 2 1 95 0 1 1 33 77 0 5 5 6 95 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
27 27 0 0 27 41 27 40 34 32 0 26 0 25 17 17 17 17 17 19 38 12 8 29
CALL[ ]	/* CallFunction */";
};
width = 1108;
},
{
anchors = (
{
name = bottom;
pos = (514,0);
},
{
name = top;
pos = (638,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(423,-12,o),
(571,58,o),
(627,124,q),
(605,0,l),
(1008,0,l),
(1020,69,l),
(701,69,l),
(745,319,l),
(1034,319,l),
(1046,387,l),
(757,387,l),
(800,631,l),
(1119,631,l),
(1132,700,l),
(729,700,l),
(707,575,l),
(674,640,o),
(545,712,o),
(463,712,qs),
(357,712,o),
(173,600,o),
(62,410,o),
(62,298,qs),
(62,223,o),
(123,81,o),
(249,-12,o),
(342,-12,qs)
);
},
{
closed = 1;
nodes = (
(297,62,o),
(202,124,o),
(150,234,o),
(150,303,qs),
(150,392,o),
(234,546,o),
(374,637,o),
(454,637,qs),
(516,637,o),
(614,586,o),
(671,486,o),
(671,415,qs),
(671,319,o),
(588,157,o),
(444,62,o),
(358,62,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 3 2 23 1 5 4 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 1 1 0 0 39 77 11 9 2 5 5 6 97 10 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 0 0 0 39 77 8 1 2 2 1 95 0 1 1 33 77 11 9 2 5 5 6 95 0 6 6 34 77 11 9 2 5 5 7 97 10 1 7 7 40 7 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 0 0 0 39 77 8 1 2 2 1 95 0 1 1 33 77 0 5 5 6 95 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 3 0 4 5 3 4 103 0 8 8 0 97 0 0 0 39 77 0 2 2 1 95 0 1 1 33 77 0 5 5 6 95 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
27 27 0 0 27 42 27 41 35 33 0 26 0 25 17 17 17 17 17 19 38 12 8 29
CALL[ ]	/* CallFunction */";
};
width = 1115;
},
{
anchors = (
{
name = bottom;
pos = (509,0);
},
{
name = top;
pos = (633,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(408,-12,o),
(548,50,o),
(598,105,q),
(580,0,l),
(1007,0,l),
(1024,96,l),
(710,96,l),
(749,316,l),
(1022,316,l),
(1039,412,l),
(766,412,l),
(799,604,l),
(1113,604,l),
(1131,700,l),
(704,700,l),
(684,592,l),
(654,648,o),
(530,712,o),
(454,712,qs),
(347,712,o),
(163,600,o),
(54,409,o),
(54,297,qs),
(54,222,o),
(115,80,o),
(242,-12,o),
(336,-12,qs)
);
},
{
closed = 1;
nodes = (
(305,89,o),
(219,145,o),
(172,244,o),
(172,304,qs),
(172,386,o),
(247,526,o),
(375,610,o),
(449,610,qs),
(506,610,o),
(595,562,o),
(646,471,o),
(646,408,qs),
(646,323,o),
(570,176,o),
(439,89,o),
(361,89,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 3 2 23 1 5 4 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 1 1 0 0 39 77 11 9 2 5 5 6 97 10 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 0 0 0 39 77 8 1 2 2 1 95 0 1 1 33 77 11 9 2 5 5 6 95 0 6 6 34 77 11 9 2 5 5 7 97 10 1 7 7 40 7 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 0 0 0 39 77 8 1 2 2 1 95 0 1 1 33 77 0 5 5 6 95 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 3 0 4 5 3 4 103 0 8 8 0 97 0 0 0 39 77 0 2 2 1 95 0 1 1 33 77 0 5 5 6 95 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
27 27 0 0 27 42 27 41 35 33 0 26 0 25 17 17 17 17 17 19 38 12 8 29
CALL[ ]	/* CallFunction */";
};
width = 1106;
},
{
anchors = (
{
name = bottom;
pos = (507,0);
},
{
name = top;
pos = (631,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(401,-12,o),
(537,45,o),
(584,96,q),
(567,0,l),
(1006,0,l),
(1026,109,l),
(715,109,l),
(751,315,l),
(1016,315,l),
(1035,424,l),
(770,424,l),
(799,591,l),
(1110,591,l),
(1130,700,l),
(691,700,l),
(673,600,l),
(643,652,o),
(522,712,o),
(449,712,qs),
(342,712,o),
(158,600,o),
(50,408,o),
(50,296,qs),
(50,221,o),
(111,80,o),
(239,-12,o),
(333,-12,qs)
);
},
{
closed = 1;
nodes = (
(309,103,o),
(227,156,o),
(183,248,o),
(183,305,qs),
(183,382,o),
(254,517,o),
(375,597,o),
(446,597,qs),
(529,597,o),
(633,493,o),
(633,405,qs),
(633,324,o),
(561,186,o),
(437,103,o),
(363,103,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
10 1 2 0 23 1 6 5 2 76
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
10 1 2 1 23 1 6 5 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
10 1 8 1 23 1 6 9 2 76
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 1 1 0 0 39 77 11 9 2 5 5 6 97 10 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 0 0 0 39 77 8 1 2 2 1 95 0 1 1 33 77 11 9 2 5 5 6 95 0 6 6 34 77 11 9 2 5 5 7 97 10 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 3 0 4 5 3 4 103 0 8 8 0 97 0 0 0 39 77 0 2 2 1 95 0 1 1 33 77 0 5 5 6 95 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
27 27 0 0 27 41 27 40 34 32 0 26 0 25 17 17 17 17 17 19 38 12 8 29
CALL[ ]	/* CallFunction */";
};
width = 1101;
}
);
note = OE;
unicode = 338;
},
{
glyphname = P;
kernRight = P;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,0,l),
(179,286,l),
(318,286,ls),
(402,286,o),
(530,342,o),
(602,449,o),
(602,522,qs),
(602,603,o),
(488,700,o),
(391,700,qs),
(146,700,l),
(23,0,l)
);
},
{
closed = 1;
nodes = (
(195,376,l),
(236,611,l),
(372,611,ls),
(431,611,o),
(492,557,o),
(492,511,qs),
(492,444,o),
(409,376,o),
(331,376,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 4 0 1 2 4 1 103 0 3 3 0 95 0 0 0 33 77 0 2 2 34 2 78 12 12 12 20 12 19 37 17 37 32 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 586;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(115,0,l),
(167,292,l),
(313,292,ls),
(392,292,o),
(519,345,o),
(592,450,o),
(592,525,qs),
(592,606,o),
(480,700,o),
(384,700,qs),
(154,700,l),
(31,0,l)
);
},
{
closed = 1;
nodes = (
(179,363,l),
(226,630,l),
(370,630,ls),
(438,630,o),
(504,570,o),
(504,519,qs),
(504,441,o),
(411,363,o),
(323,363,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 4 0 1 2 4 1 103 0 3 3 0 95 0 0 0 33 77 0 2 2 34 2 78 12 12 12 20 12 19 37 17 37 32 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 583;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(133,0,l),
(183,283,l),
(319,283,ls),
(404,283,o),
(534,340,o),
(605,448,o),
(605,520,qs),
(605,602,o),
(490,700,o),
(393,700,qs),
(143,700,l),
(20,0,l)
);
},
{
closed = 1;
nodes = (
(200,380,l),
(239,604,l),
(373,604,ls),
(428,604,o),
(488,552,o),
(488,508,qs),
(488,445,o),
(409,380,o),
(334,380,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 4 0 1 2 4 1 103 0 3 3 0 95 0 0 0 33 77 0 2 2 34 2 78 12 12 12 20 12 19 37 17 37 32 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 587;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(142,0,l),
(191,279,l),
(322,279,ls),
(410,279,o),
(541,339,o),
(612,447,o),
(612,518,qs),
(612,572,o),
(559,655,o),
(461,700,o),
(397,700,qs),
(138,700,l),
(14,0,l)
);
},
{
closed = 1;
nodes = (
(211,388,l),
(246,591,l),
(374,591,ls),
(424,591,o),
(480,544,o),
(480,502,qs),
(480,446,o),
(408,388,o),
(339,388,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 4 0 1 2 4 1 103 0 3 3 0 95 0 0 0 33 77 0 2 2 34 2 78 13 13 13 21 13 20 37 17 38 32 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 589;
}
);
note = P;
unicode = 80;
},
{
glyphname = Thorn;
kernRight = Thorn;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,0,l),
(154,142,l),
(293,142,ls),
(374,142,o),
(503,198,o),
(577,307,o),
(577,383,qs),
(577,465,o),
(466,560,o),
(366,560,qs),
(228,560,l),
(252,700,l),
(146,700,l),
(23,0,l)
);
},
{
closed = 1;
nodes = (
(169,228,l),
(213,472,l),
(347,472,ls),
(410,472,o),
(468,426,o),
(468,380,qs),
(468,309,o),
(381,228,o),
(304,228,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 0 4 5 1 4 104 6 1 5 0 2 3 5 2 103 0 0 0 33 77 0 3 3 34 3 78 14 14 14 22 14 21 37 17 37 33 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 586;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(115,0,l),
(141,147,l),
(287,147,ls),
(367,147,o),
(493,202,o),
(566,309,o),
(566,383,qs),
(566,460,o),
(462,554,o),
(359,554,qs),
(213,554,l),
(238,700,l),
(154,700,l),
(31,0,l)
);
},
{
closed = 1;
nodes = (
(153,217,l),
(201,484,l),
(345,484,ls),
(415,484,o),
(479,433,o),
(479,382,qs),
(479,304,o),
(384,217,o),
(298,217,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 0 4 5 1 4 104 6 1 5 0 2 3 5 2 103 0 0 0 33 77 0 3 3 34 3 78 14 14 14 22 14 21 37 17 37 33 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 582;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(134,0,l),
(158,140,l),
(294,140,ls),
(375,140,o),
(506,196,o),
(581,306,o),
(581,382,qs),
(581,466,o),
(467,561,o),
(368,561,qs),
(232,561,l),
(257,700,l),
(143,700,l),
(20,0,l)
);
},
{
closed = 1;
nodes = (
(174,232,l),
(216,468,l),
(347,468,ls),
(464,468,o),
(464,379,qs),
(464,309,o),
(380,232,o),
(305,232,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 0 4 5 1 4 104 6 1 5 0 2 3 5 2 103 0 0 0 33 77 0 3 3 34 3 78 14 14 14 21 14 20 36 17 37 33 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 587;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(143,0,l),
(167,136,l),
(298,136,ls),
(380,136,o),
(512,193,o),
(588,304,o),
(588,382,qs),
(588,469,o),
(469,565,o),
(373,565,qs),
(242,565,l),
(266,700,l),
(138,700,l),
(15,0,l)
);
},
{
closed = 1;
nodes = (
(185,239,l),
(224,460,l),
(348,460,ls),
(456,460,o),
(456,377,qs),
(456,312,o),
(378,239,o),
(309,239,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 0 4 5 1 4 104 6 1 5 0 2 3 5 2 103 0 0 0 33 77 0 3 3 34 3 78 14 14 14 21 14 20 36 17 37 33 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 590;
}
);
note = Thorn;
unicode = 222;
},
{
glyphname = Q;
kernLeft = C;
kernRight = Q;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(412,-12,o),
(527,23,o),
(577,55,q),
(634,-11,l),
(714,59,l),
(658,123,l),
(711,181,o),
(771,330,o),
(771,413,qs),
(771,490,o),
(704,627,o),
(570,712,o),
(474,712,qs),
(360,712,o),
(168,599,o),
(55,404,o),
(55,288,qs),
(55,211,o),
(123,73,o),
(257,-12,o),
(352,-12,qs)
);
},
{
closed = 1;
nodes = (
(165,384,o),
(244,531,o),
(379,617,o),
(460,617,qs),
(553,617,o),
(661,502,o),
(661,406,qs),
(661,347,o),
(625,241,o),
(592,199,q),
(508,299,l),
(428,229,l),
(516,127,l),
(447,83,o),
(366,83,qs),
(274,83,o),
(165,200,o),
(165,296,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
28 27 26 25 14 5 2 3 17 16 15 3 1 2 2 76 0 3 3 0 97 0 0 0 39 77 0 2 2 1 97 4 1 1 1 40 1 78 0 0 35 33 24 22 0 20 0 19 38 5 8 23
CALL[ ]	/* CallFunction */";
};
width = 796;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(413,-12,o),
(528,23,o),
(578,56,q),
(637,-11,l),
(696,41,l),
(640,106,l),
(701,165,o),
(770,325,o),
(770,415,qs),
(770,491,o),
(706,627,o),
(574,712,o),
(478,712,qs),
(365,712,o),
(174,598,o),
(61,402,o),
(61,286,qs),
(61,212,o),
(125,75,o),
(257,-12,o),
(353,-12,qs)
);
},
{
closed = 1;
nodes = (
(148,387,o),
(233,545,o),
(379,637,o),
(466,637,qs),
(532,637,o),
(630,580,o),
(683,478,o),
(683,411,qs),
(683,339,o),
(634,212,o),
(590,164,q),
(503,267,l),
(443,215,l),
(531,113,l),
(455,62,o),
(365,62,qs),
(299,62,o),
(201,120,o),
(148,224,o),
(148,291,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
29 28 27 26 14 5 2 3 17 16 15 3 1 2 2 76 0 3 3 0 97 0 0 0 39 77 0 2 2 1 97 4 1 1 1 40 1 78 0 0 37 35 25 23 0 20 0 19 38 5 8 23
CALL[ ]	/* CallFunction */";
};
width = 795;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(473,-12,o),
(577,54,q),
(633,-12,l),
(719,64,l),
(663,129,l),
(714,186,o),
(771,332,o),
(771,412,qs),
(771,489,o),
(704,627,o),
(569,712,o),
(472,712,qs),
(358,712,o),
(165,599,o),
(53,405,o),
(53,289,qs),
(53,210,o),
(123,72,o),
(258,-12,o),
(352,-12,qs)
);
},
{
closed = 1;
nodes = (
(170,383,o),
(247,526,o),
(379,610,o),
(458,610,qs),
(549,610,o),
(654,498,o),
(654,404,qs),
(654,349,o),
(622,251,o),
(592,211,q),
(509,310,l),
(422,234,l),
(510,131,l),
(442,89,o),
(366,89,qs),
(276,89,o),
(170,204,o),
(170,298,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
27 26 25 24 14 5 2 3 17 15 2 1 2 2 76 16 1 1 73 0 3 3 0 97 0 0 0 39 77 0 2 2 1 97 4 1 1 1 40 1 78 0 0 34 32 23 21 0 19 0 18 38 5 8 23
CALL[ ]	/* CallFunction */";
};
width = 796;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(473,-12,o),
(576,53,q),
(631,-12,l),
(731,76,l),
(675,140,l),
(721,196,o),
(771,335,o),
(771,411,qs),
(771,489,o),
(702,627,o),
(566,712,o),
(469,712,qs),
(354,712,o),
(162,599,o),
(49,405,o),
(49,290,qs),
(49,209,o),
(121,71,o),
(258,-12,o),
(351,-12,qs)
);
},
{
closed = 1;
nodes = (
(181,381,o),
(254,517,o),
(379,597,o),
(454,597,qs),
(540,597,o),
(639,491,o),
(639,400,qs),
(639,309,o),
(593,234,q),
(512,331,l),
(412,243,l),
(500,140,l),
(436,103,o),
(367,103,qs),
(281,103,o),
(181,211,o),
(181,301,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
27 26 25 24 14 5 2 3 17 15 2 1 2 2 76 16 1 1 73 0 3 3 0 97 0 0 0 39 77 0 2 2 1 97 4 1 1 1 40 1 78 0 0 33 31 23 21 0 19 0 18 38 5 8 23
CALL[ ]	/* CallFunction */";
};
width = 796;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
kernRight = R;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = top;
pos = (377,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,0,l),
(182,303,l),
(279,303,l),
(401,0,l),
(529,0,l),
(388,321,l),
(482,340,o),
(577,450,o),
(577,532,qs),
(577,609,o),
(467,700,o),
(371,700,qs),
(146,700,l),
(22,0,l)
);
},
{
closed = 1;
nodes = (
(198,393,l),
(236,611,l),
(352,611,ls),
(412,611,o),
(468,560,o),
(468,519,qs),
(468,454,o),
(392,393,o),
(314,393,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
7 1 2 5 1 76 6 1 5 0 2 1 5 2 103 0 4 4 0 95 0 0 0 33 77 3 1 1 1 34 1 78 14 14 14 22 14 21 37 17 17 22 32 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 595;
},
{
anchors = (
{
name = bottom;
pos = (250,0);
},
{
name = top;
pos = (374,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(114,0,l),
(169,310,l),
(285,310,l),
(410,0,l),
(514,0,l),
(371,326,l),
(466,342,o),
(564,448,o),
(564,537,qs),
(564,613,o),
(457,700,o),
(361,700,qs),
(154,700,l),
(30,0,l)
);
},
{
closed = 1;
nodes = (
(181,381,l),
(225,630,l),
(346,630,ls),
(414,630,o),
(478,576,o),
(478,529,qs),
(478,451,o),
(391,381,o),
(302,381,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
7 1 2 5 1 76 6 1 5 0 2 1 5 2 103 0 4 4 0 95 0 0 0 33 77 3 1 1 1 34 1 78 14 14 14 22 14 21 37 17 17 22 32 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = top;
pos = (377,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(133,0,l),
(186,300,l),
(276,300,l),
(398,0,l),
(533,0,l),
(393,319,l),
(487,339,o),
(581,450,o),
(581,530,qs),
(581,608,o),
(470,700,o),
(374,700,qs),
(143,700,l),
(19,0,l)
);
},
{
closed = 1;
nodes = (
(203,396,l),
(239,604,l),
(354,604,ls),
(412,604,o),
(464,555,o),
(464,516,qs),
(464,454,o),
(393,396,o),
(318,396,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
7 1 2 5 1 76 6 1 5 0 2 1 5 2 103 0 4 4 0 95 0 0 0 33 77 3 1 1 1 34 1 78 14 14 14 22 14 21 37 17 17 22 32 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 596;
},
{
anchors = (
{
name = bottom;
pos = (255,0);
},
{
name = top;
pos = (379,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(142,0,l),
(194,295,l),
(272,295,l),
(392,0,l),
(543,0,l),
(404,316,l),
(497,338,o),
(589,450,o),
(589,527,qs),
(589,605,o),
(477,700,o),
(381,700,qs),
(138,700,l),
(14,0,l)
);
},
{
closed = 1;
nodes = (
(214,404,l),
(246,591,l),
(358,591,ls),
(410,591,o),
(457,544,o),
(457,509,qs),
(457,456,o),
(394,404,o),
(326,404,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
7 1 2 5 1 76 6 1 5 0 2 1 5 2 103 0 4 4 0 95 0 0 0 33 77 3 1 1 1 34 1 78 14 14 14 22 14 21 37 17 17 22 32 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = R;
unicode = 82;
},
{
glyphname = Racute;
kernRight = R;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = top;
pos = (420,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (188,0);
ref = acutecomb.case;
}
);
width = 595;
},
{
anchors = (
{
name = bottom;
pos = (250,0);
},
{
name = top;
pos = (415,931);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (189,0);
ref = acutecomb.case;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = top;
pos = (421,945);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (187,0);
ref = acutecomb.case;
}
);
width = 596;
},
{
anchors = (
{
name = bottom;
pos = (255,0);
},
{
name = top;
pos = (424,952);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (186,0);
ref = acutecomb.case;
}
);
width = 597;
}
);
note = Racute;
unicode = 340;
},
{
glyphname = Rcaron;
kernRight = R;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = top;
pos = (413,910);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (155,0);
ref = uni030C.case;
}
);
width = 595;
},
{
anchors = (
{
name = bottom;
pos = (250,0);
},
{
name = top;
pos = (409,901);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (156,0);
ref = uni030C.case;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = top;
pos = (414,912);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (154,0);
ref = uni030C.case;
}
);
width = 596;
},
{
anchors = (
{
name = bottom;
pos = (255,0);
},
{
name = top;
pos = (417,918);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (153,0);
ref = uni030C.case;
}
);
width = 597;
}
);
note = Rcaron;
unicode = 344;
},
{
glyphname = S;
kernLeft = S;
kernRight = S;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (250,0);
},
{
name = top;
pos = (374,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,-12,o),
(467,44,o),
(536,147,o),
(536,215,qs),
(536,337,o),
(385,393,qs),
(357,403,ls),
(312,419,o),
(260,443,o),
(243,459,qs),
(220,479,o),
(220,513,qs),
(220,561,o),
(291,622,o),
(349,622,qs),
(400,622,o),
(457,570,o),
(457,532,qs),
(457,520,o),
(456,514,q),
(568,514,l),
(571,531,o),
(571,545,qs),
(571,620,o),
(458,712,o),
(365,712,qs),
(289,712,o),
(172,658,o),
(107,559,o),
(107,495,qs),
(107,440,o),
(174,357,o),
(240,333,qs),
(279,319,ls),
(331,301,o),
(387,275,o),
(421,234,o),
(421,202,qs),
(421,145,o),
(345,77,o),
(277,77,qs),
(218,77,o),
(146,138,o),
(146,187,qs),
(146,202,o),
(148,211,q),
(36,211,l),
(32,194,o),
(32,171,qs),
(32,116,o),
(89,34,o),
(195,-12,o),
(265,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 39 77 0 1 1 5 97 6 1 5 5 40 5 78 0 0 0 52 0 51 36 20 45 36 21 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 588;
},
{
anchors = (
{
name = bottom;
pos = (252,0);
},
{
name = top;
pos = (376,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(347,-12,o),
(466,44,o),
(532,145,o),
(532,211,qs),
(532,329,o),
(387,384,qs),
(375,389,o),
(351,397,qs),
(306,412,o),
(251,437,o),
(232,455,qs),
(207,477,o),
(207,515,qs),
(207,570,o),
(289,640,o),
(354,640,qs),
(413,640,o),
(477,579,o),
(477,537,qs),
(477,524,o),
(476,518,q),
(563,518,l),
(566,535,o),
(566,549,qs),
(566,596,o),
(517,670,o),
(426,712,o),
(366,712,qs),
(293,712,o),
(180,660,o),
(118,564,o),
(118,502,qs),
(118,448,o),
(184,366,o),
(249,342,qs),
(264,336,o),
(294,326,qs),
(345,309,o),
(404,281,o),
(442,236,o),
(442,201,qs),
(442,136,o),
(357,59,o),
(278,59,qs),
(210,59,o),
(128,128,o),
(128,183,qs),
(128,197,o),
(131,210,q),
(43,210,l),
(39,193,o),
(39,170,qs),
(39,116,o),
(95,34,o),
(200,-12,o),
(269,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 39 77 0 1 1 5 97 6 1 5 5 40 5 78 0 0 0 55 0 54 36 21 46 36 21 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 591;
},
{
anchors = (
{
name = bottom;
pos = (249,0);
},
{
name = top;
pos = (373,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(343,-12,o),
(467,45,o),
(537,148,o),
(537,216,qs),
(537,281,o),
(454,370,o),
(384,395,qs),
(358,405,ls),
(313,421,o),
(263,444,o),
(246,460,qs),
(224,480,o),
(224,512,qs),
(224,558,o),
(291,616,o),
(347,616,qs),
(396,616,o),
(450,566,o),
(450,530,qs),
(450,519,o),
(449,513,q),
(570,513,l),
(572,535,o),
(572,544,qs),
(572,620,o),
(459,712,o),
(365,712,qs),
(288,712,o),
(169,657,o),
(103,558,o),
(103,493,qs),
(103,437,o),
(171,353,o),
(237,329,qs),
(271,317,ls),
(325,298,o),
(380,273,o),
(414,233,o),
(414,202,qs),
(414,148,o),
(341,83,o),
(277,83,qs),
(220,83,o),
(151,141,o),
(151,188,q),
(153,211,l),
(33,211,l),
(30,192,o),
(30,171,qs),
(30,88,o),
(157,-12,o),
(263,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
6 1 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 4 0 4 3 114 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 39 77 0 1 1 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 39 77 0 1 1 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 51 0 50 36 20 45 35 20 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 586;
},
{
anchors = (
{
name = bottom;
pos = (248,0);
},
{
name = top;
pos = (372,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(341,-12,o),
(468,45,o),
(539,150,o),
(539,219,qs),
(539,285,o),
(455,375,o),
(382,401,qs),
(325,422,o),
(271,445,o),
(253,462,qs),
(233,480,o),
(233,511,qs),
(233,552,o),
(293,604,o),
(343,604,qs),
(387,604,o),
(437,559,o),
(437,527,qs),
(437,516,o),
(436,510,q),
(573,510,l),
(575,541,l),
(575,619,o),
(460,712,o),
(364,712,qs),
(286,712,o),
(163,656,o),
(95,554,o),
(95,488,qs),
(95,431,o),
(165,347,o),
(231,323,qs),
(254,315,ls),
(313,294,o),
(368,268,o),
(400,231,o),
(400,202,qs),
(400,154,o),
(333,95,o),
(276,95,qs),
(225,95,o),
(163,148,o),
(163,191,q),
(164,201,o),
(164,211,q),
(28,211,l),
(25,193,o),
(25,172,qs),
(25,87,o),
(153,-12,o),
(260,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 1 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 4 0 4 3 114 0 0 1 1 0 112 0 4 4 2 97 0 2 2 39 77 0 1 1 5 98 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 4 0 4 3 114 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 39 77 0 1 1 5 98 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 39 77 0 1 1 5 98 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 50 0 49 36 19 45 36 20 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 584;
}
);
note = S;
unicode = 83;
},
{
glyphname = Sacute;
kernLeft = S;
kernRight = S;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (250,0);
},
{
name = top;
pos = (417,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (185,0);
ref = acutecomb.case;
}
);
width = 588;
},
{
anchors = (
{
name = bottom;
pos = (252,0);
},
{
name = top;
pos = (417,931);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (191,0);
ref = acutecomb.case;
}
);
width = 591;
},
{
anchors = (
{
name = bottom;
pos = (249,0);
},
{
name = top;
pos = (417,945);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (183,0);
ref = acutecomb.case;
}
);
width = 586;
},
{
anchors = (
{
name = bottom;
pos = (248,0);
},
{
name = top;
pos = (417,952);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (179,0);
ref = acutecomb.case;
}
);
width = 584;
}
);
note = Sacute;
unicode = 346;
},
{
glyphname = Scaron;
kernLeft = S;
kernRight = S;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (250,0);
},
{
name = top;
pos = (411,910);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (152,0);
ref = uni030C.case;
}
);
width = 588;
},
{
anchors = (
{
name = bottom;
pos = (252,0);
},
{
name = top;
pos = (411,901);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (158,0);
ref = uni030C.case;
}
);
width = 591;
},
{
anchors = (
{
name = bottom;
pos = (249,0);
},
{
name = top;
pos = (410,912);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (150,0);
ref = uni030C.case;
}
);
width = 586;
},
{
anchors = (
{
name = bottom;
pos = (248,0);
},
{
name = top;
pos = (410,918);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (146,0);
ref = uni030C.case;
}
);
width = 584;
}
);
note = Scaron;
unicode = 352;
},
{
glyphname = Scedilla;
kernLeft = S;
kernRight = S;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (204,-261);
},
{
name = top;
pos = (374,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(243,-261,ls),
(303,-261,o),
(388,-194,o),
(388,-137,qs),
(388,-97,o),
(326,-55,o),
(275,-56,q),
(283,-12,l),
(358,-9,o),
(472,50,o),
(536,150,o),
(536,215,qs),
(536,337,o),
(385,393,qs),
(357,403,ls),
(312,419,o),
(260,443,o),
(243,459,qs),
(220,479,o),
(220,513,qs),
(220,561,o),
(291,622,o),
(349,622,qs),
(400,622,o),
(457,570,o),
(457,532,qs),
(457,520,o),
(456,514,q),
(568,514,l),
(571,531,o),
(571,545,qs),
(571,620,o),
(458,712,o),
(365,712,qs),
(289,712,o),
(172,658,o),
(107,559,o),
(107,495,qs),
(107,440,o),
(174,357,o),
(240,333,qs),
(279,319,ls),
(331,301,o),
(387,275,o),
(421,234,o),
(421,202,qs),
(421,145,o),
(345,77,o),
(277,77,qs),
(218,77,o),
(146,138,o),
(146,187,qs),
(146,202,o),
(148,211,q),
(36,211,l),
(32,194,o),
(32,171,qs),
(32,98,o),
(130,2,o),
(215,-9,q),
(196,-115,l),
(251,-115,ls),
(306,-115,o),
(306,-148,qs),
(305,-172,o),
(268,-197,o),
(237,-197,qs),
(135,-197,l),
(124,-261,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
8 1 7 3 1 76 0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 100 0 6 6 4 97 0 4 4 39 77 0 3 3 7 97 0 7 7 40 7 78 68 66 17 29 36 20 45 36 22 35 32 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 588;
},
{
anchors = (
{
name = bottom;
pos = (207,-259);
},
{
name = top;
pos = (376,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(245,-259,ls),
(304,-259,o),
(384,-194,o),
(384,-140,qs),
(384,-102,o),
(322,-62,o),
(270,-63,q),
(279,-12,l),
(354,-10,o),
(469,47,o),
(532,146,o),
(532,211,qs),
(532,329,o),
(387,384,qs),
(375,389,o),
(351,397,qs),
(306,412,o),
(251,437,o),
(232,455,qs),
(207,477,o),
(207,515,qs),
(207,570,o),
(289,640,o),
(354,640,qs),
(413,640,o),
(477,579,o),
(477,537,qs),
(477,524,o),
(476,518,q),
(563,518,l),
(566,535,o),
(566,549,qs),
(566,596,o),
(517,670,o),
(426,712,o),
(366,712,qs),
(293,712,o),
(180,660,o),
(118,564,o),
(118,502,qs),
(118,448,o),
(184,366,o),
(249,342,qs),
(264,336,o),
(294,326,qs),
(345,309,o),
(404,281,o),
(442,236,o),
(442,201,qs),
(442,136,o),
(357,59,o),
(278,59,qs),
(210,59,o),
(128,128,o),
(128,183,qs),
(128,197,o),
(131,210,q),
(43,210,l),
(39,193,o),
(39,170,qs),
(39,98,o),
(138,1,o),
(223,-9,q),
(205,-113,l),
(254,-113,ls),
(315,-113,o),
(315,-149,qs),
(315,-177,o),
(275,-206,o),
(238,-206,qs),
(146,-206,l),
(137,-259,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
8 1 7 3 1 76 0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 99 0 6 6 4 97 0 4 4 39 77 0 3 3 7 97 0 7 7 40 7 78 71 69 17 30 36 21 46 36 22 35 32 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 591;
},
{
anchors = (
{
name = bottom;
pos = (203,-262);
},
{
name = top;
pos = (373,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(242,-262,ls),
(302,-262,o),
(389,-195,o),
(389,-136,qs),
(389,-95,o),
(326,-53,o),
(275,-54,q),
(283,-12,l),
(358,-8,o),
(473,50,o),
(537,151,o),
(537,216,qs),
(537,281,o),
(454,370,o),
(384,395,qs),
(358,405,ls),
(313,421,o),
(263,444,o),
(246,460,qs),
(224,480,o),
(224,512,qs),
(224,558,o),
(291,616,o),
(347,616,qs),
(396,616,o),
(450,566,o),
(450,530,qs),
(450,519,o),
(449,513,q),
(570,513,l),
(572,535,o),
(572,544,qs),
(572,620,o),
(459,712,o),
(365,712,qs),
(288,712,o),
(169,657,o),
(103,558,o),
(103,493,qs),
(103,437,o),
(171,353,o),
(237,329,qs),
(271,317,ls),
(325,298,o),
(380,273,o),
(414,233,o),
(414,202,qs),
(414,148,o),
(341,83,o),
(277,83,qs),
(220,83,o),
(151,141,o),
(151,188,q),
(153,211,l),
(33,211,l),
(30,192,o),
(30,171,qs),
(30,99,o),
(127,3,o),
(211,-9,q),
(192,-116,l),
(249,-116,ls),
(302,-116,o),
(302,-148,qs),
(301,-171,o),
(265,-195,o),
(235,-195,qs),
(130,-195,l),
(118,-262,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
15 1 3 2 8 1 7 3 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 5 6 2 6 5 114 0 2 3 6 2 3 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 100 0 6 6 4 97 0 4 4 39 77 0 3 3 7 97 0 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 100 0 6 6 4 97 0 4 4 39 77 0 3 3 7 97 0 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
68 66 17 30 36 20 45 35 22 35 32 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 586;
},
{
anchors = (
{
name = bottom;
pos = (201,-263);
},
{
name = top;
pos = (372,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(240,-263,ls),
(301,-263,o),
(391,-195,o),
(391,-134,qs),
(391,-92,o),
(327,-48,o),
(278,-50,q),
(285,-11,l),
(360,-7,o),
(475,53,o),
(539,154,o),
(539,219,qs),
(539,285,o),
(455,375,o),
(382,401,qs),
(325,422,o),
(271,445,o),
(253,462,qs),
(233,480,o),
(233,511,qs),
(233,552,o),
(293,604,o),
(343,604,qs),
(387,604,o),
(437,559,o),
(437,527,qs),
(437,516,o),
(436,510,q),
(573,510,l),
(575,541,l),
(575,619,o),
(460,712,o),
(364,712,qs),
(286,712,o),
(163,656,o),
(95,554,o),
(95,488,qs),
(95,431,o),
(165,347,o),
(231,323,qs),
(254,315,ls),
(313,294,o),
(368,268,o),
(400,231,o),
(400,202,qs),
(400,154,o),
(333,95,o),
(276,95,qs),
(225,95,o),
(163,148,o),
(163,191,q),
(164,201,o),
(164,211,q),
(28,211,l),
(25,193,o),
(25,172,qs),
(25,99,o),
(121,4,o),
(206,-8,q),
(186,-118,l),
(247,-118,ls),
(295,-118,o),
(295,-147,qs),
(294,-168,o),
(260,-189,o),
(234,-189,qs),
(122,-189,l),
(109,-263,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
16 1 3 2 8 1 7 3 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 5 6 2 6 5 114 0 2 3 6 2 3 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 100 0 6 6 4 97 0 4 4 39 77 0 3 3 7 97 0 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 100 0 6 6 4 97 0 4 4 39 77 0 3 3 7 97 0 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
67 65 17 29 36 19 45 36 22 35 32 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 584;
}
);
note = Scedilla;
unicode = 350;
},
{
glyphname = uni1E9E;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(468,-10,o),
(569,38,o),
(625,122,o),
(625,176,qs),
(625,228,o),
(572,292,o),
(512,314,qs),
(464,331,o),
(416,359,o),
(416,380,qs),
(416,398,o),
(446,426,o),
(480,447,qs),
(508,464,o),
(526,477,qs),
(554,498,o),
(585,551,o),
(585,587,qs),
(585,627,o),
(537,694,o),
(446,732,o),
(384,732,qs),
(266,732,o),
(122,612,o),
(105,515,qs),
(13,0,l),
(119,0,l),
(209,506,ls),
(221,572,o),
(300,643,o),
(369,643,qs),
(420,643,o),
(476,604,o),
(476,570,qs),
(476,545,o),
(448,507,o),
(416,484,o),
(371,455,qs),
(306,413,o),
(306,358,qs),
(306,319,o),
(366,267,o),
(435,242,qs),
(480,226,o),
(518,190,o),
(518,164,qs),
(518,122,o),
(461,71,o),
(414,71,qs),
(372,71,o),
(323,118,o),
(323,158,qs),
(324,172,l),
(221,172,l),
(215,89,o),
(313,-10,o),
(403,-10,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
4 1 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 2 1 1 0 114 0 2 2 4 97 0 4 4 41 77 0 1 1 3 98 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 1 1 3 98 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 3 3 34 77 0 1 1 5 98 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 2 1 2 0 1 128 0 4 0 2 0 4 2 105 0 3 3 34 77 0 1 1 5 98 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 56 0 55 35 33 30 29 26 24 35 18 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 670;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(458,-10,o),
(555,36,o),
(610,119,o),
(610,172,qs),
(610,223,o),
(558,286,o),
(499,307,qs),
(454,322,o),
(398,352,o),
(398,377,qs),
(398,396,o),
(432,427,o),
(468,448,qs),
(514,478,ls),
(544,500,o),
(577,554,o),
(577,593,qs),
(577,653,o),
(477,732,o),
(387,732,qs),
(277,732,o),
(137,616,o),
(120,520,qs),
(27,0,l),
(111,0,l),
(202,512,ls),
(214,583,o),
(300,661,o),
(374,661,qs),
(429,661,o),
(491,618,o),
(491,581,qs),
(491,554,o),
(463,514,o),
(423,485,o),
(385,463,qs),
(348,441,o),
(311,392,o),
(311,360,qs),
(311,321,o),
(370,271,o),
(438,246,qs),
(483,230,o),
(524,191,o),
(524,163,qs),
(524,115,o),
(459,56,o),
(407,56,qs),
(359,56,o),
(306,108,o),
(306,153,qs),
(306,164,o),
(307,169,q),
(223,169,l),
(216,88,o),
(310,-10,o),
(397,-10,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 1 1 3 97 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 2 1 2 0 1 128 0 4 0 2 0 4 2 105 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 56 0 55 37 35 32 31 28 26 36 18 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 669;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(471,-10,o),
(573,38,o),
(629,123,o),
(629,177,qs),
(629,230,o),
(577,293,o),
(516,316,qs),
(466,333,o),
(421,361,o),
(421,380,qs),
(421,398,o),
(451,426,o),
(484,446,qs),
(513,463,o),
(529,476,qs),
(588,521,o),
(588,584,qs),
(588,625,o),
(539,693,o),
(446,732,o),
(383,732,qs),
(262,732,o),
(117,610,o),
(99,513,qs),
(8,0,l),
(122,0,l),
(211,503,ls),
(235,637,o),
(367,637,qs),
(417,637,o),
(471,599,o),
(471,566,qs),
(471,535,o),
(429,492,o),
(384,463,qs),
(366,452,ls),
(336,433,o),
(304,387,o),
(304,357,qs),
(304,318,o),
(365,266,o),
(434,241,qs),
(479,224,o),
(515,189,o),
(515,164,qs),
(515,124,o),
(460,75,o),
(416,75,qs),
(371,75,o),
(325,128,o),
(329,173,q),
(220,173,l),
(214,89,o),
(313,-10,o),
(405,-10,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 2 1 1 0 114 0 2 2 4 97 0 4 4 41 77 0 1 1 3 98 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 1 1 3 98 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 3 3 34 77 0 1 1 5 98 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 2 1 2 0 1 128 0 4 0 2 0 4 2 105 0 3 3 34 77 0 1 1 5 98 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 54 0 53 34 32 29 28 26 24 34 18 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 670;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(477,-10,o),
(582,39,o),
(639,126,o),
(639,180,qs),
(639,233,o),
(586,297,o),
(525,321,qs),
(473,339,o),
(433,365,o),
(433,382,qs),
(433,399,o),
(461,424,o),
(492,445,qs),
(522,463,o),
(537,475,qs),
(593,518,o),
(593,580,qs),
(593,622,o),
(541,692,o),
(445,732,o),
(381,732,qs),
(255,732,o),
(107,607,o),
(89,509,qs),
(-1,0,l),
(127,0,l),
(215,499,ls),
(239,625,o),
(363,625,qs),
(410,625,o),
(461,590,o),
(461,559,qs),
(461,531,o),
(422,491,o),
(381,464,qs),
(357,447,ls),
(330,428,o),
(301,384,o),
(301,355,qs),
(301,316,o),
(362,262,o),
(432,238,qs),
(476,221,o),
(511,188,o),
(511,165,qs),
(511,128,o),
(461,85,o),
(420,85,qs),
(379,85,o),
(337,133,o),
(340,175,q),
(219,175,l),
(213,90,o),
(314,-10,o),
(409,-10,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 2 1 1 0 114 0 2 2 4 97 0 4 4 41 77 0 1 1 3 98 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 1 1 3 98 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 3 3 34 77 0 1 1 5 98 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 2 1 2 0 1 128 0 4 0 2 0 4 2 105 0 3 3 34 77 0 1 1 5 98 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 54 0 53 34 32 29 28 26 24 34 18 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 670;
}
);
note = uni1E9E;
unicode = 7838;
},
{
glyphname = T;
kernLeft = T;
kernRight = T;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (239,0);
},
{
name = top;
pos = (363,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(292,0,l),
(399,612,l),
(606,612,l),
(622,700,l),
(103,700,l),
(87,612,l),
(293,612,l),
(186,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 0 0 1 95 0 1 1 33 77 0 3 3 34 3 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
anchors = (
{
name = bottom;
pos = (236,0);
},
{
name = top;
pos = (360,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(278,0,l),
(389,633,l),
(598,633,l),
(610,700,l),
(109,700,l),
(97,633,l),
(305,633,l),
(194,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 0 0 1 95 0 1 1 33 77 0 3 3 34 3 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 559;
},
{
anchors = (
{
name = bottom;
pos = (239,0);
},
{
name = top;
pos = (363,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(296,0,l),
(402,605,l),
(609,605,l),
(626,700,l),
(101,700,l),
(84,605,l),
(289,605,l),
(183,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 0 0 1 95 0 1 1 33 77 0 3 3 34 3 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 566;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = top;
pos = (365,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(305,0,l),
(409,591,l),
(614,591,l),
(634,700,l),
(97,700,l),
(77,591,l),
(281,591,l),
(177,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 0 0 1 95 0 1 1 33 77 0 3 3 34 3 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 570;
}
);
note = T;
unicode = 84;
},
{
glyphname = Tcaron;
kernLeft = T;
kernRight = T;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (239,0);
},
{
name = top;
pos = (399,910);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = T;
},
{
alignment = -1;
pos = (141,0);
ref = uni030C.case;
}
);
width = 565;
},
{
anchors = (
{
name = bottom;
pos = (236,0);
},
{
name = top;
pos = (395,901);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = T;
},
{
alignment = -1;
pos = (142,0);
ref = uni030C.case;
}
);
width = 559;
},
{
anchors = (
{
name = bottom;
pos = (239,0);
},
{
name = top;
pos = (400,912);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = T;
},
{
alignment = -1;
pos = (140,0);
ref = uni030C.case;
}
);
width = 566;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = top;
pos = (403,918);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = T;
},
{
alignment = -1;
pos = (139,0);
ref = uni030C.case;
}
);
width = 570;
}
);
note = Tcaron;
unicode = 356;
},
{
glyphname = U;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (414,700);
},
{
name = topright;
pos = (732,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(350,-12,o),
(481,41,o),
(581,164,o),
(599,263,qs),
(676,700,l),
(570,700,l),
(492,263,ls),
(476,174,o),
(375,85,o),
(299,85,qs),
(234,85,o),
(162,149,o),
(162,213,qs),
(162,236,o),
(168,263,qs),
(245,700,l),
(139,700,l),
(62,263,ls),
(56,227,o),
(56,196,qs),
(56,98,o),
(174,-12,o),
(280,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
2 1 0 0 33 77 0 1 1 3 98 4 1 3 3 40 3 78 0 0 0 22 0 21 19 37 21 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (414,700);
},
{
name = topright;
pos = (727,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(347,-12,o),
(474,38,o),
(572,159,o),
(589,258,qs),
(667,700,l),
(583,700,l),
(504,258,ls),
(487,160,o),
(377,64,o),
(295,64,qs),
(226,64,o),
(147,133,o),
(147,203,qs),
(147,228,o),
(153,258,qs),
(232,700,l),
(148,700,l),
(69,258,ls),
(63,222,o),
(63,190,qs),
(63,95,o),
(177,-12,o),
(281,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
2 1 0 0 33 77 0 1 1 3 98 4 1 3 3 40 3 78 0 0 0 22 0 21 19 37 21 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (404,10);
},
{
name = top;
pos = (413,700);
},
{
name = topright;
pos = (733,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(351,-12,o),
(483,42,o),
(584,166,o),
(602,265,qs),
(678,700,l),
(565,700,l),
(487,265,ls),
(472,179,o),
(374,92,o),
(300,92,qs),
(236,92,o),
(167,154,o),
(167,216,qs),
(167,235,o),
(172,265,qs),
(249,700,l),
(136,700,l),
(59,265,ls),
(53,229,o),
(53,197,qs),
(53,98,o),
(173,-12,o),
(280,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
2 1 0 0 33 77 0 1 1 3 98 4 1 3 3 40 3 78 0 0 0 22 0 21 19 37 21 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 666;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (413,700);
},
{
name = topright;
pos = (736,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(352,-12,o),
(488,43,o),
(590,168,o),
(608,268,qs),
(684,700,l),
(556,700,l),
(479,268,ls),
(465,188,o),
(373,106,o),
(302,106,qs),
(242,106,o),
(177,165,o),
(177,223,qs),
(177,241,o),
(182,268,qs),
(258,700,l),
(130,700,l),
(54,268,ls),
(48,232,o),
(48,201,qs),
(48,100,o),
(170,-12,o),
(279,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
2 1 0 0 33 77 0 1 1 3 98 4 1 3 3 40 3 78 0 0 0 22 0 21 19 37 21 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 666;
}
);
note = U;
unicode = 85;
},
{
glyphname = Uacute;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (457,942);
},
{
name = topright;
pos = (732,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (225,0);
ref = acutecomb.case;
}
);
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (455,931);
},
{
name = topright;
pos = (727,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (229,0);
ref = acutecomb.case;
}
);
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (404,10);
},
{
name = top;
pos = (457,945);
},
{
name = topright;
pos = (733,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (223,0);
ref = acutecomb.case;
}
);
width = 666;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (458,952);
},
{
name = topright;
pos = (736,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (220,0);
ref = acutecomb.case;
}
);
width = 666;
}
);
note = Uacute;
unicode = 218;
},
{
glyphname = Ubreve;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (451,909);
},
{
name = topright;
pos = (732,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (185,0);
ref = uni0306.case;
}
);
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (450,901);
},
{
name = topright;
pos = (727,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (193,0);
ref = uni0306.case;
}
);
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (404,10);
},
{
name = top;
pos = (451,912);
},
{
name = topright;
pos = (733,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (182,0);
ref = uni0306.case;
}
);
width = 666;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (451,917);
},
{
name = topright;
pos = (736,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (176,0);
ref = uni0306.case;
}
);
width = 666;
}
);
note = Ubreve;
unicode = 364;
},
{
glyphname = Ucircumflex;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (451,911);
},
{
name = topright;
pos = (732,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (193,0);
ref = uni0302.case;
}
);
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (450,902);
},
{
name = topright;
pos = (727,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (198,0);
ref = uni0302.case;
}
);
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (404,10);
},
{
name = top;
pos = (451,913);
},
{
name = topright;
pos = (733,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (191,0);
ref = uni0302.case;
}
);
width = 666;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (451,919);
},
{
name = topright;
pos = (736,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (187,0);
ref = uni0302.case;
}
);
width = 666;
}
);
note = Ucircumflex;
unicode = 219;
},
{
glyphname = Udieresis;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (451,912);
},
{
name = topright;
pos = (732,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (162,0);
ref = uni0308.case;
}
);
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (447,889);
},
{
name = topright;
pos = (727,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (186,0);
ref = uni0308.case;
}
);
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (404,10);
},
{
name = top;
pos = (452,919);
},
{
name = topright;
pos = (733,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (154,0);
ref = uni0308.case;
}
);
width = 666;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (455,934);
},
{
name = topright;
pos = (736,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (138,0);
ref = uni0308.case;
}
);
width = 666;
}
);
note = Udieresis;
unicode = 220;
},
{
glyphname = Ugrave;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (457,942);
},
{
name = topright;
pos = (732,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (225,0);
ref = gravecomb.case;
}
);
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (455,931);
},
{
name = topright;
pos = (727,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (229,0);
ref = gravecomb.case;
}
);
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (404,10);
},
{
name = top;
pos = (457,945);
},
{
name = topright;
pos = (733,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (223,0);
ref = gravecomb.case;
}
);
width = 666;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (458,952);
},
{
name = topright;
pos = (736,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (220,0);
ref = gravecomb.case;
}
);
width = 666;
}
);
note = Ugrave;
unicode = 217;
},
{
glyphname = Uhungarumlaut;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (451,915);
},
{
name = topright;
pos = (732,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (172,0);
ref = uni030B.case;
}
);
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (449,902);
},
{
name = topright;
pos = (727,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (188,0);
ref = uni030B.case;
}
);
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (404,10);
},
{
name = top;
pos = (452,919);
},
{
name = topright;
pos = (733,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (166,0);
ref = uni030B.case;
}
);
width = 666;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (453,927);
},
{
name = topright;
pos = (736,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (155,0);
ref = uni030B.case;
}
);
width = 666;
}
);
note = Uhungarumlaut;
unicode = 368;
},
{
glyphname = Umacron;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (443,867);
},
{
name = topright;
pos = (732,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (153,0);
ref = uni0304.case;
}
);
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (442,859);
},
{
name = topright;
pos = (727,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (159,0);
ref = uni0304.case;
}
);
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (404,10);
},
{
name = top;
pos = (443,869);
},
{
name = topright;
pos = (733,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (151,0);
ref = uni0304.case;
}
);
width = 666;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (444,874);
},
{
name = topright;
pos = (736,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (147,0);
ref = uni0304.case;
}
);
width = 666;
}
);
note = Umacron;
unicode = 362;
},
{
glyphname = Uogonek;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (414,700);
},
{
name = topright;
pos = (732,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(330,-196,o),
(374,-183,q),
(385,-117,l),
(346,-132,o),
(314,-132,qs),
(291,-132,o),
(265,-112,o),
(265,-95,qs),
(265,-73,o),
(301,-36,o),
(344,-17,qs),
(397,7,l),
(472,33,o),
(580,159,o),
(599,263,qs),
(676,700,l),
(570,700,l),
(492,263,ls),
(476,174,o),
(375,85,o),
(299,85,qs),
(234,85,o),
(162,149,o),
(162,213,qs),
(162,236,o),
(168,263,qs),
(245,700,l),
(139,700,l),
(62,263,ls),
(56,227,o),
(56,196,qs),
(56,108,o),
(152,1,o),
(240,-10,q),
(180,-55,o),
(180,-116,qs),
(180,-155,o),
(241,-196,o),
(290,-196,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
35 4 2 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 0 3 0 1 3 128 2 1 0 0 33 77 0 3 3 4 98 5 1 4 4 38 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 3 0 1 3 128 0 3 5 1 4 3 4 102 2 1 0 0 33 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 38 0 37 42 19 37 26 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (414,700);
},
{
name = topright;
pos = (727,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(332,-193,o),
(371,-180,q),
(380,-124,l),
(344,-139,o),
(313,-139,qs),
(289,-139,o),
(260,-118,o),
(260,-99,qs),
(260,-53,o),
(338,-18,qs),
(395,7,l),
(467,33,o),
(571,155,o),
(589,258,qs),
(667,700,l),
(583,700,l),
(504,258,ls),
(487,160,o),
(377,64,o),
(295,64,qs),
(226,64,o),
(147,133,o),
(147,203,qs),
(147,228,o),
(153,258,qs),
(232,700,l),
(148,700,l),
(69,258,ls),
(63,222,o),
(63,190,qs),
(63,102,o),
(162,-4,o),
(253,-11,q),
(190,-55,o),
(190,-117,qs),
(190,-154,o),
(248,-193,o),
(293,-193,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
34 4 2 3 1 1 76 0 1 0 3 0 1 3 128 0 3 5 1 4 3 4 102 2 1 0 0 33 0 78 0 0 0 37 0 36 41 19 37 26 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (404,10);
},
{
name = top;
pos = (413,700);
},
{
name = topright;
pos = (733,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(328,-198,o),
(375,-184,q),
(386,-115,l),
(347,-130,o),
(315,-130,qs),
(293,-130,o),
(267,-111,o),
(267,-94,qs),
(267,-72,o),
(303,-36,o),
(346,-17,qs),
(401,8,l),
(476,35,o),
(584,162,o),
(602,265,qs),
(678,700,l),
(565,700,l),
(487,265,ls),
(472,179,o),
(374,92,o),
(300,92,qs),
(236,92,o),
(167,154,o),
(167,216,qs),
(167,235,o),
(172,265,qs),
(249,700,l),
(136,700,l),
(59,265,ls),
(53,229,o),
(53,197,qs),
(53,109,o),
(149,2,o),
(237,-9,q),
(177,-55,o),
(177,-116,qs),
(177,-156,o),
(240,-198,o),
(289,-198,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
35 4 2 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 0 3 0 1 3 128 2 1 0 0 33 77 0 3 3 4 98 5 1 4 4 38 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 3 0 1 3 128 0 3 5 1 4 3 4 102 2 1 0 0 33 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 38 0 37 42 19 37 26 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 666;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (413,700);
},
{
name = topright;
pos = (736,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(329,-200,o),
(376,-186,q),
(389,-110,l),
(347,-125,o),
(315,-125,qs),
(294,-125,o),
(270,-107,o),
(270,-92,qs),
(270,-71,o),
(305,-36,o),
(349,-16,qs),
(401,8,l),
(479,35,o),
(589,163,o),
(608,268,qs),
(684,700,l),
(556,700,l),
(479,268,ls),
(465,188,o),
(373,106,o),
(302,106,qs),
(242,106,o),
(177,165,o),
(177,223,qs),
(177,241,o),
(182,268,qs),
(258,700,l),
(130,700,l),
(54,268,ls),
(48,232,o),
(48,201,qs),
(48,113,o),
(142,4,o),
(228,-9,q),
(170,-54,o),
(170,-116,qs),
(170,-158,o),
(234,-200,o),
(286,-200,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
35 4 2 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 0 3 0 1 3 128 2 1 0 0 33 77 0 3 3 4 98 5 1 4 4 38 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 3 0 1 3 128 0 3 5 1 4 3 4 102 2 1 0 0 33 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 38 0 37 42 19 37 26 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 666;
}
);
note = Uogonek;
unicode = 370;
},
{
glyphname = Uring;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (462,971);
},
{
name = topright;
pos = (732,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (223,0);
ref = uni030A.case;
}
);
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (461,967);
},
{
name = topright;
pos = (727,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (228,0);
ref = uni030A.case;
}
);
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (404,10);
},
{
name = top;
pos = (462,972);
},
{
name = topright;
pos = (733,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (221,0);
ref = uni030A.case;
}
);
width = 666;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (462,975);
},
{
name = topright;
pos = (736,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (218,0);
ref = uni030A.case;
}
);
width = 666;
}
);
note = Uring;
unicode = 366;
},
{
glyphname = Utilde;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (443,868);
},
{
name = topright;
pos = (732,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (170,0);
ref = tildecomb.case;
}
);
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (442,859);
},
{
name = topright;
pos = (727,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (183,0);
ref = tildecomb.case;
}
);
width = 667;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (404,10);
},
{
name = top;
pos = (443,871);
},
{
name = topright;
pos = (733,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (166,0);
ref = tildecomb.case;
}
);
width = 666;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (444,877);
},
{
name = topright;
pos = (736,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (157,0);
ref = tildecomb.case;
}
);
width = 666;
}
);
note = Utilde;
unicode = 360;
},
{
glyphname = V;
kernLeft = V;
kernRight = V;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,0,l),
(357,0,l),
(741,700,l),
(627,700,l),
(313,112,l),
(208,700,l),
(94,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
1 1 1 0 1 76 3 2 2 0 0 33 77 0 1 1 34 1 78 0 0 0 6 0 6 17 18 4 8 24
CALL[ ]	/* CallFunction */";
};
width = 674;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(241,0,l),
(339,0,l),
(727,700,l),
(636,700,l),
(306,92,l),
(193,700,l),
(102,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
1 1 1 0 1 76 3 2 2 0 0 33 77 0 1 1 34 1 78 0 0 0 6 0 6 17 18 4 8 24
CALL[ ]	/* CallFunction */";
};
width = 669;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(225,0,l),
(362,0,l),
(745,700,l),
(623,700,l),
(315,119,l),
(212,700,l),
(91,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
1 1 1 0 1 76 3 2 2 0 0 33 77 0 1 1 34 1 78 0 0 0 6 0 6 17 18 4 8 24
CALL[ ]	/* CallFunction */";
};
width = 676;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(217,0,l),
(374,0,l),
(754,700,l),
(617,700,l),
(319,132,l),
(222,700,l),
(85,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
1 1 1 0 1 76 3 2 2 0 0 33 77 0 1 1 34 1 78 0 0 0 6 0 6 17 18 4 8 24
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
kernLeft = W;
kernRight = W;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (453,0);
},
{
name = top;
pos = (571,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(543,541,l),
(597,0,l),
(726,0,l),
(1042,700,l),
(927,700,l),
(684,124,l),
(633,700,l),
(513,700,l),
(253,125,l),
(215,700,l),
(101,700,l),
(164,0,l),
(293,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
11 6 3 3 3 0 1 76 2 1 2 0 0 33 77 5 4 2 3 3 34 3 78 0 0 0 12 0 12 17 18 18 17 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 988;
},
{
anchors = (
{
name = bottom;
pos = (450,0);
},
{
name = top;
pos = (566,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(542,574,l),
(604,0,l),
(701,0,l),
(1021,700,l),
(930,700,l),
(672,103,l),
(612,700,l),
(518,700,l),
(241,104,l),
(196,700,l),
(105,700,l),
(173,-1,l),
(270,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
11 6 3 3 3 0 1 76 2 1 2 0 0 33 77 5 4 2 3 3 34 3 78 0 0 0 12 0 12 17 18 18 17 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 976;
},
{
anchors = (
{
name = bottom;
pos = (454,0);
},
{
name = top;
pos = (573,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(543,529,l),
(594,0,l),
(734,0,l),
(1048,700,l),
(925,700,l),
(687,131,l),
(639,700,l),
(511,700,l),
(256,131,l),
(221,700,l),
(99,700,l),
(161,0,l),
(301,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
11 6 3 3 3 0 1 76 2 1 2 0 0 33 77 5 4 2 3 3 34 3 78 0 0 0 12 0 12 17 18 18 17 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 991;
},
{
anchors = (
{
name = bottom;
pos = (456,0);
},
{
name = top;
pos = (576,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(544,509,l),
(589,0,l),
(750,0,l),
(1062,700,l),
(923,700,l),
(694,146,l),
(653,700,l),
(508,700,l),
(265,148,l),
(233,700,l),
(96,700,l),
(155,0,l),
(316,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
11 6 3 3 3 0 1 76 2 1 2 0 0 33 77 5 4 2 3 3 34 3 78 0 0 0 12 0 12 17 18 18 17 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 999;
}
);
note = W;
unicode = 87;
},
{
glyphname = Wacute;
kernLeft = W;
kernRight = W;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (453,0);
},
{
name = top;
pos = (614,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (382,0);
ref = acutecomb.case;
}
);
width = 988;
},
{
anchors = (
{
name = bottom;
pos = (450,0);
},
{
name = top;
pos = (607,931);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (381,0);
ref = acutecomb.case;
}
);
width = 976;
},
{
anchors = (
{
name = bottom;
pos = (454,0);
},
{
name = top;
pos = (616,945);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (382,0);
ref = acutecomb.case;
}
);
width = 991;
},
{
anchors = (
{
name = bottom;
pos = (456,0);
},
{
name = top;
pos = (621,952);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (383,0);
ref = acutecomb.case;
}
);
width = 999;
}
);
note = Wacute;
unicode = 7810;
},
{
glyphname = Wcircumflex;
kernLeft = W;
kernRight = W;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (453,0);
},
{
name = top;
pos = (608,911);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (350,0);
ref = uni0302.case;
}
);
width = 988;
},
{
anchors = (
{
name = bottom;
pos = (450,0);
},
{
name = top;
pos = (602,902);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (350,0);
ref = uni0302.case;
}
);
width = 976;
},
{
anchors = (
{
name = bottom;
pos = (454,0);
},
{
name = top;
pos = (610,913);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (350,0);
ref = uni0302.case;
}
);
width = 991;
},
{
anchors = (
{
name = bottom;
pos = (456,0);
},
{
name = top;
pos = (614,919);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (350,0);
ref = uni0302.case;
}
);
width = 999;
}
);
note = Wcircumflex;
unicode = 372;
},
{
glyphname = Wdieresis;
kernLeft = W;
kernRight = W;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (453,0);
},
{
name = top;
pos = (609,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (320,0);
ref = uni0308.case;
}
);
width = 988;
},
{
anchors = (
{
name = bottom;
pos = (450,0);
},
{
name = top;
pos = (599,889);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (338,0);
ref = uni0308.case;
}
);
width = 976;
},
{
anchors = (
{
name = bottom;
pos = (454,0);
},
{
name = top;
pos = (612,919);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (313,0);
ref = uni0308.case;
}
);
width = 991;
},
{
anchors = (
{
name = bottom;
pos = (456,0);
},
{
name = top;
pos = (618,934);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (301,0);
ref = uni0308.case;
}
);
width = 999;
}
);
note = Wdieresis;
unicode = 7812;
},
{
glyphname = Wgrave;
kernLeft = W;
kernRight = W;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (453,0);
},
{
name = top;
pos = (614,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (382,0);
ref = gravecomb.case;
}
);
width = 988;
},
{
anchors = (
{
name = bottom;
pos = (450,0);
},
{
name = top;
pos = (607,931);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (381,0);
ref = gravecomb.case;
}
);
width = 976;
},
{
anchors = (
{
name = bottom;
pos = (454,0);
},
{
name = top;
pos = (616,945);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (382,0);
ref = gravecomb.case;
}
);
width = 991;
},
{
anchors = (
{
name = bottom;
pos = (456,0);
},
{
name = top;
pos = (621,952);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (383,0);
ref = gravecomb.case;
}
);
width = 999;
}
);
note = Wgrave;
unicode = 7808;
},
{
glyphname = X;
kernLeft = X;
kernRight = X;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,0,l),
(306,282,l),
(424,0,l),
(544,0,l),
(385,379,l),
(631,700,l),
(511,700,l),
(344,474,l),
(249,700,l),
(129,700,l),
(264,379,l),
(-24,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 3 3 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(76,0,l),
(299,300,l),
(426,0,l),
(520,0,l),
(362,377,l),
(610,700,l),
(515,700,l),
(330,451,l),
(225,700,l),
(131,700,l),
(268,376,l),
(-20,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 3 3 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 596;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(103,0,l),
(308,276,l),
(423,0,l),
(551,0,l),
(392,380,l),
(637,700,l),
(509,700,l),
(348,482,l),
(256,700,l),
(128,700,l),
(263,379,l),
(-26,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 3 3 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 618;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(116,0,l),
(312,264,l),
(422,0,l),
(567,0,l),
(407,381,l),
(651,700,l),
(506,700,l),
(357,497,l),
(272,700,l),
(127,700,l),
(260,381,l),
(-29,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 3 3 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 629;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
kernLeft = Y;
kernRight = Y;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (251,0);
},
{
name = top;
pos = (375,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(298,0,l),
(346,274,l),
(652,700,l),
(534,700,l),
(312,378,l),
(204,700,l),
(84,700,l),
(240,274,l),
(192,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
3 1 2 0 1 76 1 1 0 0 33 77 0 2 2 34 2 78 18 18 17 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 589;
},
{
anchors = (
{
name = bottom;
pos = (246,0);
},
{
name = top;
pos = (370,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(282,0,l),
(329,266,l),
(633,700,l),
(539,700,l),
(301,346,l),
(189,700,l),
(93,700,l),
(245,266,l),
(198,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
3 1 2 0 1 76 1 1 0 0 33 77 0 2 2 34 2 78 18 18 17 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 579;
},
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = top;
pos = (377,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(303,0,l),
(352,276,l),
(658,700,l),
(532,700,l),
(315,388,l),
(209,700,l),
(80,700,l),
(238,276,l),
(189,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
3 1 2 0 1 76 1 1 0 0 33 77 0 2 2 34 2 78 18 18 17 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 592;
},
{
anchors = (
{
name = bottom;
pos = (256,0);
},
{
name = top;
pos = (380,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(313,0,l),
(363,281,l),
(671,700,l),
(528,700,l),
(322,409,l),
(219,700,l),
(74,700,l),
(235,281,l),
(185,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
3 1 2 0 1 76 1 1 0 0 33 77 0 2 2 34 2 78 18 18 17 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 599;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Yacute;
kernLeft = Y;
kernRight = Y;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (251,0);
},
{
name = top;
pos = (418,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (186,0);
ref = acutecomb.case;
}
);
width = 589;
},
{
anchors = (
{
name = bottom;
pos = (246,0);
},
{
name = top;
pos = (411,931);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (185,0);
ref = acutecomb.case;
}
);
width = 579;
},
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = top;
pos = (420,945);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (186,0);
ref = acutecomb.case;
}
);
width = 592;
},
{
anchors = (
{
name = bottom;
pos = (256,0);
},
{
name = top;
pos = (425,952);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (187,0);
ref = acutecomb.case;
}
);
width = 599;
}
);
note = Yacute;
unicode = 221;
},
{
glyphname = Ycircumflex;
kernLeft = Y;
kernRight = Y;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (251,0);
},
{
name = top;
pos = (412,911);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (154,0);
ref = uni0302.case;
}
);
width = 589;
},
{
anchors = (
{
name = bottom;
pos = (246,0);
},
{
name = top;
pos = (406,902);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (154,0);
ref = uni0302.case;
}
);
width = 579;
},
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = top;
pos = (414,913);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (154,0);
ref = uni0302.case;
}
);
width = 592;
},
{
anchors = (
{
name = bottom;
pos = (256,0);
},
{
name = top;
pos = (418,919);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (154,0);
ref = uni0302.case;
}
);
width = 599;
}
);
note = Ycircumflex;
unicode = 374;
},
{
glyphname = Ydieresis;
kernLeft = Y;
kernRight = Y;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (251,0);
},
{
name = top;
pos = (413,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (124,0);
ref = uni0308.case;
}
);
width = 589;
},
{
anchors = (
{
name = bottom;
pos = (246,0);
},
{
name = top;
pos = (403,889);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (142,0);
ref = uni0308.case;
}
);
width = 579;
},
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = top;
pos = (416,919);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (117,0);
ref = uni0308.case;
}
);
width = 592;
},
{
anchors = (
{
name = bottom;
pos = (256,0);
},
{
name = top;
pos = (422,934);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (105,0);
ref = uni0308.case;
}
);
width = 599;
}
);
note = Ydieresis;
unicode = 376;
},
{
glyphname = Ygrave;
kernLeft = Y;
kernRight = Y;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (251,0);
},
{
name = top;
pos = (418,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (186,0);
ref = gravecomb.case;
}
);
width = 589;
},
{
anchors = (
{
name = bottom;
pos = (246,0);
},
{
name = top;
pos = (411,931);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (185,0);
ref = gravecomb.case;
}
);
width = 579;
},
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = top;
pos = (420,945);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (186,0);
ref = gravecomb.case;
}
);
width = 592;
},
{
anchors = (
{
name = bottom;
pos = (256,0);
},
{
name = top;
pos = (425,952);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (187,0);
ref = gravecomb.case;
}
);
width = 599;
}
);
note = Ygrave;
unicode = 7922;
},
{
glyphname = Z;
kernRight = Z;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = top;
pos = (351,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(450,0,l),
(466,90,l),
(128,90,l),
(556,618,l),
(570,700,l),
(118,700,l),
(102,610,l),
(431,610,l),
(5,82,l),
(-10,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 0 0 1 95 0 1 1 33 77 0 2 2 3 95 0 3 3 34 3 78 17 18 17 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 541;
},
{
anchors = (
{
name = bottom;
pos = (224,0);
},
{
name = top;
pos = (348,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(441,0,l),
(454,73,l),
(104,73,l),
(549,634,l),
(560,700,l),
(123,700,l),
(109,627,l),
(449,627,l),
(6,66,l),
(-6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 0 0 1 95 0 1 1 33 77 0 2 2 3 95 0 3 3 34 3 78 17 18 17 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = top;
pos = (351,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(452,0,l),
(469,96,l),
(136,96,l),
(558,613,l),
(573,700,l),
(116,700,l),
(99,604,l),
(425,604,l),
(5,87,l),
(-11,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 0 0 1 95 0 1 1 33 77 0 2 2 3 95 0 3 3 34 3 78 17 18 17 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 542;
},
{
anchors = (
{
name = bottom;
pos = (229,0);
},
{
name = top;
pos = (353,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(458,0,l),
(477,107,l),
(152,107,l),
(563,602,l),
(580,700,l),
(113,700,l),
(94,593,l),
(413,593,l),
(4,98,l),
(-14,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 0 0 1 95 0 1 1 33 77 0 2 2 3 95 0 3 3 34 3 78 17 18 17 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 546;
}
);
note = Z;
unicode = 90;
},
{
glyphname = Zacute;
kernRight = Z;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = top;
pos = (394,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (162,0);
ref = acutecomb.case;
}
);
width = 541;
},
{
anchors = (
{
name = bottom;
pos = (224,0);
},
{
name = top;
pos = (389,931);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (163,0);
ref = acutecomb.case;
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = top;
pos = (395,945);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (161,0);
ref = acutecomb.case;
}
);
width = 542;
},
{
anchors = (
{
name = bottom;
pos = (229,0);
},
{
name = top;
pos = (398,952);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (160,0);
ref = acutecomb.case;
}
);
width = 546;
}
);
note = Zacute;
unicode = 377;
},
{
glyphname = Zcaron;
kernRight = Z;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = top;
pos = (387,910);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (129,0);
ref = uni030C.case;
}
);
width = 541;
},
{
anchors = (
{
name = bottom;
pos = (224,0);
},
{
name = top;
pos = (383,901);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (130,0);
ref = uni030C.case;
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = top;
pos = (388,912);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (128,0);
ref = uni030C.case;
}
);
width = 542;
},
{
anchors = (
{
name = bottom;
pos = (229,0);
},
{
name = top;
pos = (391,918);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (127,0);
ref = uni030C.case;
}
);
width = 546;
}
);
note = Zcaron;
unicode = 381;
},
{
glyphname = Zdotaccent;
kernRight = Z;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = top;
pos = (388,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (199,0);
ref = uni0307.case;
}
);
width = 541;
},
{
anchors = (
{
name = bottom;
pos = (224,0);
},
{
name = top;
pos = (381,889);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (209,0);
ref = uni0307.case;
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = top;
pos = (390,919);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (196,0);
ref = uni0307.case;
}
);
width = 542;
},
{
anchors = (
{
name = bottom;
pos = (229,0);
},
{
name = top;
pos = (395,934);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (189,0);
ref = uni0307.case;
}
);
width = 546;
}
);
note = Zdotaccent;
unicode = 379;
},
{
glyphname = uniA78B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,220,l),
(252,700,l),
(138,700,l),
(65,220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 229;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(143,229,l),
(236,700,l),
(145,700,l),
(72,229,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 221;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(158,216,l),
(257,700,l),
(135,700,l),
(62,216,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 232;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(165,210,l),
(267,700,l),
(130,700,l),
(57,210,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = uniA78B;
unicode = 42891;
},
{
glyphname = uni0122;
kernLeft = C;
kernRight = G;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (291,-256);
},
{
name = top;
pos = (460,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (325,0);
ref = uni0326;
}
);
width = 759;
},
{
anchors = (
{
name = bottom;
pos = (295,-238);
},
{
name = top;
pos = (461,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (332,0);
ref = uni0326;
}
);
width = 761;
},
{
anchors = (
{
name = bottom;
pos = (290,-262);
},
{
name = top;
pos = (460,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (322,0);
ref = uni0326;
}
);
width = 758;
},
{
anchors = (
{
name = bottom;
pos = (287,-274);
},
{
name = top;
pos = (459,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (317,0);
ref = uni0326;
}
);
width = 757;
}
);
note = uni0122;
unicode = 290;
},
{
glyphname = uni0136;
kernRight = K;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (216,-256);
},
{
name = ogonek;
pos = (129,0);
},
{
name = top;
pos = (385,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = K;
},
{
alignment = -1;
pos = (249,0);
ref = uni0326;
}
);
width = 608;
},
{
anchors = (
{
name = bottom;
pos = (209,-238);
},
{
name = ogonek;
pos = (115,0);
},
{
name = top;
pos = (375,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = K;
},
{
alignment = -1;
pos = (246,0);
ref = uni0326;
}
);
width = 589;
},
{
anchors = (
{
name = bottom;
pos = (218,-262);
},
{
name = ogonek;
pos = (133,0);
},
{
name = top;
pos = (388,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = K;
},
{
alignment = -1;
pos = (250,0);
ref = uni0326;
}
);
width = 614;
},
{
anchors = (
{
name = bottom;
pos = (222,-274);
},
{
name = ogonek;
pos = (142,0);
},
{
name = top;
pos = (394,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = K;
},
{
alignment = -1;
pos = (252,0);
ref = uni0326;
}
);
width = 627;
}
);
note = uni0136;
unicode = 310;
},
{
glyphname = uni013B;
kernRight = L;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (174,-256);
},
{
name = top;
pos = (251,700);
},
{
name = topright;
pos = (340,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (207,0);
ref = uni0326;
}
);
width = 525;
},
{
anchors = (
{
name = bottom;
pos = (177,-238);
},
{
name = top;
pos = (254,700);
},
{
name = topright;
pos = (345,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (214,0);
ref = uni0326;
}
);
width = 526;
},
{
anchors = (
{
name = bottom;
pos = (172,-262);
},
{
name = top;
pos = (250,700);
},
{
name = topright;
pos = (338,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (205,0);
ref = uni0326;
}
);
width = 525;
},
{
anchors = (
{
name = bottom;
pos = (170,-274);
},
{
name = top;
pos = (248,700);
},
{
name = topright;
pos = (335,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (200,0);
ref = uni0326;
}
);
width = 524;
}
);
note = uni013B;
unicode = 315;
},
{
glyphname = uni0145;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (259,-256);
},
{
name = top;
pos = (428,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (293,0);
ref = uni0326;
}
);
width = 696;
},
{
anchors = (
{
name = bottom;
pos = (259,-238);
},
{
name = top;
pos = (425,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (296,0);
ref = uni0326;
}
);
width = 690;
},
{
anchors = (
{
name = bottom;
pos = (259,-262);
},
{
name = top;
pos = (429,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (291,0);
ref = uni0326;
}
);
width = 697;
},
{
anchors = (
{
name = bottom;
pos = (259,-274);
},
{
name = top;
pos = (431,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (289,0);
ref = uni0326;
}
);
width = 701;
}
);
note = uni0145;
unicode = 325;
},
{
glyphname = uni0156;
kernRight = R;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (208,-256);
},
{
name = top;
pos = (377,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (241,0);
ref = uni0326;
}
);
width = 595;
},
{
anchors = (
{
name = bottom;
pos = (208,-238);
},
{
name = top;
pos = (374,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (245,0);
ref = uni0326;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (207,-262);
},
{
name = top;
pos = (377,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (240,0);
ref = uni0326;
}
);
width = 596;
},
{
anchors = (
{
name = bottom;
pos = (207,-274);
},
{
name = top;
pos = (379,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (237,0);
ref = uni0326;
}
);
width = 597;
}
);
note = uni0156;
unicode = 342;
},
{
glyphname = uni0162;
kernLeft = T;
kernRight = T;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (193,-261);
},
{
name = top;
pos = (363,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,0,l),
(184,-115,l),
(239,-115,ls),
(294,-115,o),
(294,-148,qs),
(293,-172,o),
(256,-197,o),
(225,-197,qs),
(123,-197,l),
(112,-261,l),
(231,-261,ls),
(291,-261,o),
(376,-194,o),
(376,-137,qs),
(376,-97,o),
(314,-55,o),
(263,-56,q),
(273,0,l),
(292,0,l),
(399,612,l),
(606,612,l),
(622,700,l),
(103,700,l),
(87,612,l),
(293,612,l),
(186,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 4 0 7 6 4 7 105 0 6 0 5 6 5 99 2 1 0 0 1 95 0 1 1 33 77 8 1 3 3 34 3 78 17 35 33 36 17 17 17 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
anchors = (
{
name = bottom;
pos = (191,-259);
},
{
name = top;
pos = (360,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(209,0,l),
(189,-113,l),
(238,-113,ls),
(299,-113,o),
(299,-149,qs),
(299,-177,o),
(259,-206,o),
(222,-206,qs),
(130,-206,l),
(121,-259,l),
(229,-259,ls),
(288,-259,o),
(368,-194,o),
(368,-140,qs),
(368,-102,o),
(306,-62,o),
(254,-63,q),
(265,0,l),
(278,0,l),
(389,633,l),
(598,633,l),
(610,700,l),
(109,700,l),
(97,633,l),
(305,633,l),
(194,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 4 0 7 6 4 7 105 0 6 0 5 6 5 99 2 1 0 0 1 95 0 1 1 33 77 8 1 3 3 34 3 78 17 35 33 36 17 17 17 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 559;
},
{
anchors = (
{
name = bottom;
pos = (193,-262);
},
{
name = top;
pos = (363,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(203,0,l),
(182,-116,l),
(239,-116,ls),
(292,-116,o),
(292,-148,qs),
(291,-171,o),
(255,-195,o),
(225,-195,qs),
(120,-195,l),
(108,-262,l),
(232,-262,ls),
(292,-262,o),
(379,-195,o),
(379,-136,qs),
(379,-95,o),
(316,-53,o),
(265,-54,q),
(275,0,l),
(296,0,l),
(402,605,l),
(609,605,l),
(626,700,l),
(101,700,l),
(84,605,l),
(289,605,l),
(183,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 4 0 7 6 4 7 105 0 6 0 5 6 5 99 2 1 0 0 1 95 0 1 1 33 77 8 1 3 3 34 3 78 17 35 33 36 17 17 17 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 566;
},
{
anchors = (
{
name = bottom;
pos = (194,-263);
},
{
name = top;
pos = (365,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(200,0,l),
(179,-118,l),
(240,-118,ls),
(288,-118,o),
(288,-147,qs),
(287,-168,o),
(253,-189,o),
(227,-189,qs),
(115,-189,l),
(102,-263,l),
(233,-263,ls),
(294,-263,o),
(384,-195,o),
(384,-134,qs),
(384,-92,o),
(320,-48,o),
(271,-50,q),
(280,0,l),
(305,0,l),
(409,591,l),
(614,591,l),
(634,700,l),
(97,700,l),
(77,591,l),
(281,591,l),
(177,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 4 0 7 6 4 7 105 0 6 0 5 6 5 99 2 1 0 0 1 95 0 1 1 33 77 8 1 3 3 34 3 78 17 35 33 36 17 17 17 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 570;
}
);
note = uni0162;
unicode = 354;
},
{
glyphname = uni018E;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(449,0,l),
(573,700,l),
(132,700,l),
(116,611,l),
(451,611,l),
(416,414,l),
(126,414,l),
(111,326,l),
(401,326,l),
(359,89,l),
(24,89,l),
(8,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 1 0 2 1 103 0 3 3 4 95 0 4 4 33 77 0 0 0 5 95 0 5 5 34 5 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 577;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(445,0,l),
(569,700,l),
(136,700,l),
(124,631,l),
(473,631,l),
(433,404,l),
(128,404,l),
(116,336,l),
(421,336,l),
(373,69,l),
(24,69,l),
(12,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 1 0 2 1 103 0 3 3 4 95 0 4 4 33 77 0 0 0 5 95 0 5 5 34 5 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(450,0,l),
(574,700,l),
(130,700,l),
(113,604,l),
(443,604,l),
(410,417,l),
(125,417,l),
(109,322,l),
(394,322,l),
(354,96,l),
(23,96,l),
(6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 1 0 2 1 103 0 3 3 4 95 0 4 4 33 77 0 0 0 5 95 0 5 5 34 5 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 569;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(452,0,l),
(576,700,l),
(127,700,l),
(107,591,l),
(428,591,l),
(399,424,l),
(124,424,l),
(105,315,l),
(380,315,l),
(344,109,l),
(23,109,l),
(3,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 1 0 2 1 103 0 3 3 4 95 0 4 4 33 77 0 0 0 5 95 0 5 5 34 5 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 554;
}
);
note = uni018E;
unicode = (398,477);
},
{
glyphname = uni01CD;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (293,0);
},
{
name = ogonek;
pos = (608,0);
},
{
name = top;
pos = (453,910);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (195,0);
ref = uni030C.case;
}
);
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (288,0);
},
{
name = ogonek;
pos = (590,0);
},
{
name = top;
pos = (447,901);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (194,0);
ref = uni030C.case;
}
);
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (294,0);
},
{
name = ogonek;
pos = (613,0);
},
{
name = top;
pos = (455,912);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (195,0);
ref = uni030C.case;
}
);
width = 675;
},
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (625,0);
},
{
name = top;
pos = (459,918);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (195,0);
ref = uni030C.case;
}
);
width = 681;
}
);
note = uni01CD;
unicode = 461;
},
{
glyphname = uni0218;
kernLeft = S;
kernRight = S;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (205,-256);
},
{
name = top;
pos = (374,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (239,0);
ref = uni0326;
}
);
width = 588;
},
{
anchors = (
{
name = bottom;
pos = (210,-238);
},
{
name = top;
pos = (376,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (247,0);
ref = uni0326;
}
);
width = 591;
},
{
anchors = (
{
name = bottom;
pos = (203,-262);
},
{
name = top;
pos = (373,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (236,0);
ref = uni0326;
}
);
width = 586;
},
{
anchors = (
{
name = bottom;
pos = (200,-274);
},
{
name = top;
pos = (372,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (230,0);
ref = uni0326;
}
);
width = 584;
}
);
note = uni0218;
unicode = 536;
},
{
glyphname = uni021A;
kernLeft = T;
kernRight = T;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (194,-256);
},
{
name = top;
pos = (363,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = T;
},
{
alignment = -1;
pos = (227,0);
ref = uni0326;
}
);
width = 565;
},
{
anchors = (
{
name = bottom;
pos = (194,-238);
},
{
name = top;
pos = (360,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = T;
},
{
alignment = -1;
pos = (231,0);
ref = uni0326;
}
);
width = 559;
},
{
anchors = (
{
name = bottom;
pos = (193,-262);
},
{
name = top;
pos = (363,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = T;
},
{
alignment = -1;
pos = (226,0);
ref = uni0326;
}
);
width = 566;
},
{
anchors = (
{
name = bottom;
pos = (193,-274);
},
{
name = top;
pos = (365,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = T;
},
{
alignment = -1;
pos = (223,0);
ref = uni0326;
}
);
width = 570;
}
);
note = uni021A;
unicode = 538;
},
{
glyphname = uni1EBC;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (444,0);
},
{
name = top;
pos = (382,868);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (109,0);
ref = tildecomb.case;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (227,0);
},
{
name = ogonek;
pos = (435,0);
},
{
name = top;
pos = (379,859);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (120,0);
ref = tildecomb.case;
}
);
width = 542;
},
{
anchors = (
{
name = bottom;
pos = (228,0);
},
{
name = ogonek;
pos = (447,0);
},
{
name = top;
pos = (382,871);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (105,0);
ref = tildecomb.case;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (229,0);
},
{
name = ogonek;
pos = (453,0);
},
{
name = top;
pos = (384,877);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (97,0);
ref = tildecomb.case;
}
);
width = 545;
}
);
note = uni1EBC;
unicode = 7868;
},
{
glyphname = uni1EF8;
kernLeft = Y;
kernRight = Y;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (251,0);
},
{
name = top;
pos = (405,868);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (132,0);
ref = tildecomb.case;
}
);
width = 589;
},
{
anchors = (
{
name = bottom;
pos = (246,0);
},
{
name = top;
pos = (398,859);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (139,0);
ref = tildecomb.case;
}
);
width = 579;
},
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = top;
pos = (407,871);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (129,0);
ref = tildecomb.case;
}
);
width = 592;
},
{
anchors = (
{
name = bottom;
pos = (256,0);
},
{
name = top;
pos = (411,877);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (124,0);
ref = tildecomb.case;
}
);
width = 599;
}
);
note = uni1EF8;
unicode = 7928;
},
{
glyphname = a;
kernLeft = a;
kernRight = a;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (490,0);
},
{
name = top;
pos = (322,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,75,o),
(126,105,o),
(126,134,qs),
(126,179,o),
(198,224,o),
(251,224,qs),
(369,224,l),
(357,162,o),
(266,75,o),
(206,75,qs)
);
},
{
closed = 1;
nodes = (
(16,59,o),
(103,-12,o),
(169,-12,qs),
(230,-12,o),
(319,38,o),
(348,78,q),
(342,0,l),
(436,0,l),
(489,299,ls),
(494,327,o),
(494,347,qs),
(494,425,o),
(398,508,o),
(312,508,qs),
(224,508,o),
(91,419,o),
(63,337,q),
(169,337,l),
(185,377,o),
(254,419,o),
(296,419,qs),
(341,419,o),
(387,373,o),
(387,331,qs),
(387,318,o),
(384,297,q),
(257,297,ls),
(154,297,o),
(16,204,o),
(16,119,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 2 3 4 2 128 0 2 0 0 1 2 0 103 0 3 3 5 97 0 5 5 42 77 8 1 1 1 6 97 7 1 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 3 2 3 4 2 128 0 2 0 0 1 2 0 103 0 3 3 5 97 0 5 5 42 77 0 6 6 34 77 8 1 1 1 7 97 0 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
0 0 37 35 32 31 26 24 22 21 19 17 13 11 0 9 0 8 34 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 528;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (492,0);
},
{
name = top;
pos = (326,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(168,59,o),
(116,95,o),
(116,131,qs),
(116,184,o),
(203,234,o),
(268,234,qs),
(394,234,l),
(386,190,o),
(337,109,o),
(259,59,o),
(211,59,qs)
);
},
{
closed = 1;
nodes = (
(26,57,o),
(116,-12,o),
(186,-12,qs),
(250,-12,o),
(343,45,o),
(370,87,q),
(361,0,l),
(437,0,l),
(491,305,ls),
(495,328,o),
(495,352,qs),
(495,429,o),
(399,508,o),
(317,508,qs),
(232,508,o),
(98,421,o),
(73,341,q),
(160,341,l),
(177,389,o),
(257,437,o),
(306,437,qs),
(355,437,o),
(410,386,o),
(410,339,qs),
(410,322,o),
(406,299,q),
(273,299,ls),
(167,299,o),
(26,208,o),
(26,121,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 2 3 4 2 128 0 2 0 0 1 2 0 103 0 3 3 5 97 0 5 5 42 77 8 1 1 1 6 97 7 1 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 3 2 3 4 2 128 0 2 0 0 1 2 0 103 0 3 3 5 97 0 5 5 42 77 0 6 6 34 77 8 1 1 1 7 97 0 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
0 0 38 36 33 32 27 25 23 22 20 18 14 12 0 10 0 9 35 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 539;
},
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = ogonek;
pos = (489,0);
},
{
name = top;
pos = (321,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(170,80,o),
(129,108,o),
(129,135,qs),
(129,176,o),
(196,220,o),
(245,220,qs),
(361,220,l),
(348,160,o),
(261,80,o),
(204,80,qs)
);
},
{
closed = 1;
nodes = (
(12,59,o),
(98,-12,o),
(163,-12,qs),
(273,-12,o),
(340,74,q),
(335,0,l),
(436,0,l),
(488,296,ls),
(493,326,o),
(493,345,qs),
(493,423,o),
(397,508,o),
(310,508,qs),
(222,508,o),
(88,418,o),
(60,336,q),
(172,336,l),
(187,373,o),
(252,412,o),
(292,412,qs),
(336,412,o),
(379,368,o),
(379,328,qs),
(377,296,l),
(251,296,ls),
(185,296,o),
(76,255,o),
(12,175,o),
(12,118,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 6 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 2 3 4 2 128 0 2 0 0 1 2 0 103 0 3 3 5 97 0 5 5 42 77 8 1 1 1 6 97 7 1 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 3 2 3 4 2 128 0 2 0 0 1 2 0 103 0 3 3 5 97 0 5 5 42 77 0 6 6 34 77 8 1 1 1 7 97 0 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
0 0 36 34 32 31 26 24 22 21 19 17 14 12 0 9 0 8 34 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 524;
},
{
anchors = (
{
name = bottom;
pos = (230,0);
},
{
name = ogonek;
pos = (488,0);
},
{
name = top;
pos = (318,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(171,90,o),
(136,114,o),
(136,137,qs),
(136,173,o),
(193,213,o),
(234,213,qs),
(344,213,l),
(331,158,o),
(250,90,o),
(200,90,qs)
);
},
{
closed = 1;
nodes = (
(5,60,o),
(90,-12,o),
(151,-12,qs),
(209,-12,o),
(292,29,o),
(325,66,q),
(322,0,l),
(435,0,l),
(487,292,ls),
(492,322,o),
(492,342,qs),
(492,421,o),
(396,508,o),
(306,508,qs),
(216,508,o),
(84,417,o),
(53,333,q),
(178,333,l),
(193,365,o),
(249,400,o),
(285,400,qs),
(364,400,o),
(364,323,qs),
(364,315,o),
(362,295,q),
(240,295,ls),
(175,295,o),
(68,254,o),
(5,173,o),
(5,117,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 6 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 2 3 4 2 128 0 2 0 0 1 2 0 103 0 3 3 5 97 0 5 5 42 77 8 1 1 1 6 97 7 1 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 3 2 3 4 2 128 0 2 0 0 1 2 0 103 0 3 3 5 97 0 5 5 42 77 0 6 6 34 77 8 1 1 1 7 97 0 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
0 0 37 35 32 31 26 24 22 21 19 17 14 12 0 9 0 8 34 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = a;
unicode = 97;
},
{
glyphname = aacute;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (490,0);
},
{
name = top;
pos = (367,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (169,0);
ref = acutecomb;
}
);
width = 528;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (492,0);
},
{
name = top;
pos = (371,747);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (177,0);
ref = acutecomb;
}
);
width = 539;
},
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = ogonek;
pos = (489,0);
},
{
name = top;
pos = (366,750);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (166,0);
ref = acutecomb;
}
);
width = 524;
},
{
anchors = (
{
name = bottom;
pos = (230,0);
},
{
name = ogonek;
pos = (488,0);
},
{
name = top;
pos = (363,751);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (161,0);
ref = acutecomb;
}
);
width = 516;
}
);
note = aacute;
unicode = 225;
},
{
glyphname = abreve;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (490,0);
},
{
name = top;
pos = (362,722);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (130,0);
ref = uni0306;
}
);
width = 528;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (492,0);
},
{
name = top;
pos = (368,732);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (141,0);
ref = uni0306;
}
);
width = 539;
},
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = ogonek;
pos = (489,0);
},
{
name = top;
pos = (360,719);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (126,0);
ref = uni0306;
}
);
width = 524;
},
{
anchors = (
{
name = bottom;
pos = (230,0);
},
{
name = ogonek;
pos = (488,0);
},
{
name = top;
pos = (356,712);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (118,0);
ref = uni0306;
}
);
width = 516;
}
);
note = abreve;
unicode = 259;
},
{
glyphname = acircumflex;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (490,0);
},
{
name = top;
pos = (363,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (137,0);
ref = uni0302;
}
);
width = 528;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (492,0);
},
{
name = top;
pos = (368,733);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (145,0);
ref = uni0302;
}
);
width = 539;
},
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = ogonek;
pos = (489,0);
},
{
name = top;
pos = (361,728);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (134,0);
ref = uni0302;
}
);
width = 524;
},
{
anchors = (
{
name = bottom;
pos = (230,0);
},
{
name = ogonek;
pos = (488,0);
},
{
name = top;
pos = (358,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (128,0);
ref = uni0302;
}
);
width = 516;
}
);
note = acircumflex;
unicode = 226;
},
{
glyphname = adieresis;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (490,0);
},
{
name = top;
pos = (362,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (107,0);
ref = uni0308;
}
);
width = 528;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (492,0);
},
{
name = top;
pos = (365,720);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (134,0);
ref = uni0308;
}
);
width = 539;
},
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = ogonek;
pos = (489,0);
},
{
name = top;
pos = (361,724);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (97,0);
ref = uni0308;
}
);
width = 524;
},
{
anchors = (
{
name = bottom;
pos = (230,0);
},
{
name = ogonek;
pos = (488,0);
},
{
name = top;
pos = (359,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (79,0);
ref = uni0308;
}
);
width = 516;
}
);
note = adieresis;
unicode = 228;
},
{
glyphname = agrave;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (490,0);
},
{
name = top;
pos = (367,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (170,0);
ref = gravecomb;
}
);
width = 528;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (492,0);
},
{
name = top;
pos = (371,747);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (178,0);
ref = gravecomb;
}
);
width = 539;
},
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = ogonek;
pos = (489,0);
},
{
name = top;
pos = (366,750);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (167,0);
ref = gravecomb;
}
);
width = 524;
},
{
anchors = (
{
name = bottom;
pos = (230,0);
},
{
name = ogonek;
pos = (488,0);
},
{
name = top;
pos = (363,751);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (161,0);
ref = gravecomb;
}
);
width = 516;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = amacron;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (490,0);
},
{
name = top;
pos = (350,693);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (90,0);
ref = uni0304;
}
);
width = 528;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (492,0);
},
{
name = top;
pos = (355,695);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (101,0);
ref = uni0304;
}
);
width = 539;
},
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = ogonek;
pos = (489,0);
},
{
name = top;
pos = (348,692);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (86,0);
ref = uni0304;
}
);
width = 524;
},
{
anchors = (
{
name = bottom;
pos = (230,0);
},
{
name = ogonek;
pos = (488,0);
},
{
name = top;
pos = (344,690);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (79,0);
ref = uni0304;
}
);
width = 516;
}
);
note = amacron;
unicode = 257;
},
{
glyphname = aogonek;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (490,0);
},
{
name = top;
pos = (322,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,75,o),
(126,105,o),
(126,134,qs),
(126,179,o),
(198,224,o),
(251,224,qs),
(369,224,l),
(357,162,o),
(266,75,o),
(206,75,qs)
);
},
{
closed = 1;
nodes = (
(417,-206,o),
(461,-193,q),
(472,-127,l),
(433,-142,o),
(401,-142,qs),
(378,-142,o),
(352,-122,o),
(352,-105,qs),
(352,-83,o),
(388,-46,o),
(431,-27,qs),
(490,0,l),
(475,52,l),
(443,39,l),
(489,299,ls),
(494,327,o),
(494,347,qs),
(494,425,o),
(398,508,o),
(312,508,qs),
(224,508,o),
(91,419,o),
(63,337,q),
(169,337,l),
(185,377,o),
(254,419,o),
(296,419,qs),
(341,419,o),
(387,373,o),
(387,331,qs),
(387,318,o),
(384,297,q),
(257,297,ls),
(154,297,o),
(16,204,o),
(16,119,qs),
(16,59,o),
(103,-12,o),
(169,-12,qs),
(230,-12,o),
(319,38,o),
(348,78,q),
(342,0,l),
(358,0,l),
(309,-28,o),
(267,-90,o),
(267,-126,qs),
(267,-165,o),
(328,-206,o),
(377,-206,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
17 1 1 0 46 45 2 2 1 56 1 8 2 3 76 47 1 2 1 75
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
17 1 1 0 46 45 2 2 1 56 1 8 3 3 76 47 1 2 1 75
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 6 5 4 5 6 4 128 0 4 0 0 1 4 0 103 0 5 5 7 97 0 7 7 42 77 10 1 1 1 2 97 3 1 2 2 34 77 0 8 8 9 97 11 1 9 9 38 9 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 6 5 4 5 6 4 128 0 4 0 0 1 4 0 103 0 5 5 7 97 0 7 7 42 77 0 2 2 34 77 10 1 1 1 3 97 0 3 3 40 77 0 8 8 9 97 11 1 9 9 38 9 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 6 5 4 5 6 4 128 0 4 0 0 1 4 0 103 0 8 11 1 9 8 9 101 0 5 5 7 97 0 7 7 42 77 0 2 2 34 77 10 1 1 1 3 97 0 3 3 40 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
10 10 0 0 10 59 10 58 55 53 40 38 36 35 33 31 27 25 21 19 16 15 0 9 0 8 34 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 528;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (492,0);
},
{
name = top;
pos = (326,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(168,59,o),
(116,95,o),
(116,131,qs),
(116,184,o),
(203,234,o),
(268,234,qs),
(394,234,l),
(386,190,o),
(337,109,o),
(259,59,o),
(211,59,qs)
);
},
{
closed = 1;
nodes = (
(423,-203,o),
(462,-190,q),
(471,-134,l),
(435,-149,o),
(404,-149,qs),
(380,-149,o),
(351,-128,o),
(351,-109,qs),
(351,-63,o),
(429,-28,qs),
(492,0,l),
(479,43,l),
(442,28,l),
(491,305,ls),
(495,328,o),
(495,352,qs),
(495,429,o),
(399,508,o),
(317,508,qs),
(232,508,o),
(98,421,o),
(73,341,q),
(160,341,l),
(177,389,o),
(257,437,o),
(306,437,qs),
(355,437,o),
(410,386,o),
(410,339,qs),
(410,322,o),
(406,299,q),
(273,299,ls),
(167,299,o),
(26,208,o),
(26,121,qs),
(26,57,o),
(116,-12,o),
(186,-12,qs),
(250,-12,o),
(343,45,o),
(370,87,q),
(361,0,l),
(379,0,l),
(326,-27,o),
(281,-90,o),
(281,-127,qs),
(281,-164,o),
(339,-203,o),
(384,-203,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
18 1 1 0 47 46 2 2 1 56 1 8 2 3 76 48 1 2 1 75
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
18 1 1 0 47 46 2 2 1 56 1 8 3 3 76 48 1 2 1 75
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 6 5 4 5 6 4 128 0 4 0 0 1 4 0 103 0 5 5 7 97 0 7 7 42 77 10 1 1 1 2 97 3 1 2 2 34 77 0 8 8 9 97 11 1 9 9 38 9 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 6 5 4 5 6 4 128 0 4 0 0 1 4 0 103 0 5 5 7 97 0 7 7 42 77 0 2 2 34 77 10 1 1 1 3 97 0 3 3 40 77 0 8 8 9 97 11 1 9 9 38 9 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 6 5 4 5 6 4 128 0 4 0 0 1 4 0 103 0 8 11 1 9 8 9 101 0 5 5 7 97 0 7 7 42 77 0 2 2 34 77 10 1 1 1 3 97 0 3 3 40 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
11 11 0 0 11 59 11 58 55 53 41 39 37 36 34 32 28 26 22 20 17 16 0 10 0 9 35 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 539;
},
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = ogonek;
pos = (489,0);
},
{
name = top;
pos = (321,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(170,80,o),
(129,108,o),
(129,135,qs),
(129,176,o),
(196,220,o),
(245,220,qs),
(361,220,l),
(348,160,o),
(261,80,o),
(204,80,qs)
);
},
{
closed = 1;
nodes = (
(413,-208,o),
(460,-194,q),
(471,-125,l),
(432,-140,o),
(400,-140,qs),
(378,-140,o),
(352,-121,o),
(352,-104,qs),
(352,-82,o),
(388,-46,o),
(431,-27,qs),
(489,0,l),
(473,54,l),
(443,42,l),
(488,296,ls),
(493,326,o),
(493,345,qs),
(493,423,o),
(397,508,o),
(310,508,qs),
(222,508,o),
(88,418,o),
(60,336,q),
(172,336,l),
(187,373,o),
(252,412,o),
(292,412,qs),
(336,412,o),
(379,368,o),
(379,328,qs),
(377,296,l),
(251,296,ls),
(185,296,o),
(76,255,o),
(12,175,o),
(12,118,qs),
(12,59,o),
(98,-12,o),
(163,-12,qs),
(273,-12,o),
(340,74,q),
(335,0,l),
(351,0,l),
(303,-28,o),
(262,-90,o),
(262,-126,qs),
(262,-166,o),
(325,-208,o),
(374,-208,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
45 44 17 3 2 1 55 1 8 2 2 76 46 1 2 1 75
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
45 44 17 3 2 1 55 1 8 3 2 76 46 1 2 1 75
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 6 5 4 5 6 4 128 0 4 0 0 1 4 0 103 0 5 5 7 97 0 7 7 42 77 10 1 1 1 2 97 3 1 2 2 34 77 0 8 8 9 97 11 1 9 9 38 9 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 6 5 4 5 6 4 128 0 4 0 0 1 4 0 103 0 5 5 7 97 0 7 7 42 77 0 2 2 34 77 10 1 1 1 3 97 0 3 3 40 77 0 8 8 9 97 11 1 9 9 38 9 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 6 5 4 5 6 4 128 0 4 0 0 1 4 0 103 0 8 11 1 9 8 9 101 0 5 5 7 97 0 7 7 42 77 0 2 2 34 77 10 1 1 1 3 97 0 3 3 40 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
10 10 0 0 10 58 10 57 54 52 39 37 35 34 32 30 27 25 20 18 16 15 0 9 0 8 34 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 524;
},
{
anchors = (
{
name = bottom;
pos = (230,0);
},
{
name = ogonek;
pos = (488,0);
},
{
name = top;
pos = (318,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(171,90,o),
(136,114,o),
(136,137,qs),
(136,173,o),
(193,213,o),
(234,213,qs),
(344,213,l),
(331,158,o),
(250,90,o),
(200,90,qs)
);
},
{
closed = 1;
nodes = (
(412,-210,o),
(459,-196,q),
(472,-120,l),
(430,-135,o),
(398,-135,qs),
(377,-135,o),
(353,-117,o),
(353,-102,qs),
(353,-81,o),
(388,-46,o),
(432,-26,qs),
(488,0,l),
(470,60,l),
(444,50,l),
(487,292,ls),
(492,322,o),
(492,342,qs),
(492,421,o),
(396,508,o),
(306,508,qs),
(216,508,o),
(84,417,o),
(53,333,q),
(178,333,l),
(193,365,o),
(249,400,o),
(285,400,qs),
(364,400,o),
(364,323,qs),
(364,315,o),
(362,295,q),
(240,295,ls),
(175,295,o),
(68,254,o),
(5,173,o),
(5,117,qs),
(5,60,o),
(90,-12,o),
(151,-12,qs),
(209,-12,o),
(292,29,o),
(325,66,q),
(322,0,l),
(338,0,l),
(292,-28,o),
(253,-90,o),
(253,-126,qs),
(253,-168,o),
(317,-210,o),
(369,-210,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
46 45 17 3 2 1 56 1 8 2 2 76 47 1 2 1 75
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
46 45 17 3 2 1 56 1 8 3 2 76 47 1 2 1 75
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 6 5 4 5 6 4 128 0 4 0 0 1 4 0 103 0 5 5 7 97 0 7 7 42 77 10 1 1 1 2 97 3 1 2 2 34 77 0 8 8 9 97 11 1 9 9 38 9 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 6 5 4 5 6 4 128 0 4 0 0 1 4 0 103 0 5 5 7 97 0 7 7 42 77 0 2 2 34 77 10 1 1 1 3 97 0 3 3 40 77 0 8 8 9 97 11 1 9 9 38 9 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 6 5 4 5 6 4 128 0 4 0 0 1 4 0 103 0 8 11 1 9 8 9 101 0 5 5 7 97 0 7 7 42 77 0 2 2 34 77 10 1 1 1 3 97 0 3 3 40 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
10 10 0 0 10 59 10 58 55 53 40 38 36 35 33 31 28 26 21 19 16 15 0 9 0 8 34 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = aogonek;
unicode = 261;
},
{
glyphname = aring;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (490,0);
},
{
name = top;
pos = (370,766);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (167,0);
ref = uni030A;
}
);
width = 528;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (492,0);
},
{
name = top;
pos = (373,763);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (175,0);
ref = uni030A;
}
);
width = 539;
},
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = ogonek;
pos = (489,0);
},
{
name = top;
pos = (368,767);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (164,0);
ref = uni030A;
}
);
width = 524;
},
{
anchors = (
{
name = bottom;
pos = (230,0);
},
{
name = ogonek;
pos = (488,0);
},
{
name = top;
pos = (366,769);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (158,0);
ref = uni030A;
}
);
width = 516;
}
);
note = aring;
unicode = 229;
},
{
glyphname = atilde;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (490,0);
},
{
name = top;
pos = (359,705);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (115,0);
ref = tildecomb;
}
);
width = 528;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (492,0);
},
{
name = top;
pos = (363,705);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (131,0);
ref = tildecomb;
}
);
width = 539;
},
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = ogonek;
pos = (489,0);
},
{
name = top;
pos = (358,704);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (109,0);
ref = tildecomb;
}
);
width = 524;
},
{
anchors = (
{
name = bottom;
pos = (230,0);
},
{
name = ogonek;
pos = (488,0);
},
{
name = top;
pos = (355,704);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (98,0);
ref = tildecomb;
}
);
width = 516;
}
);
note = atilde;
unicode = 227;
},
{
glyphname = ae;
kernLeft = a;
kernRight = ae;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (415,0);
},
{
name = top;
pos = (503,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(254,-12,o),
(374,49,o),
(412,100,q),
(435,48,o),
(533,-12,o),
(599,-12,qs),
(679,-12,o),
(820,73,o),
(858,152,q),
(751,152,l),
(729,116,o),
(658,76,o),
(614,76,qs),
(561,76,o),
(493,142,o),
(493,201,qs),
(493,209,o),
(495,223,q),
(881,223,l),
(895,273,o),
(895,315,qs),
(895,367,o),
(850,455,o),
(759,508,o),
(692,508,qs),
(634,508,o),
(531,466,o),
(491,428,q),
(451,508,o),
(326,508,qs),
(276,508,o),
(172,472,o),
(89,395,o),
(73,336,q),
(179,336,l),
(194,377,o),
(265,421,o),
(311,421,qs),
(355,421,o),
(405,377,o),
(405,334,qs),
(405,317,o),
(401,296,q),
(256,296,ls),
(196,296,o),
(87,259,o),
(16,179,o),
(16,117,qs),
(16,59,o),
(104,-12,o),
(185,-12,qs)
);
},
{
closed = 1;
nodes = (
(174,74,o),
(130,107,o),
(130,136,qs),
(130,178,o),
(197,224,o),
(253,224,qs),
(384,224,l),
(381,205,ls),
(375,173,o),
(327,112,o),
(253,74,o),
(212,74,qs)
);
},
{
closed = 1;
nodes = (
(510,296,l),
(529,356,o),
(620,421,o),
(676,421,qs),
(728,421,o),
(790,363,o),
(790,312,qs),
(789,296,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
22 1 1 3 47 1 6 7 2 76 0 2 1 0 1 2 0 128 0 7 5 6 5 7 6 128 13 1 0 10 1 5 7 0 5 103 12 1 1 1 3 97 4 1 3 3 42 77 15 11 2 6 6 8 97 14 9 2 8 8 40 8 78 51 51 0 0 70 69 67 65 51 62 51 61 57 55 0 50 0 49 34 18 36 21 35 35 18 36 37 16 8 31
CALL[ ]	/* CallFunction */";
};
width = 917;
},
{
anchors = (
{
name = bottom;
pos = (419,0);
},
{
name = top;
pos = (507,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(261,-12,o),
(382,56,o),
(418,109,q),
(439,52,o),
(537,-12,o),
(605,-12,qs),
(687,-12,o),
(820,73,o),
(857,148,q),
(774,148,l),
(749,106,o),
(669,59,o),
(618,59,qs),
(561,59,o),
(484,132,o),
(484,199,qs),
(484,214,o),
(487,229,q),
(882,229,l),
(895,283,o),
(895,319,qs),
(895,367,o),
(855,453,o),
(766,508,o),
(699,508,qs),
(638,508,o),
(530,461,o),
(490,418,q),
(474,461,o),
(391,508,o),
(327,508,qs),
(279,508,o),
(179,473,o),
(98,398,o),
(82,341,q),
(168,341,l),
(185,387,o),
(265,437,o),
(315,437,qs),
(364,437,o),
(418,386,o),
(418,339,qs),
(418,319,o),
(414,299,q),
(264,299,ls),
(206,299,o),
(97,262,o),
(26,181,o),
(26,118,qs),
(26,61,o),
(109,-12,o),
(189,-12,qs)
);
},
{
closed = 1;
nodes = (
(166,59,o),
(115,98,o),
(115,131,qs),
(115,180,o),
(194,234,o),
(259,234,qs),
(401,234,l),
(397,209,ls),
(392,176,o),
(340,106,o),
(258,59,o),
(210,59,qs)
);
},
{
closed = 1;
nodes = (
(499,294,l),
(519,362,o),
(622,437,o),
(685,437,qs),
(743,437,o),
(813,372,o),
(813,316,qs),
(813,310,o),
(811,294,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
23 1 2 1 48 1 6 7 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 1 0 1 2 0 128 0 7 5 6 5 7 6 128 13 1 0 10 1 5 7 0 5 103 12 1 1 1 3 97 4 1 3 3 42 77 15 11 2 6 6 8 97 14 9 2 8 8 40 8 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 2 1 0 1 2 0 128 0 7 5 6 5 7 6 128 0 0 0 10 5 0 10 103 0 13 0 5 7 13 5 103 12 1 1 1 3 97 4 1 3 3 42 77 15 11 2 6 6 8 97 14 9 2 8 8 40 8 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
52 52 0 0 72 71 69 67 52 63 52 62 58 56 0 51 0 50 34 18 36 21 36 35 18 36 37 16 8 31
CALL[ ]	/* CallFunction */";
};
width = 926;
},
{
anchors = (
{
name = bottom;
pos = (413,0);
},
{
name = top;
pos = (501,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(252,-12,o),
(371,48,o),
(409,97,q),
(433,45,o),
(531,-12,o),
(597,-12,qs),
(676,-12,o),
(819,73,o),
(858,153,q),
(743,153,l),
(722,120,o),
(655,82,o),
(613,82,qs),
(561,82,o),
(496,144,o),
(496,199,qs),
(496,213,o),
(498,221,q),
(880,221,l),
(894,271,o),
(894,314,qs),
(894,368,o),
(848,456,o),
(756,508,o),
(690,508,qs),
(633,508,o),
(531,468,o),
(491,431,q),
(450,508,o),
(326,508,qs),
(275,508,o),
(170,472,o),
(86,393,o),
(70,334,q),
(182,334,l),
(196,373,o),
(266,415,o),
(310,415,qs),
(352,415,o),
(400,373,o),
(400,332,qs),
(400,311,o),
(396,295,q),
(253,295,ls),
(193,295,o),
(83,258,o),
(12,178,o),
(12,117,qs),
(12,58,o),
(101,-12,o),
(183,-12,qs)
);
},
{
closed = 1;
nodes = (
(176,78,o),
(134,110,o),
(134,137,qs),
(134,177,o),
(198,220,o),
(251,220,qs),
(378,220,l),
(375,204,ls),
(370,172,o),
(322,113,o),
(252,78,o),
(213,78,qs)
);
},
{
closed = 1;
nodes = (
(513,296,l),
(532,353,o),
(619,415,o),
(673,415,qs),
(723,415,o),
(782,359,o),
(782,311,qs),
(781,296,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
22 1 1 3 47 1 6 7 2 76 0 2 1 0 1 2 0 128 0 7 5 6 5 7 6 128 13 1 0 10 1 5 7 0 5 103 12 1 1 1 3 97 4 1 3 3 42 77 15 11 2 6 6 8 97 14 9 2 8 8 40 8 78 51 51 0 0 70 69 67 65 51 62 51 61 57 55 0 50 0 49 34 18 36 21 35 35 18 36 37 16 8 31
CALL[ ]	/* CallFunction */";
};
width = 913;
},
{
anchors = (
{
name = bottom;
pos = (410,0);
},
{
name = top;
pos = (498,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(247,-12,o),
(365,43,o),
(405,91,q),
(430,42,o),
(528,-12,o),
(593,-12,qs),
(670,-12,o),
(818,73,o),
(858,156,q),
(728,156,l),
(708,127,o),
(648,93,o),
(610,93,qs),
(561,93,o),
(502,150,o),
(502,200,qs),
(502,211,o),
(503,217,q),
(879,217,l),
(894,264,o),
(894,311,qs),
(894,368,o),
(845,457,o),
(750,508,o),
(685,508,qs),
(575,508,o),
(492,438,q),
(446,508,o),
(325,508,qs),
(272,508,o),
(165,471,o),
(81,391,o),
(64,331,q),
(189,331,l),
(201,366,o),
(266,404,o),
(307,404,qs),
(345,404,o),
(391,366,o),
(391,329,qs),
(391,309,o),
(387,293,q),
(247,293,ls),
(186,293,o),
(76,256,o),
(5,176,o),
(5,116,qs),
(5,57,o),
(97,-12,o),
(180,-12,qs)
);
},
{
closed = 1;
nodes = (
(181,88,o),
(144,115,o),
(144,140,qs),
(144,175,o),
(200,213,o),
(247,213,qs),
(366,213,l),
(364,201,ls),
(356,153,o),
(267,88,o),
(214,88,qs)
);
},
{
closed = 1;
nodes = (
(520,297,l),
(538,349,o),
(618,404,o),
(667,404,qs),
(713,404,o),
(767,352,o),
(767,308,qs),
(766,297,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
22 1 1 3 61 1 0 2 46 1 8 6 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
22 1 1 3 61 1 0 2 46 1 11 6 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 1 0 1 2 0 128 0 7 5 6 5 7 6 128 13 1 0 10 1 5 7 0 5 103 12 1 1 1 3 97 4 1 3 3 42 77 15 11 2 6 6 8 97 14 9 2 8 8 40 8 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 2 1 0 1 2 0 128 0 7 5 6 5 7 6 128 13 1 0 10 1 5 7 0 5 103 12 1 1 1 3 97 4 1 3 3 42 77 0 6 6 8 97 14 9 2 8 8 40 77 15 1 11 11 8 97 14 9 2 8 8 40 8 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
50 50 0 0 68 67 65 63 50 60 50 59 55 53 0 49 0 48 34 18 36 21 34 35 18 36 37 16 8 31
CALL[ ]	/* CallFunction */";
};
width = 907;
}
);
note = ae;
unicode = 230;
},
{
glyphname = aeacute;
kernLeft = a;
kernRight = ae;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (415,0);
},
{
name = top;
pos = (548,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = ae;
},
{
alignment = -1;
pos = (350,0);
ref = acutecomb;
}
);
width = 917;
},
{
anchors = (
{
name = bottom;
pos = (419,0);
},
{
name = top;
pos = (552,747);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = ae;
},
{
alignment = -1;
pos = (358,0);
ref = acutecomb;
}
);
width = 926;
},
{
anchors = (
{
name = bottom;
pos = (413,0);
},
{
name = top;
pos = (546,750);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = ae;
},
{
alignment = -1;
pos = (347,0);
ref = acutecomb;
}
);
width = 913;
},
{
anchors = (
{
name = bottom;
pos = (410,0);
},
{
name = top;
pos = (543,751);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = ae;
},
{
alignment = -1;
pos = (341,0);
ref = acutecomb;
}
);
width = 907;
}
);
note = aeacute;
unicode = 509;
},
{
glyphname = b;
kernLeft = b;
kernRight = b;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,-12,o),
(503,69,o),
(578,210,o),
(578,295,qs),
(578,353,o),
(531,450,o),
(439,508,o),
(375,508,qs),
(267,508,o),
(194,426,q),
(242,700,l),
(136,700,l),
(13,0,l),
(108,0,l),
(132,76,l),
(151,39,o),
(237,-12,o),
(292,-12,qs)
);
},
{
closed = 1;
nodes = (
(231,81,o),
(160,155,o),
(160,215,qs),
(160,268,o),
(204,360,o),
(285,416,o),
(339,416,qs),
(397,416,o),
(468,338,o),
(468,278,qs),
(468,222,o),
(423,132,o),
(342,81,o),
(290,81,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
7 1 4 2 2 1 0 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 1 33 77 0 4 4 2 97 0 2 2 42 77 7 1 5 5 0 98 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 1 33 77 0 4 4 2 97 0 2 2 42 77 0 0 0 34 77 7 1 5 5 3 98 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
18 18 0 0 18 31 18 30 25 23 0 17 0 16 34 17 19 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 611;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(371,-12,o),
(502,68,o),
(576,208,o),
(576,295,qs),
(576,357,o),
(526,454,o),
(434,508,o),
(372,508,qs),
(259,508,o),
(183,419,q),
(232,700,l),
(148,700,l),
(25,0,l),
(101,0,l),
(124,84,l),
(142,44,o),
(233,-12,o),
(290,-12,qs)
);
},
{
closed = 1;
nodes = (
(229,61,o),
(152,142,o),
(152,209,qs),
(152,272,o),
(203,376,o),
(293,435,o),
(350,435,qs),
(413,435,o),
(489,350,o),
(489,283,qs),
(489,219,o),
(439,118,o),
(351,61,o),
(294,61,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
7 2 2 5 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 1 33 77 0 4 4 2 97 0 2 2 42 77 7 1 5 5 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 1 33 77 0 4 4 2 97 0 2 2 42 77 0 0 0 34 77 7 1 5 5 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
18 18 0 0 18 31 18 30 25 23 0 17 0 16 34 17 19 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 619;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(373,-12,o),
(504,69,o),
(579,209,o),
(579,294,qs),
(579,350,o),
(533,448,o),
(441,508,o),
(376,508,qs),
(269,508,o),
(198,428,q),
(245,700,l),
(132,700,l),
(9,0,l),
(110,0,l),
(135,73,l),
(154,37,o),
(238,-12,o),
(292,-12,qs)
);
},
{
closed = 1;
nodes = (
(232,87,o),
(162,159,o),
(162,216,qs),
(162,266,o),
(204,355,o),
(283,409,o),
(335,409,qs),
(392,409,o),
(461,334,o),
(461,276,qs),
(461,223,o),
(417,137,o),
(339,87,o),
(289,87,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
7 1 4 2 2 1 0 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 1 33 77 0 4 4 2 97 0 2 2 42 77 7 1 5 5 0 98 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 1 33 77 0 4 4 2 97 0 2 2 42 77 0 0 0 34 77 7 1 5 5 3 98 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
18 18 0 0 18 31 18 30 25 23 0 17 0 16 34 17 19 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 608;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(373,-12,o),
(504,70,o),
(580,210,o),
(580,294,qs),
(580,348,o),
(536,446,o),
(445,508,o),
(378,508,qs),
(273,508,o),
(205,433,q),
(252,700,l),
(124,700,l),
(1,0,l),
(114,0,l),
(140,68,l),
(160,33,o),
(241,-12,o),
(293,-12,qs)
);
},
{
closed = 1;
nodes = (
(233,100,o),
(167,168,o),
(167,220,qs),
(167,263,o),
(204,344,o),
(277,396,o),
(328,396,qs),
(382,396,o),
(447,326,o),
(447,272,qs),
(447,225,o),
(406,146,o),
(333,100,o),
(286,100,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
7 1 4 2 2 1 0 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 1 33 77 0 4 4 2 97 0 2 2 42 77 7 1 5 5 0 98 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 1 33 77 0 4 4 2 97 0 2 2 42 77 0 0 0 34 77 7 1 5 5 3 98 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
18 18 0 0 18 31 18 30 25 23 0 17 0 16 34 17 19 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
kernLeft = c;
kernRight = c;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = top;
pos = (326,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(331,-12,o),
(481,81,o),
(514,171,q),
(404,171,l),
(387,127,o),
(309,78,o),
(262,78,qs),
(210,78,o),
(143,150,o),
(143,211,qs),
(143,260,o),
(184,356,o),
(265,418,o),
(321,418,qs),
(369,418,o),
(430,369,o),
(430,325,q),
(541,325,l),
(540,410,o),
(430,508,o),
(337,508,qs),
(252,508,o),
(114,427,o),
(34,286,o),
(34,200,qs),
(34,142,o),
(83,46,o),
(179,-12,o),
(246,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 42 77 0 3 3 5 97 6 1 5 5 40 5 78 0 0 0 28 0 27 18 37 34 18 38 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 564;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = top;
pos = (329,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(332,-12,o),
(477,77,o),
(508,162,q),
(422,162,l),
(404,113,o),
(316,59,o),
(263,59,qs),
(206,59,o),
(130,139,o),
(130,208,qs),
(130,263,o),
(176,368,o),
(266,436,o),
(329,436,qs),
(383,436,o),
(452,383,o),
(452,334,q),
(538,334,l),
(537,414,o),
(431,508,o),
(341,508,qs),
(258,508,o),
(122,427,o),
(43,285,o),
(43,199,qs),
(43,144,o),
(89,47,o),
(183,-12,o),
(250,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 42 77 0 3 3 5 97 6 1 5 5 40 5 78 0 0 0 28 0 27 18 37 34 18 38 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 569;
},
{
anchors = (
{
name = bottom;
pos = (237,0);
},
{
name = top;
pos = (325,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(330,-12,o),
(482,82,o),
(515,174,q),
(397,174,l),
(382,132,o),
(307,84,o),
(261,84,qs),
(211,84,o),
(147,153,o),
(147,211,qs),
(147,258,o),
(187,351,o),
(264,411,o),
(318,411,qs),
(365,411,o),
(423,364,o),
(423,322,q),
(541,322,l),
(541,408,o),
(429,508,o),
(335,508,qs),
(250,508,o),
(110,426,o),
(30,285,o),
(30,200,qs),
(30,141,o),
(80,44,o),
(176,-12,o),
(244,-12,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 4 2 1 114 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 42 77 0 3 3 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 42 77 0 3 3 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 28 0 27 18 37 34 18 38 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (235,0);
},
{
name = top;
pos = (323,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(329,-12,o),
(484,85,o),
(519,180,q),
(385,180,l),
(370,141,o),
(302,97,o),
(260,97,qs),
(214,97,o),
(156,160,o),
(156,213,qs),
(156,257,o),
(192,343,o),
(263,399,o),
(313,399,qs),
(355,399,o),
(408,355,o),
(408,316,q),
(543,316,l),
(543,405,o),
(429,508,o),
(332,508,qs),
(246,508,o),
(105,427,o),
(24,286,o),
(24,201,qs),
(24,140,o),
(75,43,o),
(173,-12,o),
(241,-12,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 4 2 1 114 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 42 77 0 3 3 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 42 77 0 3 3 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 28 0 27 18 37 34 18 38 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = c;
unicode = 99;
},
{
glyphname = cacute;
kernLeft = c;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = top;
pos = (371,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (173,0);
ref = acutecomb;
}
);
width = 564;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = top;
pos = (374,747);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (180,0);
ref = acutecomb;
}
);
width = 569;
},
{
anchors = (
{
name = bottom;
pos = (237,0);
},
{
name = top;
pos = (370,750);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (171,0);
ref = acutecomb;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (235,0);
},
{
name = top;
pos = (368,751);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (166,0);
ref = acutecomb;
}
);
width = 558;
}
);
note = cacute;
unicode = 263;
},
{
glyphname = ccaron;
kernLeft = c;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = top;
pos = (367,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (141,0);
ref = uni030C;
}
);
width = 564;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = top;
pos = (371,733);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (148,0);
ref = uni030C;
}
);
width = 569;
},
{
anchors = (
{
name = bottom;
pos = (237,0);
},
{
name = top;
pos = (366,728);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (138,0);
ref = uni030C;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (235,0);
},
{
name = top;
pos = (363,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (133,0);
ref = uni030C;
}
);
width = 558;
}
);
note = ccaron;
unicode = 269;
},
{
glyphname = ccedilla;
kernLeft = c;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (192,-261);
},
{
name = top;
pos = (326,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(228,-261,ls),
(288,-261,o),
(373,-194,o),
(373,-137,qs),
(373,-97,o),
(311,-55,o),
(260,-56,q),
(268,-11,l),
(347,-5,o),
(483,87,o),
(514,171,q),
(404,171,l),
(387,127,o),
(309,78,o),
(262,78,qs),
(210,78,o),
(143,150,o),
(143,211,qs),
(143,260,o),
(184,356,o),
(265,418,o),
(321,418,qs),
(369,418,o),
(430,369,o),
(430,325,q),
(541,325,l),
(540,410,o),
(430,508,o),
(337,508,qs),
(252,508,o),
(114,427,o),
(34,286,o),
(34,200,qs),
(34,121,o),
(121,6,o),
(200,-8,q),
(181,-115,l),
(236,-115,ls),
(291,-115,o),
(291,-148,qs),
(290,-172,o),
(253,-197,o),
(222,-197,qs),
(120,-197,l),
(109,-261,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 7 5 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 5 7 7 5 112 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 42 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 5 7 4 5 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 42 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 20 18 37 34 18 39 35 32 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 564;
},
{
anchors = (
{
name = bottom;
pos = (196,-259);
},
{
name = top;
pos = (329,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(230,-259,ls),
(289,-259,o),
(369,-194,o),
(369,-140,qs),
(369,-102,o),
(307,-62,o),
(255,-63,q),
(264,-12,l),
(342,-8,o),
(478,81,o),
(508,162,q),
(422,162,l),
(404,113,o),
(316,59,o),
(263,59,qs),
(206,59,o),
(130,139,o),
(130,208,qs),
(130,263,o),
(176,368,o),
(266,436,o),
(329,436,qs),
(383,436,o),
(452,383,o),
(452,334,q),
(538,334,l),
(537,414,o),
(431,508,o),
(341,508,qs),
(258,508,o),
(122,427,o),
(43,285,o),
(43,199,qs),
(43,123,o),
(128,5,o),
(208,-9,q),
(190,-113,l),
(239,-113,ls),
(300,-113,o),
(300,-149,qs),
(300,-177,o),
(260,-206,o),
(223,-206,qs),
(131,-206,l),
(122,-259,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
8 1 7 5 1 76 0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 99 0 4 4 2 97 0 2 2 42 77 0 5 5 7 97 0 7 7 40 7 78 44 42 17 18 18 37 34 18 39 35 32 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 569;
},
{
anchors = (
{
name = bottom;
pos = (191,-262);
},
{
name = top;
pos = (325,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(227,-262,ls),
(287,-262,o),
(374,-195,o),
(374,-136,qs),
(374,-95,o),
(311,-53,o),
(260,-54,q),
(268,-11,l),
(348,-4,o),
(485,89,o),
(515,174,q),
(397,174,l),
(382,132,o),
(307,84,o),
(261,84,qs),
(211,84,o),
(147,153,o),
(147,211,qs),
(147,258,o),
(187,351,o),
(264,411,o),
(318,411,qs),
(365,411,o),
(423,364,o),
(423,322,q),
(541,322,l),
(541,408,o),
(429,508,o),
(335,508,qs),
(250,508,o),
(110,426,o),
(30,285,o),
(30,200,qs),
(30,121,o),
(117,6,o),
(196,-8,q),
(177,-116,l),
(234,-116,ls),
(287,-116,o),
(287,-148,qs),
(286,-171,o),
(250,-195,o),
(220,-195,qs),
(115,-195,l),
(103,-262,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 7 5 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 6 4 3 114 0 6 5 4 6 5 126 0 5 7 7 5 112 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 42 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 4 6 4 3 114 0 6 5 4 6 5 126 0 5 7 4 5 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 42 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 5 7 4 5 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 42 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 20 18 37 34 18 39 35 32 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (188,-263);
},
{
name = top;
pos = (323,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(225,-263,ls),
(286,-263,o),
(376,-195,o),
(376,-134,qs),
(376,-92,o),
(312,-48,o),
(263,-50,q),
(270,-11,l),
(351,-3,o),
(487,93,o),
(519,180,q),
(385,180,l),
(370,141,o),
(302,97,o),
(260,97,qs),
(214,97,o),
(156,160,o),
(156,213,qs),
(156,257,o),
(192,343,o),
(263,399,o),
(313,399,qs),
(355,399,o),
(408,355,o),
(408,316,q),
(543,316,l),
(543,405,o),
(429,508,o),
(332,508,qs),
(246,508,o),
(105,427,o),
(24,286,o),
(24,201,qs),
(24,120,o),
(112,7,o),
(191,-8,q),
(171,-118,l),
(232,-118,ls),
(280,-118,o),
(280,-147,qs),
(279,-168,o),
(245,-189,o),
(219,-189,qs),
(107,-189,l),
(94,-263,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 7 5 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 4 6 4 3 114 0 6 5 4 6 5 126 0 5 7 7 5 112 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 42 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 4 6 4 3 114 0 6 5 4 6 5 126 0 5 7 4 5 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 42 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 5 7 4 5 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 42 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 20 18 37 34 18 39 35 32 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = ccedilla;
unicode = 231;
},
{
glyphname = cdotaccent;
kernLeft = c;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = top;
pos = (366,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (211,0);
ref = uni0307;
}
);
width = 564;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = top;
pos = (368,720);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (226,0);
ref = uni0307;
}
);
width = 569;
},
{
anchors = (
{
name = bottom;
pos = (237,0);
},
{
name = top;
pos = (365,724);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (205,0);
ref = uni0307;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (235,0);
},
{
name = top;
pos = (364,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (195,0);
ref = uni0307;
}
);
width = 558;
}
);
note = cdotaccent;
unicode = 267;
},
{
glyphname = d;
kernLeft = c;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (262,0);
},
{
name = top;
pos = (437,992);
},
{
name = topright;
pos = (728,992);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,-12,o),
(418,77,q),
(415,0,l),
(511,0,l),
(634,700,l),
(528,700,l),
(479,421,l),
(459,462,o),
(377,508,o),
(316,508,qs),
(245,508,o),
(115,436,o),
(35,300,o),
(35,208,qs),
(35,152,o),
(78,52,o),
(168,-12,o),
(235,-12,qs)
);
},
{
closed = 1;
nodes = (
(213,81,o),
(144,159,o),
(144,219,qs),
(144,266,o),
(184,357,o),
(266,416,o),
(324,416,qs),
(383,416,o),
(452,345,o),
(452,286,qs),
(452,237,o),
(411,143,o),
(329,81,o),
(272,81,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 4 0 15 1 2 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 1 33 77 0 4 4 0 97 0 0 0 42 77 7 1 5 5 2 97 6 3 2 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 1 33 77 0 4 4 0 97 0 0 0 42 77 0 2 2 34 77 7 1 5 5 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
18 18 0 0 18 31 18 30 25 23 0 17 0 16 17 19 38 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
anchors = (
{
name = bottom;
pos = (266,0);
},
{
name = top;
pos = (441,992);
},
{
name = topright;
pos = (731,992);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(361,-12,o),
(437,82,q),
(430,0,l),
(507,0,l),
(630,700,l),
(546,700,l),
(496,413,l),
(475,458,o),
(390,508,o),
(326,508,qs),
(256,508,o),
(126,438,o),
(44,302,o),
(44,207,qs),
(44,152,o),
(87,52,o),
(179,-12,o),
(247,-12,qs)
);
},
{
closed = 1;
nodes = (
(207,61,o),
(131,148,o),
(131,215,qs),
(131,269,o),
(176,370,o),
(265,435,o),
(329,435,qs),
(394,435,o),
(468,357,o),
(468,291,qs),
(468,237,o),
(423,131,o),
(334,61,o),
(271,61,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
15 10 2 5 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 1 33 77 0 4 4 0 97 0 0 0 42 77 7 1 5 5 2 97 6 3 2 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 1 33 77 0 4 4 0 97 0 0 0 42 77 0 2 2 34 77 7 1 5 5 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
18 18 0 0 18 31 18 30 25 23 0 17 0 16 17 19 38 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 620;
},
{
anchors = (
{
name = bottom;
pos = (261,0);
},
{
name = top;
pos = (436,992);
},
{
name = topright;
pos = (727,992);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(339,-12,o),
(411,75,q),
(410,0,l),
(512,0,l),
(635,700,l),
(522,700,l),
(473,423,l),
(453,463,o),
(373,508,o),
(312,508,qs),
(240,508,o),
(111,435,o),
(31,299,o),
(31,208,qs),
(31,153,o),
(74,52,o),
(164,-12,o),
(231,-12,qs)
);
},
{
closed = 1;
nodes = (
(215,87,o),
(148,162,o),
(148,220,qs),
(148,265,o),
(187,352,o),
(265,409,o),
(322,409,qs),
(379,409,o),
(446,341,o),
(446,284,qs),
(446,237,o),
(406,146,o),
(327,87,o),
(272,87,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 4 0 15 1 2 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 1 33 77 0 4 4 0 97 0 0 0 42 77 7 1 5 5 2 97 6 3 2 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 1 33 77 0 4 4 0 97 0 0 0 42 77 0 2 2 34 77 7 1 5 5 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
18 18 0 0 18 31 18 30 25 23 0 17 0 16 17 19 38 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 610;
},
{
anchors = (
{
name = bottom;
pos = (258,0);
},
{
name = top;
pos = (433,992);
},
{
name = topright;
pos = (725,992);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(328,-12,o),
(398,71,q),
(400,0,l),
(515,0,l),
(638,700,l),
(510,700,l),
(462,428,l),
(419,508,o),
(305,508,qs),
(233,508,o),
(104,434,o),
(25,297,o),
(25,208,qs),
(25,152,o),
(67,52,o),
(157,-12,o),
(223,-12,qs)
);
},
{
closed = 1;
nodes = (
(219,100,o),
(157,170,o),
(157,223,qs),
(157,263,o),
(193,343,o),
(266,396,o),
(319,396,qs),
(372,396,o),
(435,332,o),
(435,280,qs),
(435,237,o),
(397,154,o),
(323,100,o),
(272,100,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
9 1 4 0 14 1 2 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 1 33 77 0 4 4 0 97 0 0 0 42 77 7 1 5 5 2 97 6 3 2 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 1 33 77 0 4 4 0 97 0 0 0 42 77 0 2 2 34 77 7 1 5 5 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
17 17 0 0 17 30 17 29 24 22 0 16 0 15 17 18 38 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 605;
}
);
note = d;
unicode = 100;
},
{
glyphname = dcaron;
kernLeft = c;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (262,0);
},
{
name = top;
pos = (437,992);
},
{
name = topright;
pos = (728,992);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = d;
},
{
alignment = -1;
pos = (596,0);
ref = uni030C.alt;
}
);
width = 613;
},
{
anchors = (
{
name = bottom;
pos = (266,0);
},
{
name = top;
pos = (441,992);
},
{
name = topright;
pos = (731,992);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = d;
},
{
alignment = -1;
pos = (599,0);
ref = uni030C.alt;
}
);
width = 620;
},
{
anchors = (
{
name = bottom;
pos = (261,0);
},
{
name = top;
pos = (436,992);
},
{
name = topright;
pos = (727,992);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = d;
},
{
alignment = -1;
pos = (595,0);
ref = uni030C.alt;
}
);
width = 610;
},
{
anchors = (
{
name = bottom;
pos = (258,0);
},
{
name = top;
pos = (433,992);
},
{
name = topright;
pos = (725,992);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = d;
},
{
alignment = -1;
pos = (593,0);
ref = uni030C.alt;
}
);
width = 605;
}
);
note = dcaron;
unicode = 271;
},
{
glyphname = dcroat;
kernLeft = c;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,-12,o),
(418,77,q),
(415,0,l),
(511,0,l),
(610,565,l),
(657,565,l),
(670,641,l),
(624,641,l),
(634,700,l),
(528,700,l),
(518,641,l),
(358,641,l),
(344,565,l),
(505,565,l),
(479,421,l),
(459,462,o),
(377,508,o),
(316,508,qs),
(245,508,o),
(115,436,o),
(35,300,o),
(35,208,qs),
(35,152,o),
(78,52,o),
(168,-12,o),
(235,-12,qs)
);
},
{
closed = 1;
nodes = (
(144,266,o),
(184,357,o),
(266,416,o),
(324,416,qs),
(383,416,o),
(452,345,o),
(452,286,qs),
(452,237,o),
(411,143,o),
(329,81,o),
(272,81,qs),
(213,81,o),
(144,159,o),
(144,219,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 9 0 23 1 6 8 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
4 1 2 5 1 1 0 2 1 104 0 3 3 33 77 0 9 9 0 97 0 0 0 42 77 0 8 8 6 97 10 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
4 1 2 5 1 1 0 2 1 104 0 3 3 33 77 0 9 9 0 97 0 0 0 42 77 0 6 6 34 77 0 8 8 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
0 0 36 34 29 27 0 25 0 24 17 17 17 17 17 19 38 11 8 29
CALL[ ]	/* CallFunction */";
};
width = 611;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(361,-12,o),
(437,82,q),
(430,0,l),
(507,0,l),
(607,571,l),
(654,571,l),
(665,634,l),
(618,634,l),
(630,700,l),
(546,700,l),
(535,634,l),
(363,634,l),
(352,571,l),
(524,571,l),
(496,413,l),
(475,458,o),
(390,508,o),
(326,508,qs),
(256,508,o),
(126,438,o),
(44,302,o),
(44,207,qs),
(44,152,o),
(87,52,o),
(179,-12,o),
(247,-12,qs)
);
},
{
closed = 1;
nodes = (
(131,269,o),
(176,370,o),
(265,435,o),
(329,435,qs),
(394,435,o),
(468,357,o),
(468,291,qs),
(468,237,o),
(423,131,o),
(334,61,o),
(271,61,qs),
(207,61,o),
(131,148,o),
(131,215,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
23 10 2 8 9 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
4 1 2 5 1 1 0 2 1 104 0 3 3 33 77 0 9 9 0 97 0 0 0 42 77 0 8 8 6 97 10 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
4 1 2 5 1 1 0 2 1 104 0 3 3 33 77 0 9 9 0 97 0 0 0 42 77 0 6 6 34 77 0 8 8 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
0 0 36 34 29 27 0 25 0 24 17 17 17 17 17 19 38 11 8 29
CALL[ ]	/* CallFunction */";
};
width = 619;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(339,-12,o),
(411,75,q),
(410,0,l),
(512,0,l),
(611,562,l),
(657,562,l),
(672,643,l),
(625,643,l),
(635,700,l),
(522,700,l),
(512,643,l),
(356,643,l),
(341,562,l),
(498,562,l),
(473,423,l),
(453,463,o),
(373,508,o),
(312,508,qs),
(240,508,o),
(111,435,o),
(31,299,o),
(31,208,qs),
(31,153,o),
(74,52,o),
(164,-12,o),
(231,-12,qs)
);
},
{
closed = 1;
nodes = (
(148,265,o),
(187,352,o),
(265,409,o),
(322,409,qs),
(379,409,o),
(446,341,o),
(446,284,qs),
(446,237,o),
(406,146,o),
(327,87,o),
(272,87,qs),
(215,87,o),
(148,162,o),
(148,220,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 9 0 23 1 6 8 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
4 1 2 5 1 1 0 2 1 104 0 3 3 33 77 0 9 9 0 97 0 0 0 42 77 0 8 8 6 97 10 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
4 1 2 5 1 1 0 2 1 104 0 3 3 33 77 0 9 9 0 97 0 0 0 42 77 0 6 6 34 77 0 8 8 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
0 0 36 34 29 27 0 25 0 24 17 17 17 17 17 19 38 11 8 29
CALL[ ]	/* CallFunction */";
};
width = 608;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(328,-12,o),
(398,71,q),
(400,0,l),
(514,0,l),
(613,558,l),
(659,558,l),
(675,648,l),
(629,648,l),
(638,700,l),
(510,700,l),
(501,648,l),
(352,648,l),
(336,558,l),
(485,558,l),
(462,428,l),
(419,508,o),
(305,508,qs),
(233,508,o),
(104,434,o),
(25,297,o),
(25,208,qs),
(25,152,o),
(67,52,o),
(157,-12,o),
(223,-12,qs)
);
},
{
closed = 1;
nodes = (
(157,263,o),
(193,343,o),
(266,396,o),
(319,396,qs),
(372,396,o),
(435,332,o),
(435,280,qs),
(435,237,o),
(397,154,o),
(323,100,o),
(272,100,qs),
(219,100,o),
(157,170,o),
(157,223,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
9 1 9 0 22 1 6 8 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
4 1 2 5 1 1 0 2 1 104 0 3 3 33 77 0 9 9 0 97 0 0 0 42 77 0 8 8 6 97 10 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
4 1 2 5 1 1 0 2 1 104 0 3 3 33 77 0 9 9 0 97 0 0 0 42 77 0 6 6 34 77 0 8 8 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
0 0 35 33 28 26 0 24 0 23 17 17 17 17 17 18 38 11 8 29
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = dcroat;
unicode = 273;
},
{
glyphname = eth;
kernLeft = c;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(353,-12,o),
(497,77,o),
(583,247,o),
(583,363,qs),
(583,430,o),
(547,558,o),
(512,614,q),
(598,642,l),
(611,709,l),
(476,666,l),
(460,686,o),
(444,700,q),
(342,700,l),
(368,675,o),
(395,640,q),
(304,611,l),
(292,544,l),
(429,588,l),
(467,520,o),
(483,438,q),
(439,505,o),
(332,505,qs),
(251,505,o),
(115,428,o),
(35,295,o),
(35,215,qs),
(35,158,o),
(88,54,o),
(193,-12,o),
(268,-12,qs)
);
},
{
closed = 1;
nodes = (
(219,78,o),
(145,158,o),
(145,222,qs),
(145,271,o),
(191,360,o),
(275,415,o),
(328,415,qs),
(387,415,o),
(464,343,o),
(464,278,qs),
(464,232,o),
(419,139,o),
(334,78,o),
(279,78,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
22 19 14 12 11 5 0 1 9 1 3 0 2 76 20 1 1 74 0 1 1 33 77 0 3 3 0 97 0 0 0 42 77 6 1 4 4 2 97 5 1 2 2 40 2 78 30 30 0 0 30 43 30 42 37 35 0 29 0 28 24 38 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 606;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(356,-12,o),
(498,78,o),
(582,246,o),
(582,359,qs),
(582,504,o),
(504,619,q),
(601,651,l),
(612,708,l),
(472,662,l),
(450,688,o),
(437,700,q),
(353,700,l),
(378,676,o),
(408,641,q),
(307,608,l),
(296,551,l),
(439,598,l),
(489,521,o),
(506,424,q),
(483,467,o),
(396,507,o),
(341,507,qs),
(261,507,o),
(125,429,o),
(44,294,o),
(44,213,qs),
(44,156,o),
(95,53,o),
(198,-12,o),
(271,-12,qs)
);
},
{
closed = 1;
nodes = (
(213,59,o),
(131,148,o),
(131,220,qs),
(131,278,o),
(187,378,o),
(281,436,o),
(336,436,qs),
(402,436,o),
(487,355,o),
(487,283,qs),
(487,231,o),
(436,127,o),
(341,59,o),
(280,59,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
23 20 15 13 12 5 0 1 10 1 4 3 2 76 21 1 1 74 0 1 1 33 77 0 3 3 0 97 0 0 0 42 77 6 1 4 4 2 97 5 1 2 2 40 2 78 30 30 0 0 30 43 30 42 37 35 0 29 0 28 25 38 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 616;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(351,-12,o),
(496,77,o),
(583,247,o),
(583,364,qs),
(583,429,o),
(549,556,o),
(515,612,q),
(597,638,l),
(610,709,l),
(477,667,l),
(446,700,l),
(338,700,l),
(364,675,o),
(391,640,q),
(303,612,l),
(290,542,l),
(425,584,l),
(461,519,o),
(475,442,q),
(431,504,o),
(329,504,qs),
(248,504,o),
(112,428,o),
(32,296,o),
(32,216,qs),
(32,159,o),
(85,54,o),
(191,-12,o),
(266,-12,qs)
);
},
{
closed = 1;
nodes = (
(221,84,o),
(149,161,o),
(149,223,qs),
(149,268,o),
(193,354,o),
(273,408,o),
(325,408,qs),
(382,408,o),
(456,338,o),
(456,276,qs),
(456,232,o),
(413,143,o),
(332,84,o),
(279,84,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
21 18 14 12 11 5 0 1 9 1 3 0 2 76 19 1 1 74 0 1 1 33 77 0 3 3 0 97 0 0 0 42 77 6 1 4 4 2 97 5 1 2 2 40 2 78 29 29 0 0 29 42 29 41 36 34 0 28 0 27 24 38 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 603;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(348,-12,o),
(494,76,o),
(583,248,o),
(583,367,qs),
(583,429,o),
(551,553,o),
(520,609,q),
(595,632,l),
(609,709,l),
(479,669,l),
(466,686,o),
(451,700,q),
(331,700,l),
(361,670,o),
(382,639,q),
(301,614,l),
(287,537,l),
(418,577,l),
(447,515,o),
(459,451,q),
(414,503,o),
(323,503,qs),
(241,503,o),
(105,428,o),
(26,297,o),
(26,217,qs),
(26,160,o),
(81,55,o),
(188,-12,o),
(264,-12,qs)
);
},
{
closed = 1;
nodes = (
(225,97,o),
(158,167,o),
(158,224,qs),
(158,264,o),
(196,342,o),
(269,394,o),
(320,394,qs),
(373,394,o),
(440,330,o),
(440,272,qs),
(440,233,o),
(401,151,o),
(328,97,o),
(278,97,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
22 19 14 12 11 5 0 1 9 1 3 0 2 76 20 1 1 74 0 1 1 33 77 0 3 3 0 97 0 0 0 42 77 6 1 4 4 2 97 5 1 2 2 40 2 78 30 30 0 0 30 43 30 42 37 35 0 29 0 28 24 38 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 596;
}
);
note = eth;
unicode = 240;
},
{
glyphname = e;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (237,0);
},
{
name = ogonek;
pos = (353,10);
},
{
name = top;
pos = (325,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,-12,o),
(464,75,o),
(500,152,q),
(393,152,l),
(372,117,o),
(303,76,o),
(259,76,qs),
(206,76,o),
(138,141,o),
(138,200,qs),
(138,215,o),
(139,223,q),
(525,223,l),
(539,273,o),
(539,315,qs),
(539,369,o),
(493,456,o),
(400,508,o),
(334,508,qs),
(253,508,o),
(116,430,o),
(34,289,o),
(34,199,qs),
(34,102,o),
(148,-12,o),
(243,-12,qs)
);
},
{
closed = 1;
nodes = (
(154,296,l),
(173,355,o),
(265,421,o),
(320,421,qs),
(372,421,o),
(435,363,o),
(435,312,q),
(433,296,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
26 1 6 5 1 76 0 3 1 2 1 3 2 128 0 6 0 1 3 6 1 103 0 5 5 0 97 0 0 0 42 77 0 2 2 4 97 7 1 4 4 40 4 78 0 0 33 32 30 28 0 25 0 24 18 36 21 37 8 8 26
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (240,0);
},
{
name = ogonek;
pos = (355,10);
},
{
name = top;
pos = (328,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(331,-12,o),
(463,77,o),
(495,148,q),
(412,148,l),
(390,107,o),
(310,59,o),
(259,59,qs),
(201,59,o),
(125,131,o),
(125,199,q),
(127,229,l),
(523,229,l),
(536,294,o),
(536,319,qs),
(536,367,o),
(495,453,o),
(406,508,o),
(337,508,qs),
(263,508,o),
(128,435,o),
(43,294,o),
(43,198,qs),
(43,102,o),
(154,-12,o),
(246,-12,qs)
);
},
{
closed = 1;
nodes = (
(140,294,l),
(160,361,o),
(263,437,o),
(326,437,qs),
(384,437,o),
(454,372,o),
(454,316,qs),
(454,310,o),
(452,294,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
0 3 1 2 1 3 2 128 0 6 0 1 3 6 1 103 0 5 5 0 97 0 0 0 42 77 0 2 2 4 97 7 1 4 4 40 4 78 0 0 33 32 30 28 0 24 0 23 18 35 21 37 8 8 26
CALL[ ]	/* CallFunction */";
};
width = 568;
},
{
anchors = (
{
name = bottom;
pos = (236,0);
},
{
name = ogonek;
pos = (352,10);
},
{
name = top;
pos = (324,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(323,-12,o),
(464,75,o),
(501,153,q),
(387,153,l),
(366,120,o),
(299,82,o),
(258,82,qs),
(207,82,o),
(142,144,o),
(142,200,qs),
(142,213,o),
(143,221,q),
(526,221,l),
(540,271,o),
(540,314,qs),
(540,369,o),
(492,457,o),
(398,508,o),
(333,508,qs),
(250,508,o),
(111,429,o),
(30,288,o),
(30,199,qs),
(30,102,o),
(145,-12,o),
(242,-12,qs)
);
},
{
closed = 1;
nodes = (
(158,296,l),
(177,353,o),
(265,415,o),
(318,415,qs),
(367,415,o),
(428,360,o),
(428,313,qs),
(427,296,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
0 3 1 2 1 3 2 128 0 6 0 1 3 6 1 103 0 5 5 0 97 0 0 0 42 77 0 2 2 4 97 7 1 4 4 40 4 78 0 0 33 32 30 28 0 25 0 24 18 36 21 37 8 8 26
CALL[ ]	/* CallFunction */";
};
width = 560;
},
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (350,10);
},
{
name = top;
pos = (322,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(320,-12,o),
(465,74,o),
(504,156,q),
(374,156,l),
(354,127,o),
(295,93,o),
(258,93,qs),
(209,93,o),
(150,150,o),
(150,200,qs),
(150,211,o),
(151,217,q),
(527,217,l),
(542,264,o),
(542,311,qs),
(542,400,o),
(428,508,o),
(331,508,qs),
(243,508,o),
(103,425,o),
(24,284,o),
(24,199,qs),
(24,102,o),
(141,-12,o),
(240,-12,qs)
);
},
{
closed = 1;
nodes = (
(167,297,l),
(185,349,o),
(266,404,o),
(314,404,qs),
(360,404,o),
(416,352,o),
(415,308,qs),
(414,297,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
25 1 6 5 1 76 0 3 1 2 1 3 2 128 0 6 0 1 3 6 1 103 0 5 5 0 97 0 0 0 42 77 0 2 2 4 97 7 1 4 4 40 4 78 0 0 32 31 29 27 0 24 0 23 18 36 20 37 8 8 26
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = e;
unicode = 101;
},
{
glyphname = eacute;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (237,0);
},
{
name = ogonek;
pos = (353,10);
},
{
name = top;
pos = (370,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (172,0);
ref = acutecomb;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (240,0);
},
{
name = ogonek;
pos = (355,10);
},
{
name = top;
pos = (373,747);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (179,0);
ref = acutecomb;
}
);
width = 568;
},
{
anchors = (
{
name = bottom;
pos = (236,0);
},
{
name = ogonek;
pos = (352,10);
},
{
name = top;
pos = (369,750);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (170,0);
ref = acutecomb;
}
);
width = 560;
},
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (350,10);
},
{
name = top;
pos = (367,751);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (165,0);
ref = acutecomb;
}
);
width = 556;
}
);
note = eacute;
unicode = 233;
},
{
glyphname = ebreve;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (237,0);
},
{
name = ogonek;
pos = (353,10);
},
{
name = top;
pos = (365,722);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (133,0);
ref = uni0306;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (240,0);
},
{
name = ogonek;
pos = (355,10);
},
{
name = top;
pos = (370,732);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (143,0);
ref = uni0306;
}
);
width = 568;
},
{
anchors = (
{
name = bottom;
pos = (236,0);
},
{
name = ogonek;
pos = (352,10);
},
{
name = top;
pos = (363,719);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (129,0);
ref = uni0306;
}
);
width = 560;
},
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (350,10);
},
{
name = top;
pos = (360,712);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (122,0);
ref = uni0306;
}
);
width = 556;
}
);
note = ebreve;
unicode = 277;
},
{
glyphname = ecaron;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (237,0);
},
{
name = ogonek;
pos = (353,10);
},
{
name = top;
pos = (366,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (140,0);
ref = uni030C;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (240,0);
},
{
name = ogonek;
pos = (355,10);
},
{
name = top;
pos = (370,733);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (147,0);
ref = uni030C;
}
);
width = 568;
},
{
anchors = (
{
name = bottom;
pos = (236,0);
},
{
name = ogonek;
pos = (352,10);
},
{
name = top;
pos = (365,728);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (137,0);
ref = uni030C;
}
);
width = 560;
},
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (350,10);
},
{
name = top;
pos = (362,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (132,0);
ref = uni030C;
}
);
width = 556;
}
);
note = ecaron;
unicode = 283;
},
{
glyphname = ecircumflex;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (237,0);
},
{
name = ogonek;
pos = (353,10);
},
{
name = top;
pos = (366,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (140,0);
ref = uni0302;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (240,0);
},
{
name = ogonek;
pos = (355,10);
},
{
name = top;
pos = (370,733);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (147,0);
ref = uni0302;
}
);
width = 568;
},
{
anchors = (
{
name = bottom;
pos = (236,0);
},
{
name = ogonek;
pos = (352,10);
},
{
name = top;
pos = (365,728);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (137,0);
ref = uni0302;
}
);
width = 560;
},
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (350,10);
},
{
name = top;
pos = (362,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (132,0);
ref = uni0302;
}
);
width = 556;
}
);
note = ecircumflex;
unicode = 234;
},
{
glyphname = edieresis;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (237,0);
},
{
name = ogonek;
pos = (353,10);
},
{
name = top;
pos = (365,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (110,0);
ref = uni0308;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (240,0);
},
{
name = ogonek;
pos = (355,10);
},
{
name = top;
pos = (367,720);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (136,0);
ref = uni0308;
}
);
width = 568;
},
{
anchors = (
{
name = bottom;
pos = (236,0);
},
{
name = ogonek;
pos = (352,10);
},
{
name = top;
pos = (364,724);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (101,0);
ref = uni0308;
}
);
width = 560;
},
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (350,10);
},
{
name = top;
pos = (363,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (83,0);
ref = uni0308;
}
);
width = 556;
}
);
note = edieresis;
unicode = 235;
},
{
glyphname = edotaccent;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (237,0);
},
{
name = ogonek;
pos = (353,10);
},
{
name = top;
pos = (365,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (210,0);
ref = uni0307;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (240,0);
},
{
name = ogonek;
pos = (355,10);
},
{
name = top;
pos = (367,720);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (225,0);
ref = uni0307;
}
);
width = 568;
},
{
anchors = (
{
name = bottom;
pos = (236,0);
},
{
name = ogonek;
pos = (352,10);
},
{
name = top;
pos = (364,724);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (204,0);
ref = uni0307;
}
);
width = 560;
},
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (350,10);
},
{
name = top;
pos = (363,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (194,0);
ref = uni0307;
}
);
width = 556;
}
);
note = edotaccent;
unicode = 279;
},
{
glyphname = egrave;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (237,0);
},
{
name = ogonek;
pos = (353,10);
},
{
name = top;
pos = (370,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (173,0);
ref = gravecomb;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (240,0);
},
{
name = ogonek;
pos = (355,10);
},
{
name = top;
pos = (373,747);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (180,0);
ref = gravecomb;
}
);
width = 568;
},
{
anchors = (
{
name = bottom;
pos = (236,0);
},
{
name = ogonek;
pos = (352,10);
},
{
name = top;
pos = (369,750);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (170,0);
ref = gravecomb;
}
);
width = 560;
},
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (350,10);
},
{
name = top;
pos = (367,751);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (165,0);
ref = gravecomb;
}
);
width = 556;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = emacron;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (237,0);
},
{
name = ogonek;
pos = (353,10);
},
{
name = top;
pos = (353,693);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (93,0);
ref = uni0304;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (240,0);
},
{
name = ogonek;
pos = (355,10);
},
{
name = top;
pos = (357,695);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (103,0);
ref = uni0304;
}
);
width = 568;
},
{
anchors = (
{
name = bottom;
pos = (236,0);
},
{
name = ogonek;
pos = (352,10);
},
{
name = top;
pos = (351,692);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (90,0);
ref = uni0304;
}
);
width = 560;
},
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (350,10);
},
{
name = top;
pos = (348,690);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (83,0);
ref = uni0304;
}
);
width = 556;
}
);
note = emacron;
unicode = 275;
},
{
glyphname = eogonek;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (237,0);
},
{
name = ogonek;
pos = (353,10);
},
{
name = top;
pos = (325,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,296,l),
(173,355,o),
(265,421,o),
(320,421,qs),
(372,421,o),
(435,363,o),
(435,312,q),
(433,296,l)
);
},
{
closed = 1;
nodes = (
(280,-196,o),
(324,-183,q),
(335,-117,l),
(296,-132,o),
(264,-132,qs),
(241,-132,o),
(215,-112,o),
(215,-95,qs),
(215,-73,o),
(251,-36,o),
(294,-17,qs),
(351,9,ls),
(400,29,o),
(477,102,o),
(500,152,q),
(393,152,l),
(372,117,o),
(303,76,o),
(259,76,qs),
(206,76,o),
(138,141,o),
(138,200,qs),
(138,215,o),
(139,223,q),
(525,223,l),
(539,273,o),
(539,315,qs),
(539,369,o),
(493,456,o),
(400,508,o),
(334,508,qs),
(253,508,o),
(116,430,o),
(34,289,o),
(34,199,qs),
(34,116,o),
(119,7,o),
(193,-7,q),
(130,-54,o),
(130,-116,qs),
(130,-155,o),
(191,-196,o),
(240,-196,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 47 12 2 6 4 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 3 4 3 5 4 128 0 4 6 3 4 6 126 0 1 0 3 5 1 3 103 0 0 0 2 97 0 2 2 42 77 0 6 6 7 98 8 1 7 7 38 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 5 3 4 3 5 4 128 0 4 6 3 4 6 126 0 1 0 3 5 1 3 103 0 6 8 1 7 6 7 102 0 0 0 2 97 0 2 2 42 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
8 8 8 50 8 49 41 18 36 21 43 18 34 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (240,0);
},
{
name = ogonek;
pos = (355,10);
},
{
name = top;
pos = (328,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(140,294,l),
(160,361,o),
(263,437,o),
(326,437,qs),
(384,437,o),
(454,372,o),
(454,316,qs),
(454,310,o),
(452,294,q)
);
},
{
closed = 1;
nodes = (
(286,-193,o),
(325,-180,q),
(334,-124,l),
(298,-139,o),
(267,-139,qs),
(243,-139,o),
(214,-118,o),
(214,-99,qs),
(214,-53,o),
(292,-18,qs),
(347,6,ls),
(397,26,o),
(474,100,o),
(495,148,q),
(412,148,l),
(390,107,o),
(310,59,o),
(259,59,qs),
(201,59,o),
(125,131,o),
(125,199,q),
(127,229,l),
(523,229,l),
(536,294,o),
(536,319,qs),
(536,367,o),
(495,453,o),
(406,508,o),
(337,508,qs),
(263,508,o),
(128,435,o),
(43,294,o),
(43,198,qs),
(43,112,o),
(132,2,o),
(209,-9,q),
(144,-54,o),
(144,-117,qs),
(144,-154,o),
(202,-193,o),
(247,-193,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
46 13 2 6 4 1 76 0 5 3 4 3 5 4 128 0 4 6 3 4 6 126 0 1 0 3 5 1 3 103 0 6 8 1 7 6 7 102 0 0 0 2 97 0 2 2 42 0 78 9 9 9 49 9 48 40 18 35 21 43 18 35 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 568;
},
{
anchors = (
{
name = bottom;
pos = (236,0);
},
{
name = ogonek;
pos = (352,10);
},
{
name = top;
pos = (324,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(158,296,l),
(177,353,o),
(265,415,o),
(318,415,qs),
(367,415,o),
(428,360,o),
(428,313,qs),
(427,296,l)
);
},
{
closed = 1;
nodes = (
(276,-198,o),
(323,-184,q),
(334,-115,l),
(295,-130,o),
(263,-130,qs),
(241,-130,o),
(215,-111,o),
(215,-94,qs),
(215,-72,o),
(251,-36,o),
(294,-17,qs),
(351,10,ls),
(399,30,o),
(478,103,o),
(501,153,q),
(387,153,l),
(366,120,o),
(299,82,o),
(258,82,qs),
(207,82,o),
(142,144,o),
(142,200,qs),
(142,213,o),
(143,221,q),
(526,221,l),
(540,271,o),
(540,314,qs),
(540,369,o),
(492,457,o),
(398,508,o),
(333,508,qs),
(250,508,o),
(111,429,o),
(30,288,o),
(30,199,qs),
(30,117,o),
(114,8,o),
(188,-7,q),
(125,-53,o),
(125,-116,qs),
(125,-156,o),
(188,-198,o),
(237,-198,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
47 12 2 6 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 3 4 3 5 4 128 0 4 6 3 4 6 126 0 1 0 3 5 1 3 103 0 0 0 2 97 0 2 2 42 77 0 6 6 7 98 8 1 7 7 38 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 5 3 4 3 5 4 128 0 4 6 3 4 6 126 0 1 0 3 5 1 3 103 0 6 8 1 7 6 7 102 0 0 0 2 97 0 2 2 42 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
8 8 8 50 8 49 41 18 36 21 43 18 34 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 560;
},
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (350,10);
},
{
name = top;
pos = (322,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(167,297,l),
(185,349,o),
(266,404,o),
(314,404,qs),
(360,404,o),
(416,352,o),
(415,308,qs),
(414,297,l)
);
},
{
closed = 1;
nodes = (
(274,-200,o),
(321,-186,q),
(334,-110,l),
(292,-125,o),
(260,-125,qs),
(239,-125,o),
(215,-107,o),
(215,-92,qs),
(215,-71,o),
(250,-36,o),
(294,-16,qs),
(348,9,ls),
(397,29,o),
(479,103,o),
(504,156,q),
(374,156,l),
(354,127,o),
(295,93,o),
(258,93,qs),
(209,93,o),
(150,150,o),
(150,200,qs),
(150,211,o),
(151,217,q),
(527,217,l),
(542,264,o),
(542,311,qs),
(542,400,o),
(428,508,o),
(331,508,qs),
(243,508,o),
(103,425,o),
(24,284,o),
(24,199,qs),
(24,119,o),
(106,12,o),
(178,-5,q),
(144,-30,o),
(115,-84,o),
(115,-116,qs),
(115,-158,o),
(179,-200,o),
(231,-200,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 47 13 2 6 4 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 3 4 3 5 4 128 0 4 6 3 4 6 126 0 1 0 3 5 1 3 103 0 0 0 2 97 0 2 2 42 77 0 6 6 7 98 8 1 7 7 38 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 5 3 4 3 5 4 128 0 4 6 3 4 6 126 0 1 0 3 5 1 3 103 0 6 8 1 7 6 7 102 0 0 0 2 97 0 2 2 42 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
8 8 8 50 8 49 41 18 36 20 44 18 34 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = eogonek;
unicode = 281;
},
{
glyphname = uni0259;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(314,-12,o),
(452,71,o),
(529,213,o),
(529,298,qs),
(529,394,o),
(415,508,o),
(319,508,qs),
(232,508,o),
(97,416,o),
(63,344,q),
(169,344,l),
(190,379,o),
(260,420,o),
(304,420,qs),
(357,420,o),
(425,356,o),
(425,297,qs),
(425,287,o),
(423,273,q),
(37,273,l),
(23,215,o),
(23,181,qs),
(23,130,o),
(69,42,o),
(161,-12,o),
(228,-12,qs)
);
},
{
closed = 1;
nodes = (
(190,76,o),
(128,133,o),
(128,182,q),
(129,192,o),
(129,201,q),
(409,201,l),
(390,141,o),
(298,76,o),
(242,76,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
31 1 6 5 1 76 0 2 1 0 1 2 0 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 42 77 8 1 6 6 4 97 7 1 4 4 40 4 78 26 26 0 0 26 34 26 33 29 28 0 25 0 24 34 18 36 21 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(315,-12,o),
(449,71,o),
(525,213,o),
(525,298,qs),
(525,394,o),
(414,508,o),
(322,508,qs),
(237,508,o),
(105,419,o),
(73,348,q),
(156,348,l),
(178,389,o),
(258,437,o),
(309,437,qs),
(367,437,o),
(443,365,o),
(443,297,qs),
(443,283,o),
(441,267,q),
(45,267,l),
(32,202,o),
(32,177,qs),
(32,126,o),
(76,40,o),
(165,-12,o),
(231,-12,qs)
);
},
{
closed = 1;
nodes = (
(184,59,o),
(114,124,o),
(114,180,qs),
(114,186,o),
(116,202,q),
(428,202,l),
(408,135,o),
(305,59,o),
(242,59,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 2 1 0 1 2 0 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 42 77 8 1 6 6 4 97 7 1 4 4 40 4 78 26 26 0 0 26 34 26 33 29 28 0 25 0 24 34 18 36 21 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 568;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(314,-12,o),
(452,71,o),
(530,213,o),
(530,297,qs),
(530,394,o),
(415,508,o),
(318,508,qs),
(231,508,o),
(94,416,o),
(59,343,q),
(173,343,l),
(194,376,o),
(261,414,o),
(302,414,qs),
(353,414,o),
(418,352,o),
(418,296,qs),
(418,282,o),
(417,275,q),
(34,275,l),
(20,225,o),
(20,182,qs),
(20,130,o),
(66,42,o),
(159,-12,o),
(227,-12,qs)
);
},
{
closed = 1;
nodes = (
(193,81,o),
(132,136,o),
(132,183,qs),
(133,200,l),
(402,200,l),
(383,143,o),
(295,81,o),
(242,81,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 2 1 0 1 2 0 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 42 77 8 1 6 6 4 97 7 1 4 4 40 4 78 26 26 0 0 26 33 26 32 29 28 0 25 0 24 34 18 36 21 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 560;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(313,-12,o),
(453,71,o),
(532,212,o),
(532,297,qs),
(532,394,o),
(415,508,o),
(316,508,qs),
(228,508,o),
(88,413,o),
(52,340,q),
(182,340,l),
(202,369,o),
(261,403,o),
(298,403,qs),
(347,403,o),
(406,346,o),
(406,296,qs),
(406,285,o),
(405,279,q),
(29,279,l),
(14,232,o),
(14,185,qs),
(14,133,o),
(61,43,o),
(156,-12,o),
(225,-12,qs)
);
},
{
closed = 1;
nodes = (
(196,92,o),
(140,144,o),
(141,188,qs),
(142,199,l),
(389,199,l),
(371,147,o),
(290,92,o),
(242,92,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
30 1 6 5 1 76 0 2 1 0 1 2 0 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 42 77 8 1 6 6 4 97 7 1 4 4 40 4 78 26 26 0 0 26 33 26 32 29 28 0 25 0 24 34 18 36 21 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = uni0259;
unicode = 601;
},
{
glyphname = f;
kernLeft = f;
kernRight = f;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,0,l),
(219,407,l),
(324,407,l),
(340,496,l),
(234,496,l),
(243,547,ls),
(250,581,o),
(285,610,o),
(320,610,qs),
(349,610,l),
(366,700,l),
(320,700,ls),
(244,700,o),
(152,627,o),
(137,548,qs),
(128,496,l),
(62,496,l),
(47,407,l),
(113,407,l),
(41,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 3 2 97 0 2 2 33 77 5 1 0 0 1 95 4 1 1 1 36 77 0 6 6 34 6 78 17 17 19 33 35 17 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 325;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(136,0,l),
(211,425,l),
(333,425,l),
(346,496,l),
(223,496,l),
(235,560,ls),
(242,597,o),
(280,628,o),
(318,628,qs),
(354,628,l),
(367,700,l),
(318,700,ls),
(247,700,o),
(164,633,o),
(151,562,qs),
(139,496,l),
(65,496,l),
(53,425,l),
(127,425,l),
(52,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 3 2 97 0 2 2 33 77 5 1 0 0 1 95 4 1 1 1 36 77 0 6 6 34 6 78 17 17 19 33 35 17 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 334;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(150,0,l),
(221,401,l),
(321,401,l),
(338,496,l),
(237,496,l),
(246,543,ls),
(252,575,o),
(286,603,o),
(321,603,qs),
(347,603,l),
(365,700,l),
(321,700,ls),
(243,700,o),
(147,625,o),
(132,543,qs),
(124,496,l),
(61,496,l),
(44,401,l),
(108,401,l),
(37,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 3 2 97 0 2 2 33 77 5 1 0 0 1 95 4 1 1 1 36 77 0 6 6 34 6 78 17 17 19 33 35 17 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 321;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(157,0,l),
(226,389,l),
(315,389,l),
(334,496,l),
(244,496,l),
(251,534,ls),
(257,565,o),
(289,591,o),
(322,591,qs),
(344,591,l),
(364,700,l),
(322,700,ls),
(153,700,o),
(123,534,qs),
(116,496,l),
(59,496,l),
(40,389,l),
(98,389,l),
(29,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 3 2 97 0 2 2 33 77 5 1 0 0 1 95 4 1 1 1 36 77 0 6 6 34 6 78 17 17 19 33 34 17 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 315;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
kernLeft = g;
kernRight = g;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (159,-310);
},
{
name = top;
pos = (292,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(299,-232,o),
(440,-131,o),
(440,-41,qs),
(440,22,o),
(351,92,o),
(274,92,qs),
(182,92,ls),
(113,92,o),
(113,134,qs),
(113,151,o),
(138,174,o),
(158,177,q),
(197,155,o),
(251,155,qs),
(307,155,o),
(402,198,o),
(462,279,o),
(467,332,qs),
(470,375,o),
(453,413,q),
(534,413,l),
(548,496,l),
(360,496,l),
(324,508,o),
(282,508,qs),
(221,508,o),
(123,461,o),
(66,373,o),
(66,315,qs),
(66,263,o),
(96,224,q),
(60,207,o),
(13,142,o),
(13,104,qs),
(13,81,o),
(33,42,o),
(53,31,q),
(12,14,o),
(-33,-49,o),
(-33,-90,qs),
(-33,-157,o),
(87,-232,o),
(179,-232,qs)
);
},
{
closed = 1;
nodes = (
(139,-147,o),
(69,-110,o),
(69,-76,qs),
(69,-37,o),
(129,2,o),
(177,2,qs),
(255,2,ls),
(295,2,o),
(337,-31,o),
(337,-60,qs),
(337,-106,o),
(255,-147,o),
(192,-147,qs)
);
},
{
closed = 1;
nodes = (
(214,240,o),
(165,285,o),
(165,322,qs),
(165,365,o),
(226,423,o),
(273,423,qs),
(315,423,o),
(368,376,o),
(368,339,qs),
(368,296,o),
(305,240,o),
(257,240,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
24 1 9 2 30 11 2 3 9 5 1 6 4 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
12 1 9 0 3 4 9 3 105 8 1 2 2 0 97 1 1 0 0 42 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
12 1 9 0 3 4 9 3 105 8 1 2 2 0 97 0 0 0 42 77 8 1 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
12 1 9 0 3 4 9 3 105 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
12 1 9 0 3 4 9 3 105 11 1 7 10 1 5 7 5 101 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
56 56 43 43 0 0 56 67 56 66 62 60 43 55 43 54 50 47 0 42 0 41 37 34 29 27 22 21 20 19 18 16 13 8 22
CALL[ ]	/* CallFunction */";
};
width = 526;
},
{
anchors = (
{
name = bottom;
pos = (167,-310);
},
{
name = top;
pos = (300,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(302,-232,o),
(442,-130,o),
(442,-41,qs),
(442,22,o),
(351,89,o),
(274,89,qs),
(186,89,ls),
(113,89,o),
(113,133,qs),
(113,151,o),
(139,176,o),
(160,179,q),
(201,156,o),
(257,156,qs),
(315,156,o),
(413,201,o),
(471,289,o),
(471,349,qs),
(471,393,o),
(452,425,q),
(538,425,l),
(550,496,l),
(366,496,l),
(330,508,o),
(288,508,qs),
(227,508,o),
(130,461,o),
(75,372,o),
(75,313,qs),
(75,263,o),
(103,224,q),
(69,206,o),
(25,145,o),
(25,109,qs),
(25,87,o),
(47,48,o),
(67,37,q),
(24,21,o),
(-24,-47,o),
(-24,-88,qs),
(-24,-157,o),
(97,-232,o),
(185,-232,qs)
);
},
{
closed = 1;
nodes = (
(136,-162,o),
(60,-119,o),
(60,-79,qs),
(60,-33,o),
(127,15,o),
(181,15,qs),
(266,15,ls),
(310,15,o),
(357,-24,o),
(357,-58,qs),
(357,-111,o),
(267,-162,o),
(195,-162,qs)
);
},
{
closed = 1;
nodes = (
(211,226,o),
(155,277,o),
(155,320,qs),
(155,371,o),
(224,438,o),
(280,438,qs),
(329,438,o),
(389,383,o),
(389,341,qs),
(389,291,o),
(315,226,o),
(261,226,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
30 11 2 3 9 5 1 6 4 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
12 1 9 0 3 4 9 3 105 8 1 2 2 0 97 1 1 0 0 42 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
12 1 9 0 3 4 9 3 105 0 8 8 0 97 1 1 0 0 42 77 0 2 2 0 97 1 1 0 0 42 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
12 1 9 0 3 4 9 3 105 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
12 1 9 0 3 4 9 3 105 0 4 0 6 7 4 6 103 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
12 1 9 0 3 4 9 3 105 0 4 0 6 7 4 6 103 11 1 7 10 1 5 7 5 101 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
56 56 43 43 0 0 56 67 56 66 62 60 43 55 43 54 50 47 0 42 0 41 37 34 29 27 22 21 20 19 18 16 13 8 22
CALL[ ]	/* CallFunction */";
};
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (156,-310);
},
{
name = top;
pos = (289,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(297,-232,o),
(439,-132,o),
(439,-41,qs),
(439,21,o),
(351,92,o),
(273,92,qs),
(181,92,ls),
(147,92,o),
(113,114,o),
(113,134,qs),
(113,150,o),
(138,173,o),
(157,176,q),
(195,155,o),
(249,155,qs),
(308,155,o),
(407,203,o),
(466,290,o),
(466,346,qs),
(466,371,o),
(453,408,q),
(532,408,l),
(547,496,l),
(358,496,l),
(322,508,o),
(280,508,qs),
(191,508,o),
(70,412,o),
(63,331,qs),
(58,269,o),
(93,223,q),
(57,206,o),
(8,141,o),
(8,102,qs),
(8,80,o),
(29,40,o),
(48,28,q),
(8,11,o),
(-37,-50,o),
(-37,-91,qs),
(-37,-158,o),
(83,-232,o),
(176,-232,qs)
);
},
{
closed = 1;
nodes = (
(139,-142,o),
(71,-108,o),
(71,-76,qs),
(71,-39,o),
(130,-2,o),
(175,-2,qs),
(251,-2,ls),
(290,-2,o),
(330,-34,o),
(330,-61,qs),
(330,-104,o),
(251,-142,o),
(191,-142,qs)
);
},
{
closed = 1;
nodes = (
(215,245,o),
(168,287,o),
(168,321,qs),
(168,363,o),
(225,418,o),
(271,418,qs),
(311,418,o),
(360,374,o),
(360,340,qs),
(360,298,o),
(301,245,o),
(256,245,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
29 11 2 3 9 5 1 6 4 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
12 1 9 0 3 4 9 3 105 8 1 2 2 0 97 1 1 0 0 42 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
12 1 9 0 3 4 9 3 105 8 1 2 2 0 97 0 0 0 42 77 8 1 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
12 1 9 0 3 4 9 3 105 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
12 1 9 0 3 4 9 3 105 11 1 7 10 1 5 7 5 101 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
56 56 43 43 0 0 56 67 56 66 62 60 43 55 43 54 50 47 0 42 0 41 54 37 17 17 47 13 8 27
CALL[ ]	/* CallFunction */";
};
width = 523;
},
{
anchors = (
{
name = bottom;
pos = (150,-310);
},
{
name = top;
pos = (284,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(295,-232,o),
(438,-133,o),
(438,-41,qs),
(438,21,o),
(351,94,o),
(273,94,qs),
(178,94,ls),
(146,94,o),
(113,115,o),
(113,134,qs),
(113,149,o),
(137,172,o),
(155,175,q),
(191,154,o),
(245,154,qs),
(302,154,o),
(399,199,o),
(459,280,o),
(463,331,qs),
(465,357,o),
(454,400,q),
(529,400,l),
(546,496,l),
(354,496,l),
(318,508,o),
(276,508,qs),
(186,508,o),
(64,411,o),
(57,331,qs),
(55,301,o),
(71,245,o),
(88,223,q),
(51,207,o),
(0,139,o),
(0,98,qs),
(0,75,o),
(20,36,o),
(39,24,q),
(-1,7,o),
(-43,-51,o),
(-43,-92,qs),
(-43,-158,o),
(76,-232,o),
(172,-232,qs)
);
},
{
closed = 1;
nodes = (
(141,-132,o),
(77,-102,o),
(77,-74,qs),
(77,-42,o),
(131,-11,o),
(172,-11,qs),
(244,-11,ls),
(280,-11,o),
(316,-39,o),
(316,-62,qs),
(316,-132,o),
(189,-132,qs)
);
},
{
closed = 1;
nodes = (
(216,254,o),
(174,291,o),
(174,323,qs),
(174,359,o),
(226,408,o),
(266,408,qs),
(302,408,o),
(346,369,o),
(346,338,qs),
(346,301,o),
(294,254,o),
(253,254,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
14 1 9 2 30 11 2 3 9 5 1 6 4 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
12 1 9 0 3 4 9 3 105 8 1 2 2 0 97 1 1 0 0 42 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
12 1 9 0 3 4 9 3 105 8 1 2 2 0 97 0 0 0 42 77 8 1 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
12 1 9 0 3 4 9 3 105 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
12 1 9 0 3 4 9 3 105 11 1 7 10 1 5 7 5 101 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
12 1 9 0 3 4 9 3 105 0 4 0 6 7 4 6 103 11 1 7 10 1 5 7 5 101 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
56 56 44 44 0 0 56 67 56 66 62 60 44 55 44 54 50 47 0 43 0 42 38 35 29 27 22 21 20 19 18 16 13 8 22
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = g;
unicode = 103;
},
{
glyphname = gbreve;
kernLeft = g;
kernRight = g;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (159,-310);
},
{
name = top;
pos = (332,722);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (100,0);
ref = uni0306;
}
);
width = 526;
},
{
anchors = (
{
name = bottom;
pos = (167,-310);
},
{
name = top;
pos = (342,732);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (115,0);
ref = uni0306;
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (156,-310);
},
{
name = top;
pos = (329,719);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (94,0);
ref = uni0306;
}
);
width = 523;
},
{
anchors = (
{
name = bottom;
pos = (150,-310);
},
{
name = top;
pos = (322,712);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (84,0);
ref = uni0306;
}
);
width = 517;
}
);
note = gbreve;
unicode = 287;
},
{
glyphname = gdotaccent;
kernLeft = g;
kernRight = g;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (159,-310);
},
{
name = top;
pos = (332,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (177,0);
ref = uni0307;
}
);
width = 526;
},
{
anchors = (
{
name = bottom;
pos = (167,-310);
},
{
name = top;
pos = (339,720);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (197,0);
ref = uni0307;
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (156,-310);
},
{
name = top;
pos = (330,724);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (170,0);
ref = uni0307;
}
);
width = 523;
},
{
anchors = (
{
name = bottom;
pos = (150,-310);
},
{
name = top;
pos = (325,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (156,0);
ref = uni0307;
}
);
width = 517;
}
);
note = gdotaccent;
unicode = 289;
},
{
glyphname = h;
kernLeft = b;
kernRight = a;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,0,l),
(165,257,ls),
(178,332,o),
(270,418,o),
(330,418,qs),
(427,418,o),
(427,321,qs),
(427,303,o),
(422,275,qs),
(374,0,l),
(480,0,l),
(530,285,ls),
(536,320,o),
(536,349,qs),
(536,427,o),
(453,508,o),
(376,508,qs),
(321,508,o),
(225,459,o),
(193,416,q),
(243,700,l),
(137,700,l),
(14,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
2 1 2 3 1 76 0 0 0 33 77 0 3 3 1 97 0 1 1 42 77 4 1 2 2 34 2 78 19 36 21 35 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 571;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(110,0,l),
(155,257,ls),
(170,341,o),
(270,436,o),
(336,436,qs),
(441,436,o),
(441,331,qs),
(441,311,o),
(436,281,qs),
(387,0,l),
(471,0,l),
(522,290,ls),
(528,323,o),
(528,352,qs),
(528,430,o),
(444,508,o),
(368,508,qs),
(313,508,o),
(214,456,o),
(182,411,q),
(233,700,l),
(149,700,l),
(26,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
2 1 2 3 1 76 0 0 0 33 77 0 3 3 1 97 0 1 1 42 77 4 1 2 2 34 2 78 19 36 21 35 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 573;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(123,0,l),
(168,256,ls),
(181,329,o),
(269,412,o),
(327,412,qs),
(422,412,o),
(422,318,qs),
(422,300,o),
(417,272,qs),
(369,0,l),
(482,0,l),
(533,283,ls),
(539,318,o),
(539,347,qs),
(539,426,o),
(456,508,o),
(379,508,qs),
(324,508,o),
(228,459,o),
(197,417,q),
(246,700,l),
(133,700,l),
(10,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
2 1 3 1 1 76 0 0 0 33 77 0 3 3 1 97 0 1 1 42 77 4 1 2 2 34 2 78 19 36 21 35 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 570;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(130,0,l),
(175,256,ls),
(187,323,o),
(269,400,o),
(323,400,qs),
(412,400,o),
(412,311,qs),
(412,289,o),
(408,268,qs),
(360,0,l),
(488,0,l),
(538,280,ls),
(544,315,o),
(544,345,qs),
(544,425,o),
(462,508,o),
(384,508,qs),
(329,508,o),
(236,461,o),
(204,420,q),
(253,700,l),
(125,700,l),
(2,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
2 1 3 1 1 76 0 0 0 33 77 0 3 3 1 97 0 1 1 42 77 4 1 2 2 34 2 78 19 36 21 35 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 569;
}
);
note = h;
unicode = 104;
},
{
glyphname = hbar;
kernRight = a;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(126,0,l),
(171,257,ls),
(184,332,o),
(275,418,o),
(335,418,qs),
(432,418,o),
(432,321,qs),
(432,298,o),
(428,275,qs),
(379,0,l),
(485,0,l),
(536,285,ls),
(542,320,o),
(542,349,qs),
(542,427,o),
(459,508,o),
(382,508,qs),
(327,508,o),
(231,459,o),
(199,416,q),
(225,565,l),
(390,565,l),
(403,641,l),
(238,641,l),
(249,700,l),
(143,700,l),
(132,641,l),
(81,641,l),
(67,565,l),
(119,565,l),
(20,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
10 1 6 7 1 76 3 1 1 4 1 0 5 1 0 104 0 2 2 33 77 0 7 7 5 97 0 5 5 42 77 8 1 6 6 34 6 78 19 36 21 35 17 17 17 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 577;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(110,0,l),
(155,257,ls),
(170,341,o),
(270,436,o),
(336,436,qs),
(441,436,o),
(441,331,qs),
(441,311,o),
(436,281,qs),
(387,0,l),
(471,0,l),
(522,290,ls),
(528,323,o),
(528,352,qs),
(528,430,o),
(444,508,o),
(368,508,qs),
(313,508,o),
(214,456,o),
(182,411,q),
(210,571,l),
(381,571,l),
(392,634,l),
(221,634,l),
(233,700,l),
(149,700,l),
(137,634,l),
(80,634,l),
(69,571,l),
(126,571,l),
(26,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
10 1 6 7 1 76 3 1 1 4 1 0 5 1 0 104 0 2 2 33 77 0 7 7 5 97 0 5 5 42 77 8 1 6 6 34 6 78 19 36 21 35 17 17 17 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 573;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(131,0,l),
(176,256,ls),
(188,329,o),
(277,412,o),
(335,412,qs),
(429,412,o),
(429,318,qs),
(429,295,o),
(425,272,qs),
(376,0,l),
(490,0,l),
(540,283,ls),
(546,318,o),
(546,347,qs),
(546,426,o),
(463,508,o),
(386,508,qs),
(332,508,o),
(236,459,o),
(204,417,q),
(229,562,l),
(392,562,l),
(407,643,l),
(244,643,l),
(254,700,l),
(140,700,l),
(130,643,l),
(81,643,l),
(66,562,l),
(116,562,l),
(17,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
10 1 7 5 1 76 3 1 1 4 1 0 5 1 0 104 0 2 2 33 77 0 7 7 5 97 0 5 5 42 77 8 1 6 6 34 6 78 19 36 21 35 17 17 17 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(141,0,l),
(186,256,ls),
(198,323,o),
(280,400,o),
(334,400,qs),
(423,400,o),
(423,311,qs),
(423,289,o),
(419,268,qs),
(371,0,l),
(499,0,l),
(549,280,ls),
(555,315,o),
(555,345,qs),
(555,425,o),
(473,508,o),
(395,508,qs),
(340,508,o),
(247,461,o),
(215,420,q),
(239,558,l),
(398,558,l),
(414,648,l),
(255,648,l),
(264,700,l),
(136,700,l),
(127,648,l),
(81,648,l),
(65,558,l),
(111,558,l),
(13,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
10 1 7 5 1 76 3 1 1 4 1 0 5 1 0 104 0 2 2 33 77 0 7 7 5 97 0 5 5 42 77 8 1 6 6 34 6 78 19 36 21 35 17 17 17 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 580;
}
);
note = hbar;
unicode = 295;
},
{
glyphname = i;
kernLeft = i;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (74,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,0,l),
(214,496,l),
(108,496,l),
(21,0,l)
);
},
{
closed = 1;
nodes = (
(219,586,o),
(259,626,o),
(259,655,qs),
(259,684,o),
(219,723,o),
(190,723,qs),
(161,723,o),
(121,684,o),
(121,655,qs),
(121,626,o),
(161,586,o),
(190,586,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 3 3 2 97 0 2 2 41 77 0 0 0 36 77 0 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 3 3 2 97 0 2 2 39 77 0 0 0 36 77 0 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 2 4 1 3 0 2 3 105 0 0 0 36 77 0 1 1 34 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 236;
},
{
anchors = (
{
name = bottom;
pos = (77,0);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(119,0,l),
(206,496,l),
(122,496,l),
(35,0,l)
);
},
{
closed = 1;
nodes = (
(218,606,o),
(252,639,o),
(252,663,qs),
(252,687,o),
(218,720,o),
(194,720,qs),
(169,720,o),
(136,688,o),
(136,663,qs),
(136,638,o),
(169,606,o),
(194,606,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 3 3 2 97 0 2 2 41 77 0 0 0 36 77 0 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
4 1 3 3 2 97 0 2 2 39 77 0 0 0 36 77 0 1 1 34 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 241;
},
{
anchors = (
{
name = bottom;
pos = (73,0);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(130,0,l),
(217,496,l),
(103,496,l),
(16,0,l)
);
},
{
closed = 1;
nodes = (
(218,579,o),
(261,621,o),
(261,652,qs),
(261,682,o),
(218,724,o),
(188,724,qs),
(158,724,o),
(115,682,o),
(115,652,qs),
(115,621,o),
(158,579,o),
(188,579,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 3 3 2 97 0 2 2 41 77 0 0 0 36 77 0 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 3 3 2 97 0 2 2 39 77 0 0 0 36 77 0 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 2 4 1 3 0 2 3 105 0 0 0 36 77 0 1 1 34 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 234;
},
{
anchors = (
{
name = bottom;
pos = (71,0);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(135,0,l),
(222,496,l),
(94,496,l),
(7,0,l)
);
},
{
closed = 1;
nodes = (
(218,566,o),
(265,613,o),
(265,646,qs),
(265,680,o),
(218,726,o),
(185,726,qs),
(152,726,o),
(105,680,o),
(105,646,qs),
(105,613,o),
(152,566,o),
(185,566,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 3 3 2 97 0 2 2 41 77 0 0 0 36 77 0 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 3 3 2 97 0 2 2 39 77 0 0 0 36 77 0 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 2 4 1 3 0 2 3 105 0 0 0 36 77 0 1 1 34 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 230;
}
);
note = i;
unicode = 105;
},
{
glyphname = dotlessi;
kernLeft = dotlessi;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (120,0);
},
{
name = top;
pos = (154,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,0,l),
(207,496,l),
(101,496,l),
(14,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 36 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (68,0);
},
{
name = ogonek;
pos = (110,0);
},
{
name = top;
pos = (156,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(110,0,l),
(197,496,l),
(113,496,l),
(26,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 36 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 223;
},
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (123,0);
},
{
name = top;
pos = (153,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(123,0,l),
(210,496,l),
(97,496,l),
(10,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 36 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 220;
},
{
anchors = (
{
name = bottom;
pos = (66,0);
},
{
name = ogonek;
pos = (130,0);
},
{
name = top;
pos = (152,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(130,0,l),
(217,496,l),
(89,496,l),
(2,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 36 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 219;
}
);
note = dotlessi;
unicode = 305;
},
{
glyphname = iacute;
kernLeft = iacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (120,0);
},
{
name = top;
pos = (199,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (1,0);
ref = acutecomb;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (68,0);
},
{
name = ogonek;
pos = (110,0);
},
{
name = top;
pos = (201,747);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (7,0);
ref = acutecomb;
}
);
width = 223;
},
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (123,0);
},
{
name = top;
pos = (198,750);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-1,0);
ref = acutecomb;
}
);
width = 220;
},
{
anchors = (
{
name = bottom;
pos = (66,0);
},
{
name = ogonek;
pos = (130,0);
},
{
name = top;
pos = (197,751);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-5,0);
ref = acutecomb;
}
);
width = 219;
}
);
note = iacute;
unicode = 237;
},
{
glyphname = ibreve;
kernLeft = ibreve;
kernRight = ibreve;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (120,0);
},
{
name = top;
pos = (194,722);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-39,0);
ref = uni0306;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (68,0);
},
{
name = ogonek;
pos = (110,0);
},
{
name = top;
pos = (198,732);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-29,0);
ref = uni0306;
}
);
width = 223;
},
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (123,0);
},
{
name = top;
pos = (193,719);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-42,0);
ref = uni0306;
}
);
width = 220;
},
{
anchors = (
{
name = bottom;
pos = (66,0);
},
{
name = ogonek;
pos = (130,0);
},
{
name = top;
pos = (190,712);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-48,0);
ref = uni0306;
}
);
width = 219;
}
);
note = ibreve;
unicode = 301;
},
{
glyphname = icircumflex;
kernLeft = ibreve;
kernRight = ibreve;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (120,0);
},
{
name = top;
pos = (195,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-32,0);
ref = uni0302;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (68,0);
},
{
name = ogonek;
pos = (110,0);
},
{
name = top;
pos = (198,733);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-25,0);
ref = uni0302;
}
);
width = 223;
},
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (123,0);
},
{
name = top;
pos = (194,728);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-34,0);
ref = uni0302;
}
);
width = 220;
},
{
anchors = (
{
name = bottom;
pos = (66,0);
},
{
name = ogonek;
pos = (130,0);
},
{
name = top;
pos = (192,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-38,0);
ref = uni0302;
}
);
width = 219;
}
);
note = icircumflex;
unicode = 238;
},
{
glyphname = idieresis;
kernLeft = ibreve;
kernRight = ibreve;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (120,0);
},
{
name = top;
pos = (194,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-72,0);
ref = uni0308.narrow;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (68,0);
},
{
name = ogonek;
pos = (110,0);
},
{
name = top;
pos = (195,720);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-36,0);
ref = uni0308.narrow;
}
);
width = 223;
},
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (123,0);
},
{
name = top;
pos = (194,724);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-84,0);
ref = uni0308.narrow;
}
);
width = 220;
},
{
anchors = (
{
name = bottom;
pos = (66,0);
},
{
name = ogonek;
pos = (130,0);
},
{
name = top;
pos = (193,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-108,0);
ref = uni0308.narrow;
}
);
width = 219;
}
);
note = idieresis;
unicode = 239;
},
{
glyphname = igrave;
kernLeft = igrave;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (120,0);
},
{
name = top;
pos = (199,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (2,0);
ref = gravecomb;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (68,0);
},
{
name = ogonek;
pos = (110,0);
},
{
name = top;
pos = (201,747);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (8,0);
ref = gravecomb;
}
);
width = 223;
},
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (123,0);
},
{
name = top;
pos = (198,750);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-1,0);
ref = gravecomb;
}
);
width = 220;
},
{
anchors = (
{
name = bottom;
pos = (66,0);
},
{
name = ogonek;
pos = (130,0);
},
{
name = top;
pos = (197,751);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-5,0);
ref = gravecomb;
}
);
width = 219;
}
);
note = igrave;
unicode = 236;
},
{
glyphname = imacron;
kernLeft = ibreve;
kernRight = ibreve;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (120,0);
},
{
name = top;
pos = (182,693);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-78,0);
ref = uni0304;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (68,0);
},
{
name = ogonek;
pos = (110,0);
},
{
name = top;
pos = (185,695);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-69,0);
ref = uni0304;
}
);
width = 223;
},
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (123,0);
},
{
name = top;
pos = (180,692);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-81,0);
ref = uni0304;
}
);
width = 220;
},
{
anchors = (
{
name = bottom;
pos = (66,0);
},
{
name = ogonek;
pos = (130,0);
},
{
name = top;
pos = (178,690);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-87,0);
ref = uni0304;
}
);
width = 219;
}
);
note = imacron;
unicode = 299;
},
{
glyphname = iogonek;
kernLeft = dotlessi;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (120,0);
},
{
name = top;
pos = (194,723);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,583,o),
(253,624,o),
(253,654,qs),
(253,683,o),
(212,723,o),
(182,723,qs),
(152,723,o),
(112,683,o),
(112,654,qs),
(112,624,o),
(152,583,o),
(182,583,qs)
);
},
{
closed = 1;
nodes = (
(47,-206,o),
(91,-193,q),
(102,-127,l),
(63,-142,o),
(31,-142,qs),
(8,-142,o),
(-18,-122,o),
(-18,-105,qs),
(-18,-83,o),
(18,-46,o),
(61,-27,qs),
(120,0,l),
(207,496,l),
(101,496,l),
(17,15,l),
(-48,-16,o),
(-103,-85,o),
(-103,-126,qs),
(-103,-165,o),
(-42,-206,o),
(7,-206,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
29 1 3 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 1 1 0 97 0 0 0 41 77 0 2 2 36 77 0 3 3 4 97 6 1 4 4 38 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 1 1 0 97 0 0 0 39 77 0 2 2 36 77 0 3 3 4 97 6 1 4 4 38 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 3 6 1 4 3 4 101 5 1 1 1 0 97 0 0 0 39 77 0 2 2 36 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 0 5 1 1 2 0 1 105 0 3 6 1 4 3 4 101 0 2 2 36 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
12 12 0 0 12 32 12 31 28 26 19 18 0 11 0 10 36 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (68,0);
},
{
name = ogonek;
pos = (110,0);
},
{
name = top;
pos = (195,720);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(209,606,o),
(243,639,o),
(243,664,qs),
(243,688,o),
(209,720,o),
(185,720,qs),
(160,720,o),
(127,688,o),
(127,664,qs),
(127,639,o),
(160,606,o),
(185,606,qs)
);
},
{
closed = 1;
nodes = (
(41,-203,o),
(80,-190,q),
(89,-134,l),
(53,-149,o),
(22,-149,qs),
(-2,-149,o),
(-31,-128,o),
(-31,-109,qs),
(-31,-63,o),
(47,-28,qs),
(110,0,l),
(197,496,l),
(113,496,l),
(29,15,l),
(-41,-15,o),
(-101,-85,o),
(-101,-127,qs),
(-101,-164,o),
(-43,-203,o),
(2,-203,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
28 1 3 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 1 1 0 97 0 0 0 41 77 0 2 2 36 77 0 3 3 4 97 6 1 4 4 38 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 3 6 1 4 3 4 101 5 1 1 1 0 97 0 0 0 41 77 0 2 2 36 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 6 1 4 3 4 101 5 1 1 1 0 97 0 0 0 39 77 0 2 2 36 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
12 12 0 0 12 31 12 30 27 25 19 18 0 11 0 10 36 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 223;
},
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (123,0);
},
{
name = top;
pos = (194,724);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(212,575,o),
(255,618,o),
(255,650,qs),
(255,682,o),
(213,724,o),
(181,724,qs),
(149,724,o),
(106,682,o),
(106,650,qs),
(106,618,o),
(149,575,o),
(181,575,qs)
);
},
{
closed = 1;
nodes = (
(47,-208,o),
(94,-194,q),
(105,-125,l),
(66,-140,o),
(34,-140,qs),
(12,-140,o),
(-14,-121,o),
(-14,-104,qs),
(-14,-82,o),
(22,-46,o),
(65,-27,qs),
(123,0,l),
(210,496,l),
(97,496,l),
(13,15,l),
(-51,-17,o),
(-104,-85,o),
(-104,-126,qs),
(-104,-166,o),
(-41,-208,o),
(8,-208,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
29 1 3 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 1 1 0 97 0 0 0 41 77 0 2 2 36 77 0 3 3 4 97 6 1 4 4 38 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 1 1 0 97 0 0 0 39 77 0 2 2 36 77 0 3 3 4 97 6 1 4 4 38 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 0 5 1 1 2 0 1 105 0 3 6 1 4 3 4 101 0 2 2 36 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
12 12 0 0 12 32 12 31 28 26 19 18 0 11 0 10 36 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 220;
},
{
anchors = (
{
name = bottom;
pos = (66,0);
},
{
name = ogonek;
pos = (130,0);
},
{
name = top;
pos = (193,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(213,560,o),
(261,608,o),
(261,643,qs),
(261,678,o),
(213,726,o),
(178,726,qs),
(143,726,o),
(95,678,o),
(95,643,qs),
(95,608,o),
(143,560,o),
(178,560,qs)
);
},
{
closed = 1;
nodes = (
(54,-210,o),
(101,-196,q),
(114,-120,l),
(72,-135,o),
(40,-135,qs),
(19,-135,o),
(-5,-117,o),
(-5,-102,qs),
(-5,-81,o),
(30,-46,o),
(74,-26,qs),
(130,0,l),
(217,496,l),
(89,496,l),
(4,14,l),
(-55,-18,o),
(-105,-85,o),
(-105,-126,qs),
(-105,-168,o),
(-41,-210,o),
(11,-210,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
29 1 3 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 1 1 0 97 0 0 0 41 77 0 2 2 36 77 0 3 3 4 97 6 1 4 4 38 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 1 1 0 97 0 0 0 39 77 0 2 2 36 77 0 3 3 4 97 6 1 4 4 38 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 0 5 1 1 2 0 1 105 0 2 2 36 77 0 3 3 4 97 6 1 4 4 38 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 0 5 1 1 2 0 1 105 0 3 6 1 4 3 4 101 0 2 2 36 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
12 12 0 0 12 32 12 31 28 26 19 18 0 11 0 10 36 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 219;
}
);
note = iogonek;
unicode = 303;
},
{
glyphname = itilde;
kernLeft = ibreve;
kernRight = ibreve;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (120,0);
},
{
name = top;
pos = (191,705);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-54,0);
ref = tildecomb;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (68,0);
},
{
name = ogonek;
pos = (110,0);
},
{
name = top;
pos = (193,705);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-39,0);
ref = tildecomb;
}
);
width = 223;
},
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (123,0);
},
{
name = top;
pos = (190,704);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-58,0);
ref = tildecomb;
}
);
width = 220;
},
{
anchors = (
{
name = bottom;
pos = (66,0);
},
{
name = ogonek;
pos = (130,0);
},
{
name = top;
pos = (189,704);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-68,0);
ref = tildecomb;
}
);
width = 219;
}
);
note = itilde;
unicode = 297;
},
{
glyphname = ij;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (74,0);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = i;
},
{
alignment = -1;
pos = (236,0);
ref = j;
}
);
width = 471;
},
{
anchors = (
{
name = bottom;
pos = (77,0);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = i;
},
{
alignment = -1;
pos = (241,0);
ref = j;
}
);
width = 483;
},
{
anchors = (
{
name = bottom;
pos = (73,0);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = i;
},
{
alignment = -1;
pos = (234,0);
ref = j;
}
);
width = 466;
},
{
anchors = (
{
name = bottom;
pos = (71,0);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = i;
},
{
alignment = -1;
pos = (230,0);
ref = j;
}
);
width = 458;
}
);
note = ij;
unicode = 307;
},
{
glyphname = j;
kernLeft = j;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-72,-220,ls),
(84,-220,o),
(111,-68,qs),
(210,496,l),
(104,496,l),
(5,-67,ls),
(-1,-100,o),
(-37,-129,o),
(-72,-129,qs),
(-111,-129,l),
(-127,-220,l)
);
},
{
closed = 1;
nodes = (
(215,586,o),
(254,626,o),
(254,655,qs),
(254,684,o),
(215,723,o),
(186,723,qs),
(157,723,o),
(117,684,o),
(117,655,qs),
(117,626,o),
(157,586,o),
(186,586,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 4 4 3 97 0 3 3 41 77 0 1 1 36 77 0 0 0 2 97 0 2 2 38 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 4 4 3 97 0 3 3 39 77 0 1 1 36 77 0 0 0 2 97 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 5 1 4 1 3 4 105 0 1 1 36 77 0 0 0 2 97 0 2 2 38 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
11 11 11 22 11 21 37 34 19 32 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 235;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(-65,-220,ls),
(78,-220,o),
(101,-82,qs),
(203,496,l),
(119,496,l),
(17,-80,ls),
(11,-116,o),
(-28,-148,o),
(-65,-148,qs),
(-103,-148,l),
(-116,-220,l)
);
},
{
closed = 1;
nodes = (
(216,606,o),
(249,638,o),
(249,663,qs),
(249,688,o),
(216,720,o),
(192,720,qs),
(167,720,o),
(134,688,o),
(134,663,qs),
(134,638,o),
(167,606,o),
(192,606,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 4 4 3 97 0 3 3 41 77 0 1 1 36 77 0 0 0 2 97 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
5 1 4 4 3 97 0 3 3 39 77 0 1 1 36 77 0 0 0 2 97 0 2 2 38 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
11 11 11 22 11 21 37 34 19 32 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 242;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(-75,-220,ls),
(86,-220,o),
(114,-63,qs),
(212,496,l),
(98,496,l),
(0,-63,ls),
(-6,-95,o),
(-41,-123,o),
(-75,-123,qs),
(-114,-123,l),
(-131,-220,l)
);
},
{
closed = 1;
nodes = (
(213,579,o),
(256,621,o),
(256,652,qs),
(256,682,o),
(213,724,o),
(183,724,qs),
(153,724,o),
(111,682,o),
(111,652,qs),
(111,621,o),
(153,579,o),
(183,579,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 4 4 3 97 0 3 3 41 77 0 1 1 36 77 0 0 0 2 97 0 2 2 38 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 4 4 3 97 0 3 3 39 77 0 1 1 36 77 0 0 0 2 97 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 5 1 4 1 3 4 105 0 1 1 36 77 0 0 0 2 97 0 2 2 38 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
11 11 11 22 11 21 37 34 19 32 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 233;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(-80,-220,ls),
(91,-220,o),
(120,-54,qs),
(216,496,l),
(88,496,l),
(-8,-54,ls),
(-14,-85,o),
(-47,-111,o),
(-80,-111,qs),
(-119,-111,l),
(-138,-220,l)
);
},
{
closed = 1;
nodes = (
(212,566,o),
(259,613,o),
(259,646,qs),
(259,679,o),
(212,726,o),
(179,726,qs),
(146,726,o),
(99,679,o),
(99,646,qs),
(99,613,o),
(146,566,o),
(179,566,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 4 4 3 97 0 3 3 41 77 0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 4 4 3 97 0 3 3 39 77 0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 5 1 4 1 3 4 105 0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
11 11 11 22 11 21 37 34 19 32 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 228;
}
);
note = j;
unicode = 106;
},
{
glyphname = uni0237;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (20,-310);
},
{
name = top;
pos = (162,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-72,-220,ls),
(84,-220,o),
(111,-68,qs),
(210,496,l),
(104,496,l),
(5,-67,ls),
(-1,-100,o),
(-37,-129,o),
(-72,-129,qs),
(-111,-129,l),
(-127,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 1 1 36 77 0 0 0 2 97 0 2 2 38 2 78 34 19 32 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 235;
},
{
anchors = (
{
name = bottom;
pos = (23,-310);
},
{
name = top;
pos = (165,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(-65,-220,ls),
(78,-220,o),
(101,-82,qs),
(203,496,l),
(119,496,l),
(17,-80,ls),
(11,-116,o),
(-28,-148,o),
(-65,-148,qs),
(-103,-148,l),
(-116,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 1 1 36 77 0 0 0 2 97 0 2 2 38 2 78 34 19 32 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 242;
},
{
anchors = (
{
name = bottom;
pos = (18,-310);
},
{
name = top;
pos = (160,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(-75,-220,ls),
(86,-220,o),
(114,-63,qs),
(212,496,l),
(98,496,l),
(0,-63,ls),
(-6,-95,o),
(-41,-123,o),
(-75,-123,qs),
(-114,-123,l),
(-131,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 1 1 36 77 0 0 0 2 97 0 2 2 38 2 78 34 19 32 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 233;
},
{
anchors = (
{
name = bottom;
pos = (16,-310);
},
{
name = top;
pos = (158,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(-80,-220,ls),
(91,-220,o),
(120,-54,qs),
(216,496,l),
(88,496,l),
(-8,-54,ls),
(-14,-85,o),
(-47,-111,o),
(-80,-111,qs),
(-119,-111,l),
(-138,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78 34 19 32 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 228;
}
);
note = uni0237;
unicode = 567;
},
{
glyphname = uni006A0301;
kernLeft = uni006A0301;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (20,-310);
},
{
name = top;
pos = (207,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = uni0237;
},
{
alignment = -1;
pos = (9,0);
ref = acutecomb;
}
);
width = 235;
},
{
anchors = (
{
name = bottom;
pos = (23,-310);
},
{
name = top;
pos = (210,747);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = uni0237;
},
{
alignment = -1;
pos = (16,0);
ref = acutecomb;
}
);
width = 242;
},
{
anchors = (
{
name = bottom;
pos = (18,-310);
},
{
name = top;
pos = (205,750);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = uni0237;
},
{
alignment = -1;
pos = (6,0);
ref = acutecomb;
}
);
width = 233;
},
{
anchors = (
{
name = bottom;
pos = (16,-310);
},
{
name = top;
pos = (203,751);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = uni0237;
},
{
alignment = -1;
pos = (1,0);
ref = acutecomb;
}
);
width = 228;
}
);
note = uni006A0301;
},
{
glyphname = k;
kernLeft = b;
kernRight = k;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (211,0);
},
{
name = top;
pos = (386,992);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,0,l),
(161,236,l),
(328,0,l),
(458,0,l),
(265,260,l),
(528,496,l),
(391,496,l),
(170,287,l),
(243,700,l),
(137,700,l),
(13,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
8 5 2 3 2 1 1 76 0 0 0 33 77 0 1 1 36 77 3 1 2 2 34 2 78 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 509;
},
{
anchors = (
{
name = bottom;
pos = (212,0);
},
{
name = top;
pos = (387,992);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(109,0,l),
(155,261,l),
(351,0,l),
(453,0,l),
(244,273,l),
(511,496,l),
(400,496,l),
(160,287,l),
(233,700,l),
(149,700,l),
(25,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
8 5 2 3 2 1 1 76 0 0 0 33 77 0 1 1 36 77 3 1 2 2 34 2 78 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 512;
},
{
anchors = (
{
name = bottom;
pos = (210,0);
},
{
name = top;
pos = (385,992);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(122,0,l),
(162,228,l),
(320,0,l),
(459,0,l),
(271,256,l),
(533,496,l),
(388,496,l),
(173,286,l),
(246,700,l),
(133,700,l),
(9,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
8 5 2 3 2 1 1 76 0 0 0 33 77 0 1 1 36 77 3 1 2 2 34 2 78 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 508;
},
{
anchors = (
{
name = bottom;
pos = (209,0);
},
{
name = top;
pos = (384,992);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(129,0,l),
(166,211,l),
(305,0,l),
(462,0,l),
(285,247,l),
(544,496,l),
(382,496,l),
(180,286,l),
(252,700,l),
(125,700,l),
(1,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
8 5 2 3 2 1 1 76 0 0 0 33 77 0 1 1 36 77 3 1 2 2 34 2 78 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 506;
}
);
note = k;
unicode = 107;
},
{
glyphname = l;
kernLeft = b;
kernRight = l;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = top;
pos = (190,700);
},
{
name = topright;
pos = (338,992);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,0,l),
(243,700,l),
(137,700,l),
(13,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 222;
},
{
anchors = (
{
name = bottom;
pos = (68,0);
},
{
name = top;
pos = (190,700);
},
{
name = topright;
pos = (334,992);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(109,0,l),
(233,700,l),
(149,700,l),
(25,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 223;
},
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = top;
pos = (190,700);
},
{
name = topright;
pos = (339,992);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(122,0,l),
(246,700,l),
(133,700,l),
(9,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (66,0);
},
{
name = top;
pos = (190,700);
},
{
name = topright;
pos = (341,992);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(129,0,l),
(253,700,l),
(125,700,l),
(1,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 220;
}
);
note = l;
unicode = 108;
},
{
glyphname = lacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = top;
pos = (233,942);
},
{
name = topright;
pos = (338,992);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (1,0);
ref = acutecomb.case;
}
);
width = 222;
},
{
anchors = (
{
name = bottom;
pos = (68,0);
},
{
name = top;
pos = (231,931);
},
{
name = topright;
pos = (334,992);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (5,0);
ref = acutecomb.case;
}
);
width = 223;
},
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = top;
pos = (234,945);
},
{
name = topright;
pos = (339,992);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
ref = acutecomb.case;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (66,0);
},
{
name = top;
pos = (235,952);
},
{
name = topright;
pos = (341,992);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (-3,0);
ref = acutecomb.case;
}
);
width = 220;
}
);
note = lacute;
unicode = 314;
},
{
glyphname = lcaron;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = top;
pos = (190,700);
},
{
name = topright;
pos = (338,992);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (206,0);
ref = uni030C.alt;
}
);
width = 222;
},
{
anchors = (
{
name = bottom;
pos = (68,0);
},
{
name = top;
pos = (190,700);
},
{
name = topright;
pos = (334,992);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (202,0);
ref = uni030C.alt;
}
);
width = 223;
},
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = top;
pos = (190,700);
},
{
name = topright;
pos = (339,992);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (207,0);
ref = uni030C.alt;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (66,0);
},
{
name = top;
pos = (190,700);
},
{
name = topright;
pos = (341,992);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (209,0);
ref = uni030C.alt;
}
);
width = 220;
}
);
note = lcaron;
unicode = 318;
},
{
glyphname = ldot;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,0,l),
(243,700,l),
(137,700,l),
(13,0,l)
);
},
{
closed = 1;
nodes = (
(324,311,o),
(357,343,o),
(357,366,qs),
(357,390,o),
(324,423,o),
(301,423,qs),
(277,423,o),
(245,390,o),
(245,366,qs),
(245,343,o),
(277,311,o),
(301,311,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 2 4 1 3 1 2 3 105 0 0 0 33 77 0 1 1 34 1 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 347;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(111,0,l),
(235,700,l),
(151,700,l),
(27,0,l)
);
},
{
closed = 1;
nodes = (
(323,318,o),
(353,347,o),
(353,367,qs),
(353,388,o),
(323,417,o),
(303,417,qs),
(282,417,o),
(253,388,o),
(253,367,qs),
(253,347,o),
(282,318,o),
(303,318,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 2 4 1 3 1 2 3 105 0 0 0 33 77 0 1 1 34 1 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 342;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(122,0,l),
(246,700,l),
(132,700,l),
(8,0,l)
);
},
{
closed = 1;
nodes = (
(325,309,o),
(358,341,o),
(358,366,qs),
(358,390,o),
(325,424,o),
(300,424,qs),
(275,424,o),
(242,390,o),
(242,366,qs),
(242,341,o),
(275,309,o),
(300,309,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 2 4 1 3 1 2 3 105 0 0 0 33 77 0 1 1 34 1 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 348;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(127,0,l),
(251,700,l),
(123,700,l),
(-1,0,l)
);
},
{
closed = 1;
nodes = (
(325,304,o),
(361,339,o),
(361,365,qs),
(361,391,o),
(325,428,o),
(299,428,qs),
(272,428,o),
(237,392,o),
(237,365,qs),
(237,339,o),
(272,304,o),
(299,304,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 2 4 1 3 1 2 3 105 0 0 0 33 77 0 1 1 34 1 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 351;
}
);
note = ldot;
unicode = 320;
},
{
glyphname = lslash;
kernLeft = lslash;
kernRight = lslash;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,0,l),
(198,368,l),
(275,396,l),
(293,496,l),
(216,468,l),
(257,700,l),
(151,700,l),
(103,429,l),
(26,402,l),
(9,301,l),
(85,328,l),
(27,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
7 6 1 3 1 0 1 76 0 0 0 33 77 0 1 1 34 1 78 21 20 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 274;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(119,0,l),
(188,387,l),
(267,418,l),
(281,496,l),
(202,465,l),
(243,700,l),
(159,700,l),
(112,431,l),
(32,401,l),
(19,322,l),
(98,352,l),
(35,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
7 6 1 3 1 0 1 76 0 0 0 33 77 0 1 1 34 1 78 21 20 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 267;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(137,0,l),
(201,362,l),
(277,388,l),
(296,495,l),
(221,469,l),
(261,700,l),
(148,700,l),
(100,428,l),
(24,402,l),
(5,294,l),
(81,320,l),
(24,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
7 6 1 3 1 0 1 76 0 0 0 33 77 0 1 1 34 1 78 21 20 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 276;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(146,0,l),
(208,349,l),
(282,373,l),
(304,495,l),
(230,471,l),
(270,700,l),
(142,700,l),
(94,426,l),
(20,402,l),
(-2,280,l),
(72,304,l),
(18,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
7 6 1 3 1 0 1 76 0 0 0 33 77 0 1 1 34 1 78 21 20 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 280;
}
);
note = lslash;
unicode = 322;
},
{
glyphname = m;
kernLeft = dotlessi;
kernRight = a;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,0,l),
(165,257,ls),
(178,332,o),
(263,418,o),
(316,418,qs),
(359,418,o),
(404,368,o),
(404,319,qs),
(404,296,o),
(400,275,qs),
(352,0,l),
(457,0,l),
(506,273,ls),
(518,339,o),
(601,418,o),
(653,418,qs),
(696,418,o),
(742,368,o),
(742,320,qs),
(742,302,o),
(737,275,qs),
(689,0,l),
(795,0,l),
(846,285,ls),
(852,318,o),
(852,346,qs),
(852,417,o),
(769,508,o),
(686,508,qs),
(634,508,o),
(537,457,o),
(504,412,q),
(488,459,o),
(410,508,o),
(354,508,qs),
(304,508,o),
(221,462,o),
(191,421,q),
(195,496,l),
(101,496,l),
(14,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
2 1 4 0 8 1 3 4 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
6 1 4 4 0 97 2 1 2 0 0 36 77 7 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 36 77 6 1 4 4 1 97 2 1 1 1 42 77 7 5 2 3 3 34 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
19 37 19 37 21 36 35 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 887;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(110,0,l),
(155,257,ls),
(165,313,o),
(216,394,o),
(285,436,o),
(322,436,qs),
(368,436,o),
(416,381,o),
(416,328,qs),
(416,304,o),
(412,281,qs),
(363,0,l),
(446,0,l),
(495,275,ls),
(503,322,o),
(552,396,o),
(622,436,o),
(659,436,qs),
(704,436,o),
(753,383,o),
(753,331,qs),
(753,311,o),
(748,281,qs),
(699,0,l),
(783,0,l),
(834,290,ls),
(840,323,o),
(840,351,qs),
(840,414,o),
(765,508,o),
(679,508,qs),
(627,508,o),
(528,454,o),
(496,407,q),
(481,457,o),
(402,508,o),
(346,508,qs),
(297,508,o),
(211,459,o),
(181,415,q),
(188,496,l),
(113,496,l),
(26,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
8 2 2 3 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
6 1 4 4 0 97 2 1 2 0 0 36 77 7 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 36 77 6 1 4 4 1 97 2 1 1 1 42 77 7 5 2 3 3 34 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
20 37 20 37 21 36 35 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 885;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(123,0,l),
(168,256,ls),
(181,328,o),
(262,412,o),
(314,412,qs),
(356,412,o),
(400,363,o),
(400,316,qs),
(400,293,o),
(396,272,qs),
(348,0,l),
(461,0,l),
(509,272,ls),
(521,337,o),
(601,412,o),
(651,412,qs),
(693,412,o),
(738,363,o),
(738,316,qs),
(738,299,o),
(733,272,qs),
(686,0,l),
(799,0,l),
(849,283,ls),
(855,316,o),
(855,344,qs),
(855,419,o),
(770,508,o),
(688,508,qs),
(635,508,o),
(540,458,o),
(507,414,q),
(490,460,o),
(411,508,o),
(356,508,qs),
(306,508,o),
(224,463,o),
(194,422,q),
(197,496,l),
(97,496,l),
(10,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
8 2 2 4 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
6 1 4 4 0 97 2 1 2 0 0 36 77 7 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 36 77 6 1 4 4 1 97 2 1 1 1 42 77 7 5 2 3 3 34 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
19 37 19 37 21 36 35 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 887;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(130,0,l),
(175,256,ls),
(187,323,o),
(261,400,o),
(310,400,qs),
(350,400,o),
(392,354,o),
(392,310,qs),
(392,288,o),
(388,268,qs),
(341,0,l),
(468,0,l),
(516,271,ls),
(527,332,o),
(600,400,o),
(647,400,qs),
(687,400,o),
(730,353,o),
(730,308,qs),
(730,296,o),
(726,268,qs),
(679,0,l),
(807,0,l),
(857,280,ls),
(863,313,o),
(863,341,qs),
(863,422,o),
(773,508,o),
(692,508,qs),
(640,508,o),
(546,460,o),
(512,417,q),
(494,462,o),
(416,508,o),
(361,508,qs),
(264,508,o),
(201,426,q),
(202,496,l),
(89,496,l),
(2,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
7 2 2 4 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
6 1 4 4 0 97 2 1 2 0 0 36 77 7 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 36 77 6 1 4 4 1 97 2 1 1 1 42 77 7 5 2 3 3 34 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
19 37 19 37 21 36 34 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 888;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
kernLeft = dotlessi;
kernRight = a;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = top;
pos = (330,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,0,l),
(167,263,ls),
(179,333,o),
(270,418,o),
(330,418,qs),
(427,418,o),
(427,320,qs),
(427,297,o),
(422,275,qs),
(374,0,l),
(480,0,l),
(530,285,ls),
(536,318,o),
(536,346,qs),
(536,424,o),
(451,508,o),
(375,508,qs),
(318,508,o),
(221,456,o),
(189,410,q),
(196,496,l),
(101,496,l),
(14,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 2 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 3 0 97 1 1 0 0 36 77 4 1 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 36 77 0 3 3 1 97 0 1 1 42 77 4 1 2 2 34 2 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
19 36 21 35 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = top;
pos = (331,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(110,0,l),
(157,266,ls),
(170,342,o),
(271,436,o),
(336,436,qs),
(441,436,o),
(441,329,qs),
(441,309,o),
(436,281,qs),
(387,0,l),
(471,0,l),
(522,290,ls),
(528,320,o),
(528,348,qs),
(528,425,o),
(443,508,o),
(368,508,qs),
(311,508,o),
(211,454,o),
(179,406,q),
(189,496,l),
(113,496,l),
(26,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 2 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 3 0 97 1 1 0 0 36 77 4 1 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 36 77 0 3 3 1 97 0 1 1 42 77 4 1 2 2 34 2 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
19 36 21 35 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = top;
pos = (330,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(123,0,l),
(170,262,ls),
(182,330,o),
(269,412,o),
(327,412,qs),
(422,412,o),
(422,316,qs),
(422,294,o),
(417,272,qs),
(369,0,l),
(482,0,l),
(533,283,ls),
(539,316,o),
(539,345,qs),
(539,423,o),
(454,508,o),
(377,508,qs),
(321,508,o),
(224,457,o),
(192,411,q),
(198,496,l),
(97,496,l),
(10,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 2 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 3 0 97 1 1 0 0 36 77 4 1 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 36 77 0 3 3 1 97 0 1 1 42 77 4 1 2 2 34 2 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
19 36 21 35 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = top;
pos = (329,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(130,0,l),
(176,260,ls),
(187,324,o),
(269,400,o),
(323,400,qs),
(412,400,o),
(412,310,qs),
(412,288,o),
(408,268,qs),
(360,0,l),
(488,0,l),
(538,280,ls),
(544,315,o),
(544,343,qs),
(544,423,o),
(460,508,o),
(382,508,qs),
(326,508,o),
(231,458,o),
(199,414,q),
(202,496,l),
(89,496,l),
(2,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 3 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 3 0 97 1 1 0 0 36 77 4 1 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 36 77 0 3 3 1 97 0 1 1 42 77 4 1 2 2 34 2 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
19 36 21 35 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 569;
}
);
note = n;
unicode = 110;
},
{
glyphname = nacute;
kernLeft = dotlessi;
kernRight = a;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = top;
pos = (375,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (177,0);
ref = acutecomb;
}
);
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = top;
pos = (376,747);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (182,0);
ref = acutecomb;
}
);
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = top;
pos = (375,750);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (175,0);
ref = acutecomb;
}
);
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = top;
pos = (374,751);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (172,0);
ref = acutecomb;
}
);
width = 569;
}
);
note = nacute;
unicode = 324;
},
{
glyphname = ncaron;
kernLeft = dotlessi;
kernRight = a;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = top;
pos = (371,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (145,0);
ref = uni030C;
}
);
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = top;
pos = (373,733);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (150,0);
ref = uni030C;
}
);
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = top;
pos = (370,728);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (143,0);
ref = uni030C;
}
);
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = top;
pos = (369,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (139,0);
ref = uni030C;
}
);
width = 569;
}
);
note = ncaron;
unicode = 328;
},
{
glyphname = ntilde;
kernLeft = dotlessi;
kernRight = a;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = top;
pos = (367,705);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (123,0);
ref = tildecomb;
}
);
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = top;
pos = (368,705);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (136,0);
ref = tildecomb;
}
);
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = top;
pos = (367,704);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (118,0);
ref = tildecomb;
}
);
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = top;
pos = (366,704);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (109,0);
ref = tildecomb;
}
);
width = 569;
}
);
note = ntilde;
unicode = 241;
},
{
glyphname = eng;
kernLeft = dotlessi;
kernRight = a;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = top;
pos = (330,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,0,l),
(167,263,ls),
(179,335,o),
(270,418,o),
(330,418,qs),
(427,418,o),
(427,320,qs),
(427,297,o),
(422,275,qs),
(362,-67,ls),
(355,-101,o),
(320,-129,o),
(286,-129,qs),
(252,-129,l),
(236,-220,l),
(286,-220,ls),
(360,-220,o),
(453,-148,o),
(467,-68,qs),
(530,285,ls),
(536,318,o),
(536,346,qs),
(536,424,o),
(451,508,o),
(375,508,qs),
(318,508,o),
(221,456,o),
(189,410,q),
(196,496,l),
(101,496,l),
(14,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 5 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 4 0 97 1 1 0 0 36 77 0 5 5 34 77 0 3 3 2 97 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 36 77 0 4 4 1 97 0 1 1 42 77 0 5 5 34 77 0 3 3 2 97 0 2 2 38 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
19 38 33 39 35 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = top;
pos = (331,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(110,0,l),
(157,266,ls),
(171,346,o),
(271,436,o),
(336,436,qs),
(441,436,o),
(441,329,qs),
(441,309,o),
(436,281,qs),
(373,-80,ls),
(366,-117,o),
(328,-148,o),
(291,-148,qs),
(252,-148,l),
(239,-220,l),
(291,-220,ls),
(361,-220,o),
(443,-153,o),
(456,-82,qs),
(522,290,ls),
(528,320,o),
(528,348,qs),
(528,425,o),
(443,508,o),
(368,508,qs),
(311,508,o),
(211,454,o),
(179,406,q),
(189,496,l),
(113,496,l),
(26,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 5 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 4 0 97 1 1 0 0 36 77 0 5 5 34 77 0 3 3 2 97 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 36 77 0 4 4 1 97 0 1 1 42 77 0 5 5 34 77 0 3 3 2 97 0 2 2 38 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
19 38 33 39 35 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = top;
pos = (330,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(123,0,l),
(170,262,ls),
(182,332,o),
(269,412,o),
(327,412,qs),
(422,412,o),
(422,316,qs),
(422,294,o),
(417,272,qs),
(358,-63,ls),
(351,-96,o),
(317,-123,o),
(284,-123,qs),
(252,-123,l),
(235,-220,l),
(284,-220,ls),
(360,-220,o),
(456,-146,o),
(471,-63,qs),
(533,283,ls),
(539,316,o),
(539,345,qs),
(539,423,o),
(454,508,o),
(377,508,qs),
(321,508,o),
(224,457,o),
(192,411,q),
(198,496,l),
(97,496,l),
(10,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 5 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 4 0 97 1 1 0 0 36 77 0 5 5 34 77 0 3 3 2 97 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 36 77 0 4 4 1 97 0 1 1 42 77 0 5 5 34 77 0 3 3 2 97 0 2 2 38 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
19 38 33 39 35 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = top;
pos = (329,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(130,0,l),
(176,260,ls),
(187,324,o),
(269,400,o),
(323,400,qs),
(412,400,o),
(412,310,qs),
(412,288,o),
(408,268,qs),
(350,-54,ls),
(344,-85,o),
(312,-111,o),
(280,-111,qs),
(252,-111,l),
(233,-220,l),
(280,-220,ls),
(359,-220,o),
(462,-143,o),
(478,-54,qs),
(538,280,ls),
(544,315,o),
(544,343,qs),
(544,423,o),
(460,508,o),
(382,508,qs),
(326,508,o),
(231,458,o),
(199,414,q),
(202,496,l),
(89,496,l),
(2,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 4 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 4 0 97 1 1 0 0 36 77 0 5 5 34 77 0 3 3 2 97 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 36 77 0 4 4 1 97 0 1 1 42 77 0 5 5 34 77 0 3 3 2 97 0 2 2 38 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
19 38 33 39 35 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 569;
}
);
note = eng;
unicode = 331;
},
{
glyphname = o;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (249,0);
},
{
name = ogonek;
pos = (365,10);
},
{
name = top;
pos = (337,496);
},
{
name = topright;
pos = (611,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(334,-12,o),
(471,69,o),
(550,208,o),
(550,292,qs),
(550,351,o),
(499,449,o),
(400,508,o),
(332,508,qs),
(250,508,o),
(113,429,o),
(34,292,o),
(34,207,qs),
(34,145,o),
(88,45,o),
(187,-12,o),
(251,-12,qs)
);
},
{
closed = 1;
nodes = (
(211,80,o),
(142,154,o),
(142,214,qs),
(142,270,o),
(187,363,o),
(267,417,o),
(317,417,qs),
(372,417,o),
(443,342,o),
(443,281,qs),
(443,225,o),
(398,133,o),
(318,80,o),
(267,80,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 42 77 5 1 3 3 1 97 4 1 1 1 40 1 78 16 16 0 0 16 29 16 28 23 21 0 15 0 14 38 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 584;
},
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = ogonek;
pos = (367,10);
},
{
name = top;
pos = (341,496);
},
{
name = topright;
pos = (617,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(338,-12,o),
(472,69,o),
(549,210,o),
(549,295,qs),
(549,358,o),
(495,454,o),
(399,508,o),
(337,508,qs),
(256,508,o),
(122,429,o),
(43,290,o),
(43,204,qs),
(43,142,o),
(97,43,o),
(193,-12,o),
(255,-12,qs)
);
},
{
closed = 1;
nodes = (
(206,60,o),
(131,141,o),
(131,207,qs),
(131,272,o),
(182,376,o),
(271,436,o),
(326,436,qs),
(384,436,o),
(463,357,o),
(463,289,qs),
(463,224,o),
(412,120,o),
(322,60,o),
(266,60,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 42 77 5 1 3 3 1 97 4 1 1 1 40 1 78 16 16 0 0 16 29 16 28 23 21 0 15 0 14 38 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (364,10);
},
{
name = top;
pos = (335,496);
},
{
name = topright;
pos = (609,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(333,-12,o),
(471,68,o),
(550,207,o),
(550,291,qs),
(550,348,o),
(500,448,o),
(400,508,o),
(330,508,qs),
(247,508,o),
(110,429,o),
(31,291,o),
(31,207,qs),
(31,145,o),
(86,45,o),
(185,-12,o),
(249,-12,qs)
);
},
{
closed = 1;
nodes = (
(212,86,o),
(145,158,o),
(145,216,qs),
(145,269,o),
(188,358,o),
(265,410,o),
(314,410,qs),
(368,410,o),
(436,336,o),
(436,278,qs),
(436,225,o),
(393,137,o),
(315,86,o),
(267,86,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 42 77 5 1 3 3 1 97 4 1 1 1 40 1 78 16 16 0 0 16 29 16 28 23 21 0 15 0 14 38 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 581;
},
{
anchors = (
{
name = bottom;
pos = (244,0);
},
{
name = ogonek;
pos = (362,10);
},
{
name = top;
pos = (332,496);
},
{
name = topright;
pos = (605,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(330,-12,o),
(469,68,o),
(550,206,o),
(550,289,qs),
(550,344,o),
(502,444,o),
(401,508,o),
(326,508,qs),
(242,508,o),
(104,429,o),
(25,292,o),
(25,209,qs),
(25,148,o),
(80,47,o),
(181,-12,o),
(246,-12,qs)
);
},
{
closed = 1;
nodes = (
(216,99,o),
(152,167,o),
(152,220,qs),
(152,267,o),
(191,348,o),
(262,397,o),
(308,397,qs),
(360,397,o),
(423,326,o),
(423,272,qs),
(423,225,o),
(384,146,o),
(313,99,o),
(268,99,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 42 77 5 1 3 3 1 97 4 1 1 1 40 1 78 16 16 0 0 16 29 16 28 23 21 0 15 0 14 38 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = o;
unicode = 111;
},
{
glyphname = oacute;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (249,0);
},
{
name = ogonek;
pos = (365,10);
},
{
name = top;
pos = (382,749);
},
{
name = topright;
pos = (611,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (184,0);
ref = acutecomb;
}
);
width = 584;
},
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = ogonek;
pos = (367,10);
},
{
name = top;
pos = (386,747);
},
{
name = topright;
pos = (617,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (192,0);
ref = acutecomb;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (364,10);
},
{
name = top;
pos = (380,750);
},
{
name = topright;
pos = (609,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (181,0);
ref = acutecomb;
}
);
width = 581;
},
{
anchors = (
{
name = bottom;
pos = (244,0);
},
{
name = ogonek;
pos = (362,10);
},
{
name = top;
pos = (377,751);
},
{
name = topright;
pos = (605,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (175,0);
ref = acutecomb;
}
);
width = 575;
}
);
note = oacute;
unicode = 243;
},
{
glyphname = obreve;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (249,0);
},
{
name = ogonek;
pos = (365,10);
},
{
name = top;
pos = (377,722);
},
{
name = topright;
pos = (611,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (144,0);
ref = uni0306;
}
);
width = 584;
},
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = ogonek;
pos = (367,10);
},
{
name = top;
pos = (383,732);
},
{
name = topright;
pos = (617,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (156,0);
ref = uni0306;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (364,10);
},
{
name = top;
pos = (374,719);
},
{
name = topright;
pos = (609,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (140,0);
ref = uni0306;
}
);
width = 581;
},
{
anchors = (
{
name = bottom;
pos = (244,0);
},
{
name = ogonek;
pos = (362,10);
},
{
name = top;
pos = (370,712);
},
{
name = topright;
pos = (605,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (132,0);
ref = uni0306;
}
);
width = 575;
}
);
note = obreve;
unicode = 335;
},
{
glyphname = ocircumflex;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (249,0);
},
{
name = ogonek;
pos = (365,10);
},
{
name = top;
pos = (378,730);
},
{
name = topright;
pos = (611,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (151,0);
ref = uni0302;
}
);
width = 584;
},
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = ogonek;
pos = (367,10);
},
{
name = top;
pos = (383,733);
},
{
name = topright;
pos = (617,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (160,0);
ref = uni0302;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (364,10);
},
{
name = top;
pos = (376,728);
},
{
name = topright;
pos = (609,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (148,0);
ref = uni0302;
}
);
width = 581;
},
{
anchors = (
{
name = bottom;
pos = (244,0);
},
{
name = ogonek;
pos = (362,10);
},
{
name = top;
pos = (372,726);
},
{
name = topright;
pos = (605,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (142,0);
ref = uni0302;
}
);
width = 575;
}
);
note = ocircumflex;
unicode = 244;
},
{
glyphname = odieresis;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (249,0);
},
{
name = ogonek;
pos = (365,10);
},
{
name = top;
pos = (377,723);
},
{
name = topright;
pos = (611,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (121,0);
ref = uni0308;
}
);
width = 584;
},
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = ogonek;
pos = (367,10);
},
{
name = top;
pos = (380,720);
},
{
name = topright;
pos = (617,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (149,0);
ref = uni0308;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (364,10);
},
{
name = top;
pos = (375,724);
},
{
name = topright;
pos = (609,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (112,0);
ref = uni0308;
}
);
width = 581;
},
{
anchors = (
{
name = bottom;
pos = (244,0);
},
{
name = ogonek;
pos = (362,10);
},
{
name = top;
pos = (373,726);
},
{
name = topright;
pos = (605,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (93,0);
ref = uni0308;
}
);
width = 575;
}
);
note = odieresis;
unicode = 246;
},
{
glyphname = ograve;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (249,0);
},
{
name = ogonek;
pos = (365,10);
},
{
name = top;
pos = (382,749);
},
{
name = topright;
pos = (611,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (184,0);
ref = gravecomb;
}
);
width = 584;
},
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = ogonek;
pos = (367,10);
},
{
name = top;
pos = (386,747);
},
{
name = topright;
pos = (617,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (193,0);
ref = gravecomb;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (364,10);
},
{
name = top;
pos = (380,750);
},
{
name = topright;
pos = (609,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (181,0);
ref = gravecomb;
}
);
width = 581;
},
{
anchors = (
{
name = bottom;
pos = (244,0);
},
{
name = ogonek;
pos = (362,10);
},
{
name = top;
pos = (377,751);
},
{
name = topright;
pos = (605,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (175,0);
ref = gravecomb;
}
);
width = 575;
}
);
note = ograve;
unicode = 242;
},
{
glyphname = ohungarumlaut;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (249,0);
},
{
name = ogonek;
pos = (365,10);
},
{
name = top;
pos = (374,711);
},
{
name = topright;
pos = (611,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (161,0);
ref = uni030B;
}
);
width = 584;
},
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = ogonek;
pos = (367,10);
},
{
name = top;
pos = (376,698);
},
{
name = topright;
pos = (617,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (181,0);
ref = uni030B;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (364,10);
},
{
name = top;
pos = (373,715);
},
{
name = topright;
pos = (609,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (154,0);
ref = uni030B;
}
);
width = 581;
},
{
anchors = (
{
name = bottom;
pos = (244,0);
},
{
name = ogonek;
pos = (362,10);
},
{
name = top;
pos = (372,723);
},
{
name = topright;
pos = (605,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (140,0);
ref = uni030B;
}
);
width = 575;
}
);
note = ohungarumlaut;
unicode = 337;
},
{
glyphname = omacron;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (249,0);
},
{
name = ogonek;
pos = (365,10);
},
{
name = top;
pos = (364,693);
},
{
name = topright;
pos = (611,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (105,0);
ref = uni0304;
}
);
width = 584;
},
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = ogonek;
pos = (367,10);
},
{
name = top;
pos = (370,695);
},
{
name = topright;
pos = (617,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (116,0);
ref = uni0304;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (364,10);
},
{
name = top;
pos = (362,692);
},
{
name = topright;
pos = (609,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (101,0);
ref = uni0304;
}
);
width = 581;
},
{
anchors = (
{
name = bottom;
pos = (244,0);
},
{
name = ogonek;
pos = (362,10);
},
{
name = top;
pos = (358,690);
},
{
name = topright;
pos = (605,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (93,0);
ref = uni0304;
}
);
width = 575;
}
);
note = omacron;
unicode = 333;
},
{
glyphname = oslash;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(327,-12,o),
(464,69,o),
(544,208,o),
(544,292,qs),
(544,363,o),
(508,418,q),
(590,496,l),
(500,496,l),
(466,464,l),
(408,508,o),
(325,508,qs),
(243,508,o),
(107,429,o),
(28,291,o),
(28,207,qs),
(28,136,o),
(65,79,q),
(-17,0,l),
(73,0,l),
(108,33,l),
(164,-12,o),
(245,-12,qs)
);
},
{
closed = 1;
nodes = (
(216,79,o),
(182,105,q),
(427,340,l),
(438,313,o),
(438,281,qs),
(438,230,o),
(396,137,o),
(315,79,o),
(261,79,qs)
);
},
{
closed = 1;
nodes = (
(145,156,l),
(134,183,o),
(134,214,qs),
(134,264,o),
(177,359,o),
(257,418,o),
(311,418,qs),
(359,418,o),
(390,391,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
12 1 5 1 39 38 28 27 4 4 5 1 1 0 4 3 76 15 1 5 4 1 4 2 75
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
12 1 5 2 39 38 28 27 4 4 5 1 1 0 4 3 76 15 1 5 4 1 4 2 75
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 1 97 2 1 1 1 42 77 7 1 4 4 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 36 77 0 5 5 1 97 0 1 1 42 77 0 0 0 34 77 7 1 4 4 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
22 22 0 0 33 31 22 30 22 29 0 21 0 20 18 38 18 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 572;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(338,-12,o),
(473,70,o),
(551,211,o),
(551,295,qs),
(551,366,o),
(516,419,q),
(597,496,l),
(518,496,l),
(480,460,l),
(422,508,o),
(338,508,qs),
(257,508,o),
(122,428,o),
(45,289,o),
(45,204,qs),
(45,134,o),
(81,78,q),
(-1,0,l),
(79,0,l),
(117,37,l),
(174,-12,o),
(257,-12,qs)
);
},
{
closed = 1;
nodes = (
(212,58,o),
(175,92,q),
(453,358,l),
(466,329,o),
(466,289,qs),
(466,234,o),
(421,128,o),
(332,58,o),
(268,58,qs)
);
},
{
closed = 1;
nodes = (
(143,138,l),
(130,168,o),
(130,207,qs),
(130,261,o),
(175,368,o),
(265,438,o),
(328,438,qs),
(384,438,o),
(421,404,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
12 1 5 1 39 38 28 27 15 4 6 4 5 1 1 0 4 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
12 1 5 2 39 38 28 27 15 4 6 4 5 1 1 0 4 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 1 97 2 1 1 1 42 77 7 1 4 4 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 36 77 0 5 5 1 97 0 1 1 42 77 0 0 0 34 77 7 1 4 4 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
22 22 0 0 33 31 22 30 22 29 0 21 0 20 18 38 18 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 596;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(323,-12,o),
(461,68,o),
(541,207,o),
(541,291,qs),
(541,362,o),
(505,417,q),
(587,496,l),
(493,496,l),
(461,465,l),
(402,508,o),
(321,508,qs),
(238,508,o),
(101,429,o),
(22,291,o),
(22,207,qs),
(22,135,o),
(60,79,q),
(-23,0,l),
(71,0,l),
(104,32,l),
(161,-12,o),
(240,-12,qs)
);
},
{
closed = 1;
nodes = (
(218,85,o),
(184,109,q),
(418,334,l),
(428,310,o),
(428,278,qs),
(428,229,o),
(387,140,o),
(310,85,o),
(259,85,qs)
);
},
{
closed = 1;
nodes = (
(145,161,l),
(135,189,o),
(135,216,qs),
(135,266,o),
(176,355,o),
(254,411,o),
(305,411,qs),
(346,411,o),
(380,387,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
15 12 2 5 1 39 38 28 27 4 4 5 4 1 2 0 4 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
15 12 2 5 2 39 38 28 27 4 4 5 4 1 2 0 4 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 1 97 2 1 1 1 42 77 7 1 4 4 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 36 77 0 5 5 1 97 0 1 1 42 77 0 0 0 34 77 7 1 4 4 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
22 22 0 0 33 31 22 30 22 29 0 21 0 20 18 38 18 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 564;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(316,-12,o),
(455,68,o),
(536,206,o),
(536,289,qs),
(536,322,o),
(517,388,o),
(499,416,q),
(582,496,l),
(481,496,l),
(451,467,l),
(394,508,o),
(312,508,qs),
(228,508,o),
(90,429,o),
(11,292,o),
(11,209,qs),
(11,135,o),
(49,80,q),
(-34,0,l),
(67,0,l),
(98,29,l),
(153,-12,o),
(232,-12,qs)
);
},
{
closed = 1;
nodes = (
(218,99,o),
(189,117,q),
(401,322,l),
(409,298,o),
(409,272,qs),
(409,225,o),
(370,146,o),
(299,99,o),
(254,99,qs)
);
},
{
closed = 1;
nodes = (
(146,173,l),
(138,195,o),
(138,220,qs),
(138,267,o),
(177,348,o),
(248,397,o),
(294,397,qs),
(331,397,o),
(359,378,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
15 12 2 5 1 40 39 29 28 4 4 5 4 1 2 0 4 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
15 12 2 5 2 40 39 29 28 4 4 5 4 1 2 0 4 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 1 97 2 1 1 1 42 77 7 1 4 4 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 36 77 0 5 5 1 97 0 1 1 42 77 0 0 0 34 77 7 1 4 4 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
23 23 0 0 34 32 23 31 23 30 0 22 0 21 18 38 18 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 548;
}
);
note = oslash;
unicode = 248;
},
{
glyphname = otilde;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (249,0);
},
{
name = ogonek;
pos = (365,10);
},
{
name = top;
pos = (374,705);
},
{
name = topright;
pos = (611,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (129,0);
ref = tildecomb;
}
);
width = 584;
},
{
anchors = (
{
name = bottom;
pos = (253,0);
},
{
name = ogonek;
pos = (367,10);
},
{
name = top;
pos = (378,705);
},
{
name = topright;
pos = (617,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (146,0);
ref = tildecomb;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (364,10);
},
{
name = top;
pos = (372,704);
},
{
name = topright;
pos = (609,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (123,0);
ref = tildecomb;
}
);
width = 581;
},
{
anchors = (
{
name = bottom;
pos = (244,0);
},
{
name = ogonek;
pos = (362,10);
},
{
name = top;
pos = (369,704);
},
{
name = topright;
pos = (605,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (112,0);
ref = tildecomb;
}
);
width = 575;
}
);
note = otilde;
unicode = 245;
},
{
glyphname = oe;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (442,0);
},
{
name = top;
pos = (530,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(315,-12,o),
(428,39,o),
(469,84,q),
(495,38,o),
(588,-12,o),
(649,-12,qs),
(727,-12,o),
(868,72,o),
(907,152,q),
(800,152,l),
(778,116,o),
(708,76,o),
(664,76,qs),
(611,76,o),
(543,141,o),
(543,199,qs),
(543,207,o),
(545,223,q),
(931,223,l),
(945,282,o),
(945,315,qs),
(945,369,o),
(898,456,o),
(806,508,o),
(741,508,qs),
(674,508,o),
(558,455,o),
(518,408,q),
(492,455,o),
(396,508,o),
(332,508,qs),
(250,508,o),
(113,429,o),
(34,291,o),
(34,207,qs),
(34,148,o),
(86,48,o),
(184,-12,o),
(251,-12,qs)
);
},
{
closed = 1;
nodes = (
(208,80,o),
(142,155,o),
(142,214,qs),
(142,264,o),
(184,358,o),
(264,417,o),
(317,417,qs),
(372,417,o),
(443,342,o),
(443,281,qs),
(443,230,o),
(401,137,o),
(321,80,o),
(267,80,qs)
);
},
{
closed = 1;
nodes = (
(559,296,l),
(578,355,o),
(670,421,o),
(726,421,qs),
(777,421,o),
(840,364,o),
(840,315,qs),
(840,303,o),
(839,296,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
10 1 10 7 35 1 3 4 2 76 0 4 2 3 2 4 3 128 0 10 0 2 4 10 2 103 9 1 7 7 0 97 1 1 0 0 42 77 12 8 2 3 3 5 97 11 6 2 5 5 40 5 78 39 39 0 0 61 60 58 56 39 52 39 51 46 44 0 38 0 37 34 18 36 21 36 38 13 8 28
CALL[ ]	/* CallFunction */";
};
width = 967;
},
{
anchors = (
{
name = bottom;
pos = (448,0);
},
{
name = top;
pos = (536,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(323,-12,o),
(440,47,o),
(481,98,q),
(505,46,o),
(599,-12,o),
(663,-12,qs),
(738,-12,o),
(876,70,o),
(914,148,q),
(831,148,l),
(806,106,o),
(726,59,o),
(675,59,qs),
(618,59,o),
(541,131,o),
(541,198,qs),
(541,213,o),
(544,229,q),
(939,229,l),
(952,298,o),
(952,319,qs),
(952,368,o),
(911,454,o),
(822,508,o),
(756,508,qs),
(687,508,o),
(566,448,o),
(526,394,q),
(502,448,o),
(403,508,o),
(337,508,qs),
(256,508,o),
(121,428,o),
(43,289,o),
(43,204,qs),
(43,148,o),
(92,49,o),
(188,-12,o),
(255,-12,qs)
);
},
{
closed = 1;
nodes = (
(200,60,o),
(131,142,o),
(131,207,qs),
(131,261,o),
(176,367,o),
(264,436,o),
(326,436,qs),
(384,436,o),
(463,357,o),
(463,289,qs),
(463,234,o),
(418,128,o),
(329,60,o),
(266,60,qs)
);
},
{
closed = 1;
nodes = (
(556,294,l),
(576,361,o),
(679,437,o),
(742,437,qs),
(800,437,o),
(870,373,o),
(870,317,qs),
(870,310,o),
(868,294,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
10 1 10 7 35 1 3 4 2 76 0 4 2 3 2 4 3 128 0 10 0 2 4 10 2 103 9 1 7 7 0 97 1 1 0 0 42 77 12 8 2 3 3 5 97 11 6 2 5 5 40 5 78 39 39 0 0 61 60 58 56 39 52 39 51 46 44 0 38 0 37 34 18 36 21 36 38 13 8 28
CALL[ ]	/* CallFunction */";
};
width = 983;
},
{
anchors = (
{
name = bottom;
pos = (440,0);
},
{
name = top;
pos = (528,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(312,-12,o),
(424,36,o),
(465,79,q),
(491,36,o),
(583,-12,o),
(644,-12,qs),
(722,-12,o),
(865,73,o),
(904,153,q),
(790,153,l),
(768,120,o),
(702,82,o),
(660,82,qs),
(609,82,o),
(544,144,o),
(544,199,qs),
(544,213,o),
(545,221,q),
(928,221,l),
(933,240,o),
(942,294,o),
(942,314,qs),
(942,369,o),
(894,457,o),
(801,508,o),
(736,508,qs),
(670,508,o),
(555,458,o),
(515,413,q),
(489,457,o),
(394,508,o),
(330,508,qs),
(247,508,o),
(110,429,o),
(31,291,o),
(31,207,qs),
(31,148,o),
(84,48,o),
(183,-12,o),
(249,-12,qs)
);
},
{
closed = 1;
nodes = (
(211,86,o),
(145,159,o),
(145,216,qs),
(145,265,o),
(186,355,o),
(263,410,o),
(314,410,qs),
(368,410,o),
(436,336,o),
(436,278,qs),
(436,228,o),
(395,140,o),
(318,86,o),
(267,86,qs)
);
},
{
closed = 1;
nodes = (
(560,296,l),
(579,353,o),
(667,415,o),
(720,415,qs),
(769,415,o),
(830,360,o),
(830,313,qs),
(829,296,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
10 1 7 0 36 1 5 3 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
10 1 7 9 36 1 5 3 2 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 2 3 2 4 3 128 0 10 0 2 4 10 2 103 9 1 7 7 0 97 1 1 0 0 42 77 12 8 2 3 3 5 97 11 6 2 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 4 2 3 2 4 3 128 0 10 0 2 4 10 2 103 0 9 9 0 97 1 1 0 0 42 77 0 7 7 0 97 1 1 0 0 42 77 12 8 2 3 3 5 97 11 6 2 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
40 40 0 0 61 60 58 56 40 53 40 52 47 45 0 39 0 38 34 18 36 22 36 38 13 8 28
CALL[ ]	/* CallFunction */";
};
width = 962;
},
{
anchors = (
{
name = bottom;
pos = (436,0);
},
{
name = top;
pos = (524,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(307,-12,o),
(415,31,o),
(457,70,q),
(484,31,o),
(576,-12,o),
(635,-12,qs),
(715,-12,o),
(860,74,o),
(899,156,q),
(769,156,l),
(749,127,o),
(690,93,o),
(653,93,qs),
(604,93,o),
(545,150,o),
(545,200,qs),
(545,211,o),
(546,217,q),
(922,217,l),
(937,264,o),
(937,311,qs),
(937,400,o),
(823,508,o),
(726,508,qs),
(661,508,o),
(551,463,o),
(509,422,q),
(481,462,o),
(389,508,o),
(326,508,qs),
(242,508,o),
(104,429,o),
(25,292,o),
(25,209,qs),
(25,148,o),
(80,47,o),
(181,-12,o),
(246,-12,qs)
);
},
{
closed = 1;
nodes = (
(216,99,o),
(152,167,o),
(152,220,qs),
(152,267,o),
(191,348,o),
(262,397,o),
(308,397,qs),
(360,397,o),
(423,326,o),
(423,272,qs),
(423,225,o),
(384,146,o),
(313,99,o),
(268,99,qs)
);
},
{
closed = 1;
nodes = (
(562,297,l),
(580,349,o),
(661,404,o),
(709,404,qs),
(755,404,o),
(811,352,o),
(810,308,qs),
(809,297,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
10 1 7 0 52 1 10 7 34 1 5 3 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
10 1 9 0 52 1 10 7 34 1 5 3 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 2 3 2 4 3 128 0 10 0 2 4 10 2 103 9 1 7 7 0 97 1 1 0 0 42 77 12 8 2 3 3 5 97 11 6 2 5 5 40 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 4 2 3 2 4 3 128 0 10 0 2 4 10 2 103 0 9 9 0 97 1 1 0 0 42 77 0 7 7 0 97 1 1 0 0 42 77 12 8 2 3 3 5 97 11 6 2 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 4 2 8 2 4 8 128 0 10 0 2 4 10 2 103 0 9 9 0 97 1 1 0 0 42 77 0 7 7 0 97 1 1 0 0 42 77 12 1 8 8 5 97 11 6 2 5 5 40 77 0 3 3 5 97 11 6 2 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
38 38 0 0 59 58 56 54 38 51 38 50 45 43 0 37 0 36 34 18 36 20 36 38 13 8 28
CALL[ ]	/* CallFunction */";
};
width = 951;
}
);
note = oe;
unicode = 339;
},
{
glyphname = p;
kernLeft = p;
kernRight = b;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(81,-220,l),
(134,76,l),
(153,37,o),
(238,-12,o),
(292,-12,qs),
(374,-12,o),
(505,69,o),
(579,209,o),
(579,295,qs),
(579,355,o),
(531,452,o),
(439,508,o),
(376,508,qs),
(266,508,o),
(194,420,q),
(198,496,l),
(101,496,l),
(-25,-220,l)
);
},
{
closed = 1;
nodes = (
(232,81,o),
(160,155,o),
(160,215,qs),
(160,269,o),
(204,361,o),
(287,416,o),
(341,416,qs),
(399,416,o),
(470,338,o),
(470,278,qs),
(470,222,o),
(425,132,o),
(344,81,o),
(292,81,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
2 1 4 0 15 1 2 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 0 97 1 1 0 0 36 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 36 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
18 18 18 31 18 30 38 19 38 34 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(70,-220,l),
(125,84,l),
(145,41,o),
(234,-12,o),
(290,-12,qs),
(372,-12,o),
(503,68,o),
(577,208,o),
(577,295,qs),
(577,391,o),
(465,508,o),
(372,508,qs),
(257,508,o),
(183,414,q),
(191,496,l),
(113,496,l),
(-14,-220,l)
);
},
{
closed = 1;
nodes = (
(230,61,o),
(152,142,o),
(152,209,qs),
(152,272,o),
(204,376,o),
(294,435,o),
(351,435,qs),
(414,435,o),
(490,350,o),
(490,283,qs),
(490,219,o),
(440,118,o),
(352,61,o),
(295,61,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
14 2 2 5 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 0 97 1 1 0 0 36 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 36 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
17 17 17 30 17 29 38 19 37 34 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 620;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(85,-220,l),
(136,73,l),
(156,36,o),
(239,-12,o),
(293,-12,qs),
(374,-12,o),
(505,69,o),
(580,209,o),
(580,294,qs),
(580,353,o),
(532,451,o),
(440,508,o),
(377,508,qs),
(268,508,o),
(198,421,q),
(200,496,l),
(97,496,l),
(-29,-220,l)
);
},
{
closed = 1;
nodes = (
(233,87,o),
(163,159,o),
(163,216,qs),
(163,266,o),
(205,355,o),
(284,409,o),
(337,409,qs),
(394,409,o),
(463,334,o),
(463,276,qs),
(463,223,o),
(419,137,o),
(340,87,o),
(290,87,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
2 1 4 0 15 1 2 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 0 97 1 1 0 0 36 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 36 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
18 18 18 31 18 30 38 19 38 34 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 610;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(92,-220,l),
(142,68,l),
(161,33,o),
(242,-12,o),
(294,-12,qs),
(375,-12,o),
(506,70,o),
(581,210,o),
(581,294,qs),
(581,351,o),
(534,449,o),
(443,508,o),
(379,508,qs),
(273,508,o),
(205,425,q),
(204,496,l),
(89,496,l),
(-36,-220,l)
);
},
{
closed = 1;
nodes = (
(235,100,o),
(168,168,o),
(168,220,qs),
(168,264,o),
(205,345,o),
(279,396,o),
(330,396,qs),
(384,396,o),
(449,326,o),
(449,272,qs),
(449,225,o),
(408,146,o),
(335,100,o),
(288,100,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
2 1 4 0 15 1 2 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 0 97 1 1 0 0 36 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 36 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
18 18 18 31 18 30 38 19 38 34 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 605;
}
);
note = p;
unicode = 112;
},
{
glyphname = thorn;
kernRight = b;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(81,-220,l),
(134,76,l),
(153,37,o),
(238,-12,o),
(292,-12,qs),
(374,-12,o),
(505,69,o),
(579,209,o),
(579,295,qs),
(579,355,o),
(531,452,o),
(439,508,o),
(376,508,qs),
(270,508,o),
(195,426,q),
(243,700,l),
(137,700,l),
(-25,-220,l)
);
},
{
closed = 1;
nodes = (
(232,81,o),
(160,155,o),
(160,215,qs),
(160,269,o),
(204,361,o),
(287,416,o),
(341,416,qs),
(399,416,o),
(470,338,o),
(470,278,qs),
(470,222,o),
(425,132,o),
(344,81,o),
(292,81,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
2 1 4 1 15 1 2 5 2 76 0 0 0 33 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 2 98 0 2 2 40 77 0 3 3 38 3 78 18 18 18 31 18 30 38 19 38 34 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(70,-220,l),
(125,84,l),
(145,41,o),
(234,-12,o),
(290,-12,qs),
(372,-12,o),
(503,68,o),
(577,208,o),
(577,295,qs),
(577,391,o),
(465,508,o),
(372,508,qs),
(260,508,o),
(184,419,q),
(233,700,l),
(148,700,l),
(-14,-220,l)
);
},
{
closed = 1;
nodes = (
(230,61,o),
(152,142,o),
(152,209,qs),
(152,272,o),
(204,376,o),
(294,435,o),
(351,435,qs),
(414,435,o),
(490,350,o),
(490,283,qs),
(490,219,o),
(440,118,o),
(352,61,o),
(295,61,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
14 2 2 5 4 1 76 0 0 0 33 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78 17 17 17 30 17 29 38 19 37 34 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 620;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(85,-220,l),
(136,73,l),
(156,36,o),
(239,-12,o),
(293,-12,qs),
(374,-12,o),
(505,69,o),
(580,209,o),
(580,294,qs),
(580,353,o),
(532,451,o),
(440,508,o),
(377,508,qs),
(272,508,o),
(199,428,q),
(246,700,l),
(133,700,l),
(-29,-220,l)
);
},
{
closed = 1;
nodes = (
(233,87,o),
(163,159,o),
(163,216,qs),
(163,266,o),
(205,355,o),
(284,409,o),
(337,409,qs),
(394,409,o),
(463,334,o),
(463,276,qs),
(463,223,o),
(419,137,o),
(340,87,o),
(290,87,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
2 1 4 1 15 1 2 5 2 76 0 0 0 33 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 2 98 0 2 2 40 77 0 3 3 38 3 78 18 18 18 31 18 30 38 19 38 34 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 610;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(92,-220,l),
(142,68,l),
(161,33,o),
(242,-12,o),
(294,-12,qs),
(375,-12,o),
(506,70,o),
(581,210,o),
(581,294,qs),
(581,351,o),
(534,449,o),
(443,508,o),
(379,508,qs),
(277,508,o),
(206,433,q),
(253,700,l),
(125,700,l),
(-36,-220,l)
);
},
{
closed = 1;
nodes = (
(235,100,o),
(168,168,o),
(168,220,qs),
(168,264,o),
(205,345,o),
(279,396,o),
(330,396,qs),
(384,396,o),
(449,326,o),
(449,272,qs),
(449,225,o),
(408,146,o),
(335,100,o),
(288,100,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
2 1 4 1 15 1 2 5 2 76 0 0 0 33 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 2 98 0 2 2 40 77 0 3 3 38 3 78 18 18 18 31 18 30 38 19 38 34 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 605;
}
);
note = thorn;
unicode = 254;
},
{
glyphname = q;
kernLeft = c;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(367,-220,l),
(473,-220,l),
(599,496,l),
(504,496,l),
(479,421,l),
(459,462,o),
(377,508,o),
(316,508,qs),
(245,508,o),
(115,436,o),
(35,300,o),
(35,208,qs),
(35,152,o),
(78,52,o),
(168,-12,o),
(235,-12,qs),
(344,-12,o),
(418,77,q)
);
},
{
closed = 1;
nodes = (
(213,81,o),
(144,159,o),
(144,219,qs),
(144,266,o),
(184,357,o),
(266,416,o),
(324,416,qs),
(383,416,o),
(452,345,o),
(452,286,qs),
(452,237,o),
(411,143,o),
(329,81,o),
(272,81,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
12 1 4 1 17 1 0 5 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
12 1 4 2 17 1 0 5 2 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 1 97 2 1 1 1 42 77 6 1 5 5 0 97 0 0 0 40 77 0 3 3 38 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 36 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 0 97 0 0 0 40 77 0 3 3 38 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
18 18 18 31 18 30 39 17 19 38 32 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(385,-220,l),
(469,-220,l),
(595,496,l),
(519,496,l),
(496,413,l),
(475,458,o),
(390,508,o),
(326,508,qs),
(256,508,o),
(126,438,o),
(44,302,o),
(44,207,qs),
(44,152,o),
(87,52,o),
(179,-12,o),
(247,-12,qs),
(361,-12,o),
(437,82,q)
);
},
{
closed = 1;
nodes = (
(207,61,o),
(131,148,o),
(131,215,qs),
(131,269,o),
(176,370,o),
(265,435,o),
(329,435,qs),
(394,435,o),
(468,357,o),
(468,291,qs),
(468,237,o),
(423,131,o),
(334,61,o),
(271,61,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
17 12 2 5 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 1 97 2 1 1 1 42 77 6 1 5 5 0 97 0 0 0 40 77 0 3 3 38 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 36 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 0 97 0 0 0 40 77 0 3 3 38 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
18 18 18 31 18 30 39 17 19 38 32 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(361,-220,l),
(474,-220,l),
(600,496,l),
(498,496,l),
(473,423,l),
(453,463,o),
(373,508,o),
(312,508,qs),
(240,508,o),
(111,435,o),
(31,299,o),
(31,208,qs),
(31,153,o),
(74,52,o),
(164,-12,o),
(231,-12,qs),
(339,-12,o),
(411,75,q)
);
},
{
closed = 1;
nodes = (
(215,87,o),
(148,162,o),
(148,220,qs),
(148,265,o),
(187,352,o),
(265,409,o),
(322,409,qs),
(379,409,o),
(446,341,o),
(446,284,qs),
(446,237,o),
(406,146,o),
(327,87,o),
(272,87,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
12 1 4 1 17 1 0 5 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
12 1 4 2 17 1 0 5 2 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 1 97 2 1 1 1 42 77 6 1 5 5 0 97 0 0 0 40 77 0 3 3 38 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 36 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 0 97 0 0 0 40 77 0 3 3 38 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
18 18 18 31 18 30 39 17 19 38 32 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 610;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(349,-220,l),
(477,-220,l),
(602,496,l),
(488,496,l),
(462,428,l),
(419,508,o),
(305,508,qs),
(233,508,o),
(104,434,o),
(25,297,o),
(25,208,qs),
(25,152,o),
(67,52,o),
(157,-12,o),
(223,-12,qs),
(328,-12,o),
(398,71,q)
);
},
{
closed = 1;
nodes = (
(219,100,o),
(157,170,o),
(157,223,qs),
(157,263,o),
(193,343,o),
(266,396,o),
(319,396,qs),
(372,396,o),
(435,332,o),
(435,280,qs),
(435,237,o),
(397,154,o),
(323,100,o),
(272,100,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
11 1 4 1 16 1 0 5 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
11 1 4 2 16 1 0 5 2 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 1 97 2 1 1 1 42 77 6 1 5 5 0 97 0 0 0 40 77 0 3 3 38 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 36 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 0 97 0 0 0 40 77 0 3 3 38 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
17 17 17 30 17 29 39 17 18 38 32 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 605;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
kernLeft = dotlessi;
kernRight = r;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (73,0);
},
{
name = top;
pos = (228,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,0,l),
(165,251,ls),
(190,397,o),
(345,397,qs),
(374,397,l),
(393,508,l),
(330,508,o),
(226,454,o),
(191,407,q),
(197,496,l),
(101,496,l),
(14,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 2 2 0 97 1 1 0 0 36 77 0 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 36 77 0 2 2 1 97 0 1 1 42 77 0 3 3 34 3 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
18 33 19 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 366;
},
{
anchors = (
{
name = bottom;
pos = (71,0);
},
{
name = top;
pos = (229,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(110,0,l),
(157,267,ls),
(184,420,o),
(347,420,qs),
(370,420,l),
(385,508,l),
(320,508,o),
(214,455,o),
(181,408,q),
(190,496,l),
(113,496,l),
(26,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 3 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 2 2 0 97 1 1 0 0 36 77 0 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 36 77 0 2 2 1 97 0 1 1 42 77 0 3 3 34 3 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
18 33 19 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 369;
},
{
anchors = (
{
name = bottom;
pos = (73,0);
},
{
name = top;
pos = (227,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(123,0,l),
(167,246,ls),
(193,389,o),
(344,389,qs),
(375,389,l),
(396,508,l),
(333,508,o),
(229,454,o),
(194,407,q),
(199,496,l),
(97,496,l),
(10,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 2 2 0 97 1 1 0 0 36 77 0 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 36 77 0 2 2 1 97 0 1 1 42 77 0 3 3 34 3 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
18 33 19 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 365;
},
{
anchors = (
{
name = bottom;
pos = (74,0);
},
{
name = top;
pos = (226,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(130,0,l),
(172,235,ls),
(185,309,o),
(273,373,o),
(342,373,qs),
(377,373,l),
(401,508,l),
(340,508,o),
(237,453,o),
(200,406,q),
(204,496,l),
(89,496,l),
(2,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 2 2 0 97 1 1 0 0 36 77 0 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 36 77 0 2 2 1 97 0 1 1 42 77 0 3 3 34 3 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
19 33 19 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 363;
}
);
note = r;
unicode = 114;
},
{
glyphname = racute;
kernLeft = dotlessi;
kernRight = r;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (73,0);
},
{
name = top;
pos = (273,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (75,0);
ref = acutecomb;
}
);
width = 366;
},
{
anchors = (
{
name = bottom;
pos = (71,0);
},
{
name = top;
pos = (274,747);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (80,0);
ref = acutecomb;
}
);
width = 369;
},
{
anchors = (
{
name = bottom;
pos = (73,0);
},
{
name = top;
pos = (272,750);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (73,0);
ref = acutecomb;
}
);
width = 365;
},
{
anchors = (
{
name = bottom;
pos = (74,0);
},
{
name = top;
pos = (271,751);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (69,0);
ref = acutecomb;
}
);
width = 363;
}
);
note = racute;
unicode = 341;
},
{
glyphname = rcaron;
kernLeft = rcaron;
kernRight = r;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (73,0);
},
{
name = top;
pos = (269,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (42,0);
ref = uni030C;
}
);
width = 366;
},
{
anchors = (
{
name = bottom;
pos = (71,0);
},
{
name = top;
pos = (271,733);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (48,0);
ref = uni030C;
}
);
width = 369;
},
{
anchors = (
{
name = bottom;
pos = (73,0);
},
{
name = top;
pos = (268,728);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (40,0);
ref = uni030C;
}
);
width = 365;
},
{
anchors = (
{
name = bottom;
pos = (74,0);
},
{
name = top;
pos = (266,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (36,0);
ref = uni030C;
}
);
width = 363;
}
);
note = rcaron;
unicode = 345;
},
{
glyphname = s;
kernLeft = s;
kernRight = s;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (211,0);
},
{
name = top;
pos = (299,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(284,-12,o),
(387,32,o),
(444,112,o),
(444,163,qs),
(444,221,o),
(357,280,o),
(281,297,qs),
(230,309,o),
(181,336,o),
(181,360,qs),
(181,387,o),
(233,424,o),
(274,424,qs),
(314,424,o),
(362,386,o),
(361,354,q),
(464,354,l),
(467,426,o),
(369,508,o),
(285,508,qs),
(225,508,o),
(129,466,o),
(74,392,o),
(74,346,qs),
(74,273,o),
(160,239,qs),
(193,224,o),
(236,214,qs),
(286,204,o),
(334,176,o),
(334,149,qs),
(334,114,o),
(279,73,o),
(231,73,qs),
(177,73,o),
(123,124,o),
(125,165,q),
(19,165,l),
(15,112,o),
(60,32,o),
(153,-12,o),
(217,-12,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 4 0 4 3 114 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 42 77 0 1 1 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 42 77 0 1 1 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 4 0 4 3 114 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 42 77 0 1 1 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 42 77 0 1 1 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 41 0 40 34 18 44 34 19 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 499;
},
{
anchors = (
{
name = bottom;
pos = (216,0);
},
{
name = top;
pos = (304,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(285,-12,o),
(383,31,o),
(437,109,o),
(437,159,qs),
(437,219,o),
(348,277,o),
(279,292,qs),
(225,305,o),
(174,335,o),
(174,363,qs),
(174,394,o),
(234,437,o),
(279,437,qs),
(325,437,o),
(376,393,o),
(374,356,q),
(458,356,l),
(462,427,o),
(368,508,o),
(288,508,qs),
(231,508,o),
(139,467,o),
(87,394,o),
(87,350,qs),
(87,312,o),
(131,259,o),
(169,244,qs),
(206,228,o),
(241,221,qs),
(296,210,o),
(349,179,o),
(349,148,qs),
(349,106,o),
(286,59,o),
(232,59,qs),
(170,59,o),
(113,118,o),
(115,164,q),
(30,164,l),
(23,83,o),
(127,-12,o),
(220,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 42 77 0 1 1 5 97 6 1 5 5 40 5 78 0 0 0 41 0 40 34 18 45 34 18 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
anchors = (
{
name = bottom;
pos = (209,0);
},
{
name = top;
pos = (297,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(284,-12,o),
(388,33,o),
(446,113,o),
(446,164,qs),
(446,221,o),
(359,280,o),
(282,298,qs),
(231,310,o),
(183,336,o),
(183,358,qs),
(183,384,o),
(233,419,o),
(272,419,qs),
(310,419,o),
(356,383,o),
(356,353,q),
(466,353,l),
(469,425,o),
(370,508,o),
(284,508,qs),
(223,508,o),
(125,466,o),
(69,391,o),
(69,345,qs),
(69,272,o),
(156,237,qs),
(191,222,o),
(234,212,qs),
(283,201,o),
(329,174,o),
(329,149,qs),
(329,116,o),
(276,77,o),
(231,77,qs),
(179,77,o),
(127,126,o),
(128,165,q),
(15,165,l),
(11,113,o),
(57,33,o),
(151,-12,o),
(216,-12,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 4 0 4 3 114 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 42 77 0 1 1 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 42 77 0 1 1 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 41 0 40 34 18 44 34 19 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 497;
},
{
anchors = (
{
name = bottom;
pos = (205,0);
},
{
name = top;
pos = (293,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(283,-12,o),
(390,33,o),
(450,114,o),
(450,166,qs),
(450,222,o),
(364,282,o),
(283,301,qs),
(234,312,o),
(187,336,o),
(187,356,qs),
(187,379,o),
(232,410,o),
(268,410,qs),
(303,410,o),
(346,378,o),
(347,352,q),
(470,352,l),
(472,424,o),
(370,508,o),
(282,508,qs),
(218,508,o),
(117,465,o),
(60,390,o),
(60,342,qs),
(60,269,o),
(150,233,qs),
(182,219,o),
(230,207,qs),
(276,196,o),
(319,173,o),
(319,150,qs),
(319,122,o),
(271,86,o),
(230,86,qs),
(183,86,o),
(134,129,o),
(135,165,q),
(7,165,l),
(3,114,o),
(51,33,o),
(148,-12,o),
(214,-12,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 4 0 4 3 114 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 42 77 0 1 1 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 42 77 0 1 1 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 41 0 40 34 18 44 34 19 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = s;
unicode = 115;
},
{
glyphname = sacute;
kernLeft = s;
kernRight = s;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (211,0);
},
{
name = top;
pos = (344,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (146,0);
ref = acutecomb;
}
);
width = 499;
},
{
anchors = (
{
name = bottom;
pos = (216,0);
},
{
name = top;
pos = (349,747);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (155,0);
ref = acutecomb;
}
);
width = 504;
},
{
anchors = (
{
name = bottom;
pos = (209,0);
},
{
name = top;
pos = (342,750);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (142,0);
ref = acutecomb;
}
);
width = 497;
},
{
anchors = (
{
name = bottom;
pos = (205,0);
},
{
name = top;
pos = (338,751);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (136,0);
ref = acutecomb;
}
);
width = 493;
}
);
note = sacute;
unicode = 347;
},
{
glyphname = scaron;
kernLeft = s;
kernRight = s;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (211,0);
},
{
name = top;
pos = (340,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (113,0);
ref = uni030C;
}
);
width = 499;
},
{
anchors = (
{
name = bottom;
pos = (216,0);
},
{
name = top;
pos = (346,733);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (123,0);
ref = uni030C;
}
);
width = 504;
},
{
anchors = (
{
name = bottom;
pos = (209,0);
},
{
name = top;
pos = (337,728);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (110,0);
ref = uni030C;
}
);
width = 497;
},
{
anchors = (
{
name = bottom;
pos = (205,0);
},
{
name = top;
pos = (333,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (103,0);
ref = uni030C;
}
);
width = 493;
}
);
note = scaron;
unicode = 353;
},
{
glyphname = scedilla;
kernLeft = s;
kernRight = s;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (165,-261);
},
{
name = top;
pos = (299,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,-261,ls),
(260,-261,o),
(345,-194,o),
(345,-137,qs),
(345,-97,o),
(283,-55,o),
(232,-56,q),
(240,-11,l),
(332,-6,o),
(444,90,o),
(444,163,qs),
(444,221,o),
(357,280,o),
(281,297,qs),
(230,309,o),
(181,336,o),
(181,360,qs),
(181,387,o),
(233,424,o),
(274,424,qs),
(314,424,o),
(362,386,o),
(361,354,q),
(464,354,l),
(467,426,o),
(369,508,o),
(285,508,qs),
(225,508,o),
(129,466,o),
(74,392,o),
(74,346,qs),
(74,273,o),
(160,239,qs),
(193,224,o),
(236,214,qs),
(286,204,o),
(334,176,o),
(334,149,qs),
(334,114,o),
(279,73,o),
(231,73,qs),
(177,73,o),
(123,124,o),
(125,165,q),
(19,165,l),
(13,95,o),
(95,2,o),
(172,-9,q),
(153,-115,l),
(208,-115,ls),
(263,-115,o),
(263,-148,qs),
(262,-172,o),
(225,-197,o),
(194,-197,qs),
(92,-197,l),
(81,-261,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
8 1 7 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 5 6 2 6 5 114 0 2 3 6 2 3 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 100 0 6 6 4 97 0 4 4 42 77 0 3 3 7 97 0 7 7 40 7 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 100 0 6 6 4 97 0 4 4 42 77 0 3 3 7 97 0 7 7 40 7 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 5 6 2 6 5 114 0 2 3 6 2 3 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 100 0 6 6 4 97 0 4 4 42 77 0 3 3 7 97 0 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 100 0 6 6 4 97 0 4 4 42 77 0 3 3 7 97 0 7 7 40 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
56 54 17 26 34 18 44 34 20 35 32 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 499;
},
{
anchors = (
{
name = bottom;
pos = (171,-259);
},
{
name = top;
pos = (304,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(205,-259,ls),
(264,-259,o),
(344,-194,o),
(344,-140,qs),
(344,-102,o),
(282,-62,o),
(230,-63,q),
(239,-11,l),
(329,-7,o),
(437,87,o),
(437,159,qs),
(437,219,o),
(348,277,o),
(279,292,qs),
(225,305,o),
(174,335,o),
(174,363,qs),
(174,394,o),
(234,437,o),
(279,437,qs),
(325,437,o),
(376,393,o),
(374,356,q),
(458,356,l),
(462,427,o),
(368,508,o),
(288,508,qs),
(231,508,o),
(139,467,o),
(87,394,o),
(87,350,qs),
(87,312,o),
(131,259,o),
(169,244,qs),
(206,228,o),
(241,221,qs),
(296,210,o),
(349,179,o),
(349,148,qs),
(349,106,o),
(286,59,o),
(232,59,qs),
(170,59,o),
(113,118,o),
(115,164,q),
(30,164,l),
(24,92,o),
(106,-1,o),
(183,-10,q),
(165,-113,l),
(214,-113,ls),
(275,-113,o),
(275,-149,qs),
(275,-177,o),
(235,-206,o),
(198,-206,qs),
(106,-206,l),
(97,-259,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
8 1 8 7 1 76 0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 100 0 6 6 4 97 0 4 4 42 77 0 3 3 7 97 0 7 7 40 7 78 57 55 17 26 34 18 45 34 20 35 32 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
anchors = (
{
name = bottom;
pos = (162,-262);
},
{
name = top;
pos = (297,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(199,-262,ls),
(259,-262,o),
(346,-195,o),
(346,-136,qs),
(346,-95,o),
(283,-53,o),
(232,-54,q),
(240,-11,l),
(333,-5,o),
(446,91,o),
(446,164,qs),
(446,221,o),
(359,280,o),
(282,298,qs),
(231,310,o),
(183,336,o),
(183,358,qs),
(183,384,o),
(233,419,o),
(272,419,qs),
(310,419,o),
(356,383,o),
(356,353,q),
(466,353,l),
(469,425,o),
(370,508,o),
(284,508,qs),
(223,508,o),
(125,466,o),
(69,391,o),
(69,345,qs),
(69,272,o),
(156,237,qs),
(191,222,o),
(234,212,qs),
(283,201,o),
(329,174,o),
(329,149,qs),
(329,116,o),
(276,77,o),
(231,77,qs),
(179,77,o),
(127,126,o),
(128,165,q),
(15,165,l),
(9,96,o),
(91,3,o),
(168,-9,q),
(149,-116,l),
(206,-116,ls),
(259,-116,o),
(259,-148,qs),
(258,-171,o),
(222,-195,o),
(192,-195,qs),
(87,-195,l),
(75,-262,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 8 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 5 6 2 6 5 114 0 2 3 6 2 3 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 100 0 6 6 4 97 0 4 4 42 77 0 3 3 7 97 0 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 100 0 6 6 4 97 0 4 4 42 77 0 3 3 7 97 0 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
56 54 17 26 34 18 44 34 20 35 32 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 497;
},
{
anchors = (
{
name = bottom;
pos = (158,-263);
},
{
name = top;
pos = (293,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(195,-263,ls),
(256,-263,o),
(346,-195,o),
(346,-134,qs),
(346,-92,o),
(282,-48,o),
(233,-50,q),
(240,-11,l),
(302,-7,o),
(398,40,o),
(450,118,o),
(450,166,qs),
(450,222,o),
(364,282,o),
(283,301,qs),
(234,312,o),
(187,336,o),
(187,356,qs),
(187,379,o),
(232,410,o),
(268,410,qs),
(303,410,o),
(346,378,o),
(347,352,q),
(470,352,l),
(472,424,o),
(370,508,o),
(282,508,qs),
(218,508,o),
(117,465,o),
(60,390,o),
(60,342,qs),
(60,269,o),
(150,233,qs),
(182,219,o),
(230,207,qs),
(276,196,o),
(319,173,o),
(319,150,qs),
(319,122,o),
(271,86,o),
(230,86,qs),
(183,86,o),
(134,129,o),
(135,165,q),
(7,165,l),
(2,99,o),
(85,5,o),
(161,-8,q),
(141,-118,l),
(202,-118,ls),
(250,-118,o),
(250,-147,qs),
(249,-168,o),
(215,-189,o),
(189,-189,qs),
(77,-189,l),
(64,-263,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 7 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 5 6 2 6 5 114 0 2 3 6 2 3 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 100 0 6 6 4 97 0 4 4 42 77 0 3 3 7 97 0 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 100 0 6 6 4 97 0 4 4 42 77 0 3 3 7 97 0 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
57 55 17 27 34 18 44 34 20 35 32 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = scedilla;
unicode = 351;
},
{
glyphname = germandbls;
kernRight = germandbls;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(468,-10,o),
(569,38,o),
(625,122,o),
(625,176,qs),
(625,228,o),
(572,292,o),
(512,314,qs),
(462,332,o),
(416,359,o),
(416,380,qs),
(416,398,o),
(446,426,o),
(480,447,qs),
(508,464,o),
(526,477,qs),
(554,498,o),
(585,551,o),
(585,587,qs),
(585,627,o),
(537,694,o),
(446,732,o),
(384,732,qs),
(266,732,o),
(122,612,o),
(105,515,qs),
(13,0,l),
(119,0,l),
(209,506,ls),
(221,572,o),
(300,643,o),
(369,643,qs),
(420,643,o),
(476,604,o),
(476,570,qs),
(476,545,o),
(448,507,o),
(416,484,o),
(371,455,qs),
(306,413,o),
(306,358,qs),
(306,319,o),
(366,267,o),
(435,242,qs),
(480,226,o),
(518,190,o),
(518,164,qs),
(518,122,o),
(461,71,o),
(414,71,qs),
(372,71,o),
(323,118,o),
(323,158,qs),
(324,172,l),
(221,172,l),
(215,89,o),
(313,-10,o),
(403,-10,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
4 1 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 2 1 1 0 114 0 2 2 4 97 0 4 4 41 77 0 1 1 3 98 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 1 1 3 98 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 3 3 34 77 0 1 1 5 98 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 2 1 2 0 1 128 0 4 0 2 0 4 2 105 0 3 3 34 77 0 1 1 5 98 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 56 0 55 35 33 30 29 26 24 35 18 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 670;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(458,-10,o),
(555,36,o),
(610,119,o),
(610,172,qs),
(610,223,o),
(558,286,o),
(499,307,qs),
(454,322,o),
(398,352,o),
(398,377,qs),
(398,396,o),
(432,427,o),
(468,448,qs),
(514,478,ls),
(544,500,o),
(577,554,o),
(577,593,qs),
(577,653,o),
(477,732,o),
(387,732,qs),
(277,732,o),
(137,616,o),
(120,520,qs),
(27,0,l),
(111,0,l),
(202,512,ls),
(214,583,o),
(300,661,o),
(374,661,qs),
(429,661,o),
(491,618,o),
(491,581,qs),
(491,554,o),
(463,514,o),
(423,485,o),
(385,463,qs),
(348,441,o),
(311,392,o),
(311,360,qs),
(311,321,o),
(370,270,o),
(438,246,qs),
(484,229,o),
(524,191,o),
(524,163,qs),
(524,115,o),
(459,56,o),
(407,56,qs),
(359,56,o),
(306,108,o),
(306,153,qs),
(306,164,o),
(307,169,q),
(223,169,l),
(216,88,o),
(310,-10,o),
(397,-10,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 1 1 3 97 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 2 1 2 0 1 128 0 4 0 2 0 4 2 105 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 56 0 55 37 35 32 31 28 26 36 18 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 669;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(471,-10,o),
(573,38,o),
(629,123,o),
(629,177,qs),
(629,230,o),
(576,294,o),
(516,316,qs),
(465,335,o),
(421,361,o),
(421,380,qs),
(421,398,o),
(451,426,o),
(484,446,qs),
(513,463,o),
(529,476,qs),
(588,521,o),
(588,584,qs),
(588,625,o),
(539,693,o),
(446,732,o),
(383,732,qs),
(262,732,o),
(117,610,o),
(99,513,qs),
(8,0,l),
(122,0,l),
(211,503,ls),
(235,637,o),
(367,637,qs),
(417,637,o),
(471,599,o),
(471,566,qs),
(471,535,o),
(429,492,o),
(384,463,qs),
(366,452,ls),
(336,433,o),
(304,387,o),
(304,357,qs),
(304,318,o),
(365,266,o),
(434,241,qs),
(478,225,o),
(515,189,o),
(515,164,qs),
(515,124,o),
(460,75,o),
(416,75,qs),
(371,75,o),
(325,128,o),
(329,173,q),
(220,173,l),
(214,89,o),
(313,-10,o),
(405,-10,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 2 1 1 0 114 0 2 2 4 97 0 4 4 41 77 0 1 1 3 98 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 1 1 3 98 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 3 3 34 77 0 1 1 5 98 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 2 1 2 0 1 128 0 4 0 2 0 4 2 105 0 3 3 34 77 0 1 1 5 98 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 54 0 53 34 32 29 28 26 24 34 18 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 670;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(477,-10,o),
(582,39,o),
(639,126,o),
(639,180,qs),
(639,233,o),
(586,298,o),
(525,321,qs),
(472,341,o),
(433,365,o),
(433,382,qs),
(433,399,o),
(461,424,o),
(492,445,qs),
(522,463,o),
(537,475,qs),
(593,518,o),
(593,580,qs),
(593,622,o),
(541,692,o),
(445,732,o),
(381,732,qs),
(255,732,o),
(107,607,o),
(89,509,qs),
(-1,0,l),
(127,0,l),
(215,499,ls),
(239,625,o),
(363,625,qs),
(410,625,o),
(461,590,o),
(461,559,qs),
(461,531,o),
(422,491,o),
(381,464,qs),
(357,447,ls),
(330,428,o),
(301,384,o),
(301,355,qs),
(301,316,o),
(362,264,o),
(432,238,qs),
(476,222,o),
(511,189,o),
(511,165,qs),
(511,128,o),
(461,85,o),
(420,85,qs),
(379,85,o),
(337,133,o),
(340,175,q),
(219,175,l),
(213,90,o),
(314,-10,o),
(409,-10,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 2 1 1 0 114 0 2 2 4 97 0 4 4 41 77 0 1 1 3 98 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 1 1 3 98 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 3 3 34 77 0 1 1 5 98 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 2 1 2 0 1 128 0 4 0 2 0 4 2 105 0 3 3 34 77 0 1 1 5 98 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 54 0 53 34 32 29 28 26 24 34 18 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 670;
}
);
note = germandbls;
unicode = 223;
},
{
glyphname = t;
kernLeft = t;
kernRight = t;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (170,0);
},
{
name = top;
pos = (230,496);
},
{
name = topright;
pos = (366,992);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(293,0,l),
(309,91,l),
(243,91,ls),
(209,91,o),
(179,113,o),
(179,140,qs),
(181,164,l),
(225,407,l),
(364,407,l),
(381,496,l),
(240,496,l),
(262,616,l),
(155,616,l),
(134,496,l),
(55,496,l),
(39,407,l),
(118,407,l),
(75,164,ls),
(70,136,o),
(70,117,qs),
(70,55,o),
(142,0,o),
(210,0,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 5 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 1 1 2 112 4 1 0 0 1 95 3 1 1 1 36 77 0 5 5 6 95 7 1 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 1 2 133 4 1 0 0 1 95 3 1 1 1 36 77 0 5 5 6 95 7 1 6 6 34 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 22 0 21 36 17 17 17 17 21 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 371;
},
{
anchors = (
{
name = bottom;
pos = (160,0);
},
{
name = top;
pos = (229,496);
},
{
name = topright;
pos = (349,992);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(283,0,l),
(296,72,l),
(231,72,ls),
(193,72,o),
(161,96,o),
(161,126,qs),
(163,154,l),
(212,425,l),
(358,425,l),
(371,496,l),
(224,496,l),
(246,615,l),
(161,615,l),
(140,496,l),
(63,496,l),
(50,425,l),
(127,425,l),
(79,154,ls),
(75,131,o),
(75,108,qs),
(75,51,o),
(140,0,o),
(205,0,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 5 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 1 1 2 112 4 1 0 0 1 95 3 1 1 1 36 77 0 5 5 6 95 7 1 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 1 2 133 4 1 0 0 1 95 3 1 1 1 36 77 0 5 5 6 95 7 1 6 6 34 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 22 0 21 36 17 17 17 17 21 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 370;
},
{
anchors = (
{
name = bottom;
pos = (173,0);
},
{
name = top;
pos = (230,496);
},
{
name = topright;
pos = (372,992);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(296,0,l),
(313,97,l),
(246,97,ls),
(213,97,o),
(184,118,o),
(184,144,qs),
(186,167,l),
(229,401,l),
(366,401,l),
(384,496,l),
(245,496,l),
(267,616,l),
(152,616,l),
(131,496,l),
(52,496,l),
(35,401,l),
(114,401,l),
(73,167,ls),
(68,139,o),
(68,119,qs),
(68,56,o),
(142,0,o),
(211,0,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 5 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 1 1 2 112 4 1 0 0 1 95 3 1 1 1 36 77 0 5 5 6 95 7 1 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 1 2 133 4 1 0 0 1 95 3 1 1 1 36 77 0 5 5 6 95 7 1 6 6 34 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 22 0 21 36 17 17 17 17 21 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 371;
},
{
anchors = (
{
name = bottom;
pos = (179,0);
},
{
name = top;
pos = (230,496);
},
{
name = topright;
pos = (383,992);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(302,0,l),
(322,109,l),
(254,109,ls),
(223,109,o),
(196,129,o),
(196,153,qs),
(196,159,o),
(198,173,qs),
(237,389,l),
(370,389,l),
(390,496,l),
(255,496,l),
(277,617,l),
(148,617,l),
(127,496,l),
(47,496,l),
(28,389,l),
(108,389,l),
(70,174,ls),
(65,144,o),
(65,125,qs),
(65,59,o),
(142,0,o),
(214,0,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 1 1 2 112 4 1 0 0 1 95 3 1 1 1 36 77 0 5 5 6 95 7 1 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 1 2 133 4 1 0 0 1 95 3 1 1 1 36 77 0 5 5 6 95 7 1 6 6 34 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 23 0 22 37 17 17 17 17 21 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 372;
}
);
note = t;
unicode = 116;
},
{
glyphname = tcaron;
kernLeft = t;
kernRight = t;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (170,0);
},
{
name = top;
pos = (230,496);
},
{
name = topright;
pos = (366,992);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (234,0);
ref = uni030C.alt;
}
);
width = 371;
},
{
anchors = (
{
name = bottom;
pos = (160,0);
},
{
name = top;
pos = (229,496);
},
{
name = topright;
pos = (349,992);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (217,0);
ref = uni030C.alt;
}
);
width = 370;
},
{
anchors = (
{
name = bottom;
pos = (173,0);
},
{
name = top;
pos = (230,496);
},
{
name = topright;
pos = (372,992);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (240,0);
ref = uni030C.alt;
}
);
width = 371;
},
{
anchors = (
{
name = bottom;
pos = (179,0);
},
{
name = top;
pos = (230,496);
},
{
name = topright;
pos = (383,992);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (251,0);
ref = uni030C.alt;
}
);
width = 372;
}
);
note = tcaron;
unicode = 357;
},
{
glyphname = u;
kernLeft = u;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (470,0);
},
{
name = top;
pos = (330,496);
},
{
name = topright;
pos = (600,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,-12,o),
(350,40,o),
(382,86,q),
(376,0,l),
(470,0,l),
(557,496,l),
(451,496,l),
(405,233,ls),
(393,161,o),
(301,78,o),
(242,78,qs),
(145,78,o),
(145,177,qs),
(145,194,o),
(149,222,qs),
(198,496,l),
(92,496,l),
(41,211,ls),
(35,180,o),
(35,151,qs),
(35,73,o),
(120,-12,o),
(196,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
2 1 0 0 36 77 0 1 1 3 98 5 4 2 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 36 77 0 3 3 34 77 0 1 1 4 98 5 1 4 4 40 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 22 0 21 17 19 36 21 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (460,0);
},
{
name = top;
pos = (331,496);
},
{
name = topright;
pos = (597,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(262,-12,o),
(362,42,o),
(394,90,q),
(384,0,l),
(460,0,l),
(547,496,l),
(463,496,l),
(416,230,ls),
(402,150,o),
(302,60,o),
(237,60,qs),
(132,60,o),
(132,167,qs),
(132,187,o),
(137,215,qs),
(186,496,l),
(102,496,l),
(51,206,ls),
(45,176,o),
(45,148,qs),
(45,71,o),
(130,-12,o),
(205,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
2 1 0 0 36 77 0 1 1 3 98 5 4 2 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 36 77 0 3 3 34 77 0 1 1 4 98 5 1 4 4 40 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 22 0 21 17 19 36 21 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (473,0);
},
{
name = top;
pos = (330,496);
},
{
name = topright;
pos = (601,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(250,-12,o),
(346,39,o),
(378,85,q),
(373,0,l),
(473,0,l),
(560,496,l),
(447,496,l),
(401,234,ls),
(389,164,o),
(301,84,o),
(243,84,qs),
(149,84,o),
(149,180,qs),
(149,198,o),
(153,224,qs),
(201,496,l),
(88,496,l),
(38,213,ls),
(32,180,o),
(32,151,qs),
(32,73,o),
(116,-12,o),
(193,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
2 1 0 0 36 77 0 1 1 3 98 5 4 2 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 36 77 0 3 3 34 77 0 1 1 4 98 5 1 4 4 40 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 22 0 21 17 19 36 21 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (480,0);
},
{
name = top;
pos = (329,496);
},
{
name = topright;
pos = (603,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(243,-12,o),
(338,38,o),
(370,82,q),
(367,0,l),
(480,0,l),
(567,496,l),
(439,496,l),
(393,236,ls),
(382,172,o),
(300,96,o),
(246,96,qs),
(157,96,o),
(157,186,qs),
(157,208,o),
(161,228,qs),
(209,496,l),
(81,496,l),
(31,216,ls),
(25,182,o),
(25,153,qs),
(25,73,o),
(109,-12,o),
(187,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
2 1 0 0 36 77 0 1 1 3 98 5 4 2 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 36 77 0 3 3 34 77 0 1 1 4 98 5 1 4 4 40 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 22 0 21 17 19 36 21 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 569;
}
);
note = u;
unicode = 117;
},
{
glyphname = uacute;
kernLeft = u;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (470,0);
},
{
name = top;
pos = (375,749);
},
{
name = topright;
pos = (600,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (177,0);
ref = acutecomb;
}
);
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (460,0);
},
{
name = top;
pos = (376,747);
},
{
name = topright;
pos = (597,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (182,0);
ref = acutecomb;
}
);
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (473,0);
},
{
name = top;
pos = (375,750);
},
{
name = topright;
pos = (601,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (175,0);
ref = acutecomb;
}
);
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (480,0);
},
{
name = top;
pos = (374,751);
},
{
name = topright;
pos = (603,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (172,0);
ref = acutecomb;
}
);
width = 569;
}
);
note = uacute;
unicode = 250;
},
{
glyphname = ubreve;
kernLeft = u;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (470,0);
},
{
name = top;
pos = (370,722);
},
{
name = topright;
pos = (600,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (138,0);
ref = uni0306;
}
);
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (460,0);
},
{
name = top;
pos = (373,732);
},
{
name = topright;
pos = (597,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (146,0);
ref = uni0306;
}
);
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (473,0);
},
{
name = top;
pos = (369,719);
},
{
name = topright;
pos = (601,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (135,0);
ref = uni0306;
}
);
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (480,0);
},
{
name = top;
pos = (367,712);
},
{
name = topright;
pos = (603,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (129,0);
ref = uni0306;
}
);
width = 569;
}
);
note = ubreve;
unicode = 365;
},
{
glyphname = ucircumflex;
kernLeft = u;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (470,0);
},
{
name = top;
pos = (371,730);
},
{
name = topright;
pos = (600,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (145,0);
ref = uni0302;
}
);
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (460,0);
},
{
name = top;
pos = (373,733);
},
{
name = topright;
pos = (597,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (150,0);
ref = uni0302;
}
);
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (473,0);
},
{
name = top;
pos = (370,728);
},
{
name = topright;
pos = (601,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (143,0);
ref = uni0302;
}
);
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (480,0);
},
{
name = top;
pos = (369,726);
},
{
name = topright;
pos = (603,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (139,0);
ref = uni0302;
}
);
width = 569;
}
);
note = ucircumflex;
unicode = 251;
},
{
glyphname = udieresis;
kernLeft = u;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (470,0);
},
{
name = top;
pos = (370,723);
},
{
name = topright;
pos = (600,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (115,0);
ref = uni0308;
}
);
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (460,0);
},
{
name = top;
pos = (370,720);
},
{
name = topright;
pos = (597,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (139,0);
ref = uni0308;
}
);
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (473,0);
},
{
name = top;
pos = (370,724);
},
{
name = topright;
pos = (601,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (106,0);
ref = uni0308;
}
);
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (480,0);
},
{
name = top;
pos = (370,726);
},
{
name = topright;
pos = (603,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (90,0);
ref = uni0308;
}
);
width = 569;
}
);
note = udieresis;
unicode = 252;
},
{
glyphname = ugrave;
kernLeft = u;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (470,0);
},
{
name = top;
pos = (375,749);
},
{
name = topright;
pos = (600,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (178,0);
ref = gravecomb;
}
);
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (460,0);
},
{
name = top;
pos = (376,747);
},
{
name = topright;
pos = (597,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (183,0);
ref = gravecomb;
}
);
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (473,0);
},
{
name = top;
pos = (375,750);
},
{
name = topright;
pos = (601,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (176,0);
ref = gravecomb;
}
);
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (480,0);
},
{
name = top;
pos = (374,751);
},
{
name = topright;
pos = (603,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (172,0);
ref = gravecomb;
}
);
width = 569;
}
);
note = ugrave;
unicode = 249;
},
{
glyphname = uhungarumlaut;
kernLeft = u;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (470,0);
},
{
name = top;
pos = (368,711);
},
{
name = topright;
pos = (600,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (154,0);
ref = uni030B;
}
);
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (460,0);
},
{
name = top;
pos = (366,698);
},
{
name = topright;
pos = (597,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (171,0);
ref = uni030B;
}
);
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (473,0);
},
{
name = top;
pos = (368,715);
},
{
name = topright;
pos = (601,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (148,0);
ref = uni030B;
}
);
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (480,0);
},
{
name = top;
pos = (369,723);
},
{
name = topright;
pos = (603,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (137,0);
ref = uni030B;
}
);
width = 569;
}
);
note = uhungarumlaut;
unicode = 369;
},
{
glyphname = umacron;
kernLeft = u;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (470,0);
},
{
name = top;
pos = (358,693);
},
{
name = topright;
pos = (600,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (98,0);
ref = uni0304;
}
);
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (460,0);
},
{
name = top;
pos = (360,695);
},
{
name = topright;
pos = (597,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (106,0);
ref = uni0304;
}
);
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (473,0);
},
{
name = top;
pos = (357,692);
},
{
name = topright;
pos = (601,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (95,0);
ref = uni0304;
}
);
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (480,0);
},
{
name = top;
pos = (355,690);
},
{
name = topright;
pos = (603,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (90,0);
ref = uni0304;
}
);
width = 569;
}
);
note = umacron;
unicode = 363;
},
{
glyphname = uni0123;
kernLeft = g;
kernRight = g;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (159,-310);
},
{
name = top;
pos = (347,804);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (191,0);
ref = uni0312;
}
);
width = 526;
},
{
anchors = (
{
name = bottom;
pos = (167,-310);
},
{
name = top;
pos = (351,783);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (205,0);
ref = uni0312;
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (156,-310);
},
{
name = top;
pos = (345,810);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (186,0);
ref = uni0312;
}
);
width = 523;
},
{
anchors = (
{
name = bottom;
pos = (150,-310);
},
{
name = top;
pos = (342,824);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (176,0);
ref = uni0312;
}
);
width = 517;
}
);
note = uni0123;
unicode = 291;
},
{
glyphname = uni0137;
kernRight = k;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (166,-256);
},
{
name = top;
pos = (386,992);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = k;
},
{
alignment = -1;
pos = (199,0);
ref = uni0326;
}
);
width = 509;
},
{
anchors = (
{
name = bottom;
pos = (170,-238);
},
{
name = top;
pos = (387,992);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = k;
},
{
alignment = -1;
pos = (207,0);
ref = uni0326;
}
);
width = 512;
},
{
anchors = (
{
name = bottom;
pos = (164,-262);
},
{
name = top;
pos = (385,992);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = k;
},
{
alignment = -1;
pos = (196,0);
ref = uni0326;
}
);
width = 508;
},
{
anchors = (
{
name = bottom;
pos = (161,-274);
},
{
name = top;
pos = (384,992);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = k;
},
{
alignment = -1;
pos = (191,0);
ref = uni0326;
}
);
width = 506;
}
);
note = uni0137;
unicode = 311;
},
{
glyphname = uni013C;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (22,-256);
},
{
name = top;
pos = (190,700);
},
{
name = topright;
pos = (338,992);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (56,0);
ref = uni0326;
}
);
width = 222;
},
{
anchors = (
{
name = bottom;
pos = (26,-238);
},
{
name = top;
pos = (190,700);
},
{
name = topright;
pos = (334,992);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (63,0);
ref = uni0326;
}
);
width = 223;
},
{
anchors = (
{
name = bottom;
pos = (21,-262);
},
{
name = top;
pos = (190,700);
},
{
name = topright;
pos = (339,992);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (53,0);
ref = uni0326;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (18,-274);
},
{
name = top;
pos = (190,700);
},
{
name = topright;
pos = (341,992);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (48,0);
ref = uni0326;
}
);
width = 220;
}
);
note = uni013C;
unicode = 316;
},
{
glyphname = uni0146;
kernLeft = dotlessi;
kernRight = a;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (197,-256);
},
{
name = top;
pos = (330,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (231,0);
ref = uni0326;
}
);
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (201,-238);
},
{
name = top;
pos = (331,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (238,0);
ref = uni0326;
}
);
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (196,-262);
},
{
name = top;
pos = (330,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (228,0);
ref = uni0326;
}
);
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (193,-274);
},
{
name = top;
pos = (329,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (223,0);
ref = uni0326;
}
);
width = 569;
}
);
note = uni0146;
unicode = 326;
},
{
glyphname = uni0157;
kernLeft = dotlessi;
kernRight = r;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (28,-256);
},
{
name = top;
pos = (228,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (61,0);
ref = uni0326;
}
);
width = 366;
},
{
anchors = (
{
name = bottom;
pos = (29,-238);
},
{
name = top;
pos = (229,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (66,0);
ref = uni0326;
}
);
width = 369;
},
{
anchors = (
{
name = bottom;
pos = (27,-262);
},
{
name = top;
pos = (227,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (59,0);
ref = uni0326;
}
);
width = 365;
},
{
anchors = (
{
name = bottom;
pos = (26,-274);
},
{
name = top;
pos = (226,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (56,0);
ref = uni0326;
}
);
width = 363;
}
);
note = uni0157;
unicode = 343;
},
{
glyphname = uni0163;
kernLeft = t;
kernRight = t;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (124,-261);
},
{
name = top;
pos = (230,496);
},
{
name = topright;
pos = (366,992);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(293,0,l),
(309,91,l),
(243,91,ls),
(209,91,o),
(179,113,o),
(179,140,qs),
(181,164,l),
(225,407,l),
(364,407,l),
(381,496,l),
(240,496,l),
(262,616,l),
(155,616,l),
(134,496,l),
(55,496,l),
(39,407,l),
(118,407,l),
(75,164,ls),
(70,136,o),
(70,117,qs),
(70,36,o),
(135,11,q),
(112,-115,l),
(167,-115,ls),
(222,-115,o),
(222,-148,qs),
(221,-172,o),
(184,-197,o),
(153,-197,qs),
(51,-197,l),
(40,-261,l),
(159,-261,ls),
(219,-261,o),
(304,-194,o),
(304,-137,qs),
(304,-97,o),
(242,-55,o),
(191,-56,q),
(201,0,l),
(210,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
33 1 9 4 17 1 10 9 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 5 5 6 112 0 0 0 3 2 0 3 105 0 2 0 1 2 1 99 8 1 4 4 5 95 7 1 5 5 36 77 0 9 9 10 95 11 1 10 10 34 10 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 5 6 133 0 0 0 3 2 0 3 105 0 2 0 1 2 1 99 8 1 4 4 5 95 7 1 5 5 36 77 0 9 9 10 95 11 1 10 10 34 10 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
0 0 0 39 0 38 37 35 17 17 17 17 22 35 33 36 17 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 371;
},
{
anchors = (
{
name = bottom;
pos = (115,-259);
},
{
name = top;
pos = (229,496);
},
{
name = topright;
pos = (349,992);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(283,0,l),
(296,72,l),
(231,72,ls),
(193,72,o),
(161,96,o),
(161,126,qs),
(163,154,l),
(212,425,l),
(358,425,l),
(371,496,l),
(224,496,l),
(246,615,l),
(161,615,l),
(140,496,l),
(63,496,l),
(50,425,l),
(127,425,l),
(79,154,ls),
(75,131,o),
(75,108,qs),
(75,35,o),
(131,12,q),
(109,-113,l),
(158,-113,ls),
(219,-113,o),
(219,-149,qs),
(219,-177,o),
(179,-206,o),
(142,-206,qs),
(50,-206,l),
(41,-259,l),
(149,-259,ls),
(208,-259,o),
(288,-194,o),
(288,-140,qs),
(288,-102,o),
(226,-62,o),
(174,-63,q),
(185,1,l),
(205,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
33 1 9 4 17 1 10 9 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 5 5 6 112 0 0 0 3 2 0 3 105 0 2 0 1 2 1 99 8 1 4 4 5 95 7 1 5 5 36 77 0 9 9 10 95 11 1 10 10 34 10 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 5 6 133 0 0 0 3 2 0 3 105 0 2 0 1 2 1 99 8 1 4 4 5 95 7 1 5 5 36 77 0 9 9 10 95 11 1 10 10 34 10 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
0 0 0 39 0 38 37 35 17 17 17 17 22 35 33 36 17 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 370;
},
{
anchors = (
{
name = bottom;
pos = (126,-262);
},
{
name = top;
pos = (230,496);
},
{
name = topright;
pos = (372,992);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(296,0,l),
(313,97,l),
(246,97,ls),
(213,97,o),
(184,118,o),
(184,144,qs),
(186,167,l),
(229,401,l),
(366,401,l),
(384,496,l),
(245,496,l),
(267,616,l),
(152,616,l),
(131,496,l),
(52,496,l),
(35,401,l),
(114,401,l),
(73,167,ls),
(68,139,o),
(68,119,qs),
(68,36,o),
(136,11,q),
(113,-116,l),
(170,-116,ls),
(223,-116,o),
(223,-148,qs),
(222,-171,o),
(186,-195,o),
(156,-195,qs),
(51,-195,l),
(39,-262,l),
(163,-262,ls),
(223,-262,o),
(310,-195,o),
(310,-136,qs),
(310,-95,o),
(247,-53,o),
(196,-54,q),
(206,0,l),
(211,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
33 1 9 4 17 1 10 9 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 5 5 6 112 0 0 0 3 2 0 3 105 0 2 0 1 2 1 99 8 1 4 4 5 95 7 1 5 5 36 77 0 9 9 10 95 0 10 10 34 10 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 6 5 6 133 0 0 0 3 2 0 3 105 0 2 0 1 2 1 99 8 1 4 4 5 95 7 1 5 5 36 77 0 9 9 10 95 0 10 10 34 10 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
39 38 37 35 17 17 17 17 22 35 33 36 17 11 8 31
CALL[ ]	/* CallFunction */";
};
width = 371;
},
{
anchors = (
{
name = bottom;
pos = (132,-263);
},
{
name = top;
pos = (230,496);
},
{
name = topright;
pos = (383,992);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(169,-263,ls),
(230,-263,o),
(320,-195,o),
(320,-134,qs),
(320,-92,o),
(256,-48,o),
(207,-50,q),
(216,0,l),
(302,0,l),
(322,109,l),
(254,109,ls),
(223,109,o),
(196,129,o),
(196,153,qs),
(196,159,o),
(198,173,qs),
(237,389,l),
(370,389,l),
(390,496,l),
(255,496,l),
(277,617,l),
(148,617,l),
(127,496,l),
(47,496,l),
(28,389,l),
(108,389,l),
(70,174,ls),
(65,144,o),
(65,125,qs),
(65,36,o),
(138,11,q),
(115,-118,l),
(176,-118,ls),
(224,-118,o),
(224,-147,qs),
(223,-168,o),
(189,-189,o),
(163,-189,qs),
(51,-189,l),
(38,-263,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 8 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 4 3 3 4 112 0 9 0 1 0 9 1 105 0 0 0 10 0 10 99 6 1 2 2 3 95 5 1 3 3 36 77 0 7 7 8 95 0 8 8 34 8 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 3 4 133 0 9 0 1 0 9 1 105 0 0 0 10 0 10 99 6 1 2 2 3 95 5 1 3 3 36 77 0 7 7 8 95 0 8 8 34 8 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
39 37 33 32 17 37 17 17 17 17 22 35 32 11 8 31
CALL[ ]	/* CallFunction */";
};
width = 372;
}
);
note = uni0163;
unicode = 355;
},
{
glyphname = uni01CE;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (490,0);
},
{
name = top;
pos = (363,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (137,0);
ref = uni030C;
}
);
width = 528;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (492,0);
},
{
name = top;
pos = (368,733);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (145,0);
ref = uni030C;
}
);
width = 539;
},
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = ogonek;
pos = (489,0);
},
{
name = top;
pos = (361,728);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (134,0);
ref = uni030C;
}
);
width = 524;
},
{
anchors = (
{
name = bottom;
pos = (230,0);
},
{
name = ogonek;
pos = (488,0);
},
{
name = top;
pos = (358,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (128,0);
ref = uni030C;
}
);
width = 516;
}
);
note = uni01CE;
unicode = 462;
},
{
glyphname = uni0219;
kernLeft = s;
kernRight = s;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (166,-256);
},
{
name = top;
pos = (299,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (199,0);
ref = uni0326;
}
);
width = 499;
},
{
anchors = (
{
name = bottom;
pos = (174,-238);
},
{
name = top;
pos = (304,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (211,0);
ref = uni0326;
}
);
width = 504;
},
{
anchors = (
{
name = bottom;
pos = (163,-262);
},
{
name = top;
pos = (297,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (195,0);
ref = uni0326;
}
);
width = 497;
},
{
anchors = (
{
name = bottom;
pos = (157,-274);
},
{
name = top;
pos = (293,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (187,0);
ref = uni0326;
}
);
width = 493;
}
);
note = uni0219;
unicode = 537;
},
{
glyphname = uni021B;
kernLeft = t;
kernRight = t;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (125,-256);
},
{
name = top;
pos = (230,496);
},
{
name = topright;
pos = (366,992);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (158,0);
ref = uni0326;
}
);
width = 371;
},
{
anchors = (
{
name = bottom;
pos = (118,-238);
},
{
name = top;
pos = (229,496);
},
{
name = topright;
pos = (349,992);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (155,0);
ref = uni0326;
}
);
width = 370;
},
{
anchors = (
{
name = bottom;
pos = (127,-262);
},
{
name = top;
pos = (230,496);
},
{
name = topright;
pos = (372,992);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (159,0);
ref = uni0326;
}
);
width = 371;
},
{
anchors = (
{
name = bottom;
pos = (131,-274);
},
{
name = top;
pos = (230,496);
},
{
name = topright;
pos = (383,992);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (161,0);
ref = uni0326;
}
);
width = 372;
}
);
note = uni021B;
unicode = 539;
},
{
glyphname = uni1EBD;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (237,0);
},
{
name = ogonek;
pos = (353,10);
},
{
name = top;
pos = (362,705);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (118,0);
ref = tildecomb;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (240,0);
},
{
name = ogonek;
pos = (355,10);
},
{
name = top;
pos = (365,705);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (133,0);
ref = tildecomb;
}
);
width = 568;
},
{
anchors = (
{
name = bottom;
pos = (236,0);
},
{
name = ogonek;
pos = (352,10);
},
{
name = top;
pos = (361,704);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (112,0);
ref = tildecomb;
}
);
width = 560;
},
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = ogonek;
pos = (350,10);
},
{
name = top;
pos = (359,704);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (102,0);
ref = tildecomb;
}
);
width = 556;
}
);
note = uni1EBD;
unicode = 7869;
},
{
glyphname = uni1EF9;
kernLeft = y;
kernRight = y;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = top;
pos = (358,705);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (114,0);
ref = tildecomb;
}
);
width = 554;
},
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = top;
pos = (359,705);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (127,0);
ref = tildecomb;
}
);
width = 555;
},
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = top;
pos = (358,704);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (109,0);
ref = tildecomb;
}
);
width = 553;
},
{
anchors = (
{
name = bottom;
pos = (232,0);
},
{
name = top;
pos = (357,704);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (100,0);
ref = tildecomb;
}
);
width = 552;
}
);
note = uni1EF9;
unicode = 7929;
},
{
glyphname = uogonek;
kernLeft = u;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (470,0);
},
{
name = top;
pos = (330,496);
},
{
name = topright;
pos = (600,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,-12,o),
(350,40,o),
(382,86,q),
(377,20,l),
(307,-12,o),
(247,-83,o),
(247,-126,qs),
(247,-165,o),
(308,-206,o),
(357,-206,qs),
(397,-206,o),
(441,-193,q),
(452,-127,l),
(413,-142,o),
(381,-142,qs),
(358,-142,o),
(332,-122,o),
(332,-105,qs),
(332,-83,o),
(368,-46,o),
(411,-27,qs),
(470,0,l),
(557,496,l),
(451,496,l),
(405,233,ls),
(393,161,o),
(301,78,o),
(242,78,qs),
(145,78,o),
(145,177,qs),
(145,194,o),
(149,222,qs),
(198,496,l),
(92,496,l),
(41,211,ls),
(35,180,o),
(35,151,qs),
(35,73,o),
(120,-12,o),
(196,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 1 1 0 26 1 3 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
2 1 0 0 36 77 0 1 1 5 98 6 1 5 5 40 77 0 3 3 4 97 0 4 4 38 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 4 3 4 101 2 1 0 0 36 77 0 1 1 5 98 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 39 0 38 35 39 19 36 21 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (460,0);
},
{
name = top;
pos = (331,496);
},
{
name = topright;
pos = (597,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(262,-12,o),
(362,42,o),
(394,90,q),
(386,18,l),
(312,-12,o),
(249,-84,o),
(249,-127,qs),
(249,-164,o),
(307,-203,o),
(352,-203,qs),
(391,-203,o),
(430,-190,q),
(439,-134,l),
(403,-149,o),
(372,-149,qs),
(348,-149,o),
(319,-128,o),
(319,-109,qs),
(319,-63,o),
(397,-28,qs),
(460,0,l),
(547,496,l),
(463,496,l),
(416,230,ls),
(402,150,o),
(302,60,o),
(237,60,qs),
(132,60,o),
(132,167,qs),
(132,187,o),
(137,215,qs),
(186,496,l),
(102,496,l),
(51,206,ls),
(45,176,o),
(45,148,qs),
(45,71,o),
(130,-12,o),
(205,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
35 1 1 0 25 1 3 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
2 1 0 0 36 77 0 1 1 5 98 6 1 5 5 40 77 0 3 3 4 97 0 4 4 38 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 4 3 4 101 2 1 0 0 36 77 0 1 1 5 98 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 38 0 37 35 38 19 36 21 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (473,0);
},
{
name = top;
pos = (330,496);
},
{
name = topright;
pos = (601,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(250,-12,o),
(346,39,o),
(378,85,q),
(374,20,l),
(304,-12,o),
(246,-83,o),
(246,-126,qs),
(246,-166,o),
(309,-208,o),
(358,-208,qs),
(397,-208,o),
(444,-194,q),
(455,-125,l),
(416,-140,o),
(384,-140,qs),
(362,-140,o),
(336,-121,o),
(336,-104,qs),
(336,-82,o),
(372,-46,o),
(415,-27,qs),
(473,0,l),
(560,496,l),
(447,496,l),
(401,234,ls),
(389,164,o),
(301,84,o),
(243,84,qs),
(149,84,o),
(149,180,qs),
(149,198,o),
(153,224,qs),
(201,496,l),
(88,496,l),
(38,213,ls),
(32,180,o),
(32,151,qs),
(32,73,o),
(116,-12,o),
(193,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
36 1 1 0 35 1 5 1 26 1 3 5 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
2 1 0 0 36 77 0 1 1 5 98 6 1 5 5 40 77 0 3 3 4 97 0 4 4 38 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 4 3 4 101 2 1 0 0 36 77 0 1 1 5 98 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 39 0 38 35 39 19 36 21 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (480,0);
},
{
name = top;
pos = (329,496);
},
{
name = topright;
pos = (603,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(243,-12,o),
(338,38,o),
(370,82,q),
(368,20,l),
(301,-12,o),
(245,-84,o),
(245,-126,qs),
(245,-168,o),
(309,-210,o),
(361,-210,qs),
(404,-210,o),
(451,-196,q),
(464,-120,l),
(422,-135,o),
(390,-135,qs),
(369,-135,o),
(345,-117,o),
(345,-102,qs),
(345,-81,o),
(380,-46,o),
(424,-26,qs),
(480,0,l),
(567,496,l),
(439,496,l),
(393,236,ls),
(382,172,o),
(300,96,o),
(246,96,qs),
(157,96,o),
(157,186,qs),
(157,208,o),
(161,228,qs),
(209,496,l),
(81,496,l),
(31,216,ls),
(25,182,o),
(25,153,qs),
(25,73,o),
(109,-12,o),
(187,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
36 35 2 5 1 26 1 3 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
2 1 0 0 36 77 0 1 1 5 98 6 1 5 5 40 77 0 3 3 4 97 0 4 4 38 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 4 3 4 101 2 1 0 0 36 77 0 1 1 5 98 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 39 0 38 35 39 19 36 21 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 569;
}
);
note = uogonek;
unicode = 371;
},
{
glyphname = uring;
kernLeft = u;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (470,0);
},
{
name = top;
pos = (378,766);
},
{
name = topright;
pos = (600,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (175,0);
ref = uni030A;
}
);
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (460,0);
},
{
name = top;
pos = (378,763);
},
{
name = topright;
pos = (597,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (180,0);
ref = uni030A;
}
);
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (473,0);
},
{
name = top;
pos = (377,767);
},
{
name = topright;
pos = (601,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (173,0);
ref = uni030A;
}
);
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (480,0);
},
{
name = top;
pos = (377,769);
},
{
name = topright;
pos = (603,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (169,0);
ref = uni030A;
}
);
width = 569;
}
);
note = uring;
unicode = 367;
},
{
glyphname = utilde;
kernLeft = u;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (470,0);
},
{
name = top;
pos = (367,705);
},
{
name = topright;
pos = (600,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (123,0);
ref = tildecomb;
}
);
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (460,0);
},
{
name = top;
pos = (368,705);
},
{
name = topright;
pos = (597,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (136,0);
ref = tildecomb;
}
);
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (242,0);
},
{
name = ogonek;
pos = (473,0);
},
{
name = top;
pos = (367,704);
},
{
name = topright;
pos = (601,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (118,0);
ref = tildecomb;
}
);
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (480,0);
},
{
name = top;
pos = (366,704);
},
{
name = topright;
pos = (603,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (109,0);
ref = tildecomb;
}
);
width = 569;
}
);
note = utilde;
unicode = 361;
},
{
glyphname = v;
kernLeft = v;
kernRight = v;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(283,0,l),
(562,496,l),
(450,496,l),
(237,100,l),
(163,496,l),
(53,496,l),
(155,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 2 0 1 76 1 1 0 0 36 77 0 2 2 34 2 78 17 18 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 527;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(270,0,l),
(554,496,l),
(465,496,l),
(235,80,l),
(150,496,l),
(63,496,l),
(171,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 2 0 1 76 1 1 0 0 36 77 0 2 2 34 2 78 17 18 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 530;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(287,0,l),
(565,496,l),
(444,496,l),
(238,107,l),
(167,496,l),
(49,496,l),
(150,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 2 0 1 76 1 1 0 0 36 77 0 2 2 34 2 78 17 18 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 525;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(296,0,l),
(570,496,l),
(434,496,l),
(239,120,l),
(175,496,l),
(42,496,l),
(139,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 2 0 1 76 1 1 0 0 36 77 0 2 2 34 2 78 17 18 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 523;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
kernLeft = w;
kernRight = w;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (334,0);
},
{
name = top;
pos = (422,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(220,0,l),
(403,390,l),
(448,0,l),
(558,0,l),
(790,496,l),
(685,496,l),
(523,123,l),
(481,496,l),
(362,496,l),
(188,123,l),
(158,496,l),
(53,496,l),
(111,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
10 5 2 3 3 0 1 76 2 1 2 0 0 36 77 4 1 3 3 34 3 78 18 17 18 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 755;
},
{
anchors = (
{
name = bottom;
pos = (329,0);
},
{
name = top;
pos = (417,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(207,0,l),
(401,409,l),
(451,0,l),
(537,0,l),
(769,496,l),
(685,496,l),
(511,107,l),
(464,496,l),
(369,496,l),
(184,107,l),
(148,496,l),
(63,496,l),
(122,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
10 5 2 3 3 0 1 76 2 1 2 0 0 36 77 4 1 3 3 34 3 78 18 17 18 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 745;
},
{
anchors = (
{
name = bottom;
pos = (335,0);
},
{
name = top;
pos = (423,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(224,0,l),
(403,384,l),
(447,0,l),
(564,0,l),
(796,496,l),
(684,496,l),
(526,128,l),
(486,496,l),
(360,496,l),
(189,128,l),
(161,496,l),
(49,496,l),
(107,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
10 5 2 3 3 0 1 76 2 1 2 0 0 36 77 4 1 3 3 34 3 78 18 17 18 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 758;
},
{
anchors = (
{
name = bottom;
pos = (338,0);
},
{
name = top;
pos = (426,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(233,0,l),
(404,371,l),
(445,0,l),
(578,0,l),
(810,496,l),
(684,496,l),
(534,138,l),
(497,496,l),
(355,496,l),
(192,139,l),
(168,496,l),
(42,496,l),
(100,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
10 5 2 3 3 0 1 76 2 1 2 0 0 36 77 4 1 3 3 34 3 78 18 17 18 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 764;
}
);
note = w;
unicode = 119;
},
{
glyphname = wacute;
kernLeft = w;
kernRight = w;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (334,0);
},
{
name = top;
pos = (467,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (269,0);
ref = acutecomb;
}
);
width = 755;
},
{
anchors = (
{
name = bottom;
pos = (329,0);
},
{
name = top;
pos = (462,747);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (268,0);
ref = acutecomb;
}
);
width = 745;
},
{
anchors = (
{
name = bottom;
pos = (335,0);
},
{
name = top;
pos = (468,750);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (269,0);
ref = acutecomb;
}
);
width = 758;
},
{
anchors = (
{
name = bottom;
pos = (338,0);
},
{
name = top;
pos = (471,751);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (269,0);
ref = acutecomb;
}
);
width = 764;
}
);
note = wacute;
unicode = 7811;
},
{
glyphname = wcircumflex;
kernLeft = w;
kernRight = w;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (334,0);
},
{
name = top;
pos = (463,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (236,0);
ref = uni0302;
}
);
width = 755;
},
{
anchors = (
{
name = bottom;
pos = (329,0);
},
{
name = top;
pos = (459,733);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (236,0);
ref = uni0302;
}
);
width = 745;
},
{
anchors = (
{
name = bottom;
pos = (335,0);
},
{
name = top;
pos = (464,728);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (236,0);
ref = uni0302;
}
);
width = 758;
},
{
anchors = (
{
name = bottom;
pos = (338,0);
},
{
name = top;
pos = (466,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (236,0);
ref = uni0302;
}
);
width = 764;
}
);
note = wcircumflex;
unicode = 373;
},
{
glyphname = wdieresis;
kernLeft = w;
kernRight = w;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (334,0);
},
{
name = top;
pos = (462,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (206,0);
ref = uni0308;
}
);
width = 755;
},
{
anchors = (
{
name = bottom;
pos = (329,0);
},
{
name = top;
pos = (456,720);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (225,0);
ref = uni0308;
}
);
width = 745;
},
{
anchors = (
{
name = bottom;
pos = (335,0);
},
{
name = top;
pos = (463,724);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (200,0);
ref = uni0308;
}
);
width = 758;
},
{
anchors = (
{
name = bottom;
pos = (338,0);
},
{
name = top;
pos = (467,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (187,0);
ref = uni0308;
}
);
width = 764;
}
);
note = wdieresis;
unicode = 7813;
},
{
glyphname = wgrave;
kernLeft = w;
kernRight = w;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (334,0);
},
{
name = top;
pos = (467,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (269,0);
ref = gravecomb;
}
);
width = 755;
},
{
anchors = (
{
name = bottom;
pos = (329,0);
},
{
name = top;
pos = (462,747);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (269,0);
ref = gravecomb;
}
);
width = 745;
},
{
anchors = (
{
name = bottom;
pos = (335,0);
},
{
name = top;
pos = (468,750);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (269,0);
ref = gravecomb;
}
);
width = 758;
},
{
anchors = (
{
name = bottom;
pos = (338,0);
},
{
name = top;
pos = (471,751);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (269,0);
ref = gravecomb;
}
);
width = 764;
}
);
note = wgrave;
unicode = 7809;
},
{
glyphname = x;
kernLeft = x;
kernRight = x;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,0,l),
(229,180,l),
(319,0,l),
(434,0,l),
(310,247,l),
(522,496,l),
(408,496,l),
(261,317,l),
(171,496,l),
(55,496,l),
(180,250,l),
(-33,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 3 3 2 0 1 76 1 1 0 0 36 77 3 1 2 2 34 2 78 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 489;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(67,0,l),
(242,205,l),
(346,0,l),
(432,0,l),
(306,245,l),
(523,496,l),
(433,496,l),
(258,291,l),
(154,496,l),
(67,496,l),
(194,251,l),
(-24,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 3 3 2 0 1 76 1 1 0 0 36 77 3 1 2 2 34 2 78 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 499;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(86,0,l),
(224,171,l),
(310,0,l),
(435,0,l),
(311,248,l),
(522,496,l),
(400,496,l),
(261,326,l),
(177,496,l),
(51,496,l),
(175,250,l),
(-36,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 3 3 2 0 1 76 1 1 0 0 36 77 3 1 2 2 34 2 78 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 485;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(96,0,l),
(215,154,l),
(292,0,l),
(436,0,l),
(313,249,l),
(521,496,l),
(383,496,l),
(263,343,l),
(188,496,l),
(43,496,l),
(166,249,l),
(-42,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 3 3 2 0 1 76 1 1 0 0 36 77 3 1 2 2 34 2 78 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 478;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
kernLeft = y;
kernRight = y;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = top;
pos = (321,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(144,-220,l),
(590,496,l),
(478,496,l),
(255,129,l),
(165,496,l),
(52,496,l),
(179,13,l),
(32,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
3 1 2 0 1 76 1 1 0 0 36 77 0 2 2 38 2 78 17 18 17 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 554;
},
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = top;
pos = (322,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(129,-220,l),
(580,496,l),
(492,496,l),
(251,110,l),
(152,496,l),
(63,496,l),
(192,19,l),
(41,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
3 1 2 0 1 76 1 1 0 0 36 77 0 2 2 38 2 78 17 18 17 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 555;
},
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = top;
pos = (321,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(149,-220,l),
(593,496,l),
(473,496,l),
(256,135,l),
(169,496,l),
(48,496,l),
(174,10,l),
(29,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
3 1 2 0 1 76 1 1 0 0 36 77 0 2 2 38 2 78 17 18 17 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 553;
},
{
anchors = (
{
name = bottom;
pos = (232,0);
},
{
name = top;
pos = (320,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(159,-220,l),
(600,496,l),
(464,496,l),
(258,147,l),
(178,496,l),
(41,496,l),
(165,6,l),
(23,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
3 1 2 0 1 76 1 1 0 0 36 77 0 2 2 38 2 78 17 18 17 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 552;
}
);
note = y;
unicode = 121;
},
{
glyphname = yacute;
kernLeft = y;
kernRight = y;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = top;
pos = (366,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (168,0);
ref = acutecomb;
}
);
width = 554;
},
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = top;
pos = (367,747);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (173,0);
ref = acutecomb;
}
);
width = 555;
},
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = top;
pos = (366,750);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (166,0);
ref = acutecomb;
}
);
width = 553;
},
{
anchors = (
{
name = bottom;
pos = (232,0);
},
{
name = top;
pos = (365,751);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (163,0);
ref = acutecomb;
}
);
width = 552;
}
);
note = yacute;
unicode = 253;
},
{
glyphname = ycircumflex;
kernLeft = y;
kernRight = y;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = top;
pos = (362,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (136,0);
ref = uni0302;
}
);
width = 554;
},
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = top;
pos = (364,733);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (141,0);
ref = uni0302;
}
);
width = 555;
},
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = top;
pos = (361,728);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (134,0);
ref = uni0302;
}
);
width = 553;
},
{
anchors = (
{
name = bottom;
pos = (232,0);
},
{
name = top;
pos = (360,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (130,0);
ref = uni0302;
}
);
width = 552;
}
);
note = ycircumflex;
unicode = 375;
},
{
glyphname = ydieresis;
kernLeft = y;
kernRight = y;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = top;
pos = (361,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (106,0);
ref = uni0308;
}
);
width = 554;
},
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = top;
pos = (361,720);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (130,0);
ref = uni0308;
}
);
width = 555;
},
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = top;
pos = (361,724);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (97,0);
ref = uni0308;
}
);
width = 553;
},
{
anchors = (
{
name = bottom;
pos = (232,0);
},
{
name = top;
pos = (361,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (81,0);
ref = uni0308;
}
);
width = 552;
}
);
note = ydieresis;
unicode = 255;
},
{
glyphname = ygrave;
kernLeft = y;
kernRight = y;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = top;
pos = (366,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (169,0);
ref = gravecomb;
}
);
width = 554;
},
{
anchors = (
{
name = bottom;
pos = (234,0);
},
{
name = top;
pos = (367,747);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (174,0);
ref = gravecomb;
}
);
width = 555;
},
{
anchors = (
{
name = bottom;
pos = (233,0);
},
{
name = top;
pos = (366,750);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (167,0);
ref = gravecomb;
}
);
width = 553;
},
{
anchors = (
{
name = bottom;
pos = (232,0);
},
{
name = top;
pos = (365,751);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (163,0);
ref = gravecomb;
}
);
width = 552;
}
);
note = ygrave;
unicode = 7923;
},
{
glyphname = z;
kernLeft = z;
kernRight = z;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (190,0);
},
{
name = top;
pos = (278,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(376,0,l),
(392,88,l),
(122,88,l),
(454,410,l),
(470,496,l),
(89,496,l),
(73,408,l),
(333,408,l),
(2,86,l),
(-14,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 0 0 1 95 0 1 1 36 77 0 2 2 3 95 0 3 3 34 3 78 17 18 17 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 458;
},
{
anchors = (
{
name = bottom;
pos = (193,0);
},
{
name = top;
pos = (281,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(371,0,l),
(384,70,l),
(104,70,l),
(453,427,l),
(466,496,l),
(100,496,l),
(87,426,l),
(357,426,l),
(9,69,l),
(-4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 0 0 1 95 0 1 1 36 77 0 2 2 3 95 0 3 3 34 3 78 17 18 17 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 464;
},
{
anchors = (
{
name = bottom;
pos = (189,0);
},
{
name = top;
pos = (277,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(377,0,l),
(395,94,l),
(127,94,l),
(454,404,l),
(471,496,l),
(85,496,l),
(68,402,l),
(324,402,l),
(0,92,l),
(-17,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 0 0 1 95 0 1 1 36 77 0 2 2 3 95 0 3 3 34 3 78 17 18 17 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 455;
},
{
anchors = (
{
name = bottom;
pos = (187,0);
},
{
name = top;
pos = (275,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(380,0,l),
(400,106,l),
(139,106,l),
(454,393,l),
(473,496,l),
(77,496,l),
(58,390,l),
(308,390,l),
(-5,103,l),
(-24,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 0 0 1 95 0 1 1 36 77 0 2 2 3 95 0 3 3 34 3 78 17 18 17 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = z;
unicode = 122;
},
{
glyphname = zacute;
kernLeft = z;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (190,0);
},
{
name = top;
pos = (323,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (125,0);
ref = acutecomb;
}
);
width = 458;
},
{
anchors = (
{
name = bottom;
pos = (193,0);
},
{
name = top;
pos = (326,747);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (132,0);
ref = acutecomb;
}
);
width = 464;
},
{
anchors = (
{
name = bottom;
pos = (189,0);
},
{
name = top;
pos = (322,750);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (123,0);
ref = acutecomb;
}
);
width = 455;
},
{
anchors = (
{
name = bottom;
pos = (187,0);
},
{
name = top;
pos = (320,751);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (118,0);
ref = acutecomb;
}
);
width = 451;
}
);
note = zacute;
unicode = 378;
},
{
glyphname = zcaron;
kernLeft = z;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (190,0);
},
{
name = top;
pos = (319,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (93,0);
ref = uni030C;
}
);
width = 458;
},
{
anchors = (
{
name = bottom;
pos = (193,0);
},
{
name = top;
pos = (323,733);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (100,0);
ref = uni030C;
}
);
width = 464;
},
{
anchors = (
{
name = bottom;
pos = (189,0);
},
{
name = top;
pos = (318,728);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (90,0);
ref = uni030C;
}
);
width = 455;
},
{
anchors = (
{
name = bottom;
pos = (187,0);
},
{
name = top;
pos = (315,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (85,0);
ref = uni030C;
}
);
width = 451;
}
);
note = zcaron;
unicode = 382;
},
{
glyphname = zdotaccent;
kernLeft = z;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (190,0);
},
{
name = top;
pos = (318,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (163,0);
ref = uni0307;
}
);
width = 458;
},
{
anchors = (
{
name = bottom;
pos = (193,0);
},
{
name = top;
pos = (320,720);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (178,0);
ref = uni0307;
}
);
width = 464;
},
{
anchors = (
{
name = bottom;
pos = (189,0);
},
{
name = top;
pos = (317,724);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (157,0);
ref = uni0307;
}
);
width = 455;
},
{
anchors = (
{
name = bottom;
pos = (187,0);
},
{
name = top;
pos = (316,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (147,0);
ref = uni0307;
}
);
width = 451;
}
);
note = zdotaccent;
unicode = 380;
},
{
glyphname = uniA78C;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(169,335,l),
(252,700,l),
(138,700,l),
(90,335,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 229;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(157,339,l),
(236,700,l),
(145,700,l),
(96,339,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 221;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(173,333,l),
(257,700,l),
(135,700,l),
(87,333,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 232;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(181,330,l),
(267,700,l),
(130,700,l),
(83,330,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = uniA78C;
unicode = 42892;
},
{
glyphname = i.loclTRK;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (120,0);
},
{
name = top;
pos = (194,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (39,0);
ref = uni0307;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (68,0);
},
{
name = ogonek;
pos = (110,0);
},
{
name = top;
pos = (195,720);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (53,0);
ref = uni0307;
}
);
width = 223;
},
{
anchors = (
{
name = bottom;
pos = (67,0);
},
{
name = ogonek;
pos = (123,0);
},
{
name = top;
pos = (194,724);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (34,0);
ref = uni0307;
}
);
width = 220;
},
{
anchors = (
{
name = bottom;
pos = (66,0);
},
{
name = ogonek;
pos = (130,0);
},
{
name = top;
pos = (193,726);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (24,0);
ref = uni0307;
}
);
width = 219;
}
);
note = i.loclTRK;
},
{
glyphname = fi;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = caret_1;
pos = (280,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,0,l),
(219,407,l),
(324,407,l),
(340,496,l),
(234,496,l),
(243,547,ls),
(250,581,o),
(285,610,o),
(320,610,qs),
(349,610,l),
(366,700,l),
(320,700,ls),
(244,700,o),
(152,627,o),
(137,548,qs),
(128,496,l),
(62,496,l),
(47,407,l),
(113,407,l),
(41,0,l)
);
},
{
closed = 1;
nodes = (
(452,0,l),
(539,496,l),
(433,496,l),
(346,0,l)
);
},
{
closed = 1;
nodes = (
(543,586,o),
(583,626,o),
(583,655,qs),
(583,684,o),
(543,723,o),
(514,723,qs),
(485,723,o),
(445,684,o),
(445,655,qs),
(445,626,o),
(485,586,o),
(514,586,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 3 2 97 0 2 2 33 77 11 1 10 10 9 97 0 9 9 41 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 3 2 97 0 2 2 33 77 11 1 10 10 9 97 0 9 9 39 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 9 11 1 10 1 9 10 105 0 3 3 2 97 0 2 2 33 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
24 24 24 35 24 34 30 28 17 17 17 17 19 33 35 17 16 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 560;
},
{
anchors = (
{
name = caret_1;
pos = (288,0);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(136,0,l),
(211,425,l),
(333,425,l),
(346,496,l),
(223,496,l),
(235,560,ls),
(242,597,o),
(280,628,o),
(318,628,qs),
(354,628,l),
(367,700,l),
(318,700,ls),
(247,700,o),
(164,633,o),
(151,562,qs),
(139,496,l),
(65,496,l),
(53,425,l),
(127,425,l),
(52,0,l)
);
},
{
closed = 1;
nodes = (
(453,0,l),
(540,496,l),
(456,496,l),
(369,0,l)
);
},
{
closed = 1;
nodes = (
(552,606,o),
(586,639,o),
(586,663,qs),
(586,687,o),
(552,720,o),
(528,720,qs),
(503,720,o),
(470,688,o),
(470,663,qs),
(470,638,o),
(503,606,o),
(528,606,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 3 2 97 0 2 2 33 77 11 1 10 10 9 97 0 9 9 41 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 3 3 2 97 0 2 2 33 77 11 1 10 10 9 97 0 9 9 39 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
24 24 24 35 24 34 30 28 17 17 17 17 19 33 35 17 16 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 575;
},
{
anchors = (
{
name = caret_1;
pos = (278,0);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(150,0,l),
(221,401,l),
(321,401,l),
(338,496,l),
(237,496,l),
(246,543,ls),
(252,575,o),
(286,603,o),
(321,603,qs),
(347,603,l),
(365,700,l),
(321,700,ls),
(243,700,o),
(147,625,o),
(132,543,qs),
(124,496,l),
(61,496,l),
(44,401,l),
(108,401,l),
(37,0,l)
);
},
{
closed = 1;
nodes = (
(451,0,l),
(538,496,l),
(425,496,l),
(338,0,l)
);
},
{
closed = 1;
nodes = (
(539,579,o),
(582,621,o),
(582,652,qs),
(582,682,o),
(539,724,o),
(509,724,qs),
(479,724,o),
(437,683,o),
(437,652,qs),
(437,621,o),
(479,579,o),
(509,579,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 3 2 97 0 2 2 33 77 11 1 10 10 9 97 0 9 9 41 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 3 2 97 0 2 2 33 77 11 1 10 10 9 97 0 9 9 39 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 9 11 1 10 1 9 10 105 0 3 3 2 97 0 2 2 33 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
24 24 24 35 24 34 30 28 17 17 17 17 19 33 35 17 16 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 555;
},
{
anchors = (
{
name = caret_1;
pos = (273,0);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(157,0,l),
(226,389,l),
(315,389,l),
(334,496,l),
(244,496,l),
(251,534,ls),
(257,565,o),
(289,591,o),
(322,591,qs),
(344,591,l),
(364,700,l),
(322,700,ls),
(153,700,o),
(123,534,qs),
(116,496,l),
(59,496,l),
(40,389,l),
(98,389,l),
(29,0,l)
);
},
{
closed = 1;
nodes = (
(450,0,l),
(537,496,l),
(409,496,l),
(322,0,l)
);
},
{
closed = 1;
nodes = (
(533,566,o),
(580,613,o),
(580,646,qs),
(580,680,o),
(533,726,o),
(500,726,qs),
(467,726,o),
(420,680,o),
(420,646,qs),
(420,613,o),
(467,566,o),
(500,566,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 3 2 97 0 2 2 33 77 11 1 10 10 9 97 0 9 9 41 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 3 2 97 0 2 2 33 77 11 1 10 10 9 97 0 9 9 39 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 9 11 1 10 1 9 10 105 0 3 3 2 97 0 2 2 33 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
23 23 23 34 23 33 29 27 17 17 17 17 19 33 34 17 16 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 545;
}
);
note = fi;
unicode = 64257;
},
{
glyphname = fl;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = caret_1;
pos = (273,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,0,l),
(219,407,l),
(324,407,l),
(340,496,l),
(234,496,l),
(243,547,ls),
(250,581,o),
(285,610,o),
(320,610,qs),
(349,610,l),
(366,700,l),
(320,700,ls),
(244,700,o),
(152,627,o),
(137,548,qs),
(128,496,l),
(62,496,l),
(47,407,l),
(113,407,l),
(41,0,l)
);
},
{
closed = 1;
nodes = (
(444,0,l),
(568,700,l),
(462,700,l),
(338,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 2 97 7 1 2 2 33 77 5 1 0 0 1 95 4 1 1 1 36 77 8 1 6 6 34 6 78 17 17 17 17 19 33 35 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 546;
},
{
anchors = (
{
name = caret_1;
pos = (279,0);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(136,0,l),
(211,425,l),
(333,425,l),
(346,496,l),
(223,496,l),
(235,560,ls),
(242,597,o),
(280,628,o),
(318,628,qs),
(354,628,l),
(367,700,l),
(318,700,ls),
(247,700,o),
(164,633,o),
(151,562,qs),
(139,496,l),
(65,496,l),
(53,425,l),
(127,425,l),
(52,0,l)
);
},
{
closed = 1;
nodes = (
(443,0,l),
(567,700,l),
(483,700,l),
(359,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 2 97 7 1 2 2 33 77 5 1 0 0 1 95 4 1 1 1 36 77 8 1 6 6 34 6 78 17 17 17 17 19 33 35 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 557;
},
{
anchors = (
{
name = caret_1;
pos = (271,0);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(150,0,l),
(221,401,l),
(321,401,l),
(338,496,l),
(237,496,l),
(246,543,ls),
(252,575,o),
(286,603,o),
(321,603,qs),
(347,603,l),
(365,700,l),
(321,700,ls),
(243,700,o),
(147,625,o),
(132,543,qs),
(124,496,l),
(61,496,l),
(44,401,l),
(108,401,l),
(37,0,l)
);
},
{
closed = 1;
nodes = (
(444,0,l),
(568,700,l),
(454,700,l),
(330,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 2 97 7 1 2 2 33 77 5 1 0 0 1 95 4 1 1 1 36 77 8 1 6 6 34 6 78 17 17 17 17 19 33 35 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 542;
},
{
anchors = (
{
name = caret_1;
pos = (268,0);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(157,0,l),
(226,389,l),
(315,389,l),
(334,496,l),
(244,496,l),
(251,534,ls),
(257,565,o),
(289,591,o),
(322,591,qs),
(344,591,l),
(364,700,l),
(322,700,ls),
(153,700,o),
(123,534,qs),
(116,496,l),
(59,496,l),
(40,389,l),
(98,389,l),
(29,0,l)
);
},
{
closed = 1;
nodes = (
(444,0,l),
(568,700,l),
(440,700,l),
(316,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 2 97 7 1 2 2 33 77 5 1 0 0 1 95 4 1 1 1 36 77 8 1 6 6 34 6 78 17 17 17 17 19 33 34 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 535;
}
);
note = fl;
unicode = 64258;
},
{
glyphname = ordfeminine;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,346,o),
(309,414,q),
(314,384,o),
(360,355,o),
(403,355,q),
(414,418,l),
(397,418,o),
(382,430,o),
(382,444,qs),
(384,463,l),
(402,564,ls),
(405,582,o),
(405,598,qs),
(405,652,o),
(339,710,o),
(278,710,qs),
(217,710,o),
(123,648,o),
(104,591,q),
(178,591,l),
(189,618,o),
(237,647,o),
(267,647,qs),
(298,647,o),
(331,616,o),
(331,587,qs),
(331,581,o),
(329,563,q),
(240,563,ls),
(168,563,o),
(71,498,o),
(71,438,qs),
(71,396,o),
(132,346,o),
(178,346,qs)
);
},
{
closed = 1;
nodes = (
(179,407,o),
(148,428,o),
(148,448,qs),
(148,479,o),
(199,511,o),
(236,511,qs),
(318,511,l),
(309,467,o),
(246,407,o),
(204,407,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
25 1 4 7 32 1 5 4 2 76
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
25 1 4 7 32 1 8 4 2 76
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
25 1 4 7 32 1 5 4 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
25 1 4 7 32 1 8 4 2 76
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 10 8 2 4 4 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 9 6 2 5 5 58 77 10 1 8 8 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 10 8 2 4 4 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 9 6 2 5 5 58 77 10 1 8 8 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 0 5 5 58 77 10 1 8 8 6 97 9 1 6 6 58 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
35 35 0 0 35 44 35 43 39 37 0 34 0 33 17 24 34 18 36 36 11 10 28
CALL[ ]	/* CallFunction */";
};
width = 414;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(245,346,o),
(312,389,o),
(331,421,q),
(337,355,o),
(412,355,q),
(421,406,l),
(403,406,o),
(389,421,o),
(389,436,qs),
(389,446,o),
(392,462,qs),
(411,568,ls),
(414,588,o),
(414,601,qs),
(414,655,o),
(347,710,o),
(289,710,qs),
(230,710,o),
(136,649,o),
(119,593,q),
(179,593,l),
(191,626,o),
(247,660,o),
(282,660,qs),
(316,660,o),
(354,625,o),
(354,592,qs),
(354,576,o),
(352,564,q),
(259,564,ls),
(185,564,o),
(86,500,o),
(86,439,qs),
(86,395,o),
(149,346,o),
(198,346,qs)
);
},
{
closed = 1;
nodes = (
(185,396,o),
(149,421,o),
(149,446,qs),
(149,483,o),
(209,518,o),
(255,518,qs),
(343,518,l),
(335,469,o),
(265,396,o),
(215,396,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
32 1 4 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 10 8 2 4 4 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 9 6 2 5 5 58 77 10 1 8 8 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 10 8 2 4 4 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 9 6 2 5 5 58 77 10 1 8 8 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 10 8 2 4 4 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 9 6 2 5 5 58 77 10 1 8 8 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 0 5 5 58 77 10 1 8 8 6 97 9 1 6 6 58 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
36 36 0 0 36 45 36 44 40 38 0 35 0 34 17 25 34 18 36 36 11 10 28
CALL[ ]	/* CallFunction */";
};
width = 438;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(249,346,o),
(301,411,q),
(312,354,o),
(399,354,q),
(412,421,l),
(395,421,o),
(380,433,o),
(380,446,qs),
(381,463,l),
(399,562,ls),
(402,580,o),
(402,596,qs),
(402,651,o),
(335,710,o),
(274,710,qs),
(212,710,o),
(119,648,o),
(99,590,q),
(177,590,l),
(188,616,o),
(233,643,o),
(261,643,qs),
(292,643,o),
(323,613,o),
(323,585,qs),
(323,580,o),
(321,562,q),
(233,562,ls),
(161,562,o),
(65,497,o),
(65,437,qs),
(65,396,o),
(126,346,o),
(171,346,qs)
);
},
{
closed = 1;
nodes = (
(176,410,o),
(148,430,o),
(148,449,qs),
(148,478,o),
(194,509,o),
(229,509,qs),
(310,509,l),
(301,467,o),
(240,410,o),
(200,410,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
24 1 4 7 31 1 5 4 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
24 1 4 7 31 1 8 4 2 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 10 8 2 4 4 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 9 6 2 5 5 58 77 10 1 8 8 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 0 5 5 58 77 10 1 8 8 6 97 9 1 6 6 58 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
34 34 0 0 34 43 34 42 38 36 0 33 0 32 17 24 34 18 36 36 11 10 28
CALL[ ]	/* CallFunction */";
};
width = 406;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(197,346,o),
(259,376,o),
(286,406,q),
(293,379,o),
(344,354,o),
(393,354,q),
(407,429,l),
(390,429,o),
(375,439,o),
(375,451,qs),
(376,464,l),
(393,559,ls),
(396,577,o),
(396,594,qs),
(396,649,o),
(329,710,o),
(266,710,qs),
(203,710,o),
(111,646,o),
(89,588,q),
(176,588,l),
(186,610,o),
(226,634,o),
(251,634,qs),
(307,634,o),
(307,581,qs),
(307,575,o),
(305,561,q),
(220,561,ls),
(149,561,o),
(55,495,o),
(55,436,qs),
(55,396,o),
(115,346,o),
(158,346,qs)
);
},
{
closed = 1;
nodes = (
(172,417,o),
(147,434,o),
(147,450,qs),
(147,475,o),
(187,504,o),
(216,504,qs),
(293,504,l),
(283,465,o),
(227,417,o),
(192,417,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
24 1 4 7 31 1 5 4 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
24 1 4 7 31 1 5 8 2 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 10 8 2 4 4 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 9 6 2 5 5 58 77 10 1 8 8 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 0 5 5 58 77 10 1 8 8 6 97 9 1 6 6 58 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
35 35 0 0 35 44 35 43 39 37 0 34 0 33 17 24 34 18 35 36 11 10 28
CALL[ ]	/* CallFunction */";
};
width = 390;
}
);
note = ordfeminine;
unicode = 170;
},
{
glyphname = ordmasculine;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(280,348,o),
(376,404,o),
(431,502,o),
(431,561,qs),
(431,625,o),
(349,712,o),
(278,712,qs),
(220,712,o),
(125,657,o),
(70,560,o),
(70,501,qs),
(70,435,o),
(154,348,o),
(221,348,qs)
);
},
{
closed = 1;
nodes = (
(194,412,o),
(145,464,o),
(145,506,qs),
(145,566,o),
(215,648,o),
(268,648,qs),
(307,648,o),
(356,596,o),
(356,553,qs),
(356,493,o),
(286,412,o),
(233,412,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 59 77 5 1 3 3 1 97 4 1 1 1 58 1 78 14 14 0 0 14 25 14 24 20 18 0 13 0 12 37 6 10 23
CALL[ ]	/* CallFunction */";
};
width = 401;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(284,348,o),
(378,405,o),
(432,503,o),
(432,563,qs),
(432,630,o),
(349,712,o),
(283,712,qs),
(227,712,o),
(133,656,o),
(78,559,o),
(78,499,qs),
(78,433,o),
(161,348,o),
(226,348,qs)
);
},
{
closed = 1;
nodes = (
(192,398,o),
(139,455,o),
(139,501,qs),
(139,546,o),
(175,620,o),
(238,662,o),
(276,662,qs),
(317,662,o),
(372,606,o),
(372,559,qs),
(372,514,o),
(336,440,o),
(273,398,o),
(234,398,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 59 77 5 1 3 3 1 97 4 1 1 1 58 1 78 14 14 0 0 14 27 14 26 21 19 0 13 0 12 37 6 10 23
CALL[ ]	/* CallFunction */";
};
width = 410;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(278,348,o),
(375,404,o),
(430,501,o),
(430,560,qs),
(430,600,o),
(395,670,o),
(325,712,o),
(276,712,qs),
(218,712,o),
(122,657,o),
(67,561,o),
(67,502,qs),
(67,436,o),
(152,348,o),
(219,348,qs)
);
},
{
closed = 1;
nodes = (
(194,417,o),
(147,467,o),
(147,507,qs),
(147,564,o),
(213,643,o),
(265,643,qs),
(303,643,o),
(351,592,o),
(351,551,qs),
(351,494,o),
(284,417,o),
(233,417,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 59 77 5 1 3 3 1 97 4 1 1 1 58 1 78 15 15 0 0 15 26 15 25 21 19 0 14 0 13 37 6 10 23
CALL[ ]	/* CallFunction */";
};
width = 398;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(275,348,o),
(373,404,o),
(429,500,o),
(429,559,qs),
(429,597,o),
(395,667,o),
(325,712,o),
(272,712,qs),
(213,712,o),
(117,657,o),
(62,561,o),
(62,503,qs),
(62,460,o),
(100,389,o),
(171,348,o),
(216,348,qs)
);
},
{
closed = 1;
nodes = (
(196,426,o),
(151,473,o),
(151,510,qs),
(151,561,o),
(212,634,o),
(260,634,qs),
(297,634,o),
(340,585,o),
(340,547,qs),
(340,496,o),
(279,426,o),
(232,426,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 59 77 5 1 3 3 1 97 4 1 1 1 58 1 78 16 16 0 0 16 27 16 26 22 20 0 15 0 14 38 6 10 23
CALL[ ]	/* CallFunction */";
};
width = 392;
}
);
note = ordmasculine;
unicode = 186;
},
{
glyphname = uni042F;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-33,0,l),
(95,0,l),
(324,303,l),
(421,303,l),
(368,0,l),
(474,0,l),
(598,700,l),
(373,700,ls),
(248,700,o),
(96,581,o),
(96,473,qs),
(96,414,o),
(163,334,o),
(222,321,q)
);
},
{
closed = 1;
nodes = (
(261,393,o),
(206,443,o),
(206,485,qs),
(206,550,o),
(280,611,o),
(359,611,qs),
(475,611,l),
(437,393,l),
(321,393,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
13 1 2 5 1 76 3 1 1 2 1 134 0 0 0 4 5 0 4 103 6 1 5 2 2 5 87 6 1 5 5 2 95 0 2 5 2 79 14 14 14 22 14 21 35 17 17 17 36 7 6 27
CALL[ ]	/* CallFunction */";
};
width = 584;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(-27,0,l),
(77,0,l),
(312,310,l),
(428,310,l),
(373,0,l),
(457,0,l),
(581,700,l),
(374,700,ls),
(248,700,o),
(101,584,o),
(101,475,qs),
(101,414,o),
(170,337,o),
(232,326,q)
);
},
{
closed = 1;
nodes = (
(251,381,o),
(188,435,o),
(188,483,qs),
(188,560,o),
(272,630,o),
(363,630,qs),
(484,630,l),
(440,381,l),
(319,381,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
13 1 2 5 1 76 3 1 1 2 1 134 0 0 0 4 5 0 4 103 6 1 5 2 2 5 87 6 1 5 5 2 95 0 2 5 2 79 14 14 14 22 14 21 35 17 17 17 36 7 6 27
CALL[ ]	/* CallFunction */";
};
width = 575;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(-35,0,l),
(100,0,l),
(328,300,l),
(419,300,l),
(366,0,l),
(479,0,l),
(603,700,l),
(372,700,ls),
(290,700,o),
(165,647,o),
(94,544,o),
(94,472,qs),
(94,414,o),
(161,333,o),
(219,319,q)
);
},
{
closed = 1;
nodes = (
(264,396,o),
(211,446,o),
(211,485,qs),
(211,546,o),
(282,604,o),
(357,604,qs),
(472,604,l),
(436,396,l),
(321,396,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
14 1 2 5 1 76 3 1 1 2 1 134 0 0 0 4 5 0 4 103 6 1 5 2 2 5 87 6 1 5 5 2 95 0 2 5 2 79 15 15 15 23 15 22 35 17 17 17 37 7 6 27
CALL[ ]	/* CallFunction */";
};
width = 586;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(-39,0,l),
(112,0,l),
(336,295,l),
(414,295,l),
(362,0,l),
(490,0,l),
(614,700,l),
(371,700,ls),
(290,700,o),
(163,645,o),
(91,541,o),
(91,470,qs),
(91,413,o),
(156,330,o),
(212,316,q)
);
},
{
closed = 1;
nodes = (
(270,404,o),
(223,451,o),
(223,486,qs),
(223,539,o),
(286,591,o),
(354,591,qs),
(466,591,l),
(434,404,l),
(322,404,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
14 1 2 5 1 76 3 1 1 2 1 134 0 0 0 4 5 0 4 103 6 1 5 2 2 5 87 6 1 5 5 2 95 0 2 5 2 79 15 15 15 23 15 22 35 17 17 17 37 7 6 27
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = uni042F;
unicode = (1071,1103);
},
{
glyphname = uni0394;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-31,0,l),
(619,0,l),
(634,82,l),
(461,700,l),
(374,700,l),
(-17,82,l)
);
},
{
closed = 1;
nodes = (
(92,82,l),
(396,580,l),
(526,82,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 23 77 0 2 2 1 95 0 1 1 24 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 2 0 133 0 2 2 1 95 0 1 1 24 1 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
19 18 16 3 7 25
CALL[ ]	/* CallFunction */";
};
width = 694;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(-32,0,l),
(603,0,l),
(615,65,l),
(444,700,l),
(374,700,l),
(-20,65,l)
);
},
{
closed = 1;
nodes = (
(65,65,l),
(392,604,l),
(530,65,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 23 77 0 2 2 1 95 0 1 1 24 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 2 0 133 0 2 2 1 95 0 1 1 24 1 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
19 18 16 3 7 25
CALL[ ]	/* CallFunction */";
};
width = 695;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(-31,0,l),
(624,0,l),
(640,87,l),
(467,700,l),
(373,700,l),
(-16,87,l)
);
},
{
closed = 1;
nodes = (
(100,87,l),
(397,571,l),
(524,87,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 23 77 0 2 2 1 95 0 1 1 24 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 2 0 133 0 2 2 1 95 0 1 1 24 1 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
19 18 16 3 7 25
CALL[ ]	/* CallFunction */";
};
width = 693;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(-31,0,l),
(634,0,l),
(652,98,l),
(478,700,l),
(373,700,l),
(-14,98,l)
);
},
{
closed = 1;
nodes = (
(118,98,l),
(399,555,l),
(521,98,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 23 77 0 2 2 1 95 0 1 1 24 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 2 0 133 0 2 2 1 95 0 1 1 24 1 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
19 18 16 3 7 25
CALL[ ]	/* CallFunction */";
};
width = 692;
}
);
note = uni0394;
unicode = 916;
},
{
glyphname = Pi;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,0,l),
(247,414,l),
(449,414,l),
(375,0,l),
(481,0,l),
(555,414,l),
(631,414,l),
(646,496,l),
(79,496,l),
(64,414,l),
(141,414,l),
(67,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
0 1 4 2 2 0 3 1 0 103 5 1 3 3 24 3 78 17 17 17 17 17 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 637;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(165,0,l),
(242,430,l),
(469,430,l),
(393,0,l),
(477,0,l),
(553,430,l),
(632,430,l),
(644,496,l),
(90,496,l),
(78,430,l),
(158,430,l),
(81,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
0 1 4 2 2 0 3 1 0 103 5 1 3 3 24 3 78 17 17 17 17 17 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(176,0,l),
(249,409,l),
(442,409,l),
(369,0,l),
(482,0,l),
(555,409,l),
(631,409,l),
(647,496,l),
(75,496,l),
(59,409,l),
(135,409,l),
(62,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
0 1 4 2 2 0 3 1 0 103 5 1 3 3 24 3 78 17 17 17 17 17 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 633;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(181,0,l),
(252,398,l),
(428,398,l),
(357,0,l),
(485,0,l),
(556,398,l),
(630,398,l),
(648,496,l),
(67,496,l),
(49,398,l),
(124,398,l),
(53,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
0 1 4 2 2 0 3 1 0 103 5 1 3 3 24 3 78 17 17 17 17 17 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 627;
}
);
note = Pi;
unicode = 928;
},
{
glyphname = uni03A9;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(288,0,l),
(303,86,l),
(241,108,o),
(166,226,o),
(166,306,qs),
(166,386,o),
(238,529,o),
(374,616,o),
(464,616,qs),
(521,616,o),
(615,570,o),
(670,477,o),
(670,410,qs),
(670,348,o),
(620,217,o),
(517,110,o),
(440,86,q),
(424,0,l),
(698,0,l),
(714,82,l),
(583,82,l),
(672,131,o),
(780,316,o),
(780,427,qs),
(780,502,o),
(713,632,o),
(578,712,o),
(481,712,qs),
(368,712,o),
(174,607,o),
(59,423,o),
(59,309,qs),
(59,248,o),
(111,120,o),
(161,82,q),
(28,82,l),
(13,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
34 1 0 4 1 76 0 4 4 1 97 0 1 1 23 77 2 1 0 0 3 95 5 1 3 3 24 3 78 23 40 17 22 38 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 796;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(298,0,l),
(310,69,l),
(238,89,o),
(150,216,o),
(150,307,qs),
(150,398,o),
(234,548,o),
(382,636,o),
(473,636,qs),
(530,636,o),
(631,589,o),
(696,489,o),
(696,412,qs),
(696,345,o),
(640,202,o),
(523,89,o),
(437,69,q),
(424,0,l),
(699,0,l),
(712,66,l),
(568,66,l),
(628,96,o),
(725,202,o),
(782,345,o),
(782,425,qs),
(782,500,o),
(716,632,o),
(582,712,o),
(486,712,qs),
(374,712,o),
(181,606,o),
(65,420,o),
(65,306,qs),
(65,244,o),
(121,105,o),
(179,66,q),
(34,66,l),
(22,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
35 1 0 4 1 76 0 4 4 1 97 0 1 1 23 77 2 1 0 0 3 95 5 1 3 3 24 3 78 23 40 17 23 38 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 805;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(284,0,l),
(301,91,l),
(242,114,o),
(171,229,o),
(171,306,qs),
(171,383,o),
(240,522,o),
(371,609,o),
(461,609,qs),
(549,609,o),
(661,505,o),
(661,409,qs),
(661,348,o),
(614,221,o),
(514,117,o),
(441,91,q),
(424,0,l),
(698,0,l),
(714,87,l),
(587,87,l),
(675,137,o),
(779,318,o),
(779,427,qs),
(779,502,o),
(712,632,o),
(576,712,o),
(479,712,qs),
(365,712,o),
(172,607,o),
(57,423,o),
(57,309,qs),
(57,249,o),
(107,125,o),
(154,87,q),
(26,87,l),
(10,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
33 1 0 4 1 76 0 4 4 1 97 0 1 1 23 77 2 1 0 0 3 95 5 1 3 3 24 3 78 23 39 17 22 38 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 793;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(277,0,l),
(296,102,l),
(244,126,o),
(182,236,o),
(182,305,qs),
(182,376,o),
(242,509,o),
(366,595,o),
(455,595,qs),
(542,595,o),
(643,494,o),
(643,407,qs),
(643,349,o),
(600,231,o),
(511,131,o),
(443,102,q),
(424,0,l),
(697,0,l),
(715,98,l),
(597,98,l),
(682,150,o),
(777,325,o),
(777,428,qs),
(777,503,o),
(709,633,o),
(573,712,o),
(476,712,qs),
(361,712,o),
(167,608,o),
(53,425,o),
(53,311,qs),
(53,252,o),
(100,135,o),
(142,98,q),
(22,98,l),
(4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
33 1 0 4 1 76 0 4 4 1 97 0 1 1 23 77 2 1 0 0 3 95 5 1 3 3 24 3 78 23 39 17 22 38 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 787;
}
);
note = uni03A9;
unicode = 937;
},
{
glyphname = uni03BC;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,-220,l),
(136,13,l),
(169,-12,o),
(221,-12,qs),
(277,-12,o),
(375,40,o),
(406,85,q),
(400,0,l),
(495,0,l),
(582,496,l),
(476,496,l),
(430,237,ls),
(417,163,o),
(325,78,o),
(266,78,qs),
(169,78,o),
(169,174,qs),
(169,194,o),
(174,222,qs),
(222,496,l),
(116,496,l),
(-11,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
14 1 1 0 19 1 3 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
2 1 0 1 0 133 0 3 3 24 77 0 1 1 4 97 0 4 4 24 77 0 5 5 25 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 0 1 0 133 0 1 0 4 5 1 4 105 0 3 3 24 77 0 5 5 25 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 35 17 19 36 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 591;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(90,-220,l),
(132,20,l),
(169,-12,o),
(235,-12,qs),
(291,-12,o),
(391,42,o),
(424,88,q),
(414,0,l),
(490,0,l),
(577,496,l),
(493,496,l),
(448,239,ls),
(433,155,o),
(333,60,o),
(267,60,qs),
(162,60,o),
(162,164,qs),
(162,183,o),
(167,215,qs),
(216,496,l),
(132,496,l),
(6,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
14 1 1 0 19 1 3 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
2 1 0 1 0 133 0 3 3 24 77 0 1 1 4 97 0 4 4 24 77 0 5 5 25 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 0 1 0 133 0 1 0 4 5 1 4 105 0 3 3 24 77 0 5 5 25 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 35 17 19 36 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 583;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(97,-220,l),
(137,11,l),
(168,-12,o),
(216,-12,qs),
(272,-12,o),
(369,39,o),
(400,83,q),
(395,0,l),
(496,0,l),
(583,496,l),
(470,496,l),
(424,236,ls),
(411,165,o),
(323,84,o),
(266,84,qs),
(171,84,o),
(171,177,qs),
(171,196,o),
(176,224,qs),
(224,496,l),
(111,496,l),
(-17,-220,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
19 14 2 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
2 1 0 1 0 133 0 3 3 24 77 0 1 1 4 97 0 4 4 24 77 0 5 5 25 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 0 1 0 133 0 1 0 4 5 1 4 105 0 3 3 24 77 0 5 5 25 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 35 17 19 36 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 593;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(100,-220,l),
(140,6,l),
(167,-12,o),
(207,-12,qs),
(263,-12,o),
(357,38,o),
(388,81,q),
(386,0,l),
(499,0,l),
(586,496,l),
(458,496,l),
(412,235,ls),
(400,170,o),
(318,96,o),
(265,96,qs),
(176,96,o),
(176,183,qs),
(176,203,o),
(181,228,qs),
(228,496,l),
(100,496,l),
(-28,-220,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
19 14 2 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
2 1 0 1 0 133 0 3 3 24 77 0 1 1 4 97 0 4 4 24 77 0 5 5 25 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 0 1 0 133 0 1 0 4 5 1 4 105 0 3 3 24 77 0 5 5 25 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 35 17 19 36 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 598;
}
);
note = uni03BC;
unicode = 956;
},
{
glyphname = zero;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,-12,o),
(524,144,o),
(588,364,o),
(588,468,qs),
(588,583,o),
(487,712,o),
(378,712,qs),
(259,712,o),
(107,559,o),
(40,340,o),
(40,236,qs),
(40,121,o),
(142,-12,o),
(250,-12,qs)
);
},
{
closed = 1;
nodes = (
(148,83,o),
(148,244,qs),
(148,322,o),
(190,495,o),
(287,618,o),
(362,618,qs),
(421,618,o),
(479,535,o),
(479,458,qs),
(479,387,o),
(435,211,o),
(340,83,o),
(267,83,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 39 77 5 1 3 3 1 97 4 1 1 1 40 1 78 14 14 0 0 14 26 14 25 21 19 0 13 0 12 37 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(378,-12,o),
(530,147,o),
(594,369,o),
(594,472,qs),
(594,585,o),
(492,712,o),
(383,712,qs),
(263,712,o),
(110,556,o),
(44,335,o),
(44,231,qs),
(44,117,o),
(146,-12,o),
(255,-12,qs)
);
},
{
closed = 1;
nodes = (
(198,63,o),
(130,155,o),
(130,242,qs),
(130,321,o),
(177,504,o),
(285,637,o),
(370,637,qs),
(439,637,o),
(507,545,o),
(507,460,qs),
(507,382,o),
(457,197,o),
(350,63,o),
(268,63,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 39 77 5 1 3 3 1 97 4 1 1 1 40 1 78 14 14 0 0 14 27 14 26 21 19 0 13 0 12 37 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(370,-12,o),
(522,143,o),
(586,363,o),
(586,467,qs),
(586,582,o),
(485,712,o),
(376,712,qs),
(258,712,o),
(106,561,o),
(38,342,o),
(38,238,qs),
(38,122,o),
(140,-12,o),
(248,-12,qs)
);
},
{
closed = 1;
nodes = (
(154,89,o),
(154,245,qs),
(154,323,o),
(195,492,o),
(287,611,o),
(359,611,qs),
(415,611,o),
(470,531,o),
(470,457,qs),
(470,388,o),
(428,215,o),
(336,89,o),
(266,89,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 39 77 5 1 3 3 1 97 4 1 1 1 40 1 78 14 14 0 0 14 26 14 25 21 19 0 13 0 12 37 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 587;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(367,-12,o),
(518,141,o),
(582,360,o),
(582,464,qs),
(582,580,o),
(481,712,o),
(373,712,qs),
(255,712,o),
(103,563,o),
(35,346,o),
(35,241,qs),
(35,124,o),
(138,-12,o),
(245,-12,qs)
);
},
{
closed = 1;
nodes = (
(215,102,o),
(166,176,o),
(166,246,qs),
(166,324,o),
(203,486,o),
(287,598,o),
(353,598,qs),
(451,598,o),
(451,455,qs),
(451,390,o),
(413,224,o),
(329,102,o),
(265,102,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 39 77 5 1 3 3 1 97 4 1 1 1 40 1 78 14 14 0 0 14 26 14 25 20 18 0 13 0 12 37 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 580;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(514,0,l),
(530,89,l),
(358,89,l),
(467,700,l),
(411,700,l),
(153,610,l),
(136,517,l),
(345,582,l),
(257,89,l),
(56,89,l),
(40,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
3 2 2 0 1 1 76 0 1 1 33 77 2 1 0 0 3 96 0 3 3 34 3 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(519,0,l),
(531,69,l),
(353,69,l),
(465,700,l),
(421,700,l),
(155,606,l),
(142,532,l),
(367,605,l),
(272,69,l),
(57,69,l),
(45,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
3 2 2 0 1 1 76 0 1 1 33 77 2 1 0 0 3 96 0 3 3 34 3 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(512,0,l),
(529,96,l),
(360,96,l),
(467,700,l),
(408,700,l),
(152,611,l),
(134,512,l),
(337,574,l),
(252,96,l),
(55,96,l),
(38,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
3 2 2 0 1 1 76 0 1 1 33 77 2 1 0 0 3 96 0 3 3 34 3 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 587;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(509,0,l),
(528,109,l),
(363,109,l),
(468,700,l),
(401,700,l),
(150,614,l),
(130,502,l),
(322,559,l),
(242,109,l),
(54,109,l),
(35,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
3 2 2 0 1 1 76 0 1 1 33 77 2 1 0 0 3 96 0 3 3 34 3 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 580;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(491,0,l),
(507,90,l),
(170,90,l),
(370,262,ls),
(439,320,o),
(512,391,o),
(565,485,o),
(565,539,qs),
(565,616,o),
(467,712,o),
(378,712,qs),
(274,712,o),
(128,592,o),
(108,487,q),
(211,487,l),
(221,545,o),
(301,622,o),
(360,622,qs),
(408,622,o),
(459,568,o),
(459,526,qs),
(459,478,o),
(375,379,o),
(300,315,qs),
(278,296,l),
(34,83,l),
(19,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 39 77 0 3 3 4 95 0 4 4 34 4 78 17 23 34 18 39 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(491,0,l),
(504,70,l),
(141,70,l),
(382,278,ls),
(444,331,o),
(515,401,o),
(562,489,o),
(562,540,qs),
(562,619,o),
(465,712,o),
(381,712,qs),
(315,712,o),
(205,657,o),
(132,558,o),
(121,492,q),
(202,492,l),
(213,557,o),
(303,640,o),
(367,640,qs),
(421,640,o),
(477,578,o),
(477,530,qs),
(477,479,o),
(398,384,o),
(325,321,qs),
(305,303,l),
(42,73,l),
(29,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 39 77 0 3 3 4 95 0 4 4 34 4 78 17 23 35 18 39 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(491,0,l),
(508,96,l),
(179,96,l),
(366,256,l),
(384,271,ls),
(445,324,o),
(517,395,o),
(566,486,o),
(566,538,qs),
(566,615,o),
(468,712,o),
(376,712,qs),
(272,712,o),
(125,592,o),
(104,485,q),
(213,485,l),
(223,542,o),
(300,616,o),
(357,616,qs),
(403,616,o),
(452,564,o),
(452,524,qs),
(452,476,o),
(363,375,o),
(286,309,qs),
(269,294,l),
(31,86,l),
(16,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 39 77 0 3 3 4 95 0 4 4 34 4 78 17 24 34 18 39 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 587;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(491,0,l),
(510,109,l),
(198,109,l),
(358,245,l),
(383,266,ls),
(444,318,o),
(518,391,o),
(568,484,o),
(568,537,qs),
(568,613,o),
(470,712,o),
(374,712,qs),
(267,712,o),
(118,592,o),
(95,481,q),
(219,481,l),
(229,534,o),
(298,604,o),
(352,604,qs),
(394,604,o),
(440,557,o),
(440,521,qs),
(440,475,o),
(347,371,o),
(268,304,qs),
(251,289,l),
(25,93,l),
(9,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 39 77 0 3 3 4 95 0 4 4 34 4 78 17 24 34 18 39 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 580;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(341,-12,o),
(472,62,o),
(541,183,o),
(541,252,qs),
(541,304,o),
(493,383,o),
(408,426,o),
(354,426,q),
(585,614,l),
(600,700,l),
(153,700,l),
(137,611,l),
(452,611,l),
(188,399,l),
(238,327,l),
(276,347,o),
(316,347,qs),
(373,347,o),
(438,294,o),
(438,244,qs),
(438,203,o),
(399,127,o),
(322,79,o),
(268,79,qs),
(209,79,o),
(142,140,o),
(142,189,qs),
(142,198,o),
(143,203,q),
(39,203,l),
(37,181,o),
(37,174,qs),
(37,86,o),
(152,-12,o),
(252,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
20 1 2 5 19 1 0 2 7 1 1 0 3 76 0 0 2 1 2 0 1 128 0 5 0 2 0 5 2 105 0 3 3 4 95 0 4 4 33 77 0 1 1 6 97 7 1 6 6 40 6 78 0 0 0 34 0 33 18 17 19 37 36 20 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(346,-12,o),
(475,62,o),
(542,182,o),
(542,249,qs),
(542,303,o),
(490,381,o),
(405,420,o),
(356,420,qs),
(341,420,o),
(333,419,q),
(589,634,l),
(601,700,l),
(165,700,l),
(153,631,l),
(484,631,l),
(202,397,l),
(245,336,l),
(284,357,o),
(323,357,qs),
(387,357,o),
(460,298,o),
(460,243,qs),
(460,198,o),
(416,114,o),
(330,60,o),
(270,60,qs),
(203,60,o),
(127,129,o),
(127,184,qs),
(127,190,l),
(44,190,l),
(44,176,ls),
(44,88,o),
(157,-12,o),
(257,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
18 1 2 5 17 1 0 2 2 76 0 0 2 1 2 0 1 128 0 5 0 2 0 5 2 105 0 3 3 4 95 0 4 4 33 77 0 1 1 6 97 7 1 6 6 40 6 78 0 0 0 34 0 33 35 17 19 37 35 19 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(339,-12,o),
(471,62,o),
(541,183,o),
(541,252,qs),
(541,328,o),
(442,427,o),
(360,428,q),
(583,607,l),
(600,700,l),
(149,700,l),
(132,604,l),
(441,604,l),
(183,399,l),
(236,323,l),
(275,344,o),
(314,344,qs),
(368,344,o),
(430,292,o),
(430,244,qs),
(430,204,o),
(393,131,o),
(319,85,o),
(267,85,qs),
(210,85,o),
(146,143,o),
(146,191,q),
(148,207,l),
(37,207,l),
(35,194,o),
(35,173,qs),
(35,85,o),
(149,-12,o),
(250,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
19 1 2 5 18 1 0 2 6 1 1 0 3 76 0 0 2 1 2 0 1 128 0 5 0 2 0 5 2 105 0 3 3 4 95 0 4 4 33 77 0 1 1 6 97 7 1 6 6 40 6 78 0 0 0 32 0 31 18 17 19 37 35 20 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 587;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(336,-12,o),
(469,62,o),
(540,184,o),
(540,254,qs),
(540,325,o),
(455,427,o),
(374,433,q),
(580,594,l),
(599,700,l),
(141,700,l),
(121,591,l),
(419,591,l),
(174,400,l),
(231,317,l),
(269,337,o),
(309,337,qs),
(358,337,o),
(415,289,o),
(415,245,qs),
(415,207,o),
(381,139,o),
(313,97,o),
(265,97,qs),
(214,97,o),
(156,150,o),
(156,194,qs),
(156,200,o),
(158,216,q),
(34,216,l),
(30,193,o),
(30,171,qs),
(30,83,o),
(145,-12,o),
(246,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
26 20 2 2 3 19 1 0 2 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 3 3 4 95 0 4 4 33 77 0 1 1 5 98 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 33 77 0 1 1 5 98 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 33 0 32 17 19 37 36 20 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 580;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(431,0,l),
(456,140,l),
(547,140,l),
(564,233,l),
(472,233,l),
(506,423,l),
(406,423,l),
(373,233,l),
(149,233,l),
(463,700,l),
(356,700,l),
(33,224,l),
(18,140,l),
(350,140,l),
(325,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 33 77 0 6 6 34 6 78 17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(425,0,l),
(452,150,l),
(554,150,l),
(567,224,l),
(465,224,l),
(500,423,l),
(421,423,l),
(386,224,l),
(129,224,l),
(450,700,l),
(365,700,l),
(36,215,l),
(25,150,l),
(369,150,l),
(342,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 33 77 0 6 6 34 6 78 17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(432,0,l),
(457,137,l),
(545,137,l),
(562,235,l),
(474,235,l),
(507,423,l),
(401,423,l),
(368,235,l),
(155,235,l),
(467,700,l),
(353,700,l),
(31,226,l),
(16,137,l),
(344,137,l),
(319,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 33 77 0 6 6 34 6 78 17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 587;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(436,0,l),
(459,130,l),
(540,130,l),
(560,241,l),
(479,241,l),
(511,423,l),
(391,423,l),
(359,241,l),
(168,241,l),
(475,700,l),
(347,700,l),
(29,232,l),
(11,130,l),
(331,130,l),
(308,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 33 77 0 6 6 34 6 78 17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 580;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(339,-12,o),
(474,64,o),
(552,199,o),
(552,282,qs),
(552,338,o),
(505,428,o),
(416,481,o),
(356,481,qs),
(262,481,o),
(195,420,q),
(264,608,l),
(562,608,l),
(578,700,l),
(201,700,l),
(72,308,l),
(173,308,l),
(194,343,o),
(274,394,o),
(329,394,qs),
(383,394,o),
(448,322,o),
(448,265,qs),
(448,220,o),
(408,134,o),
(328,79,o),
(272,79,qs),
(217,79,o),
(145,140,o),
(144,193,q),
(40,193,l),
(39,191,o),
(39,182,qs),
(39,127,o),
(90,39,o),
(190,-12,o),
(258,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
25 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 5 5 4 95 0 4 4 33 77 0 2 2 6 97 0 6 6 36 77 0 1 1 7 97 8 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 33 77 0 1 1 7 97 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 35 0 34 34 17 17 18 37 34 36 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(343,-12,o),
(475,63,o),
(552,197,o),
(552,280,qs),
(552,339,o),
(501,430,o),
(411,481,o),
(354,481,qs),
(255,481,o),
(184,414,q),
(262,627,l),
(565,627,l),
(578,700,l),
(211,700,l),
(83,316,l),
(163,316,l),
(186,355,o),
(275,410,o),
(336,410,qs),
(397,410,o),
(470,329,o),
(470,266,qs),
(470,215,o),
(424,120,o),
(335,60,o),
(274,60,qs),
(214,60,o),
(131,128,o),
(130,189,q),
(47,189,l),
(47,184,ls),
(47,131,o),
(96,42,o),
(194,-12,o),
(264,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
24 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 5 5 4 95 0 4 4 33 77 0 2 2 6 97 0 6 6 36 77 0 1 1 7 97 8 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 33 77 0 1 1 7 97 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 34 0 33 34 17 17 18 37 34 35 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(338,-12,o),
(473,64,o),
(551,199,o),
(551,283,qs),
(551,338,o),
(506,428,o),
(418,481,o),
(357,481,qs),
(264,481,o),
(199,422,q),
(265,601,l),
(561,601,l),
(578,700,l),
(198,700,l),
(68,305,l),
(176,305,l),
(196,339,o),
(273,388,o),
(326,388,qs),
(378,388,o),
(440,319,o),
(440,265,qs),
(440,221,o),
(402,138,o),
(325,85,o),
(271,85,qs),
(218,85,o),
(149,145,o),
(148,194,q),
(37,194,l),
(36,192,o),
(36,181,qs),
(36,126,o),
(88,38,o),
(188,-12,o),
(256,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
25 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 5 5 4 95 0 4 4 33 77 0 2 2 6 97 0 6 6 36 77 0 1 1 7 97 8 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 33 77 0 1 1 7 97 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 35 0 34 34 17 17 18 37 34 36 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 587;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(335,-12,o),
(472,65,o),
(551,200,o),
(551,284,qs),
(551,337,o),
(509,426,o),
(422,481,o),
(358,481,qs),
(269,481,o),
(206,426,q),
(266,588,l),
(559,588,l),
(578,700,l),
(191,700,l),
(60,300,l),
(183,300,l),
(202,331,o),
(272,377,o),
(321,377,qs),
(368,377,o),
(425,314,o),
(425,264,qs),
(425,224,o),
(391,147,o),
(320,97,o),
(269,97,qs),
(220,97,o),
(157,153,o),
(157,197,q),
(32,197,l),
(30,191,o),
(30,179,qs),
(30,93,o),
(150,-12,o),
(252,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
24 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 2 0 2 3 0 128 0 0 1 1 0 112 0 5 5 4 95 0 4 4 33 77 0 2 2 6 97 0 6 6 36 77 0 1 1 7 98 8 1 7 7 40 7 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 5 5 4 95 0 4 4 33 77 0 2 2 6 97 0 6 6 36 77 0 1 1 7 98 8 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 33 77 0 1 1 7 98 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 34 0 33 34 17 17 18 37 34 35 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 580;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(349,-12,o),
(469,58,o),
(541,180,o),
(541,255,qs),
(541,312,o),
(494,400,o),
(409,450,o),
(356,450,qs),
(243,450,o),
(169,351,q),
(194,477,o),
(300,623,o),
(377,623,qs),
(426,623,o),
(475,565,o),
(475,515,q),
(569,515,l),
(572,564,o),
(538,654,o),
(456,712,o),
(390,712,qs),
(309,712,o),
(159,601,o),
(63,383,o),
(63,233,qs),
(63,133,o),
(161,-12,o),
(278,-12,qs)
);
},
{
closed = 1;
nodes = (
(232,80,o),
(168,146,o),
(168,201,qs),
(168,245,o),
(209,318,o),
(281,360,o),
(325,360,qs),
(378,360,o),
(441,292,o),
(441,239,qs),
(441,197,o),
(403,124,o),
(333,80,o),
(287,80,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
17 1 6 5 1 76 0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 39 77 8 1 6 6 4 97 7 1 4 4 40 4 78 28 28 0 0 28 41 28 40 35 33 0 27 0 26 35 34 19 37 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(351,-12,o),
(470,56,o),
(542,178,o),
(542,253,qs),
(542,305,o),
(499,394,o),
(414,448,o),
(354,448,qs),
(231,448,o),
(154,336,q),
(182,475,o),
(299,639,o),
(386,639,qs),
(439,639,o),
(494,575,o),
(494,520,q),
(569,520,l),
(572,570,o),
(538,657,o),
(459,712,o),
(397,712,qs),
(316,712,o),
(166,599,o),
(71,380,o),
(71,230,qs),
(71,128,o),
(166,-12,o),
(282,-12,qs)
);
},
{
closed = 1;
nodes = (
(230,62,o),
(158,136,o),
(158,198,qs),
(158,247,o),
(203,328,o),
(282,375,o),
(331,375,qs),
(390,375,o),
(460,299,o),
(460,240,qs),
(460,193,o),
(418,111,o),
(341,62,o),
(290,62,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
17 1 6 5 1 76 0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 39 77 8 1 6 6 4 97 7 1 4 4 40 4 78 28 28 0 0 28 41 28 40 35 33 0 27 0 26 35 34 19 37 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(348,-12,o),
(468,58,o),
(540,180,o),
(540,256,qs),
(540,314,o),
(491,403,o),
(408,451,o),
(356,451,qs),
(246,451,o),
(174,356,q),
(198,477,o),
(301,617,o),
(374,617,qs),
(421,617,o),
(469,562,o),
(469,513,q),
(568,513,l),
(572,561,o),
(538,652,o),
(454,712,o),
(387,712,qs),
(306,712,o),
(156,601,o),
(60,383,o),
(60,233,qs),
(60,134,o),
(159,-12,o),
(277,-12,qs)
);
},
{
closed = 1;
nodes = (
(233,86,o),
(171,149,o),
(171,202,qs),
(171,245,o),
(211,314,o),
(280,354,o),
(322,354,qs),
(373,354,o),
(434,290,o),
(434,239,qs),
(434,198,o),
(398,128,o),
(330,86,o),
(285,86,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
17 1 5 3 1 76 0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 39 77 8 1 6 6 4 97 7 1 4 4 40 4 78 28 28 0 0 28 41 28 40 35 33 0 27 0 26 35 34 19 37 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 587;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(346,-12,o),
(467,58,o),
(539,182,o),
(539,257,qs),
(539,319,o),
(488,407,o),
(405,452,o),
(357,452,qs),
(254,452,o),
(184,366,q),
(206,478,o),
(301,606,o),
(368,606,qs),
(412,606,o),
(456,555,o),
(456,510,q),
(568,510,l),
(572,558,o),
(538,650,o),
(452,712,o),
(382,712,qs),
(302,712,o),
(151,601,o),
(55,385,o),
(55,235,qs),
(55,175,o),
(94,63,o),
(192,-12,o),
(274,-12,qs)
);
},
{
closed = 1;
nodes = (
(235,98,o),
(178,156,o),
(178,204,qs),
(178,264,o),
(258,344,o),
(318,344,qs),
(365,344,o),
(421,285,o),
(421,238,qs),
(421,201,o),
(388,137,o),
(325,98,o),
(283,98,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
18 1 5 3 1 76 0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 39 77 8 1 6 6 4 97 7 1 4 4 40 4 78 29 29 0 0 29 41 29 40 36 34 0 28 0 27 35 34 19 38 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 580;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(211,0,l),
(609,623,l),
(622,700,l),
(120,700,l),
(104,610,l),
(493,610,l),
(98,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 95 0 1 1 33 77 0 2 2 34 2 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(204,0,l),
(611,637,l),
(622,700,l),
(130,700,l),
(117,628,l),
(521,628,l),
(113,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 95 0 1 1 33 77 0 2 2 34 2 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(213,0,l),
(608,618,l),
(622,700,l),
(117,700,l),
(99,603,l),
(484,603,l),
(93,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 95 0 1 1 33 77 0 2 2 34 2 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 587;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(218,0,l),
(606,609,l),
(622,700,l),
(110,700,l),
(90,591,l),
(465,591,l),
(83,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 95 0 1 1 33 77 0 2 2 34 2 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 580;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(338,-12,o),
(463,52,o),
(531,161,o),
(531,225,qs),
(531,278,o),
(481,357,o),
(429,375,q),
(482,395,o),
(569,480,o),
(569,550,qs),
(569,624,o),
(466,712,o),
(375,712,qs),
(299,712,o),
(181,656,o),
(117,561,o),
(117,503,qs),
(117,460,o),
(165,392,o),
(207,375,q),
(136,353,o),
(41,244,o),
(41,169,qs),
(41,82,o),
(164,-12,o),
(256,-12,qs)
);
},
{
closed = 1;
nodes = (
(213,79,o),
(146,134,o),
(146,183,qs),
(146,232,o),
(196,296,o),
(271,326,o),
(308,326,qs),
(362,326,o),
(428,273,o),
(428,222,qs),
(428,177,o),
(382,112,o),
(309,79,o),
(269,79,qs)
);
},
{
closed = 1;
nodes = (
(281,409,o),
(221,456,o),
(221,502,qs),
(221,556,o),
(301,624,o),
(359,624,qs),
(409,624,o),
(463,577,o),
(463,533,qs),
(463,495,o),
(425,438,o),
(362,409,o),
(328,409,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
18 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 39 77 7 1 3 3 1 97 6 1 1 1 40 1 78 40 40 26 26 0 0 40 52 40 51 47 45 26 39 26 38 33 31 0 25 0 24 43 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(340,-12,o),
(463,51,o),
(530,157,o),
(530,221,qs),
(530,275,o),
(477,357,o),
(422,373,q),
(480,394,o),
(569,480,o),
(569,550,qs),
(569,624,o),
(468,712,o),
(379,712,qs),
(306,712,o),
(192,657,o),
(128,562,o),
(128,504,qs),
(128,460,o),
(180,389,o),
(225,373,q),
(153,354,o),
(50,246,o),
(50,166,qs),
(50,104,o),
(114,24,o),
(211,-12,o),
(261,-12,qs)
);
},
{
closed = 1;
nodes = (
(209,62,o),
(135,122,o),
(135,176,qs),
(135,230,o),
(190,301,o),
(272,333,o),
(314,333,qs),
(373,333,o),
(447,276,o),
(447,218,qs),
(447,170,o),
(399,99,o),
(319,62,o),
(272,62,qs)
);
},
{
closed = 1;
nodes = (
(282,403,o),
(213,453,o),
(213,505,qs),
(213,566,o),
(301,640,o),
(367,640,qs),
(483,640,o),
(483,540,qs),
(483,496,o),
(440,434,o),
(372,403,o),
(334,403,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
19 6 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 39 77 7 1 3 3 1 97 6 1 1 1 40 1 78 41 41 27 27 0 0 41 52 41 51 47 45 27 40 27 39 34 32 0 26 0 25 44 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(336,-12,o),
(462,52,o),
(531,161,o),
(531,226,qs),
(531,278,o),
(482,356,o),
(431,375,q),
(482,395,o),
(568,480,o),
(568,550,qs),
(568,625,o),
(466,712,o),
(374,712,qs),
(296,712,o),
(178,655,o),
(113,559,o),
(113,502,qs),
(113,460,o),
(159,393,o),
(200,375,q),
(130,353,o),
(38,243,o),
(38,169,qs),
(38,84,o),
(158,-12,o),
(254,-12,qs)
);
},
{
closed = 1;
nodes = (
(214,84,o),
(150,138,o),
(150,185,qs),
(150,232,o),
(198,294,o),
(269,324,o),
(305,324,qs),
(357,324,o),
(421,272,o),
(421,223,qs),
(421,179,o),
(376,116,o),
(306,84,o),
(268,84,qs)
);
},
{
closed = 1;
nodes = (
(281,410,o),
(223,456,o),
(223,500,qs),
(223,552,o),
(300,619,o),
(356,619,qs),
(404,619,o),
(456,573,o),
(456,531,qs),
(456,494,o),
(419,439,o),
(359,410,o),
(326,410,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
18 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 39 77 7 1 3 3 1 97 6 1 1 1 40 1 78 40 40 26 26 0 0 40 52 40 51 47 45 26 39 26 38 33 31 0 25 0 24 43 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 587;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(334,-12,o),
(462,53,o),
(531,163,o),
(531,228,qs),
(531,338,o),
(436,376,q),
(484,396,o),
(568,480,o),
(568,550,qs),
(568,625,o),
(464,712,o),
(371,712,qs),
(291,712,o),
(170,655,o),
(105,558,o),
(105,501,qs),
(105,461,o),
(149,396,o),
(188,376,q),
(118,352,o),
(32,242,o),
(32,171,qs),
(32,87,o),
(147,-12,o),
(250,-12,qs)
);
},
{
closed = 1;
nodes = (
(217,95,o),
(157,147,o),
(157,190,qs),
(157,233,o),
(202,291,o),
(268,319,o),
(301,319,qs),
(349,319,o),
(408,270,o),
(408,225,qs),
(408,183,o),
(365,124,o),
(299,95,o),
(266,95,qs)
);
},
{
closed = 1;
nodes = (
(280,414,o),
(228,457,o),
(228,498,qs),
(228,546,o),
(300,608,o),
(351,608,qs),
(393,608,o),
(442,565,o),
(442,526,qs),
(442,493,o),
(408,442,o),
(352,414,o),
(322,414,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
18 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 39 77 7 1 3 3 1 97 6 1 1 1 40 1 78 39 39 25 25 0 0 39 51 39 50 46 44 25 38 25 37 32 30 0 24 0 23 43 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 580;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(318,-12,o),
(468,100,o),
(564,318,o),
(564,468,qs),
(564,567,o),
(466,712,o),
(349,712,qs),
(278,712,o),
(158,643,o),
(86,521,o),
(86,445,qs),
(86,389,o),
(133,300,o),
(218,250,o),
(271,250,qs),
(383,250,o),
(458,349,q),
(433,224,o),
(327,78,o),
(250,78,qs),
(201,78,o),
(152,135,o),
(152,185,q),
(58,185,l),
(55,136,o),
(89,46,o),
(171,-12,o),
(237,-12,qs)
);
},
{
closed = 1;
nodes = (
(249,341,o),
(186,408,o),
(186,461,qs),
(186,503,o),
(224,576,o),
(294,620,o),
(340,620,qs),
(395,620,o),
(459,554,o),
(459,499,qs),
(459,455,o),
(418,382,o),
(346,341,o),
(302,341,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
10 1 6 5 1 76 0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 39 77 0 1 1 4 97 7 1 4 4 40 4 78 28 28 0 0 28 41 28 40 35 33 0 27 0 26 38 35 34 19 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(320,-12,o),
(470,101,o),
(565,320,o),
(565,470,qs),
(565,572,o),
(470,712,o),
(354,712,qs),
(285,712,o),
(166,644,o),
(94,522,o),
(94,447,qs),
(94,395,o),
(137,306,o),
(222,252,o),
(282,252,qs),
(405,252,o),
(482,364,q),
(454,225,o),
(337,61,o),
(250,61,qs),
(197,61,o),
(142,125,o),
(142,180,q),
(67,180,l),
(64,130,o),
(98,43,o),
(177,-12,o),
(239,-12,qs)
);
},
{
closed = 1;
nodes = (
(246,325,o),
(176,401,o),
(176,460,qs),
(176,507,o),
(218,589,o),
(295,638,o),
(346,638,qs),
(406,638,o),
(478,564,o),
(478,502,qs),
(478,453,o),
(433,372,o),
(354,325,o),
(305,325,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
10 1 6 5 1 76 0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 39 77 0 1 1 4 97 7 1 4 4 40 4 78 28 28 0 0 28 41 28 40 35 33 0 27 0 26 38 35 34 19 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(317,-12,o),
(467,99,o),
(563,317,o),
(563,467,qs),
(563,566,o),
(465,712,o),
(347,712,qs),
(276,712,o),
(155,642,o),
(83,520,o),
(83,444,qs),
(83,386,o),
(132,297,o),
(215,249,o),
(267,249,qs),
(377,249,o),
(449,344,q),
(425,223,o),
(323,83,o),
(249,83,qs),
(202,83,o),
(155,138,o),
(155,187,q),
(55,187,l),
(52,138,o),
(85,47,o),
(169,-12,o),
(236,-12,qs)
);
},
{
closed = 1;
nodes = (
(250,346,o),
(189,411,o),
(189,461,qs),
(189,502,o),
(225,572,o),
(293,614,o),
(338,614,qs),
(390,614,o),
(452,551,o),
(452,498,qs),
(452,455,o),
(412,386,o),
(343,346,o),
(301,346,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
10 1 2 6 1 76 0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 39 77 0 1 1 4 97 7 1 4 4 40 4 78 28 28 0 0 28 41 28 40 35 33 0 27 0 26 38 35 34 19 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 587;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(315,-12,o),
(466,99,o),
(562,315,o),
(562,465,qs),
(562,525,o),
(523,637,o),
(425,712,o),
(343,712,qs),
(271,712,o),
(150,642,o),
(78,518,o),
(78,443,qs),
(78,381,o),
(129,293,o),
(212,248,o),
(260,248,qs),
(363,248,o),
(433,334,q),
(411,222,o),
(316,94,o),
(249,94,qs),
(205,94,o),
(161,145,o),
(161,190,q),
(49,190,l),
(45,142,o),
(79,50,o),
(165,-12,o),
(235,-12,qs)
);
},
{
closed = 1;
nodes = (
(252,356,o),
(196,415,o),
(196,462,qs),
(196,499,o),
(229,563,o),
(292,602,o),
(334,602,qs),
(382,602,o),
(439,544,o),
(439,496,qs),
(439,436,o),
(359,356,o),
(299,356,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
10 1 2 6 1 76 0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 39 77 0 1 1 4 97 7 1 4 4 40 4 78 29 29 0 0 29 41 29 40 35 33 0 28 0 27 38 35 34 19 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 580;
}
);
note = nine;
unicode = 57;
},
{
glyphname = uni24EA;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,51,o),
(194,130,o),
(115,267,o),
(115,350,qs),
(115,433,o),
(194,570,o),
(331,649,o),
(413,649,qs),
(496,649,o),
(633,570,o),
(712,433,o),
(712,350,qs),
(712,267,o),
(633,130,o),
(496,51,o),
(413,51,qs)
);
},
{
closed = 1;
nodes = (
(484,165,o),
(516,215,qs),
(548,265,o),
(548,350,qs),
(548,435,o),
(516,485,qs),
(484,535,o),
(414,535,qs),
(344,535,o),
(312,484,qs),
(279,435,o),
(279,350,qs),
(279,266,o),
(312,216,qs),
(344,165,o),
(414,165,qs)
);
},
{
closed = 1;
nodes = (
(383,230,o),
(368,261,qs),
(353,294,o),
(353,350,qs),
(353,408,o),
(368,439,qs),
(383,470,o),
(414,470,qs),
(445,470,o),
(460,439,qs),
(475,404,o),
(475,350,qs),
(475,298,o),
(460,261,qs),
(445,230,o),
(414,230,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
0 4 0 6 7 4 6 105 11 1 7 10 1 5 3 7 5 105 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78 48 48 32 32 16 16 0 0 48 63 48 62 56 54 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,46,o),
(192,128,o),
(110,267,o),
(110,350,qs),
(110,433,o),
(192,572,o),
(331,654,o),
(413,654,qs),
(496,654,o),
(635,572,o),
(717,433,o),
(717,350,qs),
(717,267,o),
(635,128,o),
(496,46,o),
(413,46,qs)
);
},
{
closed = 1;
nodes = (
(484,165,o),
(516,215,qs),
(548,265,o),
(548,350,qs),
(548,435,o),
(516,485,qs),
(484,535,o),
(414,535,qs),
(344,535,o),
(312,484,qs),
(279,435,o),
(279,350,qs),
(279,266,o),
(312,216,qs),
(344,165,o),
(414,165,qs)
);
},
{
closed = 1;
nodes = (
(380,223,o),
(362,256,qs),
(345,292,o),
(345,350,qs),
(345,408,o),
(362,444,qs),
(380,477,o),
(414,477,qs),
(449,477,o),
(465,444,qs),
(482,408,o),
(482,350,qs),
(482,292,o),
(465,256,qs),
(449,223,o),
(414,223,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
0 4 0 6 7 4 6 105 11 1 7 10 1 5 3 7 5 105 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78 48 48 32 32 16 16 0 0 48 63 48 62 56 54 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,53,o),
(195,131,o),
(117,267,o),
(117,350,qs),
(117,433,o),
(195,569,o),
(331,647,o),
(413,647,qs),
(496,647,o),
(632,569,o),
(710,433,o),
(710,350,qs),
(710,267,o),
(632,131,o),
(496,53,o),
(413,53,qs)
);
},
{
closed = 1;
nodes = (
(483,165,o),
(516,215,qs),
(548,265,o),
(548,350,qs),
(548,435,o),
(516,485,qs),
(483,535,o),
(414,535,qs),
(344,535,o),
(311,484,qs),
(279,436,o),
(279,350,qs),
(279,264,o),
(311,216,qs),
(344,165,o),
(414,165,qs)
);
},
{
closed = 1;
nodes = (
(384,232,o),
(369,263,qs),
(355,296,o),
(355,350,qs),
(355,404,o),
(369,437,qs),
(384,468,o),
(414,468,qs),
(443,468,o),
(458,437,qs),
(472,404,o),
(472,350,qs),
(472,296,o),
(458,263,qs),
(443,232,o),
(414,232,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
0 4 0 6 7 4 6 105 11 1 7 10 1 5 3 7 5 105 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78 48 48 32 32 16 16 0 0 48 63 48 62 56 54 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,56,o),
(197,133,o),
(120,267,o),
(120,350,qs),
(120,433,o),
(197,567,o),
(331,644,o),
(413,644,qs),
(496,644,o),
(630,567,o),
(707,433,o),
(707,350,qs),
(707,267,o),
(630,133,o),
(496,56,o),
(413,56,qs)
);
},
{
closed = 1;
nodes = (
(483,165,o),
(516,215,qs),
(548,265,o),
(548,350,qs),
(548,435,o),
(516,485,qs),
(483,535,o),
(414,535,qs),
(344,535,o),
(311,484,qs),
(279,436,o),
(279,350,qs),
(279,264,o),
(311,216,qs),
(344,165,o),
(414,165,qs)
);
},
{
closed = 1;
nodes = (
(387,236,o),
(373,266,qs),
(360,295,o),
(360,350,qs),
(360,405,o),
(373,434,qs),
(386,463,o),
(414,463,qs),
(441,463,o),
(454,434,qs),
(467,402,o),
(467,350,qs),
(467,299,o),
(454,266,qs),
(441,236,o),
(414,236,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
0 4 0 6 7 4 6 105 11 1 7 10 1 5 3 7 5 105 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78 48 48 32 32 16 16 0 0 48 63 48 62 56 54 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni24EA;
unicode = 9450;
},
{
glyphname = uni2780;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,51,o),
(194,130,o),
(115,267,o),
(115,350,qs),
(115,433,o),
(194,570,o),
(331,649,o),
(413,649,qs),
(496,649,o),
(633,570,o),
(712,433,o),
(712,350,qs),
(712,267,o),
(633,130,o),
(496,51,o),
(413,51,qs)
);
},
{
closed = 1;
nodes = (
(541,176,l),
(541,239,l),
(461,239,l),
(461,533,l),
(422,533,l),
(304,491,l),
(304,434,l),
(392,452,l),
(392,239,l),
(301,239,l),
(301,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
36 35 34 3 4 5 1 76 0 5 2 4 2 5 4 128 6 1 4 0 7 3 4 7 104 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78 16 16 0 0 42 41 40 39 38 37 33 32 16 31 16 30 24 22 0 15 0 14 38 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,46,o),
(192,128,o),
(110,267,o),
(110,350,qs),
(110,433,o),
(192,572,o),
(331,654,o),
(413,654,qs),
(496,654,o),
(635,572,o),
(717,433,o),
(717,350,qs),
(717,267,o),
(635,128,o),
(496,46,o),
(413,46,qs)
);
},
{
closed = 1;
nodes = (
(539,176,l),
(539,231,l),
(458,231,l),
(458,533,l),
(423,533,l),
(303,489,l),
(303,439,l),
(396,460,l),
(396,231,l),
(300,231,l),
(300,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
36 35 34 3 4 5 1 76 0 5 2 4 2 5 4 128 6 1 4 0 7 3 4 7 104 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78 16 16 0 0 42 41 40 39 38 37 33 32 16 31 16 30 24 22 0 15 0 14 38 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,53,o),
(195,131,o),
(117,267,o),
(117,350,qs),
(117,433,o),
(195,569,o),
(331,647,o),
(413,647,qs),
(496,647,o),
(632,569,o),
(710,433,o),
(710,350,qs),
(710,267,o),
(632,131,o),
(496,53,o),
(413,53,qs)
);
},
{
closed = 1;
nodes = (
(542,176,l),
(542,241,l),
(461,241,l),
(461,533,l),
(422,533,l),
(304,491,l),
(304,432,l),
(391,449,l),
(391,241,l),
(301,241,l),
(301,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
36 35 34 3 4 5 1 76 0 5 2 4 2 5 4 128 6 1 4 0 7 3 4 7 104 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78 16 16 0 0 42 41 40 39 38 37 33 32 16 31 16 30 24 22 0 15 0 14 38 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,56,o),
(197,133,o),
(120,267,o),
(120,350,qs),
(120,433,o),
(197,567,o),
(331,644,o),
(413,644,qs),
(496,644,o),
(630,567,o),
(707,433,o),
(707,350,qs),
(707,267,o),
(630,133,o),
(496,56,o),
(413,56,qs)
);
},
{
closed = 1;
nodes = (
(543,176,l),
(543,246,l),
(463,246,l),
(463,533,l),
(421,533,l),
(305,492,l),
(305,429,l),
(388,444,l),
(388,246,l),
(301,246,l),
(301,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
36 35 34 3 4 5 1 76 0 5 2 4 2 5 4 128 6 1 4 0 7 3 4 7 104 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78 16 16 0 0 42 41 40 39 38 37 33 32 16 31 16 30 24 22 0 15 0 14 38 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni2780;
unicode = 10112;
},
{
glyphname = uni2781;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(330,51,o),
(194,131,o),
(115,268,o),
(115,350,qs),
(115,432,o),
(194,569,o),
(330,649,o),
(413,649,qs),
(496,649,o),
(633,570,o),
(712,433,o),
(712,350,qs),
(712,267,o),
(633,130,o),
(496,51,o),
(413,51,qs)
);
},
{
closed = 1;
nodes = (
(540,176,l),
(540,239,l),
(390,239,l),
(450,300,ls),
(489,337,o),
(533,397,o),
(533,432,qs),
(533,480,o),
(470,540,o),
(415,540,qs),
(360,540,o),
(291,479,o),
(290,420,q),
(361,420,l),
(361,445,o),
(387,478,o),
(413,478,qs),
(436,478,o),
(462,453,o),
(462,430,qs),
(462,415,o),
(441,382,o),
(409,349,o),
(396,336,qs),
(290,227,l),
(290,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
32 1 8 7 1 76 0 5 4 7 4 5 7 128 0 6 0 4 5 6 4 105 0 7 0 8 3 7 8 103 0 2 2 0 97 0 0 0 39 77 10 1 3 3 1 97 9 1 1 1 40 1 78 16 16 0 0 57 56 55 54 48 46 44 43 41 39 16 31 16 30 24 22 0 15 0 14 38 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(677,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(677,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(330,46,o),
(190,128,o),
(109,268,o),
(109,350,qs),
(109,432,o),
(190,572,o),
(330,654,o),
(413,654,qs),
(495,654,o),
(634,572,o),
(716,433,o),
(716,350,qs),
(716,267,o),
(634,128,o),
(495,46,o),
(413,46,qs)
);
},
{
closed = 1;
nodes = (
(538,176,l),
(538,231,l),
(379,231,l),
(455,309,ls),
(489,341,o),
(530,399,o),
(530,432,qs),
(530,478,o),
(471,540,o),
(414,540,qs),
(359,540,o),
(293,477,o),
(292,421,q),
(356,421,l),
(356,449,o),
(385,484,o),
(413,484,qs),
(437,484,o),
(466,455,o),
(466,431,qs),
(466,416,o),
(445,382,o),
(414,349,o),
(401,336,qs),
(292,223,l),
(292,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
32 1 8 7 1 76 0 5 4 7 4 5 7 128 0 6 0 4 5 6 4 105 0 7 0 8 3 7 8 103 0 2 2 0 97 0 0 0 39 77 10 1 3 3 1 97 9 1 1 1 40 1 78 16 16 0 0 57 56 55 54 48 46 44 43 41 39 16 31 16 30 24 22 0 15 0 14 38 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(330,53,o),
(194,132,o),
(116,268,o),
(116,350,qs),
(116,432,o),
(194,568,o),
(330,647,o),
(413,647,qs),
(496,647,o),
(632,569,o),
(710,433,o),
(710,350,qs),
(710,267,o),
(632,131,o),
(496,53,o),
(413,53,qs)
);
},
{
closed = 1;
nodes = (
(541,176,l),
(541,241,l),
(393,241,l),
(448,296,ls),
(489,336,o),
(533,396,o),
(533,432,qs),
(533,481,o),
(469,540,o),
(415,540,qs),
(359,540,o),
(290,479,o),
(289,419,q),
(362,419,l),
(362,443,o),
(388,476,o),
(413,476,qs),
(435,476,o),
(460,451,o),
(460,429,qs),
(460,409,o),
(426,368,o),
(394,336,qs),
(289,228,l),
(289,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
32 1 8 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 4 7 4 5 114 0 6 0 4 5 6 4 105 0 7 0 8 3 7 8 103 0 2 2 0 97 0 0 0 39 77 10 1 3 3 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 5 4 7 4 5 7 128 0 6 0 4 5 6 4 105 0 7 0 8 3 7 8 103 0 2 2 0 97 0 0 0 39 77 10 1 3 3 1 97 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
16 16 0 0 56 55 54 53 47 45 43 42 40 38 16 31 16 30 24 22 0 15 0 14 38 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,56,o),
(197,133,o),
(120,267,o),
(120,350,qs),
(120,433,o),
(197,567,o),
(331,644,o),
(413,644,qs),
(496,644,o),
(630,567,o),
(707,433,o),
(707,350,qs),
(707,267,o),
(630,133,o),
(496,56,o),
(413,56,qs)
);
},
{
closed = 1;
nodes = (
(542,176,l),
(542,246,l),
(400,246,l),
(445,290,ls),
(476,320,o),
(509,356,o),
(535,405,o),
(535,432,qs),
(535,482,o),
(469,540,o),
(415,540,qs),
(359,540,o),
(289,480,o),
(288,418,q),
(365,418,l),
(365,441,o),
(389,472,o),
(413,472,qs),
(435,472,o),
(457,449,o),
(457,428,qs),
(457,409,o),
(424,369,o),
(391,336,qs),
(288,230,l),
(288,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
32 1 8 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 4 7 4 5 114 0 6 0 4 5 6 4 105 0 7 0 8 3 7 8 103 0 2 2 0 97 0 0 0 39 77 10 1 3 3 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 5 4 7 4 5 7 128 0 6 0 4 5 6 4 105 0 7 0 8 3 7 8 103 0 2 2 0 97 0 0 0 39 77 10 1 3 3 1 97 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
16 16 0 0 57 56 55 54 47 45 43 42 40 38 16 31 16 30 24 22 0 15 0 14 38 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni2781;
unicode = 10113;
},
{
glyphname = uni2782;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,51,o),
(194,130,o),
(115,267,o),
(115,350,qs),
(115,433,o),
(194,570,o),
(331,649,o),
(413,649,qs),
(496,649,o),
(633,570,o),
(712,433,o),
(712,350,qs),
(712,267,o),
(633,130,o),
(496,51,o),
(413,51,qs)
);
},
{
closed = 1;
nodes = (
(472,158,o),
(543,225,o),
(543,279,qs),
(543,321,o),
(496,382,o),
(447,388,q),
(532,461,l),
(532,522,l),
(294,522,l),
(294,460,l),
(441,460,l),
(338,369,l),
(377,323,l),
(396,334,o),
(415,334,qs),
(439,334,o),
(473,305,o),
(473,278,qs),
(473,250,o),
(443,221,o),
(414,221,qs),
(389,221,o),
(355,251,o),
(355,279,q),
(284,279,l),
(285,220,o),
(356,158,o),
(414,158,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
52 1 7 8 53 47 2 6 7 46 1 4 6 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 6 7 4 7 6 114 0 4 5 7 4 5 126 0 8 0 7 6 8 7 103 0 5 12 1 9 3 5 9 105 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 98 10 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 4 7 6 4 128 0 4 5 7 4 5 126 0 8 0 7 6 8 7 103 0 5 12 1 9 3 5 9 105 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 98 10 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
32 32 16 16 0 0 32 59 32 58 51 50 49 48 45 43 39 37 35 34 16 31 16 30 24 22 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(330,46,o),
(191,128,o),
(109,267,o),
(109,350,qs),
(109,433,o),
(191,572,o),
(330,654,o),
(413,654,qs),
(495,654,o),
(634,572,o),
(716,433,o),
(716,350,qs),
(716,267,o),
(634,128,o),
(495,46,o),
(413,46,qs)
);
},
{
closed = 1;
nodes = (
(474,158,o),
(542,227,o),
(542,277,qs),
(542,320,o),
(490,382,o),
(439,386,q),
(530,468,l),
(530,522,l),
(296,522,l),
(296,467,l),
(449,467,l),
(341,368,l),
(377,326,l),
(396,337,o),
(415,337,qs),
(442,337,o),
(479,306,o),
(479,277,qs),
(479,249,o),
(446,214,o),
(414,214,qs),
(386,214,o),
(349,248,o),
(349,275,q),
(285,275,l),
(287,218,o),
(358,158,o),
(414,158,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
52 1 7 8 53 47 2 6 7 46 1 4 6 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 6 7 4 7 6 114 0 4 5 7 4 5 126 0 8 0 7 6 8 7 103 0 5 12 1 9 3 5 9 105 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 98 10 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 4 7 6 4 128 0 4 5 7 4 5 126 0 8 0 7 6 8 7 103 0 5 12 1 9 3 5 9 105 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 98 10 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
32 32 16 16 0 0 32 59 32 58 51 50 49 48 45 43 39 37 35 34 16 31 16 30 24 22 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,53,o),
(195,131,o),
(116,267,o),
(116,350,qs),
(116,433,o),
(195,569,o),
(331,647,o),
(413,647,qs),
(496,647,o),
(632,569,o),
(710,433,o),
(710,350,qs),
(710,267,o),
(632,131,o),
(496,53,o),
(413,53,qs)
);
},
{
closed = 1;
nodes = (
(472,158,o),
(543,224,o),
(543,279,qs),
(543,322,o),
(498,382,o),
(450,389,q),
(532,459,l),
(532,522,l),
(293,522,l),
(293,458,l),
(438,458,l),
(336,369,l),
(377,322,l),
(394,332,o),
(414,332,qs),
(438,332,o),
(471,304,o),
(471,278,qs),
(471,251,o),
(441,223,o),
(414,223,qs),
(389,223,o),
(356,252,o),
(356,280,q),
(284,280,l),
(283,221,o),
(355,158,o),
(414,158,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
52 1 7 8 53 47 2 6 7 46 1 4 6 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 6 7 4 7 6 114 0 4 5 7 4 5 126 0 8 0 7 6 8 7 103 0 5 12 1 9 3 5 9 105 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 98 10 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 4 7 6 4 128 0 4 5 7 4 5 126 0 8 0 7 6 8 7 103 0 5 12 1 9 3 5 9 105 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 98 10 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
32 32 16 16 0 0 32 59 32 58 51 50 49 48 45 43 39 37 35 34 16 31 16 30 24 22 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,56,o),
(197,133,o),
(120,267,o),
(120,350,qs),
(120,433,o),
(197,567,o),
(331,644,o),
(413,644,qs),
(496,644,o),
(630,567,o),
(707,433,o),
(707,350,qs),
(707,267,o),
(630,133,o),
(496,56,o),
(413,56,qs)
);
},
{
closed = 1;
nodes = (
(471,158,o),
(544,223,o),
(544,280,qs),
(544,322,o),
(502,382,o),
(455,390,q),
(533,454,l),
(533,522,l),
(291,522,l),
(291,453,l),
(433,453,l),
(334,370,l),
(377,320,l),
(394,330,o),
(414,330,qs),
(435,330,o),
(467,304,o),
(467,279,qs),
(467,252,o),
(438,227,o),
(414,227,qs),
(391,227,o),
(360,254,o),
(360,283,q),
(283,283,l),
(282,222,o),
(353,158,o),
(414,158,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
52 1 7 8 53 47 2 6 7 46 1 4 6 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 7 4 7 6 114 0 4 5 5 4 112 0 8 0 7 6 8 7 103 0 5 12 1 9 3 5 9 106 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 97 10 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 6 7 4 7 6 4 128 0 4 5 5 4 112 0 8 0 7 6 8 7 103 0 5 12 1 9 3 5 9 106 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 97 10 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 4 7 6 4 128 0 4 5 7 4 5 126 0 8 0 7 6 8 7 103 0 5 12 1 9 3 5 9 106 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 97 10 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
32 32 16 16 0 0 32 59 32 58 51 50 49 48 45 43 39 37 35 34 16 31 16 30 24 22 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni2782;
unicode = 10114;
},
{
glyphname = uni2783;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(500,176,l),
(500,239,l),
(538,239,l),
(538,302,l),
(500,302,l),
(500,392,l),
(432,392,l),
(432,302,l),
(340,302,l),
(454,533,l),
(383,533,l),
(263,298,l),
(263,239,l),
(427,239,l),
(427,176,l)
);
},
{
closed = 1;
nodes = (
(331,51,o),
(194,130,o),
(115,267,o),
(115,350,qs),
(115,433,o),
(194,570,o),
(331,649,o),
(413,649,qs),
(496,649,o),
(633,570,o),
(712,433,o),
(712,350,qs),
(712,267,o),
(633,130,o),
(496,51,o),
(413,51,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
18 1 2 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 3 9 5 9 3 5 128 0 5 4 4 5 112 0 8 2 10 2 8 114 6 1 4 7 1 2 8 4 2 104 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 9 5 9 3 5 128 0 5 4 9 5 4 126 0 8 2 10 2 8 114 6 1 4 7 1 2 8 4 2 104 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 3 9 5 9 3 5 128 0 5 4 9 5 4 126 0 8 2 10 2 8 10 128 6 1 4 7 1 2 8 4 2 104 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
31 31 0 0 31 46 31 45 39 37 30 29 28 27 26 25 24 23 22 21 20 19 17 16 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(494,176,l),
(494,242,l),
(536,242,l),
(536,299,l),
(494,299,l),
(494,392,l),
(433,392,l),
(433,299,l),
(334,299,l),
(450,533,l),
(386,533,l),
(265,294,l),
(265,242,l),
(429,242,l),
(429,176,l)
);
},
{
closed = 1;
nodes = (
(330,46,o),
(191,128,o),
(109,267,o),
(109,350,qs),
(109,433,o),
(191,572,o),
(330,654,o),
(413,654,qs),
(495,654,o),
(634,572,o),
(716,433,o),
(716,350,qs),
(716,267,o),
(634,128,o),
(495,46,o),
(413,46,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
18 1 2 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 3 9 5 9 3 5 128 0 5 4 4 5 112 0 8 2 10 2 8 114 6 1 4 7 1 2 8 4 2 104 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 9 5 9 3 5 128 0 5 4 9 5 4 126 0 8 2 10 2 8 114 6 1 4 7 1 2 8 4 2 104 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 3 9 5 9 3 5 128 0 5 4 9 5 4 126 0 8 2 10 2 8 10 128 6 1 4 7 1 2 8 4 2 104 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
31 31 0 0 31 46 31 45 39 37 30 29 28 27 26 25 24 23 22 21 20 19 17 16 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(502,176,l),
(502,238,l),
(539,238,l),
(539,303,l),
(502,303,l),
(502,392,l),
(432,392,l),
(432,303,l),
(342,303,l),
(455,533,l),
(381,533,l),
(262,299,l),
(262,238,l),
(426,238,l),
(426,176,l)
);
},
{
closed = 1;
nodes = (
(331,53,o),
(195,131,o),
(116,267,o),
(116,350,qs),
(116,433,o),
(195,569,o),
(331,647,o),
(413,647,qs),
(496,647,o),
(632,569,o),
(710,433,o),
(710,350,qs),
(710,267,o),
(632,131,o),
(496,53,o),
(413,53,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
18 1 2 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 3 9 5 9 3 5 128 0 5 4 4 5 112 0 8 2 10 2 8 114 6 1 4 7 1 2 8 4 2 104 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 9 5 9 3 5 128 0 5 4 9 5 4 126 0 8 2 10 2 8 114 6 1 4 7 1 2 8 4 2 104 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 3 9 5 9 3 5 128 0 5 4 9 5 4 126 0 8 2 10 2 8 10 128 6 1 4 7 1 2 8 4 2 104 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
31 31 0 0 31 46 31 45 39 37 30 29 28 27 26 25 24 23 22 21 20 19 17 16 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(506,176,l),
(506,236,l),
(540,236,l),
(540,305,l),
(506,305,l),
(506,392,l),
(431,392,l),
(431,305,l),
(346,305,l),
(457,533,l),
(379,533,l),
(261,301,l),
(261,236,l),
(425,236,l),
(425,176,l)
);
},
{
closed = 1;
nodes = (
(331,56,o),
(197,133,o),
(120,267,o),
(120,350,qs),
(120,433,o),
(197,567,o),
(331,644,o),
(413,644,qs),
(496,644,o),
(630,567,o),
(707,433,o),
(707,350,qs),
(707,267,o),
(630,133,o),
(496,56,o),
(413,56,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
18 1 2 4 1 76 0 3 9 5 9 3 5 128 6 1 4 7 1 2 8 4 2 104 0 5 0 8 10 5 8 103 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78 31 31 0 0 31 46 31 45 39 37 30 29 28 27 26 25 24 23 22 21 20 19 17 16 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni2783;
unicode = 10115;
},
{
glyphname = uni2784;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,51,o),
(194,130,o),
(115,267,o),
(115,350,qs),
(115,433,o),
(194,570,o),
(331,649,o),
(413,649,qs),
(496,649,o),
(633,570,o),
(712,433,o),
(712,350,qs),
(712,267,o),
(633,130,o),
(496,51,o),
(413,51,qs)
);
},
{
closed = 1;
nodes = (
(473,160,o),
(545,233,o),
(545,291,qs),
(545,343,o),
(486,413,o),
(430,413,qs),
(409,413,o),
(371,400,o),
(359,386,q),
(374,461,l),
(522,461,l),
(522,524,l),
(319,524,l),
(289,317,l),
(359,317,l),
(366,334,o),
(398,354,o),
(418,354,qs),
(444,354,o),
(475,318,o),
(475,290,qs),
(475,262,o),
(443,223,o),
(417,223,qs),
(394,223,o),
(361,247,o),
(356,269,q),
(285,269,l),
(287,220,o),
(361,160,o),
(417,160,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 6 10 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 7 6 4 9 7 114 0 4 5 6 4 5 126 0 8 0 9 10 8 9 103 0 10 0 6 7 10 6 105 0 5 14 1 11 3 5 11 105 0 2 2 0 97 0 0 0 39 77 13 1 3 3 1 98 12 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 7 6 4 6 7 4 128 0 4 5 6 4 5 126 0 8 0 9 10 8 9 103 0 10 0 6 7 10 6 105 0 5 14 1 11 3 5 11 105 0 2 2 0 97 0 0 0 39 77 13 1 3 3 1 98 12 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
32 32 16 16 0 0 32 62 32 61 57 55 52 51 50 49 48 47 45 43 39 37 35 34 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(330,46,o),
(191,128,o),
(109,267,o),
(109,350,qs),
(109,433,o),
(191,572,o),
(330,654,o),
(413,654,qs),
(496,654,o),
(635,572,o),
(717,433,o),
(717,350,qs),
(717,267,o),
(635,128,o),
(496,46,o),
(413,46,qs)
);
},
{
closed = 1;
nodes = (
(473,160,o),
(544,232,o),
(544,290,qs),
(544,343,o),
(483,413,o),
(428,413,qs),
(407,413,o),
(367,398,o),
(354,384,q),
(371,467,l),
(520,467,l),
(520,524,l),
(321,524,l),
(291,320,l),
(354,320,l),
(362,338,o),
(397,359,o),
(418,359,qs),
(447,359,o),
(481,320,o),
(481,289,qs),
(481,259,o),
(445,216,o),
(417,216,qs),
(391,216,o),
(355,243,o),
(350,267,q),
(286,267,l),
(288,220,o),
(362,160,o),
(417,160,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 6 10 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 7 6 4 9 7 114 0 4 5 6 4 5 126 0 8 0 9 10 8 9 103 0 10 0 6 7 10 6 105 0 5 14 1 11 3 5 11 105 0 2 2 0 97 0 0 0 39 77 13 1 3 3 1 98 12 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 7 6 4 6 7 4 128 0 4 5 6 4 5 126 0 8 0 9 10 8 9 103 0 10 0 6 7 10 6 105 0 5 14 1 11 3 5 11 105 0 2 2 0 97 0 0 0 39 77 13 1 3 3 1 98 12 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
32 32 16 16 0 0 32 62 32 61 57 55 52 51 50 49 48 47 45 43 39 37 35 34 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,53,o),
(195,131,o),
(116,267,o),
(116,350,qs),
(116,433,o),
(195,569,o),
(331,647,o),
(413,647,qs),
(496,647,o),
(632,569,o),
(710,433,o),
(710,350,qs),
(710,267,o),
(632,131,o),
(496,53,o),
(413,53,qs)
);
},
{
closed = 1;
nodes = (
(473,160,o),
(545,233,o),
(545,291,qs),
(545,342,o),
(486,413,o),
(430,413,qs),
(410,413,o),
(372,400,o),
(360,387,q),
(375,458,l),
(522,458,l),
(522,524,l),
(318,524,l),
(288,316,l),
(361,316,l),
(368,332,o),
(399,352,o),
(417,352,qs),
(443,352,o),
(473,317,o),
(473,290,qs),
(473,263,o),
(442,225,o),
(416,225,qs),
(395,225,o),
(362,248,o),
(357,269,q),
(284,269,l),
(286,219,o),
(360,160,o),
(416,160,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 6 10 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 7 6 4 9 7 114 0 4 5 6 4 5 126 0 8 0 9 10 8 9 103 0 10 0 6 7 10 6 105 0 5 14 1 11 3 5 11 105 0 2 2 0 97 0 0 0 39 77 13 1 3 3 1 98 12 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 7 6 4 6 7 4 128 0 4 5 6 4 5 126 0 8 0 9 10 8 9 103 0 10 0 6 7 10 6 105 0 5 14 1 11 3 5 11 105 0 2 2 0 97 0 0 0 39 77 13 1 3 3 1 98 12 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
32 32 16 16 0 0 32 62 32 61 57 55 52 51 50 49 48 47 45 43 39 37 35 34 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,56,o),
(197,133,o),
(120,267,o),
(120,350,qs),
(120,433,o),
(197,567,o),
(331,644,o),
(413,644,qs),
(496,644,o),
(630,567,o),
(707,433,o),
(707,350,qs),
(707,267,o),
(630,133,o),
(496,56,o),
(413,56,qs)
);
},
{
closed = 1;
nodes = (
(473,160,o),
(546,234,o),
(546,291,qs),
(546,341,o),
(487,413,o),
(431,413,qs),
(412,413,o),
(375,400,o),
(363,388,q),
(377,454,l),
(523,454,l),
(523,524,l),
(317,524,l),
(287,314,l),
(364,314,l),
(370,329,o),
(400,348,o),
(417,348,qs),
(441,348,o),
(469,316,o),
(469,291,qs),
(469,265,o),
(439,229,o),
(416,229,qs),
(396,229,o),
(366,251,o),
(361,270,q),
(283,270,l),
(285,218,o),
(360,160,o),
(416,160,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 6 10 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 7 6 4 9 7 114 0 4 5 6 4 5 126 0 8 0 9 10 8 9 103 0 10 0 6 7 10 6 105 0 5 14 1 11 3 5 11 105 0 2 2 0 97 0 0 0 39 77 13 1 3 3 1 98 12 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 7 6 4 6 7 4 128 0 4 5 6 4 5 126 0 8 0 9 10 8 9 103 0 10 0 6 7 10 6 105 0 5 14 1 11 3 5 11 105 0 2 2 0 97 0 0 0 39 77 13 1 3 3 1 98 12 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
32 32 16 16 0 0 32 62 32 61 57 55 52 51 50 49 48 47 45 43 39 37 35 34 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni2784;
unicode = 10116;
},
{
glyphname = uni2785;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,51,o),
(194,130,o),
(115,267,o),
(115,350,qs),
(115,433,o),
(194,570,o),
(331,649,o),
(413,649,qs),
(496,649,o),
(633,570,o),
(712,433,o),
(712,350,qs),
(712,267,o),
(633,130,o),
(496,51,o),
(413,51,qs)
);
},
{
closed = 1;
nodes = (
(391,227,o),
(360,260,o),
(360,286,qs),
(360,310,o),
(392,342,o),
(415,342,qs),
(439,342,o),
(471,311,o),
(471,284,qs),
(471,257,o),
(438,227,o),
(416,227,qs)
);
},
{
closed = 1;
nodes = (
(474,165,o),
(540,237,o),
(540,287,qs),
(540,334,o),
(481,403,o),
(434,403,qs),
(407,403,o),
(363,377,o),
(352,357,q),
(354,476,o),
(417,476,qs),
(438,476,o),
(463,452,o),
(467,430,q),
(534,430,l),
(532,473,o),
(468,535,o),
(417,535,qs),
(347,535,o),
(280,421,o),
(280,339,qs),
(280,265,o),
(349,165,o),
(420,165,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
58 1 4 9 1 76 0 7 8 9 8 7 9 128 0 6 0 8 7 6 8 105 0 9 0 4 5 9 4 105 13 1 5 14 1 10 3 5 10 105 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 97 11 1 1 1 40 1 78 44 44 32 32 16 16 0 0 44 67 44 66 62 60 57 55 53 52 50 48 32 43 32 42 38 36 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,46,o),
(192,128,o),
(110,267,o),
(110,350,qs),
(110,433,o),
(192,572,o),
(331,654,o),
(413,654,qs),
(496,654,o),
(635,572,o),
(717,433,o),
(717,350,qs),
(717,267,o),
(635,128,o),
(496,46,o),
(413,46,qs)
);
},
{
closed = 1;
nodes = (
(389,221,o),
(354,258,o),
(354,285,qs),
(354,311,o),
(390,347,o),
(415,347,qs),
(442,347,o),
(476,311,o),
(476,284,qs),
(476,256,o),
(440,221,o),
(416,221,qs)
);
},
{
closed = 1;
nodes = (
(472,165,o),
(538,237,o),
(538,286,qs),
(538,335,o),
(477,402,o),
(430,402,qs),
(403,402,o),
(357,375,o),
(346,354,q),
(346,406,o),
(378,481,o),
(417,481,qs),
(462,481,o),
(471,432,q),
(531,432,l),
(529,473,o),
(468,535,o),
(417,535,qs),
(348,535,o),
(282,420,o),
(282,338,qs),
(282,265,o),
(348,165,o),
(419,165,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
58 1 4 9 1 76 0 7 8 9 8 7 9 128 0 6 0 8 7 6 8 105 0 9 0 4 5 9 4 105 13 1 5 14 1 10 3 5 10 105 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 97 11 1 1 1 40 1 78 44 44 32 32 16 16 0 0 44 67 44 66 62 60 56 54 53 52 50 48 32 43 32 42 38 36 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,53,o),
(195,131,o),
(117,267,o),
(117,350,qs),
(117,433,o),
(195,569,o),
(331,647,o),
(413,647,qs),
(496,647,o),
(632,569,o),
(710,433,o),
(710,350,qs),
(710,267,o),
(632,131,o),
(496,53,o),
(413,53,qs)
);
},
{
closed = 1;
nodes = (
(391,229,o),
(361,261,o),
(361,286,qs),
(361,309,o),
(392,340,o),
(414,340,qs),
(437,340,o),
(469,310,o),
(469,284,qs),
(469,258,o),
(436,229,o),
(416,229,qs)
);
},
{
closed = 1;
nodes = (
(474,165,o),
(540,237,o),
(540,287,qs),
(540,334,o),
(481,403,o),
(435,403,qs),
(408,403,o),
(364,376,o),
(354,357,q),
(356,474,o),
(417,474,qs),
(456,474,o),
(466,429,q),
(534,429,l),
(532,473,o),
(468,535,o),
(417,535,qs),
(347,535,o),
(279,421,o),
(279,339,qs),
(279,264,o),
(348,165,o),
(420,165,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
57 1 4 9 1 76 0 7 8 9 8 7 9 128 0 6 0 8 7 6 8 105 0 9 0 4 5 9 4 105 13 1 5 14 1 10 3 5 10 105 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 97 11 1 1 1 40 1 78 44 44 32 32 16 16 0 0 44 66 44 65 61 59 56 54 53 52 50 48 32 43 32 42 38 36 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,56,o),
(197,133,o),
(120,267,o),
(120,350,qs),
(120,433,o),
(197,567,o),
(331,644,o),
(413,644,qs),
(496,644,o),
(630,567,o),
(707,433,o),
(707,350,qs),
(707,267,o),
(630,133,o),
(496,56,o),
(413,56,qs)
);
},
{
closed = 1;
nodes = (
(393,233,o),
(365,263,o),
(365,286,qs),
(365,308,o),
(393,336,o),
(414,336,qs),
(435,336,o),
(465,310,o),
(465,284,qs),
(465,259,o),
(435,233,o),
(416,233,qs)
);
},
{
closed = 1;
nodes = (
(475,165,o),
(541,237,o),
(541,287,qs),
(541,333,o),
(483,404,o),
(437,404,qs),
(411,404,o),
(369,378,o),
(358,359,q),
(359,407,o),
(383,470,o),
(417,470,qs),
(436,470,o),
(459,448,o),
(463,428,q),
(536,428,l),
(534,474,o),
(468,535,o),
(417,535,qs),
(347,535,o),
(278,422,o),
(278,340,qs),
(278,264,o),
(349,165,o),
(420,165,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
59 1 4 9 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 7 8 9 8 7 114 0 6 0 8 7 6 8 105 0 9 0 4 5 9 4 105 13 1 5 14 1 10 3 5 10 105 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 97 11 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 7 8 9 8 7 9 128 0 6 0 8 7 6 8 105 0 9 0 4 5 9 4 105 13 1 5 14 1 10 3 5 10 105 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 97 11 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
44 44 32 32 16 16 0 0 44 68 44 67 63 61 57 55 53 52 50 48 32 43 32 42 38 36 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni2785;
unicode = 10117;
},
{
glyphname = uni2786;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(408,167,l),
(549,473,l),
(549,524,l),
(283,524,l),
(283,463,l),
(471,463,l),
(333,167,l)
);
},
{
closed = 1;
nodes = (
(331,51,o),
(194,130,o),
(115,267,o),
(115,350,qs),
(115,433,o),
(194,570,o),
(331,649,o),
(413,649,qs),
(496,649,o),
(633,570,o),
(712,433,o),
(712,350,qs),
(712,267,o),
(633,130,o),
(496,51,o),
(413,51,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
20 1 2 3 1 76 0 4 2 6 2 4 6 128 0 3 0 2 4 3 2 103 0 5 5 0 97 0 0 0 39 77 8 1 6 6 1 97 7 1 1 1 40 1 78 23 23 0 0 23 38 23 37 31 29 22 21 19 18 17 16 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(404,167,l),
(547,478,l),
(547,524,l),
(285,524,l),
(285,469,l),
(478,469,l),
(336,167,l)
);
},
{
closed = 1;
nodes = (
(331,46,o),
(192,128,o),
(110,267,o),
(110,350,qs),
(110,433,o),
(192,572,o),
(331,654,o),
(413,654,qs),
(496,654,o),
(635,572,o),
(717,433,o),
(717,350,qs),
(717,267,o),
(635,128,o),
(496,46,o),
(413,46,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
20 1 2 3 1 76 0 4 2 6 2 4 6 128 0 3 0 2 4 3 2 103 0 5 5 0 97 0 0 0 39 77 8 1 6 6 1 97 7 1 1 1 40 1 78 23 23 0 0 23 38 23 37 31 29 22 21 19 18 17 16 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(409,167,l),
(549,471,l),
(549,524,l),
(282,524,l),
(282,460,l),
(469,460,l),
(331,167,l)
);
},
{
closed = 1;
nodes = (
(331,53,o),
(195,131,o),
(117,267,o),
(117,350,qs),
(117,433,o),
(195,569,o),
(331,647,o),
(413,647,qs),
(496,647,o),
(632,569,o),
(710,433,o),
(710,350,qs),
(710,267,o),
(632,131,o),
(496,53,o),
(413,53,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
20 1 2 3 1 76 0 4 2 6 2 4 6 128 0 3 0 2 4 3 2 103 0 5 5 0 97 0 0 0 39 77 8 1 6 6 1 97 7 1 1 1 40 1 78 23 23 0 0 23 38 23 37 31 29 22 21 19 18 17 16 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(412,167,l),
(550,468,l),
(550,524,l),
(281,524,l),
(281,456,l),
(464,456,l),
(329,167,l)
);
},
{
closed = 1;
nodes = (
(331,56,o),
(197,133,o),
(120,267,o),
(120,350,qs),
(120,433,o),
(197,567,o),
(331,644,o),
(413,644,qs),
(496,644,o),
(630,567,o),
(707,433,o),
(707,350,qs),
(707,267,o),
(630,133,o),
(496,56,o),
(413,56,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
20 1 2 3 1 76 0 4 2 6 2 4 6 128 0 3 0 2 4 3 2 103 0 5 5 0 97 0 0 0 39 77 8 1 6 6 1 97 7 1 1 1 40 1 78 23 23 0 0 23 38 23 37 31 29 22 21 19 18 17 16 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni2786;
unicode = 10118;
},
{
glyphname = uni2787;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(149,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(149,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(359,226,o),
(359,278,qs),
(359,305,o),
(390,332,o),
(415,332,qs),
(440,332,o),
(469,304,o),
(469,278,qs),
(469,253,o),
(440,226,o),
(415,226,qs)
);
},
{
closed = 1;
nodes = (
(331,51,o),
(194,131,o),
(115,268,o),
(115,350,qs),
(115,433,o),
(194,570,o),
(331,649,o),
(413,649,qs),
(496,649,o),
(633,569,o),
(712,432,o),
(712,350,qs),
(712,268,o),
(633,131,o),
(496,51,o),
(413,51,qs)
);
},
{
closed = 1;
nodes = (
(467,165,o),
(540,221,o),
(540,272,qs),
(540,304,o),
(512,352,o),
(484,364,q),
(506,374,o),
(532,415,o),
(532,439,qs),
(532,485,o),
(464,535,o),
(414,535,qs),
(361,535,o),
(295,484,o),
(295,439,qs),
(295,389,o),
(344,364,q),
(316,352,o),
(287,303,o),
(287,272,qs),
(287,223,o),
(362,165,o),
(414,165,qs)
);
},
{
closed = 1;
nodes = (
(393,385,o),
(368,410,o),
(368,430,qs),
(368,477,o),
(414,477,qs),
(436,477,o),
(460,452,o),
(460,430,qs),
(460,409,o),
(436,385,o),
(414,385,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
59 48 2 2 9 1 76 0 6 0 8 9 6 8 105 14 1 9 0 2 3 9 2 105 11 1 3 13 1 7 5 3 7 105 0 4 4 0 97 0 0 0 39 77 12 1 5 5 1 97 10 1 1 1 40 1 78 66 66 43 43 27 27 16 16 0 0 66 76 66 75 72 70 43 65 43 64 54 52 27 42 27 41 35 33 16 26 16 25 22 20 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(149,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(149,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(384,220,o),
(353,249,o),
(353,276,qs),
(353,306,o),
(387,334,o),
(414,334,qs),
(441,334,o),
(474,305,o),
(474,276,qs),
(474,249,o),
(441,220,o),
(414,220,qs)
);
},
{
closed = 1;
nodes = (
(331,46,o),
(192,128,o),
(110,268,o),
(110,350,qs),
(110,432,o),
(192,572,o),
(331,654,o),
(413,654,qs),
(496,654,o),
(636,572,o),
(717,432,o),
(717,350,qs),
(717,268,o),
(636,128,o),
(496,46,o),
(413,46,qs)
);
},
{
closed = 1;
nodes = (
(465,165,o),
(538,221,o),
(538,271,qs),
(538,303,o),
(507,353,o),
(479,363,q),
(505,375,o),
(530,417,o),
(530,439,qs),
(530,482,o),
(464,535,o),
(413,535,qs),
(361,535,o),
(297,483,o),
(297,439,qs),
(297,387,o),
(348,363,q),
(320,354,o),
(288,302,o),
(288,271,qs),
(288,222,o),
(362,165,o),
(413,165,qs)
);
},
{
closed = 1;
nodes = (
(389,383,o),
(362,410,o),
(362,432,qs),
(362,482,o),
(413,482,qs),
(437,482,o),
(465,456,o),
(465,432,qs),
(465,411,o),
(440,383,o),
(413,383,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
60 49 2 2 9 1 76 0 6 0 8 9 6 8 105 14 1 9 0 2 3 9 2 105 11 1 3 13 1 7 5 3 7 105 0 4 4 0 97 0 0 0 39 77 12 1 5 5 1 97 10 1 1 1 40 1 78 67 67 44 44 28 28 16 16 0 0 67 77 67 76 73 71 44 66 44 65 55 53 28 43 28 42 36 34 16 27 16 26 22 20 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(360,227,o),
(360,279,qs),
(360,305,o),
(390,331,o),
(415,331,qs),
(439,331,o),
(467,304,o),
(467,279,qs),
(467,254,o),
(439,227,o),
(415,227,qs)
);
},
{
closed = 1;
nodes = (
(331,53,o),
(195,131,o),
(117,267,o),
(117,350,qs),
(117,433,o),
(195,569,o),
(331,647,o),
(413,647,qs),
(496,647,o),
(632,568,o),
(710,432,o),
(710,350,qs),
(710,268,o),
(632,132,o),
(496,53,o),
(413,53,qs)
);
},
{
closed = 1;
nodes = (
(467,165,o),
(541,221,o),
(541,272,qs),
(541,304,o),
(513,352,o),
(485,364,q),
(506,374,o),
(532,414,o),
(532,439,qs),
(532,485,o),
(463,535,o),
(414,535,qs),
(361,535,o),
(294,484,o),
(294,439,qs),
(294,391,o),
(342,364,q),
(314,352,o),
(286,303,o),
(286,272,qs),
(286,223,o),
(362,165,o),
(414,165,qs)
);
},
{
closed = 1;
nodes = (
(393,385,o),
(369,409,o),
(369,429,qs),
(369,475,o),
(414,475,qs),
(435,475,o),
(458,451,o),
(458,429,qs),
(458,408,o),
(435,385,o),
(414,385,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
59 48 2 2 9 1 76 0 6 0 8 9 6 8 105 14 1 9 0 2 3 9 2 105 11 1 3 13 1 7 5 3 7 105 0 4 4 0 97 0 0 0 39 77 12 1 5 5 1 97 10 1 1 1 40 1 78 66 66 43 43 27 27 16 16 0 0 66 76 66 75 72 70 43 65 43 64 54 52 27 42 27 41 35 33 16 26 16 25 22 20 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(364,231,o),
(364,280,qs),
(364,305,o),
(392,330,o),
(415,330,qs),
(438,330,o),
(464,303,o),
(464,280,qs),
(464,257,o),
(438,231,o),
(415,231,qs)
);
},
{
closed = 1;
nodes = (
(331,56,o),
(197,133,o),
(120,267,o),
(120,350,qs),
(120,433,o),
(197,567,o),
(331,644,o),
(413,644,qs),
(496,644,o),
(630,567,o),
(707,433,o),
(707,350,qs),
(707,267,o),
(630,133,o),
(496,56,o),
(413,56,qs)
);
},
{
closed = 1;
nodes = (
(468,165,o),
(542,222,o),
(542,272,qs),
(542,340,o),
(488,364,q),
(507,374,o),
(533,413,o),
(533,439,qs),
(533,487,o),
(462,535,o),
(414,535,qs),
(361,535,o),
(293,484,o),
(293,439,qs),
(293,393,o),
(339,364,q),
(285,337,o),
(285,272,qs),
(285,224,o),
(361,165,o),
(414,165,qs)
);
},
{
closed = 1;
nodes = (
(395,386,o),
(373,408,o),
(373,428,qs),
(373,471,o),
(414,471,qs),
(454,471,o),
(454,428,qs),
(454,386,o),
(414,386,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
58 47 2 2 9 1 76 0 6 0 8 9 6 8 105 14 1 9 0 2 3 9 2 105 11 1 3 13 1 7 5 3 7 105 0 4 4 0 97 0 0 0 39 77 12 1 5 5 1 97 10 1 1 1 40 1 78 64 64 43 43 27 27 16 16 0 0 64 72 64 71 68 66 43 63 43 62 53 51 27 42 27 41 35 33 16 26 16 25 22 20 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni2787;
unicode = 10119;
},
{
glyphname = uni2788;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,51,o),
(194,130,o),
(115,267,o),
(115,350,qs),
(115,433,o),
(194,570,o),
(331,649,o),
(413,649,qs),
(496,649,o),
(633,570,o),
(712,433,o),
(712,350,qs),
(712,267,o),
(633,130,o),
(496,51,o),
(413,51,qs)
);
},
{
closed = 1;
nodes = (
(478,165,o),
(546,277,o),
(546,361,qs),
(546,434,o),
(479,535,o),
(406,535,qs),
(354,535,o),
(287,464,o),
(287,414,qs),
(287,378,o),
(318,325,o),
(367,297,o),
(393,297,qs),
(420,297,o),
(462,324,o),
(475,344,q),
(474,296,o),
(445,225,o),
(410,225,qs),
(370,225,o),
(359,270,q),
(293,270,l),
(295,226,o),
(357,165,o),
(409,165,qs)
);
},
{
closed = 1;
nodes = (
(387,359,o),
(356,391,o),
(356,416,qs),
(356,441,o),
(387,473,o),
(410,473,qs),
(435,473,o),
(467,440,o),
(467,415,qs),
(467,391,o),
(435,359,o),
(412,359,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
40 1 6 10 1 76 0 4 6 5 6 4 5 128 0 7 0 9 10 7 9 105 14 1 10 0 6 4 10 6 105 0 5 13 1 8 3 5 8 105 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 98 11 1 1 1 40 1 78 57 57 32 32 16 16 0 0 57 68 57 67 63 61 32 56 32 55 51 49 44 42 38 36 35 34 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(330,46,o),
(191,128,o),
(109,267,o),
(109,350,qs),
(109,433,o),
(191,572,o),
(330,654,o),
(413,654,qs),
(495,654,o),
(634,572,o),
(716,433,o),
(716,350,qs),
(716,267,o),
(634,128,o),
(495,46,o),
(413,46,qs)
);
},
{
closed = 1;
nodes = (
(478,165,o),
(545,279,o),
(545,362,qs),
(545,432,o),
(480,535,o),
(407,535,qs),
(355,535,o),
(288,463,o),
(288,414,qs),
(288,364,o),
(351,298,o),
(396,298,qs),
(425,298,o),
(469,326,o),
(481,346,q),
(480,294,o),
(448,219,o),
(410,219,qs),
(365,219,o),
(355,268,q),
(295,268,l),
(300,222,o),
(360,165,o),
(409,165,qs)
);
},
{
closed = 1;
nodes = (
(384,353,o),
(351,388,o),
(351,416,qs),
(351,443,o),
(384,479,o),
(411,479,qs),
(438,479,o),
(472,443,o),
(472,415,qs),
(472,389,o),
(438,353,o),
(412,353,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
40 1 6 10 1 76 0 4 6 5 6 4 5 128 0 7 0 9 10 7 9 105 14 1 10 0 6 4 10 6 105 0 5 13 1 8 3 5 8 105 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 98 11 1 1 1 40 1 78 56 56 32 32 16 16 0 0 56 67 56 66 62 60 32 55 32 54 50 48 44 42 38 36 35 34 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,53,o),
(195,131,o),
(116,267,o),
(116,350,qs),
(116,433,o),
(195,569,o),
(331,647,o),
(413,647,qs),
(496,647,o),
(632,569,o),
(710,433,o),
(710,350,qs),
(710,267,o),
(632,131,o),
(496,53,o),
(413,53,qs)
);
},
{
closed = 1;
nodes = (
(477,165,o),
(546,276,o),
(546,361,qs),
(546,434,o),
(479,535,o),
(406,535,qs),
(353,535,o),
(286,463,o),
(286,413,qs),
(286,376,o),
(318,324,o),
(366,297,o),
(391,297,qs),
(418,297,o),
(460,323,o),
(472,343,q),
(470,226,o),
(409,226,qs),
(389,226,o),
(365,248,o),
(360,271,q),
(292,271,l),
(294,228,o),
(356,165,o),
(408,165,qs)
);
},
{
closed = 1;
nodes = (
(387,360,o),
(357,392,o),
(357,416,qs),
(357,440,o),
(388,471,o),
(410,471,qs),
(434,471,o),
(465,439,o),
(465,414,qs),
(465,391,o),
(434,360,o),
(411,360,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 6 10 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 4 6 5 5 4 114 0 7 0 9 10 7 9 105 14 1 10 0 6 4 10 6 105 0 5 13 1 8 3 5 8 106 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 97 11 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 4 6 5 6 4 5 128 0 7 0 9 10 7 9 105 14 1 10 0 6 4 10 6 105 0 5 13 1 8 3 5 8 106 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 97 11 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
57 57 32 32 16 16 0 0 57 68 57 67 63 61 32 56 32 55 51 49 44 42 39 37 35 34 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,56,o),
(197,133,o),
(120,267,o),
(120,350,qs),
(120,433,o),
(197,567,o),
(331,644,o),
(413,644,qs),
(496,644,o),
(630,567,o),
(707,433,o),
(707,350,qs),
(707,267,o),
(630,133,o),
(496,56,o),
(413,56,qs)
);
},
{
closed = 1;
nodes = (
(477,165,o),
(547,274,o),
(547,360,qs),
(547,435,o),
(479,535,o),
(405,535,qs),
(351,535,o),
(285,464,o),
(285,413,qs),
(285,374,o),
(318,321,o),
(366,296,o),
(389,296,qs),
(415,296,o),
(455,322,o),
(468,341,q),
(465,230,o),
(409,230,qs),
(373,230,o),
(363,272,q),
(290,272,l),
(290,246,o),
(318,196,o),
(372,165,o),
(408,165,qs)
);
},
{
closed = 1;
nodes = (
(389,364,o),
(360,393,o),
(360,416,qs),
(360,438,o),
(389,467,o),
(409,467,qs),
(431,467,o),
(461,437,o),
(461,414,qs),
(461,393,o),
(432,364,o),
(411,364,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
40 1 6 10 1 76 0 4 6 5 6 4 5 128 0 7 0 9 10 7 9 105 14 1 10 0 6 4 10 6 105 0 5 13 1 8 3 5 8 105 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 98 11 1 1 1 40 1 78 57 57 32 32 16 16 0 0 57 68 57 67 63 61 32 56 32 55 51 49 44 42 39 37 36 35 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni2788;
unicode = 10120;
},
{
glyphname = uni278A;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(300,239,l),
(392,239,l),
(392,452,l),
(304,434,l),
(304,491,l),
(422,533,l),
(460,533,l),
(460,239,l),
(541,239,l),
(541,176,l),
(300,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
23 22 21 3 2 3 1 76 4 1 2 3 5 3 2 5 128 0 3 3 0 97 0 0 0 39 77 7 1 5 5 1 97 6 1 1 1 40 1 78 16 16 0 0 16 26 16 26 25 24 20 19 18 17 0 15 0 14 38 8 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(299,231,l),
(395,231,l),
(395,460,l),
(302,439,l),
(302,489,l),
(423,533,l),
(457,533,l),
(457,231,l),
(539,231,l),
(539,176,l),
(299,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
23 22 21 3 2 3 1 76 4 1 2 3 5 3 2 5 128 0 3 3 0 97 0 0 0 39 77 7 1 5 5 1 97 6 1 1 1 40 1 78 16 16 0 0 16 26 16 26 25 24 20 19 18 17 0 15 0 14 38 8 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(300,241,l),
(390,241,l),
(390,449,l),
(304,432,l),
(304,491,l),
(422,533,l),
(461,533,l),
(461,241,l),
(542,241,l),
(542,176,l),
(300,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
23 22 21 3 2 3 1 76 4 1 2 3 5 3 2 5 128 0 3 3 0 97 0 0 0 39 77 7 1 5 5 1 97 6 1 1 1 40 1 78 16 16 0 0 16 26 16 26 25 24 20 19 18 17 0 15 0 14 38 8 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(301,246,l),
(388,246,l),
(388,444,l),
(305,429,l),
(305,492,l),
(421,533,l),
(463,533,l),
(463,246,l),
(543,246,l),
(543,176,l),
(301,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
23 22 21 3 2 3 1 76 4 1 2 3 5 3 2 5 128 0 3 3 0 97 0 0 0 39 77 7 1 5 5 1 97 6 1 1 1 40 1 78 16 16 0 0 16 26 16 26 25 24 20 19 18 17 0 15 0 14 38 8 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni278A;
unicode = 10122;
},
{
glyphname = uni278B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(290,227,l),
(396,336,ls),
(409,349,o),
(441,382,o),
(462,415,o),
(462,430,qs),
(462,453,o),
(436,478,o),
(413,478,qs),
(387,478,o),
(361,445,o),
(361,420,q),
(290,420,l),
(291,479,o),
(360,540,o),
(415,540,qs),
(470,540,o),
(533,480,o),
(533,432,qs),
(533,397,o),
(489,337,o),
(450,300,qs),
(390,239,l),
(540,239,l),
(540,176,l),
(290,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 6 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 5 2 5 4 2 128 0 3 3 0 97 0 0 0 39 77 0 2 2 5 97 0 5 5 36 77 8 1 6 6 1 98 7 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 2 5 4 2 128 0 5 0 2 6 5 2 103 0 3 3 0 97 0 0 0 39 77 8 1 6 6 1 98 7 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
16 16 0 0 16 41 16 41 33 31 29 28 26 24 18 17 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(292,223,l),
(401,336,ls),
(414,349,o),
(445,382,o),
(466,416,o),
(466,431,qs),
(466,455,o),
(437,484,o),
(413,484,qs),
(385,484,o),
(356,449,o),
(356,421,q),
(292,421,l),
(293,477,o),
(359,540,o),
(414,540,qs),
(471,540,o),
(530,478,o),
(530,432,qs),
(530,399,o),
(489,341,o),
(455,309,qs),
(379,231,l),
(538,231,l),
(538,176,l),
(292,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 6 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 5 2 5 4 2 128 0 3 3 0 97 0 0 0 39 77 0 2 2 5 97 0 5 5 36 77 8 1 6 6 1 98 7 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 2 5 4 2 128 0 5 0 2 6 5 2 103 0 3 3 0 97 0 0 0 39 77 8 1 6 6 1 98 7 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
16 16 0 0 16 41 16 41 33 31 29 28 26 24 18 17 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(289,228,l),
(394,336,ls),
(426,368,o),
(460,409,o),
(460,429,qs),
(460,451,o),
(435,476,o),
(413,476,qs),
(388,476,o),
(362,443,o),
(362,419,q),
(289,419,l),
(290,479,o),
(359,540,o),
(415,540,qs),
(469,540,o),
(533,481,o),
(533,432,qs),
(533,396,o),
(489,336,o),
(448,296,qs),
(393,241,l),
(541,241,l),
(541,176,l),
(289,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 6 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 5 2 5 4 2 128 0 3 3 0 97 0 0 0 39 77 0 2 2 5 97 0 5 5 36 77 8 1 6 6 1 98 7 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 2 5 4 2 128 0 5 0 2 6 5 2 103 0 3 3 0 97 0 0 0 39 77 8 1 6 6 1 98 7 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
16 16 0 0 16 40 16 40 33 31 29 28 26 24 18 17 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(288,230,l),
(391,336,ls),
(424,369,o),
(457,409,o),
(457,428,qs),
(457,449,o),
(435,472,o),
(413,472,qs),
(389,472,o),
(365,441,o),
(365,418,q),
(288,418,l),
(289,480,o),
(359,540,o),
(415,540,qs),
(469,540,o),
(535,482,o),
(535,432,qs),
(535,405,o),
(509,356,o),
(476,320,o),
(445,290,qs),
(400,246,l),
(542,246,l),
(542,176,l),
(288,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 6 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 5 2 5 4 2 128 0 3 3 0 97 0 0 0 39 77 0 2 2 5 97 0 5 5 36 77 8 1 6 6 1 98 7 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 2 5 4 2 128 0 5 0 2 6 5 2 103 0 3 3 0 97 0 0 0 39 77 8 1 6 6 1 98 7 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
16 16 0 0 16 41 16 41 34 32 30 29 27 25 18 17 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni278B;
unicode = 10123;
},
{
glyphname = uni278C;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(356,158,o),
(285,220,o),
(284,279,q),
(355,279,l),
(355,251,o),
(389,221,o),
(414,221,qs),
(443,221,o),
(473,250,o),
(473,278,qs),
(473,305,o),
(439,334,o),
(415,334,qs),
(396,334,o),
(377,323,q),
(338,369,l),
(441,460,l),
(294,460,l),
(294,522,l),
(532,522,l),
(532,461,l),
(447,388,l),
(496,382,o),
(543,321,o),
(543,279,qs),
(543,225,o),
(472,158,o),
(414,158,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
22 1 3 2 27 21 2 4 3 28 1 6 4 3 76 0 3 0 6 5 3 6 103 0 4 0 5 7 4 5 105 0 2 2 0 97 0 0 0 39 77 9 1 7 7 1 97 8 1 1 1 40 1 78 16 16 0 0 16 43 16 42 40 39 37 35 31 29 26 25 24 23 0 15 0 14 38 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(358,158,o),
(287,218,o),
(285,275,q),
(349,275,l),
(349,248,o),
(386,214,o),
(414,214,qs),
(446,214,o),
(479,249,o),
(479,277,qs),
(479,306,o),
(442,337,o),
(415,337,qs),
(396,337,o),
(377,326,q),
(341,368,l),
(449,467,l),
(296,467,l),
(296,522,l),
(530,522,l),
(530,468,l),
(439,386,l),
(490,382,o),
(542,320,o),
(542,277,qs),
(542,227,o),
(474,158,o),
(414,158,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
22 1 3 2 27 21 2 4 3 28 1 6 4 3 76 0 3 0 6 5 3 6 103 0 4 0 5 7 4 5 105 0 2 2 0 97 0 0 0 39 77 9 1 7 7 1 97 8 1 1 1 40 1 78 16 16 0 0 16 43 16 42 40 39 37 35 31 29 26 25 24 23 0 15 0 14 38 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(355,158,o),
(283,221,o),
(284,280,q),
(356,280,l),
(356,252,o),
(389,223,o),
(414,223,qs),
(441,223,o),
(471,251,o),
(471,278,qs),
(471,304,o),
(438,332,o),
(414,332,qs),
(394,332,o),
(377,322,q),
(336,369,l),
(438,458,l),
(293,458,l),
(293,522,l),
(532,522,l),
(532,459,l),
(450,389,l),
(498,382,o),
(543,322,o),
(543,279,qs),
(543,224,o),
(472,158,o),
(414,158,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
22 1 3 2 27 21 2 4 3 28 1 6 4 3 76 0 3 0 6 5 3 6 103 0 4 0 5 7 4 5 105 0 2 2 0 97 0 0 0 39 77 9 1 7 7 1 97 8 1 1 1 40 1 78 16 16 0 0 16 43 16 42 40 39 37 35 31 29 26 25 24 23 0 15 0 14 38 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(353,158,o),
(282,222,o),
(283,283,q),
(360,283,l),
(360,254,o),
(391,227,o),
(414,227,qs),
(438,227,o),
(467,252,o),
(467,279,qs),
(467,304,o),
(435,330,o),
(414,330,qs),
(394,330,o),
(377,320,q),
(334,370,l),
(433,453,l),
(291,453,l),
(291,522,l),
(533,522,l),
(533,454,l),
(455,390,l),
(502,382,o),
(544,322,o),
(544,280,qs),
(544,223,o),
(471,158,o),
(414,158,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
22 1 3 2 27 21 2 4 3 28 1 6 4 3 76 0 3 0 6 5 3 6 103 0 4 0 5 7 4 5 105 0 2 2 0 97 0 0 0 39 77 9 1 7 7 1 97 8 1 1 1 40 1 78 16 16 0 0 16 43 16 42 40 39 37 35 31 29 26 25 24 23 0 15 0 14 38 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni278C;
unicode = 10124;
},
{
glyphname = uni278D;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(427,239,l),
(264,239,l),
(264,298,l),
(383,533,l),
(454,533,l),
(341,302,l),
(433,302,l),
(433,392,l),
(501,392,l),
(501,302,l),
(538,302,l),
(538,239,l),
(501,239,l),
(501,176,l),
(427,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 2 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 6 3 6 4 114 5 1 3 2 6 3 2 126 7 1 2 8 8 2 112 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 4 6 3 6 4 3 128 5 1 3 2 6 3 2 126 7 1 2 8 8 2 112 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 4 6 3 6 4 3 128 5 1 3 2 6 3 2 126 7 1 2 8 6 2 8 126 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
16 16 0 0 16 30 16 30 29 28 26 25 24 23 22 21 20 19 18 17 0 15 0 14 38 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(429,242,l),
(266,242,l),
(266,294,l),
(386,533,l),
(450,533,l),
(335,299,l),
(434,299,l),
(434,392,l),
(495,392,l),
(495,299,l),
(536,299,l),
(536,242,l),
(495,242,l),
(495,176,l),
(429,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 2 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 6 3 6 4 114 5 1 3 2 6 3 2 126 7 1 2 8 8 2 112 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 4 6 3 6 4 3 128 5 1 3 2 6 3 2 126 7 1 2 8 8 2 112 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 4 6 3 6 4 3 128 5 1 3 2 6 3 2 126 7 1 2 8 6 2 8 126 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
16 16 0 0 16 30 16 30 29 28 26 25 24 23 22 21 20 19 18 17 0 15 0 14 38 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(426,238,l),
(263,238,l),
(263,299,l),
(381,533,l),
(455,533,l),
(342,303,l),
(432,303,l),
(432,392,l),
(502,392,l),
(502,303,l),
(539,303,l),
(539,238,l),
(502,238,l),
(502,176,l),
(426,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 2 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 6 3 6 4 114 5 1 3 2 6 3 2 126 7 1 2 8 8 2 112 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 4 6 3 6 4 3 128 5 1 3 2 6 3 2 126 7 1 2 8 8 2 112 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 4 6 3 6 4 3 128 5 1 3 2 6 3 2 126 7 1 2 8 6 2 8 126 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
16 16 0 0 16 30 16 30 29 28 26 25 24 23 22 21 20 19 18 17 0 15 0 14 38 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(425,236,l),
(261,236,l),
(261,301,l),
(379,533,l),
(457,533,l),
(346,305,l),
(431,305,l),
(431,392,l),
(506,392,l),
(506,305,l),
(540,305,l),
(540,236,l),
(506,236,l),
(506,176,l),
(425,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 2 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 6 3 6 4 114 5 1 3 2 6 3 2 126 7 1 2 8 8 2 112 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 4 6 3 6 4 3 128 5 1 3 2 6 3 2 126 7 1 2 8 8 2 112 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 4 6 3 6 4 3 128 5 1 3 2 6 3 2 126 7 1 2 8 6 2 8 126 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
16 16 0 0 16 30 16 30 29 28 26 25 24 23 22 21 20 19 18 17 0 15 0 14 38 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni278D;
unicode = 10125;
},
{
glyphname = uni278E;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(149,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(149,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(361,160,o),
(287,220,o),
(285,269,q),
(356,269,l),
(361,247,o),
(394,223,o),
(417,223,qs),
(443,223,o),
(475,262,o),
(475,290,qs),
(475,318,o),
(444,354,o),
(418,354,qs),
(398,354,o),
(366,334,o),
(359,317,q),
(289,317,l),
(319,524,l),
(522,524,l),
(522,461,l),
(374,461,l),
(359,386,l),
(371,400,o),
(409,413,o),
(430,413,qs),
(486,413,o),
(545,343,o),
(545,291,qs),
(545,233,o),
(473,160,o),
(417,160,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
24 1 6 2 1 76 0 3 0 2 6 3 2 105 0 5 0 8 7 5 8 103 0 6 0 7 9 6 7 105 0 4 4 0 97 0 0 0 39 77 11 1 9 9 1 97 10 1 1 1 40 1 78 16 16 0 0 16 46 16 45 43 42 40 38 34 32 30 29 28 27 26 25 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(149,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(149,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(362,160,o),
(288,220,o),
(286,267,q),
(350,267,l),
(355,243,o),
(391,216,o),
(417,216,qs),
(445,216,o),
(481,259,o),
(481,289,qs),
(481,320,o),
(447,359,o),
(418,359,qs),
(397,359,o),
(362,338,o),
(354,320,q),
(291,320,l),
(321,524,l),
(520,524,l),
(520,467,l),
(371,467,l),
(354,384,l),
(367,398,o),
(407,413,o),
(428,413,qs),
(483,413,o),
(544,343,o),
(544,290,qs),
(544,232,o),
(473,160,o),
(417,160,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
24 1 6 2 1 76 0 3 0 2 6 3 2 105 0 5 0 8 7 5 8 103 0 6 0 7 9 6 7 105 0 4 4 0 97 0 0 0 39 77 11 1 9 9 1 97 10 1 1 1 40 1 78 16 16 0 0 16 46 16 45 43 42 40 38 34 32 30 29 28 27 26 25 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(360,160,o),
(286,219,o),
(284,269,q),
(357,269,l),
(362,248,o),
(395,225,o),
(416,225,qs),
(442,225,o),
(473,263,o),
(473,290,qs),
(473,317,o),
(443,352,o),
(417,352,qs),
(399,352,o),
(368,332,o),
(361,316,q),
(288,316,l),
(318,524,l),
(522,524,l),
(522,458,l),
(375,458,l),
(360,387,l),
(372,400,o),
(410,413,o),
(430,413,qs),
(486,413,o),
(545,342,o),
(545,291,qs),
(545,233,o),
(473,160,o),
(416,160,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
24 1 6 2 1 76 0 3 0 2 6 3 2 105 0 5 0 8 7 5 8 103 0 6 0 7 9 6 7 105 0 4 4 0 97 0 0 0 39 77 11 1 9 9 1 97 10 1 1 1 40 1 78 16 16 0 0 16 46 16 45 43 42 40 38 34 32 30 29 28 27 26 25 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(360,160,o),
(285,218,o),
(283,270,q),
(361,270,l),
(366,251,o),
(396,229,o),
(416,229,qs),
(439,229,o),
(469,265,o),
(469,291,qs),
(469,316,o),
(441,348,o),
(417,348,qs),
(400,348,o),
(370,329,o),
(364,314,q),
(287,314,l),
(317,524,l),
(523,524,l),
(523,454,l),
(377,454,l),
(363,388,l),
(375,400,o),
(412,413,o),
(431,413,qs),
(487,413,o),
(546,341,o),
(546,291,qs),
(546,234,o),
(473,160,o),
(416,160,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
24 1 6 2 1 76 0 3 0 2 6 3 2 105 0 5 0 8 7 5 8 103 0 6 0 7 9 6 7 105 0 4 4 0 97 0 0 0 39 77 11 1 9 9 1 97 10 1 1 1 40 1 78 16 16 0 0 16 46 16 45 43 42 40 38 34 32 30 29 28 27 26 25 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni278E;
unicode = 10126;
},
{
glyphname = uni278F;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(438,227,o),
(471,257,o),
(471,284,qs),
(471,311,o),
(439,342,o),
(415,342,qs),
(392,342,o),
(360,310,o),
(360,286,qs),
(360,260,o),
(391,227,o),
(416,227,qs)
);
},
{
closed = 1;
nodes = (
(349,165,o),
(280,265,o),
(280,339,qs),
(280,421,o),
(347,535,o),
(417,535,qs),
(468,535,o),
(532,473,o),
(534,430,q),
(467,430,l),
(463,452,o),
(438,476,o),
(417,476,qs),
(354,476,o),
(352,357,q),
(363,377,o),
(407,403,o),
(434,403,qs),
(481,403,o),
(540,334,o),
(540,287,qs),
(540,237,o),
(474,165,o),
(420,165,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 2 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 5 4 5 6 114 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 0 4 4 5 97 0 5 5 36 77 11 1 8 8 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 5 4 5 6 114 0 5 0 4 2 5 4 105 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 11 1 8 8 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 6 5 4 5 6 4 128 0 5 0 4 2 5 4 105 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 11 1 8 8 1 97 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
28 28 16 16 0 0 28 51 28 50 46 44 42 41 39 37 34 32 16 27 16 26 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(440,221,o),
(476,256,o),
(476,284,qs),
(476,311,o),
(442,347,o),
(415,347,qs),
(390,347,o),
(354,311,o),
(354,285,qs),
(354,258,o),
(389,221,o),
(416,221,qs)
);
},
{
closed = 1;
nodes = (
(348,165,o),
(282,265,o),
(282,338,qs),
(282,420,o),
(348,535,o),
(417,535,qs),
(468,535,o),
(529,473,o),
(531,432,q),
(471,432,l),
(462,481,o),
(417,481,qs),
(378,481,o),
(346,406,o),
(346,354,q),
(357,375,o),
(403,402,o),
(430,402,qs),
(477,402,o),
(538,335,o),
(538,286,qs),
(538,237,o),
(472,165,o),
(419,165,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 2 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 5 4 5 6 114 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 0 4 4 5 97 0 5 5 36 77 11 1 8 8 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 6 5 4 5 6 4 128 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 0 4 4 5 97 0 5 5 36 77 11 1 8 8 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 6 5 4 5 6 4 128 0 5 0 4 2 5 4 105 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 11 1 8 8 1 97 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
28 28 16 16 0 0 28 51 28 50 46 44 42 41 40 38 34 32 16 27 16 26 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(436,229,o),
(469,258,o),
(469,284,qs),
(469,310,o),
(437,340,o),
(414,340,qs),
(392,340,o),
(361,309,o),
(361,286,qs),
(361,261,o),
(391,229,o),
(416,229,qs)
);
},
{
closed = 1;
nodes = (
(348,165,o),
(279,264,o),
(279,339,qs),
(279,421,o),
(347,535,o),
(417,535,qs),
(468,535,o),
(532,473,o),
(534,429,q),
(466,429,l),
(456,474,o),
(417,474,qs),
(356,474,o),
(354,357,q),
(364,376,o),
(408,403,o),
(435,403,qs),
(481,403,o),
(540,334,o),
(540,287,qs),
(540,237,o),
(474,165,o),
(420,165,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 2 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 5 4 5 6 114 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 0 4 4 5 97 0 5 5 36 77 11 1 8 8 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 5 4 5 6 114 0 5 0 4 2 5 4 105 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 11 1 8 8 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 6 5 4 5 6 4 128 0 5 0 4 2 5 4 105 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 11 1 8 8 1 97 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
28 28 16 16 0 0 28 50 28 49 45 43 41 40 39 37 34 32 16 27 16 26 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(435,233,o),
(465,259,o),
(465,284,qs),
(465,310,o),
(435,336,o),
(414,336,qs),
(393,336,o),
(365,308,o),
(365,286,qs),
(365,263,o),
(393,233,o),
(416,233,qs)
);
},
{
closed = 1;
nodes = (
(349,165,o),
(278,264,o),
(278,340,qs),
(278,422,o),
(347,535,o),
(417,535,qs),
(468,535,o),
(534,474,o),
(536,428,q),
(463,428,l),
(459,448,o),
(436,470,o),
(417,470,qs),
(383,470,o),
(359,407,o),
(358,359,q),
(369,378,o),
(411,404,o),
(437,404,qs),
(483,404,o),
(541,333,o),
(541,287,qs),
(541,237,o),
(475,165,o),
(420,165,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 2 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 5 4 5 6 114 0 5 0 4 2 5 4 105 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 11 1 8 8 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 6 5 4 5 6 4 128 0 5 0 4 2 5 4 105 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 11 1 8 8 1 97 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
28 28 16 16 0 0 28 52 28 51 47 45 43 42 40 38 34 32 16 27 16 26 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni278F;
unicode = 10127;
},
{
glyphname = uni2790;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(471,463,l),
(283,463,l),
(283,524,l),
(548,524,l),
(548,473,l),
(408,167,l),
(332,167,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
17 1 3 2 1 76 0 3 2 4 2 3 4 128 0 2 2 0 97 0 0 0 39 77 6 1 4 4 1 98 5 1 1 1 40 1 78 16 16 0 0 16 22 16 22 21 20 19 18 0 15 0 14 38 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(477,469,l),
(285,469,l),
(285,524,l),
(546,524,l),
(546,478,l),
(403,167,l),
(335,167,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
17 1 3 2 1 76 0 3 2 4 2 3 4 128 0 2 2 0 97 0 0 0 39 77 6 1 4 4 1 98 5 1 1 1 40 1 78 16 16 0 0 16 22 16 22 21 20 19 18 0 15 0 14 38 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(468,460,l),
(282,460,l),
(282,524,l),
(549,524,l),
(549,471,l),
(409,167,l),
(331,167,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
17 1 3 2 1 76 0 3 2 4 2 3 4 128 0 2 2 0 97 0 0 0 39 77 6 1 4 4 1 98 5 1 1 1 40 1 78 16 16 0 0 16 22 16 22 21 20 19 18 0 15 0 14 38 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(464,456,l),
(281,456,l),
(281,524,l),
(550,524,l),
(550,468,l),
(412,167,l),
(329,167,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
17 1 3 2 1 76 0 3 2 4 2 3 4 128 0 2 2 0 97 0 0 0 39 77 6 1 4 4 1 98 5 1 1 1 40 1 78 16 16 0 0 16 22 16 22 21 20 19 18 0 15 0 14 38 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni2790;
unicode = 10128;
},
{
glyphname = uni2791;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(362,165,o),
(287,223,o),
(287,272,qs),
(287,303,o),
(316,352,o),
(344,364,q),
(295,389,o),
(295,439,qs),
(295,484,o),
(361,535,o),
(414,535,qs),
(464,535,o),
(532,485,o),
(532,439,qs),
(532,415,o),
(506,374,o),
(484,364,q),
(512,352,o),
(540,304,o),
(540,272,qs),
(540,221,o),
(467,165,o),
(414,165,qs)
);
},
{
closed = 1;
nodes = (
(440,226,o),
(469,253,o),
(469,278,qs),
(469,304,o),
(440,332,o),
(415,332,qs),
(390,332,o),
(359,305,o),
(359,278,qs),
(359,226,o),
(415,226,qs)
);
},
{
closed = 1;
nodes = (
(436,385,o),
(460,409,o),
(460,430,qs),
(460,452,o),
(436,477,o),
(414,477,qs),
(368,477,o),
(368,430,qs),
(368,410,o),
(393,385,o),
(414,385,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
32 21 2 4 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 10 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 11 1 7 7 6 97 0 6 6 36 77 9 1 3 3 1 97 8 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 6 11 1 7 4 6 7 105 0 4 10 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
50 50 39 39 16 16 0 0 50 60 50 59 55 53 39 49 39 48 44 42 16 38 16 37 28 26 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(362,165,o),
(288,222,o),
(288,271,qs),
(288,302,o),
(320,354,o),
(348,363,q),
(297,387,o),
(297,439,qs),
(297,483,o),
(361,535,o),
(413,535,qs),
(464,535,o),
(530,482,o),
(530,439,qs),
(530,417,o),
(505,375,o),
(479,363,q),
(507,353,o),
(538,303,o),
(538,271,qs),
(538,221,o),
(465,165,o),
(413,165,qs)
);
},
{
closed = 1;
nodes = (
(441,220,o),
(474,249,o),
(474,276,qs),
(474,305,o),
(441,334,o),
(414,334,qs),
(387,334,o),
(353,306,o),
(353,276,qs),
(353,249,o),
(384,220,o),
(414,220,qs)
);
},
{
closed = 1;
nodes = (
(440,383,o),
(465,411,o),
(465,432,qs),
(465,456,o),
(437,482,o),
(413,482,qs),
(362,482,o),
(362,432,qs),
(362,410,o),
(389,383,o),
(413,383,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
32 21 2 4 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 10 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 11 1 7 7 6 97 0 6 6 36 77 9 1 3 3 1 97 8 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 6 11 1 7 4 6 7 105 0 4 10 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
51 51 39 39 16 16 0 0 51 61 51 60 56 54 39 50 39 49 45 43 16 38 16 37 28 26 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(362,165,o),
(286,223,o),
(286,272,qs),
(286,303,o),
(314,352,o),
(342,364,q),
(294,391,o),
(294,439,qs),
(294,484,o),
(361,535,o),
(414,535,qs),
(463,535,o),
(532,485,o),
(532,439,qs),
(532,414,o),
(506,374,o),
(485,364,q),
(513,352,o),
(541,304,o),
(541,272,qs),
(541,221,o),
(467,165,o),
(414,165,qs)
);
},
{
closed = 1;
nodes = (
(439,227,o),
(467,254,o),
(467,279,qs),
(467,304,o),
(439,331,o),
(415,331,qs),
(390,331,o),
(360,305,o),
(360,279,qs),
(360,227,o),
(415,227,qs)
);
},
{
closed = 1;
nodes = (
(435,385,o),
(458,408,o),
(458,429,qs),
(458,451,o),
(435,475,o),
(414,475,qs),
(369,475,o),
(369,429,qs),
(369,409,o),
(393,385,o),
(414,385,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
32 21 2 4 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 10 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 11 1 7 7 6 97 0 6 6 36 77 9 1 3 3 1 97 8 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 6 11 1 7 4 6 7 105 0 4 10 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
50 50 39 39 16 16 0 0 50 60 50 59 55 53 39 49 39 48 44 42 16 38 16 37 28 26 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(361,165,o),
(285,224,o),
(285,272,qs),
(285,337,o),
(339,364,q),
(293,393,o),
(293,439,qs),
(293,484,o),
(361,535,o),
(414,535,qs),
(462,535,o),
(533,487,o),
(533,439,qs),
(533,413,o),
(507,374,o),
(488,364,q),
(542,340,o),
(542,272,qs),
(542,222,o),
(468,165,o),
(414,165,qs)
);
},
{
closed = 1;
nodes = (
(438,231,o),
(464,257,o),
(464,280,qs),
(464,303,o),
(438,330,o),
(415,330,qs),
(392,330,o),
(364,305,o),
(364,280,qs),
(364,231,o),
(415,231,qs)
);
},
{
closed = 1;
nodes = (
(454,386,o),
(454,428,qs),
(454,471,o),
(414,471,qs),
(373,471,o),
(373,428,qs),
(373,408,o),
(395,386,o),
(414,386,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
31 20 2 4 7 1 76 0 6 11 1 7 4 6 7 105 0 4 10 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78 48 48 37 37 16 16 0 0 48 56 48 55 53 51 37 47 37 46 42 40 16 36 16 35 27 25 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni2791;
unicode = 10129;
},
{
glyphname = uni2792;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(357,165,o),
(295,226,o),
(293,270,q),
(359,270,l),
(370,225,o),
(410,225,qs),
(445,225,o),
(474,296,o),
(475,344,q),
(462,324,o),
(420,297,o),
(393,297,qs),
(367,297,o),
(318,325,o),
(287,378,o),
(287,414,qs),
(287,464,o),
(354,535,o),
(406,535,qs),
(479,535,o),
(546,434,o),
(546,361,qs),
(546,277,o),
(478,165,o),
(409,165,qs)
);
},
{
closed = 1;
nodes = (
(435,359,o),
(467,391,o),
(467,415,qs),
(467,440,o),
(435,473,o),
(410,473,qs),
(387,473,o),
(356,441,o),
(356,416,qs),
(356,391,o),
(387,359,o),
(412,359,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 3 8 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 5 3 4 3 5 4 128 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 39 77 11 1 8 8 7 97 0 7 7 36 77 10 1 6 6 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 3 4 3 5 4 128 0 7 11 1 8 3 7 8 105 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 39 77 10 1 6 6 1 97 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
41 41 16 16 0 0 41 52 41 51 47 45 16 40 16 39 37 36 35 33 29 27 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(360,165,o),
(300,222,o),
(295,268,q),
(355,268,l),
(365,219,o),
(410,219,qs),
(448,219,o),
(480,294,o),
(481,346,q),
(469,326,o),
(425,298,o),
(396,298,qs),
(351,298,o),
(288,364,o),
(288,414,qs),
(288,463,o),
(355,535,o),
(407,535,qs),
(480,535,o),
(545,432,o),
(545,362,qs),
(545,279,o),
(478,165,o),
(409,165,qs)
);
},
{
closed = 1;
nodes = (
(438,353,o),
(472,389,o),
(472,415,qs),
(472,443,o),
(438,479,o),
(411,479,qs),
(384,479,o),
(351,443,o),
(351,416,qs),
(351,388,o),
(384,353,o),
(412,353,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 3 8 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 5 3 4 4 5 114 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 39 77 11 1 8 8 7 97 0 7 7 36 77 10 1 6 6 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 5 3 4 3 5 4 128 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 39 77 11 1 8 8 7 97 0 7 7 36 77 10 1 6 6 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 3 4 3 5 4 128 0 7 11 1 8 3 7 8 105 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 39 77 10 1 6 6 1 97 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
40 40 16 16 0 0 40 51 40 50 46 44 16 39 16 38 36 35 34 32 28 26 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(356,165,o),
(294,228,o),
(292,271,q),
(360,271,l),
(365,248,o),
(389,226,o),
(409,226,qs),
(470,226,o),
(472,343,q),
(460,323,o),
(418,297,o),
(391,297,qs),
(366,297,o),
(318,324,o),
(286,376,o),
(286,413,qs),
(286,463,o),
(353,535,o),
(406,535,qs),
(479,535,o),
(546,434,o),
(546,361,qs),
(546,276,o),
(477,165,o),
(408,165,qs)
);
},
{
closed = 1;
nodes = (
(434,360,o),
(465,391,o),
(465,414,qs),
(465,439,o),
(434,471,o),
(410,471,qs),
(388,471,o),
(357,440,o),
(357,416,qs),
(357,392,o),
(387,360,o),
(411,360,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
31 1 3 8 1 76 0 5 3 4 3 5 4 128 0 7 11 1 8 3 7 8 105 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 39 77 10 1 6 6 1 97 9 1 1 1 40 1 78 41 41 16 16 0 0 41 52 41 51 47 45 16 40 16 39 37 36 34 32 29 27 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(372,165,o),
(318,196,o),
(290,246,o),
(290,272,q),
(363,272,l),
(373,230,o),
(409,230,qs),
(465,230,o),
(468,341,q),
(455,322,o),
(415,296,o),
(389,296,qs),
(366,296,o),
(318,321,o),
(285,374,o),
(285,413,qs),
(285,464,o),
(351,535,o),
(405,535,qs),
(479,535,o),
(547,435,o),
(547,360,qs),
(547,274,o),
(477,165,o),
(408,165,qs)
);
},
{
closed = 1;
nodes = (
(432,364,o),
(461,393,o),
(461,414,qs),
(461,437,o),
(431,467,o),
(409,467,qs),
(389,467,o),
(360,438,o),
(360,416,qs),
(360,393,o),
(389,364,o),
(411,364,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
31 1 3 8 1 76 0 5 3 4 3 5 4 128 0 7 11 1 8 3 7 8 105 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 39 77 10 1 6 6 1 97 9 1 1 1 40 1 78 41 41 16 16 0 0 41 52 41 51 47 45 16 40 16 39 36 35 34 32 29 27 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni2792;
unicode = 10130;
},
{
glyphname = uni24EA.solid;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(344,165,o),
(311,216,qs),
(279,264,o),
(279,350,qs),
(279,436,o),
(311,484,qs),
(344,535,o),
(414,535,qs),
(483,535,o),
(516,485,qs),
(548,435,o),
(548,350,qs),
(548,265,o),
(516,215,qs),
(483,165,o),
(414,165,qs)
);
},
{
closed = 1;
nodes = (
(444,230,o),
(459,261,qs),
(474,294,o),
(474,350,qs),
(474,408,o),
(459,439,qs),
(444,470,o),
(414,470,qs),
(383,470,o),
(368,439,qs),
(353,410,o),
(353,350,qs),
(353,291,o),
(368,261,qs),
(383,230,o),
(414,230,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
0 4 8 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 7 1 3 3 1 97 6 1 1 1 40 1 78 32 32 16 16 0 0 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(344,165,o),
(311,216,qs),
(278,266,o),
(278,350,qs),
(278,435,o),
(311,484,qs),
(344,535,o),
(413,535,qs),
(483,535,o),
(515,485,qs),
(548,436,o),
(548,350,qs),
(548,265,o),
(515,215,qs),
(483,165,o),
(413,165,qs)
);
},
{
closed = 1;
nodes = (
(448,223,o),
(464,256,qs),
(481,289,o),
(481,350,qs),
(481,411,o),
(464,444,qs),
(448,477,o),
(413,477,qs),
(379,477,o),
(362,444,qs),
(345,411,o),
(345,350,qs),
(345,289,o),
(362,256,qs),
(379,223,o),
(413,223,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 2 0 97 0 0 0 39 77 8 1 5 5 4 97 0 4 4 36 77 7 1 3 3 1 97 6 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 8 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 7 1 3 3 1 97 6 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
32 32 16 16 0 0 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(344,165,o),
(311,216,qs),
(279,264,o),
(279,350,qs),
(279,436,o),
(311,484,qs),
(344,535,o),
(414,535,qs),
(483,535,o),
(516,485,qs),
(548,435,o),
(548,350,qs),
(548,265,o),
(516,215,qs),
(483,165,o),
(414,165,qs)
);
},
{
closed = 1;
nodes = (
(444,232,o),
(457,263,qs),
(472,295,o),
(472,350,qs),
(472,406,o),
(457,437,qs),
(444,468,o),
(414,468,qs),
(384,468,o),
(369,437,qs),
(355,408,o),
(355,350,qs),
(355,292,o),
(369,263,qs),
(384,232,o),
(414,232,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
0 4 8 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 7 1 3 3 1 97 6 1 1 1 40 1 78 32 32 16 16 0 0 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(511,-12,o),
(678,85,o),
(775,252,o),
(775,350,qs),
(775,448,o),
(678,615,o),
(511,712,o),
(413,712,qs),
(315,712,o),
(148,615,o),
(51,448,o),
(51,350,qs),
(51,252,o),
(148,85,o),
(315,-12,o),
(413,-12,qs)
);
},
{
closed = 1;
nodes = (
(344,165,o),
(311,216,qs),
(279,264,o),
(279,350,qs),
(279,436,o),
(311,484,qs),
(344,535,o),
(414,535,qs),
(483,535,o),
(516,485,qs),
(548,435,o),
(548,350,qs),
(548,265,o),
(516,215,qs),
(483,165,o),
(414,165,qs)
);
},
{
closed = 1;
nodes = (
(441,236,o),
(454,266,qs),
(467,299,o),
(467,350,qs),
(467,402,o),
(454,434,qs),
(441,463,o),
(414,463,qs),
(386,463,o),
(373,434,qs),
(360,405,o),
(360,350,qs),
(360,295,o),
(373,266,qs),
(387,236,o),
(414,236,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
0 4 8 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 7 1 3 3 1 97 6 1 1 1 40 1 78 32 32 16 16 0 0 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni24EA.solid;
},
{
glyphname = zero.dnom;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,-5,o),
(252,76,o),
(284,188,o),
(284,237,qs),
(284,294,o),
(232,358,o),
(177,358,qs),
(116,358,o),
(39,279,o),
(6,168,o),
(6,118,qs),
(6,61,o),
(57,-5,o),
(113,-5,qs)
);
},
{
closed = 1;
nodes = (
(78,59,o),
(78,127,qs),
(78,156,o),
(95,235,o),
(135,295,o),
(166,295,qs),
(211,295,o),
(211,228,qs),
(211,198,o),
(194,118,o),
(155,59,o),
(124,59,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 0 0 2 3 0 2 105 5 1 3 3 1 97 4 1 1 1 34 1 78 14 14 0 0 14 25 14 24 20 18 0 13 0 12 37 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(180,-5,o),
(256,76,o),
(288,188,o),
(288,238,qs),
(288,295,o),
(237,358,o),
(182,358,qs),
(121,358,o),
(44,278,o),
(12,167,o),
(12,117,qs),
(12,60,o),
(63,-5,o),
(118,-5,qs)
);
},
{
closed = 1;
nodes = (
(78,52,o),
(78,125,qs),
(78,156,o),
(96,238,o),
(138,301,o),
(172,301,qs),
(197,301,o),
(222,264,o),
(222,229,qs),
(222,197,o),
(204,115,o),
(162,52,o),
(128,52,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 0 0 2 3 0 2 105 5 1 3 3 1 97 4 1 1 1 34 1 78 14 14 0 0 14 26 14 25 21 19 0 13 0 12 37 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 325;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(173,-5,o),
(250,76,o),
(282,188,o),
(282,237,qs),
(282,293,o),
(230,358,o),
(175,358,qs),
(114,358,o),
(37,279,o),
(4,169,o),
(4,118,qs),
(4,61,o),
(55,-5,o),
(111,-5,qs)
);
},
{
closed = 1;
nodes = (
(77,61,o),
(77,128,qs),
(77,156,o),
(94,233,o),
(132,292,o),
(163,292,qs),
(207,292,o),
(207,228,qs),
(207,198,o),
(190,120,o),
(152,61,o),
(123,61,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 0 0 2 3 0 2 105 5 1 3 3 1 97 4 1 1 1 34 1 78 14 14 0 0 14 25 14 24 20 18 0 13 0 12 37 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 311;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(170,-5,o),
(247,76,o),
(279,187,o),
(279,236,qs),
(279,293,o),
(227,358,o),
(171,358,qs),
(110,358,o),
(33,280,o),
(0,170,o),
(0,119,qs),
(0,-5,o),
(107,-5,qs)
);
},
{
closed = 1;
nodes = (
(77,65,o),
(77,129,qs),
(77,156,o),
(93,231,o),
(130,288,o),
(159,288,qs),
(200,288,o),
(200,227,qs),
(200,198,o),
(183,122,o),
(147,65,o),
(120,65,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 0 0 2 3 0 2 105 5 1 3 3 1 97 4 1 1 1 34 1 78 13 13 0 0 13 24 13 23 19 17 0 12 0 11 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 304;
}
);
note = zero.dnom;
},
{
glyphname = one.dnom;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(234,0,l),
(245,62,l),
(163,62,l),
(215,353,l),
(178,353,l),
(50,309,l),
(40,254,l),
(133,274,l),
(96,62,l),
(3,62,l),
(-8,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
3 2 2 0 1 1 76 0 1 0 1 133 2 1 0 0 3 96 0 3 3 34 3 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(237,0,l),
(247,55,l),
(164,55,l),
(217,353,l),
(183,353,l),
(56,309,l),
(47,260,l),
(143,281,l),
(103,55,l),
(8,55,l),
(-2,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
3 2 2 0 1 1 76 0 1 0 1 133 2 1 0 0 3 96 0 3 3 34 3 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(232,0,l),
(244,64,l),
(163,64,l),
(214,353,l),
(176,353,l),
(48,309,l),
(38,251,l),
(130,272,l),
(93,64,l),
(1,64,l),
(-10,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
3 2 2 0 1 1 76 0 1 0 1 133 2 1 0 0 3 96 0 3 3 34 3 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(230,0,l),
(242,68,l),
(162,68,l),
(213,353,l),
(172,353,l),
(44,309,l),
(33,247,l),
(123,267,l),
(88,68,l),
(-2,68,l),
(-14,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
3 2 2 0 1 1 76 0 1 0 1 133 2 1 0 0 3 96 0 3 3 34 3 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 296;
}
);
note = one.dnom;
},
{
glyphname = two.dnom;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,0,l),
(240,62,l),
(92,62,l),
(158,118,ls),
(201,155,o),
(238,188,o),
(269,240,o),
(269,270,qs),
(269,307,o),
(219,358,o),
(169,358,qs),
(115,358,o),
(38,297,o),
(26,240,q),
(96,240,l),
(100,265,o),
(132,298,o),
(157,298,qs),
(176,298,o),
(198,278,o),
(198,261,qs),
(198,239,o),
(158,194,o),
(117,158,qs),
(100,143,l),
(-8,50,l),
(-16,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 4 95 0 4 4 34 4 78 17 23 34 18 39 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 302;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(232,0,l),
(242,55,l),
(85,55,l),
(165,123,ls),
(207,159,o),
(241,192,o),
(271,241,o),
(271,270,qs),
(271,308,o),
(221,358,o),
(173,358,qs),
(120,358,o),
(45,297,o),
(33,242,q),
(96,242,l),
(101,268,o),
(136,304,o),
(162,304,qs),
(184,304,o),
(207,280,o),
(207,262,qs),
(207,237,o),
(163,189,o),
(112,145,qs),
(-2,47,l),
(-10,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 4 95 0 4 4 34 4 78 17 23 34 18 38 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 311;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(228,0,l),
(239,64,l),
(94,64,l),
(156,116,l),
(171,129,ls),
(218,168,o),
(268,230,o),
(268,269,qs),
(268,307,o),
(219,358,o),
(168,358,qs),
(113,358,o),
(36,297,o),
(23,239,q),
(95,239,l),
(100,263,o),
(131,296,o),
(155,296,qs),
(173,296,o),
(194,277,o),
(194,260,qs),
(194,236,o),
(150,190,o),
(95,142,qs),
(-10,51,l),
(-19,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 4 95 0 4 4 34 4 78 17 23 34 18 38 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(226,0,l),
(238,68,l),
(98,68,l),
(151,112,l),
(169,127,ls),
(217,168,o),
(267,230,o),
(267,269,qs),
(267,306,o),
(218,358,o),
(165,358,qs),
(109,358,o),
(32,297,o),
(18,238,q),
(95,238,l),
(99,261,o),
(127,292,o),
(151,292,qs),
(168,292,o),
(188,275,o),
(188,259,qs),
(188,238,o),
(149,194,o),
(105,156,qs),
(87,141,l),
(-14,53,l),
(-23,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 4 95 0 4 4 34 4 78 17 23 34 18 39 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 293;
}
);
note = two.dnom;
},
{
glyphname = three.dnom;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,-5,o),
(225,34,o),
(260,99,o),
(260,135,qs),
(260,169,o),
(220,215,o),
(183,221,q),
(279,296,l),
(289,353,l),
(57,353,l),
(46,292,l),
(187,292,l),
(71,202,l),
(102,156,l),
(124,167,o),
(141,167,qs),
(163,167,o),
(190,145,o),
(190,125,qs),
(190,96,o),
(153,57,o),
(121,57,qs),
(97,57,o),
(71,80,o),
(71,100,qs),
(71,107,o),
(72,111,q),
(3,111,l),
(1,95,o),
(1,87,qs),
(1,43,o),
(59,-5,o),
(110,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
25 19 2 2 3 18 1 0 2 7 2 2 1 0 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 4 0 3 2 4 3 103 0 1 1 5 98 6 1 5 5 34 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 4 0 3 2 4 3 103 0 1 1 5 98 6 1 5 5 34 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 4 0 3 2 4 3 103 0 1 1 5 98 6 1 5 5 34 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 32 0 31 17 19 36 36 20 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 309;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(163,-5,o),
(230,36,o),
(264,100,o),
(264,134,qs),
(264,169,o),
(222,215,o),
(181,219,q),
(284,300,l),
(294,353,l),
(64,353,l),
(54,298,l),
(205,298,l),
(80,202,l),
(108,160,l),
(130,170,o),
(147,170,qs),
(172,170,o),
(201,147,o),
(201,125,qs),
(201,94,o),
(161,50,o),
(126,50,qs),
(100,50,o),
(72,76,o),
(72,97,qs),
(72,105,o),
(73,110,q),
(10,110,l),
(8,94,o),
(8,87,qs),
(8,43,o),
(65,-5,o),
(116,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
25 19 2 2 3 18 1 0 2 7 2 2 1 0 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 4 0 3 2 4 3 103 0 1 1 5 98 6 1 5 5 34 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 4 0 3 2 4 3 103 0 1 1 5 98 6 1 5 5 34 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 4 0 3 2 4 3 103 0 1 1 5 98 6 1 5 5 34 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 32 0 31 17 19 36 36 20 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 320;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(154,-5,o),
(222,33,o),
(258,97,o),
(258,135,qs),
(258,169,o),
(218,215,o),
(183,221,q),
(277,294,l),
(287,353,l),
(54,353,l),
(43,289,l),
(181,289,l),
(67,201,l),
(99,154,l),
(120,165,o),
(138,165,qs),
(160,165,o),
(186,145,o),
(186,125,qs),
(186,97,o),
(151,59,o),
(119,59,qs),
(96,59,o),
(71,81,o),
(71,100,qs),
(71,108,o),
(72,111,q),
(1,111,l),
(-1,95,o),
(-1,87,qs),
(-1,43,o),
(57,-5,o),
(108,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
25 19 2 2 3 18 1 0 2 7 2 2 1 0 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 4 0 3 2 4 3 103 0 1 1 5 98 6 1 5 5 34 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 4 0 3 2 4 3 103 0 1 1 5 98 6 1 5 5 34 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 4 0 3 2 4 3 103 0 1 1 5 98 6 1 5 5 34 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 32 0 31 17 19 36 36 20 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 305;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(173,-5,o),
(255,75,o),
(255,135,qs),
(255,168,o),
(217,214,o),
(184,222,q),
(273,291,l),
(284,353,l),
(49,353,l),
(37,285,l),
(169,285,l),
(61,201,l),
(95,151,l),
(116,163,o),
(134,163,qs),
(154,163,o),
(179,143,o),
(179,125,qs),
(179,99,o),
(145,63,o),
(116,63,qs),
(94,63,o),
(70,84,o),
(70,102,qs),
(70,109,o),
(71,112,q),
(-4,112,l),
(-6,94,o),
(-6,87,qs),
(-6,43,o),
(53,-5,o),
(104,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
25 19 2 2 3 18 1 0 2 7 2 2 1 0 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 4 0 3 2 4 3 103 0 1 1 5 98 6 1 5 5 34 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 4 0 3 2 4 3 103 0 1 1 5 98 6 1 5 5 34 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 4 0 3 2 4 3 103 0 1 1 5 98 6 1 5 5 34 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 31 0 30 17 19 36 36 20 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 297;
}
);
note = three.dnom;
},
{
glyphname = four.dnom;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,0,l),
(216,65,l),
(256,65,l),
(268,127,l),
(228,127,l),
(243,213,l),
(176,213,l),
(161,127,l),
(71,127,l),
(223,353,l),
(152,353,l),
(-7,120,l),
(-17,65,l),
(146,65,l),
(134,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 3 1 133 0 3 2 2 3 112 4 1 2 5 1 0 6 2 0 104 0 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 1 3 1 133 0 3 2 3 133 4 1 2 5 1 0 6 2 0 104 0 6 6 34 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(203,0,l),
(215,66,l),
(256,66,l),
(266,122,l),
(225,122,l),
(241,213,l),
(181,213,l),
(165,122,l),
(68,122,l),
(223,353,l),
(159,353,l),
(-2,117,l),
(-11,66,l),
(151,66,l),
(139,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 3 1 133 0 3 2 2 3 112 4 1 2 5 1 0 6 2 0 104 0 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 1 3 1 133 0 3 2 3 133 4 1 2 5 1 0 6 2 0 104 0 6 6 34 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(205,0,l),
(216,64,l),
(256,64,l),
(268,129,l),
(228,129,l),
(243,213,l),
(174,213,l),
(160,129,l),
(72,129,l),
(222,353,l),
(149,353,l),
(-9,120,l),
(-20,64,l),
(144,64,l),
(132,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 3 1 133 0 3 2 2 3 112 4 1 2 5 1 0 6 2 0 104 0 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 1 3 1 133 0 3 2 3 133 4 1 2 5 1 0 6 2 0 104 0 6 6 34 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 297;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(206,0,l),
(217,63,l),
(256,63,l),
(269,132,l),
(230,132,l),
(244,213,l),
(171,213,l),
(157,132,l),
(74,132,l),
(222,353,l),
(144,353,l),
(-13,122,l),
(-24,63,l),
(140,63,l),
(129,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 3 1 133 0 3 2 2 3 112 4 1 2 5 1 0 6 2 0 104 0 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 1 3 1 133 0 3 2 3 133 4 1 2 5 1 0 6 2 0 104 0 6 6 34 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = four.dnom;
},
{
glyphname = five.dnom;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,-5,o),
(218,36,o),
(259,107,o),
(259,149,qs),
(259,191,o),
(208,245,o),
(162,245,qs),
(122,245,o),
(93,224,q),
(118,291,l),
(262,291,l),
(274,353,l),
(76,353,l),
(9,149,l),
(76,149,l),
(87,167,o),
(120,187,o),
(141,187,qs),
(163,187,o),
(189,160,o),
(189,137,qs),
(189,105,o),
(148,57,o),
(117,57,qs),
(94,57,o),
(66,83,o),
(66,103,q),
(-4,103,l),
(-9,55,o),
(49,-5,o),
(106,-5,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 0 2 3 0 128 0 0 1 1 0 112 0 4 0 5 6 4 5 103 0 6 0 2 3 6 2 105 0 1 1 7 98 8 1 7 7 34 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 4 0 5 6 4 5 103 0 6 0 2 3 6 2 105 0 1 1 7 98 8 1 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 30 0 29 34 17 17 18 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(152,-5,o),
(222,36,o),
(262,106,o),
(262,147,qs),
(262,189,o),
(213,243,o),
(167,243,qs),
(144,243,o),
(103,228,o),
(89,215,q),
(120,297,l),
(267,297,l),
(277,353,l),
(82,353,l),
(16,152,l),
(78,152,l),
(88,169,o),
(125,191,o),
(147,191,qs),
(171,191,o),
(199,162,o),
(199,137,qs),
(199,103,o),
(155,50,o),
(121,50,qs),
(96,50,o),
(66,78,o),
(65,100,q),
(2,100,l),
(-4,57,o),
(53,-5,o),
(111,-5,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 0 2 3 0 128 0 0 1 1 0 112 0 4 0 5 6 4 5 103 0 6 0 2 3 6 2 105 0 1 1 7 98 8 1 7 7 34 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 4 0 5 6 4 5 103 0 6 0 2 3 6 2 105 0 1 1 7 98 8 1 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 31 0 30 35 17 17 18 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(145,-5,o),
(216,36,o),
(257,107,o),
(257,150,qs),
(257,192,o),
(207,246,o),
(160,246,qs),
(124,246,o),
(94,226,q),
(117,288,l),
(260,288,l),
(272,353,l),
(73,353,l),
(6,147,l),
(75,147,l),
(99,185,o),
(139,185,qs),
(161,185,o),
(186,159,o),
(186,137,qs),
(186,105,o),
(145,59,o),
(116,59,qs),
(94,59,o),
(66,83,o),
(66,103,q),
(-6,103,l),
(-11,54,o),
(47,-5,o),
(104,-5,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 0 2 3 0 128 0 0 1 1 0 112 0 4 0 5 6 4 5 103 0 6 0 2 3 6 2 105 0 1 1 7 98 8 1 7 7 34 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 4 0 5 6 4 5 103 0 6 0 2 3 6 2 105 0 1 1 7 98 8 1 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 29 0 28 34 17 17 17 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(143,-5,o),
(213,36,o),
(255,107,o),
(255,151,qs),
(255,193,o),
(204,247,o),
(157,247,qs),
(123,247,o),
(96,232,q),
(115,284,l),
(257,284,l),
(270,353,l),
(69,353,l),
(1,145,l),
(74,145,l),
(96,182,o),
(135,182,qs),
(155,182,o),
(179,158,o),
(179,137,qs),
(179,105,o),
(140,63,o),
(113,63,qs),
(92,63,o),
(66,86,o),
(66,105,q),
(-10,105,l),
(-15,53,o),
(44,-5,o),
(101,-5,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 2 0 5 3 114 0 0 1 1 0 112 0 4 0 5 6 4 5 103 0 6 0 2 3 6 2 105 0 1 1 7 98 8 1 7 7 34 7 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 0 2 3 0 128 0 0 1 1 0 112 0 4 0 5 6 4 5 103 0 6 0 2 3 6 2 105 0 1 1 7 98 8 1 7 7 34 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 4 0 5 6 4 5 103 0 6 0 2 3 6 2 105 0 1 1 7 98 8 1 7 7 34 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 29 0 28 34 17 17 17 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 293;
}
);
note = five.dnom;
},
{
glyphname = six.dnom;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,-5,o),
(220,36,o),
(258,103,o),
(258,139,qs),
(258,180,o),
(207,231,o),
(168,231,qs),
(145,231,o),
(101,210,o),
(85,192,q),
(96,242,o),
(138,299,o),
(168,299,qs),
(207,299,o),
(209,256,q),
(274,256,l),
(277,301,o),
(226,358,o),
(178,358,qs),
(124,358,o),
(46,283,o),
(6,171,o),
(6,118,qs),
(6,62,o),
(60,-5,o),
(116,-5,qs)
);
},
{
closed = 1;
nodes = (
(103,57,o),
(78,82,o),
(78,102,qs),
(78,129,o),
(117,170,o),
(143,170,qs),
(164,170,o),
(188,146,o),
(188,126,qs),
(188,98,o),
(152,57,o),
(124,57,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 3 2 1 114 0 0 0 2 1 0 2 105 0 3 0 5 6 3 5 105 8 1 6 6 4 97 7 1 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 1 2 3 2 1 3 128 0 0 0 2 1 0 2 105 0 3 0 5 6 3 5 105 8 1 6 6 4 97 7 1 4 4 34 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 36 33 18 37 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(159,-5,o),
(224,36,o),
(261,102,o),
(261,136,qs),
(261,175,o),
(214,228,o),
(173,228,qs),
(147,228,o),
(97,201,o),
(82,180,q),
(94,242,o),
(141,305,o),
(173,305,qs),
(217,305,o),
(219,257,q),
(278,257,l),
(280,302,o),
(229,358,o),
(183,358,qs),
(129,358,o),
(51,283,o),
(12,171,o),
(12,117,qs),
(12,61,o),
(65,-5,o),
(121,-5,qs)
);
},
{
closed = 1;
nodes = (
(105,50,o),
(77,78,o),
(77,100,qs),
(77,129,o),
(120,173,o),
(148,173,qs),
(171,173,o),
(198,147,o),
(198,125,qs),
(198,95,o),
(158,50,o),
(127,50,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 3 2 1 114 0 0 0 2 1 0 2 105 0 3 0 5 6 3 5 105 8 1 6 6 4 97 7 1 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 1 2 3 2 1 3 128 0 0 0 2 1 0 2 105 0 3 0 5 6 3 5 105 8 1 6 6 4 97 7 1 4 4 34 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 36 33 18 37 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 313;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(153,-5,o),
(218,36,o),
(256,103,o),
(256,139,qs),
(256,181,o),
(204,231,o),
(166,231,qs),
(145,231,o),
(102,212,o),
(86,196,q),
(96,242,o),
(137,296,o),
(166,296,qs),
(203,296,o),
(205,255,q),
(273,255,l),
(275,301,o),
(225,358,o),
(176,358,qs),
(122,358,o),
(44,283,o),
(4,171,o),
(4,118,qs),
(4,62,o),
(58,-5,o),
(114,-5,qs)
);
},
{
closed = 1;
nodes = (
(102,59,o),
(78,83,o),
(78,102,qs),
(78,129,o),
(115,168,o),
(141,168,qs),
(161,168,o),
(185,145,o),
(185,126,qs),
(185,98,o),
(149,59,o),
(122,59,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 3 2 1 114 0 0 0 2 1 0 2 105 0 3 0 5 6 3 5 105 8 1 6 6 4 97 7 1 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 1 2 3 2 1 3 128 0 0 0 2 1 0 2 105 0 3 0 5 6 3 5 105 8 1 6 6 4 97 7 1 4 4 34 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 36 33 18 37 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 300;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(151,-5,o),
(216,37,o),
(254,104,o),
(254,141,qs),
(254,185,o),
(200,233,o),
(163,233,qs),
(144,233,o),
(104,218,o),
(88,204,q),
(112,292,o),
(162,292,qs),
(196,292,o),
(198,254,q),
(270,254,l),
(273,300,o),
(223,358,o),
(173,358,qs),
(119,358,o),
(40,283,o),
(0,171,o),
(0,119,qs),
(0,63,o),
(55,-5,o),
(111,-5,qs)
);
},
{
closed = 1;
nodes = (
(101,63,o),
(79,85,o),
(79,103,qs),
(79,129,o),
(114,166,o),
(138,166,qs),
(157,166,o),
(178,144,o),
(178,126,qs),
(178,100,o),
(145,63,o),
(120,63,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 3 2 1 114 0 0 0 2 1 0 2 105 0 3 0 5 6 3 5 105 8 1 6 6 4 97 7 1 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 1 2 3 2 1 3 128 0 0 0 2 1 0 2 105 0 3 0 5 6 3 5 105 8 1 6 6 4 97 7 1 4 4 34 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
25 25 0 0 25 36 25 35 31 29 0 24 0 23 35 33 18 37 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 293;
}
);
note = six.dnom;
},
{
glyphname = seven.dnom;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,0,l),
(294,303,l),
(303,353,l),
(43,353,l),
(32,291,l),
(215,291,l),
(27,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 1 0 0 2 1 0 103 0 2 2 34 2 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 308;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(103,0,l),
(298,307,l),
(307,353,l),
(49,353,l),
(39,298,l),
(229,298,l),
(36,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 1 0 0 2 1 0 103 0 2 2 34 2 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(100,-1,l),
(292,302,l),
(301,352,l),
(40,352,l),
(29,289,l),
(210,289,l),
(23,-1,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 1 0 0 2 1 0 103 0 2 2 34 2 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 305;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(98,-1,l),
(289,299,l),
(298,352,l),
(36,352,l),
(24,284,l),
(201,284,l),
(17,-1,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 1 0 0 2 1 0 103 0 2 2 34 2 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 298;
}
);
note = seven.dnom;
},
{
glyphname = eight.dnom;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(172,-5,o),
(250,65,o),
(250,116,qs),
(250,169,o),
(204,190,q),
(268,219,o),
(268,276,qs),
(268,313,o),
(216,358,o),
(169,358,qs),
(111,358,o),
(32,300,o),
(32,252,qs),
(32,213,o),
(72,190,q),
(37,177,o),
(-3,121,o),
(-3,87,qs),
(-3,47,o),
(54,-5,o),
(107,-5,qs)
);
},
{
closed = 1;
nodes = (
(94,54,o),
(66,78,o),
(66,98,qs),
(66,126,o),
(107,158,o),
(133,158,qs),
(155,158,o),
(182,135,o),
(182,115,qs),
(182,87,o),
(142,54,o),
(116,54,qs)
);
},
{
closed = 1;
nodes = (
(124,210,o),
(101,231,o),
(101,249,qs),
(101,271,o),
(134,300,o),
(157,300,qs),
(176,300,o),
(198,279,o),
(198,262,qs),
(198,240,o),
(165,210,o),
(143,210,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
15 5 2 2 5 1 76 0 0 0 4 5 0 4 105 8 1 5 0 2 3 5 2 105 7 1 3 3 1 97 6 1 1 1 34 1 78 33 33 21 21 0 0 33 44 33 43 39 37 21 32 21 31 27 25 0 20 0 19 41 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(175,-5,o),
(253,65,o),
(253,115,qs),
(253,169,o),
(205,189,q),
(271,220,o),
(271,276,qs),
(271,313,o),
(219,358,o),
(173,358,qs),
(116,358,o),
(39,300,o),
(39,252,qs),
(39,231,o),
(61,199,o),
(81,189,q),
(46,177,o),
(3,121,o),
(3,86,qs),
(3,44,o),
(60,-5,o),
(112,-5,qs)
);
},
{
closed = 1;
nodes = (
(95,48,o),
(65,74,o),
(65,96,qs),
(65,128,o),
(111,160,o),
(138,160,qs),
(162,160,o),
(191,136,o),
(191,113,qs),
(191,82,o),
(146,48,o),
(120,48,qs)
);
},
{
closed = 1;
nodes = (
(127,208,o),
(101,230,o),
(101,250,qs),
(101,274,o),
(137,305,o),
(163,305,qs),
(184,305,o),
(208,283,o),
(208,264,qs),
(208,240,o),
(172,208,o),
(148,208,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
16 5 2 2 5 1 76 0 0 0 4 5 0 4 105 8 1 5 0 2 3 5 2 105 7 1 3 3 1 97 6 1 1 1 34 1 78 34 34 22 22 0 0 34 45 34 44 40 38 22 33 22 32 28 26 0 21 0 20 42 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 308;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(170,-5,o),
(249,65,o),
(249,116,qs),
(249,169,o),
(204,190,q),
(231,202,o),
(267,245,o),
(267,276,qs),
(267,313,o),
(214,358,o),
(167,358,qs),
(108,358,o),
(30,299,o),
(30,251,qs),
(30,213,o),
(68,190,q),
(34,177,o),
(-6,120,o),
(-6,87,qs),
(-6,48,o),
(52,-5,o),
(105,-5,qs)
);
},
{
closed = 1;
nodes = (
(93,55,o),
(66,80,o),
(66,99,qs),
(66,125,o),
(106,157,o),
(131,157,qs),
(153,157,o),
(178,134,o),
(178,115,qs),
(178,87,o),
(140,55,o),
(115,55,qs)
);
},
{
closed = 1;
nodes = (
(122,211,o),
(100,231,o),
(100,249,qs),
(100,270,o),
(133,298,o),
(155,298,qs),
(173,298,o),
(195,277,o),
(195,261,qs),
(195,240,o),
(163,211,o),
(141,211,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
16 5 2 2 5 1 76 0 0 0 4 5 0 4 105 8 1 5 0 2 3 5 2 105 7 1 3 3 1 97 6 1 1 1 34 1 78 34 34 22 22 0 0 34 45 34 44 40 38 22 33 22 32 28 26 0 21 0 20 41 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 295;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(146,-5,o),
(212,28,o),
(247,84,o),
(247,117,qs),
(247,169,o),
(203,190,q),
(229,202,o),
(265,246,o),
(265,276,qs),
(265,313,o),
(212,358,o),
(164,358,qs),
(104,358,o),
(25,299,o),
(25,251,qs),
(25,215,o),
(62,190,q),
(28,177,o),
(-10,121,o),
(-10,88,qs),
(-10,50,o),
(48,-5,o),
(102,-5,qs)
);
},
{
closed = 1;
nodes = (
(92,59,o),
(67,82,o),
(67,100,qs),
(67,124,o),
(104,156,o),
(127,156,qs),
(148,156,o),
(172,134,o),
(172,116,qs),
(172,90,o),
(137,59,o),
(112,59,qs)
);
},
{
closed = 1;
nodes = (
(120,212,o),
(100,231,o),
(100,248,qs),
(100,267,o),
(131,295,o),
(151,295,qs),
(168,295,o),
(188,274,o),
(188,260,qs),
(188,240,o),
(158,212,o),
(138,212,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
16 5 2 2 5 1 76 0 0 0 4 5 0 4 105 8 1 5 0 2 3 5 2 105 7 1 3 3 1 97 6 1 1 1 34 1 78 35 35 23 23 0 0 35 46 35 45 41 39 23 34 23 33 29 27 0 22 0 21 41 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 289;
}
);
note = eight.dnom;
},
{
glyphname = nine.dnom;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,-5,o),
(232,71,o),
(272,183,o),
(272,236,qs),
(272,291,o),
(218,358,o),
(162,358,qs),
(123,358,o),
(58,317,o),
(20,251,o),
(20,217,qs),
(20,176,o),
(69,123,o),
(110,123,qs),
(133,123,o),
(178,144,o),
(194,161,q),
(183,111,o),
(141,55,o),
(111,55,qs),
(72,55,o),
(70,99,q),
(5,99,l),
(2,52,o),
(52,-5,o),
(100,-5,qs)
);
},
{
closed = 1;
nodes = (
(115,184,o),
(90,208,o),
(90,228,qs),
(90,256,o),
(127,297,o),
(155,297,qs),
(175,297,o),
(201,271,o),
(201,251,qs),
(201,225,o),
(162,184,o),
(136,184,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 2 1 1 0 114 0 3 0 5 6 3 5 105 8 1 6 0 2 0 6 2 105 0 1 1 4 98 7 1 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 2 1 2 0 1 128 0 3 0 5 6 3 5 105 8 1 6 0 2 0 6 2 105 0 1 1 4 98 7 1 4 4 34 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 37 36 33 18 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(158,-5,o),
(236,72,o),
(276,185,o),
(276,237,qs),
(276,292,o),
(222,358,o),
(166,358,qs),
(128,358,o),
(64,317,o),
(26,252,o),
(26,218,qs),
(26,179,o),
(73,125,o),
(114,125,qs),
(141,125,o),
(191,152,o),
(206,173,q),
(194,111,o),
(147,48,o),
(115,48,qs),
(71,48,o),
(69,96,q),
(10,96,l),
(8,51,o),
(58,-5,o),
(104,-5,qs)
);
},
{
closed = 1;
nodes = (
(117,180,o),
(90,206,o),
(90,228,qs),
(90,258,o),
(130,303,o),
(161,303,qs),
(184,303,o),
(211,276,o),
(211,253,qs),
(211,224,o),
(168,180,o),
(140,180,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 2 1 1 0 114 0 3 0 5 6 3 5 105 8 1 6 0 2 0 6 2 105 0 1 1 4 98 7 1 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 2 1 2 0 1 128 0 3 0 5 6 3 5 105 8 1 6 0 2 0 6 2 105 0 1 1 4 98 7 1 4 4 34 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 37 36 33 18 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(152,-5,o),
(230,70,o),
(271,182,o),
(271,235,qs),
(271,291,o),
(216,358,o),
(160,358,qs),
(121,358,o),
(56,317,o),
(18,251,o),
(18,216,qs),
(18,175,o),
(67,122,o),
(108,122,qs),
(130,122,o),
(173,141,o),
(189,157,q),
(179,111,o),
(139,57,o),
(110,57,qs),
(72,57,o),
(70,99,q),
(3,99,l),
(0,52,o),
(50,-5,o),
(98,-5,qs)
);
},
{
closed = 1;
nodes = (
(114,185,o),
(90,208,o),
(90,228,qs),
(90,254,o),
(126,294,o),
(152,294,qs),
(172,294,o),
(197,270,o),
(197,250,qs),
(197,224,o),
(160,185,o),
(134,185,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 2 1 1 0 114 0 3 0 5 6 3 5 105 8 1 6 0 2 0 6 2 105 0 1 1 4 98 7 1 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 2 1 2 0 1 128 0 3 0 5 6 3 5 105 8 1 6 0 2 0 6 2 105 0 1 1 4 98 7 1 4 4 34 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 37 36 33 18 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(148,-5,o),
(227,69,o),
(268,181,o),
(268,234,qs),
(268,290,o),
(213,358,o),
(157,358,qs),
(118,358,o),
(52,317,o),
(14,250,o),
(14,215,qs),
(14,173,o),
(64,120,o),
(105,120,qs),
(124,120,o),
(164,135,o),
(181,149,q),
(157,61,o),
(107,61,qs),
(71,61,o),
(71,101,q),
(-1,101,l),
(-4,53,o),
(45,-5,o),
(95,-5,qs)
);
},
{
closed = 1;
nodes = (
(112,187,o),
(90,209,o),
(90,228,qs),
(90,253,o),
(124,290,o),
(148,290,qs),
(167,290,o),
(190,267,o),
(190,249,qs),
(190,224,o),
(155,187,o),
(131,187,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 2 1 1 0 114 0 3 0 5 6 3 5 105 8 1 6 0 2 0 6 2 105 0 1 1 4 98 7 1 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 2 1 2 0 1 128 0 3 0 5 6 3 5 105 8 1 6 0 2 0 6 2 105 0 1 1 4 98 7 1 4 4 34 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
25 25 0 0 25 36 25 35 31 29 0 24 0 23 37 35 33 18 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 293;
}
);
note = nine.dnom;
},
{
glyphname = zero.numr;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,342,o),
(313,422,o),
(345,534,o),
(345,584,qs),
(345,641,o),
(294,705,o),
(238,705,qs),
(177,705,o),
(100,625,o),
(67,514,o),
(67,465,qs),
(67,408,o),
(119,342,o),
(174,342,qs)
);
},
{
closed = 1;
nodes = (
(164,406,o),
(139,439,o),
(139,473,qs),
(139,503,o),
(156,582,o),
(195,642,o),
(227,642,qs),
(273,642,o),
(273,574,qs),
(273,544,o),
(256,465,o),
(216,406,o),
(185,406,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 3 4 1 1 3 1 101 0 2 2 0 97 0 0 0 33 2 78 14 14 0 0 14 26 14 25 20 18 0 13 0 12 37 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(241,342,o),
(317,423,o),
(349,535,o),
(349,585,qs),
(349,642,o),
(298,705,o),
(243,705,qs),
(182,705,o),
(105,625,o),
(73,514,o),
(73,464,qs),
(73,407,o),
(124,342,o),
(179,342,qs)
);
},
{
closed = 1;
nodes = (
(139,399,o),
(139,472,qs),
(139,503,o),
(157,586,o),
(199,648,o),
(233,648,qs),
(283,648,o),
(283,575,qs),
(283,543,o),
(265,461,o),
(222,399,o),
(189,399,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 3 4 1 1 3 1 101 0 2 2 0 97 0 0 0 33 2 78 14 14 0 0 14 25 14 24 20 18 0 13 0 12 37 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 325;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(234,342,o),
(311,422,o),
(343,533,o),
(343,583,qs),
(343,640,o),
(292,705,o),
(236,705,qs),
(175,705,o),
(98,625,o),
(65,514,o),
(65,465,qs),
(65,408,o),
(117,342,o),
(172,342,qs)
);
},
{
closed = 1;
nodes = (
(164,408,o),
(139,439,o),
(139,473,qs),
(139,502,o),
(155,580,o),
(193,639,o),
(224,639,qs),
(269,639,o),
(269,573,qs),
(269,543,o),
(252,466,o),
(214,408,o),
(184,408,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 3 4 1 1 3 1 101 0 2 2 0 97 0 0 0 33 2 78 14 14 0 0 14 26 14 25 20 18 0 13 0 12 37 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 311;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(231,342,o),
(308,421,o),
(340,532,o),
(340,582,qs),
(340,639,o),
(289,705,o),
(233,705,qs),
(171,705,o),
(94,625,o),
(61,514,o),
(61,465,qs),
(61,408,o),
(113,342,o),
(169,342,qs)
);
},
{
closed = 1;
nodes = (
(163,412,o),
(139,440,o),
(139,474,qs),
(139,502,o),
(154,578,o),
(191,635,o),
(220,635,qs),
(262,635,o),
(262,572,qs),
(262,544,o),
(246,468,o),
(209,412,o),
(181,412,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 3 4 1 1 3 1 101 0 2 2 0 97 0 0 0 33 2 78 14 14 0 0 14 26 14 25 20 18 0 13 0 12 37 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 304;
}
);
note = zero.numr;
},
{
glyphname = one.numr;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(295,347,l),
(306,409,l),
(224,409,l),
(276,700,l),
(239,700,l),
(111,656,l),
(101,601,l),
(195,621,l),
(157,409,l),
(64,409,l),
(53,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 2 2 0 1 1 76 2 1 0 0 3 0 3 100 0 1 1 33 1 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(298,347,l),
(308,402,l),
(225,402,l),
(278,700,l),
(244,700,l),
(117,656,l),
(108,607,l),
(204,628,l),
(164,402,l),
(69,402,l),
(59,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 2 2 0 1 1 76 2 1 0 0 3 0 3 100 0 1 1 33 1 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(293,347,l),
(305,411,l),
(224,411,l),
(275,700,l),
(237,700,l),
(109,656,l),
(99,598,l),
(191,619,l),
(154,411,l),
(62,411,l),
(51,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 2 2 0 1 1 76 2 1 0 0 3 0 3 100 0 1 1 33 1 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(291,347,l),
(303,415,l),
(223,415,l),
(274,700,l),
(233,700,l),
(105,656,l),
(94,594,l),
(185,614,l),
(149,415,l),
(59,415,l),
(47,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 2 2 0 1 1 76 2 1 0 0 3 0 3 100 0 1 1 33 1 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 296;
}
);
note = one.numr;
},
{
glyphname = two.numr;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(290,347,l),
(301,409,l),
(153,409,l),
(219,465,ls),
(262,502,o),
(299,535,o),
(330,587,o),
(330,617,qs),
(330,654,o),
(280,705,o),
(230,705,qs),
(176,705,o),
(99,644,o),
(87,587,q),
(157,587,l),
(161,612,o),
(193,645,o),
(218,645,qs),
(237,645,o),
(259,625,o),
(259,608,qs),
(259,586,o),
(219,541,o),
(178,505,qs),
(161,490,l),
(53,397,l),
(45,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 0 3 0 1 3 128 0 3 0 4 3 4 99 0 0 0 2 97 0 2 2 33 0 78 17 23 34 18 39 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 302;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(293,347,l),
(303,402,l),
(146,402,l),
(226,470,ls),
(268,506,o),
(302,539,o),
(332,588,o),
(332,617,qs),
(332,655,o),
(282,705,o),
(234,705,qs),
(181,705,o),
(106,644,o),
(94,589,q),
(157,589,l),
(162,615,o),
(197,651,o),
(223,651,qs),
(245,651,o),
(268,627,o),
(268,609,qs),
(268,584,o),
(224,536,o),
(173,492,qs),
(59,394,l),
(51,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 0 3 0 1 3 128 0 3 0 4 3 4 99 0 0 0 2 97 0 2 2 33 0 78 17 23 34 18 38 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 311;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(289,347,l),
(300,411,l),
(155,411,l),
(217,463,l),
(232,476,ls),
(279,515,o),
(329,577,o),
(329,616,qs),
(329,654,o),
(280,705,o),
(229,705,qs),
(174,705,o),
(97,644,o),
(84,586,q),
(156,586,l),
(161,610,o),
(192,643,o),
(216,643,qs),
(234,643,o),
(255,624,o),
(255,607,qs),
(255,583,o),
(211,537,o),
(156,489,qs),
(51,398,l),
(42,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 0 3 0 1 3 128 0 3 0 4 3 4 99 0 0 0 2 97 0 2 2 33 0 78 17 23 34 18 38 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(287,347,l),
(299,415,l),
(159,415,l),
(212,459,l),
(230,474,ls),
(278,515,o),
(328,577,o),
(328,616,qs),
(328,653,o),
(279,705,o),
(226,705,qs),
(170,705,o),
(93,644,o),
(79,585,q),
(156,585,l),
(160,608,o),
(188,639,o),
(212,639,qs),
(229,639,o),
(249,622,o),
(249,606,qs),
(249,585,o),
(210,541,o),
(166,503,qs),
(148,488,l),
(47,400,l),
(38,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 0 3 0 1 3 128 0 3 0 4 3 4 99 0 0 0 2 97 0 2 2 33 0 78 17 23 34 18 39 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 293;
}
);
note = two.numr;
},
{
glyphname = three.numr;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,342,o),
(286,381,o),
(321,446,o),
(321,482,qs),
(321,516,o),
(281,562,o),
(244,568,q),
(340,643,l),
(350,700,l),
(118,700,l),
(107,639,l),
(248,639,l),
(132,549,l),
(163,503,l),
(185,514,o),
(202,514,qs),
(224,514,o),
(251,492,o),
(251,472,qs),
(251,443,o),
(214,404,o),
(182,404,qs),
(158,404,o),
(132,427,o),
(132,447,qs),
(132,454,o),
(133,458,q),
(64,458,l),
(62,442,o),
(62,434,qs),
(62,390,o),
(120,342,o),
(171,342,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
25 19 2 2 3 18 1 0 2 7 2 2 1 0 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 1 6 1 5 1 5 102 0 3 3 4 95 0 4 4 33 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 1 6 1 5 1 5 102 0 3 3 4 95 0 4 4 33 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 1 6 1 5 1 5 102 0 3 3 4 95 0 4 4 33 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 32 0 31 17 19 36 36 20 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 309;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(224,342,o),
(291,383,o),
(325,447,o),
(325,481,qs),
(325,516,o),
(283,562,o),
(242,566,q),
(345,647,l),
(355,700,l),
(125,700,l),
(115,645,l),
(266,645,l),
(141,549,l),
(169,507,l),
(191,517,o),
(208,517,qs),
(233,517,o),
(262,494,o),
(262,472,qs),
(262,441,o),
(222,397,o),
(187,397,qs),
(161,397,o),
(133,423,o),
(133,444,qs),
(133,452,o),
(134,457,q),
(71,457,l),
(69,441,o),
(69,434,qs),
(69,390,o),
(126,342,o),
(177,342,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
25 19 2 2 3 18 1 0 2 7 2 2 1 0 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 1 6 1 5 1 5 102 0 3 3 4 95 0 4 4 33 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 1 6 1 5 1 5 102 0 3 3 4 95 0 4 4 33 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 1 6 1 5 1 5 102 0 3 3 4 95 0 4 4 33 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 32 0 31 17 19 36 36 20 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 320;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(215,342,o),
(283,380,o),
(319,444,o),
(319,482,qs),
(319,516,o),
(279,562,o),
(244,568,q),
(338,641,l),
(348,700,l),
(115,700,l),
(104,636,l),
(242,636,l),
(128,548,l),
(160,501,l),
(181,512,o),
(199,512,qs),
(221,512,o),
(247,492,o),
(247,472,qs),
(247,444,o),
(212,406,o),
(180,406,qs),
(157,406,o),
(132,428,o),
(132,447,qs),
(132,455,o),
(133,458,q),
(62,458,l),
(60,442,o),
(60,434,qs),
(60,390,o),
(118,342,o),
(169,342,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
25 19 2 2 3 18 1 0 2 7 2 2 1 0 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 1 6 1 5 1 5 102 0 3 3 4 95 0 4 4 33 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 1 6 1 5 1 5 102 0 3 3 4 95 0 4 4 33 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 1 6 1 5 1 5 102 0 3 3 4 95 0 4 4 33 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 32 0 31 17 19 36 36 20 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 305;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(234,342,o),
(316,422,o),
(316,482,qs),
(316,515,o),
(278,561,o),
(245,569,q),
(334,638,l),
(345,700,l),
(110,700,l),
(98,632,l),
(230,632,l),
(122,548,l),
(156,498,l),
(177,510,o),
(195,510,qs),
(215,510,o),
(240,490,o),
(240,472,qs),
(240,446,o),
(206,410,o),
(177,410,qs),
(155,410,o),
(131,431,o),
(131,449,qs),
(131,456,o),
(132,459,q),
(57,459,l),
(55,441,o),
(55,434,qs),
(55,390,o),
(114,342,o),
(165,342,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
25 19 2 2 3 18 1 0 2 7 2 2 1 0 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 1 6 1 5 1 5 102 0 3 3 4 95 0 4 4 33 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 1 6 1 5 1 5 102 0 3 3 4 95 0 4 4 33 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 1 6 1 5 1 5 102 0 3 3 4 95 0 4 4 33 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 31 0 30 17 19 36 36 20 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 297;
}
);
note = three.numr;
},
{
glyphname = four.numr;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,347,l),
(278,412,l),
(318,412,l),
(329,474,l),
(289,474,l),
(304,560,l),
(238,560,l),
(223,474,l),
(133,474,l),
(284,700,l),
(213,700,l),
(54,467,l),
(44,412,l),
(207,412,l),
(196,347,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 1 2 2 3 114 0 6 0 0 6 113 0 1 1 33 77 5 1 0 0 2 95 4 1 2 2 36 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 1 2 1 3 2 128 0 6 0 0 6 113 0 1 1 33 77 5 1 0 0 2 95 4 1 2 2 36 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 1 2 1 3 2 128 0 6 0 6 134 0 1 1 33 77 5 1 0 0 2 95 4 1 2 2 36 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 0 6 0 6 134 4 1 2 5 1 0 6 2 0 104 0 1 1 33 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 300;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(264,347,l),
(276,413,l),
(317,413,l),
(327,469,l),
(286,469,l),
(302,560,l),
(242,560,l),
(226,469,l),
(129,469,l),
(284,700,l),
(220,700,l),
(59,464,l),
(50,413,l),
(212,413,l),
(200,347,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 2 3 114 0 6 0 0 6 113 4 1 2 5 1 0 6 2 0 104 0 1 1 33 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 3 1 2 1 3 2 128 0 6 0 0 6 113 4 1 2 5 1 0 6 2 0 104 0 1 1 33 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 0 6 0 6 134 4 1 2 5 1 0 6 2 0 104 0 1 1 33 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(267,347,l),
(278,411,l),
(318,411,l),
(330,476,l),
(290,476,l),
(305,560,l),
(236,560,l),
(221,476,l),
(134,476,l),
(284,700,l),
(211,700,l),
(52,467,l),
(42,411,l),
(205,411,l),
(194,347,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 1 2 2 3 114 0 6 0 0 6 113 0 1 1 33 77 5 1 0 0 2 95 4 1 2 2 36 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 1 2 1 3 2 128 0 6 0 0 6 113 0 1 1 33 77 5 1 0 0 2 95 4 1 2 2 36 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 1 2 1 3 2 128 0 6 0 6 134 0 1 1 33 77 5 1 0 0 2 95 4 1 2 2 36 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 0 6 0 6 134 4 1 2 5 1 0 6 2 0 104 0 1 1 33 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 298;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(268,347,l),
(279,410,l),
(318,410,l),
(331,479,l),
(292,479,l),
(306,560,l),
(233,560,l),
(219,479,l),
(136,479,l),
(284,700,l),
(206,700,l),
(49,469,l),
(38,410,l),
(202,410,l),
(191,347,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 1 2 2 3 114 0 6 0 0 6 113 0 1 1 33 77 5 1 0 0 2 95 4 1 2 2 36 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 1 2 1 3 2 128 0 6 0 0 6 113 0 1 1 33 77 5 1 0 0 2 95 4 1 2 2 36 0 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 1 2 1 3 2 128 0 6 0 6 134 0 1 1 33 77 5 1 0 0 2 95 4 1 2 2 36 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 0 6 0 6 134 4 1 2 5 1 0 6 2 0 104 0 1 1 33 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 295;
}
);
note = four.numr;
},
{
glyphname = five.numr;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(210,342,o),
(279,383,o),
(320,454,o),
(320,496,qs),
(320,538,o),
(269,592,o),
(223,592,qs),
(183,592,o),
(154,571,q),
(179,638,l),
(324,638,l),
(335,700,l),
(137,700,l),
(70,496,l),
(137,496,l),
(148,514,o),
(182,534,o),
(203,534,qs),
(225,534,o),
(250,507,o),
(250,484,qs),
(250,452,o),
(209,404,o),
(179,404,qs),
(156,404,o),
(128,430,o),
(127,450,q),
(57,450,l),
(52,402,o),
(111,342,o),
(168,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 2 0 2 3 0 128 0 0 1 1 0 112 0 6 0 2 3 6 2 105 0 1 8 1 7 1 7 102 0 5 5 4 95 0 4 4 33 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 1 8 1 7 1 7 102 0 5 5 4 95 0 4 4 33 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 30 0 29 34 17 17 18 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(215,342,o),
(283,384,o),
(323,453,o),
(323,494,qs),
(323,536,o),
(274,590,o),
(228,590,qs),
(205,590,o),
(164,575,o),
(150,562,q),
(181,644,l),
(328,644,l),
(338,700,l),
(143,700,l),
(77,499,l),
(139,499,l),
(149,516,o),
(186,538,o),
(208,538,qs),
(232,538,o),
(260,509,o),
(260,484,qs),
(260,450,o),
(216,397,o),
(182,397,qs),
(157,397,o),
(127,425,o),
(126,447,q),
(63,447,l),
(58,404,o),
(115,342,o),
(173,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 2 0 2 3 0 128 0 0 1 1 0 112 0 6 0 2 3 6 2 105 0 1 8 1 7 1 7 102 0 5 5 4 95 0 4 4 33 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 1 8 1 7 1 7 102 0 5 5 4 95 0 4 4 33 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 31 0 30 35 17 17 18 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(208,342,o),
(278,383,o),
(318,454,o),
(318,497,qs),
(318,539,o),
(268,593,o),
(221,593,qs),
(185,593,o),
(155,573,q),
(178,635,l),
(322,635,l),
(333,700,l),
(134,700,l),
(67,494,l),
(136,494,l),
(160,532,o),
(201,532,qs),
(222,532,o),
(247,506,o),
(247,484,qs),
(247,451,o),
(207,406,o),
(177,406,qs),
(155,406,o),
(128,430,o),
(127,450,q),
(55,450,l),
(50,401,o),
(109,342,o),
(166,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 2 0 2 3 0 128 0 0 1 1 0 112 0 6 0 2 3 6 2 105 0 1 8 1 7 1 7 102 0 5 5 4 95 0 4 4 33 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 1 8 1 7 1 7 102 0 5 5 4 95 0 4 4 33 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 29 0 28 34 17 17 17 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(205,342,o),
(275,383,o),
(316,454,o),
(316,498,qs),
(316,540,o),
(265,594,o),
(218,594,qs),
(184,594,o),
(157,579,q),
(177,631,l),
(319,631,l),
(331,700,l),
(130,700,l),
(62,492,l),
(135,492,l),
(157,529,o),
(197,529,qs),
(217,529,o),
(240,505,o),
(240,484,qs),
(240,452,o),
(202,410,o),
(175,410,qs),
(154,410,o),
(128,433,o),
(127,452,q),
(51,452,l),
(47,400,o),
(106,342,o),
(163,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 2 0 5 3 114 0 0 1 1 0 112 0 6 0 2 3 6 2 105 0 1 8 1 7 1 7 102 0 5 5 4 95 0 4 4 33 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 2 0 2 3 0 128 0 0 1 1 0 112 0 6 0 2 3 6 2 105 0 1 8 1 7 1 7 102 0 5 5 4 95 0 4 4 33 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 1 8 1 7 1 7 102 0 5 5 4 95 0 4 4 33 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 29 0 28 34 17 17 17 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 293;
}
);
note = five.numr;
},
{
glyphname = six.numr;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,342,o),
(280,383,o),
(318,450,o),
(318,485,qs),
(318,527,o),
(268,578,o),
(229,578,qs),
(206,578,o),
(161,557,o),
(145,539,q),
(156,589,o),
(198,646,o),
(228,646,qs),
(267,646,o),
(269,603,q),
(334,603,l),
(337,649,o),
(287,705,o),
(239,705,qs),
(185,705,o),
(107,629,o),
(67,517,o),
(67,465,qs),
(67,409,o),
(121,342,o),
(177,342,qs)
);
},
{
closed = 1;
nodes = (
(164,404,o),
(138,429,o),
(138,449,qs),
(138,476,o),
(177,517,o),
(203,517,qs),
(224,517,o),
(249,493,o),
(249,472,qs),
(249,445,o),
(212,404,o),
(184,404,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 3 2 1 114 0 3 0 5 6 3 5 105 8 1 6 7 1 4 6 4 101 0 2 2 0 97 0 0 0 33 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 8 1 6 7 1 4 6 4 101 0 2 2 0 97 0 0 0 33 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 36 33 18 37 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(220,342,o),
(284,383,o),
(322,448,o),
(322,482,qs),
(322,521,o),
(275,575,o),
(234,575,qs),
(207,575,o),
(157,548,o),
(142,527,q),
(154,589,o),
(201,652,o),
(233,652,qs),
(277,652,o),
(279,604,q),
(338,604,l),
(340,649,o),
(290,705,o),
(244,705,qs),
(190,705,o),
(112,628,o),
(72,515,o),
(72,463,qs),
(72,408,o),
(126,342,o),
(182,342,qs)
);
},
{
closed = 1;
nodes = (
(165,397,o),
(137,425,o),
(137,447,qs),
(137,476,o),
(180,520,o),
(208,520,qs),
(231,520,o),
(258,494,o),
(258,472,qs),
(258,442,o),
(218,397,o),
(187,397,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 3 2 1 114 0 3 0 5 6 3 5 105 8 1 6 7 1 4 6 4 101 0 2 2 0 97 0 0 0 33 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 8 1 6 7 1 4 6 4 101 0 2 2 0 97 0 0 0 33 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 36 33 18 37 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 313;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(214,342,o),
(279,383,o),
(317,450,o),
(317,486,qs),
(317,528,o),
(265,578,o),
(227,578,qs),
(206,578,o),
(162,559,o),
(146,543,q),
(156,589,o),
(197,643,o),
(226,643,qs),
(265,643,o),
(265,602,q),
(333,602,l),
(335,649,o),
(286,705,o),
(237,705,qs),
(183,705,o),
(105,630,o),
(65,518,o),
(65,465,qs),
(65,409,o),
(119,342,o),
(175,342,qs)
);
},
{
closed = 1;
nodes = (
(163,406,o),
(138,430,o),
(138,450,qs),
(138,476,o),
(176,515,o),
(201,515,qs),
(221,515,o),
(245,492,o),
(245,472,qs),
(245,446,o),
(209,406,o),
(183,406,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 3 2 1 114 0 3 0 5 6 3 5 105 8 1 6 7 1 4 6 4 101 0 2 2 0 97 0 0 0 33 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 8 1 6 7 1 4 6 4 101 0 2 2 0 97 0 0 0 33 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 36 33 18 37 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(211,342,o),
(276,383,o),
(314,451,o),
(314,488,qs),
(314,532,o),
(261,580,o),
(224,580,qs),
(205,580,o),
(165,565,o),
(148,551,q),
(172,639,o),
(222,639,qs),
(258,639,o),
(258,601,q),
(330,601,l),
(333,648,o),
(283,705,o),
(234,705,qs),
(180,705,o),
(101,631,o),
(61,519,o),
(61,466,qs),
(61,410,o),
(116,342,o),
(172,342,qs)
);
},
{
closed = 1;
nodes = (
(162,410,o),
(139,433,o),
(139,451,qs),
(139,476,o),
(174,513,o),
(198,513,qs),
(217,513,o),
(239,491,o),
(239,472,qs),
(239,447,o),
(205,410,o),
(181,410,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 3 2 1 114 0 3 0 5 6 3 5 105 8 1 6 7 1 4 6 4 101 0 2 2 0 97 0 0 0 33 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 8 1 6 7 1 4 6 4 101 0 2 2 0 97 0 0 0 33 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
25 25 0 0 25 36 25 35 31 29 0 24 0 23 35 33 18 37 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 292;
}
);
note = six.numr;
},
{
glyphname = seven.numr;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,347,l),
(355,650,l),
(364,700,l),
(104,700,l),
(93,638,l),
(277,638,l),
(88,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 2 0 2 134 0 0 0 1 95 0 1 1 33 0 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 308;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(164,347,l),
(360,654,l),
(368,700,l),
(110,700,l),
(100,645,l),
(290,645,l),
(97,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 2 0 2 134 0 0 0 1 95 0 1 1 33 0 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(161,346,l),
(353,649,l),
(363,699,l),
(102,699,l),
(91,636,l),
(272,636,l),
(84,346,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 2 0 2 134 0 0 0 1 95 0 1 1 33 0 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 305;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(159,346,l),
(350,646,l),
(360,699,l),
(98,699,l),
(86,631,l),
(263,631,l),
(78,346,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 2 0 2 134 0 0 0 1 95 0 1 1 33 0 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 298;
}
);
note = seven.numr;
},
{
glyphname = eight.numr;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(233,342,o),
(312,413,o),
(312,463,qs),
(312,515,o),
(266,537,q),
(330,567,o),
(330,623,qs),
(330,660,o),
(277,705,o),
(230,705,qs),
(172,705,o),
(94,647,o),
(94,599,qs),
(94,560,o),
(133,537,q),
(99,524,o),
(58,468,o),
(58,434,qs),
(58,394,o),
(116,342,o),
(169,342,qs)
);
},
{
closed = 1;
nodes = (
(156,401,o),
(128,425,o),
(128,445,qs),
(128,473,o),
(169,505,o),
(194,505,qs),
(217,505,o),
(243,482,o),
(243,462,qs),
(243,434,o),
(203,401,o),
(178,401,qs)
);
},
{
closed = 1;
nodes = (
(185,557,o),
(162,578,o),
(162,596,qs),
(162,618,o),
(195,647,o),
(219,647,qs),
(238,647,o),
(260,626,o),
(260,609,qs),
(260,587,o),
(227,557,o),
(205,557,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
15 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 7 1 3 6 1 1 3 1 101 0 4 4 0 97 0 0 0 33 4 78 33 33 21 21 0 0 33 44 33 43 39 37 21 32 21 31 27 25 0 20 0 19 41 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(236,342,o),
(314,412,o),
(314,462,qs),
(314,516,o),
(266,536,q),
(332,567,o),
(332,623,qs),
(332,660,o),
(280,705,o),
(234,705,qs),
(177,705,o),
(100,647,o),
(100,599,qs),
(100,578,o),
(122,546,o),
(142,536,q),
(107,524,o),
(64,468,o),
(64,433,qs),
(64,391,o),
(121,342,o),
(173,342,qs)
);
},
{
closed = 1;
nodes = (
(156,395,o),
(126,421,o),
(126,443,qs),
(126,475,o),
(172,507,o),
(199,507,qs),
(223,507,o),
(252,483,o),
(252,460,qs),
(252,429,o),
(207,395,o),
(181,395,qs)
);
},
{
closed = 1;
nodes = (
(188,555,o),
(162,577,o),
(162,597,qs),
(162,621,o),
(198,652,o),
(224,652,qs),
(245,652,o),
(269,630,o),
(269,611,qs),
(269,587,o),
(233,555,o),
(209,555,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
16 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 7 1 3 6 1 1 3 1 101 0 4 4 0 97 0 0 0 33 4 78 34 34 22 22 0 0 34 45 34 44 40 38 22 33 22 32 28 26 0 21 0 20 42 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 308;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(232,342,o),
(311,412,o),
(311,463,qs),
(311,515,o),
(265,537,q),
(293,549,o),
(329,592,o),
(329,623,qs),
(329,660,o),
(276,705,o),
(229,705,qs),
(170,705,o),
(91,646,o),
(91,598,qs),
(91,561,o),
(130,537,q),
(95,524,o),
(56,468,o),
(56,434,qs),
(56,395,o),
(113,342,o),
(167,342,qs)
);
},
{
closed = 1;
nodes = (
(155,402,o),
(128,427,o),
(128,446,qs),
(128,472,o),
(168,504,o),
(192,504,qs),
(214,504,o),
(240,481,o),
(240,462,qs),
(240,434,o),
(201,402,o),
(176,402,qs)
);
},
{
closed = 1;
nodes = (
(184,558,o),
(162,578,o),
(162,596,qs),
(162,617,o),
(194,645,o),
(217,645,qs),
(235,645,o),
(256,624,o),
(256,608,qs),
(256,587,o),
(224,558,o),
(203,558,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
16 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 7 1 3 6 1 1 3 1 101 0 4 4 0 97 0 0 0 33 4 78 34 34 22 22 0 0 34 45 34 44 40 38 22 33 22 32 28 26 0 21 0 20 41 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 296;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(208,342,o),
(274,375,o),
(309,431,o),
(309,464,qs),
(309,516,o),
(265,537,q),
(291,549,o),
(327,593,o),
(327,623,qs),
(327,660,o),
(274,705,o),
(226,705,qs),
(166,705,o),
(87,646,o),
(87,598,qs),
(87,562,o),
(124,537,q),
(90,524,o),
(52,468,o),
(52,435,qs),
(52,397,o),
(110,342,o),
(164,342,qs)
);
},
{
closed = 1;
nodes = (
(154,406,o),
(129,429,o),
(129,447,qs),
(129,471,o),
(166,503,o),
(189,503,qs),
(210,503,o),
(234,481,o),
(234,463,qs),
(234,437,o),
(199,406,o),
(174,406,qs)
);
},
{
closed = 1;
nodes = (
(182,559,o),
(162,578,o),
(162,595,qs),
(162,614,o),
(193,642,o),
(213,642,qs),
(230,642,o),
(250,621,o),
(250,607,qs),
(250,587,o),
(220,559,o),
(200,559,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
16 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 7 1 3 6 1 1 3 1 101 0 4 4 0 97 0 0 0 33 4 78 35 35 23 23 0 0 35 46 35 45 41 39 23 34 23 33 29 27 0 22 0 21 41 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 290;
}
);
note = eight.numr;
},
{
glyphname = nine.numr;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,342,o),
(294,417,o),
(334,528,o),
(334,582,qs),
(334,638,o),
(280,705,o),
(224,705,qs),
(185,705,o),
(120,664,o),
(82,598,o),
(82,563,qs),
(82,523,o),
(130,470,o),
(171,470,qs),
(194,470,o),
(239,491,o),
(255,508,q),
(244,458,o),
(202,402,o),
(172,402,qs),
(133,402,o),
(131,446,q),
(66,446,l),
(63,399,o),
(114,342,o),
(162,342,qs)
);
},
{
closed = 1;
nodes = (
(176,531,o),
(152,555,o),
(152,575,qs),
(152,603,o),
(188,644,o),
(216,644,qs),
(237,644,o),
(262,619,o),
(262,599,qs),
(262,571,o),
(223,531,o),
(197,531,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 2 1 1 0 114 0 1 7 1 4 1 4 102 0 5 5 3 97 0 3 3 33 77 0 2 2 6 97 8 1 6 6 42 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 1 0 114 8 1 6 0 2 0 6 2 105 0 1 7 1 4 1 4 102 0 5 5 3 97 0 3 3 33 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 1 7 1 4 1 4 102 0 5 5 3 97 0 3 3 33 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 37 36 33 18 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(220,342,o),
(298,417,o),
(337,529,o),
(337,583,qs),
(337,639,o),
(284,705,o),
(228,705,qs),
(190,705,o),
(125,664,o),
(88,598,o),
(88,563,qs),
(88,524,o),
(135,472,o),
(175,472,qs),
(202,472,o),
(252,499,o),
(267,520,q),
(255,458,o),
(208,395,o),
(176,395,qs),
(132,395,o),
(130,443,q),
(71,443,l),
(69,398,o),
(120,342,o),
(166,342,qs)
);
},
{
closed = 1;
nodes = (
(178,527,o),
(151,553,o),
(151,575,qs),
(151,605,o),
(191,650,o),
(222,650,qs),
(245,650,o),
(272,623,o),
(272,600,qs),
(272,571,o),
(229,527,o),
(201,527,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 2 1 1 0 114 0 1 7 1 4 1 4 102 0 5 5 3 97 0 3 3 33 77 0 2 2 6 97 8 1 6 6 42 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 1 7 1 4 1 4 102 0 5 5 3 97 0 3 3 33 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 37 36 33 18 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 313;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(214,342,o),
(292,417,o),
(332,528,o),
(332,581,qs),
(332,637,o),
(278,705,o),
(222,705,qs),
(183,705,o),
(117,663,o),
(79,597,o),
(79,562,qs),
(79,522,o),
(129,469,o),
(170,469,qs),
(192,469,o),
(235,488,o),
(250,504,q),
(240,458,o),
(200,404,o),
(171,404,qs),
(133,404,o),
(131,446,q),
(64,446,l),
(61,399,o),
(112,342,o),
(160,342,qs)
);
},
{
closed = 1;
nodes = (
(175,532,o),
(152,554,o),
(152,574,qs),
(152,602,o),
(187,641,o),
(214,641,qs),
(234,641,o),
(258,618,o),
(258,598,qs),
(258,571,o),
(221,532,o),
(195,532,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 2 1 1 0 114 0 1 7 1 4 1 4 102 0 5 5 3 97 0 3 3 33 77 0 2 2 6 97 8 1 6 6 42 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 1 0 114 8 1 6 0 2 0 6 2 105 0 1 7 1 4 1 4 102 0 5 5 3 97 0 3 3 33 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 1 7 1 4 1 4 102 0 5 5 3 97 0 3 3 33 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 1 0 114 8 1 6 0 2 0 6 2 105 0 1 7 1 4 1 4 102 0 5 5 3 97 0 3 3 33 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 1 7 1 4 1 4 102 0 5 5 3 97 0 3 3 33 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 37 36 33 18 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 300;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(210,342,o),
(289,416,o),
(330,528,o),
(330,580,qs),
(330,636,o),
(275,705,o),
(219,705,qs),
(180,705,o),
(113,663,o),
(75,597,o),
(75,562,qs),
(75,521,o),
(126,467,o),
(167,467,qs),
(186,467,o),
(226,482,o),
(242,496,q),
(218,408,o),
(168,408,qs),
(133,408,o),
(132,448,q),
(60,448,l),
(57,400,o),
(107,342,o),
(157,342,qs)
);
},
{
closed = 1;
nodes = (
(173,534,o),
(152,556,o),
(152,574,qs),
(152,600,o),
(185,637,o),
(210,637,qs),
(229,637,o),
(251,615,o),
(251,597,qs),
(251,571,o),
(216,534,o),
(192,534,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 1 0 114 8 1 6 0 2 0 6 2 105 0 1 7 1 4 1 4 102 0 5 5 3 97 0 3 3 33 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 1 7 1 4 1 4 102 0 5 5 3 97 0 3 3 33 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
25 25 0 0 25 36 25 35 31 29 0 24 0 23 37 35 33 18 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = nine.numr;
},
{
glyphname = fraction;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,0,l),
(672,700,l),
(588,700,l),
(-56,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 575;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(19,0,l),
(663,700,l),
(592,700,l),
(-51,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 571;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(31,0,l),
(675,700,l),
(586,700,l),
(-58,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 576;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(37,0,l),
(681,700,l),
(583,700,l),
(-61,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 579;
}
);
note = fraction;
unicode = 8260;
},
{
glyphname = onehalf;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,0,l),
(771,700,l),
(687,700,l),
(43,0,l)
);
},
{
closed = 1;
nodes = (
(291,347,l),
(302,409,l),
(221,409,l),
(273,700,l),
(235,700,l),
(108,657,l),
(98,601,l),
(191,621,l),
(153,409,l),
(61,409,l),
(50,347,l)
);
},
{
closed = 1;
nodes = (
(674,0,l),
(685,62,l),
(537,62,l),
(603,118,ls),
(646,155,o),
(683,188,o),
(714,240,o),
(714,270,qs),
(714,307,o),
(664,358,o),
(614,358,qs),
(560,358,o),
(483,297,o),
(471,240,q),
(541,240,l),
(545,265,o),
(577,298,o),
(602,298,qs),
(621,298,o),
(643,278,o),
(643,261,qs),
(643,239,o),
(603,194,o),
(562,158,qs),
(545,143,l),
(437,50,l),
(429,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 71 values pushed */
7 6 2 2 0 1 76 3 1 0 2 0 133 0 7 6 9 6 7 9 128 4 1 2 0 5 6 2 5 104 0 8 0 6 7 8 6 105 0 9 1 1 9 87 0 9 9 1 95 10 1 1 9 1 79 41 40 39 38 34 18 40 17 17 20 17 17 16 11 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 758;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(124,0,l),
(768,700,l),
(697,700,l),
(54,0,l)
);
},
{
closed = 1;
nodes = (
(296,347,l),
(306,402,l),
(223,402,l),
(276,700,l),
(242,700,l),
(115,657,l),
(106,607,l),
(202,628,l),
(162,402,l),
(67,402,l),
(57,347,l)
);
},
{
closed = 1;
nodes = (
(676,0,l),
(686,55,l),
(529,55,l),
(609,123,ls),
(651,159,o),
(685,192,o),
(715,241,o),
(715,270,qs),
(715,308,o),
(665,358,o),
(617,358,qs),
(564,358,o),
(489,297,o),
(477,242,q),
(540,242,l),
(545,268,o),
(580,304,o),
(606,304,qs),
(628,304,o),
(651,280,o),
(651,262,qs),
(651,237,o),
(607,189,o),
(556,145,qs),
(442,47,l),
(434,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 71 values pushed */
7 6 2 2 0 1 76 3 1 0 2 0 133 0 7 6 9 6 7 9 128 4 1 2 0 5 6 2 5 104 0 8 0 6 7 8 6 105 0 9 1 1 9 87 0 9 9 1 95 10 1 1 9 1 79 40 39 38 37 34 18 39 17 17 20 17 17 16 11 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 765;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(128,0,l),
(772,700,l),
(683,700,l),
(39,0,l)
);
},
{
closed = 1;
nodes = (
(289,347,l),
(301,411,l),
(220,411,l),
(271,700,l),
(233,700,l),
(105,656,l),
(95,598,l),
(187,619,l),
(150,411,l),
(58,411,l),
(47,347,l)
);
},
{
closed = 1;
nodes = (
(673,0,l),
(685,64,l),
(539,64,l),
(601,116,ls),
(646,154,o),
(682,187,o),
(714,239,o),
(714,269,qs),
(714,307,o),
(664,358,o),
(613,358,qs),
(558,358,o),
(481,297,o),
(468,239,q),
(541,239,l),
(545,263,o),
(575,296,o),
(600,296,qs),
(619,296,o),
(640,277,o),
(640,260,qs),
(640,239,o),
(602,195,o),
(559,157,qs),
(541,142,l),
(435,51,l),
(427,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 71 values pushed */
7 6 2 2 0 1 76 3 1 0 2 0 133 0 7 6 9 6 7 9 128 4 1 2 0 5 6 2 5 104 0 8 0 6 7 8 6 105 0 9 1 1 9 87 0 9 9 1 95 10 1 1 9 1 79 41 40 39 38 34 18 40 17 17 20 17 17 16 11 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 755;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(130,0,l),
(774,700,l),
(676,700,l),
(32,0,l)
);
},
{
closed = 1;
nodes = (
(286,347,l),
(298,415,l),
(218,415,l),
(269,700,l),
(228,700,l),
(100,656,l),
(89,594,l),
(180,614,l),
(144,415,l),
(54,415,l),
(42,347,l)
);
},
{
closed = 1;
nodes = (
(672,0,l),
(684,68,l),
(544,68,l),
(597,112,l),
(615,127,ls),
(663,168,o),
(713,230,o),
(713,269,qs),
(713,306,o),
(664,358,o),
(611,358,qs),
(555,358,o),
(478,297,o),
(464,238,q),
(541,238,l),
(545,261,o),
(573,292,o),
(597,292,qs),
(614,292,o),
(634,275,o),
(634,259,qs),
(634,238,o),
(595,194,o),
(551,156,qs),
(533,141,l),
(432,53,l),
(423,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 71 values pushed */
7 6 2 2 0 1 76 3 1 0 2 0 133 0 7 6 9 6 7 9 128 4 1 2 0 5 6 2 5 104 0 8 0 6 7 8 6 105 0 9 1 1 9 87 0 9 9 1 95 10 1 1 9 1 79 41 40 39 38 34 18 40 17 17 20 17 17 16 11 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 750;
}
);
note = onehalf;
unicode = 189;
},
{
glyphname = onequarter;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(124,0,l),
(768,700,l),
(684,700,l),
(40,0,l)
);
},
{
closed = 1;
nodes = (
(291,347,l),
(302,409,l),
(221,409,l),
(273,700,l),
(235,700,l),
(108,657,l),
(98,601,l),
(191,621,l),
(153,409,l),
(61,409,l),
(50,347,l)
);
},
{
closed = 1;
nodes = (
(633,0,l),
(644,65,l),
(684,65,l),
(696,127,l),
(656,127,l),
(671,213,l),
(604,213,l),
(589,127,l),
(499,127,l),
(651,353,l),
(580,353,l),
(421,120,l),
(411,65,l),
(574,65,l),
(562,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 7 values pushed */
7 6 2 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
3 1 0 2 0 133 0 7 2 5 2 7 5 128 0 9 5 8 8 9 114 12 1 1 6 6 1 113 4 1 2 0 5 9 2 5 104 10 1 8 6 6 8 87 10 1 8 8 6 96 11 1 6 8 6 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
3 1 0 2 0 133 0 7 2 5 2 7 5 128 0 9 5 8 5 9 8 128 12 1 1 6 6 1 113 4 1 2 0 5 9 2 5 104 10 1 8 6 6 8 87 10 1 8 8 6 96 11 1 6 8 6 80
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
3 1 0 2 0 133 0 7 2 5 2 7 5 128 0 9 5 8 5 9 8 128 12 1 1 6 1 134 4 1 2 0 5 9 2 5 104 10 1 8 6 6 8 87 10 1 8 8 6 96 11 1 6 8 6 80
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
29 28 27 26 25 24 23 22 17 18 17 17 17 20 17 17 16 13 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 752;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(124,0,l),
(768,700,l),
(697,700,l),
(54,0,l)
);
},
{
closed = 1;
nodes = (
(296,347,l),
(306,402,l),
(223,402,l),
(276,700,l),
(242,700,l),
(115,657,l),
(106,607,l),
(202,628,l),
(162,402,l),
(67,402,l),
(57,347,l)
);
},
{
closed = 1;
nodes = (
(634,0,l),
(646,66,l),
(687,66,l),
(697,122,l),
(656,122,l),
(672,213,l),
(612,213,l),
(596,122,l),
(499,122,l),
(654,353,l),
(590,353,l),
(429,117,l),
(420,66,l),
(582,66,l),
(570,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 7 values pushed */
7 6 2 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
3 1 0 2 0 133 0 7 2 5 2 7 5 128 0 9 5 8 8 9 114 12 1 1 6 6 1 113 4 1 2 0 5 9 2 5 104 10 1 8 6 6 8 87 10 1 8 8 6 96 11 1 6 8 6 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
3 1 0 2 0 133 0 7 2 5 2 7 5 128 0 9 5 8 5 9 8 128 12 1 1 6 6 1 113 4 1 2 0 5 9 2 5 104 10 1 8 6 6 8 87 10 1 8 8 6 96 11 1 6 8 6 80
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
3 1 0 2 0 133 0 7 2 5 2 7 5 128 0 9 5 8 5 9 8 128 12 1 1 6 1 134 4 1 2 0 5 9 2 5 104 10 1 8 6 6 8 87 10 1 8 8 6 96 11 1 6 8 6 80
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
29 28 27 26 25 24 23 22 17 18 17 17 17 20 17 17 16 13 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 759;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(124,0,l),
(768,700,l),
(679,700,l),
(35,0,l)
);
},
{
closed = 1;
nodes = (
(289,347,l),
(301,411,l),
(220,411,l),
(271,700,l),
(233,700,l),
(105,656,l),
(95,598,l),
(187,619,l),
(150,411,l),
(58,411,l),
(47,347,l)
);
},
{
closed = 1;
nodes = (
(632,0,l),
(643,64,l),
(683,64,l),
(695,129,l),
(655,129,l),
(670,213,l),
(601,213,l),
(587,129,l),
(499,129,l),
(649,353,l),
(576,353,l),
(418,120,l),
(407,64,l),
(571,64,l),
(559,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 7 values pushed */
7 6 2 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
3 1 0 2 0 133 0 7 2 5 2 7 5 128 0 9 5 8 8 9 114 12 1 1 6 6 1 113 4 1 2 0 5 9 2 5 104 10 1 8 6 6 8 87 10 1 8 8 6 96 11 1 6 8 6 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
3 1 0 2 0 133 0 7 2 5 2 7 5 128 0 9 5 8 5 9 8 128 12 1 1 6 6 1 113 4 1 2 0 5 9 2 5 104 10 1 8 6 6 8 87 10 1 8 8 6 96 11 1 6 8 6 80
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
3 1 0 2 0 133 0 7 2 5 2 7 5 128 0 9 5 8 5 9 8 128 12 1 1 6 1 134 4 1 2 0 5 9 2 5 104 10 1 8 6 6 8 87 10 1 8 8 6 96 11 1 6 8 6 80
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
29 28 27 26 25 24 23 22 17 18 17 17 17 20 17 17 16 13 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 750;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(124,0,l),
(768,700,l),
(670,700,l),
(26,0,l)
);
},
{
closed = 1;
nodes = (
(286,347,l),
(298,415,l),
(218,415,l),
(269,700,l),
(228,700,l),
(100,656,l),
(89,594,l),
(180,614,l),
(144,415,l),
(54,415,l),
(42,347,l)
);
},
{
closed = 1;
nodes = (
(631,0,l),
(642,63,l),
(681,63,l),
(694,132,l),
(655,132,l),
(669,213,l),
(596,213,l),
(582,132,l),
(499,132,l),
(647,353,l),
(569,353,l),
(412,122,l),
(401,63,l),
(565,63,l),
(554,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 7 values pushed */
7 6 2 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
3 1 0 2 0 133 0 7 2 5 2 7 5 128 0 9 5 8 8 9 114 12 1 1 6 6 1 113 4 1 2 0 5 9 2 5 104 10 1 8 6 6 8 87 10 1 8 8 6 96 11 1 6 8 6 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
3 1 0 2 0 133 0 7 2 5 2 7 5 128 0 9 5 8 5 9 8 128 12 1 1 6 6 1 113 4 1 2 0 5 9 2 5 104 10 1 8 6 6 8 87 10 1 8 8 6 96 11 1 6 8 6 80
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
3 1 0 2 0 133 0 7 2 5 2 7 5 128 0 9 5 8 5 9 8 128 12 1 1 6 1 134 4 1 2 0 5 9 2 5 104 10 1 8 6 6 8 87 10 1 8 8 6 96 11 1 6 8 6 80
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
29 28 27 26 25 24 23 22 17 18 17 17 17 20 17 17 16 13 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 745;
}
);
note = onequarter;
unicode = 188;
},
{
glyphname = threequarters;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,0,l),
(773,700,l),
(688,700,l),
(45,0,l)
);
},
{
closed = 1;
nodes = (
(637,0,l),
(649,65,l),
(689,65,l),
(700,127,l),
(660,127,l),
(675,213,l),
(609,213,l),
(594,127,l),
(504,127,l),
(655,353,l),
(584,353,l),
(425,120,l),
(415,65,l),
(578,65,l),
(567,0,l)
);
},
{
closed = 1;
nodes = (
(226,342,o),
(294,381,o),
(329,446,o),
(329,482,qs),
(329,516,o),
(289,562,o),
(252,568,q),
(348,643,l),
(358,700,l),
(126,700,l),
(115,639,l),
(256,639,l),
(140,549,l),
(171,503,l),
(193,514,o),
(210,514,qs),
(232,514,o),
(259,492,o),
(259,472,qs),
(259,443,o),
(222,404,o),
(190,404,qs),
(166,404,o),
(140,427,o),
(140,447,qs),
(140,454,o),
(141,458,q),
(72,458,l),
(70,442,o),
(70,434,qs),
(70,390,o),
(128,342,o),
(179,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
44 38 2 11 12 37 1 9 11 26 21 2 10 9 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 11 12 9 12 11 114 0 9 10 10 9 112 0 3 10 14 10 3 14 128 0 5 14 4 4 5 114 8 1 1 2 2 1 113 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 11 12 9 12 11 9 128 0 9 10 10 9 112 0 3 10 14 10 3 14 128 0 5 14 4 4 5 114 8 1 1 2 2 1 113 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 11 12 9 12 11 9 128 0 9 10 10 9 112 0 3 10 14 10 3 14 128 0 5 14 4 14 5 4 128 8 1 1 2 2 1 113 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 11 12 9 12 11 9 128 0 9 10 10 9 112 0 3 10 14 10 3 14 128 0 5 14 4 14 5 4 128 8 1 1 2 1 134 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 11 12 9 12 11 9 128 0 9 10 12 9 10 126 0 3 10 14 10 3 14 128 0 5 14 4 14 5 4 128 8 1 1 2 1 134 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
19 19 19 51 19 50 42 41 40 39 36 34 30 28 24 23 17 17 17 17 17 18 17 17 16 16 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 757;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(123,0,l),
(767,700,l),
(696,700,l),
(53,0,l)
);
},
{
closed = 1;
nodes = (
(633,0,l),
(645,66,l),
(686,66,l),
(696,122,l),
(655,122,l),
(671,213,l),
(611,213,l),
(595,122,l),
(498,122,l),
(653,353,l),
(589,353,l),
(428,117,l),
(419,66,l),
(581,66,l),
(569,0,l)
);
},
{
closed = 1;
nodes = (
(230,342,o),
(297,383,o),
(331,447,o),
(331,481,qs),
(331,516,o),
(289,562,o),
(248,566,q),
(351,647,l),
(361,700,l),
(131,700,l),
(121,645,l),
(272,645,l),
(147,549,l),
(175,507,l),
(197,517,o),
(214,517,qs),
(239,517,o),
(268,494,o),
(268,472,qs),
(268,441,o),
(228,397,o),
(193,397,qs),
(167,397,o),
(139,423,o),
(139,444,qs),
(139,452,o),
(140,457,q),
(77,457,l),
(75,441,o),
(75,434,qs),
(75,390,o),
(132,342,o),
(183,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
44 38 2 11 12 37 1 9 11 26 21 2 10 9 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 11 12 9 12 11 114 0 9 10 10 9 112 0 3 10 14 10 3 14 128 0 5 14 4 4 5 114 8 1 1 2 2 1 113 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 11 12 9 12 11 9 128 0 9 10 10 9 112 0 3 10 14 10 3 14 128 0 5 14 4 4 5 114 8 1 1 2 2 1 113 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 11 12 9 12 11 9 128 0 9 10 10 9 112 0 3 10 14 10 3 14 128 0 5 14 4 14 5 4 128 8 1 1 2 2 1 113 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 11 12 9 12 11 9 128 0 9 10 10 9 112 0 3 10 14 10 3 14 128 0 5 14 4 14 5 4 128 8 1 1 2 1 134 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 11 12 9 12 11 9 128 0 9 10 12 9 10 126 0 3 10 14 10 3 14 128 0 5 14 4 14 5 4 128 8 1 1 2 1 134 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
19 19 19 51 19 50 42 41 40 39 36 34 30 28 24 23 17 17 17 17 17 18 17 17 16 16 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 758;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(130,0,l),
(774,700,l),
(685,700,l),
(42,0,l)
);
},
{
closed = 1;
nodes = (
(638,0,l),
(650,64,l),
(689,64,l),
(701,129,l),
(662,129,l),
(676,213,l),
(608,213,l),
(593,129,l),
(505,129,l),
(656,353,l),
(582,353,l),
(424,120,l),
(414,64,l),
(577,64,l),
(566,0,l)
);
},
{
closed = 1;
nodes = (
(224,342,o),
(292,380,o),
(328,444,o),
(328,482,qs),
(328,516,o),
(288,562,o),
(253,568,q),
(346,641,l),
(357,700,l),
(124,700,l),
(112,636,l),
(251,636,l),
(137,548,l),
(169,501,l),
(190,512,o),
(208,512,qs),
(230,512,o),
(256,492,o),
(256,472,qs),
(256,444,o),
(220,406,o),
(189,406,qs),
(166,406,o),
(140,428,o),
(140,447,qs),
(140,455,o),
(141,458,q),
(70,458,l),
(68,442,o),
(68,434,qs),
(68,390,o),
(127,342,o),
(178,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
44 38 2 11 12 37 1 9 11 26 21 2 10 9 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 11 12 9 12 11 114 0 9 10 10 9 112 0 3 10 14 10 3 14 128 0 5 14 4 4 5 114 8 1 1 2 2 1 113 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 11 12 9 12 11 9 128 0 9 10 10 9 112 0 3 10 14 10 3 14 128 0 5 14 4 4 5 114 8 1 1 2 2 1 113 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 11 12 9 12 11 9 128 0 9 10 10 9 112 0 3 10 14 10 3 14 128 0 5 14 4 14 5 4 128 8 1 1 2 2 1 113 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 11 12 9 12 11 9 128 0 9 10 10 9 112 0 3 10 14 10 3 14 128 0 5 14 4 14 5 4 128 8 1 1 2 1 134 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 11 12 9 12 11 9 128 0 9 10 12 9 10 126 0 3 10 14 10 3 14 128 0 5 14 4 14 5 4 128 8 1 1 2 1 134 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
19 19 19 51 19 50 42 41 40 39 36 34 30 28 24 23 17 17 17 17 17 18 17 17 16 16 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 756;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(134,0,l),
(778,700,l),
(680,700,l),
(36,0,l)
);
},
{
closed = 1;
nodes = (
(641,0,l),
(652,63,l),
(691,63,l),
(704,132,l),
(665,132,l),
(679,213,l),
(606,213,l),
(592,132,l),
(509,132,l),
(657,353,l),
(579,353,l),
(422,122,l),
(411,63,l),
(575,63,l),
(564,0,l)
);
},
{
closed = 1;
nodes = (
(244,342,o),
(326,422,o),
(326,482,qs),
(326,515,o),
(288,561,o),
(255,569,q),
(344,638,l),
(355,700,l),
(120,700,l),
(108,632,l),
(240,632,l),
(132,548,l),
(166,498,l),
(187,510,o),
(205,510,qs),
(225,510,o),
(250,490,o),
(250,472,qs),
(250,446,o),
(216,410,o),
(187,410,qs),
(165,410,o),
(141,431,o),
(141,449,qs),
(141,456,o),
(142,459,q),
(67,459,l),
(65,441,o),
(65,434,qs),
(65,390,o),
(124,342,o),
(175,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
44 38 2 11 12 37 1 9 11 26 21 2 10 9 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 11 12 9 12 11 114 0 9 10 10 9 112 0 3 10 14 10 3 14 128 0 5 14 4 4 5 114 8 1 1 2 2 1 113 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 11 12 9 12 11 9 128 0 9 10 10 9 112 0 3 10 14 10 3 14 128 0 5 14 4 4 5 114 8 1 1 2 2 1 113 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 11 12 9 12 11 9 128 0 9 10 10 9 112 0 3 10 14 10 3 14 128 0 5 14 4 14 5 4 128 8 1 1 2 2 1 113 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 11 12 9 12 11 9 128 0 9 10 10 9 112 0 3 10 14 10 3 14 128 0 5 14 4 14 5 4 128 8 1 1 2 1 134 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 11 12 9 12 11 9 128 0 9 10 12 9 10 126 0 3 10 14 10 3 14 128 0 5 14 4 14 5 4 128 8 1 1 2 1 134 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
19 19 19 50 19 49 42 41 40 39 36 34 30 28 24 23 17 17 17 17 17 18 17 17 16 16 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 755;
}
);
note = threequarters;
unicode = 190;
},
{
glyphname = oneeighth;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(125,0,l),
(769,700,l),
(684,700,l),
(41,0,l)
);
},
{
closed = 1;
nodes = (
(291,347,l),
(302,409,l),
(221,409,l),
(273,700,l),
(235,700,l),
(108,657,l),
(98,601,l),
(191,621,l),
(153,409,l),
(61,409,l),
(50,347,l)
);
},
{
closed = 1;
nodes = (
(536,54,o),
(508,78,o),
(508,98,qs),
(508,126,o),
(549,158,o),
(575,158,qs),
(597,158,o),
(624,135,o),
(624,115,qs),
(624,87,o),
(584,54,o),
(558,54,qs)
);
},
{
closed = 1;
nodes = (
(614,-5,o),
(692,65,o),
(692,116,qs),
(692,169,o),
(646,190,q),
(710,219,o),
(710,276,qs),
(710,313,o),
(658,358,o),
(611,358,qs),
(553,358,o),
(474,300,o),
(474,252,qs),
(474,213,o),
(514,190,q),
(479,177,o),
(439,121,o),
(439,87,qs),
(439,47,o),
(496,-5,o),
(549,-5,qs)
);
},
{
closed = 1;
nodes = (
(566,210,o),
(543,231,o),
(543,249,qs),
(543,271,o),
(576,300,o),
(599,300,qs),
(618,300,o),
(640,279,o),
(640,262,qs),
(640,240,o),
(607,210,o),
(585,210,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
7 6 2 2 0 42 32 2 6 11 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
4 1 2 0 5 10 2 5 104 0 8 0 10 11 8 10 105 14 1 11 0 6 7 11 6 105 3 1 0 0 33 77 12 1 7 7 1 97 13 9 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
4 1 2 0 5 10 2 5 104 0 8 0 10 11 8 10 105 14 1 11 0 6 7 11 6 105 3 1 0 0 33 77 0 1 1 34 77 12 1 7 7 9 97 13 1 9 9 34 9 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
48 48 27 27 15 15 48 59 48 58 54 52 27 47 27 46 38 36 15 26 15 25 37 17 17 20 17 17 16 15 8 29
CALL[ ]	/* CallFunction */";
};
width = 754;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(124,0,l),
(768,700,l),
(697,700,l),
(54,0,l)
);
},
{
closed = 1;
nodes = (
(296,347,l),
(306,402,l),
(223,402,l),
(276,700,l),
(242,700,l),
(115,657,l),
(106,607,l),
(202,628,l),
(162,402,l),
(67,402,l),
(57,347,l)
);
},
{
closed = 1;
nodes = (
(536,48,o),
(506,74,o),
(506,96,qs),
(506,128,o),
(552,160,o),
(579,160,qs),
(603,160,o),
(632,136,o),
(632,113,qs),
(632,82,o),
(587,48,o),
(561,48,qs)
);
},
{
closed = 1;
nodes = (
(616,-5,o),
(694,65,o),
(694,115,qs),
(694,169,o),
(646,189,q),
(712,220,o),
(712,276,qs),
(712,313,o),
(660,358,o),
(614,358,qs),
(557,358,o),
(480,300,o),
(480,252,qs),
(480,231,o),
(502,199,o),
(522,189,q),
(487,177,o),
(444,121,o),
(444,86,qs),
(444,44,o),
(501,-5,o),
(553,-5,qs)
);
},
{
closed = 1;
nodes = (
(568,208,o),
(542,230,o),
(542,250,qs),
(542,274,o),
(578,305,o),
(604,305,qs),
(625,305,o),
(649,283,o),
(649,264,qs),
(649,240,o),
(613,208,o),
(589,208,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
7 6 2 2 0 43 32 2 6 11 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
4 1 2 0 5 10 2 5 104 0 8 0 10 11 8 10 105 14 1 11 0 6 7 11 6 105 3 1 0 0 33 77 12 1 7 7 1 97 13 9 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
4 1 2 0 5 10 2 5 104 0 8 0 10 11 8 10 105 14 1 11 0 6 7 11 6 105 3 1 0 0 33 77 0 1 1 34 77 12 1 7 7 9 97 13 1 9 9 34 9 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
49 49 27 27 15 15 49 60 49 59 55 53 27 48 27 47 39 37 15 26 15 25 37 17 17 20 17 17 16 15 8 29
CALL[ ]	/* CallFunction */";
};
width = 762;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(125,-1,l),
(769,699,l),
(680,699,l),
(36,-1,l)
);
},
{
closed = 1;
nodes = (
(289,347,l),
(301,411,l),
(220,411,l),
(271,700,l),
(233,700,l),
(105,656,l),
(95,598,l),
(187,619,l),
(150,411,l),
(58,411,l),
(47,347,l)
);
},
{
closed = 1;
nodes = (
(536,55,o),
(509,80,o),
(509,99,qs),
(509,125,o),
(549,157,o),
(573,157,qs),
(595,157,o),
(621,134,o),
(621,115,qs),
(621,87,o),
(582,55,o),
(557,55,qs)
);
},
{
closed = 1;
nodes = (
(613,-5,o),
(691,65,o),
(691,116,qs),
(691,169,o),
(646,190,q),
(673,202,o),
(709,245,o),
(709,276,qs),
(709,314,o),
(657,358,o),
(609,358,qs),
(550,358,o),
(472,299,o),
(472,251,qs),
(472,213,o),
(511,190,q),
(476,177,o),
(437,121,o),
(437,87,qs),
(437,48,o),
(494,-5,o),
(548,-5,qs)
);
},
{
closed = 1;
nodes = (
(565,211,o),
(543,231,o),
(543,249,qs),
(543,270,o),
(575,298,o),
(597,298,qs),
(616,298,o),
(637,277,o),
(637,261,qs),
(637,240,o),
(605,211,o),
(584,211,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
7 6 2 2 0 43 32 2 6 11 2 76 4 1 2 0 5 10 2 5 104 0 8 0 10 11 8 10 105 14 1 11 0 6 7 11 6 105 3 1 0 0 33 77 12 1 7 7 1 97 13 9 2 1 1 34 1 78 49 49 27 27 15 15 49 60 49 59 55 53 27 48 27 47 38 36 15 26 15 25 37 17 17 20 17 17 16 15 8 29
CALL[ ]	/* CallFunction */";
};
width = 751;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(125,-1,l),
(769,699,l),
(671,699,l),
(27,-1,l)
);
},
{
closed = 1;
nodes = (
(286,347,l),
(298,415,l),
(218,415,l),
(269,700,l),
(228,700,l),
(100,656,l),
(89,594,l),
(180,614,l),
(144,415,l),
(54,415,l),
(42,347,l)
);
},
{
closed = 1;
nodes = (
(535,59,o),
(510,82,o),
(510,100,qs),
(510,124,o),
(547,156,o),
(570,156,qs),
(591,156,o),
(615,134,o),
(615,116,qs),
(615,90,o),
(580,59,o),
(555,59,qs)
);
},
{
closed = 1;
nodes = (
(589,-5,o),
(655,28,o),
(690,84,o),
(690,117,qs),
(690,169,o),
(646,190,q),
(672,202,o),
(708,246,o),
(708,276,qs),
(708,313,o),
(655,358,o),
(607,358,qs),
(547,358,o),
(468,299,o),
(468,251,qs),
(468,215,o),
(505,190,q),
(471,177,o),
(433,121,o),
(433,88,qs),
(433,50,o),
(491,-5,o),
(545,-5,qs)
);
},
{
closed = 1;
nodes = (
(563,212,o),
(543,231,o),
(543,248,qs),
(543,267,o),
(574,295,o),
(594,295,qs),
(611,295,o),
(631,274,o),
(631,260,qs),
(631,240,o),
(601,212,o),
(581,212,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
7 6 2 2 0 43 32 2 6 11 2 76 4 1 2 0 5 10 2 5 104 0 8 0 10 11 8 10 105 14 1 11 0 6 7 11 6 105 3 1 0 0 33 77 12 1 7 7 1 97 13 9 2 1 1 34 1 78 50 50 27 27 15 15 50 61 50 60 56 54 27 49 27 48 38 36 15 26 15 25 37 17 17 20 17 17 16 15 8 29
CALL[ ]	/* CallFunction */";
};
width = 745;
}
);
note = oneeighth;
unicode = 8539;
},
{
glyphname = threeeighths;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(124,0,l),
(768,700,l),
(683,700,l),
(40,0,l)
);
},
{
closed = 1;
nodes = (
(226,342,o),
(294,381,o),
(329,446,o),
(329,482,qs),
(329,516,o),
(289,562,o),
(252,568,q),
(348,643,l),
(358,700,l),
(126,700,l),
(115,639,l),
(256,639,l),
(140,549,l),
(171,503,l),
(193,514,o),
(210,514,qs),
(232,514,o),
(259,492,o),
(259,472,qs),
(259,443,o),
(222,404,o),
(190,404,qs),
(166,404,o),
(140,427,o),
(140,447,qs),
(140,454,o),
(141,458,q),
(72,458,l),
(70,442,o),
(70,434,qs),
(70,390,o),
(128,342,o),
(179,342,qs)
);
},
{
closed = 1;
nodes = (
(614,-5,o),
(692,65,o),
(692,116,qs),
(692,169,o),
(646,190,q),
(710,219,o),
(710,276,qs),
(710,313,o),
(658,358,o),
(611,358,qs),
(553,358,o),
(474,300,o),
(474,252,qs),
(474,213,o),
(514,190,q),
(479,177,o),
(439,121,o),
(439,87,qs),
(439,47,o),
(496,-5,o),
(549,-5,qs)
);
},
{
closed = 1;
nodes = (
(536,54,o),
(508,78,o),
(508,98,qs),
(508,126,o),
(549,158,o),
(575,158,qs),
(597,158,o),
(624,135,o),
(624,115,qs),
(624,87,o),
(584,54,o),
(558,54,qs)
);
},
{
closed = 1;
nodes = (
(566,210,o),
(543,231,o),
(543,249,qs),
(543,271,o),
(576,300,o),
(599,300,qs),
(618,300,o),
(640,279,o),
(640,262,qs),
(640,240,o),
(607,210,o),
(585,210,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
29 23 2 4 5 22 1 2 4 11 6 2 3 2 52 42 2 10 13 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 4 5 2 5 4 114 0 2 3 3 2 112 0 3 14 1 7 12 3 7 106 0 8 0 12 13 8 12 105 17 1 13 0 10 11 13 10 105 0 5 5 0 95 6 1 0 0 33 77 16 1 11 11 1 97 15 9 2 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 4 5 2 5 4 2 128 0 2 3 3 2 112 0 3 14 1 7 12 3 7 106 0 8 0 12 13 8 12 105 17 1 13 0 10 11 13 10 105 0 5 5 0 95 6 1 0 0 33 77 16 1 11 11 1 97 15 9 2 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 4 5 2 5 4 2 128 0 2 3 5 2 3 126 0 3 14 1 7 12 3 7 106 0 8 0 12 13 8 12 105 17 1 13 0 10 11 13 10 105 0 5 5 0 95 6 1 0 0 33 77 16 1 11 11 1 97 15 9 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 4 5 2 5 4 2 128 0 2 3 5 2 3 126 0 3 14 1 7 12 3 7 106 0 8 0 12 13 8 12 105 17 1 13 0 10 11 13 10 105 0 5 5 0 95 6 1 0 0 33 77 0 1 1 34 77 16 1 11 11 9 97 15 1 9 9 34 9 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
70 70 58 58 37 37 4 4 70 81 70 80 76 74 58 69 58 68 64 62 37 57 37 56 48 46 4 36 4 35 17 19 36 36 21 17 16 18 8 29
CALL[ ]	/* CallFunction */";
};
width = 751;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(124,0,l),
(768,700,l),
(697,700,l),
(54,0,l)
);
},
{
closed = 1;
nodes = (
(230,342,o),
(297,383,o),
(331,447,o),
(331,481,qs),
(331,516,o),
(289,562,o),
(248,566,q),
(351,647,l),
(361,700,l),
(131,700,l),
(121,645,l),
(272,645,l),
(147,549,l),
(175,507,l),
(197,517,o),
(214,517,qs),
(239,517,o),
(268,494,o),
(268,472,qs),
(268,441,o),
(228,397,o),
(193,397,qs),
(167,397,o),
(139,423,o),
(139,444,qs),
(139,452,o),
(140,457,q),
(77,457,l),
(75,441,o),
(75,434,qs),
(75,390,o),
(132,342,o),
(183,342,qs)
);
},
{
closed = 1;
nodes = (
(616,-5,o),
(694,65,o),
(694,115,qs),
(694,169,o),
(646,189,q),
(712,220,o),
(712,276,qs),
(712,313,o),
(660,358,o),
(614,358,qs),
(557,358,o),
(480,300,o),
(480,252,qs),
(480,231,o),
(502,199,o),
(522,189,q),
(487,177,o),
(444,121,o),
(444,86,qs),
(444,44,o),
(501,-5,o),
(553,-5,qs)
);
},
{
closed = 1;
nodes = (
(536,48,o),
(506,74,o),
(506,96,qs),
(506,128,o),
(552,160,o),
(579,160,qs),
(603,160,o),
(632,136,o),
(632,113,qs),
(632,82,o),
(587,48,o),
(561,48,qs)
);
},
{
closed = 1;
nodes = (
(568,208,o),
(542,230,o),
(542,250,qs),
(542,274,o),
(578,305,o),
(604,305,qs),
(625,305,o),
(649,283,o),
(649,264,qs),
(649,240,o),
(613,208,o),
(589,208,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
29 23 2 4 5 22 1 2 4 11 6 2 3 2 53 42 2 10 13 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 4 5 2 5 4 114 0 2 3 3 2 112 0 3 14 1 7 12 3 7 106 0 8 0 12 13 8 12 105 17 1 13 0 10 11 13 10 105 0 5 5 0 95 6 1 0 0 33 77 16 1 11 11 1 97 15 9 2 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 4 5 2 5 4 2 128 0 2 3 3 2 112 0 3 14 1 7 12 3 7 106 0 8 0 12 13 8 12 105 17 1 13 0 10 11 13 10 105 0 5 5 0 95 6 1 0 0 33 77 16 1 11 11 1 97 15 9 2 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 4 5 2 5 4 2 128 0 2 3 5 2 3 126 0 3 14 1 7 12 3 7 106 0 8 0 12 13 8 12 105 17 1 13 0 10 11 13 10 105 0 5 5 0 95 6 1 0 0 33 77 16 1 11 11 1 97 15 9 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 4 5 2 5 4 2 128 0 2 3 5 2 3 126 0 3 14 1 7 12 3 7 106 0 8 0 12 13 8 12 105 17 1 13 0 10 11 13 10 105 0 5 5 0 95 6 1 0 0 33 77 0 1 1 34 77 16 1 11 11 9 97 15 1 9 9 34 9 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
71 71 59 59 37 37 4 4 71 82 71 81 77 75 59 70 59 69 65 63 37 58 37 57 49 47 4 36 4 35 17 19 36 36 21 17 16 18 8 29
CALL[ ]	/* CallFunction */";
};
width = 762;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(123,-1,l),
(767,699,l),
(678,699,l),
(35,-1,l)
);
},
{
closed = 1;
nodes = (
(224,342,o),
(292,380,o),
(328,444,o),
(328,482,qs),
(328,516,o),
(288,562,o),
(253,568,q),
(346,641,l),
(357,700,l),
(124,700,l),
(112,636,l),
(251,636,l),
(137,548,l),
(169,501,l),
(190,512,o),
(208,512,qs),
(230,512,o),
(256,492,o),
(256,472,qs),
(256,444,o),
(220,406,o),
(189,406,qs),
(166,406,o),
(140,428,o),
(140,447,qs),
(140,455,o),
(141,458,q),
(70,458,l),
(68,442,o),
(68,434,qs),
(68,390,o),
(127,342,o),
(178,342,qs)
);
},
{
closed = 1;
nodes = (
(613,-5,o),
(691,65,o),
(691,116,qs),
(691,169,o),
(646,190,q),
(673,202,o),
(709,245,o),
(709,276,qs),
(709,314,o),
(657,358,o),
(609,358,qs),
(550,358,o),
(472,299,o),
(472,251,qs),
(472,213,o),
(511,190,q),
(476,177,o),
(437,121,o),
(437,87,qs),
(437,48,o),
(494,-5,o),
(548,-5,qs)
);
},
{
closed = 1;
nodes = (
(536,55,o),
(509,80,o),
(509,99,qs),
(509,125,o),
(549,157,o),
(573,157,qs),
(595,157,o),
(621,134,o),
(621,115,qs),
(621,87,o),
(582,55,o),
(557,55,qs)
);
},
{
closed = 1;
nodes = (
(565,211,o),
(543,231,o),
(543,249,qs),
(543,270,o),
(575,298,o),
(597,298,qs),
(616,298,o),
(637,277,o),
(637,261,qs),
(637,240,o),
(605,211,o),
(584,211,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
29 23 2 4 5 22 1 2 4 11 6 2 3 2 53 42 2 10 13 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 4 5 2 5 4 114 0 2 3 3 2 112 0 3 14 1 7 12 3 7 106 0 8 0 12 13 8 12 105 17 1 13 0 10 11 13 10 105 0 5 5 0 95 6 1 0 0 33 77 16 1 11 11 1 97 15 9 2 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 4 5 2 5 4 2 128 0 2 3 3 2 112 0 3 14 1 7 12 3 7 106 0 8 0 12 13 8 12 105 17 1 13 0 10 11 13 10 105 0 5 5 0 95 6 1 0 0 33 77 16 1 11 11 1 97 15 9 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 4 5 2 5 4 2 128 0 2 3 5 2 3 126 0 3 14 1 7 12 3 7 106 0 8 0 12 13 8 12 105 17 1 13 0 10 11 13 10 105 0 5 5 0 95 6 1 0 0 33 77 16 1 11 11 1 97 15 9 2 1 1 34 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
71 71 59 59 37 37 4 4 71 82 71 81 77 75 59 70 59 69 65 63 37 58 37 57 48 46 4 36 4 35 17 19 36 36 21 17 16 18 8 29
CALL[ ]	/* CallFunction */";
};
width = 747;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(123,-1,l),
(767,699,l),
(669,699,l),
(25,-1,l)
);
},
{
closed = 1;
nodes = (
(244,342,o),
(326,422,o),
(326,482,qs),
(326,515,o),
(288,561,o),
(255,569,q),
(344,638,l),
(355,700,l),
(120,700,l),
(108,632,l),
(240,632,l),
(132,548,l),
(166,498,l),
(187,510,o),
(205,510,qs),
(225,510,o),
(250,490,o),
(250,472,qs),
(250,446,o),
(216,410,o),
(187,410,qs),
(165,410,o),
(141,431,o),
(141,449,qs),
(141,456,o),
(142,459,q),
(67,459,l),
(65,441,o),
(65,434,qs),
(65,390,o),
(124,342,o),
(175,342,qs)
);
},
{
closed = 1;
nodes = (
(589,-5,o),
(655,28,o),
(690,84,o),
(690,117,qs),
(690,169,o),
(646,190,q),
(672,202,o),
(708,246,o),
(708,276,qs),
(708,313,o),
(655,358,o),
(607,358,qs),
(547,358,o),
(468,299,o),
(468,251,qs),
(468,215,o),
(505,190,q),
(471,177,o),
(433,121,o),
(433,88,qs),
(433,50,o),
(491,-5,o),
(545,-5,qs)
);
},
{
closed = 1;
nodes = (
(535,59,o),
(510,82,o),
(510,100,qs),
(510,124,o),
(547,156,o),
(570,156,qs),
(591,156,o),
(615,134,o),
(615,116,qs),
(615,90,o),
(580,59,o),
(555,59,qs)
);
},
{
closed = 1;
nodes = (
(563,212,o),
(543,231,o),
(543,248,qs),
(543,267,o),
(574,295,o),
(594,295,qs),
(611,295,o),
(631,274,o),
(631,260,qs),
(631,240,o),
(601,212,o),
(581,212,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
29 23 2 4 5 22 1 2 4 11 6 2 3 2 52 41 2 10 13 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 4 5 2 5 4 114 0 2 3 3 2 112 0 3 14 1 7 12 3 7 106 0 8 0 12 13 8 12 105 17 1 13 0 10 11 13 10 105 0 5 5 0 95 6 1 0 0 33 77 16 1 11 11 1 97 15 9 2 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 4 5 2 5 4 2 128 0 2 3 3 2 112 0 3 14 1 7 12 3 7 106 0 8 0 12 13 8 12 105 17 1 13 0 10 11 13 10 105 0 5 5 0 95 6 1 0 0 33 77 16 1 11 11 1 97 15 9 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 4 5 2 5 4 2 128 0 2 3 5 2 3 126 0 3 14 1 7 12 3 7 106 0 8 0 12 13 8 12 105 17 1 13 0 10 11 13 10 105 0 5 5 0 95 6 1 0 0 33 77 16 1 11 11 1 97 15 9 2 1 1 34 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
71 71 59 59 36 36 4 4 71 82 71 81 77 75 59 70 59 69 65 63 36 58 36 57 47 45 4 35 4 34 17 19 36 36 21 17 16 18 8 29
CALL[ ]	/* CallFunction */";
};
width = 740;
}
);
note = threeeighths;
unicode = 8540;
},
{
glyphname = fiveeighths;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,0,l),
(772,700,l),
(687,700,l),
(43,0,l)
);
},
{
closed = 1;
nodes = (
(225,342,o),
(294,383,o),
(335,454,o),
(335,496,qs),
(335,538,o),
(284,592,o),
(238,592,qs),
(198,592,o),
(169,571,q),
(194,638,l),
(339,638,l),
(350,700,l),
(152,700,l),
(85,496,l),
(152,496,l),
(163,514,o),
(197,534,o),
(218,534,qs),
(240,534,o),
(265,507,o),
(265,484,qs),
(265,452,o),
(224,404,o),
(194,404,qs),
(171,404,o),
(143,430,o),
(142,450,q),
(72,450,l),
(67,402,o),
(126,342,o),
(183,342,qs)
);
},
{
closed = 1;
nodes = (
(618,-5,o),
(696,65,o),
(696,116,qs),
(696,169,o),
(650,190,q),
(714,219,o),
(714,276,qs),
(714,313,o),
(662,358,o),
(615,358,qs),
(557,358,o),
(478,300,o),
(478,252,qs),
(478,213,o),
(518,190,q),
(483,177,o),
(443,121,o),
(443,87,qs),
(443,47,o),
(500,-5,o),
(553,-5,qs)
);
},
{
closed = 1;
nodes = (
(540,54,o),
(512,78,o),
(512,98,qs),
(512,126,o),
(553,158,o),
(579,158,qs),
(601,158,o),
(628,135,o),
(628,115,qs),
(628,87,o),
(588,54,o),
(562,54,qs)
);
},
{
closed = 1;
nodes = (
(570,210,o),
(547,231,o),
(547,249,qs),
(547,271,o),
(580,300,o),
(603,300,qs),
(622,300,o),
(644,279,o),
(644,262,qs),
(644,240,o),
(611,210,o),
(589,210,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
25 1 4 8 50 40 2 12 15 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 5 4 2 4 5 2 128 0 2 3 3 2 112 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 106 0 10 0 14 15 10 14 105 19 1 15 0 12 13 15 12 105 0 7 7 0 95 6 1 0 0 33 77 18 1 13 13 1 97 17 11 2 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 106 0 10 0 14 15 10 14 105 19 1 15 0 12 13 15 12 105 0 7 7 0 95 6 1 0 0 33 77 18 1 13 13 1 97 17 11 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 106 0 10 0 14 15 10 14 105 19 1 15 0 12 13 15 12 105 0 7 7 0 95 6 1 0 0 33 77 0 1 1 34 77 18 1 13 13 11 97 17 1 11 11 34 11 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
68 68 56 56 35 35 4 4 68 79 68 78 74 72 56 67 56 66 62 60 35 55 35 54 46 44 4 34 4 33 34 17 17 18 36 34 19 17 16 20 8 31
CALL[ ]	/* CallFunction */";
};
width = 755;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(128,0,l),
(772,700,l),
(701,700,l),
(58,0,l)
);
},
{
closed = 1;
nodes = (
(231,342,o),
(299,384,o),
(339,453,o),
(339,494,qs),
(339,536,o),
(290,590,o),
(244,590,qs),
(221,590,o),
(180,575,o),
(166,562,q),
(197,644,l),
(344,644,l),
(354,700,l),
(159,700,l),
(93,499,l),
(155,499,l),
(165,516,o),
(202,538,o),
(224,538,qs),
(248,538,o),
(276,509,o),
(276,484,qs),
(276,450,o),
(232,397,o),
(198,397,qs),
(173,397,o),
(143,425,o),
(142,447,q),
(79,447,l),
(74,404,o),
(131,342,o),
(189,342,qs)
);
},
{
closed = 1;
nodes = (
(620,-5,o),
(698,65,o),
(698,115,qs),
(698,169,o),
(650,189,q),
(716,220,o),
(716,276,qs),
(716,313,o),
(664,358,o),
(618,358,qs),
(561,358,o),
(484,300,o),
(484,252,qs),
(484,231,o),
(506,199,o),
(526,189,q),
(491,177,o),
(448,121,o),
(448,86,qs),
(448,44,o),
(505,-5,o),
(557,-5,qs)
);
},
{
closed = 1;
nodes = (
(540,48,o),
(510,74,o),
(510,96,qs),
(510,128,o),
(556,160,o),
(583,160,qs),
(607,160,o),
(636,136,o),
(636,113,qs),
(636,82,o),
(591,48,o),
(565,48,qs)
);
},
{
closed = 1;
nodes = (
(572,208,o),
(546,230,o),
(546,250,qs),
(546,274,o),
(582,305,o),
(608,305,qs),
(629,305,o),
(653,283,o),
(653,264,qs),
(653,240,o),
(617,208,o),
(593,208,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
25 1 4 8 52 41 2 12 15 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 5 4 2 4 5 2 128 0 2 3 3 2 112 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 106 0 10 0 14 15 10 14 105 19 1 15 0 12 13 15 12 105 0 7 7 0 95 6 1 0 0 33 77 18 1 13 13 1 97 17 11 2 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 106 0 10 0 14 15 10 14 105 19 1 15 0 12 13 15 12 105 0 7 7 0 95 6 1 0 0 33 77 18 1 13 13 1 97 17 11 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 106 0 10 0 14 15 10 14 105 19 1 15 0 12 13 15 12 105 0 7 7 0 95 6 1 0 0 33 77 0 1 1 34 77 18 1 13 13 11 97 17 1 11 11 34 11 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
70 70 58 58 36 36 4 4 70 81 70 80 76 74 58 69 58 68 64 62 36 57 36 56 48 46 4 35 4 34 35 17 17 18 36 34 19 17 16 20 8 31
CALL[ ]	/* CallFunction */";
};
width = 766;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(127,-1,l),
(771,699,l),
(682,699,l),
(38,-1,l)
);
},
{
closed = 1;
nodes = (
(222,342,o),
(292,383,o),
(333,454,o),
(333,497,qs),
(333,539,o),
(282,593,o),
(236,593,qs),
(199,593,o),
(169,573,q),
(193,635,l),
(337,635,l),
(348,700,l),
(149,700,l),
(82,494,l),
(151,494,l),
(162,512,o),
(195,532,o),
(215,532,qs),
(237,532,o),
(261,507,o),
(261,484,qs),
(261,452,o),
(221,406,o),
(192,406,qs),
(170,406,o),
(142,430,o),
(141,450,q),
(70,450,l),
(65,401,o),
(124,342,o),
(181,342,qs)
);
},
{
closed = 1;
nodes = (
(617,-5,o),
(695,65,o),
(695,116,qs),
(695,169,o),
(650,190,q),
(677,202,o),
(713,245,o),
(713,276,qs),
(713,314,o),
(661,358,o),
(613,358,qs),
(554,358,o),
(476,299,o),
(476,251,qs),
(476,213,o),
(515,190,q),
(480,177,o),
(441,121,o),
(441,87,qs),
(441,48,o),
(498,-5,o),
(552,-5,qs)
);
},
{
closed = 1;
nodes = (
(540,55,o),
(513,80,o),
(513,99,qs),
(513,125,o),
(553,157,o),
(577,157,qs),
(599,157,o),
(625,134,o),
(625,115,qs),
(625,87,o),
(586,55,o),
(561,55,qs)
);
},
{
closed = 1;
nodes = (
(569,211,o),
(547,231,o),
(547,249,qs),
(547,270,o),
(579,298,o),
(601,298,qs),
(620,298,o),
(641,277,o),
(641,261,qs),
(641,240,o),
(609,211,o),
(588,211,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
25 1 4 8 51 40 2 12 15 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 5 4 2 4 5 2 128 0 2 3 3 2 112 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 106 0 10 0 14 15 10 14 105 19 1 15 0 12 13 15 12 105 0 7 7 0 95 6 1 0 0 33 77 18 1 13 13 1 97 17 11 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 106 0 10 0 14 15 10 14 105 19 1 15 0 12 13 15 12 105 0 7 7 0 95 6 1 0 0 33 77 18 1 13 13 1 97 17 11 2 1 1 34 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
69 69 57 57 35 35 4 4 69 80 69 79 75 73 57 68 57 67 63 61 35 56 35 55 46 44 4 34 4 33 34 17 17 18 36 34 19 17 16 20 8 31
CALL[ ]	/* CallFunction */";
};
width = 751;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(127,-1,l),
(771,699,l),
(672,699,l),
(28,-1,l)
);
},
{
closed = 1;
nodes = (
(219,342,o),
(289,383,o),
(330,454,o),
(330,498,qs),
(330,540,o),
(279,594,o),
(232,594,qs),
(198,594,o),
(171,579,q),
(191,631,l),
(333,631,l),
(345,700,l),
(144,700,l),
(76,492,l),
(149,492,l),
(171,529,o),
(211,529,qs),
(231,529,o),
(254,505,o),
(254,484,qs),
(254,452,o),
(216,410,o),
(189,410,qs),
(168,410,o),
(142,433,o),
(141,452,q),
(65,452,l),
(61,400,o),
(120,342,o),
(177,342,qs)
);
},
{
closed = 1;
nodes = (
(593,-5,o),
(659,28,o),
(694,84,o),
(694,117,qs),
(694,169,o),
(650,190,q),
(676,202,o),
(712,246,o),
(712,276,qs),
(712,313,o),
(659,358,o),
(611,358,qs),
(551,358,o),
(472,299,o),
(472,251,qs),
(472,215,o),
(509,190,q),
(475,177,o),
(437,121,o),
(437,88,qs),
(437,50,o),
(495,-5,o),
(549,-5,qs)
);
},
{
closed = 1;
nodes = (
(539,59,o),
(514,82,o),
(514,100,qs),
(514,124,o),
(551,156,o),
(574,156,qs),
(595,156,o),
(619,134,o),
(619,116,qs),
(619,90,o),
(584,59,o),
(559,59,qs)
);
},
{
closed = 1;
nodes = (
(567,212,o),
(547,231,o),
(547,248,qs),
(547,267,o),
(578,295,o),
(598,295,qs),
(615,295,o),
(635,274,o),
(635,260,qs),
(635,240,o),
(605,212,o),
(585,212,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
24 1 4 8 50 39 2 12 15 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 5 4 2 7 5 114 0 2 3 3 2 112 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 106 0 10 0 14 15 10 14 105 19 1 15 0 12 13 15 12 105 0 7 7 0 95 6 1 0 0 33 77 18 1 13 13 1 97 17 11 2 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 5 4 2 4 5 2 128 0 2 3 3 2 112 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 106 0 10 0 14 15 10 14 105 19 1 15 0 12 13 15 12 105 0 7 7 0 95 6 1 0 0 33 77 18 1 13 13 1 97 17 11 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 106 0 10 0 14 15 10 14 105 19 1 15 0 12 13 15 12 105 0 7 7 0 95 6 1 0 0 33 77 18 1 13 13 1 97 17 11 2 1 1 34 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
69 69 57 57 34 34 4 4 69 80 69 79 75 73 57 68 57 67 63 61 34 56 34 55 45 43 4 33 4 32 34 17 17 17 36 34 19 17 16 20 8 31
CALL[ ]	/* CallFunction */";
};
width = 744;
}
);
note = fiveeighths;
unicode = 8541;
},
{
glyphname = seveneighths;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,0,l),
(739,700,l),
(654,700,l),
(10,0,l)
);
},
{
closed = 1;
nodes = (
(188,347,l),
(381,650,l),
(390,700,l),
(130,700,l),
(119,638,l),
(303,638,l),
(114,347,l)
);
},
{
closed = 1;
nodes = (
(596,-5,o),
(674,65,o),
(674,116,qs),
(674,169,o),
(628,190,q),
(692,219,o),
(692,276,qs),
(692,313,o),
(640,358,o),
(593,358,qs),
(535,358,o),
(456,300,o),
(456,252,qs),
(456,213,o),
(496,190,q),
(461,177,o),
(421,121,o),
(421,87,qs),
(421,47,o),
(478,-5,o),
(531,-5,qs)
);
},
{
closed = 1;
nodes = (
(518,54,o),
(490,78,o),
(490,98,qs),
(490,126,o),
(531,158,o),
(557,158,qs),
(579,158,o),
(606,135,o),
(606,115,qs),
(606,87,o),
(566,54,o),
(540,54,qs)
);
},
{
closed = 1;
nodes = (
(548,210,o),
(525,231,o),
(525,249,qs),
(525,271,o),
(558,300,o),
(581,300,qs),
(600,300,o),
(622,279,o),
(622,262,qs),
(622,240,o),
(589,210,o),
(567,210,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
26 16 2 7 10 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 4 5 9 5 4 9 128 0 5 0 9 10 5 9 105 13 1 10 0 7 8 10 7 105 0 2 2 0 95 3 1 0 0 33 77 12 1 8 8 1 97 11 6 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 4 5 9 5 4 9 128 0 5 0 9 10 5 9 105 13 1 10 0 7 8 10 7 105 0 2 2 0 95 3 1 0 0 33 77 0 1 1 34 77 12 1 8 8 6 97 11 1 6 6 34 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
44 44 32 32 11 11 44 55 44 54 50 48 32 43 32 42 38 36 11 31 11 30 42 18 17 17 17 16 14 8 28
CALL[ ]	/* CallFunction */";
};
width = 731;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(94,0,l),
(738,700,l),
(667,700,l),
(24,0,l)
);
},
{
closed = 1;
nodes = (
(193,347,l),
(389,654,l),
(397,700,l),
(139,700,l),
(129,645,l),
(319,645,l),
(126,347,l)
);
},
{
closed = 1;
nodes = (
(596,-5,o),
(674,65,o),
(674,115,qs),
(674,169,o),
(626,189,q),
(692,220,o),
(692,276,qs),
(692,313,o),
(640,358,o),
(594,358,qs),
(537,358,o),
(460,300,o),
(460,252,qs),
(460,231,o),
(482,199,o),
(502,189,q),
(467,177,o),
(424,121,o),
(424,86,qs),
(424,44,o),
(481,-5,o),
(533,-5,qs)
);
},
{
closed = 1;
nodes = (
(516,48,o),
(486,74,o),
(486,96,qs),
(486,128,o),
(532,160,o),
(559,160,qs),
(583,160,o),
(612,136,o),
(612,113,qs),
(612,82,o),
(567,48,o),
(541,48,qs)
);
},
{
closed = 1;
nodes = (
(548,208,o),
(522,230,o),
(522,250,qs),
(522,274,o),
(558,305,o),
(584,305,qs),
(605,305,o),
(629,283,o),
(629,264,qs),
(629,240,o),
(593,208,o),
(569,208,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
27 16 2 7 10 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 4 5 9 5 4 9 128 0 5 0 9 10 5 9 105 13 1 10 0 7 8 10 7 105 0 2 2 0 95 3 1 0 0 33 77 12 1 8 8 1 97 11 6 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 4 5 9 5 4 9 128 0 5 0 9 10 5 9 105 13 1 10 0 7 8 10 7 105 0 2 2 0 95 3 1 0 0 33 77 0 1 1 34 77 12 1 8 8 6 97 11 1 6 6 34 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
45 45 33 33 11 11 45 56 45 55 51 49 33 44 33 43 39 37 11 32 11 31 43 18 17 17 17 16 14 8 28
CALL[ ]	/* CallFunction */";
};
width = 742;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(95,-1,l),
(739,699,l),
(649,699,l),
(5,-1,l)
);
},
{
closed = 1;
nodes = (
(186,346,l),
(378,649,l),
(388,699,l),
(127,699,l),
(116,636,l),
(297,636,l),
(109,346,l)
);
},
{
closed = 1;
nodes = (
(595,-5,o),
(674,65,o),
(674,116,qs),
(674,169,o),
(629,190,q),
(656,202,o),
(692,245,o),
(692,276,qs),
(692,313,o),
(639,358,o),
(592,358,qs),
(533,358,o),
(455,299,o),
(455,251,qs),
(455,213,o),
(493,190,q),
(459,177,o),
(419,120,o),
(419,87,qs),
(419,48,o),
(477,-5,o),
(530,-5,qs)
);
},
{
closed = 1;
nodes = (
(518,55,o),
(491,80,o),
(491,99,qs),
(491,125,o),
(531,157,o),
(556,157,qs),
(578,157,o),
(603,134,o),
(603,115,qs),
(603,87,o),
(565,55,o),
(540,55,qs)
);
},
{
closed = 1;
nodes = (
(547,211,o),
(525,231,o),
(525,249,qs),
(525,270,o),
(558,298,o),
(580,298,qs),
(598,298,o),
(620,277,o),
(620,261,qs),
(620,240,o),
(588,211,o),
(566,211,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
27 16 2 7 10 1 76 0 4 5 9 5 4 9 128 0 5 0 9 10 5 9 105 13 1 10 0 7 8 10 7 105 0 2 2 0 95 3 1 0 0 33 77 12 1 8 8 1 97 11 6 2 1 1 34 1 78 45 45 33 33 11 11 45 56 45 55 51 49 33 44 33 43 39 37 11 32 11 31 42 18 17 17 17 16 14 8 28
CALL[ ]	/* CallFunction */";
};
width = 727;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(95,-1,l),
(739,699,l),
(640,699,l),
(-4,-1,l)
);
},
{
closed = 1;
nodes = (
(182,346,l),
(373,646,l),
(383,699,l),
(121,699,l),
(109,631,l),
(286,631,l),
(101,346,l)
);
},
{
closed = 1;
nodes = (
(573,-5,o),
(639,28,o),
(674,84,o),
(674,117,qs),
(674,169,o),
(630,190,q),
(656,202,o),
(692,246,o),
(692,276,qs),
(692,313,o),
(639,358,o),
(591,358,qs),
(531,358,o),
(452,299,o),
(452,251,qs),
(452,215,o),
(489,190,q),
(455,177,o),
(417,121,o),
(417,88,qs),
(417,50,o),
(475,-5,o),
(529,-5,qs)
);
},
{
closed = 1;
nodes = (
(519,59,o),
(494,82,o),
(494,100,qs),
(494,124,o),
(531,156,o),
(554,156,qs),
(575,156,o),
(599,134,o),
(599,116,qs),
(599,90,o),
(564,59,o),
(539,59,qs)
);
},
{
closed = 1;
nodes = (
(547,212,o),
(527,231,o),
(527,248,qs),
(527,267,o),
(558,295,o),
(578,295,qs),
(595,295,o),
(615,274,o),
(615,260,qs),
(615,240,o),
(585,212,o),
(565,212,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
27 16 2 7 10 1 76 0 4 5 9 5 4 9 128 0 5 0 9 10 5 9 105 13 1 10 0 7 8 10 7 105 0 2 2 0 95 3 1 0 0 33 77 12 1 8 8 1 97 11 6 2 1 1 34 1 78 46 46 34 34 11 11 46 57 46 56 52 50 34 45 34 44 40 38 11 33 11 32 42 18 17 17 17 16 14 8 28
CALL[ ]	/* CallFunction */";
};
width = 720;
}
);
note = seveneighths;
unicode = 8542;
},
{
glyphname = uni2080;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,-5,o),
(252,76,o),
(284,188,o),
(284,237,qs),
(284,294,o),
(232,358,o),
(177,358,qs),
(116,358,o),
(39,279,o),
(6,168,o),
(6,118,qs),
(6,61,o),
(57,-5,o),
(113,-5,qs)
);
},
{
closed = 1;
nodes = (
(78,59,o),
(78,127,qs),
(78,156,o),
(95,235,o),
(135,295,o),
(166,295,qs),
(211,295,o),
(211,228,qs),
(211,198,o),
(194,118,o),
(155,59,o),
(124,59,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 51 77 5 1 3 3 1 97 4 1 1 1 52 1 78 14 14 0 0 14 25 14 24 20 18 0 13 0 12 37 6 9 23
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(180,-5,o),
(256,76,o),
(288,188,o),
(288,238,qs),
(288,295,o),
(237,358,o),
(182,358,qs),
(121,358,o),
(44,278,o),
(12,167,o),
(12,117,qs),
(12,60,o),
(63,-5,o),
(118,-5,qs)
);
},
{
closed = 1;
nodes = (
(78,52,o),
(78,125,qs),
(78,156,o),
(96,238,o),
(138,301,o),
(172,301,qs),
(197,301,o),
(222,264,o),
(222,229,qs),
(222,197,o),
(204,115,o),
(162,52,o),
(128,52,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 51 77 5 1 3 3 1 97 4 1 1 1 52 1 78 14 14 0 0 14 26 14 25 21 19 0 13 0 12 37 6 9 23
CALL[ ]	/* CallFunction */";
};
width = 325;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(173,-5,o),
(250,76,o),
(282,188,o),
(282,237,qs),
(282,293,o),
(230,358,o),
(175,358,qs),
(114,358,o),
(37,279,o),
(4,169,o),
(4,118,qs),
(4,61,o),
(55,-5,o),
(111,-5,qs)
);
},
{
closed = 1;
nodes = (
(77,61,o),
(77,128,qs),
(77,156,o),
(94,233,o),
(132,292,o),
(163,292,qs),
(207,292,o),
(207,228,qs),
(207,198,o),
(190,120,o),
(152,61,o),
(123,61,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 51 77 5 1 3 3 1 97 4 1 1 1 52 1 78 14 14 0 0 14 25 14 24 20 18 0 13 0 12 37 6 9 23
CALL[ ]	/* CallFunction */";
};
width = 311;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(170,-5,o),
(247,76,o),
(279,187,o),
(279,236,qs),
(279,293,o),
(227,358,o),
(171,358,qs),
(110,358,o),
(33,280,o),
(0,170,o),
(0,119,qs),
(0,-5,o),
(107,-5,qs)
);
},
{
closed = 1;
nodes = (
(77,65,o),
(77,129,qs),
(77,156,o),
(93,231,o),
(130,288,o),
(159,288,qs),
(200,288,o),
(200,227,qs),
(200,198,o),
(183,122,o),
(147,65,o),
(120,65,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 51 77 5 1 3 3 1 97 4 1 1 1 52 1 78 13 13 0 0 13 24 13 23 19 17 0 12 0 11 36 6 9 23
CALL[ ]	/* CallFunction */";
};
width = 304;
}
);
note = uni2080;
unicode = 8320;
},
{
glyphname = uni2081;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(234,0,l),
(245,62,l),
(163,62,l),
(215,353,l),
(178,353,l),
(50,309,l),
(40,254,l),
(133,274,l),
(96,62,l),
(3,62,l),
(-8,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
3 2 2 0 1 1 76 0 1 1 49 77 2 1 0 0 3 96 0 3 3 50 3 78 17 17 20 16 4 9 26
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(237,0,l),
(247,55,l),
(164,55,l),
(217,353,l),
(183,353,l),
(56,309,l),
(47,260,l),
(143,281,l),
(103,55,l),
(8,55,l),
(-2,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
3 2 2 0 1 1 76 0 1 1 49 77 2 1 0 0 3 96 0 3 3 50 3 78 17 17 20 16 4 9 26
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(232,0,l),
(244,64,l),
(163,64,l),
(214,353,l),
(176,353,l),
(48,309,l),
(38,251,l),
(130,272,l),
(93,64,l),
(1,64,l),
(-10,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
3 2 2 0 1 1 76 0 1 1 49 77 2 1 0 0 3 96 0 3 3 50 3 78 17 17 20 16 4 9 26
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(230,0,l),
(242,68,l),
(162,68,l),
(213,353,l),
(172,353,l),
(44,309,l),
(33,247,l),
(123,267,l),
(88,68,l),
(-2,68,l),
(-14,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
3 2 2 0 1 1 76 0 1 1 49 77 2 1 0 0 3 96 0 3 3 50 3 78 17 17 20 16 4 9 26
CALL[ ]	/* CallFunction */";
};
width = 296;
}
);
note = uni2081;
unicode = 8321;
},
{
glyphname = uni2082;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,0,l),
(240,62,l),
(92,62,l),
(158,118,ls),
(201,155,o),
(238,188,o),
(269,240,o),
(269,270,qs),
(269,307,o),
(219,358,o),
(169,358,qs),
(115,358,o),
(38,297,o),
(26,240,q),
(96,240,l),
(100,265,o),
(132,298,o),
(157,298,qs),
(176,298,o),
(198,278,o),
(198,261,qs),
(198,239,o),
(158,194,o),
(117,158,qs),
(100,143,l),
(-8,50,l),
(-16,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 51 77 0 3 3 4 95 0 4 4 50 4 78 17 23 34 18 39 5 9 27
CALL[ ]	/* CallFunction */";
};
width = 302;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(232,0,l),
(242,55,l),
(85,55,l),
(165,123,ls),
(207,159,o),
(241,192,o),
(271,241,o),
(271,270,qs),
(271,308,o),
(221,358,o),
(173,358,qs),
(120,358,o),
(45,297,o),
(33,242,q),
(96,242,l),
(101,268,o),
(136,304,o),
(162,304,qs),
(184,304,o),
(207,280,o),
(207,262,qs),
(207,237,o),
(163,189,o),
(112,145,qs),
(-2,47,l),
(-10,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 51 77 0 3 3 4 95 0 4 4 50 4 78 17 23 34 18 38 5 9 27
CALL[ ]	/* CallFunction */";
};
width = 311;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(228,0,l),
(239,64,l),
(94,64,l),
(156,116,l),
(171,129,ls),
(218,168,o),
(268,230,o),
(268,269,qs),
(268,307,o),
(219,358,o),
(168,358,qs),
(113,358,o),
(36,297,o),
(23,239,q),
(95,239,l),
(100,263,o),
(131,296,o),
(155,296,qs),
(173,296,o),
(194,277,o),
(194,260,qs),
(194,236,o),
(150,190,o),
(95,142,qs),
(-10,51,l),
(-19,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 51 77 0 3 3 4 95 0 4 4 50 4 78 17 23 34 18 38 5 9 27
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(226,0,l),
(238,68,l),
(98,68,l),
(151,112,l),
(169,127,ls),
(217,168,o),
(267,230,o),
(267,269,qs),
(267,306,o),
(218,358,o),
(165,358,qs),
(109,358,o),
(32,297,o),
(18,238,q),
(95,238,l),
(99,261,o),
(127,292,o),
(151,292,qs),
(168,292,o),
(188,275,o),
(188,259,qs),
(188,238,o),
(149,194,o),
(105,156,qs),
(87,141,l),
(-14,53,l),
(-23,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 51 77 0 3 3 4 95 0 4 4 50 4 78 17 23 34 18 39 5 9 27
CALL[ ]	/* CallFunction */";
};
width = 293;
}
);
note = uni2082;
unicode = 8322;
},
{
glyphname = uni2083;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,-5,o),
(225,34,o),
(260,99,o),
(260,135,qs),
(260,169,o),
(220,215,o),
(183,221,q),
(279,296,l),
(289,353,l),
(57,353,l),
(46,292,l),
(187,292,l),
(71,202,l),
(102,156,l),
(124,167,o),
(141,167,qs),
(163,167,o),
(190,145,o),
(190,125,qs),
(190,96,o),
(153,57,o),
(121,57,qs),
(97,57,o),
(71,80,o),
(71,100,qs),
(71,107,o),
(72,111,q),
(3,111,l),
(1,95,o),
(1,87,qs),
(1,43,o),
(59,-5,o),
(110,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
25 19 2 2 3 18 1 0 2 7 2 2 1 0 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 3 3 4 95 0 4 4 49 77 0 1 1 5 98 6 1 5 5 52 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 3 3 4 95 0 4 4 49 77 0 1 1 5 98 6 1 5 5 52 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 49 77 0 1 1 5 98 6 1 5 5 52 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 32 0 31 17 19 36 36 20 7 9 27
CALL[ ]	/* CallFunction */";
};
width = 309;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(163,-5,o),
(230,36,o),
(264,100,o),
(264,134,qs),
(264,169,o),
(222,215,o),
(181,219,q),
(284,300,l),
(294,353,l),
(64,353,l),
(54,298,l),
(205,298,l),
(80,202,l),
(108,160,l),
(130,170,o),
(147,170,qs),
(172,170,o),
(201,147,o),
(201,125,qs),
(201,94,o),
(161,50,o),
(126,50,qs),
(100,50,o),
(72,76,o),
(72,97,qs),
(72,105,o),
(73,110,q),
(10,110,l),
(8,94,o),
(8,87,qs),
(8,43,o),
(65,-5,o),
(116,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
25 19 2 2 3 18 1 0 2 7 2 2 1 0 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 3 3 4 95 0 4 4 49 77 0 1 1 5 98 6 1 5 5 52 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 3 3 4 95 0 4 4 49 77 0 1 1 5 98 6 1 5 5 52 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 49 77 0 1 1 5 98 6 1 5 5 52 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 32 0 31 17 19 36 36 20 7 9 27
CALL[ ]	/* CallFunction */";
};
width = 320;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(154,-5,o),
(222,33,o),
(258,97,o),
(258,135,qs),
(258,169,o),
(218,215,o),
(183,221,q),
(277,294,l),
(287,353,l),
(54,353,l),
(43,289,l),
(181,289,l),
(67,201,l),
(99,154,l),
(120,165,o),
(138,165,qs),
(160,165,o),
(186,145,o),
(186,125,qs),
(186,97,o),
(151,59,o),
(119,59,qs),
(96,59,o),
(71,81,o),
(71,100,qs),
(71,108,o),
(72,111,q),
(1,111,l),
(-1,95,o),
(-1,87,qs),
(-1,43,o),
(57,-5,o),
(108,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
25 19 2 2 3 18 1 0 2 7 2 2 1 0 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 3 3 4 95 0 4 4 49 77 0 1 1 5 98 6 1 5 5 52 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 3 3 4 95 0 4 4 49 77 0 1 1 5 98 6 1 5 5 52 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 49 77 0 1 1 5 98 6 1 5 5 52 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 32 0 31 17 19 36 36 20 7 9 27
CALL[ ]	/* CallFunction */";
};
width = 305;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(173,-5,o),
(255,75,o),
(255,135,qs),
(255,168,o),
(217,214,o),
(184,222,q),
(273,291,l),
(284,353,l),
(49,353,l),
(37,285,l),
(169,285,l),
(61,201,l),
(95,151,l),
(116,163,o),
(134,163,qs),
(154,163,o),
(179,143,o),
(179,125,qs),
(179,99,o),
(145,63,o),
(116,63,qs),
(94,63,o),
(70,84,o),
(70,102,qs),
(70,109,o),
(71,112,q),
(-4,112,l),
(-6,94,o),
(-6,87,qs),
(-6,43,o),
(53,-5,o),
(104,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
25 19 2 2 3 18 1 0 2 7 2 2 1 0 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 3 3 4 95 0 4 4 49 77 0 1 1 5 98 6 1 5 5 52 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 3 3 4 95 0 4 4 49 77 0 1 1 5 98 6 1 5 5 52 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 49 77 0 1 1 5 98 6 1 5 5 52 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 31 0 30 17 19 36 36 20 7 9 27
CALL[ ]	/* CallFunction */";
};
width = 297;
}
);
note = uni2083;
unicode = 8323;
},
{
glyphname = uni2084;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,0,l),
(216,65,l),
(256,65,l),
(268,127,l),
(228,127,l),
(243,213,l),
(176,213,l),
(161,127,l),
(71,127,l),
(223,353,l),
(152,353,l),
(-7,120,l),
(-17,65,l),
(146,65,l),
(134,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 2 2 3 114 4 1 2 5 1 0 6 2 0 104 0 1 1 49 77 0 6 6 50 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 49 77 0 6 6 50 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 9 29
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(203,0,l),
(215,66,l),
(256,66,l),
(266,122,l),
(225,122,l),
(241,213,l),
(181,213,l),
(165,122,l),
(68,122,l),
(223,353,l),
(159,353,l),
(-2,117,l),
(-11,66,l),
(151,66,l),
(139,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 2 2 3 114 4 1 2 5 1 0 6 2 0 104 0 1 1 49 77 0 6 6 50 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 49 77 0 6 6 50 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 9 29
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(205,0,l),
(216,64,l),
(256,64,l),
(268,129,l),
(228,129,l),
(243,213,l),
(174,213,l),
(160,129,l),
(72,129,l),
(222,353,l),
(149,353,l),
(-9,120,l),
(-20,64,l),
(144,64,l),
(132,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 2 2 3 114 4 1 2 5 1 0 6 2 0 104 0 1 1 49 77 0 6 6 50 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 49 77 0 6 6 50 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 9 29
CALL[ ]	/* CallFunction */";
};
width = 297;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(206,0,l),
(217,63,l),
(256,63,l),
(269,132,l),
(230,132,l),
(244,213,l),
(171,213,l),
(157,132,l),
(74,132,l),
(222,353,l),
(144,353,l),
(-13,122,l),
(-24,63,l),
(140,63,l),
(129,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 2 2 3 114 4 1 2 5 1 0 6 2 0 104 0 1 1 49 77 0 6 6 50 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 49 77 0 6 6 50 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 9 29
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = uni2084;
unicode = 8324;
},
{
glyphname = uni2085;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,-5,o),
(218,36,o),
(259,107,o),
(259,149,qs),
(259,191,o),
(208,245,o),
(162,245,qs),
(122,245,o),
(93,224,q),
(118,291,l),
(262,291,l),
(274,353,l),
(76,353,l),
(9,149,l),
(76,149,l),
(87,167,o),
(120,187,o),
(141,187,qs),
(163,187,o),
(189,160,o),
(189,137,qs),
(189,105,o),
(148,57,o),
(117,57,qs),
(94,57,o),
(66,83,o),
(66,103,q),
(-4,103,l),
(-9,55,o),
(49,-5,o),
(106,-5,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 0 2 3 0 128 0 0 1 1 0 112 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 49 77 0 1 1 7 98 8 1 7 7 52 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 49 77 0 1 1 7 98 8 1 7 7 52 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 30 0 29 34 17 17 18 36 34 18 9 9 29
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(152,-5,o),
(222,36,o),
(262,106,o),
(262,147,qs),
(262,189,o),
(213,243,o),
(167,243,qs),
(144,243,o),
(103,228,o),
(89,215,q),
(120,297,l),
(267,297,l),
(277,353,l),
(82,353,l),
(16,152,l),
(78,152,l),
(88,169,o),
(125,191,o),
(147,191,qs),
(171,191,o),
(199,162,o),
(199,137,qs),
(199,103,o),
(155,50,o),
(121,50,qs),
(96,50,o),
(66,78,o),
(65,100,q),
(2,100,l),
(-4,57,o),
(53,-5,o),
(111,-5,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 0 2 3 0 128 0 0 1 1 0 112 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 49 77 0 1 1 7 98 8 1 7 7 52 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 49 77 0 1 1 7 98 8 1 7 7 52 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 31 0 30 35 17 17 18 36 34 18 9 9 29
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(145,-5,o),
(216,36,o),
(257,107,o),
(257,150,qs),
(257,192,o),
(207,246,o),
(160,246,qs),
(124,246,o),
(94,226,q),
(117,288,l),
(260,288,l),
(272,353,l),
(73,353,l),
(6,147,l),
(75,147,l),
(99,185,o),
(139,185,qs),
(161,185,o),
(186,159,o),
(186,137,qs),
(186,105,o),
(145,59,o),
(116,59,qs),
(94,59,o),
(66,83,o),
(66,103,q),
(-6,103,l),
(-11,54,o),
(47,-5,o),
(104,-5,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 0 2 3 0 128 0 0 1 1 0 112 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 49 77 0 1 1 7 98 8 1 7 7 52 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 49 77 0 1 1 7 98 8 1 7 7 52 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 29 0 28 34 17 17 17 36 34 18 9 9 29
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(143,-5,o),
(213,36,o),
(255,107,o),
(255,151,qs),
(255,193,o),
(204,247,o),
(157,247,qs),
(123,247,o),
(96,232,q),
(115,284,l),
(257,284,l),
(270,353,l),
(69,353,l),
(1,145,l),
(74,145,l),
(96,182,o),
(135,182,qs),
(155,182,o),
(179,158,o),
(179,137,qs),
(179,105,o),
(140,63,o),
(113,63,qs),
(92,63,o),
(66,86,o),
(66,105,q),
(-10,105,l),
(-15,53,o),
(44,-5,o),
(101,-5,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 2 0 5 3 114 0 0 1 1 0 112 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 49 77 0 1 1 7 98 8 1 7 7 52 7 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 0 2 3 0 128 0 0 1 1 0 112 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 49 77 0 1 1 7 98 8 1 7 7 52 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 49 77 0 1 1 7 98 8 1 7 7 52 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 29 0 28 34 17 17 17 36 34 18 9 9 29
CALL[ ]	/* CallFunction */";
};
width = 293;
}
);
note = uni2085;
unicode = 8325;
},
{
glyphname = uni2086;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,-5,o),
(220,36,o),
(258,103,o),
(258,139,qs),
(258,180,o),
(207,231,o),
(168,231,qs),
(145,231,o),
(101,210,o),
(85,192,q),
(96,242,o),
(138,299,o),
(168,299,qs),
(207,299,o),
(209,256,q),
(274,256,l),
(277,301,o),
(226,358,o),
(178,358,qs),
(124,358,o),
(46,283,o),
(6,171,o),
(6,118,qs),
(6,62,o),
(60,-5,o),
(116,-5,qs)
);
},
{
closed = 1;
nodes = (
(103,57,o),
(78,82,o),
(78,102,qs),
(78,129,o),
(117,170,o),
(143,170,qs),
(164,170,o),
(188,146,o),
(188,126,qs),
(188,98,o),
(152,57,o),
(124,57,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 3 2 1 114 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 51 77 8 1 6 6 4 97 7 1 4 4 52 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 51 77 8 1 6 6 4 97 7 1 4 4 52 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 36 33 18 37 9 9 26
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(159,-5,o),
(224,36,o),
(261,102,o),
(261,136,qs),
(261,175,o),
(214,228,o),
(173,228,qs),
(147,228,o),
(97,201,o),
(82,180,q),
(94,242,o),
(141,305,o),
(173,305,qs),
(217,305,o),
(219,257,q),
(278,257,l),
(280,302,o),
(229,358,o),
(183,358,qs),
(129,358,o),
(51,283,o),
(12,171,o),
(12,117,qs),
(12,61,o),
(65,-5,o),
(121,-5,qs)
);
},
{
closed = 1;
nodes = (
(105,50,o),
(77,78,o),
(77,100,qs),
(77,129,o),
(120,173,o),
(148,173,qs),
(171,173,o),
(198,147,o),
(198,125,qs),
(198,95,o),
(158,50,o),
(127,50,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 3 2 1 114 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 51 77 8 1 6 6 4 97 7 1 4 4 52 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 51 77 8 1 6 6 4 97 7 1 4 4 52 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 36 33 18 37 9 9 26
CALL[ ]	/* CallFunction */";
};
width = 313;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(153,-5,o),
(218,36,o),
(256,103,o),
(256,139,qs),
(256,181,o),
(204,231,o),
(166,231,qs),
(145,231,o),
(102,212,o),
(86,196,q),
(96,242,o),
(137,296,o),
(166,296,qs),
(203,296,o),
(205,255,q),
(273,255,l),
(275,301,o),
(225,358,o),
(176,358,qs),
(122,358,o),
(44,283,o),
(4,171,o),
(4,118,qs),
(4,62,o),
(58,-5,o),
(114,-5,qs)
);
},
{
closed = 1;
nodes = (
(102,59,o),
(78,83,o),
(78,102,qs),
(78,129,o),
(115,168,o),
(141,168,qs),
(161,168,o),
(185,145,o),
(185,126,qs),
(185,98,o),
(149,59,o),
(122,59,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 3 2 1 114 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 51 77 8 1 6 6 4 97 7 1 4 4 52 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 51 77 8 1 6 6 4 97 7 1 4 4 52 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 36 33 18 37 9 9 26
CALL[ ]	/* CallFunction */";
};
width = 300;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(151,-5,o),
(216,37,o),
(254,104,o),
(254,141,qs),
(254,185,o),
(200,233,o),
(163,233,qs),
(144,233,o),
(104,218,o),
(88,204,q),
(112,292,o),
(162,292,qs),
(196,292,o),
(198,254,q),
(270,254,l),
(273,300,o),
(223,358,o),
(173,358,qs),
(119,358,o),
(40,283,o),
(0,171,o),
(0,119,qs),
(0,63,o),
(55,-5,o),
(111,-5,qs)
);
},
{
closed = 1;
nodes = (
(101,63,o),
(79,85,o),
(79,103,qs),
(79,129,o),
(114,166,o),
(138,166,qs),
(157,166,o),
(178,144,o),
(178,126,qs),
(178,100,o),
(145,63,o),
(120,63,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 3 2 1 114 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 51 77 8 1 6 6 4 97 7 1 4 4 52 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 51 77 8 1 6 6 4 97 7 1 4 4 52 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
25 25 0 0 25 36 25 35 31 29 0 24 0 23 35 33 18 37 9 9 26
CALL[ ]	/* CallFunction */";
};
width = 293;
}
);
note = uni2086;
unicode = 8326;
},
{
glyphname = uni2087;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,0,l),
(294,303,l),
(303,353,l),
(43,353,l),
(32,291,l),
(215,291,l),
(27,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 95 0 1 1 49 77 0 2 2 50 2 78 18 17 16 3 9 25
CALL[ ]	/* CallFunction */";
};
width = 308;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(103,0,l),
(298,307,l),
(307,353,l),
(49,353,l),
(39,298,l),
(229,298,l),
(36,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 95 0 1 1 49 77 0 2 2 50 2 78 18 17 16 3 9 25
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(100,-1,l),
(292,302,l),
(301,352,l),
(40,352,l),
(29,289,l),
(210,289,l),
(23,-1,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 95 0 1 1 49 77 0 2 2 50 2 78 18 17 16 3 9 25
CALL[ ]	/* CallFunction */";
};
width = 305;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(98,-1,l),
(289,299,l),
(298,352,l),
(36,352,l),
(24,284,l),
(201,284,l),
(17,-1,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 95 0 1 1 49 77 0 2 2 50 2 78 18 17 16 3 9 25
CALL[ ]	/* CallFunction */";
};
width = 298;
}
);
note = uni2087;
unicode = 8327;
},
{
glyphname = uni2088;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(172,-5,o),
(250,65,o),
(250,116,qs),
(250,169,o),
(204,190,q),
(268,219,o),
(268,276,qs),
(268,313,o),
(216,358,o),
(169,358,qs),
(111,358,o),
(32,300,o),
(32,252,qs),
(32,213,o),
(72,190,q),
(37,177,o),
(-3,121,o),
(-3,87,qs),
(-3,47,o),
(54,-5,o),
(107,-5,qs)
);
},
{
closed = 1;
nodes = (
(94,54,o),
(66,78,o),
(66,98,qs),
(66,126,o),
(107,158,o),
(133,158,qs),
(155,158,o),
(182,135,o),
(182,115,qs),
(182,87,o),
(142,54,o),
(116,54,qs)
);
},
{
closed = 1;
nodes = (
(124,210,o),
(101,231,o),
(101,249,qs),
(101,271,o),
(134,300,o),
(157,300,qs),
(176,300,o),
(198,279,o),
(198,262,qs),
(198,240,o),
(165,210,o),
(143,210,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
15 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 51 77 7 1 3 3 1 97 6 1 1 1 52 1 78 33 33 21 21 0 0 33 44 33 43 39 37 21 32 21 31 27 25 0 20 0 19 41 9 9 23
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(175,-5,o),
(253,65,o),
(253,115,qs),
(253,169,o),
(205,189,q),
(271,220,o),
(271,276,qs),
(271,313,o),
(219,358,o),
(173,358,qs),
(116,358,o),
(39,300,o),
(39,252,qs),
(39,231,o),
(61,199,o),
(81,189,q),
(46,177,o),
(3,121,o),
(3,86,qs),
(3,44,o),
(60,-5,o),
(112,-5,qs)
);
},
{
closed = 1;
nodes = (
(95,48,o),
(65,74,o),
(65,96,qs),
(65,128,o),
(111,160,o),
(138,160,qs),
(162,160,o),
(191,136,o),
(191,113,qs),
(191,82,o),
(146,48,o),
(120,48,qs)
);
},
{
closed = 1;
nodes = (
(127,208,o),
(101,230,o),
(101,250,qs),
(101,274,o),
(137,305,o),
(163,305,qs),
(184,305,o),
(208,283,o),
(208,264,qs),
(208,240,o),
(172,208,o),
(148,208,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
16 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 51 77 7 1 3 3 1 97 6 1 1 1 52 1 78 34 34 22 22 0 0 34 45 34 44 40 38 22 33 22 32 28 26 0 21 0 20 42 9 9 23
CALL[ ]	/* CallFunction */";
};
width = 308;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(170,-5,o),
(249,65,o),
(249,116,qs),
(249,169,o),
(204,190,q),
(231,202,o),
(267,245,o),
(267,276,qs),
(267,313,o),
(214,358,o),
(167,358,qs),
(108,358,o),
(30,299,o),
(30,251,qs),
(30,213,o),
(68,190,q),
(34,177,o),
(-6,120,o),
(-6,87,qs),
(-6,48,o),
(52,-5,o),
(105,-5,qs)
);
},
{
closed = 1;
nodes = (
(93,55,o),
(66,80,o),
(66,99,qs),
(66,125,o),
(106,157,o),
(131,157,qs),
(153,157,o),
(178,134,o),
(178,115,qs),
(178,87,o),
(140,55,o),
(115,55,qs)
);
},
{
closed = 1;
nodes = (
(122,211,o),
(100,231,o),
(100,249,qs),
(100,270,o),
(133,298,o),
(155,298,qs),
(173,298,o),
(195,277,o),
(195,261,qs),
(195,240,o),
(163,211,o),
(141,211,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
16 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 51 77 7 1 3 3 1 97 6 1 1 1 52 1 78 34 34 22 22 0 0 34 45 34 44 40 38 22 33 22 32 28 26 0 21 0 20 41 9 9 23
CALL[ ]	/* CallFunction */";
};
width = 295;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(146,-5,o),
(212,28,o),
(247,84,o),
(247,117,qs),
(247,169,o),
(203,190,q),
(229,202,o),
(265,246,o),
(265,276,qs),
(265,313,o),
(212,358,o),
(164,358,qs),
(104,358,o),
(25,299,o),
(25,251,qs),
(25,215,o),
(62,190,q),
(28,177,o),
(-10,121,o),
(-10,88,qs),
(-10,50,o),
(48,-5,o),
(102,-5,qs)
);
},
{
closed = 1;
nodes = (
(92,59,o),
(67,82,o),
(67,100,qs),
(67,124,o),
(104,156,o),
(127,156,qs),
(148,156,o),
(172,134,o),
(172,116,qs),
(172,90,o),
(137,59,o),
(112,59,qs)
);
},
{
closed = 1;
nodes = (
(120,212,o),
(100,231,o),
(100,248,qs),
(100,267,o),
(131,295,o),
(151,295,qs),
(168,295,o),
(188,274,o),
(188,260,qs),
(188,240,o),
(158,212,o),
(138,212,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
16 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 51 77 7 1 3 3 1 97 6 1 1 1 52 1 78 35 35 23 23 0 0 35 46 35 45 41 39 23 34 23 33 29 27 0 22 0 21 41 9 9 23
CALL[ ]	/* CallFunction */";
};
width = 289;
}
);
note = uni2088;
unicode = 8328;
},
{
glyphname = uni2089;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,-5,o),
(232,71,o),
(272,183,o),
(272,236,qs),
(272,291,o),
(218,358,o),
(162,358,qs),
(123,358,o),
(58,317,o),
(20,251,o),
(20,217,qs),
(20,176,o),
(69,123,o),
(110,123,qs),
(133,123,o),
(178,144,o),
(194,161,q),
(183,111,o),
(141,55,o),
(111,55,qs),
(72,55,o),
(70,99,q),
(5,99,l),
(2,52,o),
(52,-5,o),
(100,-5,qs)
);
},
{
closed = 1;
nodes = (
(115,184,o),
(90,208,o),
(90,228,qs),
(90,256,o),
(127,297,o),
(155,297,qs),
(175,297,o),
(201,271,o),
(201,251,qs),
(201,225,o),
(162,184,o),
(136,184,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 2 1 1 0 114 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 51 77 0 1 1 4 98 7 1 4 4 52 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 51 77 0 1 1 4 98 7 1 4 4 52 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 37 36 33 18 9 9 26
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(158,-5,o),
(236,72,o),
(276,185,o),
(276,237,qs),
(276,292,o),
(222,358,o),
(166,358,qs),
(128,358,o),
(64,317,o),
(26,252,o),
(26,218,qs),
(26,179,o),
(73,125,o),
(114,125,qs),
(141,125,o),
(191,152,o),
(206,173,q),
(194,111,o),
(147,48,o),
(115,48,qs),
(71,48,o),
(69,96,q),
(10,96,l),
(8,51,o),
(58,-5,o),
(104,-5,qs)
);
},
{
closed = 1;
nodes = (
(117,180,o),
(90,206,o),
(90,228,qs),
(90,258,o),
(130,303,o),
(161,303,qs),
(184,303,o),
(211,276,o),
(211,253,qs),
(211,224,o),
(168,180,o),
(140,180,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 2 1 1 0 114 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 51 77 0 1 1 4 98 7 1 4 4 52 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 51 77 0 1 1 4 98 7 1 4 4 52 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 37 36 33 18 9 9 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(152,-5,o),
(230,70,o),
(271,182,o),
(271,235,qs),
(271,291,o),
(216,358,o),
(160,358,qs),
(121,358,o),
(56,317,o),
(18,251,o),
(18,216,qs),
(18,175,o),
(67,122,o),
(108,122,qs),
(130,122,o),
(173,141,o),
(189,157,q),
(179,111,o),
(139,57,o),
(110,57,qs),
(72,57,o),
(70,99,q),
(3,99,l),
(0,52,o),
(50,-5,o),
(98,-5,qs)
);
},
{
closed = 1;
nodes = (
(114,185,o),
(90,208,o),
(90,228,qs),
(90,254,o),
(126,294,o),
(152,294,qs),
(172,294,o),
(197,270,o),
(197,250,qs),
(197,224,o),
(160,185,o),
(134,185,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 2 1 1 0 114 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 51 77 0 1 1 4 98 7 1 4 4 52 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 51 77 0 1 1 4 98 7 1 4 4 52 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 37 36 33 18 9 9 26
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(148,-5,o),
(227,69,o),
(268,181,o),
(268,234,qs),
(268,290,o),
(213,358,o),
(157,358,qs),
(118,358,o),
(52,317,o),
(14,250,o),
(14,215,qs),
(14,173,o),
(64,120,o),
(105,120,qs),
(124,120,o),
(164,135,o),
(181,149,q),
(157,61,o),
(107,61,qs),
(71,61,o),
(71,101,q),
(-1,101,l),
(-4,53,o),
(45,-5,o),
(95,-5,qs)
);
},
{
closed = 1;
nodes = (
(112,187,o),
(90,209,o),
(90,228,qs),
(90,253,o),
(124,290,o),
(148,290,qs),
(167,290,o),
(190,267,o),
(190,249,qs),
(190,224,o),
(155,187,o),
(131,187,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 2 1 1 0 114 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 51 77 0 1 1 4 98 7 1 4 4 52 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 51 77 0 1 1 4 98 7 1 4 4 52 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
25 25 0 0 25 36 25 35 31 29 0 24 0 23 37 35 33 18 9 9 26
CALL[ ]	/* CallFunction */";
};
width = 293;
}
);
note = uni2089;
unicode = 8329;
},
{
glyphname = uni2070;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,342,o),
(313,422,o),
(345,534,o),
(345,584,qs),
(345,641,o),
(294,705,o),
(238,705,qs),
(177,705,o),
(100,625,o),
(67,514,o),
(67,465,qs),
(67,408,o),
(119,342,o),
(174,342,qs)
);
},
{
closed = 1;
nodes = (
(164,406,o),
(139,439,o),
(139,473,qs),
(139,503,o),
(156,582,o),
(195,642,o),
(227,642,qs),
(273,642,o),
(273,574,qs),
(273,544,o),
(256,465,o),
(216,406,o),
(185,406,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 59 77 5 1 3 3 1 97 4 1 1 1 60 1 78 14 14 0 0 14 26 14 25 20 18 0 13 0 12 37 6 10 23
CALL[ ]	/* CallFunction */";
};
width = 315;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(241,342,o),
(317,423,o),
(349,535,o),
(349,585,qs),
(349,642,o),
(298,705,o),
(243,705,qs),
(182,705,o),
(105,625,o),
(73,514,o),
(73,464,qs),
(73,407,o),
(124,342,o),
(179,342,qs)
);
},
{
closed = 1;
nodes = (
(139,399,o),
(139,472,qs),
(139,503,o),
(157,586,o),
(199,648,o),
(233,648,qs),
(283,648,o),
(283,575,qs),
(283,543,o),
(265,461,o),
(222,399,o),
(189,399,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 59 77 5 1 3 3 1 97 4 1 1 1 60 1 78 14 14 0 0 14 25 14 24 20 18 0 13 0 12 37 6 10 23
CALL[ ]	/* CallFunction */";
};
width = 325;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(234,342,o),
(311,422,o),
(343,533,o),
(343,583,qs),
(343,640,o),
(292,705,o),
(236,705,qs),
(175,705,o),
(98,625,o),
(65,514,o),
(65,465,qs),
(65,408,o),
(117,342,o),
(172,342,qs)
);
},
{
closed = 1;
nodes = (
(164,408,o),
(139,439,o),
(139,473,qs),
(139,502,o),
(155,580,o),
(193,639,o),
(224,639,qs),
(269,639,o),
(269,573,qs),
(269,543,o),
(252,466,o),
(214,408,o),
(184,408,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 59 77 5 1 3 3 1 97 4 1 1 1 60 1 78 14 14 0 0 14 26 14 25 20 18 0 13 0 12 37 6 10 23
CALL[ ]	/* CallFunction */";
};
width = 311;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(231,342,o),
(308,421,o),
(340,532,o),
(340,582,qs),
(340,639,o),
(289,705,o),
(233,705,qs),
(171,705,o),
(94,625,o),
(61,514,o),
(61,465,qs),
(61,408,o),
(113,342,o),
(169,342,qs)
);
},
{
closed = 1;
nodes = (
(163,412,o),
(139,440,o),
(139,474,qs),
(139,502,o),
(154,578,o),
(191,635,o),
(220,635,qs),
(262,635,o),
(262,572,qs),
(262,544,o),
(246,468,o),
(209,412,o),
(181,412,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 59 77 5 1 3 3 1 97 4 1 1 1 60 1 78 14 14 0 0 14 26 14 25 20 18 0 13 0 12 37 6 10 23
CALL[ ]	/* CallFunction */";
};
width = 304;
}
);
note = uni2070;
unicode = 8304;
},
{
glyphname = uni00B9;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(295,347,l),
(306,409,l),
(224,409,l),
(276,700,l),
(239,700,l),
(111,656,l),
(101,601,l),
(195,621,l),
(157,409,l),
(64,409,l),
(53,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
3 2 2 0 1 1 76 0 1 1 57 77 2 1 0 0 3 96 0 3 3 58 3 78 17 17 20 16 4 10 26
CALL[ ]	/* CallFunction */";
};
width = 301;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(298,347,l),
(308,402,l),
(225,402,l),
(278,700,l),
(244,700,l),
(117,656,l),
(108,607,l),
(204,628,l),
(164,402,l),
(69,402,l),
(59,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
3 2 2 0 1 1 76 0 1 1 57 77 2 1 0 0 3 96 0 3 3 58 3 78 17 17 20 16 4 10 26
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(293,347,l),
(305,411,l),
(224,411,l),
(275,700,l),
(237,700,l),
(109,656,l),
(99,598,l),
(191,619,l),
(154,411,l),
(62,411,l),
(51,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
3 2 2 0 1 1 76 0 1 1 57 77 2 1 0 0 3 96 0 3 3 58 3 78 17 17 20 16 4 10 26
CALL[ ]	/* CallFunction */";
};
width = 296;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(291,347,l),
(303,415,l),
(223,415,l),
(274,700,l),
(233,700,l),
(105,656,l),
(94,594,l),
(185,614,l),
(149,415,l),
(59,415,l),
(47,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
3 2 2 0 1 1 76 0 1 1 57 77 2 1 0 0 3 96 0 3 3 58 3 78 17 17 20 16 4 10 26
CALL[ ]	/* CallFunction */";
};
width = 286;
}
);
note = uni00B9;
unicode = 185;
},
{
glyphname = uni00B2;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(290,347,l),
(301,409,l),
(153,409,l),
(219,465,ls),
(262,502,o),
(299,535,o),
(330,587,o),
(330,617,qs),
(330,654,o),
(280,705,o),
(230,705,qs),
(176,705,o),
(99,644,o),
(87,587,q),
(157,587,l),
(161,612,o),
(193,645,o),
(218,645,qs),
(237,645,o),
(259,625,o),
(259,608,qs),
(259,586,o),
(219,541,o),
(178,505,qs),
(161,490,l),
(53,397,l),
(45,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 59 77 0 3 3 4 95 0 4 4 58 4 78 17 23 34 18 39 5 10 27
CALL[ ]	/* CallFunction */";
};
width = 302;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(293,347,l),
(303,402,l),
(146,402,l),
(226,470,ls),
(268,506,o),
(302,539,o),
(332,588,o),
(332,617,qs),
(332,655,o),
(282,705,o),
(234,705,qs),
(181,705,o),
(106,644,o),
(94,589,q),
(157,589,l),
(162,615,o),
(197,651,o),
(223,651,qs),
(245,651,o),
(268,627,o),
(268,609,qs),
(268,584,o),
(224,536,o),
(173,492,qs),
(59,394,l),
(51,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 59 77 0 3 3 4 95 0 4 4 58 4 78 17 23 34 18 38 5 10 27
CALL[ ]	/* CallFunction */";
};
width = 311;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(289,347,l),
(300,411,l),
(155,411,l),
(217,463,l),
(232,476,ls),
(279,515,o),
(329,577,o),
(329,616,qs),
(329,654,o),
(280,705,o),
(229,705,qs),
(174,705,o),
(97,644,o),
(84,586,q),
(156,586,l),
(161,610,o),
(192,643,o),
(216,643,qs),
(234,643,o),
(255,624,o),
(255,607,qs),
(255,583,o),
(211,537,o),
(156,489,qs),
(51,398,l),
(42,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 59 77 0 3 3 4 95 0 4 4 58 4 78 17 23 34 18 38 5 10 27
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(287,347,l),
(299,415,l),
(159,415,l),
(212,459,l),
(230,474,ls),
(278,515,o),
(328,577,o),
(328,616,qs),
(328,653,o),
(279,705,o),
(226,705,qs),
(170,705,o),
(93,644,o),
(79,585,q),
(156,585,l),
(160,608,o),
(188,639,o),
(212,639,qs),
(229,639,o),
(249,622,o),
(249,606,qs),
(249,585,o),
(210,541,o),
(166,503,qs),
(148,488,l),
(47,400,l),
(38,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 59 77 0 3 3 4 95 0 4 4 58 4 78 17 23 34 18 39 5 10 27
CALL[ ]	/* CallFunction */";
};
width = 293;
}
);
note = uni00B2;
unicode = 178;
},
{
glyphname = uni00B3;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,342,o),
(286,381,o),
(321,446,o),
(321,482,qs),
(321,516,o),
(281,562,o),
(244,568,q),
(340,643,l),
(350,700,l),
(118,700,l),
(107,639,l),
(248,639,l),
(132,549,l),
(163,503,l),
(185,514,o),
(202,514,qs),
(224,514,o),
(251,492,o),
(251,472,qs),
(251,443,o),
(214,404,o),
(182,404,qs),
(158,404,o),
(132,427,o),
(132,447,qs),
(132,454,o),
(133,458,q),
(64,458,l),
(62,442,o),
(62,434,qs),
(62,390,o),
(120,342,o),
(171,342,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
25 19 2 2 3 18 1 0 2 7 2 2 1 0 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 3 3 4 95 0 4 4 57 77 0 1 1 5 98 6 1 5 5 60 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 3 3 4 95 0 4 4 57 77 0 1 1 5 98 6 1 5 5 60 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 57 77 0 1 1 5 98 6 1 5 5 60 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 32 0 31 17 19 36 36 20 7 10 27
CALL[ ]	/* CallFunction */";
};
width = 309;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(224,342,o),
(291,383,o),
(325,447,o),
(325,481,qs),
(325,516,o),
(283,562,o),
(242,566,q),
(345,647,l),
(355,700,l),
(125,700,l),
(115,645,l),
(266,645,l),
(141,549,l),
(169,507,l),
(191,517,o),
(208,517,qs),
(233,517,o),
(262,494,o),
(262,472,qs),
(262,441,o),
(222,397,o),
(187,397,qs),
(161,397,o),
(133,423,o),
(133,444,qs),
(133,452,o),
(134,457,q),
(71,457,l),
(69,441,o),
(69,434,qs),
(69,390,o),
(126,342,o),
(177,342,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
25 19 2 2 3 18 1 0 2 7 2 2 1 0 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 3 3 4 95 0 4 4 57 77 0 1 1 5 98 6 1 5 5 60 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 3 3 4 95 0 4 4 57 77 0 1 1 5 98 6 1 5 5 60 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 57 77 0 1 1 5 98 6 1 5 5 60 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 32 0 31 17 19 36 36 20 7 10 27
CALL[ ]	/* CallFunction */";
};
width = 320;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(215,342,o),
(283,380,o),
(319,444,o),
(319,482,qs),
(319,516,o),
(279,562,o),
(244,568,q),
(338,641,l),
(348,700,l),
(115,700,l),
(104,636,l),
(242,636,l),
(128,548,l),
(160,501,l),
(181,512,o),
(199,512,qs),
(221,512,o),
(247,492,o),
(247,472,qs),
(247,444,o),
(212,406,o),
(180,406,qs),
(157,406,o),
(132,428,o),
(132,447,qs),
(132,455,o),
(133,458,q),
(62,458,l),
(60,442,o),
(60,434,qs),
(60,390,o),
(118,342,o),
(169,342,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
25 19 2 2 3 18 1 0 2 7 2 2 1 0 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 3 3 4 95 0 4 4 57 77 0 1 1 5 98 6 1 5 5 60 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 3 3 4 95 0 4 4 57 77 0 1 1 5 98 6 1 5 5 60 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 57 77 0 1 1 5 98 6 1 5 5 60 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 32 0 31 17 19 36 36 20 7 10 27
CALL[ ]	/* CallFunction */";
};
width = 305;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(234,342,o),
(316,422,o),
(316,482,qs),
(316,515,o),
(278,561,o),
(245,569,q),
(334,638,l),
(345,700,l),
(110,700,l),
(98,632,l),
(230,632,l),
(122,548,l),
(156,498,l),
(177,510,o),
(195,510,qs),
(215,510,o),
(240,490,o),
(240,472,qs),
(240,446,o),
(206,410,o),
(177,410,qs),
(155,410,o),
(131,431,o),
(131,449,qs),
(131,456,o),
(132,459,q),
(57,459,l),
(55,441,o),
(55,434,qs),
(55,390,o),
(114,342,o),
(165,342,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
25 19 2 2 3 18 1 0 2 7 2 2 1 0 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 3 3 4 95 0 4 4 57 77 0 1 1 5 98 6 1 5 5 60 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 3 3 4 95 0 4 4 57 77 0 1 1 5 98 6 1 5 5 60 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 57 77 0 1 1 5 98 6 1 5 5 60 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 31 0 30 17 19 36 36 20 7 10 27
CALL[ ]	/* CallFunction */";
};
width = 297;
}
);
note = uni00B3;
unicode = 179;
},
{
glyphname = uni2074;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,347,l),
(278,412,l),
(318,412,l),
(329,474,l),
(289,474,l),
(304,560,l),
(238,560,l),
(223,474,l),
(133,474,l),
(284,700,l),
(213,700,l),
(54,467,l),
(44,412,l),
(207,412,l),
(196,347,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 2 2 3 114 4 1 2 5 1 0 6 2 0 104 0 1 1 57 77 0 6 6 58 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 57 77 0 6 6 58 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 10 29
CALL[ ]	/* CallFunction */";
};
width = 300;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(264,347,l),
(276,413,l),
(317,413,l),
(327,469,l),
(286,469,l),
(302,560,l),
(242,560,l),
(226,469,l),
(129,469,l),
(284,700,l),
(220,700,l),
(59,464,l),
(50,413,l),
(212,413,l),
(200,347,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 2 2 3 114 4 1 2 5 1 0 6 2 0 104 0 1 1 57 77 0 6 6 58 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 57 77 0 6 6 58 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 10 29
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(267,347,l),
(278,411,l),
(318,411,l),
(330,476,l),
(290,476,l),
(305,560,l),
(236,560,l),
(221,476,l),
(134,476,l),
(284,700,l),
(211,700,l),
(52,467,l),
(42,411,l),
(205,411,l),
(194,347,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 2 2 3 114 4 1 2 5 1 0 6 2 0 104 0 1 1 57 77 0 6 6 58 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 57 77 0 6 6 58 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 10 29
CALL[ ]	/* CallFunction */";
};
width = 298;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(268,347,l),
(279,410,l),
(318,410,l),
(331,479,l),
(292,479,l),
(306,560,l),
(233,560,l),
(219,479,l),
(136,479,l),
(284,700,l),
(206,700,l),
(49,469,l),
(38,410,l),
(202,410,l),
(191,347,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 2 2 3 114 4 1 2 5 1 0 6 2 0 104 0 1 1 57 77 0 6 6 58 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 57 77 0 6 6 58 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 10 29
CALL[ ]	/* CallFunction */";
};
width = 295;
}
);
note = uni2074;
unicode = 8308;
},
{
glyphname = uni2075;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(210,342,o),
(279,383,o),
(320,454,o),
(320,496,qs),
(320,538,o),
(269,592,o),
(223,592,qs),
(183,592,o),
(154,571,q),
(179,638,l),
(324,638,l),
(335,700,l),
(137,700,l),
(70,496,l),
(137,496,l),
(148,514,o),
(182,534,o),
(203,534,qs),
(225,534,o),
(250,507,o),
(250,484,qs),
(250,452,o),
(209,404,o),
(179,404,qs),
(156,404,o),
(128,430,o),
(127,450,q),
(57,450,l),
(52,402,o),
(111,342,o),
(168,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 0 2 3 0 128 0 0 1 1 0 112 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 57 77 0 1 1 7 98 8 1 7 7 60 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 57 77 0 1 1 7 98 8 1 7 7 60 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 30 0 29 34 17 17 18 36 34 18 9 10 29
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(215,342,o),
(283,384,o),
(323,453,o),
(323,494,qs),
(323,536,o),
(274,590,o),
(228,590,qs),
(205,590,o),
(164,575,o),
(150,562,q),
(181,644,l),
(328,644,l),
(338,700,l),
(143,700,l),
(77,499,l),
(139,499,l),
(149,516,o),
(186,538,o),
(208,538,qs),
(232,538,o),
(260,509,o),
(260,484,qs),
(260,450,o),
(216,397,o),
(182,397,qs),
(157,397,o),
(127,425,o),
(126,447,q),
(63,447,l),
(58,404,o),
(115,342,o),
(173,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 0 2 3 0 128 0 0 1 1 0 112 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 57 77 0 1 1 7 98 8 1 7 7 60 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 57 77 0 1 1 7 98 8 1 7 7 60 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 31 0 30 35 17 17 18 36 34 18 9 10 29
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(208,342,o),
(278,383,o),
(318,454,o),
(318,497,qs),
(318,539,o),
(268,593,o),
(221,593,qs),
(185,593,o),
(155,573,q),
(178,635,l),
(322,635,l),
(333,700,l),
(134,700,l),
(67,494,l),
(136,494,l),
(160,532,o),
(201,532,qs),
(222,532,o),
(247,506,o),
(247,484,qs),
(247,451,o),
(207,406,o),
(177,406,qs),
(155,406,o),
(128,430,o),
(127,450,q),
(55,450,l),
(50,401,o),
(109,342,o),
(166,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 0 2 3 0 128 0 0 1 1 0 112 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 57 77 0 1 1 7 98 8 1 7 7 60 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 57 77 0 1 1 7 98 8 1 7 7 60 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 29 0 28 34 17 17 17 36 34 18 9 10 29
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(205,342,o),
(275,383,o),
(316,454,o),
(316,498,qs),
(316,540,o),
(265,594,o),
(218,594,qs),
(184,594,o),
(157,579,q),
(177,631,l),
(319,631,l),
(331,700,l),
(130,700,l),
(62,492,l),
(135,492,l),
(157,529,o),
(197,529,qs),
(217,529,o),
(240,505,o),
(240,484,qs),
(240,452,o),
(202,410,o),
(175,410,qs),
(154,410,o),
(128,433,o),
(127,452,q),
(51,452,l),
(47,400,o),
(106,342,o),
(163,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 2 0 5 3 114 0 0 1 1 0 112 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 57 77 0 1 1 7 98 8 1 7 7 60 7 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 0 2 3 0 128 0 0 1 1 0 112 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 57 77 0 1 1 7 98 8 1 7 7 60 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 57 77 0 1 1 7 98 8 1 7 7 60 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 29 0 28 34 17 17 17 36 34 18 9 10 29
CALL[ ]	/* CallFunction */";
};
width = 293;
}
);
note = uni2075;
unicode = 8309;
},
{
glyphname = uni2076;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,342,o),
(280,383,o),
(318,450,o),
(318,485,qs),
(318,527,o),
(268,578,o),
(229,578,qs),
(206,578,o),
(161,557,o),
(145,539,q),
(156,589,o),
(198,646,o),
(228,646,qs),
(267,646,o),
(269,603,q),
(334,603,l),
(337,649,o),
(287,705,o),
(239,705,qs),
(185,705,o),
(107,629,o),
(67,517,o),
(67,465,qs),
(67,409,o),
(121,342,o),
(177,342,qs)
);
},
{
closed = 1;
nodes = (
(164,404,o),
(138,429,o),
(138,449,qs),
(138,476,o),
(177,517,o),
(203,517,qs),
(224,517,o),
(249,493,o),
(249,472,qs),
(249,445,o),
(212,404,o),
(184,404,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 3 2 1 114 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 59 77 8 1 6 6 4 97 7 1 4 4 60 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 59 77 8 1 6 6 4 97 7 1 4 4 60 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 36 33 18 37 9 10 26
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(220,342,o),
(284,383,o),
(322,448,o),
(322,482,qs),
(322,521,o),
(275,575,o),
(234,575,qs),
(207,575,o),
(157,548,o),
(142,527,q),
(154,589,o),
(201,652,o),
(233,652,qs),
(277,652,o),
(279,604,q),
(338,604,l),
(340,649,o),
(290,705,o),
(244,705,qs),
(190,705,o),
(112,628,o),
(72,515,o),
(72,463,qs),
(72,408,o),
(126,342,o),
(182,342,qs)
);
},
{
closed = 1;
nodes = (
(165,397,o),
(137,425,o),
(137,447,qs),
(137,476,o),
(180,520,o),
(208,520,qs),
(231,520,o),
(258,494,o),
(258,472,qs),
(258,442,o),
(218,397,o),
(187,397,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 3 2 1 114 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 59 77 8 1 6 6 4 97 7 1 4 4 60 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 59 77 8 1 6 6 4 97 7 1 4 4 60 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 36 33 18 37 9 10 26
CALL[ ]	/* CallFunction */";
};
width = 313;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(214,342,o),
(279,383,o),
(317,450,o),
(317,486,qs),
(317,528,o),
(265,578,o),
(227,578,qs),
(206,578,o),
(162,559,o),
(146,543,q),
(156,589,o),
(197,643,o),
(226,643,qs),
(265,643,o),
(265,602,q),
(333,602,l),
(335,649,o),
(286,705,o),
(237,705,qs),
(183,705,o),
(105,630,o),
(65,518,o),
(65,465,qs),
(65,409,o),
(119,342,o),
(175,342,qs)
);
},
{
closed = 1;
nodes = (
(163,406,o),
(138,430,o),
(138,450,qs),
(138,476,o),
(176,515,o),
(201,515,qs),
(221,515,o),
(245,492,o),
(245,472,qs),
(245,446,o),
(209,406,o),
(183,406,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 3 2 1 114 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 59 77 8 1 6 6 4 97 7 1 4 4 60 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 59 77 8 1 6 6 4 97 7 1 4 4 60 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 36 33 18 37 9 10 26
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(211,342,o),
(276,383,o),
(314,451,o),
(314,488,qs),
(314,532,o),
(261,580,o),
(224,580,qs),
(205,580,o),
(165,565,o),
(148,551,q),
(172,639,o),
(222,639,qs),
(258,639,o),
(258,601,q),
(330,601,l),
(333,648,o),
(283,705,o),
(234,705,qs),
(180,705,o),
(101,631,o),
(61,519,o),
(61,466,qs),
(61,410,o),
(116,342,o),
(172,342,qs)
);
},
{
closed = 1;
nodes = (
(162,410,o),
(139,433,o),
(139,451,qs),
(139,476,o),
(174,513,o),
(198,513,qs),
(217,513,o),
(239,491,o),
(239,472,qs),
(239,447,o),
(205,410,o),
(181,410,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 3 2 1 114 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 59 77 8 1 6 6 4 97 7 1 4 4 60 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 59 77 8 1 6 6 4 97 7 1 4 4 60 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
25 25 0 0 25 36 25 35 31 29 0 24 0 23 35 33 18 37 9 10 26
CALL[ ]	/* CallFunction */";
};
width = 292;
}
);
note = uni2076;
unicode = 8310;
},
{
glyphname = uni2077;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,347,l),
(355,650,l),
(364,700,l),
(104,700,l),
(93,638,l),
(277,638,l),
(88,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 95 0 1 1 57 77 0 2 2 58 2 78 18 17 16 3 10 25
CALL[ ]	/* CallFunction */";
};
width = 308;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(164,347,l),
(360,654,l),
(368,700,l),
(110,700,l),
(100,645,l),
(290,645,l),
(97,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 95 0 1 1 57 77 0 2 2 58 2 78 18 17 16 3 10 25
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(161,346,l),
(353,649,l),
(363,699,l),
(102,699,l),
(91,636,l),
(272,636,l),
(84,346,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 95 0 1 1 57 77 0 2 2 58 2 78 18 17 16 3 10 25
CALL[ ]	/* CallFunction */";
};
width = 305;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(159,346,l),
(350,646,l),
(360,699,l),
(98,699,l),
(86,631,l),
(263,631,l),
(78,346,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 95 0 1 1 57 77 0 2 2 58 2 78 18 17 16 3 10 25
CALL[ ]	/* CallFunction */";
};
width = 298;
}
);
note = uni2077;
unicode = 8311;
},
{
glyphname = uni2078;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(233,342,o),
(312,413,o),
(312,463,qs),
(312,515,o),
(266,537,q),
(330,567,o),
(330,623,qs),
(330,660,o),
(277,705,o),
(230,705,qs),
(172,705,o),
(94,647,o),
(94,599,qs),
(94,560,o),
(133,537,q),
(99,524,o),
(58,468,o),
(58,434,qs),
(58,394,o),
(116,342,o),
(169,342,qs)
);
},
{
closed = 1;
nodes = (
(156,401,o),
(128,425,o),
(128,445,qs),
(128,473,o),
(169,505,o),
(194,505,qs),
(217,505,o),
(243,482,o),
(243,462,qs),
(243,434,o),
(203,401,o),
(178,401,qs)
);
},
{
closed = 1;
nodes = (
(185,557,o),
(162,578,o),
(162,596,qs),
(162,618,o),
(195,647,o),
(219,647,qs),
(238,647,o),
(260,626,o),
(260,609,qs),
(260,587,o),
(227,557,o),
(205,557,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
15 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 59 77 7 1 3 3 1 97 6 1 1 1 60 1 78 33 33 21 21 0 0 33 44 33 43 39 37 21 32 21 31 27 25 0 20 0 19 41 9 10 23
CALL[ ]	/* CallFunction */";
};
width = 299;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(236,342,o),
(314,412,o),
(314,462,qs),
(314,516,o),
(266,536,q),
(332,567,o),
(332,623,qs),
(332,660,o),
(280,705,o),
(234,705,qs),
(177,705,o),
(100,647,o),
(100,599,qs),
(100,578,o),
(122,546,o),
(142,536,q),
(107,524,o),
(64,468,o),
(64,433,qs),
(64,391,o),
(121,342,o),
(173,342,qs)
);
},
{
closed = 1;
nodes = (
(156,395,o),
(126,421,o),
(126,443,qs),
(126,475,o),
(172,507,o),
(199,507,qs),
(223,507,o),
(252,483,o),
(252,460,qs),
(252,429,o),
(207,395,o),
(181,395,qs)
);
},
{
closed = 1;
nodes = (
(188,555,o),
(162,577,o),
(162,597,qs),
(162,621,o),
(198,652,o),
(224,652,qs),
(245,652,o),
(269,630,o),
(269,611,qs),
(269,587,o),
(233,555,o),
(209,555,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
16 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 59 77 7 1 3 3 1 97 6 1 1 1 60 1 78 34 34 22 22 0 0 34 45 34 44 40 38 22 33 22 32 28 26 0 21 0 20 42 9 10 23
CALL[ ]	/* CallFunction */";
};
width = 308;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(232,342,o),
(311,412,o),
(311,463,qs),
(311,515,o),
(265,537,q),
(293,549,o),
(329,592,o),
(329,623,qs),
(329,660,o),
(276,705,o),
(229,705,qs),
(170,705,o),
(91,646,o),
(91,598,qs),
(91,561,o),
(130,537,q),
(95,524,o),
(56,468,o),
(56,434,qs),
(56,395,o),
(113,342,o),
(167,342,qs)
);
},
{
closed = 1;
nodes = (
(155,402,o),
(128,427,o),
(128,446,qs),
(128,472,o),
(168,504,o),
(192,504,qs),
(214,504,o),
(240,481,o),
(240,462,qs),
(240,434,o),
(201,402,o),
(176,402,qs)
);
},
{
closed = 1;
nodes = (
(184,558,o),
(162,578,o),
(162,596,qs),
(162,617,o),
(194,645,o),
(217,645,qs),
(235,645,o),
(256,624,o),
(256,608,qs),
(256,587,o),
(224,558,o),
(203,558,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
16 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 59 77 7 1 3 3 1 97 6 1 1 1 60 1 78 34 34 22 22 0 0 34 45 34 44 40 38 22 33 22 32 28 26 0 21 0 20 41 9 10 23
CALL[ ]	/* CallFunction */";
};
width = 296;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(208,342,o),
(274,375,o),
(309,431,o),
(309,464,qs),
(309,516,o),
(265,537,q),
(291,549,o),
(327,593,o),
(327,623,qs),
(327,660,o),
(274,705,o),
(226,705,qs),
(166,705,o),
(87,646,o),
(87,598,qs),
(87,562,o),
(124,537,q),
(90,524,o),
(52,468,o),
(52,435,qs),
(52,397,o),
(110,342,o),
(164,342,qs)
);
},
{
closed = 1;
nodes = (
(154,406,o),
(129,429,o),
(129,447,qs),
(129,471,o),
(166,503,o),
(189,503,qs),
(210,503,o),
(234,481,o),
(234,463,qs),
(234,437,o),
(199,406,o),
(174,406,qs)
);
},
{
closed = 1;
nodes = (
(182,559,o),
(162,578,o),
(162,595,qs),
(162,614,o),
(193,642,o),
(213,642,qs),
(230,642,o),
(250,621,o),
(250,607,qs),
(250,587,o),
(220,559,o),
(200,559,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
16 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 59 77 7 1 3 3 1 97 6 1 1 1 60 1 78 35 35 23 23 0 0 35 46 35 45 41 39 23 34 23 33 29 27 0 22 0 21 41 9 10 23
CALL[ ]	/* CallFunction */";
};
width = 290;
}
);
note = uni2078;
unicode = 8312;
},
{
glyphname = uni2079;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,342,o),
(294,417,o),
(334,528,o),
(334,582,qs),
(334,638,o),
(280,705,o),
(224,705,qs),
(185,705,o),
(120,664,o),
(82,598,o),
(82,563,qs),
(82,523,o),
(130,470,o),
(171,470,qs),
(194,470,o),
(239,491,o),
(255,508,q),
(244,458,o),
(202,402,o),
(172,402,qs),
(133,402,o),
(131,446,q),
(66,446,l),
(63,399,o),
(114,342,o),
(162,342,qs)
);
},
{
closed = 1;
nodes = (
(176,531,o),
(152,555,o),
(152,575,qs),
(152,603,o),
(188,644,o),
(216,644,qs),
(237,644,o),
(262,619,o),
(262,599,qs),
(262,571,o),
(223,531,o),
(197,531,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 2 1 1 0 114 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 59 77 0 1 1 4 98 7 1 4 4 60 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 59 77 0 1 1 4 98 7 1 4 4 60 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 37 36 33 18 9 10 26
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(220,342,o),
(298,417,o),
(337,529,o),
(337,583,qs),
(337,639,o),
(284,705,o),
(228,705,qs),
(190,705,o),
(125,664,o),
(88,598,o),
(88,563,qs),
(88,524,o),
(135,472,o),
(175,472,qs),
(202,472,o),
(252,499,o),
(267,520,q),
(255,458,o),
(208,395,o),
(176,395,qs),
(132,395,o),
(130,443,q),
(71,443,l),
(69,398,o),
(120,342,o),
(166,342,qs)
);
},
{
closed = 1;
nodes = (
(178,527,o),
(151,553,o),
(151,575,qs),
(151,605,o),
(191,650,o),
(222,650,qs),
(245,650,o),
(272,623,o),
(272,600,qs),
(272,571,o),
(229,527,o),
(201,527,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 2 1 1 0 114 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 59 77 0 1 1 4 98 7 1 4 4 60 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 59 77 0 1 1 4 98 7 1 4 4 60 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 37 36 33 18 9 10 26
CALL[ ]	/* CallFunction */";
};
width = 313;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(214,342,o),
(292,417,o),
(332,528,o),
(332,581,qs),
(332,637,o),
(278,705,o),
(222,705,qs),
(183,705,o),
(117,663,o),
(79,597,o),
(79,562,qs),
(79,522,o),
(129,469,o),
(170,469,qs),
(192,469,o),
(235,488,o),
(250,504,q),
(240,458,o),
(200,404,o),
(171,404,qs),
(133,404,o),
(131,446,q),
(64,446,l),
(61,399,o),
(112,342,o),
(160,342,qs)
);
},
{
closed = 1;
nodes = (
(175,532,o),
(152,554,o),
(152,574,qs),
(152,602,o),
(187,641,o),
(214,641,qs),
(234,641,o),
(258,618,o),
(258,598,qs),
(258,571,o),
(221,532,o),
(195,532,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 2 1 1 0 114 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 59 77 0 1 1 4 98 7 1 4 4 60 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 59 77 0 1 1 4 98 7 1 4 4 60 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 37 36 33 18 9 10 26
CALL[ ]	/* CallFunction */";
};
width = 300;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(210,342,o),
(289,416,o),
(330,528,o),
(330,580,qs),
(330,636,o),
(275,705,o),
(219,705,qs),
(180,705,o),
(113,663,o),
(75,597,o),
(75,562,qs),
(75,521,o),
(126,467,o),
(167,467,qs),
(186,467,o),
(226,482,o),
(242,496,q),
(218,408,o),
(168,408,qs),
(133,408,o),
(132,448,q),
(60,448,l),
(57,400,o),
(107,342,o),
(157,342,qs)
);
},
{
closed = 1;
nodes = (
(173,534,o),
(152,556,o),
(152,574,qs),
(152,600,o),
(185,637,o),
(210,637,qs),
(229,637,o),
(251,615,o),
(251,597,qs),
(251,571,o),
(216,534,o),
(192,534,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 2 1 1 0 114 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 59 77 0 1 1 4 98 7 1 4 4 60 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 59 77 0 1 1 4 98 7 1 4 4 60 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
25 25 0 0 25 36 25 35 31 29 0 24 0 23 37 35 33 18 9 10 26
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = uni2079;
unicode = 8313;
},
{
glyphname = space;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
width = 262;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
width = 286;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
width = 254;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
width = 238;
}
);
note = space;
unicode = 32;
},
{
glyphname = uni00A0;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
width = 262;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
width = 286;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
width = 254;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
width = 238;
}
);
note = uni00A0;
unicode = 160;
},
{
glyphname = .notdef;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(22,0,l),
(423,0,l),
(547,700,l),
(146,700,l)
);
},
{
closed = 1;
nodes = (
(102,57,l),
(206,643,l),
(467,643,l),
(363,57,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
4 1 1 0 2 3 1 2 103 0 3 0 0 3 87 0 3 3 0 95 0 0 3 0 79 0 0 7 6 5 4 0 3 0 3 17 5 6 23
CALL[ ]	/* CallFunction */";
};
width = 533;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(30,0,l),
(431,0,l),
(555,700,l),
(154,700,l)
);
},
{
closed = 1;
nodes = (
(110,57,l),
(214,643,l),
(475,643,l),
(371,57,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
4 1 1 0 2 3 1 2 103 0 3 0 0 3 87 0 3 3 0 95 0 0 3 0 79 0 0 7 6 5 4 0 3 0 3 17 5 6 23
CALL[ ]	/* CallFunction */";
};
width = 549;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(19,0,l),
(420,0,l),
(544,700,l),
(143,700,l)
);
},
{
closed = 1;
nodes = (
(99,57,l),
(203,643,l),
(464,643,l),
(360,57,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
4 1 1 0 2 3 1 2 103 0 3 0 0 3 87 0 3 3 0 95 0 0 3 0 79 0 0 7 6 5 4 0 3 0 3 17 5 6 23
CALL[ ]	/* CallFunction */";
};
width = 528;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(14,0,l),
(415,0,l),
(539,700,l),
(138,700,l)
);
},
{
closed = 1;
nodes = (
(94,57,l),
(198,643,l),
(459,643,l),
(355,57,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
4 1 1 0 2 3 1 2 103 0 3 0 0 3 87 0 3 3 0 95 0 0 3 0 79 0 0 7 6 5 4 0 3 0 3 17 5 6 23
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = .notdef;
},
{
glyphname = CR;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
width = 590;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
width = 587;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
width = 580;
}
);
note = CR;
unicode = 13;
},
{
glyphname = hyphen;
kernLeft = hyphen;
kernRight = hyphen;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(424,246,l),
(440,335,l),
(72,335,l),
(57,246,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 481;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(457,255,l),
(469,326,l),
(73,326,l),
(61,255,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 514;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(413,242,l),
(430,337,l),
(72,337,l),
(56,242,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 469;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(391,236,l),
(410,343,l),
(71,343,l),
(53,236,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = endash;
kernLeft = hyphen;
kernRight = hyphen;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(583,246,l),
(599,335,l),
(67,335,l),
(52,246,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 636;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(584,255,l),
(597,326,l),
(73,326,l),
(61,255,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 642;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(583,242,l),
(600,337,l),
(65,337,l),
(49,242,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 633;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(582,236,l),
(601,343,l),
(61,343,l),
(43,236,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 629;
}
);
note = endash;
unicode = 8211;
},
{
glyphname = emdash;
kernLeft = hyphen;
kernRight = hyphen;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(796,246,l),
(811,335,l),
(67,335,l),
(52,246,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 848;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(789,255,l),
(801,326,l),
(73,326,l),
(61,255,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 847;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(798,242,l),
(814,337,l),
(65,337,l),
(49,242,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 848;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(802,236,l),
(821,343,l),
(61,343,l),
(43,236,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 849;
}
);
note = emdash;
unicode = 8212;
},
{
glyphname = underscore;
kernLeft = underscore;
kernRight = underscore;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,-137,l),
(549,-37,l),
(1,-37,l),
(-16,-137,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 651;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(519,-115,l),
(532,-36,l),
(8,-36,l),
(-5,-115,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 641;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(536,-145,l),
(555,-37,l),
(-1,-37,l),
(-20,-145,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 654;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(545,-160,l),
(566,-38,l),
(-6,-38,l),
(-27,-160,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 661;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = parenleft;
kernRight = parenleft;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,-145,l),
(279,-135,l),
(219,-60,o),
(152,128,o),
(152,230,qs),
(152,332,o),
(186,433,qs),
(221,534,o),
(352,722,o),
(444,801,q),
(445,811,l),
(338,811,l),
(248,736,o),
(184,641,qs),
(117,543,o),
(46,326,o),
(46,216,qs),
(46,108,o),
(113,-78,o),
(169,-145,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 26 23 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 377;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(265,-145,l),
(267,-137,l),
(205,-63,o),
(136,123,o),
(136,226,qs),
(136,327,o),
(171,432,qs),
(207,536,o),
(340,726,o),
(432,803,q),
(433,811,l),
(347,811,l),
(257,736,o),
(192,642,qs),
(124,544,o),
(51,325,o),
(51,215,qs),
(51,106,o),
(120,-78,o),
(178,-145,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 26 23 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 373;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(280,-145,l),
(283,-134,l),
(223,-59,o),
(157,129,o),
(157,231,qs),
(157,332,o),
(191,433,qs),
(226,533,o),
(356,721,o),
(447,800,q),
(448,811,l),
(335,811,l),
(243,733,o),
(181,641,qs),
(115,544,o),
(44,326,o),
(44,216,qs),
(44,109,o),
(110,-78,o),
(166,-145,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 26 23 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 378;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(288,-145,l),
(291,-133,l),
(232,-57,o),
(167,133,o),
(167,233,qs),
(167,334,o),
(201,433,qs),
(235,532,o),
(364,718,o),
(455,799,q),
(456,811,l),
(329,811,l),
(238,734,o),
(175,640,qs),
(109,543,o),
(40,327,o),
(40,217,qs),
(40,111,o),
(104,-78,o),
(160,-145,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 26 23 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 380;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
kernLeft = parenright;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-38,-145,l),
(69,-145,l),
(161,-67,o),
(224,26,qs),
(290,123,o),
(361,341,o),
(361,450,qs),
(361,557,o),
(294,744,o),
(237,811,q),
(130,811,l),
(128,801,l),
(188,726,o),
(255,539,o),
(255,437,qs),
(255,335,o),
(221,234,qs),
(186,132,o),
(55,-56,o),
(-36,-135,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 24 24 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 377;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(-30,-145,l),
(56,-145,l),
(146,-70,o),
(212,25,qs),
(279,122,o),
(351,341,o),
(351,451,qs),
(351,560,o),
(282,744,o),
(224,811,q),
(138,811,l),
(136,803,l),
(198,729,o),
(267,543,o),
(267,440,qs),
(267,339,o),
(232,234,qs),
(196,130,o),
(63,-60,o),
(-29,-137,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 24 24 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 373;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(-41,-145,l),
(73,-145,l),
(166,-66,o),
(227,26,qs),
(293,123,o),
(364,340,o),
(364,450,qs),
(364,556,o),
(297,744,o),
(241,811,q),
(127,811,l),
(125,800,l),
(185,725,o),
(251,537,o),
(251,435,qs),
(251,333,o),
(217,234,qs),
(182,133,o),
(52,-55,o),
(-39,-134,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 24 24 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 378;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(-46,-145,l),
(82,-145,l),
(171,-69,o),
(235,27,qs),
(301,124,o),
(370,339,o),
(370,449,qs),
(370,555,o),
(306,744,o),
(250,811,q),
(122,811,l),
(119,799,l),
(179,724,o),
(243,534,o),
(243,433,qs),
(243,332,o),
(209,234,qs),
(175,135,o),
(47,-51,o),
(-44,-133,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 24 24 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 380;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = braceleft;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(310,-162,l),
(325,-73,l),
(287,-73,ls),
(254,-73,o),
(220,-46,o),
(220,-15,qs),
(220,6,o),
(233,55,o),
(247,93,qs),
(262,134,o),
(277,191,o),
(277,217,qs),
(277,258,o),
(234,313,o),
(189,324,q),
(189,326,l),
(276,343,o),
(330,472,o),
(330,565,qs),
(330,613,o),
(340,676,o),
(383,722,o),
(428,722,qs),
(466,722,l),
(481,811,l),
(424,811,ls),
(326,811,o),
(229,686,o),
(229,585,qs),
(229,511,o),
(219,436,o),
(165,377,o),
(104,368,q),
(89,282,l),
(174,267,o),
(174,201,qs),
(174,172,o),
(160,124,o),
(145,82,qs),
(130,46,o),
(114,-10,o),
(114,-42,qs),
(114,-101,o),
(188,-162,o),
(252,-162,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
28 10 2 2 1 1 76 0 0 0 1 2 0 1 105 0 2 3 3 2 89 0 2 2 3 97 4 1 3 2 3 81 0 0 0 44 0 43 42 40 22 20 19 17 5 8 22
CALL[ ]	/* CallFunction */";
};
width = 434;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(302,-152,l),
(315,-80,l),
(277,-80,ls),
(240,-80,o),
(205,-51,o),
(205,-19,qs),
(205,1,o),
(218,49,o),
(232,88,qs),
(247,133,o),
(263,193,o),
(263,220,qs),
(263,306,o),
(175,329,q),
(175,331,l),
(259,349,o),
(317,467,o),
(317,564,qs),
(317,622,o),
(328,693,o),
(374,739,o),
(422,739,qs),
(460,739,l),
(472,811,l),
(419,811,ls),
(321,811,o),
(235,687,o),
(235,593,qs),
(235,551,ls),
(235,498,o),
(219,428,o),
(164,375,o),
(107,364,q),
(95,296,l),
(181,278,o),
(181,207,qs),
(181,176,o),
(165,120,o),
(150,83,qs),
(135,46,o),
(120,-9,o),
(120,-39,qs),
(120,-94,o),
(189,-152,o),
(249,-152,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
29 10 2 2 1 1 76 0 0 0 1 2 0 1 105 0 2 3 3 2 89 0 2 2 3 97 4 1 3 2 3 81 0 0 0 44 0 43 42 40 23 21 20 18 5 8 22
CALL[ ]	/* CallFunction */";
};
width = 424;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(312,-166,l),
(328,-71,l),
(290,-71,ls),
(258,-71,o),
(225,-45,o),
(225,-14,qs),
(225,8,o),
(238,57,o),
(252,95,qs),
(267,136,o),
(281,190,o),
(281,215,qs),
(281,256,o),
(238,312,o),
(194,322,q),
(194,324,l),
(256,336,o),
(318,416,o),
(334,509,o),
(334,567,qs),
(334,610,o),
(344,671,o),
(386,716,o),
(429,716,qs),
(467,716,l),
(484,811,l),
(425,811,ls),
(327,811,o),
(226,686,o),
(226,582,qs),
(226,509,o),
(215,434,o),
(162,377,o),
(103,369,q),
(87,277,l),
(172,263,o),
(172,198,qs),
(172,169,o),
(157,118,o),
(143,82,qs),
(127,40,o),
(112,-12,o),
(112,-44,qs),
(112,-104,o),
(187,-166,o),
(252,-166,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
29 10 2 2 1 1 76 0 0 0 1 2 0 1 105 0 2 3 3 2 89 0 2 2 3 97 4 1 3 2 3 81 0 0 0 45 0 44 43 41 22 20 19 17 5 8 22
CALL[ ]	/* CallFunction */";
};
width = 437;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(317,-173,l),
(335,-67,l),
(297,-67,ls),
(267,-67,o),
(235,-42,o),
(235,-12,qs),
(235,12,o),
(249,62,o),
(262,98,qs),
(276,137,o),
(290,188,o),
(290,213,qs),
(290,253,o),
(247,309,o),
(203,318,q),
(203,320,l),
(266,333,o),
(327,416,o),
(343,508,o),
(343,561,qs),
(343,601,o),
(351,659,o),
(391,705,o),
(433,705,qs),
(471,705,l),
(490,811,l),
(428,811,ls),
(330,811,o),
(222,686,o),
(222,577,qs),
(222,506,o),
(210,429,o),
(158,377,o),
(101,371,q),
(83,268,l),
(126,262,o),
(167,223,o),
(167,194,qs),
(167,167,o),
(153,117,o),
(139,81,qs),
(123,40,o),
(108,-14,o),
(108,-46,qs),
(108,-108,o),
(186,-173,o),
(254,-173,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
30 11 2 2 1 1 76 0 0 0 1 2 0 1 105 0 2 3 3 2 89 0 2 2 3 97 4 1 3 2 3 81 0 0 0 46 0 45 44 42 23 21 20 18 5 8 22
CALL[ ]	/* CallFunction */";
};
width = 443;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = braceright;
kernLeft = braceright;
kernRight = braceright;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,-162,ls),
(130,-162,o),
(232,-46,o),
(232,62,qs),
(232,131,o),
(246,213,o),
(300,272,o),
(357,281,q),
(372,367,l),
(328,375,o),
(287,418,o),
(287,448,qs),
(287,474,o),
(300,521,o),
(315,561,qs),
(331,600,o),
(347,659,o),
(347,691,qs),
(347,750,o),
(274,811,o),
(209,811,qs),
(151,811,l),
(136,722,l),
(174,722,ls),
(206,722,o),
(241,696,o),
(241,664,qs),
(241,644,o),
(228,599,o),
(215,561,qs),
(200,518,o),
(184,460,o),
(184,432,qs),
(184,345,o),
(273,326,q),
(273,324,l),
(192,307,o),
(131,188,o),
(131,100,qs),
(131,20,o),
(93,-73,o),
(34,-73,qs),
(-4,-73,l),
(-20,-162,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
34 7 2 0 1 1 76 0 2 0 1 0 2 1 105 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 43 41 23 21 20 18 32 4 8 23
CALL[ ]	/* CallFunction */";
};
width = 434;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(35,-152,ls),
(120,-152,o),
(217,-42,o),
(217,62,qs),
(217,133,o),
(232,220,o),
(288,284,o),
(347,295,q),
(359,363,l),
(272,383,o),
(272,452,qs),
(272,479,o),
(286,530,o),
(301,567,qs),
(317,606,o),
(333,665,o),
(333,698,qs),
(333,753,o),
(265,811,o),
(204,811,qs),
(151,811,l),
(139,739,l),
(177,739,ls),
(249,739,o),
(249,678,qs),
(249,656,o),
(237,615,o),
(223,577,qs),
(207,536,o),
(190,474,o),
(190,439,qs),
(190,352,o),
(280,331,q),
(280,329,l),
(205,312,o),
(137,206,o),
(137,118,qs),
(137,31,o),
(95,-80,o),
(33,-80,qs),
(-5,-80,l),
(-18,-152,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
32 7 2 0 1 1 76 0 2 0 1 0 2 1 105 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 41 39 33 47 32 4 8 25
CALL[ ]	/* CallFunction */";
};
width = 425;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(38,-166,ls),
(132,-166,o),
(236,-48,o),
(236,61,qs),
(236,129,o),
(250,210,o),
(303,268,o),
(360,276,q),
(376,368,l),
(332,375,o),
(291,417,o),
(291,447,qs),
(291,472,o),
(304,519,o),
(319,559,qs),
(335,598,o),
(351,657,o),
(351,689,qs),
(351,749,o),
(277,811,o),
(211,811,qs),
(151,811,l),
(135,716,l),
(173,716,ls),
(204,716,o),
(238,691,o),
(238,659,qs),
(238,640,o),
(226,595,o),
(212,554,qs),
(198,514,o),
(182,456,o),
(182,430,qs),
(182,389,o),
(225,333,o),
(270,324,q),
(270,322,l),
(187,304,o),
(129,182,o),
(129,94,qs),
(129,16,o),
(92,-71,o),
(34,-71,qs),
(-4,-71,l),
(-21,-166,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
35 7 2 0 1 1 76 0 2 0 1 0 2 1 105 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 44 42 24 22 21 19 32 4 8 23
CALL[ ]	/* CallFunction */";
};
width = 436;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(40,-173,ls),
(138,-173,o),
(246,-51,o),
(246,61,qs),
(246,128,o),
(259,206,o),
(311,260,o),
(367,267,q),
(385,370,l),
(342,376,o),
(301,415,o),
(301,444,qs),
(301,469,o),
(314,515,o),
(329,555,qs),
(344,596,o),
(360,653,o),
(360,684,qs),
(360,746,o),
(282,811,o),
(214,811,qs),
(151,811,l),
(133,705,l),
(171,705,ls),
(200,705,o),
(232,680,o),
(232,650,qs),
(232,632,o),
(219,584,o),
(206,542,qs),
(192,499,o),
(178,446,o),
(178,425,qs),
(178,384,o),
(220,329,o),
(265,320,q),
(265,318,l),
(204,306,o),
(142,229,o),
(125,138,o),
(125,82,qs),
(125,34,o),
(113,-29,o),
(74,-67,o),
(35,-67,qs),
(-3,-67,l),
(-23,-173,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
37 9 2 0 1 1 76 0 2 0 1 0 2 1 105 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 46 44 26 24 23 21 32 4 8 23
CALL[ ]	/* CallFunction */";
};
width = 442;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = bracketleft;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,-161,l),
(216,-73,l),
(109,-73,l),
(250,724,l),
(356,724,l),
(372,811,l),
(166,811,l),
(-6,-161,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 325;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(178,-151,l),
(190,-81,l),
(95,-81,l),
(240,742,l),
(335,742,l),
(348,811,l),
(174,811,l),
(4,-151,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 308;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(207,-164,l),
(224,-71,l),
(114,-71,l),
(253,718,l),
(363,718,l),
(379,810,l),
(163,810,l),
(-9,-164,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 330;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(222,-171,l),
(241,-66,l),
(123,-66,l),
(259,706,l),
(377,706,l),
(395,810,l),
(157,810,l),
(-16,-171,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 341;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = bracketright;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(186,-160,l),
(358,811,l),
(152,811,l),
(136,724,l),
(243,724,l),
(102,-74,l),
(-4,-74,l),
(-20,-160,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 2 0 1 0 2 1 103 0 0 3 3 0 87 0 0 0 3 95 0 3 0 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 325;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(163,-151,l),
(333,811,l),
(159,811,l),
(147,741,l),
(242,741,l),
(97,-82,l),
(2,-82,l),
(-11,-151,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 2 0 1 0 2 1 103 0 0 3 3 0 87 0 0 0 3 95 0 3 0 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 308;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(194,-164,l),
(366,811,l),
(149,811,l),
(132,718,l),
(243,718,l),
(104,-71,l),
(-7,-71,l),
(-23,-164,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 2 0 1 0 2 1 103 0 0 3 3 0 87 0 0 0 3 95 0 3 0 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 330;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(209,-170,l),
(382,811,l),
(144,811,l),
(125,706,l),
(243,706,l),
(107,-66,l),
(-11,-66,l),
(-29,-170,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 2 0 1 0 2 1 103 0 0 3 3 0 87 0 0 0 3 95 0 3 0 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 341;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = quotesinglbase;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(11,-117,l),
(149,118,l),
(35,118,l),
(-63,-117,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 202;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(-5,-122,l),
(126,102,l),
(32,102,l),
(-65,-122,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 184;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(16,-116,l),
(157,123,l),
(35,123,l),
(-62,-116,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 208;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(26,-113,l),
(172,133,l),
(37,133,l),
(-61,-113,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 220;
}
);
note = quotesinglbase;
unicode = 8218;
},
{
glyphname = quotedblbase;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,-117,l),
(338,118,l),
(224,118,l),
(126,-117,l)
);
},
{
closed = 1;
nodes = (
(15,-117,l),
(154,118,l),
(39,118,l),
(-58,-117,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 391;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(165,-122,l),
(295,102,l),
(201,102,l),
(105,-122,l)
);
},
{
closed = 1;
nodes = (
(-5,-122,l),
(126,102,l),
(32,102,l),
(-65,-122,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 353;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(212,-116,l),
(352,123,l),
(231,123,l),
(133,-116,l)
);
},
{
closed = 1;
nodes = (
(22,-116,l),
(163,123,l),
(41,123,l),
(-56,-116,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 404;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(235,-113,l),
(380,133,l),
(246,133,l),
(147,-113,l)
);
},
{
closed = 1;
nodes = (
(35,-113,l),
(181,133,l),
(46,133,l),
(-52,-113,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 429;
}
);
note = quotedblbase;
unicode = 8222;
},
{
glyphname = quotedblleft;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(354,466,l),
(451,700,l),
(377,700,l),
(239,466,l)
);
},
{
closed = 1;
nodes = (
(176,466,l),
(273,700,l),
(199,700,l),
(61,466,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 407;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(319,477,l),
(415,700,l),
(355,700,l),
(224,477,l)
);
},
{
closed = 1;
nodes = (
(159,477,l),
(256,700,l),
(196,700,l),
(65,477,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 372;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(366,462,l),
(462,700,l),
(384,700,l),
(244,462,l)
);
},
{
closed = 1;
nodes = (
(181,462,l),
(278,700,l),
(200,700,l),
(60,462,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 418;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(389,454,l),
(486,700,l),
(399,700,l),
(254,454,l)
);
},
{
closed = 1;
nodes = (
(192,454,l),
(289,700,l),
(202,700,l),
(57,454,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = quotedblleft;
unicode = 8220;
},
{
glyphname = quotedblright;
kernRight = quotedblright;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,465,l),
(464,700,l),
(349,700,l),
(252,465,l)
);
},
{
closed = 1;
nodes = (
(148,465,l),
(286,700,l),
(171,700,l),
(74,465,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 406;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(296,476,l),
(427,699,l),
(333,699,l),
(236,476,l)
);
},
{
closed = 1;
nodes = (
(137,476,l),
(268,699,l),
(174,699,l),
(77,476,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 371;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(335,461,l),
(476,700,l),
(354,700,l),
(257,461,l)
);
},
{
closed = 1;
nodes = (
(151,461,l),
(291,700,l),
(170,700,l),
(73,461,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 418;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(355,454,l),
(500,700,l),
(365,700,l),
(268,454,l)
);
},
{
closed = 1;
nodes = (
(158,454,l),
(303,700,l),
(168,700,l),
(71,454,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = quotedblright;
unicode = 8221;
},
{
glyphname = quoteleft;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(176,466,l),
(273,700,l),
(199,700,l),
(61,466,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 229;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(159,477,l),
(256,700,l),
(196,700,l),
(65,477,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 213;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(181,462,l),
(278,700,l),
(200,700,l),
(60,462,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 234;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(192,454,l),
(289,700,l),
(202,700,l),
(57,454,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 244;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
kernRight = quotedblright;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,466,l),
(286,700,l),
(172,700,l),
(75,466,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 229;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(138,477,l),
(268,700,l),
(174,700,l),
(78,477,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 213;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(152,462,l),
(292,700,l),
(171,700,l),
(73,462,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 234;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(159,454,l),
(304,700,l),
(169,700,l),
(71,454,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 244;
}
);
note = quoteright;
unicode = 8217;
},
{
glyphname = guillemotleft;
kernLeft = guillemotleft;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,120,l),
(209,120,l),
(142,295,l),
(270,470,l),
(168,470,l),
(43,295,l)
);
},
{
closed = 1;
nodes = (
(296,120,l),
(398,120,l),
(332,295,l),
(460,470,l),
(358,470,l),
(233,295,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
11 8 5 2 4 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 469;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(114,120,l),
(198,120,l),
(128,295,l),
(259,470,l),
(176,470,l),
(48,295,l)
);
},
{
closed = 1;
nodes = (
(292,120,l),
(375,120,l),
(306,295,l),
(437,470,l),
(354,470,l),
(226,295,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
11 8 5 2 4 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 453;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(103,120,l),
(212,120,l),
(147,295,l),
(273,470,l),
(165,470,l),
(41,295,l)
);
},
{
closed = 1;
nodes = (
(297,120,l),
(405,120,l),
(341,295,l),
(467,470,l),
(359,470,l),
(235,295,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
11 8 5 2 4 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 474;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(97,120,l),
(219,120,l),
(156,295,l),
(280,470,l),
(159,470,l),
(38,295,l)
);
},
{
closed = 1;
nodes = (
(299,120,l),
(420,120,l),
(358,295,l),
(482,470,l),
(361,470,l),
(240,295,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
11 8 5 2 4 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 485;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = guillemotright;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,120,l),
(127,120,l),
(252,295,l),
(189,470,l),
(87,470,l),
(153,295,l)
);
},
{
closed = 1;
nodes = (
(215,120,l),
(317,120,l),
(442,295,l),
(379,470,l),
(277,470,l),
(343,295,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
11 8 5 2 4 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 469;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(31,120,l),
(114,120,l),
(242,295,l),
(176,470,l),
(93,470,l),
(162,295,l)
);
},
{
closed = 1;
nodes = (
(209,120,l),
(292,120,l),
(420,295,l),
(354,470,l),
(271,470,l),
(340,295,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
11 8 5 2 4 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 452;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(23,120,l),
(131,120,l),
(255,295,l),
(193,470,l),
(85,470,l),
(150,295,l)
);
},
{
closed = 1;
nodes = (
(217,120,l),
(325,120,l),
(449,295,l),
(387,470,l),
(279,470,l),
(343,295,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
11 8 5 2 4 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 474;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(19,120,l),
(140,120,l),
(261,295,l),
(202,470,l),
(81,470,l),
(144,295,l)
);
},
{
closed = 1;
nodes = (
(221,120,l),
(342,120,l),
(463,295,l),
(404,470,l),
(283,470,l),
(345,295,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
11 8 5 2 4 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 485;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = guilsinglleft;
kernLeft = guillemotleft;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,120,l),
(142,295,l),
(270,470,l),
(168,470,l),
(43,295,l),
(106,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 280;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(198,120,l),
(128,295,l),
(259,470,l),
(176,470,l),
(48,295,l),
(114,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 275;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(212,120,l),
(147,295,l),
(273,470,l),
(165,470,l),
(41,295,l),
(103,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 281;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(219,120,l),
(156,295,l),
(280,470,l),
(159,470,l),
(38,295,l),
(97,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 284;
}
);
note = guilsinglleft;
unicode = 8249;
},
{
glyphname = guilsinglright;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,120,l),
(252,295,l),
(189,470,l),
(87,470,l),
(153,295,l),
(25,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 279;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(114,120,l),
(242,295,l),
(176,470,l),
(93,470,l),
(162,295,l),
(31,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 274;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(131,120,l),
(255,295,l),
(193,470,l),
(85,470,l),
(150,295,l),
(23,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 280;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(140,120,l),
(261,295,l),
(202,470,l),
(81,470,l),
(144,295,l),
(19,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 283;
}
);
note = guilsinglright;
unicode = 8250;
},
{
glyphname = quotedbl;
kernRight = quotedblright;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,465,l),
(464,700,l),
(349,700,l),
(252,465,l)
);
},
{
closed = 1;
nodes = (
(148,465,l),
(286,700,l),
(171,700,l),
(74,465,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 406;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(296,476,l),
(427,699,l),
(333,699,l),
(236,476,l)
);
},
{
closed = 1;
nodes = (
(137,476,l),
(268,699,l),
(174,699,l),
(77,476,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 371;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(335,461,l),
(476,700,l),
(354,700,l),
(257,461,l)
);
},
{
closed = 1;
nodes = (
(151,461,l),
(291,700,l),
(170,700,l),
(73,461,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 418;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(355,454,l),
(500,700,l),
(365,700,l),
(268,454,l)
);
},
{
closed = 1;
nodes = (
(158,454,l),
(303,700,l),
(168,700,l),
(71,454,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = quotesingle;
kernRight = quotedblright;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,466,l),
(286,700,l),
(172,700,l),
(75,466,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 229;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(138,477,l),
(268,700,l),
(174,700,l),
(78,477,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 213;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(152,462,l),
(292,700,l),
(171,700,l),
(73,462,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 234;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(159,454,l),
(304,700,l),
(169,700,l),
(71,454,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 244;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = period;
kernLeft = period;
kernRight = period;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(102,-8,o),
(142,33,o),
(142,62,qs),
(142,91,o),
(102,132,o),
(72,132,qs),
(42,132,o),
(2,91,o),
(2,62,qs),
(2,33,o),
(42,-8,o),
(72,-8,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 97 2 1 1 1 40 1 78 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 209;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(89,-5,o),
(121,28,o),
(121,52,qs),
(121,76,o),
(89,109,o),
(64,109,qs),
(39,109,o),
(6,76,o),
(6,52,qs),
(6,28,o),
(39,-5,o),
(64,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 97 2 1 1 1 34 1 78 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 196;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(106,-10,o),
(149,34,o),
(149,65,qs),
(149,96,o),
(106,139,o),
(75,139,qs),
(43,139,o),
(0,96,o),
(0,65,qs),
(0,33,o),
(43,-10,o),
(75,-10,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 97 2 1 1 1 40 1 78 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 213;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(115,-12,o),
(163,37,o),
(163,71,qs),
(163,106,o),
(115,154,o),
(80,154,qs),
(45,154,o),
(-3,106,o),
(-3,71,qs),
(-3,36,o),
(45,-12,o),
(80,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 97 2 1 1 1 40 1 78 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 222;
}
);
note = period;
unicode = 46;
},
{
glyphname = comma;
kernLeft = comma;
kernRight = comma;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(8,-117,l),
(142,118,l),
(36,118,l),
(-63,-117,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 195;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(-6,-119,l),
(120,102,l),
(33,102,l),
(-64,-119,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 178;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(13,-117,l),
(149,123,l),
(37,123,l),
(-63,-117,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 201;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(22,-116,l),
(163,133,l),
(39,133,l),
(-62,-116,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = comma;
unicode = 44;
},
{
glyphname = colon;
kernLeft = colon;
kernRight = colon;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(169,370,o),
(209,411,o),
(209,440,qs),
(209,469,o),
(169,510,o),
(139,510,qs),
(109,510,o),
(69,469,o),
(69,440,qs),
(69,411,o),
(109,370,o),
(139,370,qs)
);
},
{
closed = 1;
nodes = (
(102,-8,o),
(142,33,o),
(142,62,qs),
(142,91,o),
(102,132,o),
(72,132,qs),
(42,132,o),
(2,91,o),
(2,62,qs),
(2,33,o),
(42,-8,o),
(72,-8,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
4 1 1 1 0 97 0 0 0 42 77 0 2 2 3 97 5 1 3 3 40 3 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 211;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(159,394,o),
(191,427,o),
(191,451,qs),
(191,475,o),
(159,508,o),
(134,508,qs),
(109,508,o),
(76,475,o),
(76,451,qs),
(76,427,o),
(109,394,o),
(134,394,qs)
);
},
{
closed = 1;
nodes = (
(89,-5,o),
(121,28,o),
(121,52,qs),
(121,76,o),
(89,109,o),
(64,109,qs),
(39,109,o),
(6,76,o),
(6,52,qs),
(6,28,o),
(39,-5,o),
(64,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
4 1 1 1 0 97 0 0 0 42 77 0 2 2 3 97 5 1 3 3 34 3 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 199;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(172,362,o),
(215,405,o),
(215,436,qs),
(215,467,o),
(172,511,o),
(141,511,qs),
(109,511,o),
(66,468,o),
(66,436,qs),
(66,405,o),
(109,362,o),
(141,362,qs)
);
},
{
closed = 1;
nodes = (
(106,-10,o),
(149,34,o),
(149,65,qs),
(149,96,o),
(106,139,o),
(75,139,qs),
(43,139,o),
(0,96,o),
(0,65,qs),
(0,33,o),
(43,-10,o),
(75,-10,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
4 1 1 1 0 97 0 0 0 42 77 0 2 2 3 97 5 1 3 3 40 3 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 214;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(179,346,o),
(227,395,o),
(227,429,qs),
(227,464,o),
(179,512,o),
(144,512,qs),
(109,512,o),
(61,464,o),
(61,429,qs),
(61,394,o),
(109,346,o),
(144,346,qs)
);
},
{
closed = 1;
nodes = (
(115,-12,o),
(163,37,o),
(163,71,qs),
(163,106,o),
(115,154,o),
(80,154,qs),
(45,154,o),
(-3,106,o),
(-3,71,qs),
(-3,36,o),
(45,-12,o),
(80,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
4 1 1 1 0 97 0 0 0 42 77 0 2 2 3 97 5 1 3 3 40 3 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 222;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
kernLeft = semicolon;
kernRight = semicolon;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(22,-117,l),
(155,118,l),
(50,118,l),
(-49,-117,l)
);
},
{
closed = 1;
nodes = (
(194,370,o),
(234,411,o),
(234,440,qs),
(234,469,o),
(194,510,o),
(164,510,qs),
(134,510,o),
(94,469,o),
(94,440,qs),
(94,411,o),
(134,370,o),
(164,370,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 0 3 1 3 0 1 128 0 1 1 132 4 1 3 3 2 97 0 2 2 42 3 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 235;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(12,-119,l),
(138,102,l),
(51,102,l),
(-46,-119,l)
);
},
{
closed = 1;
nodes = (
(185,393,o),
(217,426,o),
(217,450,qs),
(217,474,o),
(185,507,o),
(160,507,qs),
(135,507,o),
(102,474,o),
(102,450,qs),
(102,426,o),
(135,393,o),
(160,393,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 0 3 1 3 0 1 128 0 1 1 132 4 1 3 3 2 97 0 2 2 42 3 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 225;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(25,-117,l),
(161,123,l),
(49,123,l),
(-51,-117,l)
);
},
{
closed = 1;
nodes = (
(196,362,o),
(240,405,o),
(240,436,qs),
(240,467,o),
(196,510,o),
(165,510,qs),
(134,510,o),
(91,467,o),
(91,436,qs),
(91,405,o),
(134,362,o),
(165,362,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 0 3 1 3 0 1 128 0 1 1 132 4 1 3 3 2 97 0 2 2 42 3 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 238;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(31,-116,l),
(172,133,l),
(48,133,l),
(-53,-116,l)
);
},
{
closed = 1;
nodes = (
(203,346,o),
(251,395,o),
(251,429,qs),
(251,464,o),
(203,512,o),
(168,512,qs),
(133,512,o),
(85,464,o),
(85,429,qs),
(85,394,o),
(133,346,o),
(168,346,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 0 3 1 3 0 1 128 0 1 1 132 4 1 3 3 2 97 0 2 2 42 3 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 245;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = ellipsis;
kernLeft = period;
kernRight = period;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(508,-8,o),
(549,33,o),
(549,62,qs),
(549,91,o),
(508,132,o),
(479,132,qs),
(449,132,o),
(408,91,o),
(408,62,qs),
(408,33,o),
(449,-8,o),
(479,-8,qs)
);
},
{
closed = 1;
nodes = (
(103,-8,o),
(144,33,o),
(144,62,qs),
(144,91,o),
(103,132,o),
(74,132,qs),
(44,132,o),
(3,91,o),
(3,62,qs),
(3,33,o),
(44,-8,o),
(74,-8,qs)
);
},
{
closed = 1;
nodes = (
(306,-8,o),
(346,33,o),
(346,62,qs),
(346,91,o),
(306,132,o),
(276,132,qs),
(246,132,o),
(206,91,o),
(206,62,qs),
(206,33,o),
(246,-8,o),
(276,-8,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
4 2 2 0 0 1 97 8 5 7 3 6 5 1 1 40 1 78 24 24 12 12 0 0 24 35 24 34 30 28 12 23 12 22 18 16 0 11 0 10 36 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 618;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(457,-5,o),
(489,28,o),
(489,52,qs),
(489,76,o),
(457,109,o),
(432,109,qs),
(407,109,o),
(374,76,o),
(374,52,qs),
(374,28,o),
(407,-5,o),
(432,-5,qs)
);
},
{
closed = 1;
nodes = (
(89,-5,o),
(121,28,o),
(121,52,qs),
(121,76,o),
(89,109,o),
(64,109,qs),
(39,109,o),
(6,76,o),
(6,52,qs),
(6,28,o),
(39,-5,o),
(64,-5,qs)
);
},
{
closed = 1;
nodes = (
(273,-5,o),
(305,28,o),
(305,52,qs),
(305,76,o),
(273,109,o),
(248,109,qs),
(223,109,o),
(190,76,o),
(190,52,qs),
(190,28,o),
(223,-5,o),
(248,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
4 2 2 0 0 1 97 8 5 7 3 6 5 1 1 34 1 78 24 24 12 12 0 0 24 35 24 34 30 28 12 23 12 22 18 16 0 11 0 10 36 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 565;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(525,-10,o),
(568,33,o),
(568,65,qs),
(568,96,o),
(525,139,o),
(494,139,qs),
(463,139,o),
(419,96,o),
(419,65,qs),
(419,34,o),
(463,-10,o),
(494,-10,qs)
);
},
{
closed = 1;
nodes = (
(108,-10,o),
(151,34,o),
(151,65,qs),
(151,96,o),
(108,139,o),
(77,139,qs),
(45,139,o),
(2,96,o),
(2,65,qs),
(2,33,o),
(45,-10,o),
(77,-10,qs)
);
},
{
closed = 1;
nodes = (
(317,-10,o),
(360,34,o),
(360,65,qs),
(360,96,o),
(316,139,o),
(285,139,qs),
(254,139,o),
(211,96,o),
(211,65,qs),
(211,33,o),
(254,-10,o),
(285,-10,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
4 2 2 0 0 1 97 8 5 7 3 6 5 1 1 40 1 78 24 24 12 12 0 0 24 35 24 34 30 28 12 23 12 22 18 16 0 11 0 10 36 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 636;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(560,-12,o),
(608,37,o),
(608,71,qs),
(608,106,o),
(560,154,o),
(525,154,qs),
(490,154,o),
(442,106,o),
(442,71,qs),
(442,36,o),
(490,-12,o),
(525,-12,qs)
);
},
{
closed = 1;
nodes = (
(118,-12,o),
(166,37,o),
(166,71,qs),
(166,106,o),
(118,154,o),
(83,154,qs),
(48,154,o),
(0,106,o),
(0,71,qs),
(0,36,o),
(48,-12,o),
(83,-12,qs)
);
},
{
closed = 1;
nodes = (
(339,-12,o),
(387,37,o),
(387,71,qs),
(387,106,o),
(339,154,o),
(304,154,qs),
(269,154,o),
(221,106,o),
(221,71,qs),
(221,36,o),
(269,-12,o),
(304,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
4 2 2 0 0 1 97 8 5 7 3 6 5 1 1 40 1 78 24 24 12 12 0 0 24 35 24 34 30 28 12 23 12 22 18 16 0 11 0 10 36 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = ellipsis;
unicode = 8230;
},
{
glyphname = exclam;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(161,208,l),
(260,700,l),
(146,700,l),
(71,208,l)
);
},
{
closed = 1;
nodes = (
(129,-8,o),
(170,33,o),
(170,62,qs),
(170,91,o),
(129,132,o),
(100,132,qs),
(70,132,o),
(29,91,o),
(29,62,qs),
(29,33,o),
(70,-8,o),
(100,-8,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 95 0 0 0 33 77 0 2 2 3 97 4 1 3 3 40 3 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 264;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(142,194,l),
(242,700,l),
(151,700,l),
(71,194,l)
);
},
{
closed = 1;
nodes = (
(115,-5,o),
(148,28,o),
(148,52,qs),
(148,76,o),
(115,109,o),
(91,109,qs),
(66,109,o),
(33,76,o),
(33,52,qs),
(33,28,o),
(66,-5,o),
(91,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 1 0 2 0 1 2 128 0 0 0 33 77 0 2 2 3 97 4 1 3 3 34 3 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 250;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(167,212,l),
(266,700,l),
(144,700,l),
(71,212,l)
);
},
{
closed = 1;
nodes = (
(134,-10,o),
(177,34,o),
(177,65,qs),
(177,96,o),
(133,139,o),
(102,139,qs),
(71,139,o),
(28,96,o),
(28,65,qs),
(28,33,o),
(71,-10,o),
(102,-10,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 95 0 0 0 33 77 0 2 2 3 97 4 1 3 3 40 3 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(179,221,l),
(278,700,l),
(141,700,l),
(71,221,l)
);
},
{
closed = 1;
nodes = (
(143,-12,o),
(191,37,o),
(191,71,qs),
(191,106,o),
(143,154,o),
(108,154,qs),
(73,154,o),
(25,106,o),
(25,71,qs),
(25,36,o),
(73,-12,o),
(108,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 95 0 0 0 33 77 0 2 2 3 97 4 1 3 3 40 3 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 278;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = exclamdown;
kernLeft = exclamdown;
kernRight = exclamdown;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(130,-141,l),
(205,352,l),
(115,352,l),
(16,-141,l)
);
},
{
closed = 1;
nodes = (
(206,428,o),
(247,469,o),
(247,498,qs),
(247,527,o),
(206,568,o),
(176,568,qs),
(147,568,o),
(106,527,o),
(106,498,qs),
(106,469,o),
(147,428,o),
(176,428,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 2 4 1 3 0 2 3 105 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 265;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(110,-143,l),
(190,363,l),
(119,363,l),
(19,-143,l)
);
},
{
closed = 1;
nodes = (
(195,448,o),
(228,481,o),
(228,505,qs),
(228,529,o),
(195,562,o),
(170,562,qs),
(146,562,o),
(113,529,o),
(113,505,qs),
(113,481,o),
(146,448,o),
(170,448,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 0 3 1 3 0 1 128 0 1 1 132 0 2 3 3 2 89 0 2 2 3 97 4 1 3 2 3 81 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 250;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(136,-140,l),
(209,348,l),
(114,348,l),
(14,-140,l)
);
},
{
closed = 1;
nodes = (
(209,421,o),
(253,464,o),
(253,495,qs),
(253,526,o),
(209,569,o),
(178,569,qs),
(147,569,o),
(104,526,o),
(104,495,qs),
(104,464,o),
(147,421,o),
(178,421,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 2 4 1 3 0 2 3 105 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 269;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(149,-139,l),
(219,340,l),
(111,340,l),
(12,-139,l)
);
},
{
closed = 1;
nodes = (
(217,407,o),
(265,455,o),
(265,490,qs),
(265,525,o),
(217,573,o),
(182,573,qs),
(148,573,o),
(99,525,o),
(99,490,qs),
(99,456,o),
(148,407,o),
(182,407,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 2 4 1 3 0 2 3 105 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 279;
}
);
note = exclamdown;
unicode = 161;
},
{
glyphname = question;
kernLeft = question;
kernRight = question;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(220,207,l),
(240,299,l),
(323,299,o),
(385,327,qs),
(450,355,o),
(520,463,o),
(520,538,qs),
(520,618,o),
(416,712,o),
(328,712,qs),
(257,712,o),
(205,686,qs),
(149,660,o),
(78,568,o),
(68,508,q),
(168,508,l),
(178,561,o),
(255,624,o),
(312,624,qs),
(360,624,o),
(416,570,o),
(416,526,qs),
(416,465,o),
(387,433,qs),
(332,370,o),
(190,370,qs),
(153,370,l),
(128,207,l)
);
},
{
closed = 1;
nodes = (
(183,-8,o),
(223,33,o),
(223,62,qs),
(223,91,o),
(183,132,o),
(153,132,qs),
(123,132,o),
(83,91,o),
(83,62,qs),
(83,33,o),
(123,-8,o),
(153,-8,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 0 1 2 0 128 0 5 4 6 4 5 114 0 0 0 4 5 0 4 105 0 1 1 3 97 0 3 3 39 77 0 6 6 7 97 8 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 0 1 2 0 128 0 5 4 6 4 5 6 128 0 0 0 4 5 0 4 105 0 1 1 3 97 0 3 3 39 77 0 6 6 7 97 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
28 28 28 39 28 38 37 17 22 36 18 37 32 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 512;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(209,196,l),
(231,299,l),
(316,299,o),
(379,327,qs),
(445,354,o),
(516,462,o),
(516,538,qs),
(516,618,o),
(413,712,o),
(327,712,qs),
(260,712,o),
(209,687,qs),
(154,662,o),
(84,571,o),
(74,512,q),
(153,512,l),
(164,571,o),
(251,641,o),
(315,641,qs),
(370,641,o),
(434,580,o),
(434,530,qs),
(434,464,o),
(403,427,qs),
(345,357,o),
(191,357,qs),
(162,357,l),
(137,196,l)
);
},
{
closed = 1;
nodes = (
(178,-5,o),
(210,28,o),
(210,52,qs),
(210,76,o),
(178,109,o),
(153,109,qs),
(128,109,o),
(95,76,o),
(95,52,qs),
(95,28,o),
(128,-5,o),
(153,-5,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 0 1 2 0 128 0 5 4 6 4 5 114 0 0 0 4 5 0 4 105 0 1 1 3 97 0 3 3 39 77 0 6 6 7 97 8 1 7 7 34 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 0 1 2 0 128 0 5 4 6 4 5 6 128 0 0 0 4 5 0 4 105 0 1 1 3 97 0 3 3 39 77 0 6 6 7 97 8 1 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
28 28 28 39 28 38 37 17 22 36 18 37 32 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 516;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(224,211,l),
(243,298,l),
(326,300,o),
(387,327,qs),
(451,355,o),
(521,462,o),
(521,537,qs),
(521,618,o),
(416,712,o),
(328,712,qs),
(258,712,o),
(203,686,qs),
(147,660,o),
(76,567,o),
(66,507,q),
(173,507,l),
(182,558,o),
(255,618,o),
(310,618,qs),
(356,618,o),
(410,567,o),
(410,525,qs),
(410,466,o),
(381,434,qs),
(328,374,o),
(190,374,qs),
(150,374,l),
(125,211,l)
);
},
{
closed = 1;
nodes = (
(184,-10,o),
(227,33,o),
(227,65,qs),
(227,96,o),
(184,139,o),
(153,139,qs),
(122,139,o),
(78,96,o),
(78,65,qs),
(78,34,o),
(122,-10,o),
(153,-10,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 0 1 2 0 128 0 5 4 6 4 5 114 0 0 0 4 5 0 4 105 0 1 1 3 97 0 3 3 39 77 0 6 6 7 97 8 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 0 1 2 0 128 0 5 4 6 4 5 6 128 0 0 0 4 5 0 4 105 0 1 1 3 97 0 3 3 39 77 0 6 6 7 97 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
28 28 28 39 28 38 37 17 22 36 18 37 32 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 510;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(231,218,l),
(249,298,l),
(332,300,o),
(391,327,qs),
(454,355,o),
(524,463,o),
(524,537,qs),
(524,618,o),
(418,712,o),
(328,712,qs),
(256,712,o),
(200,685,qs),
(143,658,o),
(72,564,o),
(62,504,q),
(183,504,l),
(191,551,o),
(258,606,o),
(308,606,qs),
(350,606,o),
(398,560,o),
(398,522,qs),
(398,467,o),
(370,438,qs),
(320,383,o),
(189,383,qs),
(144,383,l),
(119,218,l)
);
},
{
closed = 1;
nodes = (
(188,-12,o),
(236,37,o),
(236,71,qs),
(236,106,o),
(188,154,o),
(153,154,qs),
(118,154,o),
(70,106,o),
(70,71,qs),
(70,36,o),
(118,-12,o),
(153,-12,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 0 1 2 0 128 0 5 4 6 4 5 114 0 0 0 4 5 0 4 105 0 1 1 3 97 0 3 3 39 77 0 6 6 7 97 8 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 0 1 2 0 128 0 5 4 6 4 5 6 128 0 0 0 4 5 0 4 105 0 1 1 3 97 0 3 3 39 77 0 6 6 7 97 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
28 28 28 39 28 38 37 17 22 36 18 37 32 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = question;
unicode = 63;
},
{
glyphname = questiondown;
kernLeft = questiondown;
kernRight = questiondown;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,-160,o),
(363,-115,o),
(443,-23,o),
(454,44,q),
(354,44,l),
(344,-9,o),
(267,-71,o),
(210,-71,qs),
(162,-71,o),
(106,-18,o),
(106,26,qs),
(106,106,o),
(217,182,o),
(332,182,qs),
(369,182,l),
(394,345,l),
(302,345,l),
(282,254,l),
(211,253,o),
(84,207,o),
(2,100,o),
(2,15,qs),
(2,-66,o),
(106,-160,o),
(194,-160,qs)
);
},
{
closed = 1;
nodes = (
(399,421,o),
(439,462,o),
(439,491,qs),
(439,520,o),
(399,561,o),
(369,561,qs),
(339,561,o),
(299,520,o),
(299,491,qs),
(299,462,o),
(339,421,o),
(369,421,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 7 0 0 1 114 0 4 2 3 2 4 3 128 0 6 9 1 7 1 6 7 105 0 0 0 2 4 0 2 106 0 3 5 5 3 89 0 3 3 5 97 8 1 5 3 5 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 1 7 0 7 1 0 128 0 4 2 3 2 4 3 128 0 6 9 1 7 1 6 7 105 0 0 0 2 4 0 2 106 0 3 5 5 3 89 0 3 3 5 97 8 1 5 3 5 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
25 25 0 0 25 36 25 35 31 29 0 24 0 23 18 36 33 17 21 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 512;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(256,-164,o),
(364,-119,o),
(440,-28,o),
(451,36,q),
(372,36,l),
(361,-23,o),
(274,-93,o),
(210,-93,qs),
(155,-93,o),
(91,-32,o),
(91,18,qs),
(91,105,o),
(210,191,o),
(334,191,qs),
(363,191,l),
(388,352,l),
(316,352,l),
(294,249,l),
(222,249,o),
(93,203,o),
(9,96,o),
(9,10,qs),
(9,-70,o),
(112,-164,o),
(198,-164,qs)
);
},
{
closed = 1;
nodes = (
(397,439,o),
(430,472,o),
(430,496,qs),
(430,520,o),
(397,553,o),
(372,553,qs),
(347,553,o),
(315,520,o),
(315,496,qs),
(315,472,o),
(347,439,o),
(372,439,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 7 0 0 1 114 0 4 2 3 2 4 3 128 0 6 9 1 7 1 6 7 105 0 0 0 2 4 0 2 106 0 3 5 5 3 89 0 3 3 5 97 8 1 5 3 5 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 1 7 0 7 1 0 128 0 4 2 3 2 4 3 128 0 6 9 1 7 1 6 7 105 0 0 0 2 4 0 2 106 0 3 5 5 3 89 0 3 3 5 97 8 1 5 3 5 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
25 25 0 0 25 36 25 35 31 29 0 24 0 23 18 36 33 17 21 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 516;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(251,-159,o),
(363,-115,o),
(443,-22,o),
(454,47,q),
(347,47,l),
(338,-5,o),
(265,-64,o),
(210,-64,qs),
(164,-64,o),
(110,-14,o),
(110,29,qs),
(110,106,o),
(220,179,o),
(331,179,qs),
(370,179,l),
(395,343,l),
(297,343,l),
(277,255,l),
(207,254,o),
(81,207,o),
(-1,101,o),
(-1,16,qs),
(-1,-65,o),
(104,-159,o),
(193,-159,qs)
);
},
{
closed = 1;
nodes = (
(399,414,o),
(442,457,o),
(442,489,qs),
(442,520,o),
(399,563,o),
(367,563,qs),
(336,563,o),
(293,520,o),
(293,489,qs),
(293,458,o),
(336,414,o),
(367,414,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 7 0 0 1 114 0 4 2 3 2 4 3 128 0 6 9 1 7 1 6 7 105 0 0 0 2 4 0 2 106 0 3 5 5 3 89 0 3 3 5 97 8 1 5 3 5 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 1 7 0 7 1 0 128 0 4 2 3 2 4 3 128 0 6 9 1 7 1 6 7 105 0 0 0 2 4 0 2 106 0 3 5 5 3 89 0 3 3 5 97 8 1 5 3 5 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
25 25 0 0 25 36 25 35 31 29 0 24 0 23 18 36 33 17 21 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 510;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(249,-156,o),
(362,-112,o),
(445,-18,o),
(456,52,q),
(335,52,l),
(327,5,o),
(260,-50,o),
(210,-50,qs),
(168,-50,o),
(120,-4,o),
(120,34,qs),
(120,106,o),
(224,173,o),
(329,173,qs),
(374,173,l),
(399,338,l),
(287,338,l),
(269,258,l),
(199,257,o),
(75,209,o),
(-6,103,o),
(-6,19,qs),
(-6,-62,o),
(100,-156,o),
(190,-156,qs)
);
},
{
closed = 1;
nodes = (
(400,402,o),
(448,450,o),
(448,485,qs),
(448,520,o),
(400,568,o),
(365,568,qs),
(331,568,o),
(282,520,o),
(282,485,qs),
(282,451,o),
(331,402,o),
(365,402,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 7 0 0 1 114 0 4 2 3 2 4 3 128 0 6 9 1 7 1 6 7 105 0 0 0 2 4 0 2 106 0 3 5 5 3 89 0 3 3 5 97 8 1 5 3 5 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 1 7 0 7 1 0 128 0 4 2 3 2 4 3 128 0 6 9 1 7 1 6 7 105 0 0 0 2 4 0 2 106 0 3 5 5 3 89 0 3 3 5 97 8 1 5 3 5 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
25 25 0 0 25 36 25 35 31 29 0 24 0 23 18 36 33 17 21 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = questiondown;
unicode = 191;
},
{
glyphname = periodcentered;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(151,270,o),
(191,311,o),
(191,340,qs),
(191,370,o),
(151,410,o),
(121,410,qs),
(91,410,o),
(51,370,o),
(51,340,qs),
(51,311,o),
(91,270,o),
(121,270,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 209;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(140,285,o),
(172,318,o),
(172,342,qs),
(172,367,o),
(140,399,o),
(115,399,qs),
(90,399,o),
(57,367,o),
(57,342,qs),
(57,318,o),
(90,285,o),
(115,285,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 196;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(154,265,o),
(197,308,o),
(197,339,qs),
(197,371,o),
(154,414,o),
(123,414,qs),
(92,414,o),
(48,371,o),
(48,339,qs),
(48,308,o),
(92,265,o),
(123,265,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 213;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(162,255,o),
(210,304,o),
(210,338,qs),
(210,373,o),
(162,421,o),
(127,421,qs),
(92,421,o),
(44,373,o),
(44,338,qs),
(44,303,o),
(92,255,o),
(127,255,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 222;
}
);
note = periodcentered;
unicode = 183;
},
{
glyphname = bullet;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,206,o),
(322,280,o),
(322,333,qs),
(322,387,o),
(247,462,o),
(193,462,qs),
(140,462,o),
(66,387,o),
(66,333,qs),
(66,299,o),
(100,240,o),
(159,206,o),
(193,206,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 12 0 11 37 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 357;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(239,213,o),
(309,283,o),
(309,333,qs),
(309,384,o),
(239,454,o),
(188,454,qs),
(138,454,o),
(68,383,o),
(68,333,qs),
(68,284,o),
(139,213,o),
(188,213,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 347;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(250,203,o),
(326,278,o),
(326,333,qs),
(326,369,o),
(291,429,o),
(231,464,o),
(195,464,qs),
(140,464,o),
(65,388,o),
(65,333,qs),
(65,298,o),
(100,238,o),
(160,203,o),
(195,203,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 13 0 12 37 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 360;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(235,198,o),
(298,234,o),
(334,296,o),
(334,333,qs),
(334,370,o),
(298,433,o),
(235,469,o),
(198,469,qs),
(161,469,o),
(99,433,o),
(63,370,o),
(63,333,qs),
(63,296,o),
(99,234,o),
(161,198,o),
(198,198,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 15 0 14 38 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 367;
}
);
note = bullet;
unicode = 8226;
},
{
glyphname = asterisk;
kernLeft = asterisk;
kernRight = asterisk;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(288,358,l),
(311,487,l),
(411,423,l),
(457,483,l),
(356,547,l),
(479,611,l),
(455,671,l),
(332,607,l),
(354,735,l),
(285,735,l),
(263,607,l),
(163,671,l),
(118,611,l),
(217,547,l),
(96,483,l),
(119,423,l),
(242,487,l),
(219,358,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
15 14 13 12 11 10 9 6 5 4 3 2 1 13 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 24 23 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 480;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(280,356,l),
(304,493,l),
(412,425,l),
(450,476,l),
(343,545,l),
(474,613,l),
(454,664,l),
(322,596,l),
(346,733,l),
(287,733,l),
(263,596,l),
(157,664,l),
(118,613,l),
(224,545,l),
(94,476,l),
(115,425,l),
(245,493,l),
(221,356,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
15 14 13 12 11 10 9 6 5 4 3 2 1 13 1 0 1 76 0 0 1 0 133 0 1 1 118 24 23 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 474;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(291,359,l),
(313,484,l),
(411,422,l),
(459,485,l),
(360,548,l),
(480,610,l),
(455,673,l),
(335,610,l),
(357,736,l),
(284,736,l),
(262,610,l),
(165,673,l),
(117,610,l),
(215,548,l),
(96,485,l),
(120,422,l),
(240,484,l),
(218,359,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
15 14 13 12 11 10 9 6 5 4 3 2 1 13 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 24 23 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 482;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(296,360,l),
(317,480,l),
(410,420,l),
(463,489,l),
(369,549,l),
(483,608,l),
(456,677,l),
(341,617,l),
(362,737,l),
(283,737,l),
(262,617,l),
(169,677,l),
(117,608,l),
(210,549,l),
(97,489,l),
(123,420,l),
(238,480,l),
(217,360,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
15 14 13 12 11 10 9 6 5 4 3 2 1 13 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 24 23 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 486;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = numbersign;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,0,l),
(264,186,l),
(466,186,l),
(393,0,l),
(494,0,l),
(566,186,l),
(726,186,l),
(743,281,l),
(603,281,l),
(664,436,l),
(819,436,l),
(835,530,l),
(701,530,l),
(773,715,l),
(673,715,l),
(600,530,l),
(399,530,l),
(470,715,l),
(370,715,l),
(298,530,l),
(129,530,l),
(113,436,l),
(261,436,l),
(201,281,l),
(38,281,l),
(21,186,l),
(164,186,l),
(91,0,l)
);
},
{
closed = 1;
nodes = (
(362,436,l),
(564,436,l),
(503,281,l),
(301,281,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
7 5 2 3 14 8 2 2 1 3 2 104 16 15 9 3 1 12 10 2 0 11 1 0 103 6 1 4 4 33 77 13 1 11 11 34 11 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 3 4 133 7 5 2 3 14 8 2 2 1 3 2 104 16 15 9 3 1 12 10 2 0 11 1 0 103 13 1 11 11 34 11 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
28 28 28 31 28 31 30 29 27 26 25 24 23 22 21 20 19 18 17 17 17 17 17 17 17 17 16 17 8 31
CALL[ ]	/* CallFunction */";
};
width = 827;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(180,0,l),
(257,197,l),
(471,197,l),
(394,0,l),
(474,0,l),
(551,197,l),
(713,197,l),
(727,272,l),
(580,272,l),
(644,435,l),
(799,435,l),
(811,509,l),
(673,509,l),
(750,706,l),
(670,706,l),
(593,509,l),
(379,509,l),
(455,706,l),
(376,706,l),
(299,509,l),
(133,509,l),
(120,435,l),
(270,435,l),
(206,272,l),
(49,272,l),
(36,197,l),
(177,197,l),
(100,0,l)
);
},
{
closed = 1;
nodes = (
(350,435,l),
(564,435,l),
(500,272,l),
(286,272,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
16 15 9 3 1 12 10 2 0 11 1 0 103 6 1 4 4 33 77 14 8 2 2 2 3 95 7 5 2 3 3 36 77 13 1 11 11 34 11 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
7 5 2 3 14 8 2 2 1 3 2 104 16 15 9 3 1 12 10 2 0 11 1 0 103 6 1 4 4 33 77 13 1 11 11 34 11 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
28 28 28 31 28 31 30 29 27 26 25 24 23 22 21 20 19 18 17 17 17 17 17 17 17 17 16 17 8 31
CALL[ ]	/* CallFunction */";
};
width = 814;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(195,0,l),
(266,182,l),
(464,182,l),
(393,0,l),
(500,0,l),
(571,182,l),
(730,182,l),
(748,284,l),
(611,284,l),
(670,436,l),
(826,436,l),
(843,537,l),
(710,537,l),
(780,717,l),
(673,717,l),
(602,537,l),
(405,537,l),
(475,717,l),
(368,717,l),
(298,537,l),
(128,537,l),
(111,436,l),
(258,436,l),
(199,284,l),
(34,284,l),
(16,182,l),
(159,182,l),
(88,0,l)
);
},
{
closed = 1;
nodes = (
(365,436,l),
(563,436,l),
(503,284,l),
(306,284,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
7 5 2 3 14 8 2 2 1 3 2 104 16 15 9 3 1 12 10 2 0 11 1 0 103 6 1 4 4 33 77 13 1 11 11 34 11 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 3 4 133 7 5 2 3 14 8 2 2 1 3 2 104 16 15 9 3 1 12 10 2 0 11 1 0 103 13 1 11 11 34 11 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
28 28 28 31 28 31 30 29 27 26 25 24 23 22 21 20 19 18 17 17 17 17 17 17 17 17 16 17 8 31
CALL[ ]	/* CallFunction */";
};
width = 831;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(202,0,l),
(271,175,l),
(461,175,l),
(392,0,l),
(513,0,l),
(581,175,l),
(739,175,l),
(759,290,l),
(626,290,l),
(683,436,l),
(839,436,l),
(859,551,l),
(728,551,l),
(795,723,l),
(675,723,l),
(607,551,l),
(418,551,l),
(485,723,l),
(364,723,l),
(297,551,l),
(125,551,l),
(106,436,l),
(252,436,l),
(195,290,l),
(26,290,l),
(6,175,l),
(150,175,l),
(82,0,l)
);
},
{
closed = 1;
nodes = (
(373,436,l),
(563,436,l),
(505,290,l),
(316,290,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
7 5 2 3 14 8 2 2 1 3 2 104 16 15 9 3 1 12 10 2 0 11 1 0 103 6 1 4 4 33 77 13 1 11 11 34 11 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 3 4 133 7 5 2 3 14 8 2 2 1 3 2 104 16 15 9 3 1 12 10 2 0 11 1 0 103 13 1 11 11 34 11 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
28 28 28 31 28 31 30 29 27 26 25 24 23 22 21 20 19 18 17 17 17 17 17 17 17 17 16 17 8 31
CALL[ ]	/* CallFunction */";
};
width = 840;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = slash;
kernLeft = slash;
kernRight = slash;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,-103,l),
(467,771,l),
(363,771,l),
(-41,-103,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 396;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(50,-95,l),
(453,764,l),
(370,764,l),
(-32,-95,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 391;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(66,-106,l),
(472,773,l),
(361,773,l),
(-44,-106,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 398;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(74,-111,l),
(481,777,l),
(356,777,l),
(-50,-111,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 401;
}
);
note = slash;
unicode = 47;
},
{
glyphname = backslash;
kernLeft = backslash;
kernRight = backslash;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(313,-103,l),
(217,771,l),
(113,771,l),
(210,-103,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 396;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(301,-95,l),
(202,764,l),
(119,764,l),
(219,-95,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 391;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(316,-106,l),
(221,773,l),
(111,773,l),
(206,-106,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 398;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(324,-111,l),
(231,777,l),
(107,777,l),
(200,-111,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 401;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = periodcentered.loclCAT;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(118,270,o),
(158,311,o),
(158,340,qs),
(158,370,o),
(118,410,o),
(88,410,qs),
(58,410,o),
(18,370,o),
(18,340,qs),
(18,311,o),
(58,270,o),
(88,270,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 143;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(106,285,o),
(138,318,o),
(138,342,qs),
(138,367,o),
(106,399,o),
(81,399,qs),
(56,399,o),
(23,367,o),
(23,342,qs),
(23,318,o),
(56,285,o),
(81,285,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 127;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(121,265,o),
(165,308,o),
(165,339,qs),
(165,371,o),
(122,414,o),
(90,414,qs),
(59,414,o),
(16,371,o),
(16,339,qs),
(16,308,o),
(59,265,o),
(90,265,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 148;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(130,255,o),
(178,304,o),
(178,338,qs),
(178,373,o),
(130,421,o),
(95,421,qs),
(60,421,o),
(12,373,o),
(12,338,qs),
(12,303,o),
(60,255,o),
(95,255,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 158;
}
);
note = periodcentered.loclCAT;
},
{
glyphname = periodcentered.loclCAT.case;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-104,280,o),
(-63,321,o),
(-63,350,qs),
(-63,380,o),
(-104,420,o),
(-133,420,qs),
(-163,420,o),
(-203,380,o),
(-203,350,qs),
(-203,321,o),
(-163,280,o),
(-133,280,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(-109,293,o),
(-76,326,o),
(-76,350,qs),
(-76,375,o),
(-109,407,o),
(-133,407,qs),
(-158,407,o),
(-191,375,o),
(-191,350,qs),
(-191,326,o),
(-158,293,o),
(-133,293,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(-102,276,o),
(-59,319,o),
(-59,350,qs),
(-59,381,o),
(-102,424,o),
(-133,424,qs),
(-165,424,o),
(-208,381,o),
(-208,350,qs),
(-208,319,o),
(-164,276,o),
(-133,276,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(-99,267,o),
(-50,316,o),
(-50,350,qs),
(-50,385,o),
(-99,433,o),
(-133,433,qs),
(-168,433,o),
(-216,385,o),
(-216,350,qs),
(-216,315,o),
(-168,267,o),
(-133,267,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = periodcentered.loclCAT.case;
},
{
glyphname = florin;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-115,-210,ls),
(-38,-210,o),
(58,-140,o),
(81,-61,qs),
(229,463,l),
(340,463,l),
(364,551,l),
(253,551,l),
(265,592,ls),
(278,640,o),
(338,681,o),
(393,681,q),
(417,770,l),
(311,770,o),
(187,685,o),
(159,592,qs),
(147,551,l),
(79,551,l),
(55,463,l),
(123,463,l),
(-26,-61,ls),
(-36,-94,o),
(-66,-121,o),
(-93,-121,qs),
(-116,-121,l),
(-141,-210,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 4 2 3 4 105 5 1 2 6 1 1 0 2 1 103 0 0 0 7 97 0 7 7 38 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 4 2 3 4 105 5 1 2 6 1 1 0 2 1 103 0 0 7 7 0 89 0 0 0 7 97 0 7 0 7 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
35 17 19 17 19 17 19 32 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 324;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(-102,-191,ls),
(-32,-191,o),
(53,-126,o),
(74,-54,qs),
(224,478,l),
(345,478,l),
(364,548,l),
(243,548,l),
(257,596,ls),
(271,649,o),
(338,695,o),
(398,695,q),
(417,766,l),
(318,766,o),
(199,684,o),
(173,596,qs),
(159,548,l),
(86,548,l),
(67,478,l),
(140,478,l),
(-11,-54,ls),
(-22,-92,o),
(-56,-121,o),
(-86,-121,qs),
(-108,-121,l),
(-128,-191,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 3 0 4 2 3 4 105 5 1 2 6 1 1 0 2 1 103 0 0 7 7 0 89 0 0 0 7 97 0 7 0 7 81 35 17 19 17 19 17 19 32 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 333;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(-119,-216,ls),
(-40,-216,o),
(60,-145,o),
(83,-63,qs),
(230,457,l),
(338,457,l),
(363,551,l),
(256,551,l),
(267,591,ls),
(280,636,o),
(339,676,o),
(391,676,q),
(417,771,l),
(309,771,o),
(182,684,o),
(154,591,qs),
(143,551,l),
(77,551,l),
(50,457,l),
(117,457,l),
(-31,-63,ls),
(-40,-95,o),
(-70,-121,o),
(-95,-121,qs),
(-119,-121,l),
(-146,-216,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 3 0 4 2 3 4 105 5 1 2 6 1 1 0 2 1 103 0 0 0 7 97 0 7 7 38 7 78 35 17 19 17 19 17 19 32 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 320;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(-128,-229,ls),
(-45,-229,o),
(63,-154,o),
(88,-68,qs),
(233,447,l),
(334,447,l),
(363,553,l),
(263,553,l),
(272,588,ls),
(284,630,o),
(339,666,o),
(388,666,q),
(417,774,l),
(305,774,o),
(173,685,o),
(144,588,qs),
(135,553,l),
(72,553,l),
(42,447,l),
(105,447,l),
(-41,-68,ls),
(-49,-97,o),
(-76,-121,o),
(-100,-121,qs),
(-125,-121,l),
(-155,-229,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 3 0 4 2 3 4 105 5 1 2 6 1 1 0 2 1 103 0 0 0 7 97 0 7 7 38 7 78 35 17 19 17 19 17 19 32 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 314;
}
);
note = florin;
unicode = 402;
},
{
glyphname = Euro;
kernRight = Cacute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(503,-12,o),
(680,105,o),
(720,211,q),
(602,211,l),
(577,150,o),
(473,83,o),
(398,83,qs),
(320,83,o),
(224,164,o),
(213,238,q),
(441,238,l),
(453,307,l),
(211,307,l),
(214,352,o),
(224,390,q),
(468,390,l),
(480,459,l),
(251,459,l),
(288,532,o),
(414,617,o),
(491,617,qs),
(567,617,o),
(647,547,o),
(649,484,q),
(768,484,l),
(766,592,o),
(630,712,o),
(507,712,qs),
(422,712,o),
(351,681,qs),
(279,649,o),
(168,535,o),
(137,459,q),
(48,459,l),
(36,390,l),
(115,390,l),
(105,352,o),
(102,307,q),
(21,307,l),
(9,238,l),
(101,238,l),
(110,123,o),
(258,-12,o),
(382,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
0 5 6 3 6 5 3 128 0 12 0 11 0 12 11 128 7 1 3 8 1 2 1 3 2 103 9 1 1 10 1 0 12 1 0 103 0 6 6 4 97 0 4 4 39 77 0 11 11 13 97 14 1 13 13 40 13 78 0 0 0 43 0 42 40 39 37 35 33 32 31 30 17 18 34 18 36 17 18 17 18 15 8 31
CALL[ ]	/* CallFunction */";
};
width = 768;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(506,-12,o),
(676,100,o),
(716,203,q),
(621,203,l),
(594,136,o),
(481,62,o),
(399,62,qs),
(312,62,o),
(207,155,o),
(197,239,q),
(446,239,l),
(457,301,l),
(196,301,l),
(199,349,o),
(211,392,q),
(474,392,l),
(485,455,l),
(233,455,l),
(272,539,o),
(413,638,o),
(500,638,qs),
(582,638,o),
(670,562,o),
(672,494,q),
(767,494,l),
(764,597,o),
(631,712,o),
(512,712,qs),
(429,712,o),
(356,680,qs),
(284,648,o),
(174,532,o),
(143,455,q),
(53,455,l),
(42,392,l),
(123,392,l),
(112,346,o),
(109,301,q),
(25,301,l),
(14,239,l),
(109,239,l),
(118,123,o),
(265,-12,o),
(388,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
0 5 6 3 6 5 3 128 0 12 0 11 0 12 11 128 7 1 3 8 1 2 1 3 2 103 9 1 1 10 1 0 12 1 0 103 0 6 6 4 97 0 4 4 39 77 0 11 11 13 97 14 1 13 13 40 13 78 0 0 0 43 0 42 40 39 37 35 33 32 31 30 17 18 34 18 36 17 18 17 18 15 8 31
CALL[ ]	/* CallFunction */";
};
width = 771;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(502,-12,o),
(681,106,o),
(721,213,q),
(595,213,l),
(571,154,o),
(470,89,o),
(398,89,qs),
(322,89,o),
(229,167,o),
(218,238,q),
(439,238,l),
(451,309,l),
(215,309,l),
(218,344,o),
(228,389,q),
(466,389,l),
(478,460,l),
(256,460,l),
(292,529,o),
(414,610,o),
(488,610,qs),
(562,610,o),
(640,542,o),
(641,481,q),
(768,481,l),
(766,591,o),
(629,712,o),
(505,712,qs),
(420,712,o),
(349,681,qs),
(277,649,o),
(166,536,o),
(135,460,q),
(46,460,l),
(34,389,l),
(112,389,l),
(102,353,o),
(99,309,q),
(19,309,l),
(7,238,l),
(98,238,l),
(107,124,o),
(256,-12,o),
(380,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
0 5 6 3 6 5 3 128 0 12 0 11 0 12 11 128 7 1 3 8 1 2 1 3 2 103 9 1 1 10 1 0 12 1 0 103 0 6 6 4 97 0 4 4 39 77 0 11 11 13 97 14 1 13 13 40 13 78 0 0 0 43 0 42 40 39 37 35 33 32 31 30 17 18 34 18 36 17 18 17 18 15 8 31
CALL[ ]	/* CallFunction */";
};
width = 766;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(500,-12,o),
(684,109,o),
(724,218,q),
(582,218,l),
(558,162,o),
(465,103,o),
(397,103,qs),
(326,103,o),
(239,173,o),
(228,237,q),
(435,237,l),
(448,313,l),
(225,313,l),
(228,351,o),
(237,387,q),
(462,387,l),
(474,463,l),
(268,463,l),
(302,525,o),
(414,596,o),
(482,596,qs),
(551,596,o),
(625,532,o),
(626,474,q),
(769,474,l),
(768,587,o),
(627,712,o),
(501,712,qs),
(417,712,o),
(346,681,qs),
(274,650,o),
(163,538,o),
(131,463,q),
(42,463,l),
(30,387,l),
(106,387,l),
(97,351,o),
(94,313,q),
(16,313,l),
(3,237,l),
(93,237,l),
(102,123,o),
(251,-12,o),
(376,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
0 5 6 3 6 5 3 128 0 12 0 11 0 12 11 128 7 1 3 8 1 2 1 3 2 103 9 1 1 10 1 0 12 1 0 103 0 6 6 4 97 0 4 4 39 77 0 11 11 13 97 14 1 13 13 40 13 78 0 0 0 43 0 42 40 39 37 35 33 32 31 30 17 18 34 18 36 17 18 17 18 15 8 31
CALL[ ]	/* CallFunction */";
};
width = 764;
}
);
note = Euro;
unicode = 8364;
},
{
glyphname = cent;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (313,0);
},
{
name = top;
pos = (435,691);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(188,-86,l),
(220,5,l),
(243,-3,o),
(276,-8,q),
(249,-86,l),
(320,-86,l),
(346,-12,l),
(461,-8,o),
(627,107,o),
(665,208,q),
(548,208,l),
(526,154,o),
(441,91,o),
(380,84,q),
(552,576,l),
(593,542,o),
(596,478,q),
(712,478,l),
(711,550,o),
(647,652,o),
(588,678,q),
(628,791,l),
(557,791,l),
(524,697,l),
(497,701,o),
(465,703,q),
(496,791,l),
(425,791,l),
(392,698,l),
(293,683,o),
(139,561,o),
(53,374,o),
(53,265,qs),
(53,195,o),
(106,74,o),
(160,36,q),
(117,-86,l)
);
},
{
closed = 1;
nodes = (
(161,345,o),
(207,477,o),
(295,575,o),
(356,596,q),
(199,146,l),
(161,195,o),
(161,275,qs)
);
},
{
closed = 1;
nodes = (
(432,609,l),
(439,609,ls),
(466,609,o),
(491,604,q),
(309,85,l),
(281,89,o),
(254,101,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
15 1 8 1 46 39 21 3 3 8 50 38 34 32 22 5 5 4 3 76 0 4 3 5 3 4 5 128 7 1 6 5 6 134 0 8 3 0 8 89 2 1 0 0 3 4 0 3 103 0 1 1 33 77 0 5 5 40 5 78 27 20 17 18 22 20 18 17 24 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 714;
},
{
anchors = (
{
name = bottom;
pos = (312,0);
},
{
name = top;
pos = (434,691);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(186,-86,l),
(219,7,l),
(246,-3,o),
(278,-8,q),
(251,-86,l),
(322,-86,l),
(348,-12,l),
(460,-8,o),
(620,102,o),
(657,200,q),
(563,200,l),
(539,140,o),
(444,69,o),
(374,62,q),
(562,598,l),
(611,561,o),
(614,487,q),
(708,487,l),
(706,555,o),
(646,652,o),
(590,677,q),
(630,791,l),
(559,791,l),
(526,697,l),
(496,703,o),
(463,703,q),
(494,791,l),
(423,791,l),
(390,698,l),
(293,682,o),
(141,559,o),
(57,373,o),
(57,264,qs),
(57,196,o),
(107,76,o),
(159,38,q),
(115,-86,l)
);
},
{
closed = 1;
nodes = (
(144,352,o),
(197,495,o),
(296,597,o),
(362,618,q),
(189,125,l),
(144,181,o),
(144,271,qs)
);
},
{
closed = 1;
nodes = (
(437,630,l),
(444,630,ls),
(476,630,o),
(500,624,q),
(304,64,l),
(270,69,o),
(245,82,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
15 12 2 8 1 46 39 21 3 3 8 50 38 34 32 22 5 5 4 3 76 0 4 3 5 3 4 5 128 7 1 6 5 6 134 2 1 0 0 3 4 0 3 103 0 8 8 1 97 0 1 1 33 77 0 5 5 40 5 78 27 20 17 18 22 20 18 17 24 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 712;
},
{
anchors = (
{
name = bottom;
pos = (313,0);
},
{
name = top;
pos = (436,691);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(189,-86,l),
(221,5,l),
(244,-3,o),
(275,-8,q),
(248,-86,l),
(319,-86,l),
(345,-12,l),
(461,-8,o),
(630,108,o),
(667,210,q),
(543,210,l),
(521,158,o),
(439,97,o),
(381,90,q),
(549,568,l),
(588,534,o),
(589,475,q),
(713,475,l),
(712,548,o),
(647,652,o),
(587,678,q),
(627,791,l),
(556,791,l),
(523,697,l),
(496,702,o),
(466,703,q),
(497,791,l),
(426,791,l),
(394,699,l),
(294,684,o),
(138,562,o),
(51,375,o),
(51,265,qs),
(51,194,o),
(104,72,o),
(160,34,q),
(118,-86,l)
);
},
{
closed = 1;
nodes = (
(167,343,o),
(211,470,o),
(296,567,o),
(355,588,q),
(202,153,l),
(167,200,o),
(167,276,qs)
);
},
{
closed = 1;
nodes = (
(431,602,l),
(437,602,ls),
(463,602,o),
(488,597,q),
(310,91,l),
(279,96,o),
(257,107,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
15 12 2 8 1 46 39 21 3 3 8 50 38 34 32 22 5 5 4 3 76 0 4 3 5 3 4 5 128 7 1 6 5 6 134 0 8 3 0 8 89 2 1 0 0 3 4 0 3 103 0 1 1 33 77 0 5 5 40 5 78 27 20 17 18 22 20 18 17 24 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 714;
},
{
anchors = (
{
name = bottom;
pos = (314,0);
},
{
name = top;
pos = (436,691);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(190,-86,l),
(222,4,l),
(246,-5,o),
(274,-8,q),
(247,-86,l),
(318,-86,l),
(344,-12,l),
(462,-8,o),
(635,111,o),
(672,215,q),
(532,215,l),
(490,119,o),
(385,104,q),
(542,552,l),
(574,521,o),
(576,468,q),
(716,468,l),
(715,545,o),
(649,653,o),
(587,679,q),
(626,791,l),
(555,791,l),
(522,697,l),
(497,701,o),
(467,703,q),
(498,791,l),
(427,791,l),
(395,699,l),
(294,685,o),
(136,563,o),
(48,375,o),
(48,265,qs),
(48,194,o),
(104,70,o),
(161,33,q),
(119,-86,l)
);
},
{
closed = 1;
nodes = (
(179,339,o),
(218,459,o),
(295,553,o),
(351,574,q),
(208,168,l),
(179,212,o),
(179,279,qs)
);
},
{
closed = 1;
nodes = (
(427,588,l),
(433,588,ls),
(457,588,o),
(482,583,q),
(314,105,l),
(288,108,o),
(263,121,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
15 1 8 1 45 38 21 3 3 8 49 37 33 31 22 5 5 4 3 76 0 4 3 5 3 4 5 128 7 1 6 5 6 134 0 8 3 0 8 89 2 1 0 0 3 4 0 3 103 0 1 1 33 77 0 5 5 40 5 78 27 20 17 18 21 20 18 17 24 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 715;
}
);
note = cent;
unicode = 162;
},
{
glyphname = currency;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,149,l),
(191,120,o),
(245,120,qs),
(304,120,o),
(353,147,q),
(402,87,l),
(454,132,l),
(408,189,l),
(463,247,o),
(463,327,qs),
(463,370,o),
(443,405,q),
(514,465,l),
(476,510,l),
(402,447,l),
(363,474,o),
(308,474,qs),
(250,474,o),
(200,450,q),
(150,510,l),
(98,465,l),
(144,409,l),
(90,353,o),
(90,272,qs),
(90,228,o),
(110,193,q),
(39,132,l),
(75,87,l)
);
},
{
closed = 1;
nodes = (
(226,194,o),
(184,236,o),
(184,274,qs),
(184,329,o),
(247,402,o),
(294,402,qs),
(325,402,o),
(369,359,o),
(369,321,qs),
(369,268,o),
(305,194,o),
(258,194,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
15 14 12 8 6 5 6 2 0 26 22 20 19 1 5 1 3 2 76 13 7 2 0 74 27 21 2 1 73
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
4 1 3 0 1 3 1 101 0 2 2 0 97 0 0 0 36 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 2 3 0 2 105 4 1 3 1 1 3 89 4 1 3 3 1 97 0 1 3 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
28 28 28 39 28 38 39 44 41 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 534;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(148,154,l),
(189,121,o),
(244,121,qs),
(303,121,o),
(354,151,q),
(402,92,l),
(446,130,l),
(399,188,l),
(425,216,o),
(453,287,o),
(453,327,qs),
(453,370,o),
(433,405,q),
(506,466,l),
(474,504,l),
(401,441,l),
(361,473,o),
(306,473,qs),
(246,473,o),
(197,445,q),
(148,504,l),
(104,466,l),
(151,410,l),
(97,353,o),
(97,272,qs),
(97,229,o),
(117,192,q),
(44,130,l),
(75,92,l)
);
},
{
closed = 1;
nodes = (
(221,186,o),
(177,232,o),
(177,273,qs),
(177,332,o),
(245,409,o),
(294,409,qs),
(327,409,o),
(373,363,o),
(373,321,qs),
(373,265,o),
(305,186,o),
(255,186,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
14 12 8 6 5 5 2 0 20 15 1 3 3 2 27 23 21 3 1 3 3 76 13 7 2 0 74 28 22 2 1 73
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
4 1 3 0 1 3 1 101 0 2 2 0 97 0 0 0 36 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 2 3 0 2 105 4 1 3 1 1 3 89 4 1 3 3 1 97 0 1 3 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
29 29 29 40 29 39 39 45 41 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 532;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(149,147,l),
(188,120,o),
(245,120,qs),
(303,120,o),
(353,145,q),
(401,85,l),
(457,133,l),
(411,189,l),
(466,247,o),
(466,327,qs),
(466,370,o),
(446,405,q),
(516,465,l),
(477,512,l),
(402,448,l),
(362,474,o),
(308,474,qs),
(248,474,o),
(201,451,q),
(151,512,l),
(95,465,l),
(142,409,l),
(88,353,o),
(88,271,qs),
(88,227,o),
(107,193,q),
(37,133,l),
(75,85,l)
);
},
{
closed = 1;
nodes = (
(227,196,o),
(186,237,o),
(186,274,qs),
(186,328,o),
(248,399,o),
(294,399,qs),
(325,399,o),
(367,358,o),
(367,320,qs),
(367,267,o),
(304,196,o),
(258,196,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
15 14 12 8 6 5 6 2 0 26 22 20 19 1 5 1 3 2 76 13 7 2 0 74 27 21 2 1 73
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
4 1 3 0 1 3 1 101 0 2 2 0 97 0 0 0 36 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 2 3 0 2 105 4 1 3 1 1 3 89 4 1 3 3 1 97 0 1 3 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
28 28 28 39 28 38 39 44 41 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 534;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(149,144,l),
(189,119,o),
(245,119,qs),
(301,119,o),
(352,142,q),
(401,81,l),
(462,134,l),
(417,189,l),
(472,246,o),
(472,327,qs),
(472,370,o),
(452,405,q),
(521,464,l),
(478,516,l),
(403,452,l),
(362,475,o),
(309,475,qs),
(253,475,o),
(203,454,q),
(152,516,l),
(91,464,l),
(137,408,l),
(83,352,o),
(83,271,qs),
(83,227,o),
(102,193,q),
(33,134,l),
(75,81,l)
);
},
{
closed = 1;
nodes = (
(229,201,o),
(190,239,o),
(190,274,qs),
(190,326,o),
(250,394,o),
(294,394,qs),
(323,394,o),
(364,355,o),
(364,320,qs),
(364,269,o),
(304,201,o),
(260,201,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
15 14 12 8 6 5 6 2 0 26 22 20 19 1 5 1 3 2 76 13 7 2 0 74 27 21 2 1 73
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
4 1 3 0 1 3 1 101 0 2 2 0 97 0 0 0 36 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 2 3 0 2 105 4 1 3 1 1 3 89 4 1 3 3 1 97 0 1 3 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
28 28 28 39 28 38 39 44 41 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 535;
}
);
note = currency;
unicode = 164;
},
{
glyphname = dollar;
kernLeft = S;
kernRight = S;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,-87,l),
(264,-87,l),
(277,-12,l),
(348,-10,o),
(466,44,o),
(536,146,o),
(536,215,qs),
(536,279,o),
(455,367,o),
(385,393,qs),
(351,405,l),
(388,618,l),
(422,608,o),
(457,562,o),
(457,532,qs),
(457,520,o),
(456,514,q),
(568,514,l),
(571,531,o),
(571,545,qs),
(571,612,o),
(481,700,o),
(404,710,q),
(419,792,l),
(352,792,l),
(338,711,l),
(273,707,o),
(168,653,o),
(107,558,o),
(107,495,qs),
(107,440,o),
(174,357,o),
(240,333,qs),
(249,329,o),
(269,323,q),
(227,84,l),
(189,95,o),
(146,150,o),
(146,187,qs),
(146,203,o),
(148,211,q),
(36,211,l),
(32,194,o),
(32,171,qs),
(32,99,o),
(129,4,o),
(211,-8,q)
);
},
{
closed = 1;
nodes = (
(332,300,l),
(375,282,o),
(421,237,o),
(421,202,qs),
(421,149,o),
(354,82,o),
(293,78,q)
);
},
{
closed = 1;
nodes = (
(288,429,l),
(255,444,o),
(220,484,o),
(220,513,qs),
(220,554,o),
(275,614,o),
(321,621,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
23 1 1 2 60 34 2 3 1 59 52 35 11 4 0 3 10 1 6 0 46 1 4 6 5 76 0 2 1 2 133 0 3 1 0 1 3 0 128 0 0 6 1 0 6 126 0 5 4 5 134 0 1 1 39 77 7 1 6 6 4 98 0 4 4 40 4 78 47 47 47 53 47 53 17 29 22 17 30 20 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 588;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(199,-87,l),
(268,-87,l),
(281,-12,l),
(350,-10,o),
(464,43,o),
(532,143,o),
(532,211,qs),
(532,329,o),
(387,384,qs),
(353,396,l),
(395,636,l),
(435,625,o),
(477,572,o),
(477,537,qs),
(477,524,o),
(476,518,q),
(563,518,l),
(566,535,o),
(566,549,qs),
(566,612,o),
(480,699,o),
(408,709,q),
(423,791,l),
(354,791,l),
(340,711,l),
(277,707,o),
(176,655,o),
(118,563,o),
(118,502,qs),
(118,448,o),
(184,366,o),
(249,342,qs),
(273,333,l),
(226,65,l),
(180,77,o),
(128,140,o),
(128,183,qs),
(128,197,o),
(131,210,q),
(43,210,l),
(39,193,o),
(39,170,qs),
(39,99,o),
(132,5,o),
(213,-8,q)
);
},
{
closed = 1;
nodes = (
(338,311,l),
(389,291,o),
(442,242,o),
(442,201,qs),
(442,139,o),
(364,63,o),
(293,59,q)
);
},
{
closed = 1;
nodes = (
(288,420,l),
(248,437,o),
(207,481,o),
(207,515,qs),
(207,564,o),
(272,631,o),
(327,639,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
58 33 2 3 1 57 50 34 11 4 0 3 10 1 6 0 44 1 4 6 4 76 22 1 1 1 75 0 2 1 2 133 0 3 1 0 1 3 0 128 0 0 6 1 0 6 126 0 5 4 5 134 0 1 1 39 77 7 1 6 6 4 98 0 4 4 40 4 78 45 45 45 51 45 51 17 28 22 17 29 20 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 591;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(196,-87,l),
(263,-87,l),
(276,-12,l),
(347,-10,o),
(466,44,o),
(537,146,o),
(537,216,qs),
(537,281,o),
(455,369,o),
(384,395,q),
(378,398,o),
(350,407,q),
(386,611,l),
(417,602,o),
(450,558,o),
(450,530,qs),
(450,519,o),
(449,513,q),
(570,513,l),
(572,535,o),
(572,544,qs),
(572,612,o),
(481,700,o),
(403,710,q),
(418,792,l),
(351,792,l),
(337,711,l),
(271,706,o),
(165,652,o),
(103,556,o),
(103,493,qs),
(103,437,o),
(171,353,o),
(237,329,qs),
(267,319,l),
(227,90,l),
(192,101,o),
(151,153,o),
(151,188,qs),
(151,195,o),
(153,211,q),
(33,211,l),
(30,192,o),
(30,171,qs),
(30,98,o),
(127,4,o),
(210,-9,q)
);
},
{
closed = 1;
nodes = (
(330,296,l),
(371,278,o),
(414,235,o),
(414,202,qs),
(414,151,o),
(350,88,o),
(292,84,q)
);
},
{
closed = 1;
nodes = (
(287,432,l),
(256,447,o),
(224,484,o),
(224,512,qs),
(224,551,o),
(276,607,o),
(319,614,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
60 33 22 3 2 1 59 52 34 11 4 0 2 10 1 5 0 46 1 3 5 4 76 0 1 2 1 133 0 2 0 2 133 0 0 5 0 133 0 4 3 4 134 6 1 5 5 3 97 0 3 3 40 3 78 47 47 47 53 47 53 17 30 22 31 20 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 586;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(194,-87,l),
(260,-87,l),
(273,-12,l),
(346,-9,o),
(467,45,o),
(539,148,o),
(539,219,qs),
(539,285,o),
(456,375,o),
(382,401,qs),
(348,413,l),
(381,599,l),
(408,590,o),
(437,552,o),
(437,527,qs),
(437,516,o),
(436,510,q),
(573,510,l),
(575,541,ls),
(575,612,o),
(481,701,o),
(400,710,q),
(415,792,l),
(349,792,l),
(335,711,l),
(268,706,o),
(158,650,o),
(95,552,o),
(95,488,qs),
(95,431,o),
(165,347,o),
(231,323,qs),
(253,315,o),
(264,312,q),
(227,103,l),
(197,113,o),
(163,159,o),
(163,191,qs),
(163,204,o),
(164,211,q),
(28,211,l),
(25,193,o),
(25,172,qs),
(25,98,o),
(124,3,o),
(208,-9,q)
);
},
{
closed = 1;
nodes = (
(326,288,l),
(362,272,o),
(400,232,o),
(400,202,qs),
(400,157,o),
(342,100,o),
(292,96,q)
);
},
{
closed = 1;
nodes = (
(287,438,l),
(260,452,o),
(233,486,o),
(233,511,qs),
(233,545,o),
(277,595,o),
(315,602,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
59 33 23 3 2 1 58 51 34 11 4 0 2 52 45 10 3 3 0 3 76 0 1 2 1 133 0 2 0 2 133 0 0 3 0 133 0 4 3 4 134 0 3 3 40 3 78 44 43 42 41 28 27 22 21 20 5 8 23
CALL[ ]	/* CallFunction */";
};
width = 584;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = sterling;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,0,l),
(497,0,l),
(512,86,l),
(152,86,l),
(257,174,o),
(257,286,qs),
(257,298,o),
(256,304,q),
(424,304,l),
(437,378,l),
(246,378,l),
(235,429,o),
(235,463,qs),
(235,533,o),
(314,624,o),
(384,624,qs),
(435,624,o),
(491,569,o),
(491,524,qs),
(491,509,o),
(490,502,q),
(587,502,l),
(589,526,o),
(589,536,qs),
(589,614,o),
(487,712,o),
(392,712,qs),
(326,712,o),
(209,654,o),
(137,538,o),
(137,454,qs),
(137,416,o),
(145,378,q),
(54,378,l),
(41,304,l),
(155,304,l),
(156,298,o),
(156,284,qs),
(156,218,o),
(99,112,o),
(41,60,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 3 4 1 4 3 1 128 5 1 1 6 1 0 7 1 0 103 0 4 4 2 97 0 2 2 39 77 0 7 7 8 95 0 8 8 34 8 78 17 20 17 20 36 20 37 17 35 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 595;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(41,0,l),
(490,0,l),
(502,69,l),
(137,69,l),
(245,164,o),
(245,280,qs),
(245,299,o),
(244,310,q),
(417,310,l),
(427,369,l),
(234,369,l),
(222,422,o),
(222,462,qs),
(222,541,o),
(311,642,o),
(387,642,qs),
(443,642,o),
(504,581,o),
(504,531,qs),
(504,515,o),
(503,507,q),
(580,507,l),
(582,529,o),
(582,539,qs),
(582,615,o),
(485,712,o),
(393,712,qs),
(329,712,o),
(215,656,o),
(144,541,o),
(144,456,qs),
(144,425,o),
(154,369,q),
(60,369,l),
(49,310,l),
(164,310,l),
(166,288,o),
(166,277,qs),
(166,210,o),
(108,104,o),
(50,49,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 3 4 1 4 3 1 128 5 1 1 6 1 0 7 1 0 103 0 4 4 2 97 0 2 2 39 77 0 7 7 8 95 0 8 8 34 8 78 17 20 17 20 36 20 37 17 20 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 594;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(27,0,l),
(499,0,l),
(515,91,l),
(156,91,l),
(260,177,o),
(260,287,qs),
(260,302,l),
(426,302,l),
(440,380,l),
(250,380,l),
(239,430,o),
(239,463,qs),
(239,530,o),
(315,618,o),
(382,618,qs),
(432,618,o),
(486,565,o),
(486,522,qs),
(486,507,o),
(485,500,q),
(589,500,l),
(591,524,o),
(591,534,qs),
(591,613,o),
(488,712,o),
(392,712,qs),
(324,712,o),
(207,654,o),
(134,537,o),
(134,453,qs),
(134,420,o),
(141,380,q),
(52,380,l),
(38,302,l),
(152,302,l),
(153,286,ls),
(153,221,o),
(95,114,o),
(38,63,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 4 1 4 3 114 5 1 1 6 1 0 7 1 0 103 0 4 4 2 97 0 2 2 39 77 0 7 7 8 95 0 8 8 34 8 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 4 1 4 3 1 128 5 1 1 6 1 0 7 1 0 103 0 4 4 2 97 0 2 2 39 77 0 7 7 8 95 0 8 8 34 8 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
17 19 17 20 36 20 37 17 19 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 595;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(20,0,l),
(504,0,l),
(521,102,l),
(166,102,l),
(268,182,o),
(268,291,qs),
(268,298,l),
(431,298,l),
(446,386,l),
(258,386,l),
(248,436,o),
(248,464,qs),
(248,525,o),
(317,606,o),
(380,606,qs),
(426,606,o),
(477,557,o),
(477,517,qs),
(477,503,o),
(476,496,q),
(593,496,l),
(595,522,o),
(595,532,qs),
(595,612,o),
(490,712,o),
(391,712,qs),
(322,712,o),
(202,652,o),
(129,534,o),
(129,451,qs),
(129,416,o),
(135,386,q),
(48,386,l),
(33,298,l),
(146,298,l),
(146,291,ls),
(146,227,o),
(89,120,o),
(32,70,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 4 1 4 3 114 5 1 1 6 1 0 7 1 0 103 0 4 4 2 97 0 2 2 39 77 0 7 7 8 95 0 8 8 34 8 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 4 1 4 3 1 128 5 1 1 6 1 0 7 1 0 103 0 4 4 2 97 0 2 2 39 77 0 7 7 8 95 0 8 8 34 8 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
17 19 17 20 36 20 37 17 34 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 596;
}
);
note = sterling;
unicode = 163;
},
{
glyphname = uni20A8;
kernRight = s;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (793,0);
},
{
name = top;
pos = (881,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (582,0);
ref = s;
}
);
width = 1081;
},
{
anchors = (
{
name = bottom;
pos = (792,0);
},
{
name = top;
pos = (880,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (576,0);
ref = s;
}
);
width = 1080;
},
{
anchors = (
{
name = bottom;
pos = (793,0);
},
{
name = top;
pos = (881,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (584,0);
ref = s;
}
);
width = 1081;
},
{
anchors = (
{
name = bottom;
pos = (793,0);
},
{
name = top;
pos = (881,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (588,0);
ref = s;
}
);
width = 1081;
}
);
note = uni20A8;
unicode = 8360;
},
{
glyphname = uni20BD;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(174,0,l),
(194,115,l),
(400,115,l),
(415,199,l),
(209,199,l),
(225,289,l),
(354,289,ls),
(422,289,o),
(552,338,o),
(638,443,o),
(638,522,qs),
(638,605,o),
(533,700,o),
(427,700,qs),
(192,700,l),
(134,373,l),
(45,373,l),
(31,289,l),
(119,289,l),
(103,199,l),
(15,199,l),
(0,115,l),
(88,115,l),
(68,0,l)
);
},
{
closed = 1;
nodes = (
(240,373,l),
(283,618,l),
(409,618,ls),
(528,618,o),
(528,516,qs),
(528,450,o),
(443,373,o),
(366,373,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
11 10 2 3 5 1 2 1 3 2 103 6 1 1 7 1 0 8 1 0 103 0 9 9 4 95 0 4 4 33 77 0 8 8 34 8 78 24 24 24 31 24 30 29 27 17 17 17 37 33 17 17 17 16 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 622;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(161,0,l),
(183,126,l),
(406,126,l),
(418,194,l),
(195,194,l),
(212,294,l),
(349,294,ls),
(417,294,o),
(545,343,o),
(628,447,o),
(628,524,qs),
(628,607,o),
(525,700,o),
(421,700,qs),
(201,700,l),
(141,363,l),
(54,363,l),
(43,294,l),
(129,294,l),
(111,194,l),
(25,194,l),
(13,126,l),
(99,126,l),
(77,0,l)
);
},
{
closed = 1;
nodes = (
(224,363,l),
(272,634,l),
(407,634,ls),
(541,634,o),
(541,520,qs),
(541,447,o),
(446,363,o),
(360,363,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
11 10 2 3 5 1 2 1 3 2 103 6 1 1 7 1 0 8 1 0 103 0 9 9 4 95 0 4 4 33 77 0 8 8 34 8 78 24 24 24 31 24 30 29 27 17 17 17 37 33 17 17 17 16 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 618;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(178,0,l),
(198,111,l),
(398,111,l),
(414,200,l),
(214,200,l),
(229,287,l),
(355,287,ls),
(423,287,o),
(554,336,o),
(641,442,o),
(641,521,qs),
(641,604,o),
(534,700,o),
(428,700,qs),
(189,700,l),
(132,376,l),
(42,376,l),
(27,287,l),
(116,287,l),
(100,200,l),
(12,200,l),
(-4,111,l),
(84,111,l),
(65,0,l)
);
},
{
closed = 1;
nodes = (
(245,376,l),
(286,613,l),
(409,613,ls),
(467,613,o),
(524,562,o),
(524,515,qs),
(524,452,o),
(441,376,o),
(367,376,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
11 10 2 3 5 1 2 1 3 2 103 6 1 1 7 1 0 8 1 0 103 0 9 9 4 95 0 4 4 33 77 0 8 8 34 8 78 24 24 24 32 24 31 30 28 17 17 17 37 33 17 17 17 16 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 623;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(187,0,l),
(205,104,l),
(394,104,l),
(412,203,l),
(223,203,l),
(237,283,l),
(358,283,ls),
(426,283,o),
(560,333,o),
(648,439,o),
(648,519,qs),
(648,603,o),
(539,700,o),
(432,700,qs),
(183,700,l),
(127,383,l),
(36,383,l),
(19,283,l),
(109,283,l),
(95,203,l),
(5,203,l),
(-13,104,l),
(77,104,l),
(59,0,l)
);
},
{
closed = 1;
nodes = (
(255,383,l),
(293,602,l),
(410,602,ls),
(463,602,o),
(515,555,o),
(515,512,qs),
(515,454,o),
(439,383,o),
(371,383,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
11 10 2 3 5 1 2 1 3 2 103 6 1 1 7 1 0 8 1 0 103 0 9 9 4 95 0 4 4 33 77 0 8 8 34 8 78 24 24 24 32 24 31 30 28 17 17 17 37 33 17 17 17 16 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = uni20BD;
unicode = 8381;
},
{
glyphname = uni20BF;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,0,l),
(119,-86,l),
(188,-86,l),
(203,0,l),
(263,0,l),
(248,-86,l),
(317,-86,l),
(332,1,l),
(402,7,o),
(507,67,o),
(565,162,o),
(565,221,qs),
(565,273,o),
(506,358,o),
(456,376,q),
(519,397,o),
(591,491,o),
(591,548,qs),
(591,604,o),
(522,683,o),
(455,695,q),
(471,791,l),
(402,791,l),
(386,700,l),
(326,700,l),
(342,791,l),
(273,791,l),
(257,700,l),
(147,700,l),
(23,0,l)
);
},
{
closed = 1;
nodes = (
(145,90,l),
(186,325,l),
(337,325,ls),
(397,325,o),
(458,272,o),
(458,224,qs),
(458,160,o),
(377,90,o),
(298,90,qs)
);
},
{
closed = 1;
nodes = (
(202,413,l),
(236,611,l),
(372,611,ls),
(428,611,o),
(480,564,o),
(480,524,qs),
(480,473,o),
(409,413,o),
(340,413,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
8 1 10 0 14 1 8 11 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
3 1 1 0 0 1 112 6 1 4 5 5 4 113 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
3 1 1 0 1 133 6 1 4 5 5 4 113 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 0 1 133 6 1 4 5 4 134 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
39 39 30 30 39 47 39 46 45 43 30 38 30 37 37 17 17 17 31 17 17 17 16 14 8 31
CALL[ ]	/* CallFunction */";
};
width = 614;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(133,0,l),
(118,-86,l),
(187,-86,l),
(202,0,l),
(262,0,l),
(247,-86,l),
(316,-86,l),
(331,2,l),
(436,12,o),
(556,133,o),
(556,225,qs),
(556,277,o),
(499,359,o),
(445,377,q),
(505,394,o),
(583,488,o),
(583,548,qs),
(583,604,o),
(518,683,o),
(454,695,q),
(470,791,l),
(401,791,l),
(385,700,l),
(325,700,l),
(341,791,l),
(272,791,l),
(256,700,l),
(155,700,l),
(31,0,l)
);
},
{
closed = 1;
nodes = (
(128,70,l),
(175,339,l),
(327,339,ls),
(398,339,o),
(472,279,o),
(472,223,qs),
(472,149,o),
(374,70,o),
(282,70,qs)
);
},
{
closed = 1;
nodes = (
(187,406,l),
(226,630,l),
(374,630,ls),
(438,630,o),
(495,577,o),
(495,531,qs),
(495,472,o),
(409,406,o),
(338,406,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
8 1 10 0 14 1 8 11 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
3 1 1 0 0 1 112 6 1 4 5 5 4 113 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
3 1 1 0 1 133 6 1 4 5 5 4 113 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 0 1 133 6 1 4 5 4 134 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
38 38 29 29 38 46 38 45 44 42 29 37 29 36 37 17 17 17 30 17 17 17 16 14 8 31
CALL[ ]	/* CallFunction */";
};
width = 609;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(134,0,l),
(119,-86,l),
(188,-86,l),
(203,0,l),
(263,0,l),
(248,-86,l),
(317,-86,l),
(332,1,l),
(402,6,o),
(508,65,o),
(567,161,o),
(567,220,qs),
(567,272,o),
(508,358,o),
(460,376,q),
(524,397,o),
(594,491,o),
(594,547,qs),
(594,604,o),
(523,684,o),
(455,696,q),
(471,791,l),
(402,791,l),
(386,700,l),
(326,700,l),
(342,791,l),
(273,791,l),
(257,700,l),
(144,700,l),
(20,0,l)
);
},
{
closed = 1;
nodes = (
(151,96,l),
(190,320,l),
(340,320,ls),
(396,320,o),
(453,269,o),
(453,224,qs),
(453,162,o),
(377,96,o),
(303,96,qs)
);
},
{
closed = 1;
nodes = (
(206,415,l),
(239,604,l),
(371,604,ls),
(425,604,o),
(474,559,o),
(474,521,qs),
(474,473,o),
(408,415,o),
(341,415,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
8 1 10 0 14 1 8 11 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
3 1 1 0 0 1 112 6 1 4 5 5 4 113 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
3 1 1 0 1 133 6 1 4 5 5 4 113 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 0 1 133 6 1 4 5 4 134 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
39 39 30 30 39 47 39 46 45 43 30 38 30 37 37 17 17 17 31 17 17 17 16 14 8 31
CALL[ ]	/* CallFunction */";
};
width = 615;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(135,0,l),
(120,-86,l),
(189,-86,l),
(204,0,l),
(264,0,l),
(249,-86,l),
(318,-86,l),
(333,1,l),
(403,6,o),
(512,65,o),
(573,160,o),
(573,217,qs),
(573,269,o),
(513,358,o),
(467,375,q),
(532,399,o),
(599,492,o),
(599,547,qs),
(599,604,o),
(525,684,o),
(456,696,q),
(472,791,l),
(403,791,l),
(387,700,l),
(327,700,l),
(343,791,l),
(274,791,l),
(258,700,l),
(138,700,l),
(14,0,l)
);
},
{
closed = 1;
nodes = (
(162,109,l),
(197,311,l),
(346,311,ls),
(395,311,o),
(444,264,o),
(444,225,qs),
(444,170,o),
(378,109,o),
(313,109,qs)
);
},
{
closed = 1;
nodes = (
(216,420,l),
(246,591,l),
(370,591,ls),
(418,591,o),
(464,550,o),
(464,516,qs),
(464,420,o),
(342,420,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
8 1 10 0 14 1 8 11 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
3 1 1 0 0 1 112 6 1 4 5 5 4 113 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
3 1 1 0 1 133 6 1 4 5 5 4 113 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 0 1 133 6 1 4 5 4 134 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
39 39 30 30 39 46 39 45 44 42 30 38 30 37 37 17 17 17 31 17 17 17 16 14 8 31
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = uni20BF;
unicode = 8383;
},
{
glyphname = yen;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316,0,l),
(344,159,l),
(544,159,l),
(557,233,l),
(358,233,l),
(362,258,l),
(403,316,l),
(572,316,l),
(585,391,l),
(455,391,l),
(671,700,l),
(552,700,l),
(326,356,l),
(222,700,l),
(102,700,l),
(210,391,l),
(79,391,l),
(66,316,l),
(236,316,l),
(256,258,l),
(252,233,l),
(51,233,l),
(38,159,l),
(238,159,l),
(210,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
11 1 2 3 4 1 1 2 2 76 6 1 3 7 1 2 1 3 2 104 8 1 1 9 1 0 10 1 0 103 5 1 4 4 33 77 0 10 10 34 10 78 24 23 22 21 18 17 17 18 17 17 18 17 16 11 8 31
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(297,0,l),
(327,167,l),
(527,167,l),
(538,228,l),
(338,228,l),
(345,266,l),
(381,318,l),
(554,318,l),
(564,379,l),
(424,379,l),
(649,700,l),
(554,700,l),
(316,344,l),
(204,700,l),
(109,700,l),
(221,379,l),
(80,379,l),
(70,318,l),
(243,318,l),
(261,266,l),
(254,228,l),
(54,228,l),
(43,167,l),
(243,167,l),
(213,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
11 1 2 3 4 1 1 2 2 76 6 1 3 7 1 2 1 3 2 104 8 1 1 9 1 0 10 1 0 103 5 1 4 4 33 77 0 10 10 34 10 78 24 23 22 21 18 17 17 18 17 17 18 17 16 11 8 31
CALL[ ]	/* CallFunction */";
};
width = 598;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(322,0,l),
(350,156,l),
(550,156,l),
(563,235,l),
(364,235,l),
(368,255,l),
(410,315,l),
(578,315,l),
(591,394,l),
(465,394,l),
(678,700,l),
(551,700,l),
(329,359,l),
(228,700,l),
(99,700,l),
(206,394,l),
(78,394,l),
(65,315,l),
(234,315,l),
(254,255,l),
(251,235,l),
(50,235,l),
(36,156,l),
(236,156,l),
(208,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
11 1 2 3 4 1 1 2 2 76 6 1 3 7 1 2 1 3 2 104 8 1 1 9 1 0 10 1 0 103 5 1 4 4 33 77 0 10 10 34 10 78 24 23 22 21 18 17 17 18 17 17 18 17 16 11 8 31
CALL[ ]	/* CallFunction */";
};
width = 617;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(334,0,l),
(361,150,l),
(561,150,l),
(576,238,l),
(377,238,l),
(379,249,l),
(424,313,l),
(590,313,l),
(605,402,l),
(486,402,l),
(693,700,l),
(549,700,l),
(336,367,l),
(240,700,l),
(94,700,l),
(198,402,l),
(77,402,l),
(62,314,l),
(229,314,l),
(251,249,l),
(249,238,l),
(48,238,l),
(33,150,l),
(233,150,l),
(206,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
11 1 2 3 1 76 6 1 3 7 1 2 1 3 2 104 8 1 1 9 1 0 10 1 0 103 5 1 4 4 33 77 0 10 10 34 10 78 24 23 22 21 18 17 17 18 17 17 18 17 16 11 8 31
CALL[ ]	/* CallFunction */";
};
width = 627;
}
);
note = yen;
unicode = 165;
},
{
glyphname = cent.001;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(184,-97,l),
(284,-97,l),
(300,-8,l),
(376,5,o),
(493,100,o),
(519,171,q),
(409,171,l),
(392,127,o),
(314,78,o),
(267,78,qs),
(215,78,o),
(148,150,o),
(148,211,qs),
(148,271,o),
(172,317,qs),
(196,364,o),
(278,418,o),
(326,418,qs),
(374,418,o),
(435,369,o),
(435,325,q),
(546,325,l),
(545,398,o),
(463,492,o),
(390,504,q),
(407,599,l),
(307,599,l),
(290,504,l),
(218,492,o),
(161,450,qs),
(104,407,o),
(39,277,o),
(39,200,qs),
(39,119,o),
(126,7,o),
(200,-7,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
10 1 2 0 35 1 5 3 2 76 0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 0 0 2 1 0 2 105 0 3 5 5 3 89 0 3 3 5 95 0 5 3 5 79 20 18 38 34 20 24 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 574;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(193,-101,l),
(274,-101,l),
(290,-9,l),
(367,1,o),
(483,93,o),
(508,162,q),
(422,162,l),
(404,113,o),
(316,59,o),
(263,59,qs),
(206,59,o),
(130,139,o),
(130,208,qs),
(130,274,o),
(157,326,qs),
(184,377,o),
(275,436,o),
(329,436,qs),
(383,436,o),
(452,383,o),
(452,334,q),
(538,334,l),
(537,405,o),
(454,495,o),
(381,505,q),
(398,600,l),
(316,600,l),
(300,505,l),
(228,495,o),
(169,454,qs),
(110,411,o),
(43,279,o),
(43,199,qs),
(43,116,o),
(133,4,o),
(209,-9,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
10 1 2 0 35 1 5 3 2 76 0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 0 0 2 1 0 2 105 0 3 5 5 3 89 0 3 3 5 95 0 5 3 5 79 20 18 38 34 20 24 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 569;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(181,-96,l),
(287,-96,l),
(303,-8,l),
(379,6,o),
(497,103,o),
(522,174,q),
(404,174,l),
(388,132,o),
(313,84,o),
(268,84,qs),
(218,84,o),
(154,153,o),
(154,211,qs),
(154,268,o),
(177,314,qs),
(200,359,o),
(279,411,o),
(325,411,qs),
(371,411,o),
(429,364,o),
(429,322,q),
(548,322,l),
(548,396,o),
(465,491,o),
(392,504,q),
(409,599,l),
(303,599,l),
(287,503,l),
(218,492,o),
(158,449,qs),
(101,406,o),
(37,276,o),
(37,200,qs),
(37,119,o),
(123,8,o),
(197,-6,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
10 1 2 0 35 1 5 3 2 76 0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 0 0 2 1 0 2 105 0 3 5 5 3 89 0 3 3 5 95 0 5 3 5 79 20 18 38 34 20 24 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 575;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(175,-93,l),
(293,-93,l),
(309,-7,l),
(385,8,o),
(503,108,o),
(529,180,q),
(395,180,l),
(380,141,o),
(312,97,o),
(270,97,qs),
(224,97,o),
(166,160,o),
(166,213,qs),
(166,266,o),
(187,308,qs),
(208,350,o),
(280,399,o),
(323,399,qs),
(365,399,o),
(418,355,o),
(418,316,q),
(553,316,l),
(553,391,o),
(471,489,o),
(398,503,q),
(415,598,l),
(297,598,l),
(280,502,l),
(210,489,o),
(153,446,qs),
(97,403,o),
(34,275,o),
(34,201,qs),
(34,121,o),
(118,11,o),
(191,-5,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
10 1 2 0 35 1 5 3 2 76 0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 0 0 2 1 0 2 105 0 3 5 5 3 89 0 3 3 5 95 0 5 3 5 79 20 18 38 34 20 24 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 578;
}
);
note = cent.001;
},
{
glyphname = plus;
kernLeft = plus;
kernRight = plus;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(314,63,l),
(346,246,l),
(535,246,l),
(551,335,l),
(362,335,l),
(394,517,l),
(302,517,l),
(270,335,l),
(80,335,l),
(65,246,l),
(254,246,l),
(222,63,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 5 0 5 134 3 1 1 4 1 0 5 1 0 104 0 2 2 36 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 1 2 133 0 5 0 5 134 3 1 1 0 0 1 87 3 1 1 1 0 96 4 1 0 1 0 80
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(307,72,l),
(339,255,l),
(530,255,l),
(542,326,l),
(352,326,l),
(384,508,l),
(308,508,l),
(276,326,l),
(85,326,l),
(73,255,l),
(264,255,l),
(231,72,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 5 0 5 134 3 1 1 4 1 0 5 1 0 104 0 2 2 36 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 1 2 133 0 5 0 5 134 3 1 1 0 0 1 87 3 1 1 1 0 96 4 1 0 1 0 80
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(316,59,l),
(348,242,l),
(537,242,l),
(553,337,l),
(365,337,l),
(397,520,l),
(299,520,l),
(267,337,l),
(78,337,l),
(62,242,l),
(251,242,l),
(218,59,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 5 0 5 134 3 1 1 4 1 0 5 1 0 104 0 2 2 36 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 1 2 133 0 5 0 5 134 3 1 1 0 0 1 87 3 1 1 1 0 96 4 1 0 1 0 80
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(321,53,l),
(353,236,l),
(540,236,l),
(559,343,l),
(372,343,l),
(404,526,l),
(295,526,l),
(263,343,l),
(75,343,l),
(56,236,l),
(244,236,l),
(212,53,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 1 2 133 0 5 0 5 134 3 1 1 0 0 1 87 3 1 1 1 0 96 4 1 0 1 0 80 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = plus;
unicode = 43;
},
{
glyphname = minus;
kernLeft = hyphen;
kernRight = hyphen;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(504,246,l),
(520,335,l),
(112,335,l),
(97,246,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(500,255,l),
(512,326,l),
(116,326,l),
(104,255,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(505,242,l),
(522,337,l),
(111,337,l),
(95,242,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(508,236,l),
(527,343,l),
(108,343,l),
(90,236,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = minus;
unicode = 8722;
},
{
glyphname = multiply;
kernLeft = multiply;
kernRight = multiply;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(297,228,l),
(400,102,l),
(473,164,l),
(369,289,l),
(523,421,l),
(472,484,l),
(318,352,l),
(214,478,l),
(141,416,l),
(244,291,l),
(92,160,l),
(144,98,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
11 5 1 50
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(299,241,l),
(405,112,l),
(463,160,l),
(356,289,l),
(516,426,l),
(475,476,l),
(316,339,l),
(209,468,l),
(151,420,l),
(257,291,l),
(99,156,l),
(141,106,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
11 5 1 50
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(296,224,l),
(398,99,l),
(476,165,l),
(373,289,l),
(525,419,l),
(470,486,l),
(319,356,l),
(216,481,l),
(138,415,l),
(240,290,l),
(90,161,l),
(145,95,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
11 5 1 50
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(294,215,l),
(394,92,l),
(483,167,l),
(382,289,l),
(530,415,l),
(468,491,l),
(320,364,l),
(219,487,l),
(131,412,l),
(231,290,l),
(85,164,l),
(147,89,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
11 5 1 50
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = multiply;
unicode = 215;
},
{
glyphname = divide;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(507,246,l),
(523,335,l),
(109,335,l),
(94,246,l)
);
},
{
closed = 1;
nodes = (
(312,56,o),
(352,97,o),
(352,126,qs),
(352,157,o),
(313,197,o),
(282,197,qs),
(251,197,o),
(212,157,o),
(212,126,qs),
(212,97,o),
(252,56,o),
(282,56,qs)
);
},
{
closed = 1;
nodes = (
(366,384,o),
(405,424,o),
(405,454,qs),
(405,484,o),
(366,524,o),
(336,524,qs),
(305,524,o),
(265,484,o),
(265,454,qs),
(265,424,o),
(305,384,o),
(336,384,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 0 0 1 2 0 1 103 0 2 6 1 3 2 3 101 7 1 5 5 4 97 0 4 4 42 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 7 1 5 0 4 5 105 0 0 0 1 2 0 1 103 0 2 3 3 2 89 0 2 2 3 97 6 1 3 2 3 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
16 16 4 4 16 27 16 26 22 20 4 15 4 14 37 17 16 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(501,255,l),
(513,326,l),
(115,326,l),
(103,255,l)
);
},
{
closed = 1;
nodes = (
(308,90,o),
(341,124,o),
(341,148,qs),
(341,172,o),
(309,205,o),
(284,205,qs),
(259,205,o),
(226,172,o),
(226,148,qs),
(226,124,o),
(259,90,o),
(284,90,qs)
);
},
{
closed = 1;
nodes = (
(358,377,o),
(391,410,o),
(391,434,qs),
(391,458,o),
(358,491,o),
(334,491,qs),
(309,491,o),
(276,458,o),
(276,434,qs),
(276,410,o),
(309,377,o),
(334,377,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 0 0 1 2 0 1 103 0 2 6 1 3 2 3 101 7 1 5 5 4 97 0 4 4 36 5 78 16 16 4 4 16 27 16 26 22 20 4 15 4 14 37 17 16 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(509,242,l),
(526,337,l),
(106,337,l),
(90,242,l)
);
},
{
closed = 1;
nodes = (
(313,45,o),
(355,88,o),
(355,119,qs),
(355,152,o),
(314,194,o),
(281,194,qs),
(249,194,o),
(207,151,o),
(207,119,qs),
(207,88,o),
(249,45,o),
(281,45,qs)
);
},
{
closed = 1;
nodes = (
(368,386,o),
(410,429,o),
(410,460,qs),
(410,492,o),
(368,535,o),
(336,535,qs),
(303,535,o),
(261,492,o),
(261,460,qs),
(261,429,o),
(303,386,o),
(336,386,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
0 4 7 1 5 0 4 5 105 0 0 0 1 2 0 1 103 0 2 3 3 2 89 0 2 2 3 97 6 1 3 2 3 81 16 16 4 4 16 27 16 26 22 20 4 15 4 14 37 17 16 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(513,236,l),
(532,343,l),
(102,343,l),
(84,236,l)
);
},
{
closed = 1;
nodes = (
(316,22,o),
(362,70,o),
(362,104,qs),
(362,141,o),
(317,188,o),
(280,188,qs),
(243,188,o),
(197,141,o),
(197,104,qs),
(197,70,o),
(244,22,o),
(280,22,qs)
);
},
{
closed = 1;
nodes = (
(373,391,o),
(419,439,o),
(419,473,qs),
(419,509,o),
(373,557,o),
(337,557,qs),
(300,557,o),
(254,509,o),
(254,473,qs),
(254,438,o),
(300,391,o),
(337,391,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 7 1 5 0 4 5 105 0 0 0 1 2 0 1 103 0 2 2 3 97 6 1 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 7 1 5 0 4 5 105 0 0 0 1 2 0 1 103 0 2 3 3 2 89 0 2 2 3 97 6 1 3 2 3 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
16 16 4 4 16 27 16 26 22 20 4 15 4 14 37 17 16 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = divide;
unicode = 247;
},
{
glyphname = equal;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,137,l),
(504,229,l),
(92,229,l),
(76,137,l)
);
},
{
closed = 1;
nodes = (
(525,352,l),
(541,444,l),
(130,444,l),
(114,352,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 2 0 3 0 2 3 103 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(483,151,l),
(496,223,l),
(97,223,l),
(85,151,l)
);
},
{
closed = 1;
nodes = (
(520,359,l),
(532,431,l),
(134,431,l),
(122,359,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 2 0 3 0 2 3 103 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(488,132,l),
(506,231,l),
(90,231,l),
(72,132,l)
);
},
{
closed = 1;
nodes = (
(527,350,l),
(543,448,l),
(128,448,l),
(111,350,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 2 0 3 0 2 3 103 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(491,123,l),
(511,235,l),
(86,235,l),
(66,123,l)
);
},
{
closed = 1;
nodes = (
(530,345,l),
(549,457,l),
(125,457,l),
(105,345,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 2 0 3 0 2 3 103 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = equal;
unicode = 61;
},
{
glyphname = notequal;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,71,l),
(244,137,l),
(487,137,l),
(504,229,l),
(309,229,l),
(396,352,l),
(525,352,l),
(541,444,l),
(461,444,l),
(508,511,l),
(420,511,l),
(372,444,l),
(130,444,l),
(114,352,l),
(307,352,l),
(221,229,l),
(92,229,l),
(76,137,l),
(156,137,l),
(109,71,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 3 4 112 0 9 0 0 9 113 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 18 17 17 17 17 17 17 17 17 16 10 6 31
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(200,85,l),
(247,151,l),
(483,151,l),
(496,223,l),
(298,223,l),
(394,359,l),
(520,359,l),
(532,431,l),
(445,431,l),
(492,498,l),
(417,498,l),
(369,431,l),
(134,431,l),
(122,359,l),
(318,359,l),
(222,223,l),
(97,223,l),
(85,151,l),
(172,151,l),
(125,85,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 3 4 112 0 9 0 0 9 113 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 18 17 17 17 17 17 17 17 17 16 10 6 31
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(196,66,l),
(243,132,l),
(488,132,l),
(506,231,l),
(313,231,l),
(396,350,l),
(527,350,l),
(543,448,l),
(466,448,l),
(513,515,l),
(420,515,l),
(373,448,l),
(128,448,l),
(111,350,l),
(303,350,l),
(220,231,l),
(90,231,l),
(72,132,l),
(151,132,l),
(104,66,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 3 4 112 0 9 0 0 9 113 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 18 17 17 17 17 17 17 17 17 16 10 6 31
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(194,56,l),
(241,123,l),
(491,123,l),
(511,235,l),
(320,235,l),
(397,345,l),
(530,345,l),
(549,457,l),
(476,457,l),
(523,524,l),
(422,524,l),
(375,457,l),
(125,457,l),
(105,345,l),
(296,345,l),
(219,235,l),
(86,235,l),
(66,123,l),
(140,123,l),
(93,56,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 3 4 112 0 9 0 0 9 113 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 18 17 17 17 17 17 17 17 17 16 10 6 31
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = notequal;
unicode = 8800;
},
{
glyphname = greater;
kernRight = greater;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(230,135,l),
(504,363,l),
(311,591,l),
(177,591,l),
(372,363,l),
(97,135,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(211,137,l),
(496,367,l),
(293,598,l),
(187,598,l),
(392,367,l),
(106,137,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(236,134,l),
(507,362,l),
(316,589,l),
(174,589,l),
(365,362,l),
(94,134,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(249,133,l),
(512,359,l),
(328,584,l),
(167,584,l),
(352,359,l),
(88,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = greater;
unicode = 62;
},
{
glyphname = less;
kernLeft = less;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(465,135,l),
(270,363,l),
(545,591,l),
(412,591,l),
(137,363,l),
(331,135,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(456,137,l),
(251,367,l),
(537,598,l),
(432,598,l),
(146,367,l),
(350,137,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(467,134,l),
(276,362,l),
(547,589,l),
(405,589,l),
(134,362,l),
(325,134,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(473,133,l),
(288,359,l),
(552,584,l),
(392,584,l),
(128,359,l),
(312,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = less;
unicode = 60;
},
{
glyphname = greaterequal;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(244,210,l),
(513,400,l),
(311,591,l),
(176,591,l),
(375,401,l),
(109,210,l)
);
},
{
closed = 1;
nodes = (
(446,67,l),
(461,148,l),
(99,148,l),
(85,67,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
3 1 1 0 1 76 0 0 1 0 133 0 1 2 1 133 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 18 17 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(226,213,l),
(506,405,l),
(294,598,l),
(185,598,l),
(394,406,l),
(118,213,l)
);
},
{
closed = 1;
nodes = (
(446,89,l),
(458,153,l),
(108,153,l),
(97,89,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
3 1 1 0 1 76 0 0 1 0 133 0 1 2 1 133 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 18 17 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(250,209,l),
(515,398,l),
(317,589,l),
(172,589,l),
(368,399,l),
(106,209,l)
);
},
{
closed = 1;
nodes = (
(446,59,l),
(462,146,l),
(96,146,l),
(80,59,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
3 1 1 0 1 76 0 0 1 0 133 0 1 2 1 133 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 18 17 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(262,207,l),
(519,395,l),
(328,584,l),
(166,584,l),
(355,396,l),
(100,207,l)
);
},
{
closed = 1;
nodes = (
(446,44,l),
(464,142,l),
(90,142,l),
(72,44,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
3 1 1 0 1 76 0 0 1 0 133 0 1 2 1 133 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 18 17 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = greaterequal;
unicode = 8805;
},
{
glyphname = lessequal;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(480,210,l),
(279,401,l),
(546,591,l),
(410,591,l),
(141,400,l),
(343,210,l)
);
},
{
closed = 1;
nodes = (
(453,67,l),
(468,148,l),
(106,148,l),
(92,67,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
3 1 1 0 1 76 0 0 1 0 133 0 1 2 1 133 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 18 17 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(472,213,l),
(261,405,l),
(539,598,l),
(430,598,l),
(150,405,l),
(362,213,l)
);
},
{
closed = 1;
nodes = (
(449,89,l),
(461,153,l),
(111,153,l),
(101,89,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
3 1 1 0 1 76 0 0 1 0 133 0 1 2 1 133 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 18 17 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(482,209,l),
(285,399,l),
(548,589,l),
(403,589,l),
(138,398,l),
(337,209,l)
);
},
{
closed = 1;
nodes = (
(454,59,l),
(470,146,l),
(104,146,l),
(89,59,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
3 1 1 0 1 76 0 0 1 0 133 0 1 2 1 133 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 18 17 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(487,207,l),
(297,396,l),
(553,584,l),
(390,584,l),
(132,395,l),
(324,207,l)
);
},
{
closed = 1;
nodes = (
(456,44,l),
(474,142,l),
(100,142,l),
(83,44,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
3 1 1 0 1 76 0 0 1 0 133 0 1 2 1 133 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 18 17 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = lessequal;
unicode = 8804;
},
{
glyphname = plusminus;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(327,140,l),
(351,274,l),
(547,274,l),
(563,363,l),
(367,363,l),
(391,497,l),
(299,497,l),
(275,363,l),
(79,363,l),
(63,274,l),
(259,274,l),
(235,140,l)
);
},
{
closed = 1;
nodes = (
(499,0,l),
(515,93,l),
(32,93,l),
(15,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 0 6 0 5 114 3 1 1 4 1 0 5 1 0 104 0 2 2 36 77 0 6 6 7 95 0 7 7 34 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 5 0 6 0 5 6 128 3 1 1 4 1 0 5 1 0 104 0 2 2 36 77 0 6 6 7 95 0 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
17 17 17 17 17 17 17 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(316,125,l),
(341,266,l),
(541,266,l),
(554,337,l),
(354,337,l),
(379,478,l),
(303,478,l),
(278,337,l),
(79,337,l),
(66,266,l),
(266,266,l),
(241,125,l)
);
},
{
closed = 1;
nodes = (
(494,0,l),
(507,73,l),
(33,73,l),
(19,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 0 6 0 5 114 3 1 1 4 1 0 5 1 0 104 0 2 2 36 77 0 6 6 7 95 0 7 7 34 7 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 5 0 6 0 5 6 128 3 1 1 4 1 0 5 1 0 104 0 2 2 36 77 0 6 6 7 95 0 7 7 34 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 1 2 133 0 5 0 6 0 5 6 128 3 1 1 4 1 0 5 1 0 104 0 6 6 7 95 0 7 7 34 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
17 17 17 17 17 17 17 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(331,144,l),
(354,277,l),
(549,277,l),
(566,372,l),
(371,372,l),
(395,503,l),
(297,503,l),
(273,372,l),
(79,372,l),
(62,277,l),
(257,277,l),
(233,144,l)
);
},
{
closed = 1;
nodes = (
(500,0,l),
(518,99,l),
(32,99,l),
(14,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 0 6 0 5 114 3 1 1 4 1 0 5 1 0 104 0 2 2 36 77 0 6 6 7 95 0 7 7 34 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 5 0 6 0 5 6 128 3 1 1 4 1 0 5 1 0 104 0 2 2 36 77 0 6 6 7 95 0 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
17 17 17 17 17 17 17 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(338,154,l),
(361,282,l),
(553,282,l),
(572,389,l),
(380,389,l),
(403,516,l),
(294,516,l),
(271,389,l),
(79,389,l),
(60,282,l),
(252,282,l),
(229,154,l)
);
},
{
closed = 1;
nodes = (
(503,0,l),
(523,112,l),
(31,112,l),
(11,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 0 6 0 5 114 3 1 1 4 1 0 5 1 0 104 0 2 2 36 77 0 6 6 7 95 0 7 7 34 7 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 5 0 6 0 5 6 128 3 1 1 4 1 0 5 1 0 104 0 2 2 36 77 0 6 6 7 95 0 7 7 34 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 1 2 133 0 5 0 6 0 5 6 128 3 1 1 4 1 0 5 1 0 104 0 6 6 7 95 0 7 7 34 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
17 17 17 17 17 17 17 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = plusminus;
unicode = 177;
},
{
glyphname = approxequal;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(455,317,o),
(549,398,o),
(577,478,q),
(497,478,l),
(487,447,o),
(446,412,o),
(420,412,qs),
(401,412,o),
(371,426,o),
(347,442,qs),
(324,459,o),
(283,478,o),
(257,478,qs),
(134,478,o),
(76,318,q),
(155,318,l),
(166,349,o),
(207,383,o),
(233,383,qs),
(253,383,o),
(285,368,o),
(306,352,qs),
(332,334,o),
(370,317,o),
(396,317,qs)
);
},
{
closed = 1;
nodes = (
(417,99,o),
(511,180,o),
(539,260,q),
(459,260,l),
(449,229,o),
(408,194,o),
(382,194,qs),
(363,194,o),
(333,208,o),
(309,224,qs),
(286,241,o),
(245,260,o),
(219,260,qs),
(96,260,o),
(38,100,q),
(117,100,l),
(128,131,o),
(169,165,o),
(195,165,qs),
(215,165,o),
(247,150,o),
(268,134,qs),
(294,116,o),
(332,99,o),
(358,99,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
4 1 2 0 0 1 2 0 105 0 3 12 5 2 1 8 3 1 105 0 9 6 7 9 89 10 1 8 0 6 7 8 6 105 0 9 9 7 97 13 11 2 7 9 7 81 25 25 0 0 25 49 25 48 46 45 43 41 37 35 34 33 31 29 0 24 0 23 18 36 33 18 36 14 6 27
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(447,319,o),
(531,391,o),
(555,461,q),
(492,461,l),
(482,431,o),
(439,395,o),
(413,395,qs),
(394,395,o),
(362,411,o),
(342,426,qs),
(319,443,o),
(281,461,o),
(256,461,qs),
(146,461,o),
(95,320,q),
(158,320,l),
(169,350,o),
(211,385,o),
(237,385,qs),
(257,385,o),
(287,370,o),
(308,354,qs),
(332,337,o),
(368,319,o),
(394,319,qs)
);
},
{
closed = 1;
nodes = (
(411,112,o),
(495,184,o),
(519,254,q),
(456,254,l),
(446,224,o),
(403,188,o),
(377,188,qs),
(358,188,o),
(326,204,o),
(306,219,qs),
(283,236,o),
(245,254,o),
(220,254,qs),
(110,254,o),
(59,113,q),
(122,113,l),
(133,143,o),
(175,178,o),
(201,178,qs),
(221,178,o),
(251,163,o),
(272,147,qs),
(296,130,o),
(332,112,o),
(358,112,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
4 1 2 0 0 1 2 0 105 0 3 12 5 2 1 8 3 1 105 0 9 6 7 9 89 10 1 8 0 6 7 8 6 105 0 9 9 7 97 13 11 2 7 9 7 81 25 25 0 0 25 49 25 48 46 45 43 41 37 35 34 33 31 29 0 24 0 23 18 36 33 18 36 14 6 27
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(458,316,o),
(555,399,o),
(584,484,q),
(499,484,l),
(489,453,o),
(448,418,o),
(422,418,qs),
(403,418,o),
(373,432,o),
(349,448,qs),
(325,465,o),
(284,484,o),
(257,484,qs),
(129,484,o),
(70,317,q),
(154,317,l),
(165,349,o),
(205,382,o),
(232,382,qs),
(252,382,o),
(283,367,o),
(306,351,qs),
(330,334,o),
(370,316,o),
(397,316,qs)
);
},
{
closed = 1;
nodes = (
(419,95,o),
(516,178,o),
(545,262,q),
(460,262,l),
(450,231,o),
(409,196,o),
(383,196,qs),
(364,196,o),
(334,210,o),
(310,226,qs),
(286,243,o),
(245,262,o),
(218,262,qs),
(156,262,o),
(61,180,o),
(31,96,q),
(115,96,l),
(126,127,o),
(166,161,o),
(193,161,qs),
(213,161,o),
(244,146,o),
(267,130,qs),
(291,113,o),
(331,95,o),
(358,95,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
4 1 2 0 0 1 2 0 105 0 3 12 5 2 1 8 3 1 105 0 9 6 7 9 89 10 1 8 0 6 7 8 6 105 0 9 9 7 97 13 11 2 7 9 7 81 25 25 0 0 25 50 25 49 47 46 44 42 38 36 34 33 31 29 0 24 0 23 18 36 33 18 36 14 6 27
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(463,315,o),
(567,404,o),
(598,495,q),
(502,495,l),
(492,463,o),
(453,429,o),
(426,429,qs),
(407,429,o),
(378,443,o),
(352,459,qs),
(325,477,o),
(284,495,o),
(257,495,qs),
(191,495,o),
(89,407,o),
(57,316,q),
(152,316,l),
(175,381,o),
(229,381,qs),
(249,381,o),
(280,366,o),
(304,351,qs),
(330,333,o),
(371,315,o),
(398,315,qs)
);
},
{
closed = 1;
nodes = (
(423,86,o),
(527,175,o),
(558,266,q),
(462,266,l),
(452,234,o),
(413,200,o),
(386,200,qs),
(367,200,o),
(338,214,o),
(312,230,qs),
(285,248,o),
(244,266,o),
(217,266,qs),
(151,266,o),
(49,178,o),
(17,87,q),
(112,87,l),
(135,152,o),
(189,152,qs),
(209,152,o),
(240,137,o),
(264,122,qs),
(290,104,o),
(331,86,o),
(358,86,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
4 1 2 0 0 1 2 0 105 0 3 12 5 2 1 8 3 1 105 0 9 6 7 9 89 10 1 8 0 6 7 8 6 105 0 9 9 7 97 13 11 2 7 9 7 81 25 25 0 0 25 49 25 48 46 45 43 41 37 35 33 32 31 29 0 24 0 23 18 36 34 17 36 14 6 27
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = approxequal;
unicode = 8776;
},
{
glyphname = asciitilde;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(442,239,o),
(535,319,o),
(563,400,q),
(484,400,l),
(474,369,o),
(433,334,o),
(406,334,qs),
(387,334,o),
(357,349,o),
(334,364,qs),
(309,382,o),
(270,400,o),
(243,400,qs),
(183,400,o),
(92,321,o),
(63,240,q),
(142,240,l),
(153,271,o),
(193,305,o),
(220,305,qs),
(240,305,o),
(272,290,o),
(293,274,qs),
(317,257,o),
(356,239,o),
(383,239,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 25 0 24 18 36 34 18 36 7 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 600;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(435,249,o),
(519,321,o),
(543,391,q),
(480,391,l),
(470,361,o),
(427,325,o),
(401,325,qs),
(382,325,o),
(350,341,o),
(330,356,qs),
(307,373,o),
(269,391,o),
(244,391,qs),
(134,391,o),
(83,250,q),
(146,250,l),
(157,280,o),
(199,315,o),
(225,315,qs),
(245,315,o),
(275,300,o),
(296,284,qs),
(320,267,o),
(356,249,o),
(382,249,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 24 0 23 18 36 33 18 36 7 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(444,235,o),
(541,318,o),
(570,402,q),
(485,402,l),
(475,371,o),
(434,336,o),
(408,336,qs),
(389,336,o),
(359,350,o),
(335,366,qs),
(311,383,o),
(270,402,o),
(243,402,qs),
(115,402,o),
(56,236,q),
(140,236,l),
(151,268,o),
(191,301,o),
(218,301,qs),
(238,301,o),
(269,286,o),
(292,270,qs),
(316,253,o),
(356,235,o),
(383,235,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 24 0 23 18 36 33 18 36 7 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 600;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(448,228,o),
(552,317,o),
(583,408,q),
(487,408,l),
(477,376,o),
(438,342,o),
(411,342,qs),
(392,342,o),
(363,356,o),
(337,372,qs),
(310,390,o),
(269,408,o),
(242,408,qs),
(176,408,o),
(74,320,o),
(42,229,q),
(137,229,l),
(160,294,o),
(214,294,qs),
(234,294,o),
(265,279,o),
(289,264,qs),
(315,246,o),
(356,228,o),
(383,228,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 24 0 23 18 36 34 17 36 7 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 600;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = logicalnot;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(544,212,l),
(584,435,l),
(78,435,l),
(63,352,l),
(464,352,l),
(439,212,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 0 0 2 113 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 0 2 134 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
17 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(540,223,l),
(577,432,l),
(78,432,l),
(66,365,l),
(482,365,l),
(457,223,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 0 0 2 113 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 0 2 134 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
17 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(545,208,l),
(586,435,l),
(77,435,l),
(62,347,l),
(457,347,l),
(433,208,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 0 0 2 113 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 0 2 134 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
17 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(548,201,l),
(590,437,l),
(77,437,l),
(60,338,l),
(445,338,l),
(421,201,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 0 0 2 113 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 0 2 134 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
17 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = logicalnot;
unicode = 172;
},
{
glyphname = asciicircum;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(118,174,l),
(368,573,l),
(475,174,l),
(583,174,l),
(440,700,l),
(340,700,l),
(10,174,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 22 values pushed */
4 1 1 0 1 76 0 0 1 0 133 2 1 1 1 118 18 17 16 3 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 633;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(103,178,l),
(366,597,l),
(478,178,l),
(564,178,l),
(422,700,l),
(344,700,l),
(17,178,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 22 values pushed */
4 1 1 0 1 76 0 0 1 0 133 2 1 1 1 118 18 17 16 3 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 620;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(122,173,l),
(369,565,l),
(474,173,l),
(589,173,l),
(445,700,l),
(338,700,l),
(8,173,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 22 values pushed */
4 1 1 0 1 76 0 0 1 0 133 2 1 1 1 118 18 17 16 3 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 637;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(132,170,l),
(370,549,l),
(472,170,l),
(602,170,l),
(457,700,l),
(335,700,l),
(3,170,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 22 values pushed */
4 1 1 0 1 76 0 0 1 0 133 2 1 1 1 118 18 17 16 3 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 645;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = infinity;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(223,135,o),
(315,187,o),
(349,229,q),
(380,185,o),
(451,135,o),
(505,135,qs),
(557,135,o),
(600,158,qs),
(644,182,o),
(693,262,o),
(693,312,qs),
(693,372,o),
(619,441,o),
(557,441,qs),
(503,441,o),
(410,386,o),
(376,340,q),
(346,388,o),
(275,441,o),
(220,441,qs),
(170,441,o),
(127,418,qs),
(84,394,o),
(36,314,o),
(36,264,qs),
(36,203,o),
(111,135,o),
(170,135,qs)
);
},
{
closed = 1;
nodes = (
(163,209,o),
(124,244,o),
(124,276,qs),
(124,314,o),
(176,367,o),
(213,367,qs),
(246,367,o),
(292,324,o),
(316,283,q),
(290,248,o),
(226,209,o),
(194,209,qs)
);
},
{
closed = 1;
nodes = (
(479,208,o),
(433,248,o),
(408,286,q),
(435,323,o),
(505,366,o),
(538,366,qs),
(570,366,o),
(606,330,o),
(606,298,qs),
(606,260,o),
(553,208,o),
(514,208,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
48 30 24 10 4 5 4 1 76 1 1 0 6 1 4 5 0 4 105 10 7 9 3 5 2 2 5 89 10 7 9 3 5 5 2 97 8 3 2 2 5 2 81 40 40 28 28 0 0 40 51 40 50 46 44 28 39 28 38 34 32 0 27 0 26 38 36 38 11 6 25
CALL[ ]	/* CallFunction */";
};
width = 715;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(222,141,o),
(313,196,o),
(347,239,q),
(377,193,o),
(445,141,o),
(499,141,qs),
(548,141,o),
(589,164,qs),
(630,187,o),
(678,264,o),
(678,311,qs),
(678,368,o),
(607,434,o),
(549,434,qs),
(495,434,o),
(402,376,o),
(369,330,q),
(339,380,o),
(270,434,o),
(217,434,qs),
(168,434,o),
(130,412,qs),
(90,390,o),
(43,313,o),
(43,265,qs),
(43,207,o),
(113,141,o),
(169,141,qs)
);
},
{
closed = 1;
nodes = (
(156,202,o),
(114,240,o),
(114,275,qs),
(114,315,o),
(170,374,o),
(211,374,qs),
(247,374,o),
(295,328,o),
(321,284,q),
(292,246,o),
(225,202,o),
(190,202,qs)
);
},
{
closed = 1;
nodes = (
(470,201,o),
(422,243,o),
(396,285,q),
(424,325,o),
(498,373,o),
(534,373,qs),
(569,373,o),
(607,333,o),
(607,299,qs),
(607,257,o),
(549,201,o),
(507,201,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
48 30 24 10 4 5 4 1 76 1 1 0 6 1 4 5 0 4 105 10 7 9 3 5 2 2 5 89 10 7 9 3 5 5 2 97 8 3 2 2 5 2 81 40 40 28 28 0 0 40 51 40 50 46 44 28 39 28 38 34 32 0 27 0 26 38 36 38 11 6 25
CALL[ ]	/* CallFunction */";
};
width = 707;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(223,132,o),
(315,183,o),
(350,226,q),
(381,182,o),
(452,132,o),
(507,132,qs),
(561,132,o),
(604,156,qs),
(648,180,o),
(698,261,o),
(698,312,qs),
(698,373,o),
(622,443,o),
(560,443,qs),
(505,443,o),
(411,388,o),
(378,343,q),
(348,391,o),
(277,443,o),
(221,443,qs),
(168,443,o),
(126,419,qs),
(83,395,o),
(34,315,o),
(34,264,qs),
(34,202,o),
(109,132,o),
(170,132,qs)
);
},
{
closed = 1;
nodes = (
(165,211,o),
(127,245,o),
(127,276,qs),
(127,313,o),
(177,365,o),
(213,365,qs),
(245,365,o),
(289,323,o),
(314,282,q),
(289,249,o),
(227,211,o),
(195,211,qs)
);
},
{
closed = 1;
nodes = (
(482,210,o),
(435,249,o),
(412,286,q),
(440,322,o),
(507,364,o),
(539,364,qs),
(570,364,o),
(605,329,o),
(605,298,qs),
(605,261,o),
(554,210,o),
(516,210,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
48 30 24 10 4 5 4 1 76 1 1 0 6 1 4 5 0 4 105 10 7 9 3 5 2 2 5 89 10 7 9 3 5 5 2 97 8 3 2 2 5 2 81 40 40 28 28 0 0 40 51 40 50 46 44 28 39 28 38 34 32 0 27 0 26 38 36 38 11 6 25
CALL[ ]	/* CallFunction */";
};
width = 718;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(224,128,o),
(316,177,o),
(351,219,q),
(382,177,o),
(456,128,o),
(511,128,qs),
(566,128,o),
(611,152,qs),
(656,177,o),
(708,260,o),
(708,312,qs),
(708,375,o),
(630,447,o),
(565,447,qs),
(510,447,o),
(416,394,o),
(382,350,q),
(353,395,o),
(280,447,o),
(223,447,qs),
(168,447,o),
(124,423,qs),
(79,399,o),
(29,316,o),
(29,263,qs),
(29,199,o),
(107,128,o),
(170,128,qs)
);
},
{
closed = 1;
nodes = (
(170,216,o),
(133,248,o),
(133,277,qs),
(133,312,o),
(181,360,o),
(214,360,qs),
(244,360,o),
(287,320,o),
(311,281,q),
(287,251,o),
(228,216,o),
(198,216,qs)
);
},
{
closed = 1;
nodes = (
(488,215,o),
(442,252,o),
(420,287,q),
(447,320,o),
(511,359,o),
(541,359,qs),
(571,359,o),
(604,327,o),
(604,297,qs),
(604,263,o),
(556,215,o),
(520,215,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
48 30 24 10 4 5 4 1 76 1 1 0 6 1 4 5 0 4 105 10 7 9 3 5 2 2 5 89 10 7 9 3 5 5 2 97 8 3 2 2 5 2 81 40 40 28 28 0 0 40 51 40 50 46 44 28 39 28 38 34 32 0 27 0 26 38 36 38 11 6 25
CALL[ ]	/* CallFunction */";
};
width = 723;
}
);
note = infinity;
unicode = 8734;
},
{
glyphname = integral;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-111,-210,ls),
(-38,-210,o),
(56,-140,o),
(79,-61,qs),
(317,776,ls),
(326,807,o),
(356,832,o),
(380,832,qs),
(398,832,l),
(423,922,l),
(401,922,ls),
(328,922,o),
(233,854,o),
(211,776,qs),
(-27,-61,ls),
(-37,-95,o),
(-63,-121,o),
(-88,-121,qs),
(-108,-121,l),
(-132,-210,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 1 0 2 0 1 2 105 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 37 33 37 32 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 257;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(-98,-191,ls),
(-31,-191,o),
(49,-126,o),
(70,-54,qs),
(310,782,ls),
(319,816,o),
(353,844,o),
(379,844,qs),
(397,844,l),
(417,915,l),
(394,915,ls),
(329,915,o),
(246,852,o),
(226,782,qs),
(-14,-54,ls),
(-25,-93,o),
(-53,-121,o),
(-81,-121,qs),
(-102,-121,l),
(-121,-191,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 1 0 2 0 1 2 105 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 37 33 37 32 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 258;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(-116,-216,ls),
(-39,-216,o),
(58,-145,o),
(81,-63,qs),
(319,774,ls),
(328,803,o),
(357,828,o),
(380,828,qs),
(398,828,l),
(424,924,l),
(403,924,ls),
(328,924,o),
(228,854,o),
(206,774,qs),
(-32,-63,ls),
(-41,-95,o),
(-67,-121,o),
(-91,-121,qs),
(-111,-121,l),
(-136,-216,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 1 0 2 0 1 2 105 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 37 33 37 32 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 256;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(-125,-229,ls),
(-44,-229,o),
(62,-154,o),
(87,-68,qs),
(324,770,ls),
(332,797,o),
(359,820,o),
(380,820,qs),
(398,820,l),
(428,929,l),
(407,929,ls),
(327,929,o),
(220,856,o),
(196,770,qs),
(-41,-68,ls),
(-49,-97,o),
(-74,-121,o),
(-96,-121,qs),
(-115,-121,l),
(-144,-229,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 1 0 2 0 1 2 105 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 37 33 37 32 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 255;
}
);
note = integral;
unicode = 8747;
},
{
glyphname = uni2126;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(271,0,l),
(286,86,l),
(224,108,o),
(149,226,o),
(149,306,qs),
(149,386,o),
(221,529,o),
(357,616,o),
(447,616,qs),
(504,616,o),
(598,570,o),
(653,477,o),
(653,410,qs),
(653,348,o),
(603,217,o),
(500,110,o),
(423,86,q),
(407,0,l),
(681,0,l),
(697,82,l),
(566,82,l),
(655,131,o),
(763,316,o),
(763,427,qs),
(763,502,o),
(696,632,o),
(561,712,o),
(464,712,qs),
(351,712,o),
(157,607,o),
(42,423,o),
(42,309,qs),
(42,248,o),
(94,120,o),
(144,82,q),
(11,82,l),
(-4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
34 1 0 4 1 76 0 1 0 4 0 1 4 105 2 1 0 3 3 0 87 2 1 0 0 3 95 5 1 3 0 3 79 23 40 17 22 38 16 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 779;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(281,0,l),
(293,69,l),
(221,89,o),
(133,216,o),
(133,307,qs),
(133,398,o),
(217,548,o),
(365,636,o),
(456,636,qs),
(513,636,o),
(614,589,o),
(679,489,o),
(679,412,qs),
(679,345,o),
(623,202,o),
(506,89,o),
(420,69,q),
(407,0,l),
(682,0,l),
(695,66,l),
(551,66,l),
(611,96,o),
(708,202,o),
(765,345,o),
(765,425,qs),
(765,500,o),
(699,632,o),
(565,712,o),
(469,712,qs),
(357,712,o),
(164,606,o),
(48,420,o),
(48,306,qs),
(48,244,o),
(104,105,o),
(162,66,q),
(17,66,l),
(5,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
35 1 0 4 1 76 0 1 0 4 0 1 4 105 2 1 0 3 3 0 87 2 1 0 0 3 95 5 1 3 0 3 79 23 40 17 23 38 16 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 789;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(267,0,l),
(284,91,l),
(225,114,o),
(154,229,o),
(154,306,qs),
(154,383,o),
(223,522,o),
(354,609,o),
(444,609,qs),
(532,609,o),
(644,505,o),
(644,409,qs),
(644,348,o),
(597,221,o),
(497,117,o),
(424,91,q),
(407,0,l),
(681,0,l),
(697,87,l),
(570,87,l),
(658,137,o),
(762,318,o),
(762,427,qs),
(762,502,o),
(695,632,o),
(559,712,o),
(462,712,qs),
(348,712,o),
(155,607,o),
(40,423,o),
(40,309,qs),
(40,249,o),
(90,125,o),
(137,87,q),
(9,87,l),
(-7,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
33 1 0 4 1 76 0 1 0 4 0 1 4 105 2 1 0 3 3 0 87 2 1 0 0 3 95 5 1 3 0 3 79 23 39 17 22 38 16 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 775;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(260,0,l),
(279,102,l),
(227,126,o),
(165,236,o),
(165,305,qs),
(165,376,o),
(225,509,o),
(349,595,o),
(438,595,qs),
(525,595,o),
(626,494,o),
(626,407,qs),
(626,349,o),
(583,231,o),
(494,131,o),
(426,102,q),
(407,0,l),
(680,0,l),
(698,98,l),
(580,98,l),
(665,150,o),
(760,325,o),
(760,428,qs),
(760,503,o),
(692,633,o),
(556,712,o),
(459,712,qs),
(344,712,o),
(150,608,o),
(36,425,o),
(36,311,qs),
(36,252,o),
(83,135,o),
(125,98,q),
(5,98,l),
(-13,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
33 1 0 4 1 76 0 1 0 4 0 1 4 105 2 1 0 3 3 0 87 2 1 0 0 3 95 5 1 3 0 3 79 23 39 17 22 38 16 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 768;
}
);
note = uni2126;
unicode = 8486;
},
{
glyphname = uni2206;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(628,0,l),
(643,82,l),
(470,700,l),
(382,700,l),
(-8,82,l),
(-22,0,l)
);
},
{
closed = 1;
nodes = (
(404,580,l),
(535,82,l),
(101,82,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
7 1 2 0 1 76 0 0 2 0 133 3 1 2 1 1 2 87 3 1 2 2 1 95 0 1 2 1 79 6 6 6 8 6 8 18 17 4 6 24
CALL[ ]	/* CallFunction */";
};
width = 694;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(621,0,l),
(633,65,l),
(461,700,l),
(391,700,l),
(-2,65,l),
(-14,0,l)
);
},
{
closed = 1;
nodes = (
(408,604,l),
(548,65,l),
(83,65,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
7 1 2 0 1 76 0 0 2 0 133 3 1 2 1 1 2 87 3 1 2 2 1 95 0 1 2 1 79 6 6 6 8 6 8 18 17 4 6 24
CALL[ ]	/* CallFunction */";
};
width = 695;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(630,0,l),
(646,87,l),
(472,700,l),
(379,700,l),
(-10,87,l),
(-25,0,l)
);
},
{
closed = 1;
nodes = (
(402,571,l),
(530,87,l),
(106,87,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
7 1 2 0 1 76 0 0 2 0 133 3 1 2 1 1 2 87 3 1 2 2 1 95 0 1 2 1 79 6 6 6 8 6 8 18 17 4 6 24
CALL[ ]	/* CallFunction */";
};
width = 693;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(634,0,l),
(652,98,l),
(478,700,l),
(373,700,l),
(-14,98,l),
(-31,0,l)
);
},
{
closed = 1;
nodes = (
(399,555,l),
(521,98,l),
(118,98,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
7 1 2 0 1 76 0 0 2 0 133 3 1 2 1 1 2 87 3 1 2 2 1 95 0 1 2 1 79 6 6 6 8 6 8 18 17 4 6 24
CALL[ ]	/* CallFunction */";
};
width = 692;
}
);
note = uni2206;
unicode = 8710;
},
{
glyphname = product;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,0,l),
(276,618,l),
(576,618,l),
(467,0,l),
(573,0,l),
(681,618,l),
(759,618,l),
(774,700,l),
(109,700,l),
(93,618,l),
(170,618,l),
(62,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
5 1 3 0 3 134 0 1 0 0 1 87 0 1 1 0 95 4 2 2 0 1 0 79 17 17 17 17 17 16 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 722;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(158,0,l),
(269,634,l),
(594,634,l),
(482,0,l),
(566,0,l),
(677,634,l),
(757,634,l),
(769,700,l),
(118,700,l),
(105,634,l),
(185,634,l),
(74,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
5 1 3 0 3 134 0 1 0 0 1 87 0 1 1 0 95 4 2 2 0 1 0 79 17 17 17 17 17 16 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 726;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(171,0,l),
(278,613,l),
(570,613,l),
(462,0,l),
(575,0,l),
(682,613,l),
(760,613,l),
(776,700,l),
(106,700,l),
(89,613,l),
(165,613,l),
(58,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
5 1 3 0 3 134 0 1 0 0 1 87 0 1 1 0 95 4 2 2 0 1 0 79 17 17 17 17 17 16 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 720;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(178,0,l),
(283,602,l),
(558,602,l),
(452,0,l),
(580,0,l),
(685,602,l),
(761,602,l),
(779,700,l),
(100,700,l),
(81,602,l),
(155,602,l),
(50,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
5 1 3 0 3 134 0 1 0 0 1 87 0 1 1 0 95 4 2 2 0 1 0 79 17 17 17 17 17 16 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 717;
}
);
note = product;
unicode = 8719;
},
{
glyphname = summation;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,-49,l),
(435,32,l),
(120,32,l),
(427,290,l),
(440,369,l),
(220,619,l),
(538,619,l),
(553,700,l),
(147,700,l),
(125,578,l),
(336,328,l),
(36,73,l),
(14,-49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
7 2 1 3 2 1 1 76 0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 19 17 19 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 547;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(421,-49,l),
(433,16,l),
(115,16,l),
(430,295,l),
(441,360,l),
(222,635,l),
(542,635,l),
(554,700,l),
(164,700,l),
(147,604,l),
(360,326,l),
(49,47,l),
(32,-49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
7 1 2 2 1 1 76 0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 19 17 19 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 564;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(420,-50,l),
(436,37,l),
(122,37,l),
(425,288,l),
(440,371,l),
(219,613,l),
(537,613,l),
(553,700,l),
(141,700,l),
(117,569,l),
(327,329,l),
(31,82,l),
(8,-50,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
7 2 1 3 2 1 1 76 0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 19 17 19 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 541;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(419,-50,l),
(437,48,l),
(125,48,l),
(423,284,l),
(439,377,l),
(218,602,l),
(534,602,l),
(552,700,l),
(129,700,l),
(102,552,l),
(311,330,l),
(22,99,l),
(-4,-50,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
7 2 1 3 2 1 1 76 0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 19 17 19 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = summation;
unicode = 8721;
},
{
glyphname = radical;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,-43,l),
(896,875,l),
(825,875,l),
(257,83,l),
(176,292,l),
(-1,199,l),
(22,146,l),
(96,185,l),
(185,-43,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
4 3 2 1 4 1 0 1 76 0 0 1 0 133 0 1 1 118 17 21 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 734;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(213,-44,l),
(861,865,l),
(801,865,l),
(227,59,l),
(150,258,l),
(0,179,l),
(19,135,l),
(88,171,l),
(173,-44,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
4 3 2 1 4 1 0 1 76 0 0 1 0 133 0 1 1 118 17 21 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 705;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(244,-43,l),
(908,878,l),
(833,878,l),
(266,91,l),
(184,303,l),
(-2,205,l),
(22,149,l),
(99,189,l),
(189,-43,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
4 3 2 1 4 1 0 1 76 0 0 1 0 133 0 1 1 118 17 21 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 744;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(259,-42,l),
(931,885,l),
(849,885,l),
(286,107,l),
(201,326,l),
(-3,218,l),
(24,156,l),
(104,198,l),
(197,-42,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
4 3 2 1 4 1 0 1 76 0 0 1 0 133 0 1 1 118 17 21 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 763;
}
);
note = radical;
unicode = 8730;
},
{
glyphname = uni00B5;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(85,-220,l),
(127,15,l),
(159,-12,o),
(212,-12,qs),
(268,-12,o),
(365,40,o),
(397,85,q),
(391,0,l),
(485,0,l),
(572,496,l),
(466,496,l),
(420,233,ls),
(405,160,o),
(315,78,o),
(257,78,qs),
(160,78,o),
(160,177,qs),
(160,194,o),
(165,222,qs),
(213,496,l),
(107,496,l),
(-21,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
14 1 1 0 19 1 3 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 36 77 0 1 1 3 98 4 1 3 3 34 77 0 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
2 1 0 0 36 77 0 3 3 34 77 0 1 1 4 98 0 4 4 40 77 0 5 5 38 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 35 17 19 36 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 591;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(70,-220,l),
(113,23,l),
(151,-12,o),
(216,-12,qs),
(273,-12,o),
(373,42,o),
(405,89,q),
(395,0,l),
(471,0,l),
(558,496,l),
(474,496,l),
(427,230,ls),
(410,150,o),
(312,60,o),
(248,60,qs),
(143,60,o),
(143,167,qs),
(143,187,o),
(148,215,qs),
(197,496,l),
(113,496,l),
(-14,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
14 1 1 0 19 1 3 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 36 77 0 1 1 3 98 4 1 3 3 34 77 0 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
2 1 0 0 36 77 0 3 3 34 77 0 1 1 4 98 0 4 4 40 77 0 5 5 38 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 35 17 19 36 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 584;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(90,-220,l),
(131,12,l),
(161,-12,o),
(210,-12,qs),
(266,-12,o),
(363,39,o),
(394,84,q),
(389,0,l),
(490,0,l),
(577,496,l),
(463,496,l),
(417,233,ls),
(403,163,o),
(316,84,o),
(259,84,qs),
(165,84,o),
(165,180,qs),
(165,196,o),
(170,224,qs),
(218,496,l),
(104,496,l),
(-23,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
19 1 3 1 1 76 14 1 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 36 77 0 1 1 3 98 4 1 3 3 34 77 0 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
2 1 0 0 36 77 0 3 3 34 77 0 1 1 4 98 0 4 4 40 77 0 5 5 38 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 35 17 19 36 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 593;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(100,-220,l),
(140,6,l),
(167,-12,o),
(207,-12,qs),
(263,-12,o),
(357,38,o),
(388,81,q),
(386,0,l),
(499,0,l),
(586,496,l),
(458,496,l),
(412,235,ls),
(400,170,o),
(318,96,o),
(265,96,qs),
(176,96,o),
(176,186,qs),
(176,201,o),
(181,228,qs),
(228,496,l),
(100,496,l),
(-28,-220,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
19 14 2 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 36 77 0 1 1 3 98 4 1 3 3 34 77 0 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
2 1 0 0 36 77 0 3 3 34 77 0 1 1 4 98 0 4 4 40 77 0 5 5 38 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 35 17 19 36 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 598;
}
);
note = uni00B5;
unicode = 181;
},
{
glyphname = partialdiff;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(314,-9,o),
(487,175,o),
(569,424,o),
(569,519,qs),
(569,627,o),
(471,740,o),
(378,740,qs),
(325,740,o),
(275,726,q),
(265,666,l),
(309,678,o),
(343,678,qs),
(407,678,o),
(468,601,o),
(468,522,qs),
(468,491,o),
(464,463,q),
(457,515,o),
(397,558,o),
(350,558,qs),
(256,558,o),
(104,437,o),
(17,253,o),
(17,165,qs),
(17,92,o),
(101,-9,o),
(186,-9,qs)
);
},
{
closed = 1;
nodes = (
(173,82,o),
(126,132,o),
(126,182,qs),
(126,242,o),
(181,377,o),
(280,469,o),
(341,469,qs),
(382,469,o),
(429,419,o),
(429,371,qs),
(429,312,o),
(374,175,o),
(275,82,o),
(213,82,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
16 1 0 1 9 1 5 4 2 76 0 2 0 1 0 2 1 105 0 0 0 4 5 0 4 105 7 1 5 3 3 5 89 7 1 5 5 3 97 6 1 3 5 3 81 27 27 0 0 27 40 27 39 34 32 0 26 0 25 35 38 37 8 6 25
CALL[ ]	/* CallFunction */";
};
width = 569;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(308,-10,o),
(479,178,o),
(561,431,o),
(561,524,qs),
(561,630,o),
(466,740,o),
(377,740,qs),
(331,740,o),
(280,726,q),
(271,676,l),
(321,689,o),
(353,689,qs),
(419,689,o),
(480,609,o),
(480,529,qs),
(480,492,o),
(472,444,q),
(468,505,o),
(406,557,o),
(354,557,qs),
(264,557,o),
(112,436,o),
(22,249,o),
(22,157,qs),
(22,84,o),
(104,-10,o),
(182,-10,qs)
);
},
{
closed = 1;
nodes = (
(160,62,o),
(108,117,o),
(108,172,qs),
(108,240,o),
(171,388,o),
(281,486,o),
(346,486,qs),
(392,486,o),
(443,432,o),
(443,378,qs),
(443,311,o),
(380,162,o),
(271,62,o),
(204,62,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
16 1 0 1 9 1 5 4 2 76 0 2 0 1 0 2 1 105 0 0 0 4 5 0 4 105 7 1 5 3 3 5 89 7 1 5 5 3 97 6 1 3 5 3 81 27 27 0 0 27 40 27 39 34 32 0 26 0 25 35 38 37 8 6 25
CALL[ ]	/* CallFunction */";
};
width = 567;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(316,-9,o),
(489,174,o),
(571,422,o),
(571,517,qs),
(571,625,o),
(473,740,o),
(378,740,qs),
(323,740,o),
(273,725,q),
(262,663,l),
(308,674,o),
(339,674,qs),
(403,674,o),
(464,598,o),
(464,520,qs),
(464,496,o),
(461,469,q),
(452,517,o),
(394,558,o),
(348,558,qs),
(253,558,o),
(101,437,o),
(15,254,o),
(15,167,qs),
(15,94,o),
(99,-9,o),
(187,-9,qs)
);
},
{
closed = 1;
nodes = (
(177,88,o),
(132,136,o),
(132,185,qs),
(132,242,o),
(184,373,o),
(279,463,o),
(339,463,qs),
(379,463,o),
(424,415,o),
(424,368,qs),
(424,312,o),
(371,179,o),
(276,88,o),
(216,88,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
16 1 0 1 9 1 4 0 2 76 0 2 0 1 0 2 1 105 0 0 0 4 5 0 4 105 7 1 5 3 3 5 89 7 1 5 5 3 97 6 1 3 5 3 81 27 27 0 0 27 40 27 39 34 32 0 26 0 25 35 38 37 8 6 25
CALL[ ]	/* CallFunction */";
};
width = 570;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(320,-8,o),
(494,172,o),
(576,417,o),
(576,514,qs),
(576,623,o),
(475,740,o),
(378,740,qs),
(323,740,o),
(270,725,q),
(258,656,l),
(298,666,o),
(332,666,qs),
(395,666,o),
(456,592,o),
(456,515,qs),
(456,493,o),
(455,481,q),
(435,559,o),
(345,559,qs),
(247,559,o),
(95,437,o),
(11,256,o),
(11,172,qs),
(11,99,o),
(96,-8,o),
(189,-8,qs)
);
},
{
closed = 1;
nodes = (
(186,101,o),
(144,146,o),
(144,192,qs),
(144,244,o),
(191,367,o),
(278,452,o),
(335,452,qs),
(373,452,o),
(414,407,o),
(414,363,qs),
(414,311,o),
(367,188,o),
(279,101,o),
(222,101,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
15 1 0 1 8 1 4 0 2 76 0 2 0 1 0 2 1 105 0 0 0 4 5 0 4 105 7 1 5 3 3 5 89 7 1 5 5 3 97 6 1 3 5 3 81 26 26 0 0 26 39 26 38 33 31 0 25 0 24 35 37 37 8 6 25
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = partialdiff;
unicode = 8706;
},
{
glyphname = percent;
kernLeft = percent;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(213,0,l),
(736,700,l),
(632,700,l),
(108,0,l)
);
},
{
closed = 1;
nodes = (
(281,366,o),
(326,393,qs),
(370,421,o),
(422,514,o),
(422,570,qs),
(422,635,o),
(343,712,o),
(280,712,qs),
(224,712,o),
(180,684,qs),
(135,656,o),
(83,563,o),
(83,508,qs),
(83,443,o),
(163,366,o),
(227,366,qs)
);
},
{
closed = 1;
nodes = (
(206,441,o),
(169,480,o),
(169,516,qs),
(169,566,o),
(228,637,o),
(269,637,qs),
(299,637,o),
(336,598,o),
(336,562,qs),
(336,512,o),
(277,441,o),
(236,441,qs)
);
},
{
closed = 1;
nodes = (
(626,-12,o),
(670,16,qs),
(715,44,o),
(766,137,o),
(766,193,qs),
(766,258,o),
(687,334,o),
(624,334,qs),
(568,334,o),
(524,306,qs),
(479,279,o),
(427,186,o),
(427,130,qs),
(427,65,o),
(508,-12,o),
(571,-12,qs)
);
},
{
closed = 1;
nodes = (
(551,64,o),
(514,102,o),
(514,138,qs),
(514,188,o),
(572,260,o),
(614,260,qs),
(643,260,o),
(680,221,o),
(680,184,qs),
(680,135,o),
(622,64,o),
(580,64,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 5 10 1 3 6 5 3 105 0 6 0 8 9 6 8 106 0 4 4 0 97 2 1 0 0 33 77 13 1 9 9 1 97 12 7 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
11 1 5 10 1 3 6 5 3 105 0 6 0 8 9 6 8 106 0 0 0 33 77 0 4 4 2 97 0 2 2 39 77 0 1 1 34 77 13 1 9 9 7 97 12 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
48 48 32 32 20 20 4 4 48 59 48 58 54 52 32 47 32 46 40 38 20 31 20 30 26 24 4 19 4 18 39 17 16 14 8 25
CALL[ ]	/* CallFunction */";
};
width = 814;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(179,0,l),
(708,700,l),
(625,700,l),
(95,0,l)
);
},
{
closed = 1;
nodes = (
(279,375,o),
(322,402,qs),
(365,430,o),
(415,519,o),
(415,572,qs),
(415,636,o),
(339,711,o),
(279,711,qs),
(227,711,o),
(183,684,qs),
(139,657,o),
(89,567,o),
(89,514,qs),
(89,451,o),
(165,375,o),
(226,375,qs)
);
},
{
closed = 1;
nodes = (
(201,438,o),
(159,481,o),
(159,521,qs),
(159,555,o),
(189,614,o),
(240,649,o),
(270,649,qs),
(304,649,o),
(345,607,o),
(345,566,qs),
(345,532,o),
(315,473,o),
(264,438,o),
(234,438,qs)
);
},
{
closed = 1;
nodes = (
(584,-12,o),
(627,15,qs),
(670,42,o),
(720,133,o),
(720,186,qs),
(720,250,o),
(645,324,o),
(584,324,qs),
(532,324,o),
(488,297,qs),
(444,270,o),
(394,180,o),
(394,127,qs),
(394,63,o),
(470,-12,o),
(531,-12,qs)
);
},
{
closed = 1;
nodes = (
(507,51,o),
(465,94,o),
(465,134,qs),
(465,168,o),
(495,227,o),
(546,262,o),
(576,262,qs),
(608,262,o),
(650,219,o),
(650,179,qs),
(650,145,o),
(620,86,o),
(570,51,o),
(540,51,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 5 10 1 3 6 5 3 105 0 6 0 8 9 6 8 105 0 4 4 0 97 2 1 0 0 33 77 13 1 9 9 1 97 12 7 2 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
11 1 5 10 1 3 6 5 3 105 0 6 0 8 9 6 8 105 0 4 4 0 97 2 1 0 0 33 77 0 1 1 34 77 13 1 9 9 7 97 12 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
11 1 5 10 1 3 6 5 3 105 0 6 0 8 9 6 8 105 0 0 0 33 77 0 4 4 2 97 0 2 2 39 77 0 1 1 34 77 13 1 9 9 7 97 12 1 7 7 40 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
50 50 34 34 20 20 4 4 50 63 50 62 57 55 34 49 34 48 42 40 20 33 20 32 27 25 4 19 4 18 39 17 16 14 8 25
CALL[ ]	/* CallFunction */";
};
width = 774;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(224,0,l),
(745,700,l),
(634,700,l),
(112,0,l)
);
},
{
closed = 1;
nodes = (
(283,362,o),
(327,390,qs),
(372,418,o),
(424,512,o),
(424,569,qs),
(424,634,o),
(343,712,o),
(280,712,qs),
(223,712,o),
(179,684,qs),
(133,656,o),
(81,562,o),
(81,505,qs),
(81,440,o),
(163,362,o),
(227,362,qs)
);
},
{
closed = 1;
nodes = (
(207,442,o),
(172,479,o),
(172,514,qs),
(172,563,o),
(229,633,o),
(269,633,qs),
(298,633,o),
(333,596,o),
(333,561,qs),
(333,512,o),
(276,442,o),
(236,442,qs)
);
},
{
closed = 1;
nodes = (
(640,-12,o),
(684,16,qs),
(729,45,o),
(781,138,o),
(781,195,qs),
(781,260,o),
(700,337,o),
(637,337,qs),
(580,337,o),
(536,309,qs),
(490,281,o),
(438,188,o),
(438,131,qs),
(438,66,o),
(520,-12,o),
(584,-12,qs)
);
},
{
closed = 1;
nodes = (
(565,68,o),
(530,104,o),
(530,139,qs),
(530,189,o),
(586,259,o),
(627,259,qs),
(654,259,o),
(690,221,o),
(690,186,qs),
(690,137,o),
(634,68,o),
(593,68,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 5 10 1 3 6 5 3 105 0 6 0 8 9 6 8 106 0 4 4 0 97 2 1 0 0 33 77 13 1 9 9 1 97 12 7 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
11 1 5 10 1 3 6 5 3 105 0 6 0 8 9 6 8 106 0 0 0 33 77 0 4 4 2 97 0 2 2 39 77 0 1 1 34 77 13 1 9 9 7 97 12 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
48 48 32 32 20 20 4 4 48 59 48 58 54 52 32 47 32 46 40 38 20 31 20 30 26 24 4 19 4 18 39 17 16 14 8 25
CALL[ ]	/* CallFunction */";
};
width = 827;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(246,0,l),
(764,700,l),
(639,700,l),
(121,0,l)
);
},
{
closed = 1;
nodes = (
(284,356,o),
(330,384,qs),
(376,412,o),
(428,508,o),
(428,567,qs),
(428,633,o),
(345,712,o),
(280,712,qs),
(223,712,o),
(177,684,qs),
(130,655,o),
(77,559,o),
(77,501,qs),
(77,436,o),
(161,356,o),
(227,356,qs)
);
},
{
closed = 1;
nodes = (
(210,444,o),
(178,479,o),
(178,511,qs),
(178,558,o),
(231,625,o),
(268,625,qs),
(295,625,o),
(327,590,o),
(327,558,qs),
(327,510,o),
(274,444,o),
(237,444,qs)
);
},
{
closed = 1;
nodes = (
(668,-12,o),
(713,17,qs),
(759,46,o),
(811,141,o),
(811,199,qs),
(811,265,o),
(728,343,o),
(663,343,qs),
(606,343,o),
(560,315,qs),
(513,287,o),
(460,191,o),
(460,133,qs),
(460,67,o),
(545,-12,o),
(610,-12,qs)
);
},
{
closed = 1;
nodes = (
(594,76,o),
(562,110,o),
(562,142,qs),
(562,190,o),
(614,257,o),
(652,257,qs),
(678,257,o),
(710,222,o),
(710,189,qs),
(710,143,o),
(658,76,o),
(620,76,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 5 10 1 3 6 5 3 105 0 6 0 8 9 6 8 106 0 4 4 0 97 2 1 0 0 33 77 13 1 9 9 1 97 12 7 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
11 1 5 10 1 3 6 5 3 105 0 6 0 8 9 6 8 106 0 0 0 33 77 0 4 4 2 97 0 2 2 39 77 0 1 1 34 77 13 1 9 9 7 97 12 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
48 48 32 32 20 20 4 4 48 59 48 58 54 52 32 47 32 46 40 38 20 31 20 30 26 24 4 19 4 18 39 17 16 14 8 25
CALL[ ]	/* CallFunction */";
};
width = 853;
}
);
note = percent;
unicode = 37;
},
{
glyphname = perthousand;
kernLeft = percent;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(213,0,l),
(738,700,l),
(633,700,l),
(109,0,l)
);
},
{
closed = 1;
nodes = (
(282,366,o),
(327,393,qs),
(371,421,o),
(423,514,o),
(423,570,qs),
(423,635,o),
(344,712,o),
(281,712,qs),
(225,712,o),
(181,684,qs),
(136,656,o),
(84,563,o),
(84,508,qs),
(84,444,o),
(165,366,o),
(228,366,qs)
);
},
{
closed = 1;
nodes = (
(207,441,o),
(170,480,o),
(170,516,qs),
(170,566,o),
(229,637,o),
(271,637,qs),
(301,637,o),
(337,598,o),
(337,562,qs),
(337,512,o),
(278,441,o),
(237,441,qs)
);
},
{
closed = 1;
nodes = (
(628,-12,o),
(672,16,qs),
(716,44,o),
(767,137,o),
(767,193,qs),
(767,258,o),
(688,334,o),
(625,334,qs),
(570,334,o),
(526,306,qs),
(481,279,o),
(429,186,o),
(429,130,qs),
(429,65,o),
(509,-12,o),
(572,-12,qs)
);
},
{
closed = 1;
nodes = (
(552,64,o),
(515,102,o),
(515,138,qs),
(515,188,o),
(573,260,o),
(615,260,qs),
(645,260,o),
(682,221,o),
(682,184,qs),
(682,135,o),
(624,64,o),
(582,64,qs)
);
},
{
closed = 1;
nodes = (
(997,-12,o),
(1041,16,qs),
(1086,44,o),
(1137,137,o),
(1137,193,qs),
(1137,258,o),
(1058,334,o),
(995,334,qs),
(939,334,o),
(896,306,qs),
(851,279,o),
(799,186,o),
(799,130,qs),
(799,65,o),
(879,-12,o),
(942,-12,qs)
);
},
{
closed = 1;
nodes = (
(921,64,o),
(885,102,o),
(885,138,qs),
(885,188,o),
(943,260,o),
(985,260,qs),
(1015,260,o),
(1051,221,o),
(1051,184,qs),
(1051,135,o),
(993,64,o),
(951,64,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
15 1 5 14 1 3 6 5 3 105 10 1 6 12 1 8 9 6 8 106 0 4 4 0 97 2 1 0 0 33 77 19 13 17 3 9 9 1 97 18 11 16 7 4 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
15 1 5 14 1 3 6 5 3 105 10 1 6 12 1 8 9 6 8 106 0 0 0 33 77 0 4 4 2 97 0 2 2 39 77 0 1 1 34 77 19 13 17 3 9 9 7 97 18 11 16 3 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 52 values pushed */
76 76 60 60 48 48 32 32 20 20 4 4 76 87 76 86 82 80 60 75 60 74 68 66 48 59 48 58 54 52 32 47 32 46 40 38 20 31 20 30 26 24 4 19 4 18 39 17 16 20 8 25
CALL[ ]	/* CallFunction */";
};
width = 1185;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(180,0,l),
(710,700,l),
(626,700,l),
(96,0,l)
);
},
{
closed = 1;
nodes = (
(280,375,o),
(323,402,qs),
(367,429,o),
(417,519,o),
(417,572,qs),
(417,636,o),
(341,711,o),
(280,711,qs),
(228,711,o),
(184,684,qs),
(140,657,o),
(90,567,o),
(90,514,qs),
(90,451,o),
(167,375,o),
(228,375,qs)
);
},
{
closed = 1;
nodes = (
(203,438,o),
(161,481,o),
(161,521,qs),
(161,555,o),
(191,614,o),
(242,649,o),
(272,649,qs),
(304,649,o),
(346,606,o),
(346,566,qs),
(346,532,o),
(316,473,o),
(266,438,o),
(236,438,qs)
);
},
{
closed = 1;
nodes = (
(586,-12,o),
(629,15,qs),
(672,43,o),
(722,133,o),
(722,186,qs),
(722,250,o),
(647,324,o),
(586,324,qs),
(534,324,o),
(490,297,qs),
(446,270,o),
(396,180,o),
(396,127,qs),
(396,63,o),
(472,-12,o),
(533,-12,qs)
);
},
{
closed = 1;
nodes = (
(508,51,o),
(467,93,o),
(467,134,qs),
(467,186,o),
(531,262,o),
(578,262,qs),
(610,262,o),
(652,219,o),
(652,179,qs),
(652,145,o),
(622,86,o),
(572,51,o),
(542,51,qs)
);
},
{
closed = 1;
nodes = (
(945,-12,o),
(988,15,qs),
(1031,43,o),
(1081,133,o),
(1081,186,qs),
(1081,250,o),
(1006,324,o),
(945,324,qs),
(893,324,o),
(849,297,qs),
(805,270,o),
(755,180,o),
(755,127,qs),
(755,63,o),
(831,-12,o),
(892,-12,qs)
);
},
{
closed = 1;
nodes = (
(868,51,o),
(826,94,o),
(826,134,qs),
(826,186,o),
(890,262,o),
(937,262,qs),
(969,262,o),
(1011,219,o),
(1011,179,qs),
(1011,127,o),
(947,51,o),
(900,51,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
15 1 5 14 1 3 6 5 3 105 10 1 6 12 1 8 9 6 8 105 0 4 4 0 97 2 1 0 0 33 77 19 13 17 3 9 9 1 97 18 11 16 7 4 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
15 1 5 14 1 3 6 5 3 105 10 1 6 12 1 8 9 6 8 105 0 4 4 0 97 2 1 0 0 33 77 0 1 1 34 77 19 13 17 3 9 9 7 97 18 11 16 3 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
15 1 5 14 1 3 6 5 3 105 10 1 6 12 1 8 9 6 8 105 0 0 0 33 77 0 4 4 2 97 0 2 2 39 77 0 1 1 34 77 19 13 17 3 9 9 7 97 18 11 16 3 7 7 40 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 52 values pushed */
79 79 63 63 50 50 34 34 20 20 4 4 79 90 79 89 85 83 63 78 63 77 71 69 50 62 50 61 57 55 34 49 34 48 42 40 20 33 20 32 27 25 4 19 4 18 39 17 16 20 8 25
CALL[ ]	/* CallFunction */";
};
width = 1135;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(224,0,l),
(747,700,l),
(635,700,l),
(113,0,l)
);
},
{
closed = 1;
nodes = (
(282,362,o),
(328,390,qs),
(373,418,o),
(425,512,o),
(425,569,qs),
(425,634,o),
(344,712,o),
(281,712,qs),
(224,712,o),
(180,684,qs),
(134,656,o),
(82,562,o),
(82,505,qs),
(82,440,o),
(164,362,o),
(228,362,qs)
);
},
{
closed = 1;
nodes = (
(208,442,o),
(173,479,o),
(173,514,qs),
(173,563,o),
(230,633,o),
(270,633,qs),
(299,633,o),
(334,596,o),
(334,561,qs),
(334,512,o),
(277,442,o),
(237,442,qs)
);
},
{
closed = 1;
nodes = (
(640,-12,o),
(686,16,qs),
(731,45,o),
(782,138,o),
(782,195,qs),
(782,260,o),
(701,337,o),
(638,337,qs),
(583,337,o),
(537,309,qs),
(492,281,o),
(439,188,o),
(439,131,qs),
(439,66,o),
(521,-12,o),
(584,-12,qs)
);
},
{
closed = 1;
nodes = (
(566,68,o),
(531,104,o),
(531,139,qs),
(531,189,o),
(587,259,o),
(627,259,qs),
(656,259,o),
(691,221,o),
(691,186,qs),
(691,138,o),
(635,68,o),
(595,68,qs)
);
},
{
closed = 1;
nodes = (
(1013,-12,o),
(1059,16,qs),
(1104,45,o),
(1156,138,o),
(1156,195,qs),
(1156,260,o),
(1075,337,o),
(1012,337,qs),
(955,337,o),
(911,309,qs),
(865,281,o),
(813,188,o),
(813,131,qs),
(813,66,o),
(895,-12,o),
(958,-12,qs)
);
},
{
closed = 1;
nodes = (
(939,68,o),
(905,104,o),
(905,139,qs),
(905,189,o),
(961,259,o),
(1001,259,qs),
(1030,259,o),
(1064,221,o),
(1064,186,qs),
(1064,138,o),
(1008,68,o),
(968,68,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
15 1 5 14 1 3 6 5 3 105 10 1 6 12 1 8 9 6 8 106 0 4 4 0 97 2 1 0 0 33 77 19 13 17 3 9 9 1 97 18 11 16 7 4 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
15 1 5 14 1 3 6 5 3 105 10 1 6 12 1 8 9 6 8 106 0 0 0 33 77 0 4 4 2 97 0 2 2 39 77 0 1 1 34 77 19 13 17 3 9 9 7 97 18 11 16 3 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 52 values pushed */
76 76 60 60 48 48 32 32 20 20 4 4 76 87 76 86 82 80 60 75 60 74 68 66 48 59 48 58 54 52 32 47 32 46 40 38 20 31 20 30 26 24 4 19 4 18 39 17 16 20 8 25
CALL[ ]	/* CallFunction */";
};
width = 1202;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(246,0,l),
(765,700,l),
(640,700,l),
(122,0,l)
);
},
{
closed = 1;
nodes = (
(284,356,o),
(330,384,qs),
(376,412,o),
(429,509,o),
(429,567,qs),
(429,633,o),
(345,712,o),
(281,712,qs),
(224,712,o),
(178,684,qs),
(131,655,o),
(78,559,o),
(78,501,qs),
(78,436,o),
(162,356,o),
(228,356,qs)
);
},
{
closed = 1;
nodes = (
(211,444,o),
(179,479,o),
(179,511,qs),
(179,558,o),
(232,625,o),
(269,625,qs),
(296,625,o),
(328,590,o),
(328,558,qs),
(328,510,o),
(275,444,o),
(238,444,qs)
);
},
{
closed = 1;
nodes = (
(669,-12,o),
(714,17,qs),
(760,46,o),
(812,141,o),
(812,199,qs),
(812,265,o),
(729,343,o),
(664,343,qs),
(607,343,o),
(561,315,qs),
(514,287,o),
(461,191,o),
(461,133,qs),
(461,68,o),
(546,-12,o),
(610,-12,qs)
);
},
{
closed = 1;
nodes = (
(595,76,o),
(563,110,o),
(563,142,qs),
(563,190,o),
(615,257,o),
(652,257,qs),
(679,257,o),
(711,222,o),
(711,189,qs),
(711,143,o),
(659,76,o),
(621,76,qs)
);
},
{
closed = 1;
nodes = (
(1049,-12,o),
(1094,17,qs),
(1140,46,o),
(1193,141,o),
(1193,199,qs),
(1193,264,o),
(1109,343,o),
(1045,343,qs),
(986,343,o),
(942,315,qs),
(895,287,o),
(842,191,o),
(842,133,qs),
(842,67,o),
(926,-12,o),
(991,-12,qs)
);
},
{
closed = 1;
nodes = (
(975,76,o),
(944,110,o),
(944,142,qs),
(944,190,o),
(996,257,o),
(1033,257,qs),
(1060,257,o),
(1091,222,o),
(1091,189,qs),
(1091,143,o),
(1039,76,o),
(1002,76,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
15 1 5 14 1 3 6 5 3 105 10 1 6 12 1 8 9 6 8 106 0 4 4 0 97 2 1 0 0 33 77 19 13 17 3 9 9 1 97 18 11 16 7 4 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
15 1 5 14 1 3 6 5 3 105 10 1 6 12 1 8 9 6 8 106 0 0 0 33 77 0 4 4 2 97 0 2 2 39 77 0 1 1 34 77 19 13 17 3 9 9 7 97 18 11 16 3 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 52 values pushed */
76 76 60 60 48 48 32 32 20 20 4 4 76 87 76 86 82 80 60 75 60 74 68 66 48 59 48 58 54 52 32 47 32 46 40 38 20 31 20 30 26 24 4 19 4 18 39 17 16 20 8 25
CALL[ ]	/* CallFunction */";
};
width = 1235;
}
);
note = perthousand;
unicode = 8240;
},
{
glyphname = uni2215;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,-103,l),
(467,771,l),
(363,771,l),
(-41,-103,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 396;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(50,-95,l),
(453,764,l),
(370,764,l),
(-32,-95,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 391;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(66,-106,l),
(472,773,l),
(361,773,l),
(-44,-106,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 398;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(74,-111,l),
(481,777,l),
(356,777,l),
(-50,-111,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 401;
}
);
note = uni2215;
unicode = 8725;
},
{
glyphname = plus.case;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(313,116,l),
(345,299,l),
(534,299,l),
(550,388,l),
(361,388,l),
(393,570,l),
(301,570,l),
(269,388,l),
(79,388,l),
(64,299,l),
(253,299,l),
(221,116,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 1 2 133 0 5 0 5 134 3 1 1 0 0 1 87 3 1 1 1 0 96 4 1 0 1 0 80 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(308,125,l),
(340,308,l),
(531,308,l),
(543,379,l),
(353,379,l),
(385,561,l),
(309,561,l),
(277,379,l),
(86,379,l),
(74,308,l),
(265,308,l),
(232,125,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 1 2 133 0 5 0 5 134 3 1 1 0 0 1 87 3 1 1 1 0 96 4 1 0 1 0 80 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 583;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(315,112,l),
(347,295,l),
(535,295,l),
(552,390,l),
(364,390,l),
(396,573,l),
(298,573,l),
(266,390,l),
(77,390,l),
(60,295,l),
(249,295,l),
(217,112,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 1 2 133 0 5 0 5 134 3 1 1 0 0 1 87 3 1 1 1 0 96 4 1 0 1 0 80 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(318,106,l),
(350,289,l),
(537,289,l),
(556,396,l),
(369,396,l),
(401,579,l),
(292,579,l),
(260,396,l),
(72,396,l),
(53,289,l),
(241,289,l),
(209,106,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 1 2 133 0 5 0 5 134 3 1 1 0 0 1 87 3 1 1 1 0 96 4 1 0 1 0 80 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 576;
}
);
note = plus.case;
},
{
glyphname = arrowup;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(332,712,l),
(61,483,l),
(113,420,l),
(210,504,l),
(257,549,l),
(160,0,l),
(251,0,l),
(348,549,l),
(379,504,l),
(447,420,l),
(520,483,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
10 9 8 7 5 2 6 0 74 0 0 0 34 0 78 19 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 499;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(336,712,l),
(66,483,l),
(111,428,l),
(225,527,l),
(272,573,l),
(171,-1,l),
(249,-1,l),
(350,573,l),
(381,527,l),
(461,428,l),
(524,483,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
10 9 8 7 5 2 6 0 74 0 0 0 34 0 78 19 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 508;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(330,712,l),
(59,483,l),
(114,417,l),
(205,496,l),
(251,540,l),
(156,0,l),
(252,0,l),
(347,540,l),
(378,496,l),
(442,417,l),
(518,483,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
10 9 8 7 5 2 6 0 74 0 0 0 34 0 78 19 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 495;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(327,712,l),
(56,483,l),
(115,412,l),
(195,480,l),
(241,524,l),
(148,0,l),
(253,0,l),
(346,524,l),
(376,480,l),
(432,412,l),
(515,483,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
10 9 8 7 5 2 6 0 74 0 0 0 34 0 78 19 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = arrowup;
unicode = 8593;
},
{
glyphname = arrowright;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(790,350,l),
(602,580,l),
(528,517,l),
(597,435,l),
(635,396,l),
(85,396,l),
(69,305,l),
(619,305,l),
(567,266,l),
(469,184,l),
(521,121,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
9 1 0 1 1 76 8 7 2 1 74 10 1 0 73 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 17 18 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 811;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(795,350,l),
(606,579,l),
(542,525,l),
(624,428,l),
(663,389,l),
(89,389,l),
(75,311,l),
(649,311,l),
(596,272,l),
(480,175,l),
(526,121,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
9 1 0 1 1 76 8 7 2 1 74 10 1 0 73 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 17 18 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 821;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(788,350,l),
(600,580,l),
(523,514,l),
(587,437,l),
(625,398,l),
(84,398,l),
(67,302,l),
(608,302,l),
(557,263,l),
(465,186,l),
(519,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
9 1 0 1 1 76 8 7 2 1 74 10 1 0 73 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 17 18 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 808;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(785,350,l),
(597,580,l),
(513,509,l),
(569,441,l),
(606,403,l),
(81,403,l),
(63,298,l),
(588,298,l),
(537,259,l),
(457,192,l),
(515,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
9 1 0 1 1 76 8 7 2 1 74 10 1 0 73 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 17 18 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 801;
}
);
note = arrowright;
unicode = 8594;
},
{
glyphname = arrowdown;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(203,-12,l),
(474,217,l),
(422,280,l),
(325,197,l),
(278,152,l),
(375,700,l),
(284,700,l),
(187,152,l),
(156,197,l),
(88,280,l),
(15,217,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
10 9 8 7 5 2 6 0 73 0 0 0 33 0 78 19 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 499;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(208,-12,l),
(478,217,l),
(433,272,l),
(319,173,l),
(272,127,l),
(373,700,l),
(295,700,l),
(194,127,l),
(163,173,l),
(83,272,l),
(20,217,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
10 9 8 7 5 2 6 0 73 0 0 0 33 0 78 19 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 508;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(201,-12,l),
(472,217,l),
(418,283,l),
(326,204,l),
(280,160,l),
(376,700,l),
(280,700,l),
(184,160,l),
(154,204,l),
(90,283,l),
(13,217,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
10 9 8 7 5 2 6 0 73 0 0 0 33 0 78 19 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 495;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(198,-12,l),
(469,217,l),
(410,288,l),
(330,220,l),
(284,176,l),
(377,700,l),
(272,700,l),
(179,176,l),
(149,220,l),
(93,288,l),
(10,217,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
10 9 8 7 5 2 6 0 73 0 0 0 33 0 78 19 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = arrowdown;
unicode = 8595;
},
{
glyphname = arrowleft;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(320,184,l),
(251,266,l),
(213,305,l),
(762,305,l),
(778,396,l),
(229,396,l),
(281,435,l),
(379,517,l),
(327,580,l),
(57,350,l),
(246,121,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
2 1 2 0 74 10 9 2 1 73 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 20 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 811;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(315,175,l),
(233,272,l),
(194,311,l),
(768,311,l),
(782,389,l),
(208,389,l),
(261,428,l),
(377,525,l),
(331,579,l),
(62,350,l),
(251,121,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
2 1 2 0 74 10 9 2 1 73 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 20 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 821;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(321,186,l),
(256,263,l),
(219,302,l),
(760,302,l),
(777,398,l),
(235,398,l),
(287,437,l),
(379,514,l),
(325,580,l),
(55,350,l),
(244,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
2 1 2 0 74 10 9 2 1 73 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 20 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 808;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(324,192,l),
(268,259,l),
(231,298,l),
(756,298,l),
(774,403,l),
(249,403,l),
(300,441,l),
(380,509,l),
(322,580,l),
(52,350,l),
(240,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
2 1 2 0 74 10 9 2 1 73 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 20 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 801;
}
);
note = arrowleft;
unicode = 8592;
},
{
glyphname = lozenge;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(531,351,l),
(329,596,l),
(40,351,l),
(241,105,l)
);
},
{
closed = 1;
nodes = (
(146,350,l),
(311,490,l),
(425,351,l),
(260,210,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 5 3 1 2 50
CALL[ ]	/* CallFunction */";
};
width = 546;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(528,350,l),
(332,589,l),
(49,350,l),
(245,110,l)
);
},
{
closed = 1;
nodes = (
(135,349,l),
(317,503,l),
(442,350,l),
(260,195,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 5 3 1 2 50
CALL[ ]	/* CallFunction */";
};
width = 553;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(531,351,l),
(328,598,l),
(36,351,l),
(240,103,l)
);
},
{
closed = 1;
nodes = (
(149,350,l),
(309,485,l),
(419,351,l),
(259,215,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 5 3 1 2 50
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(533,351,l),
(326,602,l),
(30,351,l),
(237,100,l)
);
},
{
closed = 1;
nodes = (
(156,351,l),
(305,476,l),
(407,352,l),
(259,225,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 5 3 1 2 50
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = lozenge;
unicode = 9674;
},
{
glyphname = at;
kernLeft = at;
kernRight = at;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(491,-212,o),
(607,-190,o),
(652,-170,q),
(640,-97,l),
(552,-136,o),
(450,-136,qs),
(357,-136,o),
(217,-64,o),
(141,65,o),
(141,150,qs),
(141,262,o),
(258,459,o),
(460,579,o),
(580,579,qs),
(672,579,o),
(811,515,o),
(887,394,o),
(887,313,qs),
(887,268,o),
(860,161,o),
(801,83,o),
(756,83,qs),
(732,83,o),
(707,108,o),
(707,131,qs),
(708,140,o),
(709,149,qs),
(758,429,l),
(665,429,l),
(655,372,l),
(636,406,o),
(569,439,o),
(525,439,qs),
(454,439,o),
(339,363,o),
(274,240,o),
(274,172,qs),
(274,94,o),
(366,-3,o),
(446,-3,qs),
(541,-3,o),
(615,80,q),
(624,41,o),
(681,-1,o),
(727,-1,qs),
(804,-1,o),
(914,98,o),
(970,248,o),
(970,323,qs),
(970,423,o),
(874,573,o),
(703,654,o),
(593,654,qs),
(444,654,o),
(198,510,o),
(57,270,o),
(57,134,qs),
(57,32,o),
(149,-125,o),
(321,-212,o),
(437,-212,qs)
);
},
{
closed = 1;
nodes = (
(429,81,o),
(371,140,o),
(371,189,qs),
(371,234,o),
(412,310,o),
(483,356,o),
(527,356,qs),
(577,356,o),
(634,296,o),
(634,248,qs),
(634,204,o),
(594,128,o),
(524,81,o),
(479,81,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
30 1 9 3 35 1 5 9 18 1 1 5 56 1 7 1 57 1 8 7 5 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
30 1 9 4 35 1 5 9 18 1 1 5 56 1 7 1 57 1 8 7 5 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 0 0 6 3 0 6 105 4 1 3 0 9 5 3 9 105 12 10 2 5 5 1 98 2 1 1 1 34 77 0 7 7 8 97 11 1 8 8 38 8 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 3 9 3 4 9 128 0 0 0 6 3 0 6 105 0 3 0 9 5 3 9 105 12 10 2 5 5 1 98 2 1 1 1 34 77 0 7 7 8 97 11 1 8 8 38 8 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
61 61 0 0 61 74 61 73 68 66 0 60 0 59 38 38 37 19 37 35 38 38 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1032;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(491,-212,o),
(603,-191,o),
(648,-173,q),
(638,-113,l),
(552,-150,o),
(450,-150,qs),
(357,-150,o),
(211,-77,o),
(129,57,o),
(129,147,qs),
(129,263,o),
(251,469,o),
(461,593,o),
(585,593,qs),
(681,593,o),
(825,526,o),
(903,401,o),
(903,316,qs),
(903,267,o),
(874,153,o),
(810,73,o),
(761,73,qs),
(734,73,o),
(705,103,o),
(705,129,qs),
(706,138,o),
(707,147,qs),
(756,425,l),
(676,425,l),
(666,370,l),
(625,435,o),
(533,435,qs),
(460,435,o),
(344,361,o),
(280,240,o),
(280,172,qs),
(280,94,o),
(374,0,o),
(455,0,qs),
(508,0,o),
(590,44,o),
(626,80,q),
(635,42,o),
(691,2,o),
(734,2,qs),
(812,2,o),
(920,103,o),
(972,252,o),
(972,324,qs),
(972,424,o),
(875,574,o),
(704,654,o),
(595,654,qs),
(446,654,o),
(200,510,o),
(59,270,o),
(59,133,qs),
(59,29,o),
(153,-127,o),
(325,-212,o),
(439,-212,qs)
);
},
{
closed = 1;
nodes = (
(427,72,o),
(363,134,o),
(363,187,qs),
(363,232,o),
(405,313,o),
(482,364,o),
(531,364,qs),
(586,364,o),
(648,302,o),
(648,250,qs),
(648,204,o),
(606,122,o),
(530,72,o),
(480,72,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
30 1 9 3 35 18 2 5 9 56 1 7 1 57 1 8 7 4 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
30 1 9 4 35 18 2 5 9 56 1 7 1 57 1 8 7 4 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 0 0 6 3 0 6 105 4 1 3 0 9 5 3 9 105 12 10 2 5 5 1 98 2 1 1 1 34 77 0 7 7 8 97 11 1 8 8 38 8 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 3 9 3 4 9 128 0 0 0 6 3 0 6 105 0 3 0 9 5 3 9 105 12 10 2 5 5 1 98 2 1 1 1 34 77 0 7 7 8 97 11 1 8 8 38 8 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
61 61 0 0 61 74 61 73 68 66 0 60 0 59 38 38 37 18 37 36 38 38 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1034;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(490,-212,o),
(609,-189,o),
(653,-169,q),
(640,-92,l),
(555,-131,o),
(450,-131,qs),
(357,-131,o),
(218,-60,o),
(144,68,o),
(144,151,qs),
(144,261,o),
(260,456,o),
(460,574,o),
(578,574,qs),
(668,574,o),
(805,511,o),
(881,392,o),
(881,311,qs),
(881,267,o),
(855,162,o),
(798,86,o),
(754,86,qs),
(707,86,o),
(707,132,q),
(709,149,l),
(759,430,l),
(661,430,l),
(651,373,l),
(633,407,o),
(565,440,o),
(522,440,qs),
(451,440,o),
(337,363,o),
(272,239,o),
(272,171,qs),
(272,94,o),
(363,-5,o),
(443,-5,qs),
(538,-5,o),
(611,79,q),
(620,40,o),
(678,-3,o),
(724,-3,qs),
(801,-3,o),
(912,95,o),
(969,246,o),
(969,323,qs),
(969,422,o),
(873,572,o),
(702,654,o),
(592,654,qs),
(443,654,o),
(197,509,o),
(56,270,o),
(56,134,qs),
(56,32,o),
(147,-124,o),
(319,-212,o),
(436,-212,qs)
);
},
{
closed = 1;
nodes = (
(430,84,o),
(373,142,o),
(373,190,qs),
(373,234,o),
(414,309,o),
(483,353,o),
(525,353,qs),
(574,353,o),
(629,294,o),
(629,247,qs),
(629,204,o),
(590,129,o),
(521,84,o),
(478,84,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
30 1 9 3 34 1 5 9 18 1 1 5 54 1 7 1 55 1 8 7 5 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
30 1 9 4 34 1 5 9 18 1 1 5 54 1 7 1 55 1 8 7 5 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 0 0 6 3 0 6 105 4 1 3 0 9 5 3 9 105 12 10 2 5 5 1 98 2 1 1 1 34 77 0 7 7 8 97 11 1 8 8 38 8 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 3 9 3 4 9 128 0 0 0 6 3 0 6 105 0 3 0 9 5 3 9 105 12 10 2 5 5 1 98 2 1 1 1 34 77 0 7 7 8 97 11 1 8 8 38 8 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
59 59 0 0 59 72 59 71 66 64 0 58 0 57 38 38 35 19 37 35 38 38 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1031;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(490,-212,o),
(610,-188,o),
(655,-167,q),
(641,-81,l),
(553,-122,o),
(450,-122,qs),
(357,-122,o),
(222,-51,o),
(152,74,o),
(152,153,qs),
(152,260,o),
(265,450,o),
(459,565,o),
(575,565,qs),
(662,565,o),
(796,503,o),
(870,388,o),
(870,309,qs),
(870,268,o),
(845,167,o),
(791,93,o),
(750,93,qs),
(708,93,o),
(708,133,q),
(710,150,l),
(760,433,l),
(653,433,l),
(643,374,l),
(626,409,o),
(559,443,o),
(516,443,qs),
(447,443,o),
(333,365,o),
(268,239,o),
(268,171,qs),
(268,93,o),
(358,-7,o),
(437,-7,qs),
(534,-7,o),
(603,79,q),
(612,38,o),
(672,-5,o),
(719,-5,qs),
(796,-5,o),
(908,91,o),
(967,243,o),
(967,322,qs),
(967,421,o),
(872,571,o),
(701,654,o),
(590,654,qs),
(441,654,o),
(196,509,o),
(55,270,o),
(55,135,qs),
(55,34,o),
(145,-123,o),
(316,-212,o),
(434,-212,qs)
);
},
{
closed = 1;
nodes = (
(431,90,o),
(378,146,o),
(378,191,qs),
(378,236,o),
(418,307,o),
(484,347,o),
(522,347,qs),
(567,347,o),
(620,290,o),
(620,245,qs),
(620,203,o),
(583,132,o),
(517,90,o),
(477,90,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
30 1 9 3 34 1 5 9 18 1 1 5 54 1 7 1 55 1 8 7 5 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
30 1 9 4 34 1 5 9 18 1 1 5 54 1 7 1 55 1 8 7 5 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 0 0 6 3 0 6 105 4 1 3 0 9 5 3 9 105 12 10 2 5 5 1 98 2 1 1 1 34 77 0 7 7 8 97 11 1 8 8 38 8 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 3 9 3 4 9 128 0 0 0 6 3 0 6 105 0 3 0 9 5 3 9 105 12 10 2 5 5 1 98 2 1 1 1 34 77 0 7 7 8 97 11 1 8 8 38 8 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
59 59 0 0 59 72 59 71 66 64 0 58 0 57 38 38 35 19 37 35 38 38 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1029;
}
);
note = at;
unicode = 64;
},
{
glyphname = ampersand;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(320,-12,o),
(415,73,q),
(423,82,l),
(491,0,l),
(624,0,l),
(493,158,l),
(684,405,l),
(573,405,l),
(436,226,l),
(327,358,ls),
(281,412,o),
(241,475,o),
(241,508,qs),
(241,533,o),
(267,584,o),
(320,619,o),
(358,619,qs),
(400,619,o),
(445,576,o),
(445,540,qs),
(445,530,o),
(442,516,q),
(547,516,l),
(551,536,o),
(551,558,qs),
(551,630,o),
(457,712,o),
(376,712,qs),
(303,712,o),
(193,647,o),
(136,546,o),
(136,494,qs),
(136,445,o),
(165,398,qs),
(171,388,l),
(162,382,ls),
(93,338,o),
(21,220,o),
(21,157,qs),
(21,81,o),
(125,-12,o),
(212,-12,qs)
);
},
{
closed = 1;
nodes = (
(186,83,o),
(128,139,o),
(128,182,qs),
(128,221,o),
(175,291,o),
(213,314,qs),
(224,321,l),
(369,147,l),
(360,138,ls),
(302,83,o),
(235,83,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
45 44 35 32 6 5 6 3 38 1 4 6 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 114 0 2 2 0 97 0 0 0 39 77 0 3 3 4 97 7 5 2 4 4 34 77 8 1 6 6 4 97 7 5 2 4 4 34 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 0 0 0 39 77 0 3 3 4 97 7 5 2 4 4 34 77 8 1 6 6 4 97 7 5 2 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 0 0 0 39 77 0 3 3 4 95 0 4 4 34 77 8 1 6 6 5 97 7 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
42 42 0 0 42 52 42 51 0 41 0 40 18 24 36 20 44 9 8 27
CALL[ ]	/* CallFunction */";
};
width = 681;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(269,-12,o),
(374,40,o),
(423,87,q),
(429,95,l),
(509,-1,l),
(613,-1,l),
(483,154,l),
(670,404,l),
(583,404,l),
(439,207,l),
(319,350,ls),
(269,410,o),
(226,477,o),
(226,514,qs),
(226,539,o),
(252,597,o),
(312,640,o),
(358,640,qs),
(404,640,o),
(456,595,o),
(456,552,qs),
(456,539,o),
(453,522,q),
(535,522,l),
(540,547,o),
(540,564,qs),
(540,633,o),
(450,712,o),
(372,712,qs),
(296,712,o),
(193,644,o),
(144,547,o),
(144,503,qs),
(144,449,o),
(181,394,qs),
(186,387,l),
(179,382,ls),
(100,333,o),
(25,211,o),
(25,152,qs),
(25,80,o),
(119,-12,o),
(206,-12,qs)
);
},
{
closed = 1;
nodes = (
(169,61,o),
(108,122,o),
(108,168,qs),
(108,217,o),
(170,300,o),
(220,329,qs),
(228,333,l),
(387,145,l),
(380,138,ls),
(344,100,o),
(268,61,o),
(223,61,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
47 46 38 35 32 6 6 6 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 0 0 0 39 77 0 3 3 4 97 7 5 2 4 4 34 77 8 1 6 6 4 97 7 5 2 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 0 0 0 39 77 0 3 3 4 95 0 4 4 34 77 8 1 6 6 5 97 7 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
43 43 0 0 43 54 43 53 0 42 0 41 18 24 36 20 44 9 8 27
CALL[ ]	/* CallFunction */";
};
width = 673;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(319,-12,o),
(412,68,qs),
(421,77,l),
(485,0,l),
(627,0,l),
(496,159,l),
(689,405,l),
(569,405,l),
(435,232,l),
(329,360,ls),
(284,414,o),
(246,475,o),
(246,506,qs),
(246,531,o),
(272,580,o),
(322,611,o),
(357,611,qs),
(398,611,o),
(441,570,o),
(441,536,qs),
(441,526,o),
(438,514,q),
(550,514,l),
(555,539,o),
(555,556,qs),
(555,628,o),
(459,712,o),
(377,712,qs),
(304,712,o),
(193,647,o),
(133,545,o),
(133,491,qs),
(133,445,o),
(159,399,qs),
(165,388,l),
(156,382,ls),
(91,339,o),
(19,222,o),
(19,159,qs),
(19,82,o),
(126,-12,o),
(213,-12,qs)
);
},
{
closed = 1;
nodes = (
(191,90,o),
(135,145,o),
(135,186,qs),
(135,223,o),
(176,288,o),
(210,309,qs),
(222,316,l),
(363,147,l),
(353,138,ls),
(300,90,o),
(238,90,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
45 44 35 32 6 5 6 3 38 1 4 6 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 114 0 2 2 0 97 0 0 0 39 77 0 3 3 4 97 7 5 2 4 4 34 77 8 1 6 6 4 97 7 5 2 4 4 34 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 0 0 0 39 77 0 3 3 4 97 7 5 2 4 4 34 77 8 1 6 6 4 97 7 5 2 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 0 0 0 39 77 0 3 3 4 95 0 4 4 34 77 8 1 6 6 5 97 7 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
42 42 0 0 42 52 42 51 0 41 0 40 18 24 36 20 44 9 8 27
CALL[ ]	/* CallFunction */";
};
width = 683;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(321,-12,o),
(406,58,qs),
(417,68,l),
(473,0,l),
(634,0,l),
(502,161,l),
(698,405,l),
(562,405,l),
(433,244,l),
(334,365,ls),
(291,417,o),
(256,473,o),
(256,502,qs),
(256,541,o),
(314,597,o),
(357,597,qs),
(396,597,o),
(433,558,o),
(433,528,qs),
(433,522,o),
(431,510,q),
(558,510,l),
(562,530,o),
(562,552,qs),
(562,626,o),
(463,712,o),
(379,712,qs),
(308,712,o),
(193,649,o),
(127,545,o),
(127,485,qs),
(127,443,o),
(148,402,qs),
(155,389,l),
(145,382,ls),
(86,342,o),
(16,227,o),
(16,162,qs),
(16,109,o),
(69,30,o),
(160,-12,o),
(217,-12,qs)
);
},
{
closed = 1;
nodes = (
(202,105,o),
(148,156,o),
(148,195,qs),
(148,225,o),
(179,282,o),
(205,299,qs),
(219,308,l),
(351,148,l),
(339,138,ls),
(297,105,o),
(246,105,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
45 44 35 32 7 5 6 3 38 1 4 6 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 114 0 2 2 0 97 0 0 0 39 77 0 3 3 4 97 7 5 2 4 4 34 77 8 1 6 6 4 97 7 5 2 4 4 34 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 0 0 0 39 77 0 3 3 4 97 7 5 2 4 4 34 77 8 1 6 6 4 97 7 5 2 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 0 0 0 39 77 0 3 3 4 95 0 4 4 34 77 8 1 6 6 5 97 7 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
42 42 0 0 42 52 42 51 0 41 0 40 18 23 36 20 45 9 8 27
CALL[ ]	/* CallFunction */";
};
width = 688;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = paragraph;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(312,-100,l),
(439,618,l),
(516,618,l),
(389,-100,l),
(480,-100,l),
(621,700,l),
(349,700,ls),
(279,700,o),
(154,656,o),
(72,554,o),
(72,472,qs),
(72,430,o),
(111,346,o),
(203,289,o),
(277,289,qs),
(290,289,l),
(221,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 0 3 2 3 0 2 128 4 1 2 2 132 0 3 3 1 95 0 1 1 33 3 78 17 17 17 38 32 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 607;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(299,-100,l),
(428,634,l),
(511,634,l),
(381,-100,l),
(455,-100,l),
(596,700,l),
(356,700,ls),
(244,700,o),
(80,595,o),
(80,476,qs),
(80,435,o),
(118,353,o),
(210,295,o),
(285,295,qs),
(295,295,l),
(225,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 0 3 2 3 0 2 128 4 1 2 2 132 0 3 3 1 95 0 1 1 33 3 78 17 17 17 37 32 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(316,-100,l),
(442,613,l),
(518,613,l),
(392,-100,l),
(488,-100,l),
(629,700,l),
(347,700,ls),
(277,700,o),
(151,655,o),
(69,553,o),
(69,471,qs),
(69,428,o),
(108,344,o),
(200,287,o),
(274,287,qs),
(288,287,l),
(220,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 0 3 2 3 0 2 128 4 1 2 2 132 0 3 3 1 95 0 1 1 33 3 78 17 17 17 38 32 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(325,-100,l),
(449,602,l),
(521,602,l),
(397,-100,l),
(505,-100,l),
(646,700,l),
(342,700,ls),
(272,700,o),
(146,654,o),
(64,550,o),
(64,468,qs),
(64,424,o),
(103,339,o),
(195,283,o),
(268,283,qs),
(285,283,l),
(217,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 0 3 2 3 0 2 128 4 1 2 2 132 0 3 3 1 95 0 1 1 33 3 78 17 17 17 38 32 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 624;
}
);
note = paragraph;
unicode = 182;
},
{
glyphname = section;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(290,-232,o),
(409,-171,o),
(476,-65,o),
(476,0,qs),
(476,32,o),
(462,58,q),
(503,91,o),
(546,181,o),
(546,228,qs),
(546,346,o),
(396,395,qs),
(282,434,o),
(255,455,qs),
(231,474,o),
(231,506,qs),
(231,558,o),
(307,622,o),
(363,622,qs),
(415,622,o),
(468,569,o),
(468,530,q),
(466,514,l),
(578,514,l),
(581,531,o),
(581,547,qs),
(581,623,o),
(468,712,o),
(378,712,qs),
(303,712,o),
(183,651,o),
(116,547,o),
(116,483,qs),
(116,449,o),
(130,423,q),
(88,387,o),
(47,297,o),
(47,252,qs),
(47,187,o),
(128,110,o),
(197,84,qs),
(219,77,ls),
(312,47,o),
(336,27,qs),
(362,8,o),
(362,-25,qs),
(362,-76,o),
(286,-142,o),
(230,-142,qs),
(179,-142,o),
(126,-90,o),
(126,-51,qs),
(126,-39,o),
(127,-34,q),
(15,-34,l),
(12,-51,o),
(12,-66,qs),
(12,-142,o),
(124,-232,o),
(215,-232,qs)
);
},
{
closed = 1;
nodes = (
(363,138,o),
(329,148,q),
(314,154,o),
(298,159,qs),
(252,176,o),
(199,201,o),
(162,243,o),
(162,273,qs),
(162,328,o),
(201,361,q),
(225,347,o),
(263,332,qs),
(290,323,ls),
(338,306,o),
(393,280,o),
(431,238,o),
(431,207,qs),
(431,154,o),
(392,119,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
37 1 3 4 77 67 52 24 4 0 3 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 4 0 4 3 0 128 0 0 1 1 0 112 0 4 4 2 97 0 2 2 39 77 0 1 1 5 98 6 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 39 77 0 1 1 5 98 6 1 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 1 6 1 5 1 5 102 0 4 4 2 97 0 2 2 39 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 58 0 57 41 39 36 35 31 29 36 20 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 596;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(283,-232,o),
(401,-173,o),
(468,-71,o),
(468,-8,qs),
(468,24,o),
(454,52,q),
(499,88,o),
(538,182,o),
(538,227,qs),
(538,290,o),
(459,363,o),
(395,385,qs),
(339,404,o),
(259,435,o),
(243,448,qs),
(215,470,o),
(215,505,qs),
(215,564,o),
(302,640,o),
(364,640,qs),
(421,640,o),
(484,583,o),
(484,537,qs),
(484,530,o),
(482,518,q),
(570,518,l),
(573,535,o),
(573,551,qs),
(573,623,o),
(472,712,o),
(382,712,qs),
(304,712,o),
(187,648,o),
(124,545,o),
(124,488,qs),
(124,454,o),
(138,428,q),
(90,387,o),
(55,294,o),
(55,252,qs),
(55,189,o),
(134,117,o),
(198,95,qs),
(218,88,ls),
(321,54,o),
(346,35,qs),
(363,23,o),
(378,-6,o),
(378,-25,qs),
(378,-84,o),
(291,-160,o),
(229,-160,qs),
(172,-160,o),
(109,-103,o),
(109,-57,qs),
(109,-50,o),
(111,-38,q),
(23,-38,l),
(20,-55,o),
(20,-71,qs),
(20,-143,o),
(121,-232,o),
(211,-232,qs)
);
},
{
closed = 1;
nodes = (
(366,128,o),
(332,138,qs),
(288,154,ls),
(235,172,o),
(180,199,o),
(145,241,o),
(145,274,qs),
(145,339,o),
(190,376,q),
(220,357,o),
(261,342,qs),
(301,328,ls),
(354,310,o),
(412,283,o),
(448,240,o),
(448,206,qs),
(448,142,o),
(403,104,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
80 71 56 25 4 0 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 39 77 0 1 1 5 97 6 1 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 1 6 1 5 1 5 101 0 4 4 2 97 0 2 2 39 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 62 0 61 43 41 37 36 32 30 36 20 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 596;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(291,-232,o),
(411,-171,o),
(478,-64,o),
(478,2,qs),
(478,36,o),
(465,59,q),
(505,92,o),
(549,180,o),
(549,228,qs),
(549,295,o),
(462,377,o),
(396,398,qs),
(331,421,o),
(276,443,o),
(259,457,qs),
(236,474,o),
(236,506,qs),
(236,556,o),
(309,616,o),
(362,616,qs),
(412,616,o),
(462,565,o),
(462,528,qs),
(462,518,o),
(461,513,q),
(581,513,l),
(583,524,o),
(583,545,qs),
(583,622,o),
(467,712,o),
(376,712,qs),
(301,712,o),
(181,652,o),
(113,547,o),
(113,481,qs),
(113,447,o),
(127,421,q),
(86,386,o),
(44,298,o),
(44,251,qs),
(44,185,o),
(126,106,o),
(197,80,qs),
(222,72,ls),
(309,44,o),
(333,24,qs),
(357,6,o),
(357,-26,qs),
(357,-74,o),
(284,-136,o),
(230,-136,qs),
(181,-136,o),
(131,-86,o),
(131,-49,qs),
(131,-38,o),
(132,-33,q),
(12,-33,l),
(9,-50,o),
(9,-64,qs),
(9,-142,o),
(124,-232,o),
(216,-232,qs)
);
},
{
closed = 1;
nodes = (
(364,139,o),
(328,151,qs),
(299,162,ls),
(257,177,o),
(204,202,o),
(167,243,o),
(167,273,qs),
(167,324,o),
(204,356,q),
(233,339,o),
(264,329,qs),
(292,319,ls),
(335,303,o),
(388,278,o),
(425,237,o),
(425,207,qs),
(425,158,o),
(388,124,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
79 70 55 24 4 0 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 4 0 4 3 114 0 0 1 1 0 112 0 4 4 2 97 0 2 2 39 77 0 1 1 5 98 6 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 39 77 0 1 1 5 98 6 1 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 1 6 1 5 1 5 102 0 4 4 2 97 0 2 2 39 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 61 0 60 42 40 36 35 31 29 36 20 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 596;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(296,-232,o),
(416,-170,o),
(483,-61,o),
(483,7,qs),
(483,40,o),
(470,63,q),
(507,94,o),
(554,178,o),
(554,229,qs),
(554,297,o),
(465,383,o),
(397,405,qs),
(295,439,o),
(267,461,qs),
(247,476,o),
(247,506,qs),
(247,551,o),
(312,604,o),
(361,604,qs),
(408,604,o),
(451,556,o),
(451,523,qs),
(451,515,o),
(450,510,q),
(586,510,l),
(588,521,o),
(588,542,qs),
(588,595,o),
(530,672,o),
(433,712,o),
(373,712,qs),
(300,712,o),
(179,654,o),
(108,548,o),
(108,477,qs),
(108,445,o),
(122,417,q),
(84,384,o),
(38,301,o),
(38,251,qs),
(38,184,o),
(122,101,o),
(196,73,qs),
(205,69,o),
(224,64,qs),
(261,52,o),
(311,32,o),
(326,19,qs),
(346,2,o),
(346,-26,qs),
(346,-68,o),
(280,-124,o),
(231,-124,qs),
(186,-124,o),
(142,-78,o),
(142,-45,qs),
(142,-35,o),
(143,-30,q),
(6,-30,l),
(4,-41,o),
(4,-61,qs),
(4,-142,o),
(126,-232,o),
(219,-232,qs)
);
},
{
closed = 1;
nodes = (
(362,145,o),
(326,158,qs),
(306,165,ls),
(247,186,o),
(178,232,o),
(178,272,qs),
(178,316,o),
(211,346,q),
(235,333,o),
(265,322,qs),
(284,315,ls),
(344,294,o),
(414,248,o),
(414,208,qs),
(414,167,o),
(381,134,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
41 1 3 4 79 71 57 26 4 0 3 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 4 0 4 3 0 128 0 0 1 1 0 112 0 4 4 2 97 0 2 2 39 77 0 1 1 5 98 6 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 39 77 0 1 1 5 98 6 1 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 1 6 1 5 1 5 102 0 4 4 2 97 0 2 2 39 4 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 63 0 62 45 43 39 38 33 31 36 20 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 596;
}
);
note = section;
unicode = 167;
},
{
glyphname = copyright;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(456,-5,o),
(647,106,o),
(757,299,o),
(757,416,qs),
(757,491,o),
(694,623,o),
(563,706,o),
(465,706,qs),
(348,706,o),
(156,594,o),
(47,403,o),
(47,288,qs),
(47,211,o),
(112,77,o),
(244,-5,o),
(340,-5,qs)
);
},
{
closed = 1;
nodes = (
(275,36,o),
(160,94,o),
(93,210,o),
(93,291,qs),
(93,396,o),
(185,567,o),
(351,666,o),
(458,666,qs),
(529,666,o),
(644,610,o),
(712,496,o),
(712,413,qs),
(712,309,o),
(620,136,o),
(454,36,o),
(347,36,qs)
);
},
{
closed = 1;
nodes = (
(438,121,o),
(564,205,o),
(595,276,q),
(501,276,l),
(481,237,o),
(415,195,o),
(373,195,qs),
(327,195,o),
(271,254,o),
(271,310,qs),
(271,354,o),
(305,445,o),
(377,507,o),
(429,507,qs),
(470,507,o),
(522,465,o),
(527,426,q),
(621,426,l),
(617,500,o),
(520,582,o),
(443,582,qs),
(373,582,o),
(253,511,o),
(180,384,o),
(180,304,qs),
(180,220,o),
(281,121,o),
(361,121,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 93 values pushed */
0 5 6 8 6 5 8 128 0 8 7 6 8 7 126 0 0 0 2 4 0 2 105 0 4 0 6 5 4 6 105 0 7 12 1 9 3 7 9 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81 32 32 16 16 0 0 32 59 32 58 56 55 53 51 46 44 42 41 39 37 16 31 16 30 24 22 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 780;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(463,-4,o),
(653,108,o),
(762,300,o),
(762,415,qs),
(762,491,o),
(699,622,o),
(568,704,o),
(471,704,qs),
(355,704,o),
(165,593,o),
(55,402,o),
(55,287,qs),
(55,213,o),
(117,80,o),
(249,-4,o),
(347,-4,qs)
);
},
{
closed = 1;
nodes = (
(283,32,o),
(166,89,o),
(95,205,o),
(95,290,qs),
(95,395,o),
(190,569,o),
(359,669,o),
(465,669,qs),
(536,669,o),
(653,613,o),
(722,497,o),
(722,412,qs),
(722,308,o),
(629,134,o),
(461,32,o),
(353,32,qs)
);
},
{
closed = 1;
nodes = (
(442,119,o),
(568,201,o),
(599,270,q),
(523,270,l),
(501,226,o),
(426,179,o),
(378,179,qs),
(325,179,o),
(262,245,o),
(262,306,qs),
(262,355,o),
(301,455,o),
(381,522,o),
(439,522,qs),
(485,522,o),
(545,474,o),
(551,430,q),
(627,430,l),
(622,503,o),
(526,583,o),
(450,583,qs),
(376,583,o),
(256,506,o),
(187,376,o),
(187,300,qs),
(187,216,o),
(288,119,o),
(367,119,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 93 values pushed */
0 5 6 8 6 5 8 128 0 8 7 6 8 7 126 0 0 0 2 4 0 2 105 0 4 0 6 5 4 6 105 0 7 12 1 9 3 7 9 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81 32 32 16 16 0 0 32 59 32 58 56 55 53 51 46 44 42 41 39 37 16 31 16 30 24 22 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 794;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(453,-5,o),
(644,106,o),
(755,299,o),
(755,416,qs),
(755,491,o),
(692,624,o),
(560,707,o),
(462,707,qs),
(345,707,o),
(154,594,o),
(44,402,o),
(44,288,qs),
(44,210,o),
(110,76,o),
(242,-5,o),
(337,-5,qs)
);
},
{
closed = 1;
nodes = (
(272,37,o),
(157,96,o),
(92,211,o),
(92,291,qs),
(92,395,o),
(183,566,o),
(349,665,o),
(456,665,qs),
(527,665,o),
(641,609,o),
(708,495,o),
(708,413,qs),
(708,309,o),
(616,137,o),
(451,37,o),
(345,37,qs)
);
},
{
closed = 1;
nodes = (
(436,122,o),
(563,206,o),
(593,277,q),
(493,277,l),
(474,240,o),
(412,200,o),
(371,200,qs),
(326,200,o),
(273,257,o),
(273,311,qs),
(273,353,o),
(306,442,o),
(375,502,o),
(425,502,qs),
(464,502,o),
(514,462,o),
(518,425,q),
(619,425,l),
(615,498,o),
(518,582,o),
(441,582,qs),
(373,582,o),
(251,512,o),
(177,386,o),
(177,305,qs),
(177,221,o),
(278,122,o),
(359,122,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 93 values pushed */
0 5 6 8 6 5 8 128 0 8 7 6 8 7 126 0 0 0 2 4 0 2 105 0 4 0 6 5 4 6 105 0 7 12 1 9 3 7 9 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81 32 32 16 16 0 0 32 59 32 58 56 55 53 51 46 44 42 41 39 37 16 31 16 30 24 22 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 775;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(448,-6,o),
(640,105,o),
(751,299,o),
(751,417,qs),
(751,492,o),
(689,624,o),
(557,708,o),
(458,708,qs),
(340,708,o),
(147,595,o),
(38,402,o),
(38,288,qs),
(38,208,o),
(106,74,o),
(239,-6,o),
(332,-6,qs)
);
},
{
closed = 1;
nodes = (
(266,40,o),
(153,100,o),
(90,214,o),
(90,291,qs),
(90,395,o),
(179,565,o),
(344,663,o),
(451,663,qs),
(521,663,o),
(635,607,o),
(701,494,o),
(701,413,qs),
(701,309,o),
(610,139,o),
(446,40,o),
(341,40,qs)
);
},
{
closed = 1;
nodes = (
(432,123,o),
(560,209,o),
(590,281,q),
(478,281,l),
(441,211,o),
(368,211,qs),
(327,211,o),
(279,263,o),
(279,313,qs),
(279,352,o),
(308,435,o),
(371,492,o),
(418,492,qs),
(454,492,o),
(498,455,o),
(502,422,q),
(615,422,l),
(611,496,o),
(514,581,o),
(436,581,qs),
(370,581,o),
(249,516,o),
(172,391,o),
(172,307,qs),
(172,223,o),
(273,123,o),
(355,123,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 5 6 8 6 5 114 0 8 7 6 8 7 126 0 0 0 2 4 0 2 105 0 4 0 6 5 4 6 105 0 7 12 1 9 3 7 9 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 5 6 8 6 5 8 128 0 8 7 6 8 7 126 0 0 0 2 4 0 2 105 0 4 0 6 5 4 6 105 0 7 12 1 9 3 7 9 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 5 6 8 6 5 114 0 8 7 6 8 7 126 0 0 0 2 4 0 2 105 0 4 0 6 5 4 6 105 0 7 12 1 9 3 7 9 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 5 6 8 6 5 8 128 0 8 7 6 8 7 126 0 0 0 2 4 0 2 105 0 4 0 6 5 4 6 105 0 7 12 1 9 3 7 9 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
32 32 16 16 0 0 32 58 32 57 55 54 53 51 46 44 42 41 39 37 16 31 16 30 24 22 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 766;
}
);
note = copyright;
unicode = 169;
},
{
glyphname = registered;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,425,o),
(341,463,o),
(379,529,o),
(379,568,qs),
(379,607,o),
(341,673,o),
(275,712,o),
(236,712,qs),
(197,712,o),
(131,673,o),
(92,607,o),
(92,568,qs),
(92,529,o),
(131,463,o),
(197,425,o),
(236,425,qs)
);
},
{
closed = 1;
nodes = (
(187,448,o),
(116,519,o),
(116,568,qs),
(116,618,o),
(187,688,o),
(236,688,qs),
(286,688,o),
(356,618,o),
(356,568,qs),
(356,519,o),
(286,448,o),
(236,448,qs)
);
},
{
closed = 1;
nodes = (
(215,496,l),
(215,561,l),
(233,561,l),
(268,496,l),
(301,496,l),
(260,568,l),
(289,578,o),
(289,607,qs),
(289,625,o),
(267,651,o),
(241,651,qs),
(187,651,l),
(187,496,l)
);
},
{
closed = 1;
nodes = (
(215,585,l),
(215,628,l),
(237,628,ls),
(249,628,o),
(262,617,o),
(262,607,qs),
(262,596,o),
(247,585,o),
(234,585,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
34 1 6 9 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 4 2 8 0 4 114 0 8 9 2 8 112 12 1 9 6 2 9 6 126 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 4 2 8 2 4 8 128 0 8 9 2 8 9 126 12 1 9 6 2 9 6 126 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
41 41 16 16 0 0 41 49 41 48 47 45 40 39 38 37 36 35 30 28 16 27 16 26 22 20 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 357;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(282,425,o),
(348,463,o),
(386,529,o),
(386,568,qs),
(386,607,o),
(348,673,o),
(282,712,o),
(243,712,qs),
(204,712,o),
(138,673,o),
(99,607,o),
(99,568,qs),
(99,529,o),
(138,463,o),
(204,425,o),
(243,425,qs)
);
},
{
closed = 1;
nodes = (
(194,448,o),
(123,519,o),
(123,568,qs),
(123,618,o),
(194,688,o),
(243,688,qs),
(293,688,o),
(363,618,o),
(363,568,qs),
(363,519,o),
(293,448,o),
(243,448,qs)
);
},
{
closed = 1;
nodes = (
(222,496,l),
(222,561,l),
(240,561,l),
(275,496,l),
(308,496,l),
(267,568,l),
(296,578,o),
(296,607,qs),
(296,625,o),
(274,651,o),
(248,651,qs),
(194,651,l),
(194,496,l)
);
},
{
closed = 1;
nodes = (
(222,585,l),
(222,628,l),
(244,628,ls),
(256,628,o),
(269,617,o),
(269,607,qs),
(269,596,o),
(254,585,o),
(241,585,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
34 1 6 9 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
7 1 5 6 3 8 5 114 0 0 0 2 4 0 2 105 0 4 0 8 9 4 8 105 12 1 9 0 6 5 9 6 103 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
7 1 5 6 3 6 5 3 128 0 0 0 2 4 0 2 105 0 4 0 8 9 4 8 105 12 1 9 0 6 5 9 6 103 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
41 41 16 16 0 0 41 49 41 48 47 45 40 39 38 37 36 35 30 28 16 27 16 26 22 20 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 372;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(272,425,o),
(338,463,o),
(376,529,o),
(376,568,qs),
(376,607,o),
(338,673,o),
(272,712,o),
(233,712,qs),
(194,712,o),
(128,673,o),
(89,607,o),
(89,568,qs),
(89,529,o),
(128,463,o),
(194,425,o),
(233,425,qs)
);
},
{
closed = 1;
nodes = (
(184,448,o),
(113,519,o),
(113,568,qs),
(113,618,o),
(184,688,o),
(233,688,qs),
(283,688,o),
(353,618,o),
(353,568,qs),
(353,519,o),
(283,448,o),
(233,448,qs)
);
},
{
closed = 1;
nodes = (
(212,496,l),
(212,561,l),
(230,561,l),
(265,496,l),
(298,496,l),
(257,568,l),
(286,578,o),
(286,607,qs),
(286,625,o),
(264,651,o),
(238,651,qs),
(184,651,l),
(184,496,l)
);
},
{
closed = 1;
nodes = (
(212,585,l),
(212,628,l),
(234,628,ls),
(246,628,o),
(259,617,o),
(259,607,qs),
(259,596,o),
(244,585,o),
(231,585,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
34 1 6 9 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 4 2 8 0 4 114 0 8 9 2 8 112 12 1 9 6 2 9 6 126 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 4 2 8 2 4 8 128 0 8 9 2 8 9 126 12 1 9 6 2 9 6 126 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
41 41 16 16 0 0 41 49 41 48 47 45 40 39 38 37 36 35 30 28 16 27 16 26 22 20 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 352;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(267,425,o),
(333,463,o),
(371,529,o),
(371,568,qs),
(371,607,o),
(333,673,o),
(267,712,o),
(228,712,qs),
(189,712,o),
(123,673,o),
(84,607,o),
(84,568,qs),
(84,529,o),
(123,463,o),
(189,425,o),
(228,425,qs)
);
},
{
closed = 1;
nodes = (
(179,448,o),
(108,519,o),
(108,568,qs),
(108,618,o),
(179,688,o),
(228,688,qs),
(278,688,o),
(348,618,o),
(348,568,qs),
(348,519,o),
(278,448,o),
(228,448,qs)
);
},
{
closed = 1;
nodes = (
(207,496,l),
(207,561,l),
(225,561,l),
(260,496,l),
(293,496,l),
(252,568,l),
(281,578,o),
(281,607,qs),
(281,625,o),
(259,651,o),
(233,651,qs),
(179,651,l),
(179,496,l)
);
},
{
closed = 1;
nodes = (
(207,585,l),
(207,628,l),
(229,628,ls),
(241,628,o),
(254,617,o),
(254,607,qs),
(254,596,o),
(239,585,o),
(226,585,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
34 1 6 9 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 4 2 8 0 4 114 0 8 9 2 8 112 12 1 9 6 3 9 112 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 98 10 1 1 3 1 82
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 4 2 8 0 4 114 0 8 9 2 8 112 12 1 9 6 2 9 6 126 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 98 10 1 1 3 1 82
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 4 2 8 2 4 8 128 0 8 9 2 8 9 126 12 1 9 6 2 9 6 126 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 98 10 1 1 3 1 82
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
41 41 16 16 0 0 41 49 41 48 47 45 40 39 38 37 36 35 30 28 16 27 16 26 22 20 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 342;
}
);
note = registered;
unicode = 174;
},
{
glyphname = trademark;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,350,l),
(463,581,l),
(511,395,l),
(564,395,l),
(678,579,l),
(638,350,l),
(707,350,l),
(769,700,l),
(687,700,l),
(554,484,l),
(501,700,l),
(416,700,l),
(354,350,l)
);
},
{
closed = 1;
nodes = (
(207,350,l),
(258,641,l),
(352,641,l),
(363,700,l),
(104,700,l),
(93,641,l),
(187,641,l),
(135,350,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
10 7 2 3 3 5 1 76 0 3 5 2 5 3 2 128 8 4 2 2 2 132 6 1 2 0 5 5 0 87 6 1 2 0 0 5 95 7 1 5 0 5 79 17 17 17 17 18 18 17 18 16 9 6 31
CALL[ ]	/* CallFunction */";
};
width = 734;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(408,350,l),
(454,610,l),
(508,396,l),
(556,396,l),
(686,606,l),
(642,350,l),
(704,350,l),
(766,700,l),
(686,700,l),
(548,475,l),
(495,700,l),
(410,700,l),
(348,350,l)
);
},
{
closed = 1;
nodes = (
(205,350,l),
(257,647,l),
(347,647,l),
(356,700,l),
(111,700,l),
(102,647,l),
(192,647,l),
(138,350,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
10 7 2 3 3 5 1 76 0 3 5 2 5 3 2 128 8 4 2 2 2 132 6 1 2 0 5 5 0 87 6 1 2 0 0 5 95 7 1 5 0 5 79 17 17 17 17 18 18 17 18 16 9 6 31
CALL[ ]	/* CallFunction */";
};
width = 736;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(426,350,l),
(465,571,l),
(511,394,l),
(566,394,l),
(675,570,l),
(637,350,l),
(708,350,l),
(770,700,l),
(687,700,l),
(556,486,l),
(502,700,l),
(417,700,l),
(355,350,l)
);
},
{
closed = 1;
nodes = (
(207,350,l),
(258,638,l),
(354,638,l),
(365,700,l),
(101,700,l),
(90,638,l),
(185,638,l),
(134,350,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
10 7 2 3 3 5 1 76 0 3 5 2 5 3 2 128 8 4 2 2 2 132 6 1 2 0 5 5 0 87 6 1 2 0 0 5 95 7 1 5 0 5 79 17 17 17 17 18 18 17 18 16 9 6 31
CALL[ ]	/* CallFunction */";
};
width = 733;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(435,350,l),
(471,552,l),
(513,393,l),
(571,393,l),
(670,552,l),
(634,350,l),
(710,350,l),
(772,700,l),
(687,700,l),
(560,492,l),
(506,700,l),
(421,700,l),
(359,350,l)
);
},
{
closed = 1;
nodes = (
(208,350,l),
(258,634,l),
(357,634,l),
(369,700,l),
(96,700,l),
(84,634,l),
(182,634,l),
(132,350,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
10 7 2 3 3 5 1 76 0 3 5 2 5 3 2 128 8 4 2 2 2 132 6 1 2 0 5 5 0 87 6 1 2 0 0 5 95 7 1 5 0 5 79 17 17 17 17 18 18 17 18 16 9 6 31
CALL[ ]	/* CallFunction */";
};
width = 732;
}
);
note = trademark;
unicode = 8482;
},
{
glyphname = degree;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(290,435,o),
(370,512,o),
(370,573,qs),
(370,636,o),
(290,712,o),
(231,712,qs),
(173,712,o),
(93,635,o),
(93,573,qs),
(93,512,o),
(173,435,o),
(231,435,qs)
);
},
{
closed = 1;
nodes = (
(206,507,o),
(169,544,o),
(169,574,qs),
(169,604,o),
(206,640,o),
(231,640,qs),
(257,640,o),
(294,604,o),
(294,574,qs),
(294,544,o),
(257,507,o),
(231,507,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 348;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(287,444,o),
(364,519,o),
(364,577,qs),
(364,638,o),
(288,712,o),
(232,712,qs),
(176,712,o),
(100,636,o),
(100,577,qs),
(100,518,o),
(176,444,o),
(231,444,qs)
);
},
{
closed = 1;
nodes = (
(205,506,o),
(165,544,o),
(165,578,qs),
(165,612,o),
(206,650,o),
(232,650,qs),
(259,650,o),
(298,612,o),
(298,578,qs),
(298,544,o),
(258,506,o),
(231,506,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 348;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(290,432,o),
(371,509,o),
(371,572,qs),
(371,635,o),
(291,712,o),
(231,712,qs),
(172,712,o),
(91,634,o),
(91,572,qs),
(91,509,o),
(172,432,o),
(230,432,qs)
);
},
{
closed = 1;
nodes = (
(205,507,o),
(170,543,o),
(170,572,qs),
(170,602,o),
(206,637,o),
(231,637,qs),
(257,637,o),
(293,602,o),
(293,572,qs),
(293,543,o),
(256,507,o),
(230,507,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 348;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(293,426,o),
(375,504,o),
(375,569,qs),
(375,634,o),
(293,712,o),
(230,712,qs),
(170,712,o),
(86,633,o),
(86,569,qs),
(86,505,o),
(170,426,o),
(230,426,qs)
);
},
{
closed = 1;
nodes = (
(206,508,o),
(172,542,o),
(172,569,qs),
(172,596,o),
(205,630,o),
(230,630,qs),
(255,630,o),
(290,596,o),
(290,569,qs),
(290,542,o),
(255,508,o),
(230,508,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 348;
}
);
note = degree;
unicode = 176;
},
{
glyphname = bar;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,-100,l),
(256,720,l),
(150,720,l),
(5,-100,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 134 0 0 0 33 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 0 1 0 133 0 1 1 118
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 239;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(97,-100,l),
(242,720,l),
(158,720,l),
(13,-100,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 134 0 0 0 33 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 0 1 0 133 0 1 1 118
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 233;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(116,-100,l),
(261,720,l),
(147,720,l),
(2,-100,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 134 0 0 0 33 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 0 1 0 133 0 1 1 118
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 241;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(125,-100,l),
(270,720,l),
(142,720,l),
(-3,-100,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 134 0 0 0 33 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 0 1 0 133 0 1 1 118
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 245;
}
);
note = bar;
unicode = 124;
},
{
glyphname = brokenbar;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(198,391,l),
(256,720,l),
(150,720,l),
(92,391,l)
);
},
{
closed = 1;
nodes = (
(111,-100,l),
(170,230,l),
(64,230,l),
(5,-100,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 0 3 2 3 99 0 1 1 0 95 0 0 0 33 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 239;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(183,387,l),
(242,720,l),
(158,720,l),
(99,387,l)
);
},
{
closed = 1;
nodes = (
(97,-100,l),
(156,233,l),
(72,233,l),
(13,-100,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 0 3 2 3 99 0 1 1 0 95 0 0 0 33 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 233;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(202,392,l),
(261,720,l),
(147,720,l),
(89,392,l)
);
},
{
closed = 1;
nodes = (
(116,-100,l),
(174,228,l),
(61,228,l),
(2,-100,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 0 3 2 3 99 0 1 1 0 95 0 0 0 33 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 241;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(212,394,l),
(270,720,l),
(142,720,l),
(84,394,l)
);
},
{
closed = 1;
nodes = (
(125,-100,l),
(183,226,l),
(55,226,l),
(-3,-100,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 0 3 2 3 99 0 1 1 0 95 0 0 0 33 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 245;
}
);
note = brokenbar;
unicode = 166;
},
{
glyphname = dagger;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(233,-261,l),
(352,476,l),
(546,468,l),
(561,551,l),
(364,541,l),
(417,783,l),
(311,783,l),
(280,541,l),
(86,551,l),
(72,468,l),
(268,476,l),
(127,-261,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 1 2 133 0 5 0 5 134 3 1 1 0 0 1 87 3 1 1 1 0 96 4 1 0 1 0 80 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 552;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(212,-259,l),
(335,488,l),
(525,481,l),
(537,548,l),
(345,540,l),
(395,780,l),
(312,780,l),
(278,540,l),
(89,548,l),
(77,481,l),
(269,488,l),
(128,-259,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 1 2 133 0 5 0 5 134 3 1 1 0 0 1 87 3 1 1 1 0 96 4 1 0 1 0 80 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 531;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(240,-262,l),
(358,472,l),
(553,463,l),
(569,551,l),
(370,541,l),
(424,783,l),
(311,783,l),
(280,541,l),
(85,551,l),
(70,463,l),
(268,472,l),
(127,-262,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 1 2 133 0 5 0 5 134 3 1 1 0 0 1 87 3 1 1 1 0 96 4 1 0 1 0 80 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 559;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(254,-263,l),
(369,464,l),
(567,454,l),
(585,553,l),
(383,542,l),
(439,785,l),
(310,785,l),
(281,542,l),
(83,553,l),
(66,454,l),
(267,464,l),
(126,-263,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 1 2 133 0 5 0 5 134 3 1 1 0 0 1 87 3 1 1 1 0 96 4 1 0 1 0 80 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = dagger;
unicode = 8224;
},
{
glyphname = uni2113;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,-100,l),
(257,720,l),
(151,720,l),
(5,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 240;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(97,-100,l),
(243,720,l),
(159,720,l),
(13,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 234;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(116,-100,l),
(262,720,l),
(148,720,l),
(2,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 242;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(125,-100,l),
(271,720,l),
(143,720,l),
(-3,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 246;
}
);
note = uni2113;
unicode = 8467;
},
{
glyphname = daggerdbl;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(232,-261,l),
(265,-19,l),
(459,-28,l),
(474,55,l),
(276,46,l),
(353,476,l),
(546,468,l),
(561,551,l),
(364,541,l),
(417,783,l),
(311,783,l),
(280,541,l),
(86,551,l),
(72,468,l),
(268,476,l),
(192,46,l),
(-1,55,l),
(-16,-28,l),
(181,-19,l),
(127,-261,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 1 0 95 8 1 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 18 17 17 17 17 17 17 17 17 16 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 553;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(211,-259,l),
(246,-19,l),
(436,-26,l),
(448,41,l),
(255,33,l),
(336,488,l),
(525,481,l),
(537,548,l),
(345,540,l),
(395,780,l),
(312,780,l),
(278,540,l),
(89,548,l),
(77,481,l),
(269,488,l),
(188,33,l),
(0,41,l),
(-13,-26,l),
(180,-19,l),
(128,-259,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 1 0 95 8 1 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 18 17 17 17 17 17 17 17 17 16 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 532;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(239,-262,l),
(271,-20,l),
(467,-29,l),
(483,59,l),
(283,50,l),
(358,472,l),
(553,463,l),
(569,551,l),
(370,541,l),
(424,783,l),
(311,783,l),
(280,541,l),
(85,551,l),
(70,463,l),
(268,472,l),
(193,50,l),
(-1,59,l),
(-18,-29,l),
(181,-20,l),
(127,-262,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79 19 18 17 17 17 17 17 17 17 17 16 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 560;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(253,-263,l),
(284,-20,l),
(482,-31,l),
(500,68,l),
(297,58,l),
(369,464,l),
(567,454,l),
(585,553,l),
(383,542,l),
(438,785,l),
(310,785,l),
(281,542,l),
(83,553,l),
(66,454,l),
(267,464,l),
(195,58,l),
(-2,68,l),
(-20,-31,l),
(182,-20,l),
(126,-263,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79 19 18 17 17 17 17 17 17 17 17 16 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 574;
}
);
note = daggerdbl;
unicode = 8225;
},
{
glyphname = estimated;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(497,-7,o),
(654,136,q),
(619,185,l),
(545,123,o),
(416,61,o),
(344,61,qs),
(280,61,o),
(192,104,o),
(160,147,q),
(191,316,l),
(715,316,l),
(726,377,ls),
(731,403,o),
(731,437,qs),
(731,506,o),
(673,627,o),
(545,703,o),
(448,703,qs),
(308,703,o),
(124,551,o),
(41,343,o),
(41,257,qs),
(41,184,o),
(104,65,o),
(234,-7,o),
(332,-7,qs)
);
},
{
closed = 1;
nodes = (
(231,549,l),
(314,636,o),
(436,636,qs),
(554,636,o),
(605,559,q),
(574,384,l),
(203,384,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
27 1 5 4 23 22 16 3 2 1 2 76 0 0 0 4 5 0 4 105 7 1 5 0 1 2 5 1 103 0 2 3 3 2 89 0 2 2 3 97 6 1 3 2 3 81 26 26 0 0 26 32 26 32 30 28 0 25 0 24 35 22 38 8 6 25
CALL[ ]	/* CallFunction */";
};
width = 749;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(503,-7,o),
(660,137,q),
(628,179,l),
(551,113,o),
(422,50,o),
(349,50,qs),
(279,50,o),
(186,98,o),
(153,148,q),
(184,314,l),
(720,314,l),
(731,375,ls),
(736,410,o),
(736,435,qs),
(736,503,o),
(678,623,o),
(551,699,o),
(454,699,qs),
(316,699,o),
(134,550,o),
(49,343,o),
(49,256,qs),
(49,183,o),
(111,64,o),
(242,-7,o),
(339,-7,qs)
);
},
{
closed = 1;
nodes = (
(223,542,l),
(310,642,o),
(444,642,qs),
(507,642,o),
(598,596,o),
(622,553,q),
(591,376,l),
(194,376,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
27 1 5 4 23 22 16 3 2 1 2 76 0 0 0 4 5 0 4 105 7 1 5 0 1 2 5 1 103 0 2 3 3 2 89 0 2 2 3 97 6 1 3 2 3 81 26 26 0 0 26 33 26 33 31 29 0 25 0 24 35 22 38 8 6 25
CALL[ ]	/* CallFunction */";
};
width = 762;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(495,-7,o),
(652,136,q),
(615,187,l),
(544,125,o),
(414,64,o),
(342,64,qs),
(280,64,o),
(194,105,o),
(162,147,q),
(193,316,l),
(713,316,l),
(724,378,ls),
(729,404,o),
(729,438,qs),
(729,507,o),
(670,628,o),
(543,704,o),
(445,704,qs),
(304,704,o),
(121,551,o),
(38,342,o),
(38,257,qs),
(38,184,o),
(101,65,o),
(232,-7,o),
(330,-7,qs)
);
},
{
closed = 1;
nodes = (
(234,551,l),
(315,633,o),
(433,633,qs),
(549,633,o),
(599,560,q),
(568,387,l),
(205,387,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
27 1 5 4 23 22 16 3 2 1 2 76 0 0 0 4 5 0 4 105 7 1 5 0 1 2 5 1 103 0 2 3 3 2 89 0 2 2 3 97 6 1 3 2 3 81 26 26 0 0 26 32 26 32 30 28 0 25 0 24 35 22 38 8 6 25
CALL[ ]	/* CallFunction */";
};
width = 744;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(490,-7,o),
(648,135,q),
(609,191,l),
(540,131,o),
(410,71,o),
(339,71,qs),
(281,71,o),
(198,108,o),
(167,146,q),
(198,317,l),
(709,317,l),
(721,379,ls),
(726,405,o),
(726,439,qs),
(726,508,o),
(667,630,o),
(539,706,o),
(441,706,qs),
(298,706,o),
(114,551,o),
(33,342,o),
(33,258,qs),
(33,185,o),
(95,65,o),
(226,-7,o),
(325,-7,qs)
);
},
{
closed = 1;
nodes = (
(239,555,l),
(316,629,o),
(428,629,qs),
(537,629,o),
(587,564,q),
(557,392,l),
(211,392,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
27 1 5 4 23 22 16 3 2 1 2 76 0 0 0 4 5 0 4 105 7 1 5 0 1 2 5 1 103 0 2 3 3 2 89 0 2 2 3 97 6 1 3 2 3 81 26 26 0 0 26 32 26 32 30 28 0 25 0 24 35 22 38 8 6 25
CALL[ ]	/* CallFunction */";
};
width = 735;
}
);
note = estimated;
unicode = 8494;
},
{
glyphname = at.case;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(513,-84,o),
(629,-62,o),
(674,-42,q),
(662,31,l),
(574,-8,o),
(473,-8,qs),
(380,-8,o),
(239,64,o),
(163,194,o),
(163,278,qs),
(163,390,o),
(281,587,o),
(483,707,o),
(603,707,qs),
(695,707,o),
(833,643,o),
(909,522,o),
(909,441,qs),
(909,396,o),
(882,289,o),
(823,211,o),
(778,211,qs),
(754,211,o),
(729,236,o),
(729,259,qs),
(730,268,o),
(731,277,qs),
(781,557,l),
(687,557,l),
(677,500,l),
(659,534,o),
(592,567,o),
(547,567,qs),
(476,567,o),
(362,491,o),
(297,368,o),
(297,300,qs),
(297,222,o),
(389,125,o),
(469,125,qs),
(563,125,o),
(637,208,q),
(646,169,o),
(704,127,o),
(749,127,qs),
(826,127,o),
(936,226,o),
(992,376,o),
(992,451,qs),
(992,551,o),
(896,701,o),
(725,782,o),
(615,782,qs),
(466,782,o),
(221,638,o),
(80,398,o),
(80,262,qs),
(80,160,o),
(172,3,o),
(343,-84,o),
(459,-84,qs)
);
},
{
closed = 1;
nodes = (
(452,209,o),
(393,268,o),
(393,317,qs),
(393,362,o),
(434,438,o),
(506,484,o),
(549,484,qs),
(599,484,o),
(657,424,o),
(657,376,qs),
(657,332,o),
(617,255,o),
(546,209,o),
(501,209,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
30 1 9 3 35 1 5 9 18 1 1 5 56 1 7 1 57 1 8 7 5 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
30 1 9 4 35 1 5 9 18 1 1 5 56 1 7 1 57 1 8 7 5 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 6 3 0 6 105 4 1 3 0 9 5 3 9 105 12 10 2 5 2 1 1 7 5 1 106 0 7 8 8 7 89 0 7 7 8 97 11 1 8 7 8 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 4 3 9 3 4 9 128 0 0 0 6 3 0 6 105 0 3 0 9 5 3 9 105 12 10 2 5 2 1 1 7 5 1 106 0 7 8 8 7 89 0 7 7 8 97 11 1 8 7 8 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
61 61 0 0 61 74 61 73 68 66 0 60 0 59 38 38 37 19 37 35 38 38 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1032;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(514,-84,o),
(626,-63,o),
(671,-45,q),
(661,15,l),
(575,-22,o),
(473,-22,qs),
(380,-22,o),
(234,51,o),
(152,185,o),
(152,275,qs),
(152,391,o),
(274,597,o),
(484,721,o),
(608,721,qs),
(704,721,o),
(848,654,o),
(926,529,o),
(926,444,qs),
(926,395,o),
(897,281,o),
(833,201,o),
(784,201,qs),
(757,201,o),
(728,231,o),
(728,257,qs),
(729,266,o),
(730,275,qs),
(779,553,l),
(699,553,l),
(689,498,l),
(648,563,o),
(556,563,qs),
(483,563,o),
(367,489,o),
(303,368,o),
(303,300,qs),
(303,222,o),
(397,128,o),
(478,128,qs),
(531,128,o),
(613,172,o),
(649,208,q),
(658,170,o),
(714,130,o),
(757,130,qs),
(835,130,o),
(943,231,o),
(995,380,o),
(995,452,qs),
(995,552,o),
(898,702,o),
(727,782,o),
(618,782,qs),
(469,782,o),
(223,638,o),
(82,398,o),
(82,261,qs),
(82,157,o),
(176,1,o),
(348,-84,o),
(462,-84,qs)
);
},
{
closed = 1;
nodes = (
(450,200,o),
(386,262,o),
(386,315,qs),
(386,360,o),
(428,441,o),
(505,492,o),
(554,492,qs),
(609,492,o),
(671,430,o),
(671,378,qs),
(671,332,o),
(629,250,o),
(553,200,o),
(503,200,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
30 1 9 3 35 18 2 5 9 56 1 7 1 57 1 8 7 4 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
30 1 9 4 35 18 2 5 9 56 1 7 1 57 1 8 7 4 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 6 3 0 6 105 4 1 3 0 9 5 3 9 105 12 10 2 5 2 1 1 7 5 1 106 0 7 8 8 7 89 0 7 7 8 97 11 1 8 7 8 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 4 3 9 3 4 9 128 0 0 0 6 3 0 6 105 0 3 0 9 5 3 9 105 12 10 2 5 2 1 1 7 5 1 106 0 7 8 8 7 89 0 7 7 8 97 11 1 8 7 8 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
61 61 0 0 61 74 61 73 68 66 0 60 0 59 38 38 37 18 37 36 38 38 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1034;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(513,-84,o),
(630,-61,o),
(675,-41,q),
(662,36,l),
(577,-3,o),
(472,-3,qs),
(379,-3,o),
(241,68,o),
(167,196,o),
(167,279,qs),
(167,389,o),
(283,584,o),
(482,702,o),
(601,702,qs),
(691,702,o),
(828,639,o),
(903,520,o),
(903,439,qs),
(903,395,o),
(877,290,o),
(820,214,o),
(776,214,qs),
(753,214,o),
(729,238,o),
(729,260,q),
(731,277,l),
(781,558,l),
(683,558,l),
(673,501,l),
(655,535,o),
(588,568,o),
(544,568,qs),
(473,568,o),
(359,491,o),
(294,367,o),
(294,299,qs),
(294,222,o),
(386,123,o),
(465,123,qs),
(560,123,o),
(633,207,q),
(642,168,o),
(700,125,o),
(746,125,qs),
(823,125,o),
(934,223,o),
(991,374,o),
(991,451,qs),
(991,550,o),
(896,700,o),
(724,782,o),
(614,782,qs),
(465,782,o),
(220,637,o),
(79,398,o),
(79,262,qs),
(79,160,o),
(170,4,o),
(341,-84,o),
(458,-84,qs)
);
},
{
closed = 1;
nodes = (
(452,212,o),
(395,270,o),
(395,318,qs),
(395,362,o),
(436,437,o),
(505,481,o),
(547,481,qs),
(596,481,o),
(652,422,o),
(652,375,qs),
(652,332,o),
(613,257,o),
(543,212,o),
(500,212,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
30 1 9 3 34 1 5 9 18 1 1 5 55 1 7 1 56 1 8 7 5 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
30 1 9 4 34 1 5 9 18 1 1 5 55 1 7 1 56 1 8 7 5 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 6 3 0 6 105 4 1 3 0 9 5 3 9 105 12 10 2 5 2 1 1 7 5 1 106 0 7 8 8 7 89 0 7 7 8 97 11 1 8 7 8 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 4 3 9 3 4 9 128 0 0 0 6 3 0 6 105 0 3 0 9 5 3 9 105 12 10 2 5 2 1 1 7 5 1 106 0 7 8 8 7 89 0 7 7 8 97 11 1 8 7 8 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
60 60 0 0 60 73 60 72 67 65 0 59 0 58 38 38 36 19 37 35 38 38 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1031;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(512,-84,o),
(632,-60,o),
(677,-39,q),
(663,47,l),
(575,6,o),
(472,6,qs),
(379,6,o),
(244,77,o),
(174,202,o),
(174,281,qs),
(174,388,o),
(287,578,o),
(481,693,o),
(597,693,qs),
(684,693,o),
(818,631,o),
(892,516,o),
(892,437,qs),
(892,396,o),
(867,295,o),
(813,221,o),
(772,221,qs),
(730,221,o),
(730,261,q),
(732,278,l),
(782,561,l),
(675,561,l),
(665,502,l),
(648,537,o),
(581,571,o),
(538,571,qs),
(469,571,o),
(355,493,o),
(290,367,o),
(290,299,qs),
(290,221,o),
(380,121,o),
(459,121,qs),
(556,121,o),
(625,207,q),
(634,166,o),
(694,123,o),
(741,123,qs),
(818,123,o),
(930,219,o),
(989,371,o),
(989,450,qs),
(989,549,o),
(894,699,o),
(723,782,o),
(612,782,qs),
(463,782,o),
(218,637,o),
(77,398,o),
(77,263,qs),
(77,162,o),
(167,5,o),
(338,-84,o),
(456,-84,qs)
);
},
{
closed = 1;
nodes = (
(453,218,o),
(400,274,o),
(400,319,qs),
(400,364,o),
(440,435,o),
(506,475,o),
(544,475,qs),
(589,475,o),
(642,418,o),
(642,373,qs),
(642,331,o),
(605,260,o),
(539,218,o),
(499,218,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
30 1 9 3 34 1 5 9 18 1 1 5 54 1 7 1 55 1 8 7 5 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
30 1 9 4 34 1 5 9 18 1 1 5 54 1 7 1 55 1 8 7 5 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 6 3 0 6 105 4 1 3 0 9 5 3 9 105 12 10 2 5 2 1 1 7 5 1 106 0 7 8 8 7 89 0 7 7 8 97 11 1 8 7 8 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 4 3 9 3 4 9 128 0 0 0 6 3 0 6 105 0 3 0 9 5 3 9 105 12 10 2 5 2 1 1 7 5 1 106 0 7 8 8 7 89 0 7 7 8 97 11 1 8 7 8 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
59 59 0 0 59 72 59 71 66 64 0 58 0 57 38 38 35 19 37 35 38 38 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1029;
}
);
note = at.case;
},
{
glyphname = registered.case;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (36,204);
ref = registered;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 4
PUSHB[ ]	/* 1 value pushed */
204
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 357;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
pos = (36,204);
ref = registered;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 4
PUSHB[ ]	/* 1 value pushed */
204
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 372;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
pos = (36,204);
ref = registered;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 4
PUSHB[ ]	/* 1 value pushed */
204
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 352;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
pos = (36,204);
ref = registered;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 4
PUSHB[ ]	/* 1 value pushed */
204
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 342;
}
);
note = registered.case;
},
{
glyphname = uni0308;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (216,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,583,o),
(413,624,o),
(413,654,qs),
(413,683,o),
(372,723,o),
(343,723,qs),
(313,723,o),
(272,683,o),
(272,654,qs),
(272,624,o),
(313,583,o),
(343,583,qs)
);
},
{
closed = 1;
nodes = (
(173,583,o),
(214,624,o),
(214,654,qs),
(214,683,o),
(173,723,o),
(143,723,qs),
(113,723,o),
(73,683,o),
(73,654,qs),
(73,624,o),
(113,583,o),
(143,583,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (192,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(333,606,o),
(367,639,o),
(367,664,qs),
(367,688,o),
(333,720,o),
(309,720,qs),
(284,720,o),
(251,688,o),
(251,664,qs),
(251,639,o),
(284,606,o),
(309,606,qs)
);
},
{
closed = 1;
nodes = (
(156,606,o),
(190,639,o),
(190,664,qs),
(190,688,o),
(156,720,o),
(132,720,qs),
(107,720,o),
(74,688,o),
(74,664,qs),
(74,639,o),
(107,606,o),
(132,606,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (223,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(385,575,o),
(428,618,o),
(428,650,qs),
(428,682,o),
(386,724,o),
(354,724,qs),
(322,724,o),
(279,682,o),
(279,650,qs),
(279,618,o),
(322,575,o),
(354,575,qs)
);
},
{
closed = 1;
nodes = (
(178,575,o),
(221,618,o),
(221,650,qs),
(221,682,o),
(179,724,o),
(147,724,qs),
(115,724,o),
(72,682,o),
(72,650,qs),
(72,618,o),
(115,575,o),
(147,575,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (239,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(411,560,o),
(459,608,o),
(459,643,qs),
(459,678,o),
(411,726,o),
(376,726,qs),
(341,726,o),
(293,678,o),
(293,643,qs),
(293,608,o),
(341,560,o),
(376,560,qs)
);
},
{
closed = 1;
nodes = (
(189,560,o),
(237,608,o),
(237,643,qs),
(237,678,o),
(189,726,o),
(154,726,qs),
(119,726,o),
(71,678,o),
(71,643,qs),
(71,608,o),
(119,560,o),
(154,560,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0308;
unicode = 776;
},
{
glyphname = uni0307;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (116,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,583,o),
(214,624,o),
(214,654,qs),
(214,683,o),
(173,723,o),
(143,723,qs),
(113,723,o),
(73,683,o),
(73,654,qs),
(73,624,o),
(113,583,o),
(143,583,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (103,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(156,606,o),
(190,639,o),
(190,664,qs),
(190,688,o),
(156,720,o),
(132,720,qs),
(107,720,o),
(74,688,o),
(74,664,qs),
(74,639,o),
(107,606,o),
(132,606,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (120,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(178,575,o),
(221,618,o),
(221,650,qs),
(221,682,o),
(179,724,o),
(147,724,qs),
(115,724,o),
(72,682,o),
(72,650,qs),
(72,618,o),
(115,575,o),
(147,575,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (128,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(189,560,o),
(237,608,o),
(237,643,qs),
(237,678,o),
(189,726,o),
(154,726,qs),
(119,726,o),
(71,678,o),
(71,643,qs),
(71,608,o),
(119,560,o),
(154,560,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0307;
unicode = 775;
},
{
glyphname = gravecomb;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (153,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(284,625,l),
(89,749,l),
(73,661,l),
(271,548,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (148,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(275,620,l),
(88,747,l),
(75,674,l),
(264,557,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (154,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(287,626,l),
(89,750,l),
(72,656,l),
(273,545,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (157,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(293,629,l),
(89,751,l),
(70,647,l),
(277,539,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = gravecomb;
unicode = 768;
},
{
glyphname = acutecomb;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (153,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(291,658,l),
(307,749,l),
(67,625,l),
(53,545,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (149,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(286,668,l),
(299,747,l),
(66,620,l),
(55,551,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (154,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(293,654,l),
(310,750,l),
(67,626,l),
(52,543,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (157,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(296,647,l),
(315,751,l),
(67,629,l),
(51,539,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = acutecomb;
unicode = 769;
},
{
glyphname = uni030B;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (176,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,547,l),
(405,711,l),
(316,711,l),
(211,547,l)
);
},
{
closed = 1;
nodes = (
(122,547,l),
(239,711,l),
(150,711,l),
(53,547,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (160,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(255,549,l),
(370,698,l),
(297,698,l),
(199,549,l)
);
},
{
closed = 1;
nodes = (
(110,549,l),
(218,698,l),
(145,698,l),
(53,549,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (181,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(286,546,l),
(417,715,l),
(322,715,l),
(214,546,l)
);
},
{
closed = 1;
nodes = (
(125,546,l),
(245,715,l),
(152,715,l),
(52,546,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (192,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(302,544,l),
(440,723,l),
(335,723,l),
(222,544,l)
);
},
{
closed = 1;
nodes = (
(133,544,l),
(259,723,l),
(155,723,l),
(52,544,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni030B;
unicode = 779;
},
{
glyphname = uni030C.alt;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _topright;
pos = (132,992);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(125,546,l),
(236,700,l),
(129,700,l),
(53,546,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _topright;
pos = (132,992);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(113,546,l),
(223,700,l),
(129,700,l),
(53,546,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _topright;
pos = (132,992);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(128,546,l),
(240,700,l),
(129,700,l),
(53,546,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _topright;
pos = (132,992);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(136,546,l),
(249,700,l),
(129,700,l),
(53,546,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030C.alt;
},
{
glyphname = uni0302;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (186,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(213,650,l),
(340,567,l),
(354,649,l),
(227,730,l),
(71,649,l),
(57,567,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (181,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(212,664,l),
(334,580,l),
(346,652,l),
(223,733,l),
(72,652,l),
(60,580,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (187,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(213,645,l),
(342,563,l),
(357,648,l),
(228,728,l),
(71,648,l),
(56,563,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (190,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(214,636,l),
(346,554,l),
(362,646,l),
(230,726,l),
(70,646,l),
(54,554,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0302;
unicode = 770;
},
{
glyphname = uni030C;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (186,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(354,651,l),
(368,730,l),
(212,645,l),
(85,730,l),
(71,651,l),
(199,570,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (181,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(348,668,l),
(360,733,l),
(208,649,l),
(86,733,l),
(74,668,l),
(197,586,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (187,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(356,645,l),
(371,728,l),
(213,644,l),
(85,728,l),
(70,645,l),
(199,565,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (190,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(360,634,l),
(376,726,l),
(215,641,l),
(84,726,l),
(68,634,l),
(200,554,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030C;
unicode = 780;
},
{
glyphname = uni0306;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (193,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,566,o),
(365,643,o),
(377,707,qs),
(380,722,l),
(320,722,l),
(314,685,o),
(265,647,o),
(218,647,qs),
(141,647,o),
(141,703,qs),
(141,708,o),
(143,722,q),
(84,722,l),
(79,700,o),
(79,677,qs),
(79,626,o),
(144,566,o),
(204,566,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
2 1 0 1 0 133 0 1 3 3 1 89 0 1 1 3 97 4 1 3 1 3 81 0 0 0 17 0 16 18 35 20 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (185,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(266,588,o),
(351,661,o),
(364,718,qs),
(367,732,l),
(315,732,l),
(301,654,o),
(212,654,qs),
(134,654,o),
(134,712,q),
(135,722,o),
(136,732,q),
(86,732,l),
(81,712,o),
(81,691,qs),
(81,644,o),
(142,588,o),
(200,588,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
7 1 1 0 1 76 2 1 0 1 0 133 0 1 3 3 1 89 0 1 1 3 97 4 1 3 1 3 81 0 0 0 16 0 15 17 35 20 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (195,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(275,559,o),
(369,638,o),
(381,703,qs),
(384,719,l),
(322,719,l),
(315,682,o),
(267,645,o),
(220,645,qs),
(143,645,o),
(143,700,q),
(145,719,l),
(83,719,l),
(78,695,o),
(78,672,qs),
(78,619,o),
(144,559,o),
(205,559,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
6 1 1 0 1 76 2 1 0 1 0 133 0 1 3 3 1 89 0 1 1 3 97 4 1 3 1 3 81 0 0 0 16 0 15 18 34 20 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (200,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(279,544,o),
(378,626,o),
(390,695,qs),
(393,712,l),
(325,712,l),
(319,677,o),
(271,640,o),
(224,640,qs),
(148,640,o),
(148,694,q),
(150,712,l),
(82,712,l),
(76,688,o),
(76,662,qs),
(76,607,o),
(145,544,o),
(207,544,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
6 1 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
2 1 0 1 1 0 112 0 1 3 3 1 89 0 1 1 3 98 4 1 3 1 3 82
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 1 0 133 0 1 3 3 1 89 0 1 1 3 98 4 1 3 1 3 82
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 16 0 15 18 34 20 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0306;
unicode = 774;
},
{
glyphname = uni030A;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (156,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,551,o),
(294,610,o),
(294,659,qs),
(294,707,o),
(231,766,o),
(184,766,qs),
(138,766,o),
(75,707,o),
(75,659,qs),
(75,610,o),
(138,551,o),
(184,551,qs)
);
},
{
closed = 1;
nodes = (
(161,602,o),
(130,634,o),
(130,659,qs),
(130,684,o),
(161,715,o),
(184,715,qs),
(208,715,o),
(239,684,o),
(239,659,qs),
(239,634,o),
(208,602,o),
(184,602,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (151,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(225,557,o),
(285,613,o),
(285,660,qs),
(285,707,o),
(225,763,o),
(180,763,qs),
(136,763,o),
(75,707,o),
(75,660,qs),
(75,613,o),
(136,557,o),
(180,557,qs)
);
},
{
closed = 1;
nodes = (
(156,600,o),
(123,633,o),
(123,660,qs),
(123,687,o),
(156,719,o),
(180,719,qs),
(205,719,o),
(237,687,o),
(237,660,qs),
(237,633,o),
(204,600,o),
(180,600,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (157,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(233,549,o),
(296,609,o),
(296,658,qs),
(296,707,o),
(233,767,o),
(185,767,qs),
(139,767,o),
(74,707,o),
(74,658,qs),
(74,609,o),
(139,549,o),
(185,549,qs)
);
},
{
closed = 1;
nodes = (
(162,602,o),
(132,633,o),
(132,658,qs),
(132,683,o),
(162,714,o),
(185,714,qs),
(209,714,o),
(239,683,o),
(239,658,qs),
(239,633,o),
(208,602,o),
(185,602,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (160,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(236,545,o),
(302,606,o),
(302,657,qs),
(302,708,o),
(236,769,o),
(187,769,qs),
(140,769,o),
(74,707,o),
(74,657,qs),
(74,607,o),
(140,545,o),
(187,545,qs)
);
},
{
closed = 1;
nodes = (
(166,603,o),
(136,633,o),
(136,657,qs),
(136,681,o),
(165,711,o),
(187,711,qs),
(211,711,o),
(240,682,o),
(240,657,qs),
(240,633,o),
(210,603,o),
(187,603,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni030A;
unicode = 778;
},
{
glyphname = tildecomb;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (208,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(324,591,o),
(390,648,o),
(408,703,q),
(349,703,l),
(334,658,o),
(298,658,qs),
(283,658,o),
(262,669,o),
(248,680,qs),
(231,693,o),
(206,705,o),
(187,705,qs),
(144,705,o),
(79,649,o),
(61,592,q),
(120,592,l),
(135,637,o),
(170,637,qs),
(185,637,o),
(205,627,o),
(221,615,qs),
(236,603,o),
(262,591,o),
(281,591,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 23 0 22 17 36 34 17 36 7 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (195,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(308,602,o),
(368,655,o),
(383,703,q),
(334,703,l),
(327,681,o),
(300,658,o),
(283,658,qs),
(268,658,o),
(249,669,o),
(234,680,qs),
(218,693,o),
(195,705,o),
(176,705,qs),
(137,705,o),
(78,654,o),
(63,604,q),
(112,604,l),
(127,649,o),
(162,649,qs),
(177,649,o),
(196,639,o),
(211,627,qs),
(225,615,o),
(250,602,o),
(269,602,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 24 0 23 18 36 34 17 36 7 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (212,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(329,587,o),
(398,646,o),
(416,703,q),
(354,703,l),
(339,658,o),
(303,658,qs),
(288,658,o),
(267,669,o),
(251,680,qs),
(235,692,o),
(210,704,o),
(191,704,qs),
(147,704,o),
(79,646,o),
(60,588,q),
(122,588,l),
(137,633,o),
(173,633,qs),
(188,633,o),
(210,622,o),
(224,611,qs),
(240,599,o),
(266,587,o),
(285,587,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 23 0 22 17 36 34 17 36 7 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (220,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(340,579,o),
(412,641,o),
(432,703,q),
(364,703,l),
(349,658,o),
(313,658,qs),
(298,658,o),
(277,668,o),
(260,680,qs),
(244,692,o),
(217,704,o),
(198,704,qs),
(151,704,o),
(80,642,o),
(59,580,q),
(127,580,l),
(142,625,o),
(178,625,qs),
(193,625,o),
(214,615,o),
(231,603,qs),
(247,591,o),
(274,579,o),
(293,579,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 23 0 22 17 36 34 17 36 7 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = tildecomb;
unicode = 771;
},
{
glyphname = uni0304;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (232,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(426,616,l),
(440,693,l),
(79,693,l),
(65,616,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (225,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(415,632,l),
(427,695,l),
(80,695,l),
(68,632,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (234,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(429,610,l),
(444,692,l),
(79,692,l),
(64,610,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (239,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(436,599,l),
(452,690,l),
(78,690,l),
(62,599,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0304;
unicode = 772;
},
{
glyphname = uni0312;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (102,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(206,804,l),
(136,804,o),
(73,706,o),
(73,637,qs),
(73,616,o),
(76,595,q),
(171,595,l),
(186,684,l),
(136,684,l),
(139,698,ls),
(148,758,o),
(198,758,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
0 2 4 1 3 0 2 3 105 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 0 0 0 11 0 11 20 17 18 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (95,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(192,783,l),
(131,783,o),
(72,699,o),
(72,637,qs),
(72,616,o),
(75,595,q),
(156,595,l),
(170,672,l),
(125,672,l),
(127,686,ls),
(131,714,o),
(161,743,o),
(185,743,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
0 2 4 1 3 0 2 3 105 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 0 0 0 12 0 12 20 17 19 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (104,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(211,810,l),
(138,810,o),
(73,707,o),
(73,636,qs),
(73,616,o),
(76,595,q),
(175,595,l),
(191,687,l),
(140,687,l),
(142,702,ls),
(153,762,o),
(202,762,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
0 2 4 1 3 0 2 3 105 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 0 0 0 11 0 11 20 17 18 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (108,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(220,824,l),
(141,824,o),
(73,712,o),
(73,636,qs),
(73,616,o),
(76,595,q),
(185,595,l),
(202,695,l),
(147,695,l),
(150,710,ls),
(162,772,o),
(211,772,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
0 2 4 1 3 0 2 3 105 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 0 0 0 11 0 11 20 17 18 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0312;
unicode = 786;
},
{
glyphname = uni0326;
kernLeft = dotlessi;
kernRight = a;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _bottom;
pos = (12,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-86,-256,l),
(-16,-256,o),
(47,-158,o),
(47,-89,qs),
(47,-68,o),
(44,-47,q),
(-51,-47,l),
(-66,-136,l),
(-16,-136,l),
(-19,-150,ls),
(-28,-210,o),
(-78,-210,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 0 3 1 0 103 4 1 3 2 2 3 89 4 1 3 3 2 97 0 2 3 2 81 0 0 0 11 0 11 20 17 18 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (5,0);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(-86,-238,l),
(-25,-238,o),
(34,-154,o),
(34,-92,qs),
(34,-71,o),
(31,-50,q),
(-50,-50,l),
(-64,-127,l),
(-19,-127,l),
(-21,-141,ls),
(-25,-169,o),
(-55,-198,o),
(-79,-198,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 0 3 1 0 103 4 1 3 2 2 3 89 4 1 3 3 2 97 0 2 3 2 81 0 0 0 12 0 12 20 17 19 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (14,0);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(-87,-262,l),
(-14,-262,o),
(51,-159,o),
(51,-88,qs),
(51,-68,o),
(48,-47,q),
(-51,-47,l),
(-67,-139,l),
(-16,-139,l),
(-18,-154,ls),
(-29,-214,o),
(-78,-214,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 0 3 1 0 103 4 1 3 2 2 3 89 4 1 3 3 2 97 0 2 3 2 81 0 0 0 11 0 11 20 17 18 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (18,0);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(-87,-274,l),
(-8,-274,o),
(60,-162,o),
(60,-86,qs),
(60,-66,o),
(57,-45,q),
(-52,-45,l),
(-69,-145,l),
(-14,-145,l),
(-17,-160,ls),
(-29,-222,o),
(-78,-222,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 0 3 1 0 103 4 1 3 2 2 3 89 4 1 3 3 2 97 0 2 3 2 81 0 0 0 11 0 11 20 17 18 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0326;
unicode = 806;
},
{
glyphname = uni0327;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _bottom;
pos = (41,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,-261,ls),
(90,-261,o),
(175,-194,o),
(175,-137,qs),
(175,-97,o),
(113,-55,o),
(62,-56,q),
(75,17,l),
(7,17,l),
(-17,-115,l),
(38,-115,ls),
(93,-115,o),
(93,-148,qs),
(92,-172,o),
(55,-197,o),
(24,-197,qs),
(-78,-197,l),
(-89,-261,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 3 2 112 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 3 2 133 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 17 35 32 5 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (30,0);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(19,-259,ls),
(78,-259,o),
(158,-194,o),
(158,-140,qs),
(158,-102,o),
(96,-62,o),
(44,-63,q),
(58,17,l),
(2,17,l),
(-21,-113,l),
(28,-113,ls),
(89,-113,o),
(89,-149,qs),
(89,-177,o),
(49,-206,o),
(12,-206,qs),
(-80,-206,l),
(-89,-259,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 3 2 112 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 3 2 133 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 17 35 32 5 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (44,0);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(34,-262,ls),
(94,-262,o),
(181,-195,o),
(181,-136,qs),
(181,-95,o),
(118,-53,o),
(67,-54,q),
(80,17,l),
(8,17,l),
(-16,-116,l),
(41,-116,ls),
(94,-116,o),
(94,-148,qs),
(93,-171,o),
(57,-195,o),
(27,-195,qs),
(-78,-195,l),
(-90,-262,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 2 1 2 3 114 0 2 0 1 0 2 1 105 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 2 1 2 3 1 128 0 2 0 1 0 2 1 105 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 17 35 32 5 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (51,0);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(41,-263,ls),
(102,-263,o),
(192,-195,o),
(192,-134,qs),
(192,-92,o),
(128,-48,o),
(79,-50,q),
(91,17,l),
(11,17,l),
(-13,-118,l),
(48,-118,ls),
(96,-118,o),
(96,-147,qs),
(95,-168,o),
(61,-189,o),
(35,-189,qs),
(-77,-189,l),
(-90,-263,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 2 1 2 3 114 0 2 0 1 0 2 1 105 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 2 1 2 3 1 128 0 2 0 1 0 2 1 105 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 17 35 32 5 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0327;
unicode = 807;
},
{
glyphname = uni0328;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _ogonek;
pos = (159,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,-206,o),
(130,-193,q),
(141,-127,l),
(102,-142,o),
(70,-142,qs),
(47,-142,o),
(21,-122,o),
(21,-105,qs),
(21,-83,o),
(57,-46,o),
(100,-27,qs),
(159,0,l),
(144,52,l),
(90,30,ls),
(6,-4,o),
(-64,-80,o),
(-64,-126,qs),
(-64,-165,o),
(-3,-206,o),
(46,-206,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 33 values pushed */
16 7 6 3 0 74 0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 19 0 18 45 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _ogonek;
pos = (147,0);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(78,-203,o),
(117,-190,q),
(126,-134,l),
(90,-149,o),
(59,-149,qs),
(35,-149,o),
(6,-128,o),
(6,-109,qs),
(6,-63,o),
(84,-28,qs),
(147,0,l),
(134,43,l),
(77,20,ls),
(1,-11,o),
(-64,-83,o),
(-64,-127,qs),
(-64,-164,o),
(-6,-203,o),
(39,-203,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 33 values pushed */
15 7 6 3 0 74 0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 18 0 17 44 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _ogonek;
pos = (163,0);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(87,-208,o),
(134,-194,q),
(145,-125,l),
(106,-140,o),
(74,-140,qs),
(52,-140,o),
(26,-121,o),
(26,-104,qs),
(26,-82,o),
(62,-46,o),
(105,-27,qs),
(163,0,l),
(147,54,l),
(94,33,ls),
(7,-2,o),
(-64,-79,o),
(-64,-126,qs),
(-64,-166,o),
(-1,-208,o),
(48,-208,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 33 values pushed */
16 7 6 3 0 74 0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 19 0 18 45 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _ogonek;
pos = (171,0);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(95,-210,o),
(142,-196,q),
(155,-120,l),
(113,-135,o),
(81,-135,qs),
(60,-135,o),
(36,-117,o),
(36,-102,qs),
(36,-81,o),
(71,-46,o),
(115,-26,qs),
(171,0,l),
(153,60,l),
(103,40,ls),
(11,3,o),
(-64,-77,o),
(-64,-126,qs),
(-64,-168,o),
(0,-210,o),
(52,-210,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 33 values pushed */
16 7 6 3 0 74 0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 19 0 18 45 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0328;
unicode = 808;
},
{
glyphname = uni0308.case;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (252,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(406,772,o),
(447,812,o),
(447,842,qs),
(447,872,o),
(406,912,o),
(376,912,qs),
(346,912,o),
(306,872,o),
(306,842,qs),
(306,812,o),
(346,772,o),
(376,772,qs)
);
},
{
closed = 1;
nodes = (
(206,772,o),
(247,812,o),
(247,842,qs),
(247,872,o),
(206,912,o),
(177,912,qs),
(147,912,o),
(106,872,o),
(106,842,qs),
(106,812,o),
(147,772,o),
(177,772,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (228,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(363,775,o),
(397,808,o),
(397,833,qs),
(397,857,o),
(363,889,o),
(339,889,qs),
(314,889,o),
(281,857,o),
(281,833,qs),
(281,808,o),
(314,775,o),
(339,775,qs)
);
},
{
closed = 1;
nodes = (
(186,775,o),
(220,808,o),
(220,833,qs),
(220,857,o),
(186,889,o),
(162,889,qs),
(137,889,o),
(104,857,o),
(104,833,qs),
(104,808,o),
(137,775,o),
(162,775,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (259,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(420,770,o),
(463,814,o),
(463,845,qs),
(463,876,o),
(420,919,o),
(388,919,qs),
(357,919,o),
(314,877,o),
(314,845,qs),
(314,813,o),
(357,770,o),
(388,770,qs)
);
},
{
closed = 1;
nodes = (
(213,770,o),
(256,814,o),
(256,845,qs),
(256,876,o),
(213,919,o),
(181,919,qs),
(150,919,o),
(107,877,o),
(107,845,qs),
(107,813,o),
(150,770,o),
(181,770,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (275,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(448,768,o),
(496,816,o),
(496,851,qs),
(496,886,o),
(448,934,o),
(413,934,qs),
(378,934,o),
(330,886,o),
(330,851,qs),
(330,816,o),
(378,768,o),
(413,768,qs)
);
},
{
closed = 1;
nodes = (
(226,768,o),
(274,816,o),
(274,851,qs),
(274,886,o),
(226,934,o),
(191,934,qs),
(156,934,o),
(108,886,o),
(108,851,qs),
(108,816,o),
(156,768,o),
(191,768,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0308.case;
},
{
glyphname = uni0307.case;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (152,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(206,772,o),
(247,812,o),
(247,842,qs),
(247,872,o),
(206,912,o),
(177,912,qs),
(147,912,o),
(106,872,o),
(106,842,qs),
(106,812,o),
(147,772,o),
(177,772,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (139,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(186,775,o),
(220,808,o),
(220,833,qs),
(220,857,o),
(186,889,o),
(162,889,qs),
(137,889,o),
(104,857,o),
(104,833,qs),
(104,808,o),
(137,775,o),
(162,775,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (156,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(213,770,o),
(256,814,o),
(256,845,qs),
(256,876,o),
(213,919,o),
(181,919,qs),
(150,919,o),
(107,877,o),
(107,845,qs),
(107,813,o),
(150,770,o),
(181,770,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (164,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(226,768,o),
(274,816,o),
(274,851,qs),
(274,886,o),
(226,934,o),
(191,934,qs),
(156,934,o),
(108,886,o),
(108,851,qs),
(108,816,o),
(156,768,o),
(191,768,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0307.case;
},
{
glyphname = gravecomb.case;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (189,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(319,817,l),
(123,942,l),
(107,853,l),
(305,741,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (185,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(308,804,l),
(121,931,l),
(108,858,l),
(297,741,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (190,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(322,821,l),
(124,945,l),
(107,851,l),
(308,740,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (193,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(329,830,l),
(125,952,l),
(106,848,l),
(313,740,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = gravecomb.case;
},
{
glyphname = acutecomb.case;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (189,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(325,853,l),
(341,942,l),
(101,817,l),
(87,741,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (185,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(318,858,l),
(331,931,l),
(98,804,l),
(87,741,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (190,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(327,851,l),
(344,945,l),
(101,821,l),
(87,740,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (193,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(332,848,l),
(351,952,l),
(103,830,l),
(87,740,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = acutecomb.case;
},
{
glyphname = uni030B.case;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (242,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(315,751,l),
(441,915,l),
(352,915,l),
(247,751,l)
);
},
{
closed = 1;
nodes = (
(158,751,l),
(275,915,l),
(186,915,l),
(89,751,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (226,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(291,753,l),
(406,902,l),
(333,902,l),
(235,753,l)
);
},
{
closed = 1;
nodes = (
(146,753,l),
(254,902,l),
(181,902,l),
(89,753,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (247,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(322,750,l),
(453,919,l),
(358,919,l),
(250,750,l)
);
},
{
closed = 1;
nodes = (
(161,750,l),
(281,919,l),
(188,919,l),
(88,750,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (258,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(338,748,l),
(476,927,l),
(371,927,l),
(258,748,l)
);
},
{
closed = 1;
nodes = (
(169,748,l),
(295,927,l),
(191,927,l),
(88,748,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030B.case;
},
{
glyphname = uni030C.alt.case;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _topright;
pos = (83,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(125,546,l),
(236,700,l),
(129,700,l),
(53,546,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _topright;
pos = (85,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(113,546,l),
(223,700,l),
(129,700,l),
(53,546,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _topright;
pos = (82,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(128,546,l),
(240,700,l),
(129,700,l),
(53,546,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _topright;
pos = (81,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(136,546,l),
(249,700,l),
(129,700,l),
(53,546,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030C.alt.case;
},
{
glyphname = uni0302.case;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (221,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(245,834,l),
(372,751,l),
(386,830,l),
(258,911,l),
(103,830,l),
(89,751,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (216,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(241,839,l),
(363,755,l),
(375,821,l),
(252,902,l),
(101,821,l),
(89,755,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (223,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(246,832,l),
(374,750,l),
(389,833,l),
(260,913,l),
(103,833,l),
(88,750,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (226,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(248,829,l),
(380,747,l),
(396,839,l),
(264,919,l),
(104,839,l),
(88,747,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0302.case;
},
{
glyphname = uni030C.case;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (222,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(386,831,l),
(400,910,l),
(244,825,l),
(117,910,l),
(103,831,l),
(231,750,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (218,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(378,836,l),
(390,901,l),
(238,817,l),
(116,901,l),
(104,836,l),
(227,754,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (223,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(389,829,l),
(403,912,l),
(245,828,l),
(117,912,l),
(103,829,l),
(232,749,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (226,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(394,826,l),
(410,918,l),
(249,833,l),
(118,918,l),
(102,826,l),
(234,746,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030C.case;
},
{
glyphname = uni0306.case;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (229,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(306,753,o),
(399,830,o),
(411,894,qs),
(414,909,l),
(354,909,l),
(347,872,o),
(298,834,o),
(252,834,qs),
(175,834,o),
(175,890,qs),
(175,895,o),
(177,909,q),
(118,909,l),
(112,887,o),
(112,864,qs),
(112,813,o),
(177,753,o),
(237,753,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
2 1 0 1 0 133 0 1 3 3 1 89 0 1 1 3 97 4 1 3 1 3 81 0 0 0 17 0 16 18 35 20 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (221,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(296,757,o),
(381,830,o),
(394,887,qs),
(397,901,l),
(345,901,l),
(331,823,o),
(242,823,qs),
(164,823,o),
(164,881,q),
(165,891,o),
(166,901,q),
(116,901,l),
(111,881,o),
(111,860,qs),
(111,813,o),
(172,757,o),
(230,757,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
7 1 1 0 1 76 2 1 0 1 0 133 0 1 3 3 1 89 0 1 1 3 97 4 1 3 1 3 81 0 0 0 16 0 15 17 35 20 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (232,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(309,752,o),
(404,831,o),
(416,896,qs),
(419,912,l),
(356,912,l),
(350,875,o),
(302,838,o),
(255,838,qs),
(178,838,o),
(178,893,q),
(180,912,l),
(118,912,l),
(112,889,o),
(112,865,qs),
(112,813,o),
(178,752,o),
(239,752,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
6 1 1 0 1 76 2 1 0 1 0 133 0 1 3 3 1 89 0 1 1 3 97 4 1 3 1 3 81 0 0 0 16 0 15 18 34 20 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (237,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(316,749,o),
(415,831,o),
(427,900,qs),
(430,917,l),
(362,917,l),
(356,882,o),
(308,845,o),
(261,845,qs),
(185,845,o),
(185,899,q),
(187,917,l),
(119,917,l),
(113,893,o),
(113,867,qs),
(113,812,o),
(182,749,o),
(244,749,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
6 1 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
2 1 0 1 1 0 112 0 1 3 3 1 89 0 1 1 3 98 4 1 3 1 3 82
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 1 0 133 0 1 3 3 1 89 0 1 1 3 98 4 1 3 1 3 82
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 16 0 15 18 34 20 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0306.case;
},
{
glyphname = uni030A.case;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (191,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(267,756,o),
(329,815,o),
(329,864,qs),
(329,913,o),
(267,971,o),
(219,971,qs),
(173,971,o),
(110,912,o),
(110,864,qs),
(110,815,o),
(173,756,o),
(219,756,qs)
);
},
{
closed = 1;
nodes = (
(196,807,o),
(165,839,o),
(165,864,qs),
(165,889,o),
(196,920,o),
(219,920,qs),
(243,920,o),
(274,889,o),
(274,864,qs),
(274,839,o),
(243,807,o),
(219,807,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (186,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(260,761,o),
(320,817,o),
(320,864,qs),
(320,911,o),
(260,967,o),
(215,967,qs),
(171,967,o),
(110,911,o),
(110,864,qs),
(110,817,o),
(171,761,o),
(215,761,qs)
);
},
{
closed = 1;
nodes = (
(191,804,o),
(158,837,o),
(158,864,qs),
(158,891,o),
(191,923,o),
(215,923,qs),
(240,923,o),
(272,891,o),
(272,864,qs),
(272,837,o),
(239,804,o),
(215,804,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (192,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(268,754,o),
(332,814,o),
(332,863,qs),
(332,913,o),
(268,972,o),
(220,972,qs),
(174,972,o),
(110,912,o),
(110,863,qs),
(110,814,o),
(174,754,o),
(220,754,qs)
);
},
{
closed = 1;
nodes = (
(198,807,o),
(167,839,o),
(167,863,qs),
(167,888,o),
(198,919,o),
(220,919,qs),
(244,919,o),
(275,888,o),
(275,863,qs),
(275,838,o),
(244,807,o),
(220,807,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (195,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(272,751,o),
(338,812,o),
(338,863,qs),
(338,914,o),
(272,975,o),
(223,975,qs),
(176,975,o),
(110,913,o),
(110,863,qs),
(110,813,o),
(176,751,o),
(223,751,qs)
);
},
{
closed = 1;
nodes = (
(202,809,o),
(172,839,o),
(172,863,qs),
(172,887,o),
(201,917,o),
(223,917,qs),
(247,917,o),
(276,888,o),
(276,863,qs),
(276,839,o),
(246,809,o),
(223,809,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030A.case;
},
{
glyphname = tildecomb.case;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (244,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(352,754,o),
(419,812,o),
(436,867,q),
(378,867,l),
(363,822,o),
(327,822,qs),
(312,822,o),
(290,833,o),
(276,844,qs),
(260,856,o),
(235,868,o),
(216,868,qs),
(173,868,o),
(108,812,o),
(90,756,q),
(148,756,l),
(163,801,o),
(199,801,qs),
(214,801,o),
(234,791,o),
(250,779,qs),
(265,767,o),
(291,754,o),
(310,754,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 23 0 22 17 36 34 17 36 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (231,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(335,756,o),
(395,809,o),
(410,857,q),
(361,857,l),
(354,835,o),
(327,812,o),
(310,812,qs),
(295,812,o),
(276,823,o),
(261,834,qs),
(245,847,o),
(222,859,o),
(203,859,qs),
(164,859,o),
(105,808,o),
(90,758,q),
(139,758,l),
(154,803,o),
(189,803,qs),
(204,803,o),
(223,793,o),
(238,781,qs),
(252,769,o),
(277,756,o),
(296,756,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 24 0 23 18 36 34 17 36 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (248,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(358,753,o),
(427,812,o),
(445,870,q),
(383,870,l),
(368,825,o),
(332,825,qs),
(317,825,o),
(296,836,o),
(280,847,qs),
(264,859,o),
(239,871,o),
(220,871,qs),
(176,871,o),
(108,813,o),
(89,755,q),
(151,755,l),
(166,800,o),
(202,800,qs),
(217,800,o),
(239,789,o),
(253,778,qs),
(270,765,o),
(295,753,o),
(314,753,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 23 0 22 17 36 34 17 36 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (256,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(370,752,o),
(442,814,o),
(462,876,q),
(394,876,l),
(379,831,o),
(343,831,qs),
(328,831,o),
(307,841,o),
(290,853,qs),
(274,865,o),
(247,877,o),
(228,877,qs),
(181,877,o),
(110,815,o),
(89,753,q),
(157,753,l),
(172,798,o),
(208,798,qs),
(223,798,o),
(244,788,o),
(261,776,qs),
(277,764,o),
(304,752,o),
(323,752,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 23 0 22 17 36 34 17 36 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = tildecomb.case;
},
{
glyphname = uni0304.case;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (261,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(456,790,l),
(470,867,l),
(110,867,l),
(96,790,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (255,700);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(444,796,l),
(456,859,l),
(109,859,l),
(97,796,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (262,700);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(460,787,l),
(475,869,l),
(110,869,l),
(95,787,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (266,700);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(468,783,l),
(484,874,l),
(110,874,l),
(94,783,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0304.case;
},
{
glyphname = uni0327.case;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _bottom;
pos = (38,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,-261,ls),
(90,-261,o),
(175,-194,o),
(175,-137,qs),
(175,-97,o),
(113,-55,o),
(62,-56,q),
(75,17,l),
(7,17,l),
(-17,-115,l),
(38,-115,ls),
(93,-115,o),
(93,-148,qs),
(92,-172,o),
(55,-197,o),
(24,-197,qs),
(-78,-197,l),
(-89,-261,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 3 2 112 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 3 2 133 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 17 35 32 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (26,0);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(19,-259,ls),
(78,-259,o),
(158,-194,o),
(158,-140,qs),
(158,-102,o),
(96,-62,o),
(44,-63,q),
(58,17,l),
(2,17,l),
(-21,-113,l),
(28,-113,ls),
(89,-113,o),
(89,-149,qs),
(89,-177,o),
(49,-206,o),
(12,-206,qs),
(-80,-206,l),
(-89,-259,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 3 2 112 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 3 2 133 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 17 35 32 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (41,0);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(34,-262,ls),
(94,-262,o),
(181,-195,o),
(181,-136,qs),
(181,-95,o),
(118,-53,o),
(67,-54,q),
(80,17,l),
(8,17,l),
(-16,-116,l),
(41,-116,ls),
(94,-116,o),
(94,-148,qs),
(93,-171,o),
(57,-195,o),
(27,-195,qs),
(-78,-195,l),
(-90,-262,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 2 1 2 3 114 0 2 0 1 0 2 1 105 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 2 1 2 3 1 128 0 2 0 1 0 2 1 105 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 17 35 32 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (49,0);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(41,-263,ls),
(102,-263,o),
(192,-195,o),
(192,-134,qs),
(192,-92,o),
(128,-48,o),
(79,-50,q),
(91,17,l),
(11,17,l),
(-13,-118,l),
(48,-118,ls),
(96,-118,o),
(96,-147,qs),
(95,-168,o),
(61,-189,o),
(35,-189,qs),
(-77,-189,l),
(-90,-263,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 2 1 2 3 114 0 2 0 1 0 2 1 105 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 2 1 2 3 1 128 0 2 0 1 0 2 1 105 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 17 35 32 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0327.case;
},
{
glyphname = uni0328.case;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _ogonek;
pos = (159,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,-206,o),
(130,-193,q),
(141,-127,l),
(102,-142,o),
(70,-142,qs),
(47,-142,o),
(21,-122,o),
(21,-105,qs),
(21,-83,o),
(57,-46,o),
(100,-27,qs),
(159,0,l),
(144,52,l),
(90,30,ls),
(6,-4,o),
(-64,-80,o),
(-64,-126,qs),
(-64,-165,o),
(-3,-206,o),
(46,-206,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 7 6 3 0 74
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 1 97 2 1 1 1 38 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
0 0 0 19 0 18 45 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _ogonek;
pos = (147,0);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(78,-203,o),
(117,-190,q),
(126,-134,l),
(90,-149,o),
(59,-149,qs),
(35,-149,o),
(6,-128,o),
(6,-109,qs),
(6,-63,o),
(84,-28,qs),
(147,0,l),
(134,43,l),
(77,20,ls),
(1,-11,o),
(-64,-83,o),
(-64,-127,qs),
(-64,-164,o),
(-6,-203,o),
(39,-203,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 7 6 3 0 74
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 1 97 2 1 1 1 38 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
0 0 0 18 0 17 44 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _ogonek;
pos = (163,0);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(87,-208,o),
(134,-194,q),
(145,-125,l),
(106,-140,o),
(74,-140,qs),
(52,-140,o),
(26,-121,o),
(26,-104,qs),
(26,-82,o),
(62,-46,o),
(105,-27,qs),
(163,0,l),
(147,54,l),
(94,33,ls),
(7,-2,o),
(-64,-79,o),
(-64,-126,qs),
(-64,-166,o),
(-1,-208,o),
(48,-208,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 7 6 3 0 74
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 1 97 2 1 1 1 38 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
0 0 0 19 0 18 45 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _ogonek;
pos = (171,0);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(95,-210,o),
(142,-196,q),
(155,-120,l),
(113,-135,o),
(81,-135,qs),
(60,-135,o),
(36,-117,o),
(36,-102,qs),
(36,-81,o),
(71,-46,o),
(115,-26,qs),
(171,0,l),
(153,60,l),
(103,40,ls),
(11,3,o),
(-64,-77,o),
(-64,-126,qs),
(-64,-168,o),
(0,-210,o),
(52,-210,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 7 6 3 0 74
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 1 97 2 1 1 1 38 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
0 0 0 19 0 18 45 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0328.case;
},
{
glyphname = uni0308.narrow;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (226,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(370,583,o),
(409,624,o),
(409,654,qs),
(409,683,o),
(370,723,o),
(341,723,qs),
(313,723,o),
(274,683,o),
(274,654,qs),
(274,624,o),
(313,583,o),
(341,583,qs)
);
},
{
closed = 1;
nodes = (
(192,583,o),
(231,624,o),
(231,654,qs),
(231,683,o),
(192,723,o),
(164,723,qs),
(135,723,o),
(96,683,o),
(96,654,qs),
(96,624,o),
(135,583,o),
(164,583,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
5 3 4 3 1 1 0 97 2 1 0 0 41 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
5 3 4 3 1 1 0 97 2 1 0 0 39 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (192,496);
}
);
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(333,606,o),
(367,639,o),
(367,664,qs),
(367,688,o),
(333,720,o),
(309,720,qs),
(284,720,o),
(251,688,o),
(251,664,qs),
(251,639,o),
(284,606,o),
(309,606,qs)
);
},
{
closed = 1;
nodes = (
(156,606,o),
(190,639,o),
(190,664,qs),
(190,688,o),
(156,720,o),
(132,720,qs),
(107,720,o),
(74,688,o),
(74,664,qs),
(74,639,o),
(107,606,o),
(132,606,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
5 3 4 3 1 1 0 97 2 1 0 0 41 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
5 3 4 3 1 1 0 97 2 1 0 0 39 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (237,496);
}
);
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(382,575,o),
(423,618,o),
(423,650,qs),
(423,681,o),
(382,724,o),
(352,724,qs),
(321,724,o),
(281,682,o),
(281,650,qs),
(281,618,o),
(321,575,o),
(352,575,qs)
);
},
{
closed = 1;
nodes = (
(204,575,o),
(245,618,o),
(245,650,qs),
(245,681,o),
(204,724,o),
(174,724,qs),
(144,724,o),
(103,681,o),
(103,650,qs),
(103,618,o),
(144,575,o),
(174,575,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
5 3 4 3 1 1 0 97 2 1 0 0 41 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
5 3 4 3 1 1 0 97 2 1 0 0 39 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (260,496);
}
);
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(406,560,o),
(451,608,o),
(451,643,qs),
(451,678,o),
(406,726,o),
(373,726,qs),
(340,726,o),
(296,678,o),
(296,643,qs),
(296,608,o),
(340,560,o),
(373,560,qs)
);
},
{
closed = 1;
nodes = (
(228,560,o),
(272,608,o),
(272,643,qs),
(272,678,o),
(228,726,o),
(195,726,qs),
(162,726,o),
(117,678,o),
(117,643,qs),
(117,608,o),
(162,560,o),
(195,560,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
5 3 4 3 1 1 0 97 2 1 0 0 41 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
5 3 4 3 1 1 0 97 2 1 0 0 39 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0308.narrow;
},
{
glyphname = dieresis;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-174,0);
ref = uni0308;
}
);
width = 0;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
pos = (-147,0);
ref = uni0308;
}
);
width = 0;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
pos = (-182,0);
ref = uni0308;
}
);
width = 0;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
pos = (-200,0);
ref = uni0308;
}
);
width = 0;
}
);
note = dieresis;
unicode = 168;
},
{
glyphname = dotaccent;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-74,0);
ref = uni0307;
}
);
width = 0;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
pos = (-59,0);
ref = uni0307;
}
);
width = 0;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
pos = (-79,0);
ref = uni0307;
}
);
width = 0;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
pos = (-89,0);
ref = uni0307;
}
);
width = 0;
}
);
note = dotaccent;
unicode = 729;
},
{
glyphname = grave;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-109,0);
ref = gravecomb;
}
);
width = 0;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
pos = (-105,0);
ref = gravecomb;
}
);
width = 0;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
pos = (-110,0);
ref = gravecomb;
}
);
width = 0;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
pos = (-113,0);
ref = gravecomb;
}
);
width = 0;
}
);
note = grave;
unicode = 96;
},
{
glyphname = acute;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-112,0);
ref = acutecomb;
}
);
width = 0;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
pos = (-105,0);
ref = acutecomb;
}
);
width = 0;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
pos = (-114,0);
ref = acutecomb;
}
);
width = 0;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
pos = (-119,0);
ref = acutecomb;
}
);
width = 0;
}
);
note = acute;
unicode = 180;
},
{
glyphname = hungarumlaut;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-165,0);
ref = uni030B;
}
);
width = 0;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
pos = (-145,0);
ref = uni030B;
}
);
width = 0;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
pos = (-171,0);
ref = uni030B;
}
);
width = 0;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
pos = (-184,0);
ref = uni030B;
}
);
width = 0;
}
);
note = hungarumlaut;
unicode = 733;
},
{
glyphname = circumflex;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-145,0);
ref = uni0302;
}
);
width = 0;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
pos = (-137,0);
ref = uni0302;
}
);
width = 0;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
pos = (-147,0);
ref = uni0302;
}
);
width = 0;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
pos = (-152,0);
ref = uni0302;
}
);
width = 0;
}
);
note = circumflex;
unicode = 710;
},
{
glyphname = caron;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-145,0);
ref = uni030C;
}
);
width = 0;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
pos = (-137,0);
ref = uni030C;
}
);
width = 0;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
pos = (-147,0);
ref = uni030C;
}
);
width = 0;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
pos = (-152,0);
ref = uni030C;
}
);
width = 0;
}
);
note = caron;
unicode = 711;
},
{
glyphname = breve;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-151,0);
ref = uni0306;
}
);
width = 0;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
pos = (-141,0);
ref = uni0306;
}
);
width = 0;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
pos = (-154,0);
ref = uni0306;
}
);
width = 0;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
pos = (-161,0);
ref = uni0306;
}
);
width = 0;
}
);
note = breve;
unicode = 728;
},
{
glyphname = ring;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-112,0);
ref = uni030A;
}
);
width = 0;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
pos = (-107,0);
ref = uni030A;
}
);
width = 0;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
pos = (-113,0);
ref = uni030A;
}
);
width = 0;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
pos = (-116,0);
ref = uni030A;
}
);
width = 0;
}
);
note = ring;
unicode = 730;
},
{
glyphname = tilde;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-167,0);
ref = tildecomb;
}
);
width = 0;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
pos = (-151,0);
ref = tildecomb;
}
);
width = 0;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
pos = (-172,0);
ref = tildecomb;
}
);
width = 0;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
pos = (-182,0);
ref = tildecomb;
}
);
width = 0;
}
);
note = tilde;
unicode = 732;
},
{
glyphname = macron;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-184,0);
ref = uni0304;
}
);
width = 0;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
pos = (-174,0);
ref = uni0304;
}
);
width = 0;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
pos = (-187,0);
ref = uni0304;
}
);
width = 0;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
pos = (-193,0);
ref = uni0304;
}
);
width = 0;
}
);
note = macron;
unicode = 175;
},
{
glyphname = cedilla;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-122,0);
ref = uni0327;
}
);
width = 0;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
pos = (-114,0);
ref = uni0327;
}
);
width = 0;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
pos = (-125,0);
ref = uni0327;
}
);
width = 0;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
pos = (-130,0);
ref = uni0327;
}
);
width = 0;
}
);
note = cedilla;
unicode = 184;
},
{
glyphname = ogonek;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-104,0);
ref = uni0328;
}
);
width = 0;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
alignment = -1;
pos = (-97,0);
ref = uni0328;
}
);
width = 0;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
alignment = -1;
pos = (-106,0);
ref = uni0328;
}
);
width = 0;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
alignment = -1;
pos = (-110,0);
ref = uni0328;
}
);
width = 0;
}
);
note = ogonek;
unicode = 731;
},
{
glyphname = uni02B9;
kernLeft = uni02BA;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(172,552,l),
(218,755,l),
(123,755,l),
(100,552,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 163;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(162,558,l),
(207,755,l),
(127,755,l),
(104,558,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 156;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(175,550,l),
(222,755,l),
(122,755,l),
(98,550,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 165;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(181,546,l),
(229,755,l),
(119,755,l),
(95,546,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 169;
}
);
note = uni02B9;
unicode = 697;
},
{
glyphname = uni02BA;
kernLeft = uni02BA;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(317,552,l),
(364,755,l),
(268,755,l),
(245,552,l)
);
},
{
closed = 1;
nodes = (
(172,552,l),
(218,755,l),
(123,755,l),
(100,552,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 308;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(292,558,l),
(337,755,l),
(257,755,l),
(234,558,l)
);
},
{
closed = 1;
nodes = (
(162,558,l),
(207,755,l),
(127,755,l),
(104,558,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 286;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(325,550,l),
(372,755,l),
(272,755,l),
(248,550,l)
);
},
{
closed = 1;
nodes = (
(175,550,l),
(222,755,l),
(122,755,l),
(98,550,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 315;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(342,546,l),
(390,755,l),
(279,755,l),
(255,546,l)
);
},
{
closed = 1;
nodes = (
(181,546,l),
(229,755,l),
(119,755,l),
(95,546,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 330;
}
);
note = uni02BA;
unicode = 698;
},
{
glyphname = uniE000;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(294,0,l),
(294,214,l),
(499,0,l),
(645,0,l),
(401,260,l),
(630,511,l),
(486,511,l),
(294,309,l),
(294,700,l),
(180,700,l),
(180,0,l)
);
},
{
closed = 1;
nodes = (
(966,-12,o),
(1091,57,o),
(1162,179,o),
(1162,254,qs),
(1162,329,o),
(1091,452,o),
(966,523,o),
(888,523,qs),
(810,523,o),
(686,452,o),
(615,329,o),
(615,254,qs),
(615,179,o),
(686,57,o),
(810,-12,o),
(888,-12,qs)
);
},
{
closed = 1;
nodes = (
(839,95,o),
(768,137,o),
(729,210,o),
(729,254,qs),
(729,298,o),
(768,371,o),
(839,413,o),
(886,413,qs),
(933,413,o),
(1005,371,o),
(1045,298,o),
(1045,254,qs),
(1045,210,o),
(1005,137,o),
(933,95,o),
(886,95,qs)
);
},
{
closed = 1;
nodes = (
(812,566,o),
(853,607,o),
(853,637,qs),
(853,667,o),
(813,707,o),
(782,707,qs),
(752,707,o),
(711,665,o),
(711,636,qs),
(711,607,o),
(752,566,o),
(782,566,qs)
);
},
{
closed = 1;
nodes = (
(1023,566,o),
(1064,607,o),
(1064,637,qs),
(1064,667,o),
(1024,707,o),
(993,707,qs),
(963,707,o),
(922,665,o),
(922,636,qs),
(922,607,o),
(963,566,o),
(993,566,qs)
);
},
{
closed = 1;
nodes = (
(1342,0,l),
(1342,700,l),
(1232,700,l),
(1232,0,l)
);
},
{
closed = 1;
nodes = (
(1657,95,o),
(1585,140,o),
(1547,213,o),
(1547,254,qs),
(1547,297,o),
(1588,370,o),
(1660,413,o),
(1706,413,qs),
(1774,413,o),
(1862,323,o),
(1862,254,qs),
(1862,209,o),
(1822,136,o),
(1751,95,o),
(1706,95,qs)
);
},
{
closed = 1;
nodes = (
(1802,-12,o),
(1916,60,o),
(1978,182,o),
(1978,254,qs),
(1978,331,o),
(1912,454,o),
(1798,523,o),
(1727,523,qs),
(1670,523,o),
(1582,478,o),
(1547,431,q),
(1547,700,l),
(1437,700,l),
(1437,0,l),
(1547,0,l),
(1547,80,l),
(1582,33,o),
(1670,-12,o),
(1727,-12,qs)
);
},
{
closed = 1;
nodes = (
(2161,0,l),
(2161,511,l),
(2048,511,l),
(2048,0,l)
);
},
{
closed = 1;
nodes = (
(2134,566,o),
(2175,607,o),
(2175,637,qs),
(2175,667,o),
(2135,707,o),
(2104,707,qs),
(2074,707,o),
(2033,665,o),
(2033,636,qs),
(2033,607,o),
(2074,566,o),
(2104,566,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 171 values pushed */
93 1 6 1 8 5 2 3 7 6 88 1 2 7 3 76 17 12 2 0 8 9 8 0 9 128 20 1 1 4 6 4 1 6 128 21 16 13 3 4 2 7 5 7 2 5 128 22 10 2 8 30 23 27 11 26 5 9 4 8 9 105 18 1 4 14 1 6 7 4 6 105 28 15 25 3 7 2 5 7 89 28 15 25 3 7 7 5 97 29 19 24 3 5 7 5 81 109 109 86 86 71 71 55 55 43 43 27 27 11 11 109 120 109 119 115 113 108 107 106 105 86 104 86 103 97 95 92 91 90 89 71 85 71 84 78 76 70 69 68 67 55 66 55 65 61 59 43 54 43 53 49 47 27 42 27 41 35 33 11 26 11 25 39 18 18 18 16 31 6 27
CALL[ ]	/* CallFunction */";
};
width = 2305;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(294,0,l),
(294,214,l),
(499,0,l),
(645,0,l),
(401,260,l),
(630,511,l),
(486,511,l),
(294,309,l),
(294,700,l),
(180,700,l),
(180,0,l)
);
},
{
closed = 1;
nodes = (
(966,-12,o),
(1091,57,o),
(1162,179,o),
(1162,254,qs),
(1162,329,o),
(1091,452,o),
(966,523,o),
(888,523,qs),
(810,523,o),
(686,452,o),
(615,329,o),
(615,254,qs),
(615,179,o),
(686,57,o),
(810,-12,o),
(888,-12,qs)
);
},
{
closed = 1;
nodes = (
(839,95,o),
(768,137,o),
(729,210,o),
(729,254,qs),
(729,298,o),
(768,371,o),
(839,413,o),
(886,413,qs),
(933,413,o),
(1005,371,o),
(1045,298,o),
(1045,254,qs),
(1045,210,o),
(1005,137,o),
(933,95,o),
(886,95,qs)
);
},
{
closed = 1;
nodes = (
(812,566,o),
(853,607,o),
(853,637,qs),
(853,667,o),
(813,707,o),
(782,707,qs),
(752,707,o),
(711,665,o),
(711,636,qs),
(711,607,o),
(752,566,o),
(782,566,qs)
);
},
{
closed = 1;
nodes = (
(1023,566,o),
(1064,607,o),
(1064,637,qs),
(1064,667,o),
(1024,707,o),
(993,707,qs),
(963,707,o),
(922,665,o),
(922,636,qs),
(922,607,o),
(963,566,o),
(993,566,qs)
);
},
{
closed = 1;
nodes = (
(1342,0,l),
(1342,700,l),
(1232,700,l),
(1232,0,l)
);
},
{
closed = 1;
nodes = (
(1657,95,o),
(1585,140,o),
(1547,213,o),
(1547,254,qs),
(1547,297,o),
(1588,370,o),
(1660,413,o),
(1706,413,qs),
(1774,413,o),
(1862,323,o),
(1862,254,qs),
(1862,209,o),
(1822,136,o),
(1751,95,o),
(1706,95,qs)
);
},
{
closed = 1;
nodes = (
(1802,-12,o),
(1916,60,o),
(1978,182,o),
(1978,254,qs),
(1978,331,o),
(1912,454,o),
(1798,523,o),
(1727,523,qs),
(1670,523,o),
(1582,478,o),
(1547,431,q),
(1547,700,l),
(1437,700,l),
(1437,0,l),
(1547,0,l),
(1547,80,l),
(1582,33,o),
(1670,-12,o),
(1727,-12,qs)
);
},
{
closed = 1;
nodes = (
(2161,0,l),
(2161,511,l),
(2048,511,l),
(2048,0,l)
);
},
{
closed = 1;
nodes = (
(2134,566,o),
(2175,607,o),
(2175,637,qs),
(2175,667,o),
(2135,707,o),
(2104,707,qs),
(2074,707,o),
(2033,665,o),
(2033,636,qs),
(2033,607,o),
(2074,566,o),
(2104,566,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 171 values pushed */
93 1 6 1 8 5 2 3 7 6 88 1 2 7 3 76 17 12 2 0 8 9 8 0 9 128 20 1 1 4 6 4 1 6 128 21 16 13 3 4 2 7 5 7 2 5 128 22 10 2 8 30 23 27 11 26 5 9 4 8 9 105 18 1 4 14 1 6 7 4 6 105 28 15 25 3 7 2 5 7 89 28 15 25 3 7 7 5 97 29 19 24 3 5 7 5 81 109 109 86 86 71 71 55 55 43 43 27 27 11 11 109 120 109 119 115 113 108 107 106 105 86 104 86 103 97 95 92 91 90 89 71 85 71 84 78 76 70 69 68 67 55 66 55 65 61 59 43 54 43 53 49 47 27 42 27 41 35 33 11 26 11 25 39 18 18 18 16 31 6 27
CALL[ ]	/* CallFunction */";
};
width = 2305;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(294,0,l),
(294,214,l),
(499,0,l),
(645,0,l),
(401,260,l),
(630,511,l),
(486,511,l),
(294,309,l),
(294,700,l),
(180,700,l),
(180,0,l)
);
},
{
closed = 1;
nodes = (
(966,-12,o),
(1091,57,o),
(1162,179,o),
(1162,254,qs),
(1162,329,o),
(1091,452,o),
(966,523,o),
(888,523,qs),
(810,523,o),
(686,452,o),
(615,329,o),
(615,254,qs),
(615,179,o),
(686,57,o),
(810,-12,o),
(888,-12,qs)
);
},
{
closed = 1;
nodes = (
(839,95,o),
(768,137,o),
(729,210,o),
(729,254,qs),
(729,298,o),
(768,371,o),
(839,413,o),
(886,413,qs),
(933,413,o),
(1005,371,o),
(1045,298,o),
(1045,254,qs),
(1045,210,o),
(1005,137,o),
(933,95,o),
(886,95,qs)
);
},
{
closed = 1;
nodes = (
(812,566,o),
(853,607,o),
(853,637,qs),
(853,667,o),
(813,707,o),
(782,707,qs),
(752,707,o),
(711,665,o),
(711,636,qs),
(711,607,o),
(752,566,o),
(782,566,qs)
);
},
{
closed = 1;
nodes = (
(1023,566,o),
(1064,607,o),
(1064,637,qs),
(1064,667,o),
(1024,707,o),
(993,707,qs),
(963,707,o),
(922,665,o),
(922,636,qs),
(922,607,o),
(963,566,o),
(993,566,qs)
);
},
{
closed = 1;
nodes = (
(1342,0,l),
(1342,700,l),
(1232,700,l),
(1232,0,l)
);
},
{
closed = 1;
nodes = (
(1657,95,o),
(1585,140,o),
(1547,213,o),
(1547,254,qs),
(1547,297,o),
(1588,370,o),
(1660,413,o),
(1706,413,qs),
(1774,413,o),
(1862,323,o),
(1862,254,qs),
(1862,209,o),
(1822,136,o),
(1751,95,o),
(1706,95,qs)
);
},
{
closed = 1;
nodes = (
(1802,-12,o),
(1916,60,o),
(1978,182,o),
(1978,254,qs),
(1978,331,o),
(1912,454,o),
(1798,523,o),
(1727,523,qs),
(1670,523,o),
(1582,478,o),
(1547,431,q),
(1547,700,l),
(1437,700,l),
(1437,0,l),
(1547,0,l),
(1547,80,l),
(1582,33,o),
(1670,-12,o),
(1727,-12,qs)
);
},
{
closed = 1;
nodes = (
(2161,0,l),
(2161,511,l),
(2048,511,l),
(2048,0,l)
);
},
{
closed = 1;
nodes = (
(2134,566,o),
(2175,607,o),
(2175,637,qs),
(2175,667,o),
(2135,707,o),
(2104,707,qs),
(2074,707,o),
(2033,665,o),
(2033,636,qs),
(2033,607,o),
(2074,566,o),
(2104,566,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 171 values pushed */
93 1 6 1 8 5 2 3 7 6 88 1 2 7 3 76 17 12 2 0 8 9 8 0 9 128 20 1 1 4 6 4 1 6 128 21 16 13 3 4 2 7 5 7 2 5 128 22 10 2 8 30 23 27 11 26 5 9 4 8 9 105 18 1 4 14 1 6 7 4 6 105 28 15 25 3 7 2 5 7 89 28 15 25 3 7 7 5 97 29 19 24 3 5 7 5 81 109 109 86 86 71 71 55 55 43 43 27 27 11 11 109 120 109 119 115 113 108 107 106 105 86 104 86 103 97 95 92 91 90 89 71 85 71 84 78 76 70 69 68 67 55 66 55 65 61 59 43 54 43 53 49 47 27 42 27 41 35 33 11 26 11 25 39 18 18 18 16 31 6 27
CALL[ ]	/* CallFunction */";
};
width = 2305;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(294,0,l),
(294,214,l),
(499,0,l),
(645,0,l),
(401,260,l),
(630,511,l),
(486,511,l),
(294,309,l),
(294,700,l),
(180,700,l),
(180,0,l)
);
},
{
closed = 1;
nodes = (
(966,-12,o),
(1091,57,o),
(1162,179,o),
(1162,254,qs),
(1162,329,o),
(1091,452,o),
(966,523,o),
(888,523,qs),
(810,523,o),
(686,452,o),
(615,329,o),
(615,254,qs),
(615,179,o),
(686,57,o),
(810,-12,o),
(888,-12,qs)
);
},
{
closed = 1;
nodes = (
(839,95,o),
(768,137,o),
(729,210,o),
(729,254,qs),
(729,298,o),
(768,371,o),
(839,413,o),
(886,413,qs),
(933,413,o),
(1005,371,o),
(1045,298,o),
(1045,254,qs),
(1045,210,o),
(1005,137,o),
(933,95,o),
(886,95,qs)
);
},
{
closed = 1;
nodes = (
(812,566,o),
(853,607,o),
(853,637,qs),
(853,667,o),
(813,707,o),
(782,707,qs),
(752,707,o),
(711,665,o),
(711,636,qs),
(711,607,o),
(752,566,o),
(782,566,qs)
);
},
{
closed = 1;
nodes = (
(1023,566,o),
(1064,607,o),
(1064,637,qs),
(1064,667,o),
(1024,707,o),
(993,707,qs),
(963,707,o),
(922,665,o),
(922,636,qs),
(922,607,o),
(963,566,o),
(993,566,qs)
);
},
{
closed = 1;
nodes = (
(1342,0,l),
(1342,700,l),
(1232,700,l),
(1232,0,l)
);
},
{
closed = 1;
nodes = (
(1657,95,o),
(1585,140,o),
(1547,213,o),
(1547,254,qs),
(1547,297,o),
(1588,370,o),
(1660,413,o),
(1706,413,qs),
(1774,413,o),
(1862,323,o),
(1862,254,qs),
(1862,209,o),
(1822,136,o),
(1751,95,o),
(1706,95,qs)
);
},
{
closed = 1;
nodes = (
(1802,-12,o),
(1916,60,o),
(1978,182,o),
(1978,254,qs),
(1978,331,o),
(1912,454,o),
(1798,523,o),
(1727,523,qs),
(1670,523,o),
(1582,478,o),
(1547,431,q),
(1547,700,l),
(1437,700,l),
(1437,0,l),
(1547,0,l),
(1547,80,l),
(1582,33,o),
(1670,-12,o),
(1727,-12,qs)
);
},
{
closed = 1;
nodes = (
(2161,0,l),
(2161,511,l),
(2048,511,l),
(2048,0,l)
);
},
{
closed = 1;
nodes = (
(2134,566,o),
(2175,607,o),
(2175,637,qs),
(2175,667,o),
(2135,707,o),
(2104,707,qs),
(2074,707,o),
(2033,665,o),
(2033,636,qs),
(2033,607,o),
(2074,566,o),
(2104,566,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 171 values pushed */
93 1 6 1 8 5 2 3 7 6 88 1 2 7 3 76 17 12 2 0 8 9 8 0 9 128 20 1 1 4 6 4 1 6 128 21 16 13 3 4 2 7 5 7 2 5 128 22 10 2 8 30 23 27 11 26 5 9 4 8 9 105 18 1 4 14 1 6 7 4 6 105 28 15 25 3 7 2 5 7 89 28 15 25 3 7 7 5 97 29 19 24 3 5 7 5 81 109 109 86 86 71 71 55 55 43 43 27 27 11 11 109 120 109 119 115 113 108 107 106 105 86 104 86 103 97 95 92 91 90 89 71 85 71 84 78 76 70 69 68 67 55 66 55 65 61 59 43 54 43 53 49 47 27 42 27 41 35 33 11 26 11 25 39 18 18 18 16 31 6 27
CALL[ ]	/* CallFunction */";
};
width = 2305;
}
);
note = uniE000;
unicode = 57344;
},
{
glyphname = uniE001;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,225,l),
(239,173,o),
(312,118,o),
(359,118,qs),
(411,118,o),
(478,177,o),
(478,227,qs),
(478,278,o),
(410,339,o),
(355,339,qs),
(284,339,o),
(233,288,q),
(139,330,l),
(180,700,l),
(587,700,l),
(587,579,l),
(294,579,l),
(277,426,l),
(294,440,o),
(355,458,o),
(390,458,qs),
(462,458,o),
(567,400,o),
(623,296,o),
(623,229,qs),
(623,160,o),
(556,52,o),
(437,-8,o),
(361,-8,qs),
(272,-8,o),
(141,82,o),
(106,166,q)
);
},
{
closed = 1;
nodes = (
(942,-8,o),
(776,88,o),
(680,253,o),
(680,352,qs),
(680,449,o),
(770,614,o),
(934,711,o),
(1039,711,qs),
(1135,711,o),
(1296,620,o),
(1345,546,q),
(1235,468,l),
(1162,581,o),
(1039,581,qs),
(939,581,o),
(824,456,o),
(824,352,qs),
(824,283,o),
(882,177,o),
(981,120,o),
(1041,120,qs),
(1124,120,o),
(1226,203,o),
(1240,265,q),
(1027,265,l),
(1027,383,l),
(1379,383,l),
(1381,369,o),
(1381,328,qs),
(1381,238,o),
(1298,84,o),
(1143,-8,o),
(1041,-8,qs)
);
},
{
closed = 1;
nodes = (
(861,949,o),
(818,904,o),
(818,873,qs),
(818,843,o),
(861,798,o),
(894,798,qs),
(927,798,o),
(970,843,o),
(970,874,qs),
(970,904,o),
(927,949,o),
(894,949,qs)
);
},
{
closed = 1;
nodes = (
(1673,107,l),
(1720,157,o),
(1769,278,o),
(1769,342,qs),
(1769,405,o),
(1722,525,o),
(1676,575,q),
(1761,663,l),
(1824,597,o),
(1890,430,o),
(1890,342,qs),
(1890,254,o),
(1824,89,o),
(1761,23,q)
);
},
{
closed = 1;
nodes = (
(1845,-59,l),
(1925,23,o),
(2007,231,o),
(2007,342,qs),
(2007,453,o),
(1925,661,o),
(1845,742,q),
(1931,831,l),
(2029,731,o),
(2131,477,o),
(2131,342,qs),
(2131,208,o),
(2029,-47,o),
(1931,-148,q)
);
},
{
closed = 1;
nodes = (
(1094,949,o),
(1051,904,o),
(1051,873,qs),
(1051,843,o),
(1094,798,o),
(1127,798,qs),
(1160,798,o),
(1203,843,o),
(1203,874,qs),
(1203,904,o),
(1160,949,o),
(1127,949,qs)
);
},
{
closed = 1;
nodes = (
(1603,248,o),
(1658,303,o),
(1658,342,qs),
(1658,381,o),
(1603,436,o),
(1564,436,qs),
(1525,436,o),
(1470,381,o),
(1470,342,qs),
(1470,303,o),
(1525,248,o),
(1564,248,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
96 1 12 13 97 1 10 12 82 1 2 3 83 53 52 3 1 2 13 1 6 16 19 18 2 7 4 31 30 2 5 17 90 89 2 0 5 8 76 104 103 2 0 73
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
20 15 19 3 13 12 13 133 14 1 12 10 10 12 112 0 16 1 6 1 16 6 128 21 1 17 7 5 7 17 5 128 0 10 3 2 10 89 0 3 9 1 2 1 3 2 105 0 1 0 4 7 1 4 105 0 6 0 7 17 6 7 103 8 1 5 0 0 5 89 8 1 5 5 0 97 18 11 2 0 5 0 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 82 values pushed */
20 15 19 3 13 12 13 133 14 1 12 10 12 133 0 16 1 6 1 16 6 128 21 1 17 7 5 7 17 5 128 0 10 3 2 10 89 0 3 9 1 2 1 3 2 105 0 1 0 4 7 1 4 105 0 6 0 7 17 6 7 103 8 1 5 0 0 5 89 8 1 5 5 0 97 18 11 2 0 5 0 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
117 117 105 105 65 65 32 32 117 128 117 127 123 121 105 116 105 115 111 109 65 76 65 75 71 69 32 64 32 63 57 55 51 49 34 17 25 36 35 17 19 38 33 22 6 31
CALL[ ]	/* CallFunction */";
};
width = 2225;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(217,225,l),
(239,173,o),
(312,118,o),
(359,118,qs),
(411,118,o),
(478,177,o),
(478,227,qs),
(478,278,o),
(410,339,o),
(355,339,qs),
(284,339,o),
(233,288,q),
(139,330,l),
(180,700,l),
(587,700,l),
(587,579,l),
(294,579,l),
(277,426,l),
(294,440,o),
(355,458,o),
(390,458,qs),
(462,458,o),
(567,400,o),
(623,296,o),
(623,229,qs),
(623,160,o),
(556,52,o),
(437,-8,o),
(361,-8,qs),
(272,-8,o),
(141,82,o),
(106,166,q)
);
},
{
closed = 1;
nodes = (
(942,-8,o),
(776,88,o),
(680,253,o),
(680,352,qs),
(680,449,o),
(770,614,o),
(934,711,o),
(1039,711,qs),
(1135,711,o),
(1296,620,o),
(1345,546,q),
(1235,468,l),
(1162,581,o),
(1039,581,qs),
(939,581,o),
(824,456,o),
(824,352,qs),
(824,283,o),
(882,177,o),
(981,120,o),
(1041,120,qs),
(1124,120,o),
(1226,203,o),
(1240,265,q),
(1027,265,l),
(1027,383,l),
(1379,383,l),
(1381,369,o),
(1381,328,qs),
(1381,238,o),
(1298,84,o),
(1143,-8,o),
(1041,-8,qs)
);
},
{
closed = 1;
nodes = (
(861,949,o),
(818,904,o),
(818,873,qs),
(818,843,o),
(861,798,o),
(894,798,qs),
(927,798,o),
(970,843,o),
(970,874,qs),
(970,904,o),
(927,949,o),
(894,949,qs)
);
},
{
closed = 1;
nodes = (
(1673,107,l),
(1720,157,o),
(1769,278,o),
(1769,342,qs),
(1769,405,o),
(1722,525,o),
(1676,575,q),
(1761,663,l),
(1824,597,o),
(1890,430,o),
(1890,342,qs),
(1890,254,o),
(1824,89,o),
(1761,23,q)
);
},
{
closed = 1;
nodes = (
(1845,-59,l),
(1925,23,o),
(2007,231,o),
(2007,342,qs),
(2007,453,o),
(1925,661,o),
(1845,742,q),
(1931,831,l),
(2029,731,o),
(2131,477,o),
(2131,342,qs),
(2131,208,o),
(2029,-47,o),
(1931,-148,q)
);
},
{
closed = 1;
nodes = (
(1094,949,o),
(1051,904,o),
(1051,873,qs),
(1051,843,o),
(1094,798,o),
(1127,798,qs),
(1160,798,o),
(1203,843,o),
(1203,874,qs),
(1203,904,o),
(1160,949,o),
(1127,949,qs)
);
},
{
closed = 1;
nodes = (
(1603,248,o),
(1658,303,o),
(1658,342,qs),
(1658,381,o),
(1603,436,o),
(1564,436,qs),
(1525,436,o),
(1470,381,o),
(1470,342,qs),
(1470,303,o),
(1525,248,o),
(1564,248,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
96 1 12 13 97 1 10 12 82 1 2 3 83 53 52 3 1 2 13 1 6 16 19 18 2 7 4 31 30 2 5 17 90 89 2 0 5 8 76 104 103 2 0 73
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
20 15 19 3 13 12 13 133 14 1 12 10 10 12 112 0 16 1 6 1 16 6 128 21 1 17 7 5 7 17 5 128 0 10 3 2 10 89 0 3 9 1 2 1 3 2 105 0 1 0 4 7 1 4 105 0 6 0 7 17 6 7 103 8 1 5 0 0 5 89 8 1 5 5 0 97 18 11 2 0 5 0 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 82 values pushed */
20 15 19 3 13 12 13 133 14 1 12 10 12 133 0 16 1 6 1 16 6 128 21 1 17 7 5 7 17 5 128 0 10 3 2 10 89 0 3 9 1 2 1 3 2 105 0 1 0 4 7 1 4 105 0 6 0 7 17 6 7 103 8 1 5 0 0 5 89 8 1 5 5 0 97 18 11 2 0 5 0 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
117 117 105 105 65 65 32 32 117 128 117 127 123 121 105 116 105 115 111 109 65 76 65 75 71 69 32 64 32 63 57 55 51 49 34 17 25 36 35 17 19 38 33 22 6 31
CALL[ ]	/* CallFunction */";
};
width = 2225;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(217,225,l),
(239,173,o),
(312,118,o),
(359,118,qs),
(411,118,o),
(478,177,o),
(478,227,qs),
(478,278,o),
(410,339,o),
(355,339,qs),
(284,339,o),
(233,288,q),
(139,330,l),
(180,700,l),
(587,700,l),
(587,579,l),
(294,579,l),
(277,426,l),
(294,440,o),
(355,458,o),
(390,458,qs),
(462,458,o),
(567,400,o),
(623,296,o),
(623,229,qs),
(623,160,o),
(556,52,o),
(437,-8,o),
(361,-8,qs),
(272,-8,o),
(141,82,o),
(106,166,q)
);
},
{
closed = 1;
nodes = (
(942,-8,o),
(776,88,o),
(680,253,o),
(680,352,qs),
(680,449,o),
(770,614,o),
(934,711,o),
(1039,711,qs),
(1135,711,o),
(1296,620,o),
(1345,546,q),
(1235,468,l),
(1162,581,o),
(1039,581,qs),
(939,581,o),
(824,456,o),
(824,352,qs),
(824,283,o),
(882,177,o),
(981,120,o),
(1041,120,qs),
(1124,120,o),
(1226,203,o),
(1240,265,q),
(1027,265,l),
(1027,383,l),
(1379,383,l),
(1381,369,o),
(1381,328,qs),
(1381,238,o),
(1298,84,o),
(1143,-8,o),
(1041,-8,qs)
);
},
{
closed = 1;
nodes = (
(861,949,o),
(818,904,o),
(818,873,qs),
(818,843,o),
(861,798,o),
(894,798,qs),
(927,798,o),
(970,843,o),
(970,874,qs),
(970,904,o),
(927,949,o),
(894,949,qs)
);
},
{
closed = 1;
nodes = (
(1673,107,l),
(1720,157,o),
(1769,278,o),
(1769,342,qs),
(1769,405,o),
(1722,525,o),
(1676,575,q),
(1761,663,l),
(1824,597,o),
(1890,430,o),
(1890,342,qs),
(1890,254,o),
(1824,89,o),
(1761,23,q)
);
},
{
closed = 1;
nodes = (
(1845,-59,l),
(1925,23,o),
(2007,231,o),
(2007,342,qs),
(2007,453,o),
(1925,661,o),
(1845,742,q),
(1931,831,l),
(2029,731,o),
(2131,477,o),
(2131,342,qs),
(2131,208,o),
(2029,-47,o),
(1931,-148,q)
);
},
{
closed = 1;
nodes = (
(1094,949,o),
(1051,904,o),
(1051,873,qs),
(1051,843,o),
(1094,798,o),
(1127,798,qs),
(1160,798,o),
(1203,843,o),
(1203,874,qs),
(1203,904,o),
(1160,949,o),
(1127,949,qs)
);
},
{
closed = 1;
nodes = (
(1603,248,o),
(1658,303,o),
(1658,342,qs),
(1658,381,o),
(1603,436,o),
(1564,436,qs),
(1525,436,o),
(1470,381,o),
(1470,342,qs),
(1470,303,o),
(1525,248,o),
(1564,248,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
96 1 12 13 97 1 10 12 82 1 2 3 83 53 52 3 1 2 13 1 6 16 19 18 2 7 4 31 30 2 5 17 90 89 2 0 5 8 76 104 103 2 0 73
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
20 15 19 3 13 12 13 133 14 1 12 10 10 12 112 0 16 1 6 1 16 6 128 21 1 17 7 5 7 17 5 128 0 10 3 2 10 89 0 3 9 1 2 1 3 2 105 0 1 0 4 7 1 4 105 0 6 0 7 17 6 7 103 8 1 5 0 0 5 89 8 1 5 5 0 97 18 11 2 0 5 0 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 82 values pushed */
20 15 19 3 13 12 13 133 14 1 12 10 12 133 0 16 1 6 1 16 6 128 21 1 17 7 5 7 17 5 128 0 10 3 2 10 89 0 3 9 1 2 1 3 2 105 0 1 0 4 7 1 4 105 0 6 0 7 17 6 7 103 8 1 5 0 0 5 89 8 1 5 5 0 97 18 11 2 0 5 0 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
117 117 105 105 65 65 32 32 117 128 117 127 123 121 105 116 105 115 111 109 65 76 65 75 71 69 32 64 32 63 57 55 51 49 34 17 25 36 35 17 19 38 33 22 6 31
CALL[ ]	/* CallFunction */";
};
width = 2225;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(217,225,l),
(239,173,o),
(312,118,o),
(359,118,qs),
(411,118,o),
(478,177,o),
(478,227,qs),
(478,278,o),
(410,339,o),
(355,339,qs),
(284,339,o),
(233,288,q),
(139,330,l),
(180,700,l),
(587,700,l),
(587,579,l),
(294,579,l),
(277,426,l),
(294,440,o),
(355,458,o),
(390,458,qs),
(462,458,o),
(567,400,o),
(623,296,o),
(623,229,qs),
(623,160,o),
(556,52,o),
(437,-8,o),
(361,-8,qs),
(272,-8,o),
(141,82,o),
(106,166,q)
);
},
{
closed = 1;
nodes = (
(942,-8,o),
(776,88,o),
(680,253,o),
(680,352,qs),
(680,449,o),
(770,614,o),
(934,711,o),
(1039,711,qs),
(1135,711,o),
(1296,620,o),
(1345,546,q),
(1235,468,l),
(1162,581,o),
(1039,581,qs),
(939,581,o),
(824,456,o),
(824,352,qs),
(824,283,o),
(882,177,o),
(981,120,o),
(1041,120,qs),
(1124,120,o),
(1226,203,o),
(1240,265,q),
(1027,265,l),
(1027,383,l),
(1379,383,l),
(1381,369,o),
(1381,328,qs),
(1381,238,o),
(1298,84,o),
(1143,-8,o),
(1041,-8,qs)
);
},
{
closed = 1;
nodes = (
(861,949,o),
(818,904,o),
(818,873,qs),
(818,843,o),
(861,798,o),
(894,798,qs),
(927,798,o),
(970,843,o),
(970,874,qs),
(970,904,o),
(927,949,o),
(894,949,qs)
);
},
{
closed = 1;
nodes = (
(1673,107,l),
(1720,157,o),
(1769,278,o),
(1769,342,qs),
(1769,405,o),
(1722,525,o),
(1676,575,q),
(1761,663,l),
(1824,597,o),
(1890,430,o),
(1890,342,qs),
(1890,254,o),
(1824,89,o),
(1761,23,q)
);
},
{
closed = 1;
nodes = (
(1845,-59,l),
(1925,23,o),
(2007,231,o),
(2007,342,qs),
(2007,453,o),
(1925,661,o),
(1845,742,q),
(1931,831,l),
(2029,731,o),
(2131,477,o),
(2131,342,qs),
(2131,208,o),
(2029,-47,o),
(1931,-148,q)
);
},
{
closed = 1;
nodes = (
(1094,949,o),
(1051,904,o),
(1051,873,qs),
(1051,843,o),
(1094,798,o),
(1127,798,qs),
(1160,798,o),
(1203,843,o),
(1203,874,qs),
(1203,904,o),
(1160,949,o),
(1127,949,qs)
);
},
{
closed = 1;
nodes = (
(1603,248,o),
(1658,303,o),
(1658,342,qs),
(1658,381,o),
(1603,436,o),
(1564,436,qs),
(1525,436,o),
(1470,381,o),
(1470,342,qs),
(1470,303,o),
(1525,248,o),
(1564,248,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
96 1 12 13 97 1 10 12 82 1 2 3 83 53 52 3 1 2 13 1 6 16 19 18 2 7 4 31 30 2 5 17 90 89 2 0 5 8 76 104 103 2 0 73
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
20 15 19 3 13 12 13 133 14 1 12 10 10 12 112 0 16 1 6 1 16 6 128 21 1 17 7 5 7 17 5 128 0 10 3 2 10 89 0 3 9 1 2 1 3 2 105 0 1 0 4 7 1 4 105 0 6 0 7 17 6 7 103 8 1 5 0 0 5 89 8 1 5 5 0 97 18 11 2 0 5 0 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 82 values pushed */
20 15 19 3 13 12 13 133 14 1 12 10 12 133 0 16 1 6 1 16 6 128 21 1 17 7 5 7 17 5 128 0 10 3 2 10 89 0 3 9 1 2 1 3 2 105 0 1 0 4 7 1 4 105 0 6 0 7 17 6 7 103 8 1 5 0 0 5 89 8 1 5 5 0 97 18 11 2 0 5 0 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
117 117 105 105 65 65 32 32 117 128 117 127 123 121 105 116 105 115 111 109 65 76 65 75 71 69 32 64 32 63 57 55 51 49 34 17 25 36 35 17 19 38 33 22 6 31
CALL[ ]	/* CallFunction */";
};
width = 2225;
}
);
note = uniE001;
unicode = 57345;
},
{
glyphname = uniE002;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(527,48,o),
(533,48,qs),
(540,48,o),
(545,53,qs),
(722,229,ls),
(781,288,o),
(781,367,qs),
(781,386,ls),
(781,393,o),
(784,399,o),
(790,401,qs),
(838,418,o),
(900,499,o),
(900,550,qs),
(900,594,o),
(858,667,o),
(786,710,o),
(741,710,qs),
(688,710,o),
(611,653,o),
(591,603,qs),
(587,592,o),
(575,584,o),
(566,584,qs),
(501,584,ls),
(490,584,o),
(478,592,o),
(474,603,qs),
(454,653,o),
(377,710,o),
(324,710,qs),
(279,710,o),
(207,667,o),
(165,594,o),
(165,550,qs),
(165,499,o),
(227,418,o),
(275,401,qs),
(281,399,o),
(284,393,o),
(284,386,qs),
(284,367,ls),
(284,294,o),
(343,229,q),
(520,53,l)
);
},
{
closed = 1;
nodes = (
(496,0,ls),
(502,0,o),
(509,7,o),
(509,12,qs),
(509,17,o),
(505,21,qs),
(302,222,ls),
(266,258,o),
(213,258,qs),
(179,258,o),
(119,227,o),
(81,168,o),
(81,130,qs),
(81,97,o),
(114,37,o),
(174,0,o),
(213,0,qs)
);
},
{
closed = 1;
nodes = (
(275,435,o),
(205,505,o),
(205,554,qs),
(205,603,o),
(275,672,o),
(324,672,qs),
(373,672,o),
(442,603,o),
(442,554,qs),
(442,505,o),
(373,435,o),
(324,435,qs)
);
},
{
closed = 1;
nodes = (
(364,456,o),
(421,514,o),
(421,554,qs),
(421,594,o),
(364,651,o),
(324,651,qs),
(284,651,o),
(226,594,o),
(226,554,qs),
(226,514,o),
(284,456,o),
(324,456,qs)
);
},
{
closed = 1;
nodes = (
(295,484,o),
(254,525,o),
(254,554,qs),
(254,583,o),
(295,623,o),
(324,623,qs),
(338,623,o),
(354,616,q),
(346,614,o),
(336,600,o),
(336,592,qs),
(336,581,o),
(351,566,o),
(362,566,qs),
(370,566,o),
(384,576,o),
(386,584,q),
(393,568,o),
(393,554,qs),
(393,525,o),
(353,484,o),
(324,484,qs)
);
},
{
closed = 1;
nodes = (
(852,0,ls),
(891,0,o),
(951,37,o),
(984,97,o),
(984,130,qs),
(984,168,o),
(946,227,o),
(886,258,o),
(852,258,qs),
(799,258,o),
(763,222,qs),
(560,21,ls),
(556,17,o),
(556,12,qs),
(556,7,o),
(563,0,o),
(569,0,qs)
);
},
{
closed = 1;
nodes = (
(693,435,o),
(623,505,o),
(623,554,qs),
(623,603,o),
(693,672,o),
(742,672,qs),
(791,672,o),
(860,603,o),
(860,554,qs),
(860,505,o),
(791,435,o),
(742,435,qs)
);
},
{
closed = 1;
nodes = (
(782,456,o),
(839,514,o),
(839,554,qs),
(839,594,o),
(782,651,o),
(742,651,qs),
(702,651,o),
(644,594,o),
(644,554,qs),
(644,514,o),
(702,456,o),
(742,456,qs)
);
},
{
closed = 1;
nodes = (
(713,484,o),
(672,525,o),
(672,554,qs),
(672,583,o),
(713,623,o),
(742,623,qs),
(756,623,o),
(772,616,q),
(764,614,o),
(754,600,o),
(754,592,qs),
(754,581,o),
(769,566,o),
(780,566,qs),
(788,566,o),
(802,576,o),
(804,584,q),
(811,568,o),
(811,554,qs),
(811,525,o),
(771,484,o),
(742,484,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
162 159 99 96 4 1 11 3 1 4 7 2 76 153 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 1 11 10 11 1 10 128 19 1 10 12 11 10 112 26 16 23 3 7 9 4 9 7 4 128 13 1 4 3 9 4 3 126 0 3 5 9 3 5 126 14 22 2 5 5 132 2 1 0 15 1 6 8 0 6 105 17 1 8 20 1 11 1 8 11 105 28 21 25 3 12 9 9 12 89 28 21 25 3 12 12 9 97 27 18 24 3 9 12 9 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 93 values pushed */
0 1 11 10 11 1 10 128 19 1 10 12 11 10 12 126 26 16 23 3 7 9 4 9 7 4 128 13 1 4 3 9 4 3 126 0 3 5 9 3 5 126 14 22 2 5 5 132 2 1 0 15 1 6 8 0 6 105 17 1 8 20 1 11 1 8 11 105 28 21 25 3 12 9 9 12 89 28 21 25 3 12 12 9 97 27 18 24 3 9 12 9 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 70 values pushed */
149 149 137 137 125 125 86 86 74 74 62 62 45 45 149 170 149 169 165 163 157 155 137 148 137 147 143 141 125 136 125 135 131 129 124 122 116 114 86 107 86 106 102 100 94 92 74 85 74 84 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 29 6 27
CALL[ ]	/* CallFunction */";
};
width = 1107;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(527,48,o),
(533,48,qs),
(540,48,o),
(545,53,qs),
(722,229,ls),
(781,288,o),
(781,367,qs),
(781,386,ls),
(781,393,o),
(784,399,o),
(790,401,qs),
(838,418,o),
(900,499,o),
(900,550,qs),
(900,594,o),
(858,667,o),
(786,710,o),
(741,710,qs),
(688,710,o),
(611,653,o),
(591,603,qs),
(587,592,o),
(575,584,o),
(566,584,qs),
(501,584,ls),
(490,584,o),
(478,592,o),
(474,603,qs),
(454,653,o),
(377,710,o),
(324,710,qs),
(279,710,o),
(207,667,o),
(165,594,o),
(165,550,qs),
(165,499,o),
(227,418,o),
(275,401,qs),
(281,399,o),
(284,393,o),
(284,386,qs),
(284,367,ls),
(284,294,o),
(343,229,q),
(520,53,l)
);
},
{
closed = 1;
nodes = (
(496,0,ls),
(502,0,o),
(509,7,o),
(509,12,qs),
(509,17,o),
(505,21,qs),
(302,222,ls),
(266,258,o),
(213,258,qs),
(179,258,o),
(119,227,o),
(81,168,o),
(81,130,qs),
(81,97,o),
(114,37,o),
(174,0,o),
(213,0,qs)
);
},
{
closed = 1;
nodes = (
(275,435,o),
(205,505,o),
(205,554,qs),
(205,603,o),
(275,672,o),
(324,672,qs),
(373,672,o),
(442,603,o),
(442,554,qs),
(442,505,o),
(373,435,o),
(324,435,qs)
);
},
{
closed = 1;
nodes = (
(364,456,o),
(421,514,o),
(421,554,qs),
(421,594,o),
(364,651,o),
(324,651,qs),
(284,651,o),
(226,594,o),
(226,554,qs),
(226,514,o),
(284,456,o),
(324,456,qs)
);
},
{
closed = 1;
nodes = (
(295,484,o),
(254,525,o),
(254,554,qs),
(254,583,o),
(295,623,o),
(324,623,qs),
(338,623,o),
(354,616,q),
(346,614,o),
(336,600,o),
(336,592,qs),
(336,581,o),
(351,566,o),
(362,566,qs),
(370,566,o),
(384,576,o),
(386,584,q),
(393,568,o),
(393,554,qs),
(393,525,o),
(353,484,o),
(324,484,qs)
);
},
{
closed = 1;
nodes = (
(852,0,ls),
(891,0,o),
(951,37,o),
(984,97,o),
(984,130,qs),
(984,168,o),
(946,227,o),
(886,258,o),
(852,258,qs),
(799,258,o),
(763,222,qs),
(560,21,ls),
(556,17,o),
(556,12,qs),
(556,7,o),
(563,0,o),
(569,0,qs)
);
},
{
closed = 1;
nodes = (
(693,435,o),
(623,505,o),
(623,554,qs),
(623,603,o),
(693,672,o),
(742,672,qs),
(791,672,o),
(860,603,o),
(860,554,qs),
(860,505,o),
(791,435,o),
(742,435,qs)
);
},
{
closed = 1;
nodes = (
(782,456,o),
(839,514,o),
(839,554,qs),
(839,594,o),
(782,651,o),
(742,651,qs),
(702,651,o),
(644,594,o),
(644,554,qs),
(644,514,o),
(702,456,o),
(742,456,qs)
);
},
{
closed = 1;
nodes = (
(713,484,o),
(672,525,o),
(672,554,qs),
(672,583,o),
(713,623,o),
(742,623,qs),
(756,623,o),
(772,616,q),
(764,614,o),
(754,600,o),
(754,592,qs),
(754,581,o),
(769,566,o),
(780,566,qs),
(788,566,o),
(802,576,o),
(804,584,q),
(811,568,o),
(811,554,qs),
(811,525,o),
(771,484,o),
(742,484,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
162 159 99 96 4 1 11 3 1 4 7 2 76 153 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 1 11 10 11 1 10 128 19 1 10 12 11 10 112 26 16 23 3 7 9 4 9 7 4 128 13 1 4 3 9 4 3 126 0 3 5 9 3 5 126 14 22 2 5 5 132 2 1 0 15 1 6 8 0 6 105 17 1 8 20 1 11 1 8 11 105 28 21 25 3 12 9 9 12 89 28 21 25 3 12 12 9 97 27 18 24 3 9 12 9 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 93 values pushed */
0 1 11 10 11 1 10 128 19 1 10 12 11 10 12 126 26 16 23 3 7 9 4 9 7 4 128 13 1 4 3 9 4 3 126 0 3 5 9 3 5 126 14 22 2 5 5 132 2 1 0 15 1 6 8 0 6 105 17 1 8 20 1 11 1 8 11 105 28 21 25 3 12 9 9 12 89 28 21 25 3 12 12 9 97 27 18 24 3 9 12 9 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 70 values pushed */
149 149 137 137 125 125 86 86 74 74 62 62 45 45 149 170 149 169 165 163 157 155 137 148 137 147 143 141 125 136 125 135 131 129 124 122 116 114 86 107 86 106 102 100 94 92 74 85 74 84 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 29 6 27
CALL[ ]	/* CallFunction */";
};
width = 1107;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(527,48,o),
(533,48,qs),
(540,48,o),
(545,53,qs),
(722,229,ls),
(781,288,o),
(781,367,qs),
(781,386,ls),
(781,393,o),
(784,399,o),
(790,401,qs),
(838,418,o),
(900,499,o),
(900,550,qs),
(900,594,o),
(858,667,o),
(786,710,o),
(741,710,qs),
(688,710,o),
(611,653,o),
(591,603,qs),
(587,592,o),
(575,584,o),
(566,584,qs),
(501,584,ls),
(490,584,o),
(478,592,o),
(474,603,qs),
(454,653,o),
(377,710,o),
(324,710,qs),
(279,710,o),
(207,667,o),
(165,594,o),
(165,550,qs),
(165,499,o),
(227,418,o),
(275,401,qs),
(281,399,o),
(284,393,o),
(284,386,qs),
(284,367,ls),
(284,294,o),
(343,229,q),
(520,53,l)
);
},
{
closed = 1;
nodes = (
(496,0,ls),
(502,0,o),
(509,7,o),
(509,12,qs),
(509,17,o),
(505,21,qs),
(302,222,ls),
(266,258,o),
(213,258,qs),
(179,258,o),
(119,227,o),
(81,168,o),
(81,130,qs),
(81,97,o),
(114,37,o),
(174,0,o),
(213,0,qs)
);
},
{
closed = 1;
nodes = (
(275,435,o),
(205,505,o),
(205,554,qs),
(205,603,o),
(275,672,o),
(324,672,qs),
(373,672,o),
(442,603,o),
(442,554,qs),
(442,505,o),
(373,435,o),
(324,435,qs)
);
},
{
closed = 1;
nodes = (
(364,456,o),
(421,514,o),
(421,554,qs),
(421,594,o),
(364,651,o),
(324,651,qs),
(284,651,o),
(226,594,o),
(226,554,qs),
(226,514,o),
(284,456,o),
(324,456,qs)
);
},
{
closed = 1;
nodes = (
(295,484,o),
(254,525,o),
(254,554,qs),
(254,583,o),
(295,623,o),
(324,623,qs),
(338,623,o),
(354,616,q),
(346,614,o),
(336,600,o),
(336,592,qs),
(336,581,o),
(351,566,o),
(362,566,qs),
(370,566,o),
(384,576,o),
(386,584,q),
(393,568,o),
(393,554,qs),
(393,525,o),
(353,484,o),
(324,484,qs)
);
},
{
closed = 1;
nodes = (
(852,0,ls),
(891,0,o),
(951,37,o),
(984,97,o),
(984,130,qs),
(984,168,o),
(946,227,o),
(886,258,o),
(852,258,qs),
(799,258,o),
(763,222,qs),
(560,21,ls),
(556,17,o),
(556,12,qs),
(556,7,o),
(563,0,o),
(569,0,qs)
);
},
{
closed = 1;
nodes = (
(693,435,o),
(623,505,o),
(623,554,qs),
(623,603,o),
(693,672,o),
(742,672,qs),
(791,672,o),
(860,603,o),
(860,554,qs),
(860,505,o),
(791,435,o),
(742,435,qs)
);
},
{
closed = 1;
nodes = (
(782,456,o),
(839,514,o),
(839,554,qs),
(839,594,o),
(782,651,o),
(742,651,qs),
(702,651,o),
(644,594,o),
(644,554,qs),
(644,514,o),
(702,456,o),
(742,456,qs)
);
},
{
closed = 1;
nodes = (
(713,484,o),
(672,525,o),
(672,554,qs),
(672,583,o),
(713,623,o),
(742,623,qs),
(756,623,o),
(772,616,q),
(764,614,o),
(754,600,o),
(754,592,qs),
(754,581,o),
(769,566,o),
(780,566,qs),
(788,566,o),
(802,576,o),
(804,584,q),
(811,568,o),
(811,554,qs),
(811,525,o),
(771,484,o),
(742,484,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
162 159 99 96 4 1 11 3 1 4 7 2 76 153 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 1 11 10 11 1 10 128 19 1 10 12 11 10 112 26 16 23 3 7 9 4 9 7 4 128 13 1 4 3 9 4 3 126 0 3 5 9 3 5 126 14 22 2 5 5 132 2 1 0 15 1 6 8 0 6 105 17 1 8 20 1 11 1 8 11 105 28 21 25 3 12 9 9 12 89 28 21 25 3 12 12 9 97 27 18 24 3 9 12 9 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 93 values pushed */
0 1 11 10 11 1 10 128 19 1 10 12 11 10 12 126 26 16 23 3 7 9 4 9 7 4 128 13 1 4 3 9 4 3 126 0 3 5 9 3 5 126 14 22 2 5 5 132 2 1 0 15 1 6 8 0 6 105 17 1 8 20 1 11 1 8 11 105 28 21 25 3 12 9 9 12 89 28 21 25 3 12 12 9 97 27 18 24 3 9 12 9 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 70 values pushed */
149 149 137 137 125 125 86 86 74 74 62 62 45 45 149 170 149 169 165 163 157 155 137 148 137 147 143 141 125 136 125 135 131 129 124 122 116 114 86 107 86 106 102 100 94 92 74 85 74 84 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 29 6 27
CALL[ ]	/* CallFunction */";
};
width = 1107;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(527,48,o),
(533,48,qs),
(540,48,o),
(545,53,qs),
(722,229,ls),
(781,288,o),
(781,367,qs),
(781,386,ls),
(781,393,o),
(784,399,o),
(790,401,qs),
(838,418,o),
(900,499,o),
(900,550,qs),
(900,594,o),
(858,667,o),
(786,710,o),
(741,710,qs),
(688,710,o),
(611,653,o),
(591,603,qs),
(587,592,o),
(575,584,o),
(566,584,qs),
(501,584,ls),
(490,584,o),
(478,592,o),
(474,603,qs),
(454,653,o),
(377,710,o),
(324,710,qs),
(279,710,o),
(207,667,o),
(165,594,o),
(165,550,qs),
(165,499,o),
(227,418,o),
(275,401,qs),
(281,399,o),
(284,393,o),
(284,386,qs),
(284,367,ls),
(284,294,o),
(343,229,q),
(520,53,l)
);
},
{
closed = 1;
nodes = (
(496,0,ls),
(502,0,o),
(509,7,o),
(509,12,qs),
(509,17,o),
(505,21,qs),
(302,222,ls),
(266,258,o),
(213,258,qs),
(179,258,o),
(119,227,o),
(81,168,o),
(81,130,qs),
(81,97,o),
(114,37,o),
(174,0,o),
(213,0,qs)
);
},
{
closed = 1;
nodes = (
(275,435,o),
(205,505,o),
(205,554,qs),
(205,603,o),
(275,672,o),
(324,672,qs),
(373,672,o),
(442,603,o),
(442,554,qs),
(442,505,o),
(373,435,o),
(324,435,qs)
);
},
{
closed = 1;
nodes = (
(364,456,o),
(421,514,o),
(421,554,qs),
(421,594,o),
(364,651,o),
(324,651,qs),
(284,651,o),
(226,594,o),
(226,554,qs),
(226,514,o),
(284,456,o),
(324,456,qs)
);
},
{
closed = 1;
nodes = (
(295,484,o),
(254,525,o),
(254,554,qs),
(254,583,o),
(295,623,o),
(324,623,qs),
(338,623,o),
(354,616,q),
(346,614,o),
(336,600,o),
(336,592,qs),
(336,581,o),
(351,566,o),
(362,566,qs),
(370,566,o),
(384,576,o),
(386,584,q),
(393,568,o),
(393,554,qs),
(393,525,o),
(353,484,o),
(324,484,qs)
);
},
{
closed = 1;
nodes = (
(852,0,ls),
(891,0,o),
(951,37,o),
(984,97,o),
(984,130,qs),
(984,168,o),
(946,227,o),
(886,258,o),
(852,258,qs),
(799,258,o),
(763,222,qs),
(560,21,ls),
(556,17,o),
(556,12,qs),
(556,7,o),
(563,0,o),
(569,0,qs)
);
},
{
closed = 1;
nodes = (
(693,435,o),
(623,505,o),
(623,554,qs),
(623,603,o),
(693,672,o),
(742,672,qs),
(791,672,o),
(860,603,o),
(860,554,qs),
(860,505,o),
(791,435,o),
(742,435,qs)
);
},
{
closed = 1;
nodes = (
(782,456,o),
(839,514,o),
(839,554,qs),
(839,594,o),
(782,651,o),
(742,651,qs),
(702,651,o),
(644,594,o),
(644,554,qs),
(644,514,o),
(702,456,o),
(742,456,qs)
);
},
{
closed = 1;
nodes = (
(713,484,o),
(672,525,o),
(672,554,qs),
(672,583,o),
(713,623,o),
(742,623,qs),
(756,623,o),
(772,616,q),
(764,614,o),
(754,600,o),
(754,592,qs),
(754,581,o),
(769,566,o),
(780,566,qs),
(788,566,o),
(802,576,o),
(804,584,q),
(811,568,o),
(811,554,qs),
(811,525,o),
(771,484,o),
(742,484,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
162 159 99 96 4 1 11 3 1 4 7 2 76 153 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 1 11 10 11 1 10 128 19 1 10 12 11 10 112 26 16 23 3 7 9 4 9 7 4 128 13 1 4 3 9 4 3 126 0 3 5 9 3 5 126 14 22 2 5 5 132 2 1 0 15 1 6 8 0 6 105 17 1 8 20 1 11 1 8 11 105 28 21 25 3 12 9 9 12 89 28 21 25 3 12 12 9 97 27 18 24 3 9 12 9 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 93 values pushed */
0 1 11 10 11 1 10 128 19 1 10 12 11 10 12 126 26 16 23 3 7 9 4 9 7 4 128 13 1 4 3 9 4 3 126 0 3 5 9 3 5 126 14 22 2 5 5 132 2 1 0 15 1 6 8 0 6 105 17 1 8 20 1 11 1 8 11 105 28 21 25 3 12 9 9 12 89 28 21 25 3 12 12 9 97 27 18 24 3 9 12 9 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 70 values pushed */
149 149 137 137 125 125 86 86 74 74 62 62 45 45 149 170 149 169 165 163 157 155 137 148 137 147 143 141 125 136 125 135 131 129 124 122 116 114 86 107 86 106 102 100 94 92 74 85 74 84 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 29 6 27
CALL[ ]	/* CallFunction */";
};
width = 1107;
}
);
note = uniE002;
unicode = 57346;
},
{
glyphname = uniE003;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(527,48,o),
(533,48,qs),
(540,48,o),
(545,53,qs),
(722,229,ls),
(781,288,o),
(781,367,qs),
(781,386,ls),
(781,393,o),
(784,399,o),
(790,401,qs),
(838,418,o),
(900,499,o),
(900,550,qs),
(900,594,o),
(858,667,o),
(786,710,o),
(741,710,qs),
(688,710,o),
(611,653,o),
(591,603,qs),
(587,592,o),
(575,584,o),
(566,584,qs),
(501,584,ls),
(490,584,o),
(478,592,o),
(474,603,qs),
(454,653,o),
(377,710,o),
(324,710,qs),
(279,710,o),
(207,667,o),
(165,594,o),
(165,550,qs),
(165,499,o),
(227,418,o),
(275,401,qs),
(281,399,o),
(284,393,o),
(284,386,qs),
(284,367,ls),
(284,294,o),
(343,229,q),
(520,53,l)
);
},
{
closed = 1;
nodes = (
(496,0,ls),
(502,0,o),
(509,7,o),
(509,12,qs),
(509,17,o),
(505,21,qs),
(302,222,ls),
(266,258,o),
(213,258,qs),
(179,258,o),
(119,227,o),
(81,168,o),
(81,130,qs),
(81,97,o),
(114,37,o),
(174,0,o),
(213,0,qs)
);
},
{
closed = 1;
nodes = (
(284,456,o),
(226,514,o),
(226,554,qs),
(226,594,o),
(284,651,o),
(324,651,qs),
(364,651,o),
(421,594,o),
(421,554,qs),
(421,514,o),
(364,456,o),
(324,456,qs)
);
},
{
closed = 1;
nodes = (
(353,484,o),
(393,525,o),
(393,554,qs),
(393,568,o),
(386,584,q),
(384,576,o),
(370,566,o),
(362,566,qs),
(351,566,o),
(336,581,o),
(336,592,qs),
(336,600,o),
(346,614,o),
(354,616,q),
(338,623,o),
(324,623,qs),
(295,623,o),
(254,583,o),
(254,554,qs),
(254,525,o),
(295,484,o),
(324,484,qs)
);
},
{
closed = 1;
nodes = (
(852,0,ls),
(891,0,o),
(951,37,o),
(984,97,o),
(984,130,qs),
(984,168,o),
(946,227,o),
(886,258,o),
(852,258,qs),
(799,258,o),
(763,222,qs),
(560,21,ls),
(556,17,o),
(556,12,qs),
(556,7,o),
(563,0,o),
(569,0,qs)
);
},
{
closed = 1;
nodes = (
(702,456,o),
(644,514,o),
(644,554,qs),
(644,594,o),
(702,651,o),
(742,651,qs),
(782,651,o),
(839,594,o),
(839,554,qs),
(839,514,o),
(782,456,o),
(742,456,qs)
);
},
{
closed = 1;
nodes = (
(771,484,o),
(811,525,o),
(811,554,qs),
(811,568,o),
(804,584,q),
(802,576,o),
(788,566,o),
(780,566,qs),
(769,566,o),
(754,581,o),
(754,592,qs),
(754,600,o),
(764,614,o),
(772,616,q),
(756,623,o),
(742,623,qs),
(713,623,o),
(672,583,o),
(672,554,qs),
(672,525,o),
(713,484,o),
(742,484,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 150 values pushed */
132 81 2 1 8 3 1 4 7 2 76 141 90 2 1 1 75 0 1 8 9 8 1 9 128 16 1 9 10 8 9 10 126 21 14 19 3 7 10 4 10 7 4 128 11 1 4 3 10 4 3 126 0 3 5 10 3 5 126 12 18 2 5 5 132 2 1 0 13 1 6 8 0 6 105 15 1 8 1 10 8 89 15 1 8 8 10 97 22 17 20 3 10 8 10 81 125 125 113 113 74 74 62 62 45 45 125 146 125 145 138 137 131 129 113 124 113 123 119 117 112 110 104 102 74 95 74 94 87 86 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 23 6 27
CALL[ ]	/* CallFunction */";
};
width = 1107;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(527,48,o),
(533,48,qs),
(540,48,o),
(545,53,qs),
(722,229,ls),
(781,288,o),
(781,367,qs),
(781,386,ls),
(781,393,o),
(784,399,o),
(790,401,qs),
(838,418,o),
(900,499,o),
(900,550,qs),
(900,594,o),
(858,667,o),
(786,710,o),
(741,710,qs),
(688,710,o),
(611,653,o),
(591,603,qs),
(587,592,o),
(575,584,o),
(566,584,qs),
(501,584,ls),
(490,584,o),
(478,592,o),
(474,603,qs),
(454,653,o),
(377,710,o),
(324,710,qs),
(279,710,o),
(207,667,o),
(165,594,o),
(165,550,qs),
(165,499,o),
(227,418,o),
(275,401,qs),
(281,399,o),
(284,393,o),
(284,386,qs),
(284,367,ls),
(284,294,o),
(343,229,q),
(520,53,l)
);
},
{
closed = 1;
nodes = (
(496,0,ls),
(502,0,o),
(509,7,o),
(509,12,qs),
(509,17,o),
(505,21,qs),
(302,222,ls),
(266,258,o),
(213,258,qs),
(179,258,o),
(119,227,o),
(81,168,o),
(81,130,qs),
(81,97,o),
(114,37,o),
(174,0,o),
(213,0,qs)
);
},
{
closed = 1;
nodes = (
(284,456,o),
(226,514,o),
(226,554,qs),
(226,594,o),
(284,651,o),
(324,651,qs),
(364,651,o),
(421,594,o),
(421,554,qs),
(421,514,o),
(364,456,o),
(324,456,qs)
);
},
{
closed = 1;
nodes = (
(353,484,o),
(393,525,o),
(393,554,qs),
(393,568,o),
(386,584,q),
(384,576,o),
(370,566,o),
(362,566,qs),
(351,566,o),
(336,581,o),
(336,592,qs),
(336,600,o),
(346,614,o),
(354,616,q),
(338,623,o),
(324,623,qs),
(295,623,o),
(254,583,o),
(254,554,qs),
(254,525,o),
(295,484,o),
(324,484,qs)
);
},
{
closed = 1;
nodes = (
(852,0,ls),
(891,0,o),
(951,37,o),
(984,97,o),
(984,130,qs),
(984,168,o),
(946,227,o),
(886,258,o),
(852,258,qs),
(799,258,o),
(763,222,qs),
(560,21,ls),
(556,17,o),
(556,12,qs),
(556,7,o),
(563,0,o),
(569,0,qs)
);
},
{
closed = 1;
nodes = (
(702,456,o),
(644,514,o),
(644,554,qs),
(644,594,o),
(702,651,o),
(742,651,qs),
(782,651,o),
(839,594,o),
(839,554,qs),
(839,514,o),
(782,456,o),
(742,456,qs)
);
},
{
closed = 1;
nodes = (
(771,484,o),
(811,525,o),
(811,554,qs),
(811,568,o),
(804,584,q),
(802,576,o),
(788,566,o),
(780,566,qs),
(769,566,o),
(754,581,o),
(754,592,qs),
(754,600,o),
(764,614,o),
(772,616,q),
(756,623,o),
(742,623,qs),
(713,623,o),
(672,583,o),
(672,554,qs),
(672,525,o),
(713,484,o),
(742,484,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 150 values pushed */
132 81 2 1 8 3 1 4 7 2 76 141 90 2 1 1 75 0 1 8 9 8 1 9 128 16 1 9 10 8 9 10 126 21 14 19 3 7 10 4 10 7 4 128 11 1 4 3 10 4 3 126 0 3 5 10 3 5 126 12 18 2 5 5 132 2 1 0 13 1 6 8 0 6 105 15 1 8 1 10 8 89 15 1 8 8 10 97 22 17 20 3 10 8 10 81 125 125 113 113 74 74 62 62 45 45 125 146 125 145 138 137 131 129 113 124 113 123 119 117 112 110 104 102 74 95 74 94 87 86 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 23 6 27
CALL[ ]	/* CallFunction */";
};
width = 1107;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(527,48,o),
(533,48,qs),
(540,48,o),
(545,53,qs),
(722,229,ls),
(781,288,o),
(781,367,qs),
(781,386,ls),
(781,393,o),
(784,399,o),
(790,401,qs),
(838,418,o),
(900,499,o),
(900,550,qs),
(900,594,o),
(858,667,o),
(786,710,o),
(741,710,qs),
(688,710,o),
(611,653,o),
(591,603,qs),
(587,592,o),
(575,584,o),
(566,584,qs),
(501,584,ls),
(490,584,o),
(478,592,o),
(474,603,qs),
(454,653,o),
(377,710,o),
(324,710,qs),
(279,710,o),
(207,667,o),
(165,594,o),
(165,550,qs),
(165,499,o),
(227,418,o),
(275,401,qs),
(281,399,o),
(284,393,o),
(284,386,qs),
(284,367,ls),
(284,294,o),
(343,229,q),
(520,53,l)
);
},
{
closed = 1;
nodes = (
(496,0,ls),
(502,0,o),
(509,7,o),
(509,12,qs),
(509,17,o),
(505,21,qs),
(302,222,ls),
(266,258,o),
(213,258,qs),
(179,258,o),
(119,227,o),
(81,168,o),
(81,130,qs),
(81,97,o),
(114,37,o),
(174,0,o),
(213,0,qs)
);
},
{
closed = 1;
nodes = (
(284,456,o),
(226,514,o),
(226,554,qs),
(226,594,o),
(284,651,o),
(324,651,qs),
(364,651,o),
(421,594,o),
(421,554,qs),
(421,514,o),
(364,456,o),
(324,456,qs)
);
},
{
closed = 1;
nodes = (
(353,484,o),
(393,525,o),
(393,554,qs),
(393,568,o),
(386,584,q),
(384,576,o),
(370,566,o),
(362,566,qs),
(351,566,o),
(336,581,o),
(336,592,qs),
(336,600,o),
(346,614,o),
(354,616,q),
(338,623,o),
(324,623,qs),
(295,623,o),
(254,583,o),
(254,554,qs),
(254,525,o),
(295,484,o),
(324,484,qs)
);
},
{
closed = 1;
nodes = (
(852,0,ls),
(891,0,o),
(951,37,o),
(984,97,o),
(984,130,qs),
(984,168,o),
(946,227,o),
(886,258,o),
(852,258,qs),
(799,258,o),
(763,222,qs),
(560,21,ls),
(556,17,o),
(556,12,qs),
(556,7,o),
(563,0,o),
(569,0,qs)
);
},
{
closed = 1;
nodes = (
(702,456,o),
(644,514,o),
(644,554,qs),
(644,594,o),
(702,651,o),
(742,651,qs),
(782,651,o),
(839,594,o),
(839,554,qs),
(839,514,o),
(782,456,o),
(742,456,qs)
);
},
{
closed = 1;
nodes = (
(771,484,o),
(811,525,o),
(811,554,qs),
(811,568,o),
(804,584,q),
(802,576,o),
(788,566,o),
(780,566,qs),
(769,566,o),
(754,581,o),
(754,592,qs),
(754,600,o),
(764,614,o),
(772,616,q),
(756,623,o),
(742,623,qs),
(713,623,o),
(672,583,o),
(672,554,qs),
(672,525,o),
(713,484,o),
(742,484,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 150 values pushed */
132 81 2 1 8 3 1 4 7 2 76 141 90 2 1 1 75 0 1 8 9 8 1 9 128 16 1 9 10 8 9 10 126 21 14 19 3 7 10 4 10 7 4 128 11 1 4 3 10 4 3 126 0 3 5 10 3 5 126 12 18 2 5 5 132 2 1 0 13 1 6 8 0 6 105 15 1 8 1 10 8 89 15 1 8 8 10 97 22 17 20 3 10 8 10 81 125 125 113 113 74 74 62 62 45 45 125 146 125 145 138 137 131 129 113 124 113 123 119 117 112 110 104 102 74 95 74 94 87 86 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 23 6 27
CALL[ ]	/* CallFunction */";
};
width = 1107;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(527,48,o),
(533,48,qs),
(540,48,o),
(545,53,qs),
(722,229,ls),
(781,288,o),
(781,367,qs),
(781,386,ls),
(781,393,o),
(784,399,o),
(790,401,qs),
(838,418,o),
(900,499,o),
(900,550,qs),
(900,594,o),
(858,667,o),
(786,710,o),
(741,710,qs),
(688,710,o),
(611,653,o),
(591,603,qs),
(587,592,o),
(575,584,o),
(566,584,qs),
(501,584,ls),
(490,584,o),
(478,592,o),
(474,603,qs),
(454,653,o),
(377,710,o),
(324,710,qs),
(279,710,o),
(207,667,o),
(165,594,o),
(165,550,qs),
(165,499,o),
(227,418,o),
(275,401,qs),
(281,399,o),
(284,393,o),
(284,386,qs),
(284,367,ls),
(284,294,o),
(343,229,q),
(520,53,l)
);
},
{
closed = 1;
nodes = (
(496,0,ls),
(502,0,o),
(509,7,o),
(509,12,qs),
(509,17,o),
(505,21,qs),
(302,222,ls),
(266,258,o),
(213,258,qs),
(179,258,o),
(119,227,o),
(81,168,o),
(81,130,qs),
(81,97,o),
(114,37,o),
(174,0,o),
(213,0,qs)
);
},
{
closed = 1;
nodes = (
(284,456,o),
(226,514,o),
(226,554,qs),
(226,594,o),
(284,651,o),
(324,651,qs),
(364,651,o),
(421,594,o),
(421,554,qs),
(421,514,o),
(364,456,o),
(324,456,qs)
);
},
{
closed = 1;
nodes = (
(353,484,o),
(393,525,o),
(393,554,qs),
(393,568,o),
(386,584,q),
(384,576,o),
(370,566,o),
(362,566,qs),
(351,566,o),
(336,581,o),
(336,592,qs),
(336,600,o),
(346,614,o),
(354,616,q),
(338,623,o),
(324,623,qs),
(295,623,o),
(254,583,o),
(254,554,qs),
(254,525,o),
(295,484,o),
(324,484,qs)
);
},
{
closed = 1;
nodes = (
(852,0,ls),
(891,0,o),
(951,37,o),
(984,97,o),
(984,130,qs),
(984,168,o),
(946,227,o),
(886,258,o),
(852,258,qs),
(799,258,o),
(763,222,qs),
(560,21,ls),
(556,17,o),
(556,12,qs),
(556,7,o),
(563,0,o),
(569,0,qs)
);
},
{
closed = 1;
nodes = (
(702,456,o),
(644,514,o),
(644,554,qs),
(644,594,o),
(702,651,o),
(742,651,qs),
(782,651,o),
(839,594,o),
(839,554,qs),
(839,514,o),
(782,456,o),
(742,456,qs)
);
},
{
closed = 1;
nodes = (
(771,484,o),
(811,525,o),
(811,554,qs),
(811,568,o),
(804,584,q),
(802,576,o),
(788,566,o),
(780,566,qs),
(769,566,o),
(754,581,o),
(754,592,qs),
(754,600,o),
(764,614,o),
(772,616,q),
(756,623,o),
(742,623,qs),
(713,623,o),
(672,583,o),
(672,554,qs),
(672,525,o),
(713,484,o),
(742,484,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 150 values pushed */
132 81 2 1 8 3 1 4 7 2 76 141 90 2 1 1 75 0 1 8 9 8 1 9 128 16 1 9 10 8 9 10 126 21 14 19 3 7 10 4 10 7 4 128 11 1 4 3 10 4 3 126 0 3 5 10 3 5 126 12 18 2 5 5 132 2 1 0 13 1 6 8 0 6 105 15 1 8 1 10 8 89 15 1 8 8 10 97 22 17 20 3 10 8 10 81 125 125 113 113 74 74 62 62 45 45 125 146 125 145 138 137 131 129 113 124 113 123 119 117 112 110 104 102 74 95 74 94 87 86 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 23 6 27
CALL[ ]	/* CallFunction */";
};
width = 1107;
}
);
note = uniE003;
unicode = 57347;
},
{
glyphname = uniE004;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(527,48,o),
(533,48,qs),
(540,48,o),
(545,53,qs),
(722,229,ls),
(781,288,o),
(781,367,qs),
(781,386,ls),
(781,393,o),
(784,399,o),
(790,401,qs),
(838,418,o),
(900,499,o),
(900,550,qs),
(900,594,o),
(858,667,o),
(786,710,o),
(741,710,qs),
(688,710,o),
(611,653,o),
(591,603,qs),
(587,592,o),
(575,584,o),
(566,584,qs),
(501,584,ls),
(490,584,o),
(478,592,o),
(474,603,qs),
(454,653,o),
(377,710,o),
(324,710,qs),
(279,710,o),
(207,667,o),
(165,594,o),
(165,550,qs),
(165,499,o),
(227,418,o),
(275,401,qs),
(281,399,o),
(284,393,o),
(284,386,qs),
(284,367,ls),
(284,294,o),
(343,229,q),
(520,53,l)
);
},
{
closed = 1;
nodes = (
(496,0,ls),
(502,0,o),
(509,7,o),
(509,12,qs),
(509,17,o),
(505,21,qs),
(302,222,ls),
(266,258,o),
(213,258,qs),
(179,258,o),
(119,227,o),
(81,168,o),
(81,130,qs),
(81,97,o),
(114,37,o),
(174,0,o),
(213,0,qs)
);
},
{
closed = 1;
nodes = (
(275,435,o),
(205,505,o),
(205,554,qs),
(205,603,o),
(275,672,o),
(324,672,qs),
(373,672,o),
(442,603,o),
(442,554,qs),
(442,505,o),
(373,435,o),
(324,435,qs)
);
},
{
closed = 1;
nodes = (
(364,456,o),
(421,514,o),
(421,554,qs),
(421,594,o),
(364,651,o),
(324,651,qs),
(284,651,o),
(226,594,o),
(226,554,qs),
(226,514,o),
(284,456,o),
(324,456,qs)
);
},
{
closed = 1;
nodes = (
(295,484,o),
(254,525,o),
(254,554,qs),
(254,583,o),
(295,623,o),
(324,623,qs),
(338,623,o),
(354,616,q),
(346,614,o),
(336,600,o),
(336,592,qs),
(336,581,o),
(351,566,o),
(362,566,qs),
(370,566,o),
(384,576,o),
(386,584,q),
(393,568,o),
(393,554,qs),
(393,525,o),
(353,484,o),
(324,484,qs)
);
},
{
closed = 1;
nodes = (
(852,0,ls),
(891,0,o),
(951,37,o),
(984,97,o),
(984,130,qs),
(984,168,o),
(946,227,o),
(886,258,o),
(852,258,qs),
(799,258,o),
(763,222,qs),
(560,21,ls),
(556,17,o),
(556,12,qs),
(556,7,o),
(563,0,o),
(569,0,qs)
);
},
{
closed = 1;
nodes = (
(1236,0,l),
(1236,214,l),
(1441,0,l),
(1587,0,l),
(1343,260,l),
(1572,511,l),
(1428,511,l),
(1236,309,l),
(1236,700,l),
(1122,700,l),
(1122,0,l)
);
},
{
closed = 1;
nodes = (
(1908,-12,o),
(2033,57,o),
(2104,179,o),
(2104,254,qs),
(2104,329,o),
(2033,452,o),
(1908,523,o),
(1830,523,qs),
(1752,523,o),
(1628,452,o),
(1557,329,o),
(1557,254,qs),
(1557,179,o),
(1628,57,o),
(1752,-12,o),
(1830,-12,qs)
);
},
{
closed = 1;
nodes = (
(1781,95,o),
(1710,137,o),
(1671,210,o),
(1671,254,qs),
(1671,298,o),
(1710,371,o),
(1781,413,o),
(1828,413,qs),
(1875,413,o),
(1947,371,o),
(1987,298,o),
(1987,254,qs),
(1987,210,o),
(1947,137,o),
(1875,95,o),
(1828,95,qs)
);
},
{
closed = 1;
nodes = (
(1754,566,o),
(1795,607,o),
(1795,637,qs),
(1795,667,o),
(1755,707,o),
(1724,707,qs),
(1694,707,o),
(1653,665,o),
(1653,636,qs),
(1653,607,o),
(1694,566,o),
(1724,566,qs)
);
},
{
closed = 1;
nodes = (
(1965,566,o),
(2006,607,o),
(2006,637,qs),
(2006,667,o),
(1966,707,o),
(1935,707,qs),
(1905,707,o),
(1864,665,o),
(1864,636,qs),
(1864,607,o),
(1905,566,o),
(1935,566,qs)
);
},
{
closed = 1;
nodes = (
(2284,0,l),
(2284,700,l),
(2174,700,l),
(2174,0,l)
);
},
{
closed = 1;
nodes = (
(2599,95,o),
(2527,140,o),
(2489,213,o),
(2489,254,qs),
(2489,297,o),
(2530,370,o),
(2602,413,o),
(2648,413,qs),
(2716,413,o),
(2804,323,o),
(2804,254,qs),
(2804,209,o),
(2764,136,o),
(2693,95,o),
(2648,95,qs)
);
},
{
closed = 1;
nodes = (
(2744,-12,o),
(2858,60,o),
(2920,182,o),
(2920,254,qs),
(2920,331,o),
(2854,454,o),
(2740,523,o),
(2669,523,qs),
(2612,523,o),
(2524,478,o),
(2489,431,q),
(2489,700,l),
(2379,700,l),
(2379,0,l),
(2489,0,l),
(2489,80,l),
(2524,33,o),
(2612,-12,o),
(2669,-12,qs)
);
},
{
closed = 1;
nodes = (
(3103,0,l),
(3103,511,l),
(2990,511,l),
(2990,0,l)
);
},
{
closed = 1;
nodes = (
(3076,566,o),
(3117,607,o),
(3117,637,qs),
(3117,667,o),
(3077,707,o),
(3046,707,qs),
(3016,707,o),
(2975,665,o),
(2975,636,qs),
(2975,607,o),
(3016,566,o),
(3046,566,qs)
);
},
{
closed = 1;
nodes = (
(693,435,o),
(623,505,o),
(623,554,qs),
(623,603,o),
(693,672,o),
(742,672,qs),
(791,672,o),
(860,603,o),
(860,554,qs),
(860,505,o),
(791,435,o),
(742,435,qs)
);
},
{
closed = 1;
nodes = (
(782,456,o),
(839,514,o),
(839,554,qs),
(839,594,o),
(782,651,o),
(742,651,qs),
(702,651,o),
(644,594,o),
(644,554,qs),
(644,514,o),
(702,456,o),
(742,456,qs)
);
},
{
closed = 1;
nodes = (
(713,484,o),
(672,525,o),
(672,554,qs),
(672,583,o),
(713,623,o),
(742,623,qs),
(756,623,o),
(772,616,q),
(764,614,o),
(754,600,o),
(754,592,qs),
(754,581,o),
(769,566,o),
(780,566,qs),
(788,566,o),
(802,576,o),
(804,584,q),
(811,568,o),
(811,554,qs),
(811,525,o),
(771,484,o),
(742,484,qs)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 33 values pushed */
283 280 99 96 4 1 11 218 1 21 7 130 127 3 3 4 21 133 1 22 4 213 1 3 22 5 76 274 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 154 values pushed */
32 27 2 15 0 6 0 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 39 1 6 8 0 6 89 41 1 8 44 1 11 1 8 11 105 37 25 23 2 4 0 43 56 38 53 26 52 24 7 10 19 0 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 155 values pushed */
32 27 2 15 23 6 23 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 2 1 0 39 1 6 8 0 6 105 41 1 8 44 1 11 1 8 11 105 37 25 2 23 43 56 38 53 26 52 24 7 10 19 23 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 154 values pushed */
32 27 2 15 0 6 0 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 39 1 6 8 0 6 89 41 1 8 44 1 11 1 8 11 105 37 25 23 2 4 0 43 56 38 53 26 52 24 7 10 19 0 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 146 values pushed */
270 270 258 258 246 246 234 234 211 211 196 196 180 180 168 168 152 152 136 136 86 86 74 74 62 62 45 45 270 291 270 290 286 284 278 276 258 269 258 268 264 262 246 257 246 256 252 250 234 245 234 244 240 238 233 232 231 230 211 229 211 228 222 220 217 216 215 214 196 210 196 209 203 201 195 194 193 192 180 191 180 190 186 184 168 179 168 178 174 172 152 167 152 166 160 158 136 151 136 150 144 142 135 134 132 131 129 128 126 125 124 122 116 114 86 107 86 106 102 100 94 92 74 85 74 84 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 60 6 27
CALL[ ]	/* CallFunction */";
};
width = 3247;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(527,48,o),
(533,48,qs),
(540,48,o),
(545,53,qs),
(722,229,ls),
(781,288,o),
(781,367,qs),
(781,386,ls),
(781,393,o),
(784,399,o),
(790,401,qs),
(838,418,o),
(900,499,o),
(900,550,qs),
(900,594,o),
(858,667,o),
(786,710,o),
(741,710,qs),
(688,710,o),
(611,653,o),
(591,603,qs),
(587,592,o),
(575,584,o),
(566,584,qs),
(501,584,ls),
(490,584,o),
(478,592,o),
(474,603,qs),
(454,653,o),
(377,710,o),
(324,710,qs),
(279,710,o),
(207,667,o),
(165,594,o),
(165,550,qs),
(165,499,o),
(227,418,o),
(275,401,qs),
(281,399,o),
(284,393,o),
(284,386,qs),
(284,367,ls),
(284,294,o),
(343,229,q),
(520,53,l)
);
},
{
closed = 1;
nodes = (
(496,0,ls),
(502,0,o),
(509,7,o),
(509,12,qs),
(509,17,o),
(505,21,qs),
(302,222,ls),
(266,258,o),
(213,258,qs),
(179,258,o),
(119,227,o),
(81,168,o),
(81,130,qs),
(81,97,o),
(114,37,o),
(174,0,o),
(213,0,qs)
);
},
{
closed = 1;
nodes = (
(275,435,o),
(205,505,o),
(205,554,qs),
(205,603,o),
(275,672,o),
(324,672,qs),
(373,672,o),
(442,603,o),
(442,554,qs),
(442,505,o),
(373,435,o),
(324,435,qs)
);
},
{
closed = 1;
nodes = (
(364,456,o),
(421,514,o),
(421,554,qs),
(421,594,o),
(364,651,o),
(324,651,qs),
(284,651,o),
(226,594,o),
(226,554,qs),
(226,514,o),
(284,456,o),
(324,456,qs)
);
},
{
closed = 1;
nodes = (
(295,484,o),
(254,525,o),
(254,554,qs),
(254,583,o),
(295,623,o),
(324,623,qs),
(338,623,o),
(354,616,q),
(346,614,o),
(336,600,o),
(336,592,qs),
(336,581,o),
(351,566,o),
(362,566,qs),
(370,566,o),
(384,576,o),
(386,584,q),
(393,568,o),
(393,554,qs),
(393,525,o),
(353,484,o),
(324,484,qs)
);
},
{
closed = 1;
nodes = (
(852,0,ls),
(891,0,o),
(951,37,o),
(984,97,o),
(984,130,qs),
(984,168,o),
(946,227,o),
(886,258,o),
(852,258,qs),
(799,258,o),
(763,222,qs),
(560,21,ls),
(556,17,o),
(556,12,qs),
(556,7,o),
(563,0,o),
(569,0,qs)
);
},
{
closed = 1;
nodes = (
(1236,0,l),
(1236,214,l),
(1441,0,l),
(1587,0,l),
(1343,260,l),
(1572,511,l),
(1428,511,l),
(1236,309,l),
(1236,700,l),
(1122,700,l),
(1122,0,l)
);
},
{
closed = 1;
nodes = (
(1908,-12,o),
(2033,57,o),
(2104,179,o),
(2104,254,qs),
(2104,329,o),
(2033,452,o),
(1908,523,o),
(1830,523,qs),
(1752,523,o),
(1628,452,o),
(1557,329,o),
(1557,254,qs),
(1557,179,o),
(1628,57,o),
(1752,-12,o),
(1830,-12,qs)
);
},
{
closed = 1;
nodes = (
(1781,95,o),
(1710,137,o),
(1671,210,o),
(1671,254,qs),
(1671,298,o),
(1710,371,o),
(1781,413,o),
(1828,413,qs),
(1875,413,o),
(1947,371,o),
(1987,298,o),
(1987,254,qs),
(1987,210,o),
(1947,137,o),
(1875,95,o),
(1828,95,qs)
);
},
{
closed = 1;
nodes = (
(1754,566,o),
(1795,607,o),
(1795,637,qs),
(1795,667,o),
(1755,707,o),
(1724,707,qs),
(1694,707,o),
(1653,665,o),
(1653,636,qs),
(1653,607,o),
(1694,566,o),
(1724,566,qs)
);
},
{
closed = 1;
nodes = (
(1965,566,o),
(2006,607,o),
(2006,637,qs),
(2006,667,o),
(1966,707,o),
(1935,707,qs),
(1905,707,o),
(1864,665,o),
(1864,636,qs),
(1864,607,o),
(1905,566,o),
(1935,566,qs)
);
},
{
closed = 1;
nodes = (
(2284,0,l),
(2284,700,l),
(2174,700,l),
(2174,0,l)
);
},
{
closed = 1;
nodes = (
(2599,95,o),
(2527,140,o),
(2489,213,o),
(2489,254,qs),
(2489,297,o),
(2530,370,o),
(2602,413,o),
(2648,413,qs),
(2716,413,o),
(2804,323,o),
(2804,254,qs),
(2804,209,o),
(2764,136,o),
(2693,95,o),
(2648,95,qs)
);
},
{
closed = 1;
nodes = (
(2744,-12,o),
(2858,60,o),
(2920,182,o),
(2920,254,qs),
(2920,331,o),
(2854,454,o),
(2740,523,o),
(2669,523,qs),
(2612,523,o),
(2524,478,o),
(2489,431,q),
(2489,700,l),
(2379,700,l),
(2379,0,l),
(2489,0,l),
(2489,80,l),
(2524,33,o),
(2612,-12,o),
(2669,-12,qs)
);
},
{
closed = 1;
nodes = (
(3103,0,l),
(3103,511,l),
(2990,511,l),
(2990,0,l)
);
},
{
closed = 1;
nodes = (
(3076,566,o),
(3117,607,o),
(3117,637,qs),
(3117,667,o),
(3077,707,o),
(3046,707,qs),
(3016,707,o),
(2975,665,o),
(2975,636,qs),
(2975,607,o),
(3016,566,o),
(3046,566,qs)
);
},
{
closed = 1;
nodes = (
(693,435,o),
(623,505,o),
(623,554,qs),
(623,603,o),
(693,672,o),
(742,672,qs),
(791,672,o),
(860,603,o),
(860,554,qs),
(860,505,o),
(791,435,o),
(742,435,qs)
);
},
{
closed = 1;
nodes = (
(782,456,o),
(839,514,o),
(839,554,qs),
(839,594,o),
(782,651,o),
(742,651,qs),
(702,651,o),
(644,594,o),
(644,554,qs),
(644,514,o),
(702,456,o),
(742,456,qs)
);
},
{
closed = 1;
nodes = (
(713,484,o),
(672,525,o),
(672,554,qs),
(672,583,o),
(713,623,o),
(742,623,qs),
(756,623,o),
(772,616,q),
(764,614,o),
(754,600,o),
(754,592,qs),
(754,581,o),
(769,566,o),
(780,566,qs),
(788,566,o),
(802,576,o),
(804,584,q),
(811,568,o),
(811,554,qs),
(811,525,o),
(771,484,o),
(742,484,qs)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 33 values pushed */
283 280 99 96 4 1 11 218 1 21 7 130 127 3 3 4 21 133 1 22 4 213 1 3 22 5 76 274 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 154 values pushed */
32 27 2 15 0 6 0 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 39 1 6 8 0 6 89 41 1 8 44 1 11 1 8 11 105 37 25 23 2 4 0 43 56 38 53 26 52 24 7 10 19 0 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 155 values pushed */
32 27 2 15 23 6 23 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 2 1 0 39 1 6 8 0 6 105 41 1 8 44 1 11 1 8 11 105 37 25 2 23 43 56 38 53 26 52 24 7 10 19 23 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 154 values pushed */
32 27 2 15 0 6 0 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 39 1 6 8 0 6 89 41 1 8 44 1 11 1 8 11 105 37 25 23 2 4 0 43 56 38 53 26 52 24 7 10 19 0 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 146 values pushed */
270 270 258 258 246 246 234 234 211 211 196 196 180 180 168 168 152 152 136 136 86 86 74 74 62 62 45 45 270 291 270 290 286 284 278 276 258 269 258 268 264 262 246 257 246 256 252 250 234 245 234 244 240 238 233 232 231 230 211 229 211 228 222 220 217 216 215 214 196 210 196 209 203 201 195 194 193 192 180 191 180 190 186 184 168 179 168 178 174 172 152 167 152 166 160 158 136 151 136 150 144 142 135 134 132 131 129 128 126 125 124 122 116 114 86 107 86 106 102 100 94 92 74 85 74 84 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 60 6 27
CALL[ ]	/* CallFunction */";
};
width = 3247;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(527,48,o),
(533,48,qs),
(540,48,o),
(545,53,qs),
(722,229,ls),
(781,288,o),
(781,367,qs),
(781,386,ls),
(781,393,o),
(784,399,o),
(790,401,qs),
(838,418,o),
(900,499,o),
(900,550,qs),
(900,594,o),
(858,667,o),
(786,710,o),
(741,710,qs),
(688,710,o),
(611,653,o),
(591,603,qs),
(587,592,o),
(575,584,o),
(566,584,qs),
(501,584,ls),
(490,584,o),
(478,592,o),
(474,603,qs),
(454,653,o),
(377,710,o),
(324,710,qs),
(279,710,o),
(207,667,o),
(165,594,o),
(165,550,qs),
(165,499,o),
(227,418,o),
(275,401,qs),
(281,399,o),
(284,393,o),
(284,386,qs),
(284,367,ls),
(284,294,o),
(343,229,q),
(520,53,l)
);
},
{
closed = 1;
nodes = (
(496,0,ls),
(502,0,o),
(509,7,o),
(509,12,qs),
(509,17,o),
(505,21,qs),
(302,222,ls),
(266,258,o),
(213,258,qs),
(179,258,o),
(119,227,o),
(81,168,o),
(81,130,qs),
(81,97,o),
(114,37,o),
(174,0,o),
(213,0,qs)
);
},
{
closed = 1;
nodes = (
(275,435,o),
(205,505,o),
(205,554,qs),
(205,603,o),
(275,672,o),
(324,672,qs),
(373,672,o),
(442,603,o),
(442,554,qs),
(442,505,o),
(373,435,o),
(324,435,qs)
);
},
{
closed = 1;
nodes = (
(364,456,o),
(421,514,o),
(421,554,qs),
(421,594,o),
(364,651,o),
(324,651,qs),
(284,651,o),
(226,594,o),
(226,554,qs),
(226,514,o),
(284,456,o),
(324,456,qs)
);
},
{
closed = 1;
nodes = (
(295,484,o),
(254,525,o),
(254,554,qs),
(254,583,o),
(295,623,o),
(324,623,qs),
(338,623,o),
(354,616,q),
(346,614,o),
(336,600,o),
(336,592,qs),
(336,581,o),
(351,566,o),
(362,566,qs),
(370,566,o),
(384,576,o),
(386,584,q),
(393,568,o),
(393,554,qs),
(393,525,o),
(353,484,o),
(324,484,qs)
);
},
{
closed = 1;
nodes = (
(852,0,ls),
(891,0,o),
(951,37,o),
(984,97,o),
(984,130,qs),
(984,168,o),
(946,227,o),
(886,258,o),
(852,258,qs),
(799,258,o),
(763,222,qs),
(560,21,ls),
(556,17,o),
(556,12,qs),
(556,7,o),
(563,0,o),
(569,0,qs)
);
},
{
closed = 1;
nodes = (
(1236,0,l),
(1236,214,l),
(1441,0,l),
(1587,0,l),
(1343,260,l),
(1572,511,l),
(1428,511,l),
(1236,309,l),
(1236,700,l),
(1122,700,l),
(1122,0,l)
);
},
{
closed = 1;
nodes = (
(1908,-12,o),
(2033,57,o),
(2104,179,o),
(2104,254,qs),
(2104,329,o),
(2033,452,o),
(1908,523,o),
(1830,523,qs),
(1752,523,o),
(1628,452,o),
(1557,329,o),
(1557,254,qs),
(1557,179,o),
(1628,57,o),
(1752,-12,o),
(1830,-12,qs)
);
},
{
closed = 1;
nodes = (
(1781,95,o),
(1710,137,o),
(1671,210,o),
(1671,254,qs),
(1671,298,o),
(1710,371,o),
(1781,413,o),
(1828,413,qs),
(1875,413,o),
(1947,371,o),
(1987,298,o),
(1987,254,qs),
(1987,210,o),
(1947,137,o),
(1875,95,o),
(1828,95,qs)
);
},
{
closed = 1;
nodes = (
(1754,566,o),
(1795,607,o),
(1795,637,qs),
(1795,667,o),
(1755,707,o),
(1724,707,qs),
(1694,707,o),
(1653,665,o),
(1653,636,qs),
(1653,607,o),
(1694,566,o),
(1724,566,qs)
);
},
{
closed = 1;
nodes = (
(1965,566,o),
(2006,607,o),
(2006,637,qs),
(2006,667,o),
(1966,707,o),
(1935,707,qs),
(1905,707,o),
(1864,665,o),
(1864,636,qs),
(1864,607,o),
(1905,566,o),
(1935,566,qs)
);
},
{
closed = 1;
nodes = (
(2284,0,l),
(2284,700,l),
(2174,700,l),
(2174,0,l)
);
},
{
closed = 1;
nodes = (
(2599,95,o),
(2527,140,o),
(2489,213,o),
(2489,254,qs),
(2489,297,o),
(2530,370,o),
(2602,413,o),
(2648,413,qs),
(2716,413,o),
(2804,323,o),
(2804,254,qs),
(2804,209,o),
(2764,136,o),
(2693,95,o),
(2648,95,qs)
);
},
{
closed = 1;
nodes = (
(2744,-12,o),
(2858,60,o),
(2920,182,o),
(2920,254,qs),
(2920,331,o),
(2854,454,o),
(2740,523,o),
(2669,523,qs),
(2612,523,o),
(2524,478,o),
(2489,431,q),
(2489,700,l),
(2379,700,l),
(2379,0,l),
(2489,0,l),
(2489,80,l),
(2524,33,o),
(2612,-12,o),
(2669,-12,qs)
);
},
{
closed = 1;
nodes = (
(3103,0,l),
(3103,511,l),
(2990,511,l),
(2990,0,l)
);
},
{
closed = 1;
nodes = (
(3076,566,o),
(3117,607,o),
(3117,637,qs),
(3117,667,o),
(3077,707,o),
(3046,707,qs),
(3016,707,o),
(2975,665,o),
(2975,636,qs),
(2975,607,o),
(3016,566,o),
(3046,566,qs)
);
},
{
closed = 1;
nodes = (
(693,435,o),
(623,505,o),
(623,554,qs),
(623,603,o),
(693,672,o),
(742,672,qs),
(791,672,o),
(860,603,o),
(860,554,qs),
(860,505,o),
(791,435,o),
(742,435,qs)
);
},
{
closed = 1;
nodes = (
(782,456,o),
(839,514,o),
(839,554,qs),
(839,594,o),
(782,651,o),
(742,651,qs),
(702,651,o),
(644,594,o),
(644,554,qs),
(644,514,o),
(702,456,o),
(742,456,qs)
);
},
{
closed = 1;
nodes = (
(713,484,o),
(672,525,o),
(672,554,qs),
(672,583,o),
(713,623,o),
(742,623,qs),
(756,623,o),
(772,616,q),
(764,614,o),
(754,600,o),
(754,592,qs),
(754,581,o),
(769,566,o),
(780,566,qs),
(788,566,o),
(802,576,o),
(804,584,q),
(811,568,o),
(811,554,qs),
(811,525,o),
(771,484,o),
(742,484,qs)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 33 values pushed */
283 280 99 96 4 1 11 218 1 21 7 130 127 3 3 4 21 133 1 22 4 213 1 3 22 5 76 274 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 154 values pushed */
32 27 2 15 0 6 0 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 39 1 6 8 0 6 89 41 1 8 44 1 11 1 8 11 105 37 25 23 2 4 0 43 56 38 53 26 52 24 7 10 19 0 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 155 values pushed */
32 27 2 15 23 6 23 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 2 1 0 39 1 6 8 0 6 105 41 1 8 44 1 11 1 8 11 105 37 25 2 23 43 56 38 53 26 52 24 7 10 19 23 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 154 values pushed */
32 27 2 15 0 6 0 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 39 1 6 8 0 6 89 41 1 8 44 1 11 1 8 11 105 37 25 23 2 4 0 43 56 38 53 26 52 24 7 10 19 0 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 146 values pushed */
270 270 258 258 246 246 234 234 211 211 196 196 180 180 168 168 152 152 136 136 86 86 74 74 62 62 45 45 270 291 270 290 286 284 278 276 258 269 258 268 264 262 246 257 246 256 252 250 234 245 234 244 240 238 233 232 231 230 211 229 211 228 222 220 217 216 215 214 196 210 196 209 203 201 195 194 193 192 180 191 180 190 186 184 168 179 168 178 174 172 152 167 152 166 160 158 136 151 136 150 144 142 135 134 132 131 129 128 126 125 124 122 116 114 86 107 86 106 102 100 94 92 74 85 74 84 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 60 6 27
CALL[ ]	/* CallFunction */";
};
width = 3247;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(527,48,o),
(533,48,qs),
(540,48,o),
(545,53,qs),
(722,229,ls),
(781,288,o),
(781,367,qs),
(781,386,ls),
(781,393,o),
(784,399,o),
(790,401,qs),
(838,418,o),
(900,499,o),
(900,550,qs),
(900,594,o),
(858,667,o),
(786,710,o),
(741,710,qs),
(688,710,o),
(611,653,o),
(591,603,qs),
(587,592,o),
(575,584,o),
(566,584,qs),
(501,584,ls),
(490,584,o),
(478,592,o),
(474,603,qs),
(454,653,o),
(377,710,o),
(324,710,qs),
(279,710,o),
(207,667,o),
(165,594,o),
(165,550,qs),
(165,499,o),
(227,418,o),
(275,401,qs),
(281,399,o),
(284,393,o),
(284,386,qs),
(284,367,ls),
(284,294,o),
(343,229,q),
(520,53,l)
);
},
{
closed = 1;
nodes = (
(496,0,ls),
(502,0,o),
(509,7,o),
(509,12,qs),
(509,17,o),
(505,21,qs),
(302,222,ls),
(266,258,o),
(213,258,qs),
(179,258,o),
(119,227,o),
(81,168,o),
(81,130,qs),
(81,97,o),
(114,37,o),
(174,0,o),
(213,0,qs)
);
},
{
closed = 1;
nodes = (
(275,435,o),
(205,505,o),
(205,554,qs),
(205,603,o),
(275,672,o),
(324,672,qs),
(373,672,o),
(442,603,o),
(442,554,qs),
(442,505,o),
(373,435,o),
(324,435,qs)
);
},
{
closed = 1;
nodes = (
(364,456,o),
(421,514,o),
(421,554,qs),
(421,594,o),
(364,651,o),
(324,651,qs),
(284,651,o),
(226,594,o),
(226,554,qs),
(226,514,o),
(284,456,o),
(324,456,qs)
);
},
{
closed = 1;
nodes = (
(295,484,o),
(254,525,o),
(254,554,qs),
(254,583,o),
(295,623,o),
(324,623,qs),
(338,623,o),
(354,616,q),
(346,614,o),
(336,600,o),
(336,592,qs),
(336,581,o),
(351,566,o),
(362,566,qs),
(370,566,o),
(384,576,o),
(386,584,q),
(393,568,o),
(393,554,qs),
(393,525,o),
(353,484,o),
(324,484,qs)
);
},
{
closed = 1;
nodes = (
(852,0,ls),
(891,0,o),
(951,37,o),
(984,97,o),
(984,130,qs),
(984,168,o),
(946,227,o),
(886,258,o),
(852,258,qs),
(799,258,o),
(763,222,qs),
(560,21,ls),
(556,17,o),
(556,12,qs),
(556,7,o),
(563,0,o),
(569,0,qs)
);
},
{
closed = 1;
nodes = (
(1236,0,l),
(1236,214,l),
(1441,0,l),
(1587,0,l),
(1343,260,l),
(1572,511,l),
(1428,511,l),
(1236,309,l),
(1236,700,l),
(1122,700,l),
(1122,0,l)
);
},
{
closed = 1;
nodes = (
(1908,-12,o),
(2033,57,o),
(2104,179,o),
(2104,254,qs),
(2104,329,o),
(2033,452,o),
(1908,523,o),
(1830,523,qs),
(1752,523,o),
(1628,452,o),
(1557,329,o),
(1557,254,qs),
(1557,179,o),
(1628,57,o),
(1752,-12,o),
(1830,-12,qs)
);
},
{
closed = 1;
nodes = (
(1781,95,o),
(1710,137,o),
(1671,210,o),
(1671,254,qs),
(1671,298,o),
(1710,371,o),
(1781,413,o),
(1828,413,qs),
(1875,413,o),
(1947,371,o),
(1987,298,o),
(1987,254,qs),
(1987,210,o),
(1947,137,o),
(1875,95,o),
(1828,95,qs)
);
},
{
closed = 1;
nodes = (
(1754,566,o),
(1795,607,o),
(1795,637,qs),
(1795,667,o),
(1755,707,o),
(1724,707,qs),
(1694,707,o),
(1653,665,o),
(1653,636,qs),
(1653,607,o),
(1694,566,o),
(1724,566,qs)
);
},
{
closed = 1;
nodes = (
(1965,566,o),
(2006,607,o),
(2006,637,qs),
(2006,667,o),
(1966,707,o),
(1935,707,qs),
(1905,707,o),
(1864,665,o),
(1864,636,qs),
(1864,607,o),
(1905,566,o),
(1935,566,qs)
);
},
{
closed = 1;
nodes = (
(2284,0,l),
(2284,700,l),
(2174,700,l),
(2174,0,l)
);
},
{
closed = 1;
nodes = (
(2599,95,o),
(2527,140,o),
(2489,213,o),
(2489,254,qs),
(2489,297,o),
(2530,370,o),
(2602,413,o),
(2648,413,qs),
(2716,413,o),
(2804,323,o),
(2804,254,qs),
(2804,209,o),
(2764,136,o),
(2693,95,o),
(2648,95,qs)
);
},
{
closed = 1;
nodes = (
(2744,-12,o),
(2858,60,o),
(2920,182,o),
(2920,254,qs),
(2920,331,o),
(2854,454,o),
(2740,523,o),
(2669,523,qs),
(2612,523,o),
(2524,478,o),
(2489,431,q),
(2489,700,l),
(2379,700,l),
(2379,0,l),
(2489,0,l),
(2489,80,l),
(2524,33,o),
(2612,-12,o),
(2669,-12,qs)
);
},
{
closed = 1;
nodes = (
(3103,0,l),
(3103,511,l),
(2990,511,l),
(2990,0,l)
);
},
{
closed = 1;
nodes = (
(3076,566,o),
(3117,607,o),
(3117,637,qs),
(3117,667,o),
(3077,707,o),
(3046,707,qs),
(3016,707,o),
(2975,665,o),
(2975,636,qs),
(2975,607,o),
(3016,566,o),
(3046,566,qs)
);
},
{
closed = 1;
nodes = (
(693,435,o),
(623,505,o),
(623,554,qs),
(623,603,o),
(693,672,o),
(742,672,qs),
(791,672,o),
(860,603,o),
(860,554,qs),
(860,505,o),
(791,435,o),
(742,435,qs)
);
},
{
closed = 1;
nodes = (
(782,456,o),
(839,514,o),
(839,554,qs),
(839,594,o),
(782,651,o),
(742,651,qs),
(702,651,o),
(644,594,o),
(644,554,qs),
(644,514,o),
(702,456,o),
(742,456,qs)
);
},
{
closed = 1;
nodes = (
(713,484,o),
(672,525,o),
(672,554,qs),
(672,583,o),
(713,623,o),
(742,623,qs),
(756,623,o),
(772,616,q),
(764,614,o),
(754,600,o),
(754,592,qs),
(754,581,o),
(769,566,o),
(780,566,qs),
(788,566,o),
(802,576,o),
(804,584,q),
(811,568,o),
(811,554,qs),
(811,525,o),
(771,484,o),
(742,484,qs)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 33 values pushed */
283 280 99 96 4 1 11 218 1 21 7 130 127 3 3 4 21 133 1 22 4 213 1 3 22 5 76 274 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 154 values pushed */
32 27 2 15 0 6 0 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 39 1 6 8 0 6 89 41 1 8 44 1 11 1 8 11 105 37 25 23 2 4 0 43 56 38 53 26 52 24 7 10 19 0 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 155 values pushed */
32 27 2 15 23 6 23 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 2 1 0 39 1 6 8 0 6 105 41 1 8 44 1 11 1 8 11 105 37 25 2 23 43 56 38 53 26 52 24 7 10 19 23 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 154 values pushed */
32 27 2 15 0 6 0 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 39 1 6 8 0 6 89 41 1 8 44 1 11 1 8 11 105 37 25 23 2 4 0 43 56 38 53 26 52 24 7 10 19 0 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 146 values pushed */
270 270 258 258 246 246 234 234 211 211 196 196 180 180 168 168 152 152 136 136 86 86 74 74 62 62 45 45 270 291 270 290 286 284 278 276 258 269 258 268 264 262 246 257 246 256 252 250 234 245 234 244 240 238 233 232 231 230 211 229 211 228 222 220 217 216 215 214 196 210 196 209 203 201 195 194 193 192 180 191 180 190 186 184 168 179 168 178 174 172 152 167 152 166 160 158 136 151 136 150 144 142 135 134 132 131 129 128 126 125 124 122 116 114 86 107 86 106 102 100 94 92 74 85 74 84 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 60 6 27
CALL[ ]	/* CallFunction */";
};
width = 3247;
}
);
note = uniE004;
},
{
glyphname = uniE005;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(527,48,o),
(533,48,qs),
(540,48,o),
(545,53,qs),
(722,229,ls),
(781,288,o),
(781,367,qs),
(781,386,ls),
(781,393,o),
(784,399,o),
(790,401,qs),
(838,418,o),
(900,499,o),
(900,550,qs),
(900,594,o),
(858,667,o),
(786,710,o),
(741,710,qs),
(688,710,o),
(611,653,o),
(591,603,qs),
(587,592,o),
(575,584,o),
(566,584,qs),
(501,584,ls),
(490,584,o),
(478,592,o),
(474,603,qs),
(454,653,o),
(377,710,o),
(324,710,qs),
(279,710,o),
(207,667,o),
(165,594,o),
(165,550,qs),
(165,499,o),
(227,418,o),
(275,401,qs),
(281,399,o),
(284,393,o),
(284,386,qs),
(284,367,ls),
(284,294,o),
(343,229,q),
(520,53,l)
);
},
{
closed = 1;
nodes = (
(496,0,ls),
(502,0,o),
(509,7,o),
(509,12,qs),
(509,17,o),
(505,21,qs),
(302,222,ls),
(266,258,o),
(213,258,qs),
(179,258,o),
(119,227,o),
(81,168,o),
(81,130,qs),
(81,97,o),
(114,37,o),
(174,0,o),
(213,0,qs)
);
},
{
closed = 1;
nodes = (
(284,456,o),
(226,514,o),
(226,554,qs),
(226,594,o),
(284,651,o),
(324,651,qs),
(364,651,o),
(421,594,o),
(421,554,qs),
(421,514,o),
(364,456,o),
(324,456,qs)
);
},
{
closed = 1;
nodes = (
(353,484,o),
(393,525,o),
(393,554,qs),
(393,568,o),
(386,584,q),
(384,576,o),
(370,566,o),
(362,566,qs),
(351,566,o),
(336,581,o),
(336,592,qs),
(336,600,o),
(346,614,o),
(354,616,q),
(338,623,o),
(324,623,qs),
(295,623,o),
(254,583,o),
(254,554,qs),
(254,525,o),
(295,484,o),
(324,484,qs)
);
},
{
closed = 1;
nodes = (
(852,0,ls),
(891,0,o),
(951,37,o),
(984,97,o),
(984,130,qs),
(984,168,o),
(946,227,o),
(886,258,o),
(852,258,qs),
(799,258,o),
(763,222,qs),
(560,21,ls),
(556,17,o),
(556,12,qs),
(556,7,o),
(563,0,o),
(569,0,qs)
);
},
{
closed = 1;
nodes = (
(702,456,o),
(644,514,o),
(644,554,qs),
(644,594,o),
(702,651,o),
(742,651,qs),
(782,651,o),
(839,594,o),
(839,554,qs),
(839,514,o),
(782,456,o),
(742,456,qs)
);
},
{
closed = 1;
nodes = (
(771,484,o),
(811,525,o),
(811,554,qs),
(811,568,o),
(804,584,q),
(802,576,o),
(788,566,o),
(780,566,qs),
(769,566,o),
(754,581,o),
(754,592,qs),
(754,600,o),
(764,614,o),
(772,616,q),
(756,623,o),
(742,623,qs),
(713,623,o),
(672,583,o),
(672,554,qs),
(672,525,o),
(713,484,o),
(742,484,qs)
);
},
{
closed = 1;
nodes = (
(1236,0,l),
(1236,214,l),
(1441,0,l),
(1587,0,l),
(1343,260,l),
(1572,511,l),
(1428,511,l),
(1236,309,l),
(1236,700,l),
(1122,700,l),
(1122,0,l)
);
},
{
closed = 1;
nodes = (
(1908,-12,o),
(2033,57,o),
(2104,179,o),
(2104,254,qs),
(2104,329,o),
(2033,452,o),
(1908,523,o),
(1830,523,qs),
(1752,523,o),
(1628,452,o),
(1557,329,o),
(1557,254,qs),
(1557,179,o),
(1628,57,o),
(1752,-12,o),
(1830,-12,qs)
);
},
{
closed = 1;
nodes = (
(1781,95,o),
(1710,137,o),
(1671,210,o),
(1671,254,qs),
(1671,298,o),
(1710,371,o),
(1781,413,o),
(1828,413,qs),
(1875,413,o),
(1947,371,o),
(1987,298,o),
(1987,254,qs),
(1987,210,o),
(1947,137,o),
(1875,95,o),
(1828,95,qs)
);
},
{
closed = 1;
nodes = (
(1754,566,o),
(1795,607,o),
(1795,637,qs),
(1795,667,o),
(1755,707,o),
(1724,707,qs),
(1694,707,o),
(1653,665,o),
(1653,636,qs),
(1653,607,o),
(1694,566,o),
(1724,566,qs)
);
},
{
closed = 1;
nodes = (
(1965,566,o),
(2006,607,o),
(2006,637,qs),
(2006,667,o),
(1966,707,o),
(1935,707,qs),
(1905,707,o),
(1864,665,o),
(1864,636,qs),
(1864,607,o),
(1905,566,o),
(1935,566,qs)
);
},
{
closed = 1;
nodes = (
(2284,0,l),
(2284,700,l),
(2174,700,l),
(2174,0,l)
);
},
{
closed = 1;
nodes = (
(2599,95,o),
(2527,140,o),
(2489,213,o),
(2489,254,qs),
(2489,297,o),
(2530,370,o),
(2602,413,o),
(2648,413,qs),
(2716,413,o),
(2804,323,o),
(2804,254,qs),
(2804,209,o),
(2764,136,o),
(2693,95,o),
(2648,95,qs)
);
},
{
closed = 1;
nodes = (
(2744,-12,o),
(2858,60,o),
(2920,182,o),
(2920,254,qs),
(2920,331,o),
(2854,454,o),
(2740,523,o),
(2669,523,qs),
(2612,523,o),
(2524,478,o),
(2489,431,q),
(2489,700,l),
(2379,700,l),
(2379,0,l),
(2489,0,l),
(2489,80,l),
(2524,33,o),
(2612,-12,o),
(2669,-12,qs)
);
},
{
closed = 1;
nodes = (
(3103,0,l),
(3103,511,l),
(2990,511,l),
(2990,0,l)
);
},
{
closed = 1;
nodes = (
(3076,566,o),
(3117,607,o),
(3117,637,qs),
(3117,667,o),
(3077,707,o),
(3046,707,qs),
(3016,707,o),
(2975,665,o),
(2975,636,qs),
(2975,607,o),
(3016,566,o),
(3046,566,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
132 81 2 1 8 240 1 24 7 152 149 3 3 4 24 155 1 25 4 235 1 3 25 5 76 141 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 149 values pushed */
35 30 2 18 0 6 0 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 13 1 6 8 0 6 89 40 28 26 2 4 0 53 41 50 29 49 5 27 9 0 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 150 values pushed */
35 30 2 18 26 6 26 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 2 1 0 13 1 6 8 0 6 105 40 28 2 26 53 41 50 29 49 5 27 9 26 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 149 values pushed */
35 30 2 18 0 6 0 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 13 1 6 8 0 6 89 40 28 26 2 4 0 53 41 50 29 49 5 27 9 0 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 130 values pushed */
256 256 233 233 218 218 202 202 190 190 174 174 158 158 125 125 113 113 74 74 62 62 45 45 256 267 256 266 262 260 255 254 253 252 233 251 233 250 244 242 239 238 237 236 218 232 218 231 225 223 217 216 215 214 202 213 202 212 208 206 190 201 190 200 196 194 174 189 174 188 182 180 158 173 158 172 166 164 157 156 154 153 151 150 148 147 125 146 125 145 138 137 131 129 113 124 113 123 119 117 112 110 104 102 74 95 74 94 87 86 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 54 6 27
CALL[ ]	/* CallFunction */";
};
width = 3247;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(527,48,o),
(533,48,qs),
(540,48,o),
(545,53,qs),
(722,229,ls),
(781,288,o),
(781,367,qs),
(781,386,ls),
(781,393,o),
(784,399,o),
(790,401,qs),
(838,418,o),
(900,499,o),
(900,550,qs),
(900,594,o),
(858,667,o),
(786,710,o),
(741,710,qs),
(688,710,o),
(611,653,o),
(591,603,qs),
(587,592,o),
(575,584,o),
(566,584,qs),
(501,584,ls),
(490,584,o),
(478,592,o),
(474,603,qs),
(454,653,o),
(377,710,o),
(324,710,qs),
(279,710,o),
(207,667,o),
(165,594,o),
(165,550,qs),
(165,499,o),
(227,418,o),
(275,401,qs),
(281,399,o),
(284,393,o),
(284,386,qs),
(284,367,ls),
(284,294,o),
(343,229,q),
(520,53,l)
);
},
{
closed = 1;
nodes = (
(496,0,ls),
(502,0,o),
(509,7,o),
(509,12,qs),
(509,17,o),
(505,21,qs),
(302,222,ls),
(266,258,o),
(213,258,qs),
(179,258,o),
(119,227,o),
(81,168,o),
(81,130,qs),
(81,97,o),
(114,37,o),
(174,0,o),
(213,0,qs)
);
},
{
closed = 1;
nodes = (
(284,456,o),
(226,514,o),
(226,554,qs),
(226,594,o),
(284,651,o),
(324,651,qs),
(364,651,o),
(421,594,o),
(421,554,qs),
(421,514,o),
(364,456,o),
(324,456,qs)
);
},
{
closed = 1;
nodes = (
(353,484,o),
(393,525,o),
(393,554,qs),
(393,568,o),
(386,584,q),
(384,576,o),
(370,566,o),
(362,566,qs),
(351,566,o),
(336,581,o),
(336,592,qs),
(336,600,o),
(346,614,o),
(354,616,q),
(338,623,o),
(324,623,qs),
(295,623,o),
(254,583,o),
(254,554,qs),
(254,525,o),
(295,484,o),
(324,484,qs)
);
},
{
closed = 1;
nodes = (
(852,0,ls),
(891,0,o),
(951,37,o),
(984,97,o),
(984,130,qs),
(984,168,o),
(946,227,o),
(886,258,o),
(852,258,qs),
(799,258,o),
(763,222,qs),
(560,21,ls),
(556,17,o),
(556,12,qs),
(556,7,o),
(563,0,o),
(569,0,qs)
);
},
{
closed = 1;
nodes = (
(702,456,o),
(644,514,o),
(644,554,qs),
(644,594,o),
(702,651,o),
(742,651,qs),
(782,651,o),
(839,594,o),
(839,554,qs),
(839,514,o),
(782,456,o),
(742,456,qs)
);
},
{
closed = 1;
nodes = (
(771,484,o),
(811,525,o),
(811,554,qs),
(811,568,o),
(804,584,q),
(802,576,o),
(788,566,o),
(780,566,qs),
(769,566,o),
(754,581,o),
(754,592,qs),
(754,600,o),
(764,614,o),
(772,616,q),
(756,623,o),
(742,623,qs),
(713,623,o),
(672,583,o),
(672,554,qs),
(672,525,o),
(713,484,o),
(742,484,qs)
);
},
{
closed = 1;
nodes = (
(1236,0,l),
(1236,214,l),
(1441,0,l),
(1587,0,l),
(1343,260,l),
(1572,511,l),
(1428,511,l),
(1236,309,l),
(1236,700,l),
(1122,700,l),
(1122,0,l)
);
},
{
closed = 1;
nodes = (
(1908,-12,o),
(2033,57,o),
(2104,179,o),
(2104,254,qs),
(2104,329,o),
(2033,452,o),
(1908,523,o),
(1830,523,qs),
(1752,523,o),
(1628,452,o),
(1557,329,o),
(1557,254,qs),
(1557,179,o),
(1628,57,o),
(1752,-12,o),
(1830,-12,qs)
);
},
{
closed = 1;
nodes = (
(1781,95,o),
(1710,137,o),
(1671,210,o),
(1671,254,qs),
(1671,298,o),
(1710,371,o),
(1781,413,o),
(1828,413,qs),
(1875,413,o),
(1947,371,o),
(1987,298,o),
(1987,254,qs),
(1987,210,o),
(1947,137,o),
(1875,95,o),
(1828,95,qs)
);
},
{
closed = 1;
nodes = (
(1754,566,o),
(1795,607,o),
(1795,637,qs),
(1795,667,o),
(1755,707,o),
(1724,707,qs),
(1694,707,o),
(1653,665,o),
(1653,636,qs),
(1653,607,o),
(1694,566,o),
(1724,566,qs)
);
},
{
closed = 1;
nodes = (
(1965,566,o),
(2006,607,o),
(2006,637,qs),
(2006,667,o),
(1966,707,o),
(1935,707,qs),
(1905,707,o),
(1864,665,o),
(1864,636,qs),
(1864,607,o),
(1905,566,o),
(1935,566,qs)
);
},
{
closed = 1;
nodes = (
(2284,0,l),
(2284,700,l),
(2174,700,l),
(2174,0,l)
);
},
{
closed = 1;
nodes = (
(2599,95,o),
(2527,140,o),
(2489,213,o),
(2489,254,qs),
(2489,297,o),
(2530,370,o),
(2602,413,o),
(2648,413,qs),
(2716,413,o),
(2804,323,o),
(2804,254,qs),
(2804,209,o),
(2764,136,o),
(2693,95,o),
(2648,95,qs)
);
},
{
closed = 1;
nodes = (
(2744,-12,o),
(2858,60,o),
(2920,182,o),
(2920,254,qs),
(2920,331,o),
(2854,454,o),
(2740,523,o),
(2669,523,qs),
(2612,523,o),
(2524,478,o),
(2489,431,q),
(2489,700,l),
(2379,700,l),
(2379,0,l),
(2489,0,l),
(2489,80,l),
(2524,33,o),
(2612,-12,o),
(2669,-12,qs)
);
},
{
closed = 1;
nodes = (
(3103,0,l),
(3103,511,l),
(2990,511,l),
(2990,0,l)
);
},
{
closed = 1;
nodes = (
(3076,566,o),
(3117,607,o),
(3117,637,qs),
(3117,667,o),
(3077,707,o),
(3046,707,qs),
(3016,707,o),
(2975,665,o),
(2975,636,qs),
(2975,607,o),
(3016,566,o),
(3046,566,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
132 81 2 1 8 240 1 24 7 152 149 3 3 4 24 155 1 25 4 235 1 3 25 5 76 141 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 149 values pushed */
35 30 2 18 0 6 0 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 13 1 6 8 0 6 89 40 28 26 2 4 0 53 41 50 29 49 5 27 9 0 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 150 values pushed */
35 30 2 18 26 6 26 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 2 1 0 13 1 6 8 0 6 105 40 28 2 26 53 41 50 29 49 5 27 9 26 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 149 values pushed */
35 30 2 18 0 6 0 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 13 1 6 8 0 6 89 40 28 26 2 4 0 53 41 50 29 49 5 27 9 0 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 130 values pushed */
256 256 233 233 218 218 202 202 190 190 174 174 158 158 125 125 113 113 74 74 62 62 45 45 256 267 256 266 262 260 255 254 253 252 233 251 233 250 244 242 239 238 237 236 218 232 218 231 225 223 217 216 215 214 202 213 202 212 208 206 190 201 190 200 196 194 174 189 174 188 182 180 158 173 158 172 166 164 157 156 154 153 151 150 148 147 125 146 125 145 138 137 131 129 113 124 113 123 119 117 112 110 104 102 74 95 74 94 87 86 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 54 6 27
CALL[ ]	/* CallFunction */";
};
width = 3247;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(527,48,o),
(533,48,qs),
(540,48,o),
(545,53,qs),
(722,229,ls),
(781,288,o),
(781,367,qs),
(781,386,ls),
(781,393,o),
(784,399,o),
(790,401,qs),
(838,418,o),
(900,499,o),
(900,550,qs),
(900,594,o),
(858,667,o),
(786,710,o),
(741,710,qs),
(688,710,o),
(611,653,o),
(591,603,qs),
(587,592,o),
(575,584,o),
(566,584,qs),
(501,584,ls),
(490,584,o),
(478,592,o),
(474,603,qs),
(454,653,o),
(377,710,o),
(324,710,qs),
(279,710,o),
(207,667,o),
(165,594,o),
(165,550,qs),
(165,499,o),
(227,418,o),
(275,401,qs),
(281,399,o),
(284,393,o),
(284,386,qs),
(284,367,ls),
(284,294,o),
(343,229,q),
(520,53,l)
);
},
{
closed = 1;
nodes = (
(496,0,ls),
(502,0,o),
(509,7,o),
(509,12,qs),
(509,17,o),
(505,21,qs),
(302,222,ls),
(266,258,o),
(213,258,qs),
(179,258,o),
(119,227,o),
(81,168,o),
(81,130,qs),
(81,97,o),
(114,37,o),
(174,0,o),
(213,0,qs)
);
},
{
closed = 1;
nodes = (
(284,456,o),
(226,514,o),
(226,554,qs),
(226,594,o),
(284,651,o),
(324,651,qs),
(364,651,o),
(421,594,o),
(421,554,qs),
(421,514,o),
(364,456,o),
(324,456,qs)
);
},
{
closed = 1;
nodes = (
(353,484,o),
(393,525,o),
(393,554,qs),
(393,568,o),
(386,584,q),
(384,576,o),
(370,566,o),
(362,566,qs),
(351,566,o),
(336,581,o),
(336,592,qs),
(336,600,o),
(346,614,o),
(354,616,q),
(338,623,o),
(324,623,qs),
(295,623,o),
(254,583,o),
(254,554,qs),
(254,525,o),
(295,484,o),
(324,484,qs)
);
},
{
closed = 1;
nodes = (
(852,0,ls),
(891,0,o),
(951,37,o),
(984,97,o),
(984,130,qs),
(984,168,o),
(946,227,o),
(886,258,o),
(852,258,qs),
(799,258,o),
(763,222,qs),
(560,21,ls),
(556,17,o),
(556,12,qs),
(556,7,o),
(563,0,o),
(569,0,qs)
);
},
{
closed = 1;
nodes = (
(702,456,o),
(644,514,o),
(644,554,qs),
(644,594,o),
(702,651,o),
(742,651,qs),
(782,651,o),
(839,594,o),
(839,554,qs),
(839,514,o),
(782,456,o),
(742,456,qs)
);
},
{
closed = 1;
nodes = (
(771,484,o),
(811,525,o),
(811,554,qs),
(811,568,o),
(804,584,q),
(802,576,o),
(788,566,o),
(780,566,qs),
(769,566,o),
(754,581,o),
(754,592,qs),
(754,600,o),
(764,614,o),
(772,616,q),
(756,623,o),
(742,623,qs),
(713,623,o),
(672,583,o),
(672,554,qs),
(672,525,o),
(713,484,o),
(742,484,qs)
);
},
{
closed = 1;
nodes = (
(1236,0,l),
(1236,214,l),
(1441,0,l),
(1587,0,l),
(1343,260,l),
(1572,511,l),
(1428,511,l),
(1236,309,l),
(1236,700,l),
(1122,700,l),
(1122,0,l)
);
},
{
closed = 1;
nodes = (
(1908,-12,o),
(2033,57,o),
(2104,179,o),
(2104,254,qs),
(2104,329,o),
(2033,452,o),
(1908,523,o),
(1830,523,qs),
(1752,523,o),
(1628,452,o),
(1557,329,o),
(1557,254,qs),
(1557,179,o),
(1628,57,o),
(1752,-12,o),
(1830,-12,qs)
);
},
{
closed = 1;
nodes = (
(1781,95,o),
(1710,137,o),
(1671,210,o),
(1671,254,qs),
(1671,298,o),
(1710,371,o),
(1781,413,o),
(1828,413,qs),
(1875,413,o),
(1947,371,o),
(1987,298,o),
(1987,254,qs),
(1987,210,o),
(1947,137,o),
(1875,95,o),
(1828,95,qs)
);
},
{
closed = 1;
nodes = (
(1754,566,o),
(1795,607,o),
(1795,637,qs),
(1795,667,o),
(1755,707,o),
(1724,707,qs),
(1694,707,o),
(1653,665,o),
(1653,636,qs),
(1653,607,o),
(1694,566,o),
(1724,566,qs)
);
},
{
closed = 1;
nodes = (
(1965,566,o),
(2006,607,o),
(2006,637,qs),
(2006,667,o),
(1966,707,o),
(1935,707,qs),
(1905,707,o),
(1864,665,o),
(1864,636,qs),
(1864,607,o),
(1905,566,o),
(1935,566,qs)
);
},
{
closed = 1;
nodes = (
(2284,0,l),
(2284,700,l),
(2174,700,l),
(2174,0,l)
);
},
{
closed = 1;
nodes = (
(2599,95,o),
(2527,140,o),
(2489,213,o),
(2489,254,qs),
(2489,297,o),
(2530,370,o),
(2602,413,o),
(2648,413,qs),
(2716,413,o),
(2804,323,o),
(2804,254,qs),
(2804,209,o),
(2764,136,o),
(2693,95,o),
(2648,95,qs)
);
},
{
closed = 1;
nodes = (
(2744,-12,o),
(2858,60,o),
(2920,182,o),
(2920,254,qs),
(2920,331,o),
(2854,454,o),
(2740,523,o),
(2669,523,qs),
(2612,523,o),
(2524,478,o),
(2489,431,q),
(2489,700,l),
(2379,700,l),
(2379,0,l),
(2489,0,l),
(2489,80,l),
(2524,33,o),
(2612,-12,o),
(2669,-12,qs)
);
},
{
closed = 1;
nodes = (
(3103,0,l),
(3103,511,l),
(2990,511,l),
(2990,0,l)
);
},
{
closed = 1;
nodes = (
(3076,566,o),
(3117,607,o),
(3117,637,qs),
(3117,667,o),
(3077,707,o),
(3046,707,qs),
(3016,707,o),
(2975,665,o),
(2975,636,qs),
(2975,607,o),
(3016,566,o),
(3046,566,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
132 81 2 1 8 240 1 24 7 152 149 3 3 4 24 155 1 25 4 235 1 3 25 5 76 141 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 149 values pushed */
35 30 2 18 0 6 0 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 13 1 6 8 0 6 89 40 28 26 2 4 0 53 41 50 29 49 5 27 9 0 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 150 values pushed */
35 30 2 18 26 6 26 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 2 1 0 13 1 6 8 0 6 105 40 28 2 26 53 41 50 29 49 5 27 9 26 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 149 values pushed */
35 30 2 18 0 6 0 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 13 1 6 8 0 6 89 40 28 26 2 4 0 53 41 50 29 49 5 27 9 0 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 130 values pushed */
256 256 233 233 218 218 202 202 190 190 174 174 158 158 125 125 113 113 74 74 62 62 45 45 256 267 256 266 262 260 255 254 253 252 233 251 233 250 244 242 239 238 237 236 218 232 218 231 225 223 217 216 215 214 202 213 202 212 208 206 190 201 190 200 196 194 174 189 174 188 182 180 158 173 158 172 166 164 157 156 154 153 151 150 148 147 125 146 125 145 138 137 131 129 113 124 113 123 119 117 112 110 104 102 74 95 74 94 87 86 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 54 6 27
CALL[ ]	/* CallFunction */";
};
width = 3247;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(527,48,o),
(533,48,qs),
(540,48,o),
(545,53,qs),
(722,229,ls),
(781,288,o),
(781,367,qs),
(781,386,ls),
(781,393,o),
(784,399,o),
(790,401,qs),
(838,418,o),
(900,499,o),
(900,550,qs),
(900,594,o),
(858,667,o),
(786,710,o),
(741,710,qs),
(688,710,o),
(611,653,o),
(591,603,qs),
(587,592,o),
(575,584,o),
(566,584,qs),
(501,584,ls),
(490,584,o),
(478,592,o),
(474,603,qs),
(454,653,o),
(377,710,o),
(324,710,qs),
(279,710,o),
(207,667,o),
(165,594,o),
(165,550,qs),
(165,499,o),
(227,418,o),
(275,401,qs),
(281,399,o),
(284,393,o),
(284,386,qs),
(284,367,ls),
(284,294,o),
(343,229,q),
(520,53,l)
);
},
{
closed = 1;
nodes = (
(496,0,ls),
(502,0,o),
(509,7,o),
(509,12,qs),
(509,17,o),
(505,21,qs),
(302,222,ls),
(266,258,o),
(213,258,qs),
(179,258,o),
(119,227,o),
(81,168,o),
(81,130,qs),
(81,97,o),
(114,37,o),
(174,0,o),
(213,0,qs)
);
},
{
closed = 1;
nodes = (
(284,456,o),
(226,514,o),
(226,554,qs),
(226,594,o),
(284,651,o),
(324,651,qs),
(364,651,o),
(421,594,o),
(421,554,qs),
(421,514,o),
(364,456,o),
(324,456,qs)
);
},
{
closed = 1;
nodes = (
(353,484,o),
(393,525,o),
(393,554,qs),
(393,568,o),
(386,584,q),
(384,576,o),
(370,566,o),
(362,566,qs),
(351,566,o),
(336,581,o),
(336,592,qs),
(336,600,o),
(346,614,o),
(354,616,q),
(338,623,o),
(324,623,qs),
(295,623,o),
(254,583,o),
(254,554,qs),
(254,525,o),
(295,484,o),
(324,484,qs)
);
},
{
closed = 1;
nodes = (
(852,0,ls),
(891,0,o),
(951,37,o),
(984,97,o),
(984,130,qs),
(984,168,o),
(946,227,o),
(886,258,o),
(852,258,qs),
(799,258,o),
(763,222,qs),
(560,21,ls),
(556,17,o),
(556,12,qs),
(556,7,o),
(563,0,o),
(569,0,qs)
);
},
{
closed = 1;
nodes = (
(702,456,o),
(644,514,o),
(644,554,qs),
(644,594,o),
(702,651,o),
(742,651,qs),
(782,651,o),
(839,594,o),
(839,554,qs),
(839,514,o),
(782,456,o),
(742,456,qs)
);
},
{
closed = 1;
nodes = (
(771,484,o),
(811,525,o),
(811,554,qs),
(811,568,o),
(804,584,q),
(802,576,o),
(788,566,o),
(780,566,qs),
(769,566,o),
(754,581,o),
(754,592,qs),
(754,600,o),
(764,614,o),
(772,616,q),
(756,623,o),
(742,623,qs),
(713,623,o),
(672,583,o),
(672,554,qs),
(672,525,o),
(713,484,o),
(742,484,qs)
);
},
{
closed = 1;
nodes = (
(1236,0,l),
(1236,214,l),
(1441,0,l),
(1587,0,l),
(1343,260,l),
(1572,511,l),
(1428,511,l),
(1236,309,l),
(1236,700,l),
(1122,700,l),
(1122,0,l)
);
},
{
closed = 1;
nodes = (
(1908,-12,o),
(2033,57,o),
(2104,179,o),
(2104,254,qs),
(2104,329,o),
(2033,452,o),
(1908,523,o),
(1830,523,qs),
(1752,523,o),
(1628,452,o),
(1557,329,o),
(1557,254,qs),
(1557,179,o),
(1628,57,o),
(1752,-12,o),
(1830,-12,qs)
);
},
{
closed = 1;
nodes = (
(1781,95,o),
(1710,137,o),
(1671,210,o),
(1671,254,qs),
(1671,298,o),
(1710,371,o),
(1781,413,o),
(1828,413,qs),
(1875,413,o),
(1947,371,o),
(1987,298,o),
(1987,254,qs),
(1987,210,o),
(1947,137,o),
(1875,95,o),
(1828,95,qs)
);
},
{
closed = 1;
nodes = (
(1754,566,o),
(1795,607,o),
(1795,637,qs),
(1795,667,o),
(1755,707,o),
(1724,707,qs),
(1694,707,o),
(1653,665,o),
(1653,636,qs),
(1653,607,o),
(1694,566,o),
(1724,566,qs)
);
},
{
closed = 1;
nodes = (
(1965,566,o),
(2006,607,o),
(2006,637,qs),
(2006,667,o),
(1966,707,o),
(1935,707,qs),
(1905,707,o),
(1864,665,o),
(1864,636,qs),
(1864,607,o),
(1905,566,o),
(1935,566,qs)
);
},
{
closed = 1;
nodes = (
(2284,0,l),
(2284,700,l),
(2174,700,l),
(2174,0,l)
);
},
{
closed = 1;
nodes = (
(2599,95,o),
(2527,140,o),
(2489,213,o),
(2489,254,qs),
(2489,297,o),
(2530,370,o),
(2602,413,o),
(2648,413,qs),
(2716,413,o),
(2804,323,o),
(2804,254,qs),
(2804,209,o),
(2764,136,o),
(2693,95,o),
(2648,95,qs)
);
},
{
closed = 1;
nodes = (
(2744,-12,o),
(2858,60,o),
(2920,182,o),
(2920,254,qs),
(2920,331,o),
(2854,454,o),
(2740,523,o),
(2669,523,qs),
(2612,523,o),
(2524,478,o),
(2489,431,q),
(2489,700,l),
(2379,700,l),
(2379,0,l),
(2489,0,l),
(2489,80,l),
(2524,33,o),
(2612,-12,o),
(2669,-12,qs)
);
},
{
closed = 1;
nodes = (
(3103,0,l),
(3103,511,l),
(2990,511,l),
(2990,0,l)
);
},
{
closed = 1;
nodes = (
(3076,566,o),
(3117,607,o),
(3117,637,qs),
(3117,667,o),
(3077,707,o),
(3046,707,qs),
(3016,707,o),
(2975,665,o),
(2975,636,qs),
(2975,607,o),
(3016,566,o),
(3046,566,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
132 81 2 1 8 240 1 24 7 152 149 3 3 4 24 155 1 25 4 235 1 3 25 5 76 141 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 149 values pushed */
35 30 2 18 0 6 0 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 13 1 6 8 0 6 89 40 28 26 2 4 0 53 41 50 29 49 5 27 9 0 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 150 values pushed */
35 30 2 18 26 6 26 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 2 1 0 13 1 6 8 0 6 105 40 28 2 26 53 41 50 29 49 5 27 9 26 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 149 values pushed */
35 30 2 18 0 6 0 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 13 1 6 8 0 6 89 40 28 26 2 4 0 53 41 50 29 49 5 27 9 0 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 130 values pushed */
256 256 233 233 218 218 202 202 190 190 174 174 158 158 125 125 113 113 74 74 62 62 45 45 256 267 256 266 262 260 255 254 253 252 233 251 233 250 244 242 239 238 237 236 218 232 218 231 225 223 217 216 215 214 202 213 202 212 208 206 190 201 190 200 196 194 174 189 174 188 182 180 158 173 158 172 166 164 157 156 154 153 151 150 148 147 125 146 125 145 138 137 131 129 113 124 113 123 119 117 112 110 104 102 74 95 74 94 87 86 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 54 6 27
CALL[ ]	/* CallFunction */";
};
width = 3247;
}
);
note = uniE005;
},
{
glyphname = REbackwards;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-43,0,l),
(85,0,l),
(314,303,l),
(411,303,l),
(358,0,l),
(464,0,l),
(588,700,l),
(363,700,ls),
(238,700,o),
(86,581,o),
(86,473,qs),
(86,414,o),
(153,334,o),
(212,321,q)
);
},
{
closed = 1;
nodes = (
(251,393,o),
(196,443,o),
(196,485,qs),
(196,550,o),
(270,611,o),
(349,611,qs),
(465,611,l),
(427,393,l),
(311,393,ls)
);
},
{
closed = 1;
nodes = (
(1043,0,l),
(1167,700,l),
(726,700,l),
(710,611,l),
(1045,611,l),
(1011,414,l),
(721,414,l),
(705,326,l),
(995,326,l),
(953,89,l),
(618,89,l),
(602,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
13 1 2 7 1 76 0 8 0 7 2 8 7 103 12 1 5 0 2 6 5 2 103 9 1 4 4 0 95 10 1 0 0 33 77 0 6 6 1 95 11 3 2 1 1 34 1 78 14 14 34 33 32 31 30 29 28 27 26 25 24 23 14 22 14 21 35 17 17 17 36 13 8 27
CALL[ ]	/* CallFunction */";
};
width = 1153;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(-27,0,l),
(77,0,l),
(312,310,l),
(428,310,l),
(373,0,l),
(457,0,l),
(581,700,l),
(374,700,ls),
(248,700,o),
(101,584,o),
(101,475,qs),
(101,414,o),
(170,337,o),
(232,326,q)
);
},
{
closed = 1;
nodes = (
(251,381,o),
(188,435,o),
(188,483,qs),
(188,560,o),
(272,630,o),
(363,630,qs),
(484,630,l),
(440,381,l),
(319,381,ls)
);
},
{
closed = 1;
nodes = (
(1038,0,l),
(1162,700,l),
(729,700,l),
(717,631,l),
(1066,631,l),
(1026,404,l),
(721,404,l),
(709,336,l),
(1014,336,l),
(966,69,l),
(617,69,l),
(605,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
13 1 2 7 1 76 0 8 0 7 2 8 7 103 12 1 5 0 2 6 5 2 103 9 1 4 4 0 95 10 1 0 0 33 77 0 6 6 1 95 11 3 2 1 1 34 1 78 14 14 34 33 32 31 30 29 28 27 26 25 24 23 14 22 14 21 35 17 17 17 36 13 8 27
CALL[ ]	/* CallFunction */";
};
width = 1156;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(-48,0,l),
(87,0,l),
(315,300,l),
(405,300,l),
(352,0,l),
(466,0,l),
(590,700,l),
(359,700,ls),
(277,700,o),
(152,647,o),
(81,544,o),
(81,472,qs),
(81,414,o),
(147,333,o),
(205,319,q)
);
},
{
closed = 1;
nodes = (
(251,396,o),
(198,446,o),
(198,485,qs),
(198,546,o),
(268,604,o),
(344,604,qs),
(459,604,l),
(423,396,l),
(308,396,ls)
);
},
{
closed = 1;
nodes = (
(1045,0,l),
(1169,700,l),
(725,700,l),
(708,604,l),
(1038,604,l),
(1005,417,l),
(720,417,l),
(704,322,l),
(989,322,l),
(949,96,l),
(618,96,l),
(601,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
14 1 2 7 1 76 0 8 0 7 2 8 7 103 12 1 5 0 2 6 5 2 103 9 1 4 4 0 95 10 1 0 0 33 77 0 6 6 1 95 11 3 2 1 1 34 1 78 15 15 35 34 33 32 31 30 29 28 27 26 25 24 15 23 15 22 35 17 17 17 37 13 8 27
CALL[ ]	/* CallFunction */";
};
width = 1152;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(-59,0,l),
(92,0,l),
(316,295,l),
(394,295,l),
(342,0,l),
(470,0,l),
(594,700,l),
(351,700,ls),
(270,700,o),
(143,645,o),
(71,541,o),
(71,470,qs),
(71,413,o),
(136,330,o),
(192,316,q)
);
},
{
closed = 1;
nodes = (
(250,404,o),
(203,451,o),
(203,486,qs),
(203,539,o),
(266,591,o),
(334,591,qs),
(446,591,l),
(414,404,l),
(302,404,ls)
);
},
{
closed = 1;
nodes = (
(1048,0,l),
(1172,700,l),
(723,700,l),
(703,591,l),
(1024,591,l),
(995,424,l),
(720,424,l),
(701,315,l),
(976,315,l),
(940,109,l),
(619,109,l),
(599,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
14 1 2 5 1 76
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
14 1 7 5 1 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
8 12 2 5 7 1 2 6 5 2 103 9 1 4 4 0 95 10 1 0 0 33 77 0 6 6 1 95 11 3 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 8 0 7 2 8 7 103 12 1 5 0 2 6 5 2 103 9 1 4 4 0 95 10 1 0 0 33 77 0 6 6 1 95 11 3 2 1 1 34 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
15 15 35 34 33 32 31 30 29 28 27 26 25 24 15 23 15 22 35 17 17 17 37 13 8 27
CALL[ ]	/* CallFunction */";
};
width = 1150;
}
);
note = REbackwards;
},
{
glyphname = RethinkWordmark;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3260,0,l),
(3260,488,l),
(3589,0,l),
(3717,0,l),
(3717,700,l),
(3589,700,l),
(3589,211,l),
(3260,700,l),
(3132,700,l),
(3132,0,l)
);
},
{
closed = 1;
nodes = (
(24,0,l),
(175,0,l),
(347,295,l),
(425,295,l),
(425,0,l),
(553,0,l),
(553,700,l),
(310,700,ls),
(202,700,o),
(135,647,qs),
(70,594,o),
(70,498,qs),
(70,426,o),
(109,379,qs),
(148,333,o),
(219,316,q)
);
},
{
closed = 1;
nodes = (
(251,404,o),
(225,428,qs),
(200,455,o),
(200,498,qs),
(200,542,o),
(226,566,qs),
(251,591,o),
(313,591,qs),
(425,591,l),
(425,404,l),
(313,404,ls)
);
},
{
closed = 1;
nodes = (
(1187,0,l),
(1187,700,l),
(738,700,l),
(738,591,l),
(1059,591,l),
(1059,424,l),
(784,424,l),
(784,315,l),
(1059,315,l),
(1059,109,l),
(738,109,l),
(738,0,l)
);
},
{
closed = 1;
nodes = (
(1682,0,l),
(1682,591,l),
(1887,591,l),
(1887,700,l),
(1350,700,l),
(1350,591,l),
(1554,591,l),
(1554,0,l)
);
},
{
closed = 1;
nodes = (
(2172,0,l),
(2172,316,l),
(2486,316,l),
(2486,0,l),
(2614,0,l),
(2614,700,l),
(2486,700,l),
(2486,425,l),
(2172,425,l),
(2172,700,l),
(2044,700,l),
(2044,0,l)
);
},
{
closed = 1;
nodes = (
(2937,0,l),
(2937,700,l),
(2809,700,l),
(2809,0,l)
);
},
{
closed = 1;
nodes = (
(4039,0,l),
(4039,261,l),
(4110,339,l),
(4312,0,l),
(4463,0,l),
(4196,433,l),
(4440,700,l),
(4279,700,l),
(4039,431,l),
(4039,700,l),
(3911,700,l),
(3911,0,l)
);
},
{
closed = 1;
nodes = (
(4613,700,l),
(4646,700,l),
(4681,765,l),
(4699,765,l),
(4699,700,l),
(4727,700,l),
(4727,855,l),
(4673,855,ls),
(4647,855,o),
(4625,830,o),
(4625,811,qs),
(4625,783,o),
(4654,772,q)
);
},
{
closed = 1;
nodes = (
(4720,629,o),
(4785,667,o),
(4823,733,o),
(4823,772,qs),
(4823,811,o),
(4785,877,o),
(4719,916,o),
(4680,916,qs),
(4637,916,o),
(4572,874,o),
(4536,808,o),
(4536,772,qs),
(4536,734,o),
(4574,668,o),
(4640,629,o),
(4680,629,qs)
);
},
{
closed = 1;
nodes = (
(4648,652,o),
(4593,685,o),
(4560,740,o),
(4560,772,qs),
(4560,822,o),
(4631,892,o),
(4680,892,qs),
(4730,892,o),
(4800,822,o),
(4800,772,qs),
(4800,723,o),
(4730,652,o),
(4680,652,qs)
);
},
{
closed = 1;
nodes = (
(4668,789,o),
(4652,800,o),
(4652,811,qs),
(4652,832,o),
(4677,832,qs),
(4699,832,l),
(4699,789,l),
(4680,789,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
97 1 34 41 78 75 7 3 12 8 81 25 2 11 9 82 2 2 10 6 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 110 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 112 35 1 33 0 40 33 112 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 111 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 112 35 1 33 0 40 33 0 126 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 112 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 33 126 35 1 33 0 40 33 0 126 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 94 values pushed */
127 127 114 114 98 98 26 26 127 134 127 133 130 128 114 126 114 125 120 118 98 113 98 112 106 104 96 95 94 93 92 91 90 88 84 83 80 79 77 76 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 26 36 26 35 35 17 17 17 39 18 17 18 16 46 8 31
CALL[ ]	/* CallFunction */";
};
width = 4789;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(3260,0,l),
(3260,488,l),
(3589,0,l),
(3717,0,l),
(3717,700,l),
(3589,700,l),
(3589,211,l),
(3260,700,l),
(3132,700,l),
(3132,0,l)
);
},
{
closed = 1;
nodes = (
(24,0,l),
(175,0,l),
(347,295,l),
(425,295,l),
(425,0,l),
(553,0,l),
(553,700,l),
(310,700,ls),
(202,700,o),
(135,647,qs),
(70,594,o),
(70,498,qs),
(70,426,o),
(109,379,qs),
(148,333,o),
(219,316,q)
);
},
{
closed = 1;
nodes = (
(251,404,o),
(225,428,qs),
(200,455,o),
(200,498,qs),
(200,542,o),
(226,566,qs),
(251,591,o),
(313,591,qs),
(425,591,l),
(425,404,l),
(313,404,ls)
);
},
{
closed = 1;
nodes = (
(1187,0,l),
(1187,700,l),
(738,700,l),
(738,591,l),
(1059,591,l),
(1059,424,l),
(784,424,l),
(784,315,l),
(1059,315,l),
(1059,109,l),
(738,109,l),
(738,0,l)
);
},
{
closed = 1;
nodes = (
(1682,0,l),
(1682,591,l),
(1887,591,l),
(1887,700,l),
(1350,700,l),
(1350,591,l),
(1554,591,l),
(1554,0,l)
);
},
{
closed = 1;
nodes = (
(2172,0,l),
(2172,316,l),
(2486,316,l),
(2486,0,l),
(2614,0,l),
(2614,700,l),
(2486,700,l),
(2486,425,l),
(2172,425,l),
(2172,700,l),
(2044,700,l),
(2044,0,l)
);
},
{
closed = 1;
nodes = (
(2937,0,l),
(2937,700,l),
(2809,700,l),
(2809,0,l)
);
},
{
closed = 1;
nodes = (
(4039,0,l),
(4039,261,l),
(4110,339,l),
(4312,0,l),
(4463,0,l),
(4196,433,l),
(4440,700,l),
(4279,700,l),
(4039,431,l),
(4039,700,l),
(3911,700,l),
(3911,0,l)
);
},
{
closed = 1;
nodes = (
(4613,700,l),
(4646,700,l),
(4681,765,l),
(4699,765,l),
(4699,700,l),
(4727,700,l),
(4727,855,l),
(4673,855,ls),
(4647,855,o),
(4625,830,o),
(4625,811,qs),
(4625,783,o),
(4654,772,q)
);
},
{
closed = 1;
nodes = (
(4720,629,o),
(4785,667,o),
(4823,733,o),
(4823,772,qs),
(4823,811,o),
(4785,877,o),
(4719,916,o),
(4680,916,qs),
(4637,916,o),
(4572,874,o),
(4536,808,o),
(4536,772,qs),
(4536,734,o),
(4574,668,o),
(4640,629,o),
(4680,629,qs)
);
},
{
closed = 1;
nodes = (
(4648,652,o),
(4593,685,o),
(4560,740,o),
(4560,772,qs),
(4560,822,o),
(4631,892,o),
(4680,892,qs),
(4730,892,o),
(4800,822,o),
(4800,772,qs),
(4800,723,o),
(4730,652,o),
(4680,652,qs)
);
},
{
closed = 1;
nodes = (
(4668,789,o),
(4652,800,o),
(4652,811,qs),
(4652,832,o),
(4677,832,qs),
(4699,832,l),
(4699,789,l),
(4680,789,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
97 1 34 41 78 75 7 3 12 8 81 25 2 11 9 82 2 2 10 6 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 105 values pushed */
35 1 33 34 0 40 33 114 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 45 1 41 0 34 33 41 34 103 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 106 values pushed */
35 1 33 34 0 34 33 0 128 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 45 1 41 0 34 33 41 34 103 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 94 values pushed */
127 127 114 114 98 98 26 26 127 134 127 133 130 128 114 126 114 125 120 118 98 113 98 112 106 104 96 95 94 93 92 91 90 88 84 83 80 79 77 76 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 26 36 26 35 35 17 17 17 39 18 17 18 16 46 8 31
CALL[ ]	/* CallFunction */";
};
width = 4789;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(3260,0,l),
(3260,488,l),
(3589,0,l),
(3717,0,l),
(3717,700,l),
(3589,700,l),
(3589,211,l),
(3260,700,l),
(3132,700,l),
(3132,0,l)
);
},
{
closed = 1;
nodes = (
(24,0,l),
(175,0,l),
(347,295,l),
(425,295,l),
(425,0,l),
(553,0,l),
(553,700,l),
(310,700,ls),
(202,700,o),
(135,647,qs),
(70,594,o),
(70,498,qs),
(70,426,o),
(109,379,qs),
(148,333,o),
(219,316,q)
);
},
{
closed = 1;
nodes = (
(251,404,o),
(225,428,qs),
(200,455,o),
(200,498,qs),
(200,542,o),
(226,566,qs),
(251,591,o),
(313,591,qs),
(425,591,l),
(425,404,l),
(313,404,ls)
);
},
{
closed = 1;
nodes = (
(1187,0,l),
(1187,700,l),
(738,700,l),
(738,591,l),
(1059,591,l),
(1059,424,l),
(784,424,l),
(784,315,l),
(1059,315,l),
(1059,109,l),
(738,109,l),
(738,0,l)
);
},
{
closed = 1;
nodes = (
(1682,0,l),
(1682,591,l),
(1887,591,l),
(1887,700,l),
(1350,700,l),
(1350,591,l),
(1554,591,l),
(1554,0,l)
);
},
{
closed = 1;
nodes = (
(2172,0,l),
(2172,316,l),
(2486,316,l),
(2486,0,l),
(2614,0,l),
(2614,700,l),
(2486,700,l),
(2486,425,l),
(2172,425,l),
(2172,700,l),
(2044,700,l),
(2044,0,l)
);
},
{
closed = 1;
nodes = (
(2937,0,l),
(2937,700,l),
(2809,700,l),
(2809,0,l)
);
},
{
closed = 1;
nodes = (
(4039,0,l),
(4039,261,l),
(4110,339,l),
(4312,0,l),
(4463,0,l),
(4196,433,l),
(4440,700,l),
(4279,700,l),
(4039,431,l),
(4039,700,l),
(3911,700,l),
(3911,0,l)
);
},
{
closed = 1;
nodes = (
(4613,700,l),
(4646,700,l),
(4681,765,l),
(4699,765,l),
(4699,700,l),
(4727,700,l),
(4727,855,l),
(4673,855,ls),
(4647,855,o),
(4625,830,o),
(4625,811,qs),
(4625,783,o),
(4654,772,q)
);
},
{
closed = 1;
nodes = (
(4720,629,o),
(4785,667,o),
(4823,733,o),
(4823,772,qs),
(4823,811,o),
(4785,877,o),
(4719,916,o),
(4680,916,qs),
(4637,916,o),
(4572,874,o),
(4536,808,o),
(4536,772,qs),
(4536,734,o),
(4574,668,o),
(4640,629,o),
(4680,629,qs)
);
},
{
closed = 1;
nodes = (
(4648,652,o),
(4593,685,o),
(4560,740,o),
(4560,772,qs),
(4560,822,o),
(4631,892,o),
(4680,892,qs),
(4730,892,o),
(4800,822,o),
(4800,772,qs),
(4800,723,o),
(4730,652,o),
(4680,652,qs)
);
},
{
closed = 1;
nodes = (
(4668,789,o),
(4652,800,o),
(4652,811,qs),
(4652,832,o),
(4677,832,qs),
(4699,832,l),
(4699,789,l),
(4680,789,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
97 1 34 41 78 75 7 3 12 8 81 25 2 11 9 82 2 2 10 6 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 110 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 112 35 1 33 0 40 33 112 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 111 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 112 35 1 33 0 40 33 0 126 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 112 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 33 126 35 1 33 0 40 33 0 126 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 94 values pushed */
127 127 114 114 98 98 26 26 127 134 127 133 130 128 114 126 114 125 120 118 98 113 98 112 106 104 96 95 94 93 92 91 90 88 84 83 80 79 77 76 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 26 36 26 35 35 17 17 17 39 18 17 18 16 46 8 31
CALL[ ]	/* CallFunction */";
};
width = 4789;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(3260,0,l),
(3260,488,l),
(3589,0,l),
(3717,0,l),
(3717,700,l),
(3589,700,l),
(3589,211,l),
(3260,700,l),
(3132,700,l),
(3132,0,l)
);
},
{
closed = 1;
nodes = (
(24,0,l),
(175,0,l),
(347,295,l),
(425,295,l),
(425,0,l),
(553,0,l),
(553,700,l),
(310,700,ls),
(202,700,o),
(135,647,qs),
(70,594,o),
(70,498,qs),
(70,426,o),
(109,379,qs),
(148,333,o),
(219,316,q)
);
},
{
closed = 1;
nodes = (
(251,404,o),
(225,428,qs),
(200,455,o),
(200,498,qs),
(200,542,o),
(226,566,qs),
(251,591,o),
(313,591,qs),
(425,591,l),
(425,404,l),
(313,404,ls)
);
},
{
closed = 1;
nodes = (
(1187,0,l),
(1187,700,l),
(738,700,l),
(738,591,l),
(1059,591,l),
(1059,424,l),
(784,424,l),
(784,315,l),
(1059,315,l),
(1059,109,l),
(738,109,l),
(738,0,l)
);
},
{
closed = 1;
nodes = (
(1682,0,l),
(1682,591,l),
(1887,591,l),
(1887,700,l),
(1350,700,l),
(1350,591,l),
(1554,591,l),
(1554,0,l)
);
},
{
closed = 1;
nodes = (
(2172,0,l),
(2172,316,l),
(2486,316,l),
(2486,0,l),
(2614,0,l),
(2614,700,l),
(2486,700,l),
(2486,425,l),
(2172,425,l),
(2172,700,l),
(2044,700,l),
(2044,0,l)
);
},
{
closed = 1;
nodes = (
(2937,0,l),
(2937,700,l),
(2809,700,l),
(2809,0,l)
);
},
{
closed = 1;
nodes = (
(4039,0,l),
(4039,261,l),
(4110,339,l),
(4312,0,l),
(4463,0,l),
(4196,433,l),
(4440,700,l),
(4279,700,l),
(4039,431,l),
(4039,700,l),
(3911,700,l),
(3911,0,l)
);
},
{
closed = 1;
nodes = (
(4613,700,l),
(4646,700,l),
(4681,765,l),
(4699,765,l),
(4699,700,l),
(4727,700,l),
(4727,855,l),
(4673,855,ls),
(4647,855,o),
(4625,830,o),
(4625,811,qs),
(4625,783,o),
(4654,772,q)
);
},
{
closed = 1;
nodes = (
(4720,629,o),
(4785,667,o),
(4823,733,o),
(4823,772,qs),
(4823,811,o),
(4785,877,o),
(4719,916,o),
(4680,916,qs),
(4637,916,o),
(4572,874,o),
(4536,808,o),
(4536,772,qs),
(4536,734,o),
(4574,668,o),
(4640,629,o),
(4680,629,qs)
);
},
{
closed = 1;
nodes = (
(4648,652,o),
(4593,685,o),
(4560,740,o),
(4560,772,qs),
(4560,822,o),
(4631,892,o),
(4680,892,qs),
(4730,892,o),
(4800,822,o),
(4800,772,qs),
(4800,723,o),
(4730,652,o),
(4680,652,qs)
);
},
{
closed = 1;
nodes = (
(4668,789,o),
(4652,800,o),
(4652,811,qs),
(4652,832,o),
(4677,832,qs),
(4699,832,l),
(4699,789,l),
(4680,789,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
97 1 34 41 78 75 7 3 9 8 81 25 2 6 9 82 2 2 10 6 4 76
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
97 1 34 41 78 75 7 3 21 8 81 1 24 9 82 2 2 10 6 4 76 25 1 24 1 75
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
97 1 34 41 78 75 7 3 12 8 81 25 2 11 9 82 2 2 10 6 4 76
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 104 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 112 35 1 33 0 40 33 112 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 12 42 3 9 24 11 2 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 105 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 112 35 1 33 0 40 33 0 126 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 12 42 3 9 24 11 2 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 111 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 112 35 1 33 0 40 33 0 126 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 0 21 0 24 6 21 24 103 12 42 2 9 11 1 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 111 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 112 35 1 33 0 40 33 0 126 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 112 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 33 126 35 1 33 0 40 33 0 126 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 94 values pushed */
127 127 114 114 98 98 26 26 127 134 127 133 130 128 114 126 114 125 120 118 98 113 98 112 106 104 96 95 94 93 92 91 90 88 84 83 80 79 77 76 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 26 36 26 35 35 17 17 17 39 18 17 18 16 46 8 31
CALL[ ]	/* CallFunction */";
};
width = 4789;
}
);
note = RethinkWordmark;
},
{
glyphname = Rlogobig;
lastChange = "2025-07-25 13:29:58 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(525,-12,o),
(692,85,o),
(789,252,o),
(789,350,qs),
(789,448,o),
(692,615,o),
(525,712,o),
(427,712,qs),
(329,712,o),
(162,615,o),
(65,448,o),
(65,350,qs),
(65,252,o),
(162,85,o),
(329,-12,o),
(427,-12,qs)
);
},
{
closed = 1;
nodes = (
(345,47,o),
(206,129,o),
(124,268,o),
(124,350,qs),
(124,432,o),
(206,571,o),
(345,652,o),
(427,652,qs),
(509,652,o),
(648,571,o),
(729,432,o),
(729,350,qs),
(729,268,o),
(648,129,o),
(509,47,o),
(427,47,qs)
);
},
{
closed = 1;
nodes = (
(342,168,l),
(356,196,o),
(416,308,o),
(429,333,q),
(474,333,l),
(474,168,l),
(547,168,l),
(547,559,l),
(410,559,ls),
(344,559,o),
(287,493,o),
(287,447,qs),
(287,411,o),
(327,361,o),
(361,349,q),
(258,168,l)
);
},
{
closed = 1;
nodes = (
(395,392,o),
(356,420,o),
(356,447,qs),
(356,473,o),
(391,501,o),
(419,501,qs),
(474,501,l),
(474,392,l),
(428,392,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
7 1 5 6 3 6 5 3 128 0 4 0 8 9 4 8 105 12 1 9 0 6 5 9 6 103 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 97 10 1 1 1 40 1 78 48 48 16 16 0 0 48 56 48 55 51 49 47 46 43 42 41 40 39 37 16 31 16 30 24 22 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 818;
},
{
layerId = "C8EEE9A0-3D52-4689-97D8-79922D65E4CE";
shapes = (
{
closed = 1;
nodes = (
(525,-12,o),
(692,85,o),
(789,252,o),
(789,350,qs),
(789,448,o),
(692,615,o),
(525,712,o),
(427,712,qs),
(329,712,o),
(162,615,o),
(65,448,o),
(65,350,qs),
(65,252,o),
(162,85,o),
(329,-12,o),
(427,-12,qs)
);
},
{
closed = 1;
nodes = (
(345,47,o),
(206,129,o),
(124,268,o),
(124,350,qs),
(124,432,o),
(206,571,o),
(345,652,o),
(427,652,qs),
(509,652,o),
(648,571,o),
(729,432,o),
(729,350,qs),
(729,268,o),
(648,129,o),
(509,47,o),
(427,47,qs)
);
},
{
closed = 1;
nodes = (
(342,168,l),
(356,196,o),
(416,308,o),
(429,333,q),
(474,333,l),
(474,168,l),
(547,168,l),
(547,559,l),
(410,559,ls),
(344,559,o),
(287,493,o),
(287,447,qs),
(287,411,o),
(327,361,o),
(361,349,q),
(258,168,l)
);
},
{
closed = 1;
nodes = (
(395,392,o),
(356,420,o),
(356,447,qs),
(356,473,o),
(391,501,o),
(419,501,qs),
(474,501,l),
(474,392,l),
(428,392,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
7 1 5 6 3 6 5 3 128 0 4 0 8 9 4 8 105 12 1 9 0 6 5 9 6 103 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 97 10 1 1 1 40 1 78 48 48 16 16 0 0 48 56 48 55 51 49 47 46 43 42 41 40 39 37 16 31 16 30 24 22 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 818;
},
{
layerId = "4198BB9E-6C9D-470E-A4E5-BC277DE15687";
shapes = (
{
closed = 1;
nodes = (
(525,-12,o),
(692,85,o),
(789,252,o),
(789,350,qs),
(789,448,o),
(692,615,o),
(525,712,o),
(427,712,qs),
(329,712,o),
(162,615,o),
(65,448,o),
(65,350,qs),
(65,252,o),
(162,85,o),
(329,-12,o),
(427,-12,qs)
);
},
{
closed = 1;
nodes = (
(345,47,o),
(206,129,o),
(124,268,o),
(124,350,qs),
(124,432,o),
(206,571,o),
(345,652,o),
(427,652,qs),
(509,652,o),
(648,571,o),
(729,432,o),
(729,350,qs),
(729,268,o),
(648,129,o),
(509,47,o),
(427,47,qs)
);
},
{
closed = 1;
nodes = (
(342,168,l),
(356,196,o),
(416,308,o),
(429,333,q),
(474,333,l),
(474,168,l),
(547,168,l),
(547,559,l),
(410,559,ls),
(344,559,o),
(287,493,o),
(287,447,qs),
(287,411,o),
(327,361,o),
(361,349,q),
(258,168,l)
);
},
{
closed = 1;
nodes = (
(395,392,o),
(356,420,o),
(356,447,qs),
(356,473,o),
(391,501,o),
(419,501,qs),
(474,501,l),
(474,392,l),
(428,392,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
7 1 5 6 3 6 5 3 128 0 4 0 8 9 4 8 105 12 1 9 0 6 5 9 6 103 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 97 10 1 1 1 40 1 78 48 48 16 16 0 0 48 56 48 55 51 49 47 46 43 42 41 40 39 37 16 31 16 30 24 22 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 818;
},
{
layerId = "D238A28B-6A19-4190-B1CF-6D2CA2E33010";
shapes = (
{
closed = 1;
nodes = (
(525,-12,o),
(692,85,o),
(789,252,o),
(789,350,qs),
(789,448,o),
(692,615,o),
(525,712,o),
(427,712,qs),
(329,712,o),
(162,615,o),
(65,448,o),
(65,350,qs),
(65,252,o),
(162,85,o),
(329,-12,o),
(427,-12,qs)
);
},
{
closed = 1;
nodes = (
(345,47,o),
(206,129,o),
(124,268,o),
(124,350,qs),
(124,432,o),
(206,571,o),
(345,652,o),
(427,652,qs),
(509,652,o),
(648,571,o),
(729,432,o),
(729,350,qs),
(729,268,o),
(648,129,o),
(509,47,o),
(427,47,qs)
);
},
{
closed = 1;
nodes = (
(342,168,l),
(356,196,o),
(416,308,o),
(429,333,q),
(474,333,l),
(474,168,l),
(547,168,l),
(547,559,l),
(410,559,ls),
(344,559,o),
(287,493,o),
(287,447,qs),
(287,411,o),
(327,361,o),
(361,349,q),
(258,168,l)
);
},
{
closed = 1;
nodes = (
(395,392,o),
(356,420,o),
(356,447,qs),
(356,473,o),
(391,501,o),
(419,501,qs),
(474,501,l),
(474,392,l),
(428,392,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
7 1 5 6 3 6 5 3 128 0 4 0 8 9 4 8 105 12 1 9 0 6 5 9 6 103 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 97 10 1 1 1 40 1 78 48 48 16 16 0 0 48 56 48 55 51 49 47 46 43 42 41 40 39 37 16 31 16 30 24 22 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 818;
}
);
note = Rlogobig;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = "Medium Italic";
properties = (
{
key = postscriptFontName;
value = "KolbiSans-MediumItalic";
},
{
key = postscriptFullNames;
values = (
{
language = ENG;
value = "Kolbi Sans Medium Italic";
}
);
}
);
weightClass = 500;
}
);
kerningLTR = {
m01 = {
"@MMK_L_A" = {
"@MMK_R_C" = -55;
"@MMK_R_S" = -18;
"@MMK_R_T" = -80;
"@MMK_R_U" = -34;
"@MMK_R_V" = -116;
"@MMK_R_W" = -83;
"@MMK_R_X" = -18;
"@MMK_R_Y" = -103;
"@MMK_R_a" = -18;
"@MMK_R_asterisk" = -95;
"@MMK_R_at" = -15;
"@MMK_R_backslash" = -64;
"@MMK_R_c" = -30;
"@MMK_R_f" = -21;
"@MMK_R_hyphen" = -40;
"@MMK_R_multiply" = -47;
"@MMK_R_parenright" = -20;
"@MMK_R_plus" = -53;
"@MMK_R_question" = -40;
"@MMK_R_s" = -15;
"@MMK_R_t" = -47;
"@MMK_R_u" = -24;
"@MMK_R_v" = -70;
"@MMK_R_w" = -49;
"@MMK_R_x" = -40;
"@MMK_R_y" = -77;
"@MMK_R_z" = 7;
};
"@MMK_L_B" = {
"@MMK_R_A" = -28;
"@MMK_R_AE" = -37;
"@MMK_R_S" = -5;
"@MMK_R_T" = -54;
"@MMK_R_V" = -48;
"@MMK_R_W" = -28;
"@MMK_R_X" = -30;
"@MMK_R_Y" = -55;
"@MMK_R_asterisk" = -24;
"@MMK_R_backslash" = -34;
"@MMK_R_braceright" = -40;
"@MMK_R_c" = -3;
"@MMK_R_comma" = -24;
"@MMK_R_g" = -15;
"@MMK_R_parenright" = -67;
"@MMK_R_period" = -30;
"@MMK_R_slash" = -43;
"@MMK_R_underscore" = -50;
"@MMK_R_x" = -10;
};
"@MMK_L_Cacute" = {
"@MMK_R_AE" = -13;
"@MMK_R_T" = -20;
"@MMK_R_V" = -20;
"@MMK_R_W" = -20;
"@MMK_R_X" = -20;
"@MMK_R_Y" = -40;
"@MMK_R_parenright" = -20;
};
"@MMK_L_E" = {
"@MMK_R_C" = -10;
};
"@MMK_L_F" = {
"@MMK_R_A" = -60;
"@MMK_R_a" = -40;
"@MMK_R_c" = -30;
"@MMK_R_g" = -38;
"@MMK_R_period" = -60;
"@MMK_R_s" = -20;
};
"@MMK_L_G" = {
"@MMK_R_T" = -25;
"@MMK_R_W" = -25;
"@MMK_R_Y" = -43;
};
"@MMK_L_J" = {
"@MMK_R_A" = -22;
};
"@MMK_L_K" = {
"@MMK_R_A" = -20;
"@MMK_R_C" = -59;
"@MMK_R_J" = -13;
"@MMK_R_S" = -35;
"@MMK_R_T" = -10;
"@MMK_R_a" = -30;
"@MMK_R_asterisk" = -11;
"@MMK_R_at" = -10;
"@MMK_R_c" = -60;
"@MMK_R_dotlessi" = -30;
"@MMK_R_f" = -23;
"@MMK_R_g" = -33;
"@MMK_R_guillemotleft" = -44;
"@MMK_R_hyphen" = -60;
"@MMK_R_i" = -23;
"@MMK_R_igrave" = -15;
"@MMK_R_j" = -23;
"@MMK_R_p" = -10;
"@MMK_R_plus" = -40;
"@MMK_R_question" = -16;
"@MMK_R_s" = -40;
"@MMK_R_t" = -38;
"@MMK_R_u" = -40;
"@MMK_R_v" = -65;
"@MMK_R_w" = -60;
"@MMK_R_x" = -53;
"@MMK_R_y" = -65;
"@MMK_R_z" = -20;
};
"@MMK_L_L" = {
"@MMK_R_C" = -77;
"@MMK_R_S" = -35;
"@MMK_R_T" = -120;
"@MMK_R_U" = -40;
"@MMK_R_V" = -137;
"@MMK_R_W" = -80;
"@MMK_R_Y" = -121;
"@MMK_R_asterisk" = -107;
"@MMK_R_at" = -15;
"@MMK_R_backslash" = -64;
"@MMK_R_c" = -35;
"@MMK_R_hyphen" = -60;
"@MMK_R_percent" = -68;
"@MMK_R_plus" = -60;
"@MMK_R_question" = -30;
"@MMK_R_t" = -21;
"@MMK_R_uni018F" = -30;
"@MMK_R_uni02BA" = -101;
"@MMK_R_v" = -67;
"@MMK_R_w" = -43;
"@MMK_R_x" = -10;
"@MMK_R_y" = -70;
};
"@MMK_L_N" = {
"@MMK_R_c" = -3;
};
"@MMK_L_P" = {
"@MMK_R_A" = -72;
"@MMK_R_AE" = -107;
"@MMK_R_S" = 4;
"@MMK_R_V" = -8;
"@MMK_R_Y" = -19;
"@MMK_R_a" = -20;
"@MMK_R_c" = -25;
"@MMK_R_dotlessi" = 10;
"@MMK_R_g" = -24;
"@MMK_R_period" = -50;
};
"@MMK_L_Q" = {
"@MMK_R_A" = -20;
"@MMK_R_T" = -37;
"@MMK_R_U" = 7;
"@MMK_R_V" = -39;
"@MMK_R_W" = -33;
"@MMK_R_Y" = -53;
"@MMK_R_u" = 4;
};
"@MMK_L_R" = {
"@MMK_R_C" = -13;
"@MMK_R_J" = -5;
"@MMK_R_T" = -23;
"@MMK_R_V" = -37;
"@MMK_R_W" = -28;
"@MMK_R_Y" = -30;
"@MMK_R_a" = -23;
"@MMK_R_c" = -33;
"@MMK_R_plus" = -13;
"@MMK_R_s" = -13;
"@MMK_R_u" = -13;
};
"@MMK_L_S" = {
"@MMK_R_C" = -5;
"@MMK_R_T" = -25;
"@MMK_R_V" = -40;
"@MMK_R_W" = -35;
"@MMK_R_Y" = -50;
"@MMK_R_c" = -5;
"@MMK_R_y" = -5;
};
"@MMK_L_T" = {
"@MMK_R_A" = -74;
"@MMK_R_AE" = -90;
"@MMK_R_C" = -31;
"@MMK_R_J" = -60;
"@MMK_R_S" = -8;
"@MMK_R_a" = -110;
"@MMK_R_at" = -29;
"@MMK_R_backslash" = 24;
"@MMK_R_c" = -110;
"@MMK_R_comma" = -80;
"@MMK_R_dotlessi" = -100;
"@MMK_R_exclamdown" = -39;
"@MMK_R_f" = -20;
"@MMK_R_g" = -108;
"@MMK_R_hyphen" = -50;
"@MMK_R_iacute" = 5;
"@MMK_R_ibreve" = 70;
"@MMK_R_igrave" = 5;
"@MMK_R_multiply" = -83;
"@MMK_R_p" = -100;
"@MMK_R_period" = -80;
"@MMK_R_plus" = -53;
"@MMK_R_question" = 20;
"@MMK_R_questiondown" = -67;
"@MMK_R_rcaron" = -50;
"@MMK_R_s" = -105;
"@MMK_R_semicolon" = -54;
"@MMK_R_slash" = -44;
"@MMK_R_t" = -27;
"@MMK_R_u" = -105;
"@MMK_R_underscore" = -60;
"@MMK_R_uni006A0301" = 10;
"@MMK_R_v" = -80;
"@MMK_R_w" = -85;
"@MMK_R_x" = -80;
"@MMK_R_y" = -80;
"@MMK_R_z" = -85;
};
"@MMK_L_Thorn" = {
"@MMK_R_A" = -21;
"@MMK_R_T" = -93;
"@MMK_R_V" = -60;
"@MMK_R_W" = -40;
"@MMK_R_Y" = -77;
"@MMK_R_period" = -20;
};
"@MMK_L_U" = {
"@MMK_R_A" = -37;
"@MMK_R_AE" = -50;
"@MMK_R_g" = -25;
"@MMK_R_period" = -20;
"@MMK_R_s" = -10;
"@MMK_R_slash" = -30;
"@MMK_R_underscore" = -37;
};
"@MMK_L_V" = {
"@MMK_R_A" = -88;
"@MMK_R_AE" = -103;
"@MMK_R_C" = -24;
"@MMK_R_J" = -68;
"@MMK_R_S" = -10;
"@MMK_R_a" = -60;
"@MMK_R_at" = -32;
"@MMK_R_backslash" = 7;
"@MMK_R_c" = -70;
"@MMK_R_colon" = -30;
"@MMK_R_comma" = -77;
"@MMK_R_dotlessi" = -40;
"@MMK_R_exclamdown" = -34;
"@MMK_R_f" = -18;
"@MMK_R_g" = -68;
"@MMK_R_hyphen" = -47;
"@MMK_R_igrave" = 10;
"@MMK_R_multiply" = -53;
"@MMK_R_p" = -40;
"@MMK_R_period" = -60;
"@MMK_R_plus" = -60;
"@MMK_R_rcaron" = -10;
"@MMK_R_s" = -60;
"@MMK_R_slash" = -63;
"@MMK_R_t" = -15;
"@MMK_R_u" = -40;
"@MMK_R_underscore" = -70;
"@MMK_R_uni006A0301" = 5;
"@MMK_R_v" = -20;
"@MMK_R_w" = -25;
"@MMK_R_x" = -23;
"@MMK_R_y" = -15;
"@MMK_R_z" = -20;
};
"@MMK_L_W" = {
"@MMK_R_A" = -92;
"@MMK_R_AE" = -90;
"@MMK_R_C" = -38;
"@MMK_R_J" = -53;
"@MMK_R_Oslash" = -20;
"@MMK_R_S" = -15;
"@MMK_R_a" = -78;
"@MMK_R_at" = -35;
"@MMK_R_c" = -80;
"@MMK_R_comma" = -57;
"@MMK_R_dotlessi" = -48;
"@MMK_R_exclamdown" = -27;
"@MMK_R_f" = -18;
"@MMK_R_g" = -78;
"@MMK_R_hyphen" = -47;
"@MMK_R_i" = -18;
"@MMK_R_iacute" = -15;
"@MMK_R_igrave" = 3;
"@MMK_R_j" = -10;
"@MMK_R_multiply" = -47;
"@MMK_R_p" = -48;
"@MMK_R_period" = -70;
"@MMK_R_plus" = -53;
"@MMK_R_rcaron" = -30;
"@MMK_R_s" = -73;
"@MMK_R_semicolon" = -27;
"@MMK_R_slash" = -57;
"@MMK_R_t" = -20;
"@MMK_R_u" = -45;
"@MMK_R_underscore" = -43;
"@MMK_R_v" = -33;
"@MMK_R_w" = -33;
"@MMK_R_x" = -33;
"@MMK_R_y" = -33;
"@MMK_R_z" = -35;
};
"@MMK_L_X" = {
"@MMK_R_A" = -13;
"@MMK_R_C" = -56;
"@MMK_R_S" = -10;
"@MMK_R_a" = -35;
"@MMK_R_c" = -50;
"@MMK_R_g" = -25;
"@MMK_R_s" = -40;
"@MMK_R_t" = -43;
"@MMK_R_u" = -34;
"@MMK_R_w" = -53;
"@MMK_R_y" = -68;
"@MMK_R_z" = -20;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -87;
"@MMK_R_AE" = -84;
"@MMK_R_C" = -45;
"@MMK_R_J" = -68;
"@MMK_R_Oslash" = -35;
"@MMK_R_S" = -10;
"@MMK_R_a" = -88;
"@MMK_R_at" = -40;
"@MMK_R_c" = -100;
"@MMK_R_colon" = -40;
"@MMK_R_comma" = -57;
"@MMK_R_dotlessi" = -58;
"@MMK_R_exclamdown" = -44;
"@MMK_R_f" = -23;
"@MMK_R_g" = -78;
"@MMK_R_hyphen" = -44;
"@MMK_R_i" = -20;
"@MMK_R_iacute" = -20;
"@MMK_R_igrave" = -5;
"@MMK_R_multiply" = -83;
"@MMK_R_p" = -53;
"@MMK_R_period" = -77;
"@MMK_R_plus" = -87;
"@MMK_R_questiondown" = -74;
"@MMK_R_rcaron" = -20;
"@MMK_R_s" = -95;
"@MMK_R_semicolon" = -41;
"@MMK_R_slash" = -57;
"@MMK_R_t" = -25;
"@MMK_R_u" = -75;
"@MMK_R_underscore" = -74;
"@MMK_R_uni02BA" = 30;
"@MMK_R_v" = -45;
"@MMK_R_w" = -35;
"@MMK_R_x" = -45;
"@MMK_R_y" = -45;
"@MMK_R_z" = -45;
};
"@MMK_L_Z" = {
"@MMK_R_C" = -20;
"@MMK_R_a" = -20;
"@MMK_R_c" = -30;
"@MMK_R_s" = -8;
};
"@MMK_L_a" = {
"@MMK_R_asterisk" = -34;
"@MMK_R_backslash" = -40;
"@MMK_R_lslash" = 10;
"@MMK_R_uni02BA" = -64;
"@MMK_R_v" = -24;
"@MMK_R_w" = -16;
"@MMK_R_y" = -28;
};
"@MMK_L_aacute" = {
"@MMK_R_asterisk" = -34;
"@MMK_R_backslash" = -60;
"@MMK_R_c" = -5;
"@MMK_R_f" = -8;
"@MMK_R_t" = -13;
"@MMK_R_v" = -32;
"@MMK_R_w" = -30;
"@MMK_R_y" = -36;
};
"@MMK_L_ae" = {
"@MMK_R_Y" = -90;
"@MMK_R_asterisk" = -41;
"@MMK_R_backslash" = -64;
"@MMK_R_g" = -7;
"@MMK_R_lslash" = 18;
"@MMK_R_question" = -20;
"@MMK_R_uni02BA" = -67;
"@MMK_R_v" = -26;
"@MMK_R_w" = -20;
"@MMK_R_x" = -25;
"@MMK_R_y" = -30;
};
"@MMK_L_asterisk" = {
"@MMK_R_A" = -75;
"@MMK_R_AE" = -114;
"@MMK_R_C" = -12;
"@MMK_R_a" = -7;
"@MMK_R_c" = -21;
"@MMK_R_s" = -19;
};
"@MMK_L_at" = {
"@MMK_R_A" = -15;
"@MMK_R_AE" = -15;
"@MMK_R_T" = -47;
"@MMK_R_V" = -52;
"@MMK_R_W" = -46;
"@MMK_R_Y" = -55;
"@MMK_R_percent" = -33;
"@MMK_R_period" = -13;
"@MMK_R_uni02BA" = -46;
"@MMK_R_w" = -17;
"@MMK_R_y" = -22;
};
"@MMK_L_b" = {
"@MMK_R_T" = -115;
"@MMK_R_V" = -80;
"@MMK_R_asterisk" = -57;
"@MMK_R_backslash" = -84;
"@MMK_R_braceright" = -50;
"@MMK_R_c" = -8;
"@MMK_R_f" = -8;
"@MMK_R_g" = -8;
"@MMK_R_lslash" = 5;
"@MMK_R_parenright" = -57;
"@MMK_R_question" = -40;
"@MMK_R_s" = -8;
"@MMK_R_slash" = -7;
"@MMK_R_t" = -20;
"@MMK_R_uni02BA" = -87;
"@MMK_R_v" = -40;
"@MMK_R_w" = -30;
"@MMK_R_x" = -33;
"@MMK_R_y" = -47;
"@MMK_R_z" = -5;
};
"@MMK_L_backslash" = {
"@MMK_R_C" = -40;
"@MMK_R_T" = -80;
"@MMK_R_U" = -11;
"@MMK_R_V" = -91;
"@MMK_R_W" = -67;
"@MMK_R_Y" = -70;
"@MMK_R_c" = -20;
"@MMK_R_hyphen" = -43;
"@MMK_R_uni02BA" = -104;
};
"@MMK_L_braceright" = {
"@MMK_R_A" = -47;
"@MMK_R_AE" = -50;
"@MMK_R_T" = -48;
"@MMK_R_W" = -24;
"@MMK_R_Y" = -50;
"@MMK_R_period" = -50;
};
"@MMK_L_c" = {
"@MMK_R_w" = -10;
"@MMK_R_y" = -18;
};
"@MMK_L_colon" = {
"@MMK_R_V" = -30;
"@MMK_R_Y" = -40;
};
"@MMK_L_comma" = {
"@MMK_R_C" = -37;
"@MMK_R_T" = -80;
"@MMK_R_V" = -80;
"@MMK_R_W" = -53;
"@MMK_R_Y" = -77;
"@MMK_R_percent" = -72;
"@MMK_R_t" = -27;
"@MMK_R_w" = -30;
"@MMK_R_y" = -50;
};
"@MMK_L_exclamdown" = {
"@MMK_R_T" = -37;
"@MMK_R_V" = -34;
"@MMK_R_W" = -11;
"@MMK_R_Y" = -44;
};
"@MMK_L_f" = {
"@MMK_R_a" = -16;
"@MMK_R_c" = -10;
"@MMK_R_g" = -20;
"@MMK_R_period" = -11;
"@MMK_R_s" = -11;
};
"@MMK_L_g" = {
"@MMK_R_a" = -5;
"@MMK_R_c" = -18;
"@MMK_R_f" = 10;
"@MMK_R_j" = 36;
"@MMK_R_t" = 20;
"@MMK_R_u" = -3;
};
"@MMK_L_germandbls" = {
"@MMK_R_y" = -40;
};
"@MMK_L_greater" = {
"@MMK_R_period" = -60;
};
"@MMK_L_hyphen" = {
"@MMK_R_A" = -37;
"@MMK_R_T" = -54;
"@MMK_R_V" = -47;
"@MMK_R_W" = -37;
"@MMK_R_Y" = -54;
"@MMK_R_backslash" = -70;
"@MMK_R_slash" = -43;
};
"@MMK_L_ibreve" = {
"@MMK_R_T" = 70;
"@MMK_R_b" = 20;
};
"@MMK_L_k" = {
"@MMK_R_a" = -32;
"@MMK_R_at" = -10;
"@MMK_R_c" = -34;
"@MMK_R_s" = -22;
};
"@MMK_L_l" = {
"@MMK_R_ibreve" = 15;
};
"@MMK_L_lslash" = {
"@MMK_R_a" = 3;
"@MMK_R_c" = 5;
"@MMK_R_w" = 15;
};
"@MMK_L_multiply" = {
"@MMK_R_A" = -13;
"@MMK_R_AE" = -20;
"@MMK_R_T" = -83;
"@MMK_R_V" = -54;
"@MMK_R_W" = -40;
"@MMK_R_Y" = -74;
};
"@MMK_L_parenleft" = {
"@MMK_R_A" = -26;
"@MMK_R_C" = -57;
"@MMK_R_a" = -50;
"@MMK_R_c" = -34;
"@MMK_R_s" = -20;
};
"@MMK_L_period" = {
"@MMK_R_C" = -50;
"@MMK_R_T" = -80;
"@MMK_R_U" = -20;
"@MMK_R_V" = -60;
"@MMK_R_W" = -70;
"@MMK_R_Y" = -81;
"@MMK_R_at" = -10;
"@MMK_R_backslash" = -100;
"@MMK_R_less" = -60;
"@MMK_R_question" = -43;
"@MMK_R_v" = -47;
"@MMK_R_w" = -40;
"@MMK_R_y" = -60;
};
"@MMK_L_plus" = {
"@MMK_R_A" = -26;
"@MMK_R_T" = -57;
"@MMK_R_V" = -73;
"@MMK_R_W" = -53;
"@MMK_R_Y" = -80;
};
"@MMK_L_question" = {
"@MMK_R_A" = -67;
"@MMK_R_AE" = -80;
"@MMK_R_period" = -90;
};
"@MMK_L_questiondown" = {
"@MMK_R_T" = -73;
"@MMK_R_Y" = -70;
"@MMK_R_c" = -34;
"@MMK_R_percent" = -34;
"@MMK_R_z" = 20;
};
"@MMK_L_quotedblright" = {
"@MMK_R_J" = -74;
"@MMK_R_at" = -17;
"@MMK_R_s" = -47;
"@MMK_R_slash" = -104;
};
"@MMK_L_r" = {
"@MMK_R_c" = -14;
"@MMK_R_colon" = 13;
"@MMK_R_f" = 5;
"@MMK_R_period" = -40;
"@MMK_R_t" = 10;
"@MMK_R_u" = 5;
"@MMK_R_w" = 5;
"@MMK_R_y" = 8;
};
"@MMK_L_s" = {
"@MMK_R_asterisk" = -61;
"@MMK_R_backslash" = -67;
"@MMK_R_f" = -13;
"@MMK_R_parenright" = -24;
"@MMK_R_question" = -27;
"@MMK_R_t" = -18;
"@MMK_R_u" = -3;
"@MMK_R_v" = -33;
"@MMK_R_w" = -18;
"@MMK_R_x" = -18;
"@MMK_R_y" = -33;
};
"@MMK_L_semicolon" = {
"@MMK_R_T" = -40;
"@MMK_R_Y" = -15;
};
"@MMK_L_slash" = {
"@MMK_R_C" = -33;
"@MMK_R_T" = 11;
"@MMK_R_V" = 34;
"@MMK_R_W" = 11;
"@MMK_R_Y" = 40;
"@MMK_R_a" = -30;
"@MMK_R_c" = -46;
"@MMK_R_dotlessi" = -14;
"@MMK_R_g" = -34;
"@MMK_R_hyphen" = -43;
"@MMK_R_period" = -110;
"@MMK_R_s" = -31;
};
"@MMK_L_t" = {
"@MMK_R_c" = -18;
"@MMK_R_comma" = 39;
};
"@MMK_L_underscore" = {
"@MMK_R_C" = -67;
"@MMK_R_T" = -74;
"@MMK_R_U" = -47;
"@MMK_R_V" = -90;
"@MMK_R_W" = -67;
"@MMK_R_Y" = -74;
};
"@MMK_L_v" = {
"@MMK_R_A" = -70;
"@MMK_R_a" = -10;
"@MMK_R_c" = -23;
"@MMK_R_g" = -24;
"@MMK_R_period" = -40;
"@MMK_R_s" = -15;
"@MMK_R_t" = 20;
};
"@MMK_L_w" = {
"@MMK_R_a" = -7;
"@MMK_R_at" = -7;
"@MMK_R_c" = -12;
"@MMK_R_comma" = -30;
"@MMK_R_f" = 5;
"@MMK_R_g" = -21;
"@MMK_R_lslash" = 8;
"@MMK_R_period" = -40;
"@MMK_R_questiondown" = -13;
"@MMK_R_s" = -8;
"@MMK_R_t" = 5;
};
"@MMK_L_x" = {
"@MMK_R_c" = -28;
"@MMK_R_s" = -18;
};
"@MMK_L_y" = {
"@MMK_R_T" = -70;
"@MMK_R_a" = -20;
"@MMK_R_at" = -7;
"@MMK_R_c" = -23;
"@MMK_R_comma" = -60;
"@MMK_R_g" = -27;
"@MMK_R_multiply" = -13;
"@MMK_R_period" = -50;
"@MMK_R_questiondown" = -37;
"@MMK_R_s" = -13;
"@MMK_R_slash" = -30;
};
"@MMK_L_z" = {
"@MMK_R_c" = -8;
};
AE = {
ibreve = 27;
imacron = 54;
itilde = 37;
v = -17;
};
AEacute = {
ibreve = 27;
imacron = 54;
itilde = 37;
v = -17;
};
Aacute = {
asterisk = -95;
at = -15;
backslash = -64;
f = -13;
multiply = -47;
parenright = -20;
plus = -53;
question = -40;
v = -70;
};
Abreve = {
asterisk = -95;
at = -15;
backslash = -64;
f = -13;
multiply = -47;
parenright = -20;
plus = -53;
question = -40;
v = -70;
};
Acircumflex = {
asterisk = -95;
at = -15;
backslash = -64;
f = -13;
multiply = -47;
parenright = -20;
plus = -53;
question = -40;
v = -70;
};
Adieresis = {
asterisk = -95;
at = -15;
backslash = -64;
f = -13;
multiply = -47;
parenright = -20;
plus = -53;
question = -40;
v = -70;
};
Agrave = {
asterisk = -95;
at = -15;
backslash = -64;
f = -13;
multiply = -47;
parenright = -20;
plus = -53;
question = -40;
v = -70;
};
Amacron = {
asterisk = -95;
at = -15;
backslash = -64;
f = -13;
multiply = -47;
parenright = -20;
plus = -53;
question = -40;
v = -70;
};
Aogonek = {
asterisk = -95;
at = -15;
backslash = -64;
f = -13;
multiply = -47;
parenright = -20;
plus = -53;
question = -40;
v = -70;
};
Aring = {
asterisk = -95;
at = -15;
backslash = -64;
f = -13;
multiply = -47;
parenright = -20;
plus = -53;
question = -40;
v = -70;
};
Atilde = {
asterisk = -95;
at = -15;
backslash = -64;
f = -13;
multiply = -47;
parenright = -20;
plus = -53;
question = -40;
v = -70;
};
B = {
A = -21;
AE = -30;
AEacute = -30;
Aacute = -21;
Abreve = -21;
Acircumflex = -21;
Adieresis = -21;
Agrave = -21;
Amacron = -21;
Aogonek = -21;
Aring = -21;
Atilde = -21;
C = -5;
Cacute = -5;
Ccaron = -5;
Ccedilla = -5;
Cdotaccent = -5;
G = -5;
Gbreve = -5;
Gdotaccent = -5;
O = -5;
OE = -5;
Oacute = -5;
Obreve = -5;
Ocircumflex = -5;
Odieresis = -5;
Ograve = -5;
Ohungarumlaut = -5;
Omacron = -5;
Otilde = -5;
Q = -5;
T = -29;
Tcaron = -29;
V = -29;
W = -25;
Wacute = -25;
Wcircumflex = -25;
Wdieresis = -25;
Wgrave = -25;
X = -18;
Y = -30;
Yacute = -30;
Ycircumflex = -30;
Ydieresis = -30;
Ygrave = -30;
imacron = 25;
itilde = 10;
uni0122 = -5;
uni0162 = -29;
uni021A = -29;
uni1EF8 = -30;
uni1EF9 = -8;
y = -8;
yacute = -8;
ycircumflex = -8;
ydieresis = -8;
ygrave = -8;
};
C = {
dotlessi = 5;
eng = 5;
idieresis = 10;
imacron = 10;
iogonek = 5;
itilde = 10;
m = 5;
n = 5;
nacute = 5;
ncaron = 5;
ntilde = 5;
r = 5;
racute = 5;
uni0146 = 5;
uni0157 = 5;
uni0326 = 5;
};
Cacute = {
imacron = 30;
itilde = 30;
};
Ccaron = {
imacron = 30;
itilde = 30;
};
Ccedilla = {
imacron = 30;
itilde = 30;
};
Cdotaccent = {
imacron = 30;
itilde = 30;
};
E = {
ibreve = 18;
icircumflex = 10;
imacron = 54;
itilde = 37;
v = -17;
};
Eacute = {
ibreve = 27;
imacron = 54;
itilde = 37;
v = -17;
};
Ebreve = {
ibreve = 27;
imacron = 54;
itilde = 37;
v = -17;
};
Ecaron = {
ibreve = 27;
imacron = 54;
itilde = 37;
v = -17;
};
Ecircumflex = {
ibreve = 27;
imacron = 54;
itilde = 37;
v = -17;
};
Edieresis = {
ibreve = 27;
imacron = 54;
itilde = 37;
v = -17;
};
Edotaccent = {
ibreve = 27;
imacron = 54;
itilde = 37;
v = -17;
};
Egrave = {
ibreve = 27;
imacron = 54;
itilde = 37;
v = -17;
};
Emacron = {
ibreve = 27;
imacron = 54;
itilde = 37;
v = -17;
};
Eogonek = {
ibreve = 27;
imacron = 54;
itilde = 37;
v = -17;
};
Euro = {
imacron = 30;
itilde = 30;
};
F = {
J = -50;
at = -15;
comma = -40;
iacute = 5;
ibreve = 28;
icircumflex = 28;
igrave = 8;
imacron = 68;
itilde = 38;
multiply = -20;
underscore = -40;
uni006A0301 = 8;
};
G = {
imacron = 30;
};
Gbreve = {
imacron = 30;
};
Gdotaccent = {
imacron = 30;
};
H = {
ibreve = 10;
imacron = 45;
itilde = 15;
};
I = {
ibreve = 10;
imacron = 45;
itilde = 15;
};
Iacute = {
imacron = 40;
itilde = 11;
};
Ibreve = {
imacron = 40;
itilde = 11;
};
Icircumflex = {
imacron = 40;
itilde = 11;
};
Idieresis = {
imacron = 40;
itilde = 11;
};
Idotaccent = {
imacron = 40;
itilde = 11;
};
Igrave = {
imacron = 40;
itilde = 11;
};
Imacron = {
imacron = 40;
itilde = 11;
};
Iogonek = {
imacron = 40;
itilde = 11;
};
Itilde = {
imacron = 40;
itilde = 11;
};
J = {
ibreve = 10;
igrave = 50;
imacron = 60;
itilde = 13;
};
K = {
ibreve = 20;
icircumflex = -5;
imacron = 50;
l = -3;
};
L = {
V = -80;
};
Lacute = {
V = -80;
};
Lcaron = {
V = -80;
};
Ldot = {
V = -80;
};
Lslash = {
V = -80;
};
M = {
ibreve = 10;
imacron = 45;
itilde = 15;
};
N = {
ibreve = 10;
imacron = 45;
itilde = 15;
};
Nacute = {
imacron = 40;
itilde = 11;
};
Ncaron = {
imacron = 40;
itilde = 11;
};
Ntilde = {
imacron = 40;
itilde = 11;
};
OE = {
ibreve = 27;
imacron = 54;
itilde = 37;
v = -17;
};
Oslash = {
igrave = 50;
imacron = 51;
slash = -43;
underscore = -33;
};
P = {
J = -66;
X = -30;
Z = -20;
Zacute = -20;
Zcaron = -20;
Zdotaccent = -20;
at = -12;
comma = -87;
imacron = 20;
itilde = 36;
parenright = -40;
slash = -73;
underscore = -44;
};
Q = {
X = -20;
};
R = {
imacron = 30;
itilde = 20;
};
Racute = {
imacron = 30;
itilde = 20;
};
Rcaron = {
imacron = 30;
itilde = 20;
};
S = {
imacron = 34;
itilde = 20;
};
Sacute = {
imacron = 34;
itilde = 20;
};
Scaron = {
imacron = 34;
itilde = 20;
};
Scedilla = {
imacron = 34;
itilde = 20;
};
T = {
abreve = -103;
adieresis = -83;
amacron = -83;
atilde = -103;
ebreve = -103;
edieresis = -83;
emacron = -83;
gbreve = -95;
ibreve = 35;
icircumflex = 50;
imacron = 73;
itilde = 40;
ntilde = -90;
odieresis = -83;
omacron = -90;
otilde = -103;
racute = -70;
scaron = -95;
udieresis = -80;
umacron = -85;
uni1EBD = -103;
utilde = -100;
ydieresis = -65;
};
Tcaron = {
abreve = -103;
adieresis = -83;
amacron = -83;
atilde = -103;
ebreve = -103;
edieresis = -83;
emacron = -83;
gbreve = -95;
ibreve = 35;
icircumflex = 50;
imacron = 73;
itilde = 40;
ntilde = -90;
odieresis = -83;
omacron = -90;
otilde = -103;
racute = -70;
scaron = -95;
udieresis = -80;
umacron = -85;
uni1EBD = -103;
utilde = -100;
ydieresis = -65;
};
Thorn = {
X = -70;
parenright = -50;
};
U = {
ibreve = 10;
imacron = 46;
itilde = 14;
};
Uacute = {
ibreve = 10;
imacron = 46;
itilde = 14;
};
Ubreve = {
ibreve = 10;
imacron = 46;
itilde = 14;
};
Ucircumflex = {
ibreve = 10;
imacron = 46;
itilde = 14;
};
Udieresis = {
ibreve = 10;
imacron = 46;
itilde = 14;
};
Ugrave = {
ibreve = 10;
imacron = 46;
itilde = 14;
};
Uhungarumlaut = {
ibreve = 10;
imacron = 46;
itilde = 14;
};
Umacron = {
ibreve = 10;
imacron = 46;
itilde = 14;
};
Uogonek = {
ibreve = 10;
imacron = 46;
itilde = 14;
};
Uring = {
ibreve = 10;
imacron = 46;
itilde = 14;
};
Utilde = {
ibreve = 10;
imacron = 46;
itilde = 14;
};
V = {
adieresis = -55;
edieresis = -60;
emacron = -65;
ibreve = 40;
icircumflex = 25;
imacron = 75;
itilde = 40;
odieresis = -60;
omacron = -68;
};
W = {
adieresis = -73;
edieresis = -73;
ibreve = 36;
icircumflex = 20;
imacron = 73;
itilde = 30;
odieresis = -73;
};
Wacute = {
adieresis = -73;
edieresis = -73;
ibreve = 36;
icircumflex = 20;
imacron = 73;
itilde = 30;
odieresis = -73;
};
Wcircumflex = {
adieresis = -73;
edieresis = -73;
ibreve = 36;
icircumflex = 20;
imacron = 73;
itilde = 30;
odieresis = -73;
};
Wdieresis = {
adieresis = -73;
edieresis = -73;
ibreve = 36;
icircumflex = 20;
imacron = 73;
itilde = 30;
odieresis = -73;
};
Wgrave = {
adieresis = -73;
edieresis = -73;
ibreve = 36;
icircumflex = 20;
imacron = 73;
itilde = 30;
odieresis = -73;
};
X = {
J = -8;
at = -22;
f = -23;
ibreve = 27;
imacron = 50;
itilde = 10;
multiply = -67;
question = -24;
v = -68;
x = -30;
};
Y = {
adieresis = -73;
amacron = -78;
edieresis = -78;
emacron = -88;
ibreve = 30;
icircumflex = 15;
imacron = 68;
itilde = 28;
odieresis = -78;
omacron = -88;
racute = -48;
scaron = -88;
udieresis = -68;
};
Yacute = {
adieresis = -73;
amacron = -78;
edieresis = -78;
emacron = -88;
ibreve = 30;
icircumflex = 15;
imacron = 68;
itilde = 28;
odieresis = -78;
omacron = -88;
racute = -48;
scaron = -88;
udieresis = -68;
};
Ycircumflex = {
adieresis = -73;
amacron = -78;
edieresis = -78;
emacron = -88;
ibreve = 30;
icircumflex = 15;
imacron = 68;
itilde = 28;
odieresis = -78;
omacron = -88;
racute = -48;
scaron = -88;
udieresis = -68;
};
Ydieresis = {
adieresis = -73;
amacron = -78;
edieresis = -78;
emacron = -88;
ibreve = 30;
icircumflex = 15;
imacron = 68;
itilde = 28;
odieresis = -78;
omacron = -88;
racute = -48;
scaron = -88;
udieresis = -68;
};
Ygrave = {
adieresis = -73;
amacron = -78;
edieresis = -78;
emacron = -88;
ibreve = 30;
icircumflex = 15;
imacron = 68;
itilde = 28;
odieresis = -78;
omacron = -88;
racute = -48;
scaron = -88;
udieresis = -68;
};
Z = {
ibreve = 37;
imacron = 60;
itilde = 34;
};
Zacute = {
ibreve = 37;
imacron = 60;
itilde = 34;
};
Zcaron = {
ibreve = 37;
imacron = 60;
itilde = 34;
};
Zdotaccent = {
ibreve = 37;
imacron = 60;
itilde = 34;
};
asterisk = {
J = -67;
at = -30;
exclam = -11;
imacron = 67;
itilde = 40;
questiondown = -84;
slash = -124;
};
at = {
X = -10;
asterisk = -53;
backslash = -45;
braceright = -26;
comma = -13;
greater = -20;
less = -20;
parenright = -43;
question = -33;
quotedblleft = -7;
quotedblright = -12;
quoteleft = -7;
quoteright = -12;
semicolon = -12;
slash = -17;
underscore = -20;
};
backslash = {
at = -20;
backslash = -127;
comma = 50;
question = -30;
quotedblbase = 57;
quotedblleft = -67;
quotedblright = -103;
quoteleft = -67;
quoteright = -103;
quotesinglbase = 57;
underscore = 27;
};
bar = {
imacron = 40;
itilde = 11;
};
bracketleft = {
imacron = 21;
};
bracketright = {
imacron = 60;
itilde = 27;
};
brokenbar = {
imacron = 40;
itilde = 11;
};
c = {
asterisk = -35;
backslash = -74;
parenright = -30;
question = -34;
v = -18;
x = -18;
};
cacute = {
asterisk = -35;
backslash = -74;
parenright = -30;
question = -34;
v = -19;
};
ccaron = {
asterisk = -35;
backslash = -74;
parenright = -30;
question = -34;
v = -19;
};
ccedilla = {
asterisk = -35;
backslash = -74;
parenright = -30;
question = -34;
v = -19;
};
cdotaccent = {
asterisk = -35;
backslash = -74;
parenright = -30;
question = -34;
v = -19;
};
comma = {
backslash = -87;
question = -11;
v = -54;
};
d = {
imacron = 40;
};
dcaron = {
questiondown = -18;
};
dcroat = {
imacron = 71;
};
dollar = {
imacron = 34;
itilde = 20;
};
eth = {
imacron = 30;
};
exclam = {
asterisk = -15;
igrave = 47;
imacron = 50;
itilde = 7;
};
f = {
aacute = -17;
abreve = -17;
acircumflex = -17;
adieresis = -17;
aeacute = -17;
agrave = -17;
amacron = -17;
aogonek = -17;
aring = -17;
atilde = -17;
ibreve = 27;
igrave = 40;
imacron = 60;
itilde = 37;
};
fl = {
imacron = 40;
};
germandbls = {
asterisk = -60;
v = -60;
};
greater = {
at = -22;
parenright = -60;
};
i = {
lslash = 8;
};
iacute = {
asterisk = 26;
b = 60;
backslash = 74;
braceright = 11;
bracketleft = 60;
bracketright = 21;
exclam = 47;
f = 40;
h = 60;
idieresis = 80;
imacron = 60;
itilde = 55;
k = 60;
l = 60;
lacute = 60;
lcaron = 60;
ldot = 60;
lslash = 40;
parenright = 15;
question = 57;
quotedblleft = 53;
quotedblright = 40;
quoteleft = 53;
quoteright = 40;
uni0137 = 60;
uni013C = 60;
};
ibreve = {
backslash = 54;
question = 40;
};
imacron = {
B = 40;
D = 40;
Dcaron = 40;
E = 40;
Eacute = 40;
Ebreve = 40;
Ecaron = 40;
Ecircumflex = 40;
Edieresis = 40;
Edotaccent = 40;
Egrave = 40;
Emacron = 40;
Eogonek = 40;
F = 40;
H = 40;
I = 40;
Iacute = 40;
Ibreve = 40;
Icircumflex = 40;
Idieresis = 40;
Idotaccent = 40;
Igrave = 40;
Imacron = 40;
Itilde = 40;
K = 40;
L = 40;
Lacute = 40;
Lcaron = 40;
Ldot = 40;
M = 40;
N = 40;
Nacute = 40;
Ncaron = 40;
Ntilde = 40;
P = 40;
R = 40;
Racute = 40;
Rcaron = 40;
Thorn = 40;
asterisk = 70;
b = 60;
backslash = 93;
bar = 40;
bracketleft = 60;
bracketright = 21;
brokenbar = 40;
exclam = 70;
f = 40;
germandbls = 60;
h = 60;
k = 60;
l = 60;
lacute = 60;
lcaron = 60;
ldot = 60;
lslash = 67;
question = 73;
quotedblleft = 73;
quotedblright = 70;
quoteleft = 73;
quoteright = 70;
thorn = 60;
uni0136 = 40;
uni0137 = 60;
uni013B = 40;
uni013C = 60;
uni0145 = 40;
uni0156 = 40;
uni02B9 = 100;
uni02BA = 100;
uni1EBC = 40;
uni20A8 = 40;
z = 40;
zacute = 40;
zcaron = 40;
zdotaccent = 40;
};
itilde = {
asterisk = 40;
b = 15;
bracketleft = 27;
exclam = 11;
f = 30;
h = 15;
j = 34;
k = 15;
l = 15;
lacute = 15;
lcaron = 15;
ldot = 15;
question = 40;
quotedblleft = 30;
quotedblright = 30;
quoteleft = 30;
quoteright = 30;
uni0137 = 15;
uni013C = 15;
uni02B9 = 60;
uni02BA = 60;
};
j = {
itilde = 40;
};
l = {
imacron = 40;
};
lacute = {
imacron = 40;
};
lcaron = {
b = 110;
h = 110;
k = 110;
l = 110;
questiondown = -18;
};
less = {
at = -25;
parenright = -44;
};
lslash = {
i = 8;
imacron = 60;
questiondown = 24;
v = 15;
};
multiply = {
X = -33;
};
parenleft = {
at = -40;
};
plus = {
slash = -37;
};
q = {
backslash = -40;
j = 30;
};
question = {
J = -33;
X = -30;
at = -15;
comma = -65;
ibreve = 30;
igrave = 40;
imacron = 54;
itilde = 37;
parenright = -81;
questiondown = -93;
quotedblbase = -37;
quotesinglbase = -37;
slash = -70;
underscore = -64;
};
questiondown = {
asterisk = -47;
backslash = -50;
question = -47;
quotedblbase = 40;
quotesinglbase = 40;
v = -13;
};
quotedbl = {
ibreve = 27;
imacron = 80;
itilde = 30;
};
quotedblbase = {
backslash = -120;
question = -30;
};
quotedblleft = {
J = -74;
at = -22;
ibreve = 13;
imacron = 63;
itilde = 24;
questiondown = -67;
slash = -100;
};
quotedblright = {
ibreve = 27;
imacron = 80;
itilde = 30;
};
quoteleft = {
J = -74;
at = -22;
ibreve = 13;
imacron = 63;
itilde = 24;
questiondown = -67;
slash = -100;
};
quoteright = {
ibreve = 27;
imacron = 80;
itilde = 30;
};
quotesinglbase = {
backslash = -120;
question = -30;
};
quotesingle = {
ibreve = 27;
imacron = 80;
itilde = 30;
};
sacute = {
v = -37;
};
scaron = {
v = -37;
};
scedilla = {
v = -37;
};
slash = {
B = 44;
D = 44;
Dcaron = 44;
E = 44;
Eacute = 44;
Ebreve = 44;
Ecaron = 44;
Ecircumflex = 44;
Edieresis = 44;
Edotaccent = 44;
Egrave = 44;
Emacron = 44;
Eogonek = 44;
F = 44;
H = 44;
I = 44;
Iacute = 44;
Ibreve = 44;
Icircumflex = 60;
Idieresis = 54;
Idotaccent = 44;
Igrave = 40;
Imacron = 90;
Itilde = 44;
J = -37;
K = 44;
L = 44;
Lacute = 44;
Lcaron = 44;
Ldot = 44;
M = 44;
N = 44;
Nacute = 44;
Ncaron = 44;
Ntilde = 44;
Oslash = -33;
P = 44;
R = 44;
Racute = 44;
Rcaron = 44;
Thorn = 44;
at = -32;
bar = 44;
brokenbar = 44;
comma = -44;
ibreve = 40;
icircumflex = 43;
idieresis = 37;
igrave = 87;
imacron = 80;
plus = -56;
questiondown = -57;
quotedblbase = -58;
quotesinglbase = -58;
slash = -123;
underscore = -124;
uni0136 = 44;
uni013B = 44;
uni0145 = 44;
uni0156 = 44;
uni1EBC = 44;
uni20A8 = 44;
};
underscore = {
asterisk = -97;
at = -33;
backslash = -157;
j = 21;
question = -60;
underscore = -114;
};
uni0122 = {
imacron = 30;
};
uni0136 = {
ibreve = 20;
icircumflex = -5;
imacron = 50;
l = -3;
};
uni013B = {
V = -80;
};
uni013C = {
imacron = 40;
};
uni0145 = {
imacron = 40;
itilde = 11;
};
uni0156 = {
imacron = 30;
itilde = 20;
};
uni0162 = {
abreve = -103;
adieresis = -83;
amacron = -83;
atilde = -103;
ebreve = -103;
edieresis = -83;
emacron = -83;
gbreve = -95;
ibreve = 35;
icircumflex = 50;
imacron = 73;
itilde = 40;
ntilde = -90;
odieresis = -83;
omacron = -90;
otilde = -103;
racute = -70;
scaron = -95;
udieresis = -80;
umacron = -85;
uni1EBD = -103;
utilde = -100;
ydieresis = -65;
};
uni0218 = {
imacron = 34;
itilde = 20;
};
uni0219 = {
v = -37;
};
uni021A = {
abreve = -103;
adieresis = -83;
amacron = -83;
atilde = -103;
ebreve = -103;
edieresis = -83;
emacron = -83;
gbreve = -95;
ibreve = 35;
icircumflex = 50;
imacron = 73;
itilde = 40;
ntilde = -90;
odieresis = -83;
omacron = -90;
otilde = -103;
racute = -70;
scaron = -95;
udieresis = -80;
umacron = -85;
uni1EBD = -103;
utilde = -100;
ydieresis = -65;
};
uni02B9 = {
J = -41;
at = -25;
backslash = 20;
imacron = 100;
itilde = 60;
};
uni02BA = {
J = -41;
at = -25;
backslash = 20;
imacron = 100;
itilde = 60;
};
uni1EBC = {
ibreve = 27;
imacron = 54;
itilde = 37;
v = -17;
};
uni1EF8 = {
adieresis = -73;
amacron = -78;
edieresis = -78;
emacron = -88;
ibreve = 30;
icircumflex = 15;
imacron = 68;
itilde = 28;
odieresis = -78;
omacron = -88;
racute = -48;
scaron = -88;
udieresis = -68;
};
uni20A8 = {
v = -37;
};
v = {
at = -15;
comma = -40;
f = 20;
lslash = 8;
questiondown = -20;
};
z = {
imacron = 40;
};
zacute = {
imacron = 40;
};
zcaron = {
imacron = 40;
};
zdotaccent = {
imacron = 40;
};
};
"C8EEE9A0-3D52-4689-97D8-79922D65E4CE" = {
"@MMK_L_A" = {
"@MMK_R_C" = -50;
"@MMK_R_S" = -20;
"@MMK_R_T" = -80;
"@MMK_R_U" = -31;
"@MMK_R_V" = -118;
"@MMK_R_W" = -80;
"@MMK_R_Y" = -107;
"@MMK_R_a" = -20;
"@MMK_R_asterisk" = -86;
"@MMK_R_backslash" = -61;
"@MMK_R_c" = -25;
"@MMK_R_f" = -17;
"@MMK_R_hyphen" = -40;
"@MMK_R_multiply" = -49;
"@MMK_R_parenright" = -26;
"@MMK_R_plus" = -57;
"@MMK_R_question" = -40;
"@MMK_R_s" = -10;
"@MMK_R_t" = -43;
"@MMK_R_u" = -25;
"@MMK_R_v" = -70;
"@MMK_R_w" = -47;
"@MMK_R_x" = -40;
"@MMK_R_y" = -79;
"@MMK_R_z" = 3;
};
"@MMK_L_B" = {
"@MMK_R_A" = -25;
"@MMK_R_AE" = -39;
"@MMK_R_T" = -58;
"@MMK_R_V" = -50;
"@MMK_R_W" = -25;
"@MMK_R_X" = -30;
"@MMK_R_Y" = -50;
"@MMK_R_asterisk" = -21;
"@MMK_R_backslash" = -31;
"@MMK_R_braceright" = -40;
"@MMK_R_comma" = -21;
"@MMK_R_g" = -15;
"@MMK_R_parenright" = -69;
"@MMK_R_period" = -30;
"@MMK_R_slash" = -47;
"@MMK_R_underscore" = -50;
"@MMK_R_x" = -10;
};
"@MMK_L_Cacute" = {
"@MMK_R_AE" = -17;
"@MMK_R_T" = -20;
"@MMK_R_V" = -26;
"@MMK_R_W" = -20;
"@MMK_R_X" = -20;
"@MMK_R_Y" = -40;
"@MMK_R_parenright" = -20;
};
"@MMK_L_E" = {
"@MMK_R_C" = -10;
};
"@MMK_L_F" = {
"@MMK_R_A" = -60;
"@MMK_R_a" = -40;
"@MMK_R_c" = -30;
"@MMK_R_g" = -40;
"@MMK_R_period" = -60;
"@MMK_R_s" = -20;
};
"@MMK_L_G" = {
"@MMK_R_T" = -25;
"@MMK_R_W" = -25;
"@MMK_R_Y" = -35;
};
"@MMK_L_J" = {
"@MMK_R_A" = -23;
};
"@MMK_L_K" = {
"@MMK_R_C" = -52;
"@MMK_R_J" = -15;
"@MMK_R_S" = -20;
"@MMK_R_a" = -24;
"@MMK_R_asterisk" = -4;
"@MMK_R_c" = -55;
"@MMK_R_dotlessi" = -20;
"@MMK_R_f" = -15;
"@MMK_R_g" = -25;
"@MMK_R_guillemotleft" = -41;
"@MMK_R_hyphen" = -60;
"@MMK_R_i" = -15;
"@MMK_R_igrave" = -10;
"@MMK_R_j" = -15;
"@MMK_R_plus" = -40;
"@MMK_R_question" = -13;
"@MMK_R_s" = -35;
"@MMK_R_t" = -25;
"@MMK_R_u" = -35;
"@MMK_R_v" = -55;
"@MMK_R_w" = -50;
"@MMK_R_x" = -40;
"@MMK_R_y" = -55;
"@MMK_R_z" = -15;
};
"@MMK_L_L" = {
"@MMK_R_C" = -79;
"@MMK_R_S" = -45;
"@MMK_R_T" = -120;
"@MMK_R_U" = -40;
"@MMK_R_V" = -139;
"@MMK_R_W" = -80;
"@MMK_R_Y" = -114;
"@MMK_R_asterisk" = -103;
"@MMK_R_backslash" = -61;
"@MMK_R_c" = -30;
"@MMK_R_hyphen" = -60;
"@MMK_R_percent" = -57;
"@MMK_R_plus" = -60;
"@MMK_R_question" = -30;
"@MMK_R_t" = -8;
"@MMK_R_uni018F" = -30;
"@MMK_R_uni02BA" = -94;
"@MMK_R_v" = -69;
"@MMK_R_w" = -41;
"@MMK_R_x" = -20;
"@MMK_R_y" = -70;
};
"@MMK_L_P" = {
"@MMK_R_A" = -72;
"@MMK_R_AE" = -109;
"@MMK_R_S" = 1;
"@MMK_R_V" = -15;
"@MMK_R_Y" = -19;
"@MMK_R_a" = -25;
"@MMK_R_c" = -30;
"@MMK_R_g" = -21;
"@MMK_R_period" = -50;
};
"@MMK_L_Q" = {
"@MMK_R_A" = -26;
"@MMK_R_T" = -34;
"@MMK_R_U" = 3;
"@MMK_R_V" = -37;
"@MMK_R_W" = -25;
"@MMK_R_Y" = -57;
"@MMK_R_u" = 3;
};
"@MMK_L_R" = {
"@MMK_R_C" = -15;
"@MMK_R_J" = -10;
"@MMK_R_T" = -25;
"@MMK_R_V" = -34;
"@MMK_R_W" = -20;
"@MMK_R_Y" = -30;
"@MMK_R_a" = -20;
"@MMK_R_c" = -25;
"@MMK_R_plus" = -17;
"@MMK_R_s" = -17;
"@MMK_R_u" = -10;
};
"@MMK_L_S" = {
"@MMK_R_T" = -30;
"@MMK_R_V" = -50;
"@MMK_R_W" = -30;
"@MMK_R_Y" = -50;
};
"@MMK_L_T" = {
"@MMK_R_A" = -71;
"@MMK_R_AE" = -90;
"@MMK_R_C" = -36;
"@MMK_R_J" = -60;
"@MMK_R_S" = -15;
"@MMK_R_a" = -105;
"@MMK_R_backslash" = 21;
"@MMK_R_c" = -105;
"@MMK_R_comma" = -80;
"@MMK_R_dotlessi" = -90;
"@MMK_R_exclamdown" = -52;
"@MMK_R_f" = -20;
"@MMK_R_g" = -100;
"@MMK_R_hyphen" = -50;
"@MMK_R_ibreve" = 60;
"@MMK_R_multiply" = -87;
"@MMK_R_p" = -90;
"@MMK_R_period" = -80;
"@MMK_R_plus" = -57;
"@MMK_R_question" = 20;
"@MMK_R_questiondown" = -69;
"@MMK_R_rcaron" = -60;
"@MMK_R_s" = -100;
"@MMK_R_semicolon" = -51;
"@MMK_R_slash" = -41;
"@MMK_R_t" = -29;
"@MMK_R_u" = -100;
"@MMK_R_underscore" = -60;
"@MMK_R_v" = -75;
"@MMK_R_w" = -80;
"@MMK_R_x" = -75;
"@MMK_R_y" = -75;
"@MMK_R_z" = -80;
};
"@MMK_L_Thorn" = {
"@MMK_R_A" = -24;
"@MMK_R_T" = -97;
"@MMK_R_V" = -60;
"@MMK_R_W" = -40;
"@MMK_R_Y" = -79;
"@MMK_R_period" = -26;
};
"@MMK_L_U" = {
"@MMK_R_A" = -39;
"@MMK_R_AE" = -56;
"@MMK_R_g" = -25;
"@MMK_R_period" = -20;
"@MMK_R_s" = -10;
"@MMK_R_slash" = -30;
"@MMK_R_underscore" = -39;
};
"@MMK_L_V" = {
"@MMK_R_A" = -90;
"@MMK_R_AE" = -107;
"@MMK_R_C" = -25;
"@MMK_R_J" = -60;
"@MMK_R_a" = -55;
"@MMK_R_backslash" = 3;
"@MMK_R_c" = -65;
"@MMK_R_colon" = -30;
"@MMK_R_comma" = -79;
"@MMK_R_dotlessi" = -40;
"@MMK_R_exclamdown" = -31;
"@MMK_R_f" = -15;
"@MMK_R_g" = -65;
"@MMK_R_hyphen" = -49;
"@MMK_R_multiply" = -57;
"@MMK_R_p" = -40;
"@MMK_R_period" = -60;
"@MMK_R_plus" = -66;
"@MMK_R_s" = -55;
"@MMK_R_slash" = -67;
"@MMK_R_t" = -15;
"@MMK_R_u" = -35;
"@MMK_R_underscore" = -70;
"@MMK_R_v" = -20;
"@MMK_R_w" = -25;
"@MMK_R_x" = -20;
"@MMK_R_y" = -15;
"@MMK_R_z" = -20;
};
"@MMK_L_W" = {
"@MMK_R_A" = -89;
"@MMK_R_AE" = -96;
"@MMK_R_C" = -35;
"@MMK_R_J" = -50;
"@MMK_R_Oslash" = -20;
"@MMK_R_S" = -10;
"@MMK_R_a" = -75;
"@MMK_R_c" = -75;
"@MMK_R_comma" = -59;
"@MMK_R_dotlessi" = -45;
"@MMK_R_exclamdown" = -23;
"@MMK_R_f" = -15;
"@MMK_R_g" = -80;
"@MMK_R_hyphen" = -49;
"@MMK_R_i" = -20;
"@MMK_R_iacute" = -20;
"@MMK_R_j" = -15;
"@MMK_R_multiply" = -49;
"@MMK_R_p" = -45;
"@MMK_R_period" = -70;
"@MMK_R_plus" = -57;
"@MMK_R_rcaron" = -30;
"@MMK_R_s" = -70;
"@MMK_R_semicolon" = -23;
"@MMK_R_slash" = -59;
"@MMK_R_t" = -20;
"@MMK_R_u" = -40;
"@MMK_R_underscore" = -47;
"@MMK_R_v" = -30;
"@MMK_R_w" = -30;
"@MMK_R_x" = -30;
"@MMK_R_y" = -30;
"@MMK_R_z" = -30;
};
"@MMK_L_X" = {
"@MMK_R_C" = -52;
"@MMK_R_a" = -30;
"@MMK_R_c" = -45;
"@MMK_R_g" = -20;
"@MMK_R_s" = -35;
"@MMK_R_t" = -35;
"@MMK_R_u" = -31;
"@MMK_R_w" = -45;
"@MMK_R_y" = -60;
"@MMK_R_z" = -20;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -89;
"@MMK_R_AE" = -81;
"@MMK_R_C" = -40;
"@MMK_R_J" = -60;
"@MMK_R_Oslash" = -32;
"@MMK_R_a" = -75;
"@MMK_R_c" = -85;
"@MMK_R_colon" = -40;
"@MMK_R_comma" = -53;
"@MMK_R_dotlessi" = -40;
"@MMK_R_exclamdown" = -41;
"@MMK_R_f" = -20;
"@MMK_R_g" = -65;
"@MMK_R_hyphen" = -41;
"@MMK_R_i" = -25;
"@MMK_R_iacute" = -25;
"@MMK_R_igrave" = -10;
"@MMK_R_multiply" = -87;
"@MMK_R_p" = -40;
"@MMK_R_period" = -73;
"@MMK_R_plus" = -89;
"@MMK_R_questiondown" = -71;
"@MMK_R_s" = -85;
"@MMK_R_semicolon" = -34;
"@MMK_R_slash" = -53;
"@MMK_R_t" = -20;
"@MMK_R_u" = -65;
"@MMK_R_underscore" = -71;
"@MMK_R_uni02BA" = 30;
"@MMK_R_v" = -40;
"@MMK_R_w" = -30;
"@MMK_R_x" = -40;
"@MMK_R_y" = -40;
"@MMK_R_z" = -40;
};
"@MMK_L_Z" = {
"@MMK_R_C" = -20;
"@MMK_R_a" = -15;
"@MMK_R_c" = -25;
"@MMK_R_s" = -15;
};
"@MMK_L_a" = {
"@MMK_R_asterisk" = -31;
"@MMK_R_backslash" = -40;
"@MMK_R_lslash" = 10;
"@MMK_R_uni02BA" = -61;
"@MMK_R_v" = -21;
"@MMK_R_w" = -13;
"@MMK_R_y" = -28;
};
"@MMK_L_aacute" = {
"@MMK_R_asterisk" = -31;
"@MMK_R_backslash" = -60;
"@MMK_R_v" = -29;
"@MMK_R_w" = -30;
"@MMK_R_y" = -27;
};
"@MMK_L_ae" = {
"@MMK_R_Y" = -80;
"@MMK_R_asterisk" = -34;
"@MMK_R_backslash" = -61;
"@MMK_R_g" = -3;
"@MMK_R_lslash" = 15;
"@MMK_R_question" = -20;
"@MMK_R_uni02BA" = -63;
"@MMK_R_v" = -25;
"@MMK_R_w" = -20;
"@MMK_R_x" = -20;
"@MMK_R_y" = -31;
};
"@MMK_L_asterisk" = {
"@MMK_R_A" = -66;
"@MMK_R_AE" = -111;
"@MMK_R_C" = -12;
"@MMK_R_a" = -3;
"@MMK_R_c" = -14;
"@MMK_R_s" = -18;
};
"@MMK_L_b" = {
"@MMK_R_T" = -110;
"@MMK_R_V" = -80;
"@MMK_R_asterisk" = -53;
"@MMK_R_backslash" = -81;
"@MMK_R_braceright" = -50;
"@MMK_R_c" = -5;
"@MMK_R_f" = -10;
"@MMK_R_g" = -5;
"@MMK_R_parenright" = -59;
"@MMK_R_question" = -40;
"@MMK_R_s" = -5;
"@MMK_R_slash" = -9;
"@MMK_R_t" = -20;
"@MMK_R_uni02BA" = -89;
"@MMK_R_v" = -39;
"@MMK_R_w" = -29;
"@MMK_R_x" = -30;
"@MMK_R_y" = -49;
"@MMK_R_z" = -10;
};
"@MMK_L_backslash" = {
"@MMK_R_C" = -40;
"@MMK_R_T" = -86;
"@MMK_R_U" = -4;
"@MMK_R_V" = -84;
"@MMK_R_W" = -69;
"@MMK_R_Y" = -70;
"@MMK_R_c" = -20;
"@MMK_R_hyphen" = -47;
"@MMK_R_uni02BA" = -101;
};
"@MMK_L_braceright" = {
"@MMK_R_A" = -49;
"@MMK_R_AE" = -50;
"@MMK_R_T" = -49;
"@MMK_R_W" = -21;
"@MMK_R_Y" = -50;
"@MMK_R_period" = -50;
};
"@MMK_L_c" = {
"@MMK_R_y" = -15;
};
"@MMK_L_colon" = {
"@MMK_R_V" = -30;
"@MMK_R_Y" = -40;
};
"@MMK_L_comma" = {
"@MMK_R_C" = -39;
"@MMK_R_T" = -80;
"@MMK_R_V" = -80;
"@MMK_R_W" = -57;
"@MMK_R_Y" = -73;
"@MMK_R_percent" = -52;
"@MMK_R_t" = -23;
"@MMK_R_w" = -30;
"@MMK_R_y" = -50;
};
"@MMK_L_exclamdown" = {
"@MMK_R_T" = -39;
"@MMK_R_V" = -31;
"@MMK_R_W" = -4;
"@MMK_R_Y" = -41;
};
"@MMK_L_f" = {
"@MMK_R_a" = -16;
"@MMK_R_c" = -10;
"@MMK_R_g" = -20;
"@MMK_R_period" = -4;
"@MMK_R_s" = -14;
};
"@MMK_L_g" = {
"@MMK_R_c" = -19;
"@MMK_R_f" = 10;
"@MMK_R_j" = 21;
"@MMK_R_t" = 20;
"@MMK_R_u" = -5;
};
"@MMK_L_germandbls" = {
"@MMK_R_y" = -40;
};
"@MMK_L_greater" = {
"@MMK_R_period" = -60;
};
"@MMK_L_hyphen" = {
"@MMK_R_A" = -39;
"@MMK_R_T" = -51;
"@MMK_R_V" = -49;
"@MMK_R_W" = -39;
"@MMK_R_Y" = -51;
"@MMK_R_backslash" = -76;
"@MMK_R_slash" = -47;
};
"@MMK_L_ibreve" = {
"@MMK_R_T" = 60;
};
"@MMK_L_k" = {
"@MMK_R_a" = -31;
"@MMK_R_c" = -31;
"@MMK_R_s" = -21;
};
"@MMK_L_lslash" = {
"@MMK_R_w" = 10;
};
"@MMK_L_multiply" = {
"@MMK_R_A" = -17;
"@MMK_R_AE" = -26;
"@MMK_R_T" = -87;
"@MMK_R_V" = -51;
"@MMK_R_W" = -40;
"@MMK_R_Y" = -71;
};
"@MMK_L_parenleft" = {
"@MMK_R_A" = -34;
"@MMK_R_C" = -59;
"@MMK_R_a" = -50;
"@MMK_R_c" = -31;
"@MMK_R_s" = -20;
};
"@MMK_L_period" = {
"@MMK_R_C" = -50;
"@MMK_R_T" = -80;
"@MMK_R_U" = -20;
"@MMK_R_V" = -60;
"@MMK_R_W" = -70;
"@MMK_R_Y" = -74;
"@MMK_R_backslash" = -106;
"@MMK_R_less" = -60;
"@MMK_R_question" = -47;
"@MMK_R_v" = -43;
"@MMK_R_w" = -40;
"@MMK_R_y" = -60;
};
"@MMK_L_plus" = {
"@MMK_R_A" = -34;
"@MMK_R_T" = -59;
"@MMK_R_V" = -77;
"@MMK_R_W" = -57;
"@MMK_R_Y" = -80;
};
"@MMK_L_question" = {
"@MMK_R_A" = -69;
"@MMK_R_AE" = -86;
"@MMK_R_period" = -90;
};
"@MMK_L_questiondown" = {
"@MMK_R_T" = -77;
"@MMK_R_Y" = -70;
"@MMK_R_c" = -31;
"@MMK_R_percent" = -31;
"@MMK_R_z" = 20;
};
"@MMK_L_quotedblright" = {
"@MMK_R_J" = -71;
"@MMK_R_s" = -43;
"@MMK_R_slash" = -101;
};
"@MMK_L_r" = {
"@MMK_R_c" = -19;
"@MMK_R_colon" = 17;
"@MMK_R_period" = -40;
"@MMK_R_u" = 4;
};
"@MMK_L_s" = {
"@MMK_R_asterisk" = -60;
"@MMK_R_backslash" = -69;
"@MMK_R_f" = -15;
"@MMK_R_parenright" = -21;
"@MMK_R_question" = -29;
"@MMK_R_t" = -20;
"@MMK_R_v" = -35;
"@MMK_R_w" = -15;
"@MMK_R_x" = -15;
"@MMK_R_y" = -35;
};
"@MMK_L_semicolon" = {
"@MMK_R_T" = -40;
"@MMK_R_Y" = -6;
};
"@MMK_L_slash" = {
"@MMK_R_C" = -37;
"@MMK_R_T" = 4;
"@MMK_R_V" = 31;
"@MMK_R_W" = 4;
"@MMK_R_Y" = 40;
"@MMK_R_a" = -30;
"@MMK_R_c" = -46;
"@MMK_R_dotlessi" = -14;
"@MMK_R_g" = -31;
"@MMK_R_hyphen" = -47;
"@MMK_R_period" = -116;
"@MMK_R_s" = -34;
};
"@MMK_L_t" = {
"@MMK_R_c" = -19;
"@MMK_R_comma" = 52;
};
"@MMK_L_underscore" = {
"@MMK_R_C" = -63;
"@MMK_R_T" = -71;
"@MMK_R_U" = -43;
"@MMK_R_V" = -90;
"@MMK_R_W" = -63;
"@MMK_R_Y" = -71;
};
"@MMK_L_v" = {
"@MMK_R_A" = -80;
"@MMK_R_a" = -6;
"@MMK_R_c" = -22;
"@MMK_R_g" = -21;
"@MMK_R_period" = -40;
"@MMK_R_s" = -15;
"@MMK_R_t" = 20;
};
"@MMK_L_w" = {
"@MMK_R_a" = -5;
"@MMK_R_c" = -13;
"@MMK_R_comma" = -30;
"@MMK_R_g" = -17;
"@MMK_R_lslash" = 5;
"@MMK_R_period" = -40;
"@MMK_R_questiondown" = -17;
"@MMK_R_s" = -15;
};
"@MMK_L_x" = {
"@MMK_R_c" = -25;
"@MMK_R_s" = -15;
};
"@MMK_L_y" = {
"@MMK_R_T" = -80;
"@MMK_R_a" = -20;
"@MMK_R_c" = -21;
"@MMK_R_comma" = -60;
"@MMK_R_g" = -23;
"@MMK_R_multiply" = -17;
"@MMK_R_period" = -50;
"@MMK_R_questiondown" = -39;
"@MMK_R_s" = -17;
"@MMK_R_slash" = -30;
};
"@MMK_L_z" = {
"@MMK_R_c" = -10;
};
AE = {
ibreve = 29;
imacron = 51;
itilde = 33;
v = -19;
};
AEacute = {
ibreve = 29;
imacron = 51;
itilde = 33;
v = -19;
};
Aacute = {
asterisk = -86;
backslash = -61;
f = -17;
multiply = -49;
parenright = -26;
plus = -57;
question = -40;
v = -70;
};
Abreve = {
asterisk = -86;
backslash = -61;
f = -17;
multiply = -49;
parenright = -26;
plus = -57;
question = -40;
v = -70;
};
Acircumflex = {
asterisk = -86;
backslash = -61;
f = -17;
multiply = -49;
parenright = -26;
plus = -57;
question = -40;
v = -70;
};
Adieresis = {
asterisk = -86;
backslash = -61;
f = -17;
multiply = -49;
parenright = -26;
plus = -57;
question = -40;
v = -70;
};
Agrave = {
asterisk = -86;
backslash = -61;
f = -17;
multiply = -49;
parenright = -26;
plus = -57;
question = -40;
v = -70;
};
Amacron = {
asterisk = -86;
backslash = -61;
f = -17;
multiply = -49;
parenright = -26;
plus = -57;
question = -40;
v = -70;
};
Aogonek = {
asterisk = -86;
backslash = -61;
f = -17;
multiply = -49;
parenright = -26;
plus = -57;
question = -40;
v = -70;
};
Aring = {
asterisk = -86;
backslash = -61;
f = -17;
multiply = -49;
parenright = -26;
plus = -57;
question = -40;
v = -70;
};
Atilde = {
asterisk = -86;
backslash = -61;
f = -17;
multiply = -49;
parenright = -26;
plus = -57;
question = -40;
v = -70;
};
B = {
A = -17;
AE = -26;
AEacute = -26;
Aacute = -17;
Abreve = -17;
Acircumflex = -17;
Adieresis = -17;
Agrave = -17;
Amacron = -17;
Aogonek = -17;
Aring = -17;
Atilde = -17;
T = -38;
Tcaron = -38;
V = -28;
W = -20;
Wacute = -20;
Wcircumflex = -20;
Wdieresis = -20;
Wgrave = -20;
X = -15;
Y = -39;
Yacute = -39;
Ycircumflex = -39;
Ydieresis = -39;
Ygrave = -39;
imacron = 30;
uni0162 = -38;
uni021A = -38;
uni1EF8 = -39;
};
Cacute = {
imacron = 30;
itilde = 30;
};
Ccaron = {
imacron = 30;
itilde = 30;
};
Ccedilla = {
imacron = 30;
itilde = 30;
};
Cdotaccent = {
imacron = 30;
itilde = 30;
};
E = {
ibreve = 10;
imacron = 51;
itilde = 33;
v = -19;
};
Eacute = {
ibreve = 29;
imacron = 51;
itilde = 33;
v = -19;
};
Ebreve = {
ibreve = 29;
imacron = 51;
itilde = 33;
v = -19;
};
Ecaron = {
ibreve = 29;
imacron = 51;
itilde = 33;
v = -19;
};
Ecircumflex = {
ibreve = 29;
imacron = 51;
itilde = 33;
v = -19;
};
Edieresis = {
ibreve = 29;
imacron = 51;
itilde = 33;
v = -19;
};
Edotaccent = {
ibreve = 29;
imacron = 51;
itilde = 33;
v = -19;
};
Egrave = {
ibreve = 29;
imacron = 51;
itilde = 33;
v = -19;
};
Emacron = {
ibreve = 29;
imacron = 51;
itilde = 33;
v = -19;
};
Eogonek = {
ibreve = 29;
imacron = 51;
itilde = 33;
v = -19;
};
Euro = {
imacron = 30;
itilde = 30;
};
F = {
J = -56;
comma = -40;
ibreve = 20;
icircumflex = 20;
imacron = 61;
itilde = 30;
multiply = -20;
underscore = -40;
};
G = {
imacron = 30;
};
Gbreve = {
imacron = 30;
};
Gdotaccent = {
imacron = 30;
};
H = {
imacron = 40;
itilde = 4;
};
I = {
imacron = 40;
itilde = 4;
};
Iacute = {
imacron = 40;
itilde = 4;
};
Ibreve = {
imacron = 40;
itilde = 4;
};
Icircumflex = {
imacron = 40;
itilde = 4;
};
Idieresis = {
imacron = 40;
itilde = 4;
};
Idotaccent = {
imacron = 40;
itilde = 4;
};
Igrave = {
imacron = 40;
itilde = 4;
};
Imacron = {
imacron = 40;
itilde = 4;
};
Iogonek = {
imacron = 40;
itilde = 4;
};
Itilde = {
imacron = 40;
itilde = 4;
};
J = {
igrave = 50;
imacron = 69;
};
K = {
ibreve = 20;
icircumflex = 0;
imacron = 50;
};
L = {
V = -80;
};
Lacute = {
V = -80;
};
Lcaron = {
V = -80;
};
Ldot = {
V = -80;
};
Lslash = {
V = -80;
};
M = {
imacron = 40;
itilde = 4;
};
N = {
imacron = 40;
itilde = 4;
};
Nacute = {
imacron = 40;
itilde = 4;
};
Ncaron = {
imacron = 40;
itilde = 4;
};
Ntilde = {
imacron = 40;
itilde = 4;
};
OE = {
ibreve = 29;
imacron = 51;
itilde = 33;
v = -19;
};
Oslash = {
igrave = 50;
imacron = 44;
slash = -47;
underscore = -37;
};
P = {
J = -74;
X = -30;
Z = -20;
Zacute = -20;
Zcaron = -20;
Zdotaccent = -20;
comma = -83;
imacron = 10;
itilde = 31;
parenright = -40;
slash = -77;
underscore = -41;
};
Q = {
X = -20;
};
R = {
imacron = 30;
itilde = 20;
};
Racute = {
imacron = 30;
itilde = 20;
};
Rcaron = {
imacron = 30;
itilde = 20;
};
S = {
imacron = 31;
itilde = 20;
};
Sacute = {
imacron = 31;
itilde = 20;
};
Scaron = {
imacron = 31;
itilde = 20;
};
Scedilla = {
imacron = 31;
itilde = 20;
};
T = {
amacron = -90;
emacron = -90;
ibreve = 25;
icircumflex = 20;
imacron = 65;
itilde = 30;
omacron = -100;
racute = -80;
umacron = -90;
};
Tcaron = {
amacron = -90;
emacron = -90;
ibreve = 25;
icircumflex = 20;
imacron = 65;
itilde = 30;
omacron = -100;
racute = -80;
umacron = -90;
};
Thorn = {
X = -70;
parenright = -50;
};
U = {
imacron = 41;
itilde = 3;
};
Uacute = {
imacron = 41;
itilde = 3;
};
Ubreve = {
imacron = 41;
itilde = 3;
};
Ucircumflex = {
imacron = 41;
itilde = 3;
};
Udieresis = {
imacron = 41;
itilde = 3;
};
Ugrave = {
imacron = 41;
itilde = 3;
};
Uhungarumlaut = {
imacron = 41;
itilde = 3;
};
Umacron = {
imacron = 41;
itilde = 3;
};
Uogonek = {
imacron = 41;
itilde = 3;
};
Uring = {
imacron = 41;
itilde = 3;
};
Utilde = {
imacron = 41;
itilde = 3;
};
V = {
ibreve = 30;
icircumflex = 20;
imacron = 70;
itilde = 30;
};
W = {
ibreve = 25;
icircumflex = 10;
imacron = 70;
itilde = 20;
};
Wacute = {
ibreve = 25;
icircumflex = 10;
imacron = 70;
itilde = 20;
};
Wcircumflex = {
ibreve = 25;
icircumflex = 10;
imacron = 70;
itilde = 20;
};
Wdieresis = {
ibreve = 25;
icircumflex = 10;
imacron = 70;
itilde = 20;
};
Wgrave = {
ibreve = 25;
icircumflex = 10;
imacron = 70;
itilde = 20;
};
X = {
f = -15;
ibreve = 29;
imacron = 50;
itilde = 10;
multiply = -69;
question = -21;
v = -60;
x = -20;
};
Y = {
ibreve = 20;
icircumflex = 10;
imacron = 60;
itilde = 20;
};
Yacute = {
ibreve = 20;
icircumflex = 10;
imacron = 60;
itilde = 20;
};
Ycircumflex = {
ibreve = 20;
icircumflex = 10;
imacron = 60;
itilde = 20;
};
Ydieresis = {
ibreve = 20;
icircumflex = 10;
imacron = 60;
itilde = 20;
};
Ygrave = {
ibreve = 20;
icircumflex = 10;
imacron = 60;
itilde = 20;
};
Z = {
ibreve = 39;
imacron = 60;
itilde = 31;
};
Zacute = {
ibreve = 39;
imacron = 60;
itilde = 31;
};
Zcaron = {
ibreve = 39;
imacron = 60;
itilde = 31;
};
Zdotaccent = {
ibreve = 39;
imacron = 60;
itilde = 31;
};
asterisk = {
J = -69;
exclam = -4;
imacron = 69;
itilde = 40;
questiondown = -81;
slash = -121;
};
backslash = {
backslash = -129;
comma = 50;
question = -30;
quotedblbase = 59;
quotedblleft = -69;
quotedblright = -107;
quoteleft = -69;
quoteright = -107;
quotesinglbase = 59;
underscore = 23;
};
bar = {
imacron = 40;
itilde = 4;
};
bracketleft = {
imacron = 8;
};
bracketright = {
imacron = 60;
itilde = 23;
};
brokenbar = {
imacron = 40;
itilde = 4;
};
c = {
asterisk = -26;
backslash = -71;
parenright = -30;
question = -31;
v = -16;
x = -15;
};
cacute = {
asterisk = -26;
backslash = -71;
parenright = -30;
question = -31;
v = -16;
};
ccaron = {
asterisk = -26;
backslash = -71;
parenright = -30;
question = -31;
v = -16;
};
ccedilla = {
asterisk = -26;
backslash = -71;
parenright = -30;
question = -31;
v = -16;
};
cdotaccent = {
asterisk = -26;
backslash = -71;
parenright = -30;
question = -31;
v = -16;
};
comma = {
backslash = -89;
question = -4;
v = -51;
};
d = {
imacron = 40;
};
dcaron = {
questiondown = -7;
};
dcroat = {
imacron = 64;
};
dollar = {
imacron = 31;
itilde = 20;
};
eth = {
imacron = 30;
};
exclam = {
asterisk = -6;
igrave = 49;
imacron = 50;
itilde = 3;
};
f = {
ibreve = 29;
igrave = 40;
imacron = 60;
itilde = 33;
};
fl = {
imacron = 40;
};
germandbls = {
asterisk = -60;
v = -60;
};
greater = {
parenright = -60;
};
i = {
lslash = 5;
};
iacute = {
asterisk = 34;
b = 60;
backslash = 71;
braceright = 4;
bracketleft = 60;
bracketright = 8;
exclam = 49;
f = 40;
h = 60;
idieresis = 80;
imacron = 60;
itilde = 46;
k = 60;
l = 60;
lacute = 60;
lcaron = 60;
ldot = 60;
lslash = 40;
parenright = 6;
question = 59;
quotedblleft = 57;
quotedblright = 40;
quoteleft = 57;
quoteright = 40;
uni0137 = 60;
uni013C = 60;
};
ibreve = {
backslash = 51;
question = 40;
};
imacron = {
B = 40;
D = 40;
Dcaron = 40;
E = 40;
Eacute = 40;
Ebreve = 40;
Ecaron = 40;
Ecircumflex = 40;
Edieresis = 40;
Edotaccent = 40;
Egrave = 40;
Emacron = 40;
Eogonek = 40;
F = 40;
H = 40;
I = 40;
Iacute = 40;
Ibreve = 40;
Icircumflex = 40;
Idieresis = 40;
Idotaccent = 40;
Igrave = 40;
Imacron = 40;
Itilde = 40;
K = 40;
L = 40;
Lacute = 40;
Lcaron = 40;
Ldot = 40;
M = 40;
N = 40;
Nacute = 40;
Ncaron = 40;
Ntilde = 40;
P = 40;
R = 40;
Racute = 40;
Rcaron = 40;
Thorn = 40;
asterisk = 70;
b = 60;
backslash = 97;
bar = 40;
bracketleft = 60;
bracketright = 8;
brokenbar = 40;
exclam = 70;
f = 40;
germandbls = 60;
h = 60;
k = 60;
l = 60;
lacute = 60;
lcaron = 60;
ldot = 60;
lslash = 69;
question = 77;
quotedblleft = 77;
quotedblright = 70;
quoteleft = 77;
quoteright = 70;
thorn = 60;
uni0136 = 40;
uni0137 = 60;
uni013B = 40;
uni013C = 60;
uni0145 = 40;
uni0156 = 40;
uni02B9 = 100;
uni02BA = 100;
uni1EBC = 40;
uni20A8 = 40;
z = 40;
zacute = 40;
zcaron = 40;
zdotaccent = 40;
};
itilde = {
asterisk = 40;
b = 6;
bracketleft = 23;
exclam = 4;
f = 30;
h = 6;
j = 31;
k = 6;
l = 6;
lacute = 6;
lcaron = 6;
ldot = 6;
question = 40;
quotedblleft = 30;
quotedblright = 30;
quoteleft = 30;
quoteright = 30;
uni0137 = 6;
uni013C = 6;
uni02B9 = 60;
uni02BA = 60;
};
j = {
itilde = 40;
};
l = {
imacron = 40;
};
lacute = {
imacron = 40;
};
lcaron = {
b = 80;
h = 80;
k = 80;
l = 80;
questiondown = -7;
};
less = {
parenright = -41;
};
lslash = {
i = 5;
imacron = 60;
questiondown = 21;
v = 10;
};
multiply = {
X = -37;
};
plus = {
slash = -39;
};
q = {
backslash = -40;
j = 30;
};
question = {
J = -37;
X = -30;
comma = -56;
ibreve = 30;
igrave = 40;
imacron = 51;
itilde = 33;
parenright = -74;
questiondown = -97;
quotedblbase = -33;
quotesinglbase = -33;
slash = -70;
underscore = -61;
};
questiondown = {
asterisk = -43;
backslash = -50;
question = -43;
quotedblbase = 40;
quotesinglbase = 40;
v = -17;
};
quotedbl = {
ibreve = 29;
imacron = 86;
itilde = 30;
};
quotedblbase = {
backslash = -120;
question = -30;
};
quotedblleft = {
J = -71;
ibreve = 17;
imacron = 67;
itilde = 21;
questiondown = -63;
slash = -106;
};
quotedblright = {
ibreve = 29;
imacron = 86;
itilde = 30;
};
quoteleft = {
J = -71;
ibreve = 17;
imacron = 67;
itilde = 21;
questiondown = -63;
slash = -106;
};
quoteright = {
ibreve = 29;
imacron = 86;
itilde = 30;
};
quotesinglbase = {
backslash = -120;
question = -30;
};
quotesingle = {
ibreve = 29;
imacron = 86;
itilde = 30;
};
slash = {
B = 41;
D = 41;
Dcaron = 41;
E = 41;
Eacute = 41;
Ebreve = 41;
Ecaron = 41;
Ecircumflex = 41;
Edieresis = 41;
Edotaccent = 41;
Egrave = 41;
Emacron = 41;
Eogonek = 41;
F = 41;
H = 41;
I = 41;
Iacute = 41;
Ibreve = 41;
Icircumflex = 60;
Idieresis = 51;
Idotaccent = 41;
Igrave = 40;
Imacron = 90;
Itilde = 41;
J = -39;
K = 41;
L = 41;
Lacute = 41;
Lcaron = 41;
Ldot = 41;
M = 41;
N = 41;
Nacute = 41;
Ncaron = 41;
Ntilde = 41;
Oslash = -37;
P = 41;
R = 41;
Racute = 41;
Rcaron = 41;
Thorn = 41;
bar = 41;
brokenbar = 41;
comma = -41;
ibreve = 40;
icircumflex = 45;
idieresis = 36;
igrave = 89;
imacron = 80;
plus = -64;
questiondown = -59;
quotedblbase = -78;
quotesinglbase = -78;
slash = -127;
underscore = -121;
uni0136 = 41;
uni013B = 41;
uni0145 = 41;
uni0156 = 41;
uni1EBC = 41;
uni20A8 = 41;
};
underscore = {
asterisk = -99;
backslash = -159;
j = 8;
question = -60;
underscore = -118;
};
uni0122 = {
imacron = 30;
};
uni0136 = {
ibreve = 20;
icircumflex = 0;
imacron = 50;
};
uni013B = {
V = -80;
};
uni013C = {
imacron = 40;
};
uni0145 = {
imacron = 40;
itilde = 4;
};
uni0156 = {
imacron = 30;
itilde = 20;
};
uni0162 = {
amacron = -90;
emacron = -90;
ibreve = 25;
icircumflex = 20;
imacron = 65;
itilde = 30;
omacron = -100;
racute = -80;
umacron = -90;
};
uni0218 = {
imacron = 31;
itilde = 20;
};
uni021A = {
amacron = -90;
emacron = -90;
ibreve = 25;
icircumflex = 20;
imacron = 65;
itilde = 30;
omacron = -100;
racute = -80;
umacron = -90;
};
uni02B9 = {
J = -34;
backslash = 20;
imacron = 100;
itilde = 60;
};
uni02BA = {
J = -34;
backslash = 20;
imacron = 100;
itilde = 60;
};
uni1EBC = {
ibreve = 29;
imacron = 51;
itilde = 33;
v = -19;
};
uni1EF8 = {
ibreve = 20;
icircumflex = 10;
imacron = 60;
itilde = 20;
};
v = {
comma = -40;
f = 20;
lslash = 5;
questiondown = -26;
};
z = {
imacron = 40;
};
zacute = {
imacron = 40;
};
zcaron = {
imacron = 40;
};
zdotaccent = {
imacron = 40;
};
};
"4198BB9E-6C9D-470E-A4E5-BC277DE15687" = {
"@MMK_L_A" = {
"@MMK_R_C" = -57;
"@MMK_R_S" = -17;
"@MMK_R_T" = -80;
"@MMK_R_U" = -34;
"@MMK_R_V" = -115;
"@MMK_R_W" = -83;
"@MMK_R_X" = -23;
"@MMK_R_Y" = -102;
"@MMK_R_a" = -17;
"@MMK_R_asterisk" = -97;
"@MMK_R_at" = -19;
"@MMK_R_backslash" = -64;
"@MMK_R_c" = -32;
"@MMK_R_f" = -22;
"@MMK_R_hyphen" = -40;
"@MMK_R_multiply" = -46;
"@MMK_R_parenright" = -17;
"@MMK_R_plus" = -52;
"@MMK_R_question" = -40;
"@MMK_R_s" = -17;
"@MMK_R_t" = -48;
"@MMK_R_u" = -24;
"@MMK_R_v" = -70;
"@MMK_R_w" = -49;
"@MMK_R_x" = -40;
"@MMK_R_y" = -76;
"@MMK_R_z" = 8;
};
"@MMK_L_B" = {
"@MMK_R_A" = -28;
"@MMK_R_AE" = -36;
"@MMK_R_S" = -7;
"@MMK_R_T" = -53;
"@MMK_R_V" = -47;
"@MMK_R_W" = -28;
"@MMK_R_X" = -30;
"@MMK_R_Y" = -57;
"@MMK_R_asterisk" = -24;
"@MMK_R_backslash" = -34;
"@MMK_R_braceright" = -40;
"@MMK_R_c" = -3;
"@MMK_R_comma" = -24;
"@MMK_R_g" = -15;
"@MMK_R_parenright" = -66;
"@MMK_R_period" = -30;
"@MMK_R_slash" = -42;
"@MMK_R_underscore" = -50;
"@MMK_R_x" = -10;
};
"@MMK_L_Cacute" = {
"@MMK_R_AE" = -12;
"@MMK_R_T" = -20;
"@MMK_R_V" = -17;
"@MMK_R_W" = -20;
"@MMK_R_X" = -20;
"@MMK_R_Y" = -40;
"@MMK_R_parenright" = -20;
};
"@MMK_L_E" = {
"@MMK_R_C" = -10;
};
"@MMK_L_F" = {
"@MMK_R_A" = -60;
"@MMK_R_a" = -40;
"@MMK_R_c" = -30;
"@MMK_R_g" = -37;
"@MMK_R_period" = -60;
"@MMK_R_s" = -20;
};
"@MMK_L_G" = {
"@MMK_R_T" = -25;
"@MMK_R_W" = -25;
"@MMK_R_Y" = -45;
};
"@MMK_L_J" = {
"@MMK_R_A" = -22;
};
"@MMK_L_K" = {
"@MMK_R_A" = -27;
"@MMK_R_C" = -61;
"@MMK_R_J" = -12;
"@MMK_R_S" = -40;
"@MMK_R_T" = -13;
"@MMK_R_a" = -31;
"@MMK_R_asterisk" = -13;
"@MMK_R_at" = -13;
"@MMK_R_c" = -62;
"@MMK_R_dotlessi" = -33;
"@MMK_R_f" = -25;
"@MMK_R_g" = -35;
"@MMK_R_guillemotleft" = -44;
"@MMK_R_hyphen" = -60;
"@MMK_R_i" = -25;
"@MMK_R_igrave" = -17;
"@MMK_R_j" = -25;
"@MMK_R_p" = -13;
"@MMK_R_plus" = -40;
"@MMK_R_question" = -16;
"@MMK_R_s" = -42;
"@MMK_R_t" = -42;
"@MMK_R_u" = -42;
"@MMK_R_v" = -68;
"@MMK_R_w" = -63;
"@MMK_R_x" = -57;
"@MMK_R_y" = -68;
"@MMK_R_z" = -22;
};
"@MMK_L_L" = {
"@MMK_R_C" = -76;
"@MMK_R_S" = -31;
"@MMK_R_T" = -120;
"@MMK_R_U" = -40;
"@MMK_R_V" = -136;
"@MMK_R_W" = -80;
"@MMK_R_Y" = -123;
"@MMK_R_asterisk" = -108;
"@MMK_R_at" = -20;
"@MMK_R_backslash" = -64;
"@MMK_R_c" = -37;
"@MMK_R_hyphen" = -60;
"@MMK_R_percent" = -72;
"@MMK_R_plus" = -60;
"@MMK_R_question" = -30;
"@MMK_R_t" = -25;
"@MMK_R_uni018F" = -30;
"@MMK_R_uni02BA" = -103;
"@MMK_R_v" = -66;
"@MMK_R_w" = -44;
"@MMK_R_x" = -7;
"@MMK_R_y" = -70;
};
"@MMK_L_N" = {
"@MMK_R_c" = -3;
};
"@MMK_L_P" = {
"@MMK_R_A" = -71;
"@MMK_R_AE" = -106;
"@MMK_R_S" = 4;
"@MMK_R_V" = -5;
"@MMK_R_Y" = -18;
"@MMK_R_a" = -18;
"@MMK_R_c" = -23;
"@MMK_R_dotlessi" = 13;
"@MMK_R_g" = -24;
"@MMK_R_period" = -50;
};
"@MMK_L_Q" = {
"@MMK_R_A" = -17;
"@MMK_R_T" = -38;
"@MMK_R_U" = 8;
"@MMK_R_V" = -39;
"@MMK_R_W" = -35;
"@MMK_R_Y" = -52;
"@MMK_R_u" = 4;
};
"@MMK_L_R" = {
"@MMK_R_C" = -12;
"@MMK_R_J" = -3;
"@MMK_R_T" = -22;
"@MMK_R_V" = -38;
"@MMK_R_W" = -30;
"@MMK_R_Y" = -30;
"@MMK_R_a" = -23;
"@MMK_R_c" = -35;
"@MMK_R_plus" = -12;
"@MMK_R_s" = -12;
"@MMK_R_u" = -13;
};
"@MMK_L_S" = {
"@MMK_R_C" = -7;
"@MMK_R_T" = -23;
"@MMK_R_V" = -37;
"@MMK_R_W" = -37;
"@MMK_R_Y" = -50;
"@MMK_R_c" = -7;
"@MMK_R_y" = -7;
};
"@MMK_L_T" = {
"@MMK_R_A" = -74;
"@MMK_R_AE" = -90;
"@MMK_R_C" = -29;
"@MMK_R_J" = -60;
"@MMK_R_S" = -5;
"@MMK_R_a" = -112;
"@MMK_R_at" = -38;
"@MMK_R_backslash" = 24;
"@MMK_R_c" = -112;
"@MMK_R_comma" = -80;
"@MMK_R_dotlessi" = -103;
"@MMK_R_exclamdown" = -35;
"@MMK_R_f" = -20;
"@MMK_R_g" = -110;
"@MMK_R_hyphen" = -50;
"@MMK_R_iacute" = 7;
"@MMK_R_ibreve" = 73;
"@MMK_R_igrave" = 7;
"@MMK_R_multiply" = -82;
"@MMK_R_p" = -103;
"@MMK_R_period" = -80;
"@MMK_R_plus" = -52;
"@MMK_R_question" = 20;
"@MMK_R_questiondown" = -66;
"@MMK_R_rcaron" = -47;
"@MMK_R_s" = -107;
"@MMK_R_semicolon" = -54;
"@MMK_R_slash" = -44;
"@MMK_R_t" = -26;
"@MMK_R_u" = -107;
"@MMK_R_underscore" = -60;
"@MMK_R_uni006A0301" = 13;
"@MMK_R_v" = -82;
"@MMK_R_w" = -87;
"@MMK_R_x" = -82;
"@MMK_R_y" = -82;
"@MMK_R_z" = -87;
};
"@MMK_L_Thorn" = {
"@MMK_R_A" = -20;
"@MMK_R_T" = -92;
"@MMK_R_V" = -60;
"@MMK_R_W" = -40;
"@MMK_R_Y" = -76;
"@MMK_R_period" = -17;
};
"@MMK_L_U" = {
"@MMK_R_A" = -36;
"@MMK_R_AE" = -47;
"@MMK_R_g" = -25;
"@MMK_R_period" = -20;
"@MMK_R_s" = -10;
"@MMK_R_slash" = -30;
"@MMK_R_underscore" = -36;
};
"@MMK_L_V" = {
"@MMK_R_A" = -87;
"@MMK_R_AE" = -102;
"@MMK_R_C" = -24;
"@MMK_R_J" = -70;
"@MMK_R_S" = -13;
"@MMK_R_a" = -62;
"@MMK_R_at" = -43;
"@MMK_R_backslash" = 8;
"@MMK_R_c" = -72;
"@MMK_R_colon" = -30;
"@MMK_R_comma" = -76;
"@MMK_R_dotlessi" = -40;
"@MMK_R_exclamdown" = -34;
"@MMK_R_f" = -18;
"@MMK_R_g" = -68;
"@MMK_R_hyphen" = -46;
"@MMK_R_igrave" = 13;
"@MMK_R_multiply" = -52;
"@MMK_R_p" = -40;
"@MMK_R_period" = -60;
"@MMK_R_plus" = -57;
"@MMK_R_rcaron" = -13;
"@MMK_R_s" = -62;
"@MMK_R_slash" = -62;
"@MMK_R_t" = -15;
"@MMK_R_u" = -42;
"@MMK_R_underscore" = -70;
"@MMK_R_uni006A0301" = 7;
"@MMK_R_v" = -20;
"@MMK_R_w" = -25;
"@MMK_R_x" = -23;
"@MMK_R_y" = -15;
"@MMK_R_z" = -20;
};
"@MMK_L_W" = {
"@MMK_R_A" = -93;
"@MMK_R_AE" = -87;
"@MMK_R_C" = -38;
"@MMK_R_J" = -53;
"@MMK_R_Oslash" = -20;
"@MMK_R_S" = -17;
"@MMK_R_a" = -78;
"@MMK_R_at" = -47;
"@MMK_R_c" = -82;
"@MMK_R_comma" = -56;
"@MMK_R_dotlessi" = -48;
"@MMK_R_exclamdown" = -28;
"@MMK_R_f" = -18;
"@MMK_R_g" = -77;
"@MMK_R_hyphen" = -46;
"@MMK_R_i" = -17;
"@MMK_R_iacute" = -13;
"@MMK_R_igrave" = 3;
"@MMK_R_j" = -8;
"@MMK_R_multiply" = -46;
"@MMK_R_p" = -48;
"@MMK_R_period" = -70;
"@MMK_R_plus" = -52;
"@MMK_R_rcaron" = -30;
"@MMK_R_s" = -73;
"@MMK_R_semicolon" = -28;
"@MMK_R_slash" = -56;
"@MMK_R_t" = -20;
"@MMK_R_u" = -47;
"@MMK_R_underscore" = -42;
"@MMK_R_v" = -33;
"@MMK_R_w" = -33;
"@MMK_R_x" = -33;
"@MMK_R_y" = -33;
"@MMK_R_z" = -37;
};
"@MMK_L_X" = {
"@MMK_R_A" = -17;
"@MMK_R_C" = -57;
"@MMK_R_S" = -13;
"@MMK_R_a" = -37;
"@MMK_R_c" = -52;
"@MMK_R_g" = -27;
"@MMK_R_s" = -42;
"@MMK_R_t" = -45;
"@MMK_R_u" = -34;
"@MMK_R_w" = -55;
"@MMK_R_y" = -70;
"@MMK_R_z" = -20;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -86;
"@MMK_R_AE" = -84;
"@MMK_R_C" = -47;
"@MMK_R_J" = -70;
"@MMK_R_Oslash" = -35;
"@MMK_R_S" = -13;
"@MMK_R_a" = -92;
"@MMK_R_at" = -53;
"@MMK_R_c" = -105;
"@MMK_R_colon" = -40;
"@MMK_R_comma" = -58;
"@MMK_R_dotlessi" = -63;
"@MMK_R_exclamdown" = -44;
"@MMK_R_f" = -23;
"@MMK_R_g" = -82;
"@MMK_R_hyphen" = -44;
"@MMK_R_i" = -18;
"@MMK_R_iacute" = -18;
"@MMK_R_igrave" = -3;
"@MMK_R_multiply" = -82;
"@MMK_R_p" = -57;
"@MMK_R_period" = -78;
"@MMK_R_plus" = -86;
"@MMK_R_questiondown" = -74;
"@MMK_R_rcaron" = -27;
"@MMK_R_s" = -98;
"@MMK_R_semicolon" = -43;
"@MMK_R_slash" = -58;
"@MMK_R_t" = -27;
"@MMK_R_u" = -78;
"@MMK_R_underscore" = -74;
"@MMK_R_uni02BA" = 30;
"@MMK_R_v" = -47;
"@MMK_R_w" = -37;
"@MMK_R_x" = -47;
"@MMK_R_y" = -47;
"@MMK_R_z" = -47;
};
"@MMK_L_Z" = {
"@MMK_R_C" = -20;
"@MMK_R_a" = -22;
"@MMK_R_c" = -32;
"@MMK_R_s" = -5;
};
"@MMK_L_a" = {
"@MMK_R_asterisk" = -34;
"@MMK_R_backslash" = -40;
"@MMK_R_lslash" = 10;
"@MMK_R_uni02BA" = -64;
"@MMK_R_v" = -24;
"@MMK_R_w" = -16;
"@MMK_R_y" = -28;
};
"@MMK_L_aacute" = {
"@MMK_R_asterisk" = -34;
"@MMK_R_backslash" = -60;
"@MMK_R_c" = -7;
"@MMK_R_f" = -10;
"@MMK_R_t" = -17;
"@MMK_R_v" = -33;
"@MMK_R_w" = -30;
"@MMK_R_y" = -39;
};
"@MMK_L_ae" = {
"@MMK_R_Y" = -93;
"@MMK_R_asterisk" = -43;
"@MMK_R_backslash" = -64;
"@MMK_R_g" = -8;
"@MMK_R_lslash" = 18;
"@MMK_R_question" = -20;
"@MMK_R_uni02BA" = -68;
"@MMK_R_v" = -26;
"@MMK_R_w" = -20;
"@MMK_R_x" = -27;
"@MMK_R_y" = -30;
};
"@MMK_L_asterisk" = {
"@MMK_R_A" = -77;
"@MMK_R_AE" = -114;
"@MMK_R_C" = -12;
"@MMK_R_a" = -8;
"@MMK_R_c" = -23;
"@MMK_R_s" = -19;
};
"@MMK_L_at" = {
"@MMK_R_A" = -20;
"@MMK_R_AE" = -20;
"@MMK_R_T" = -63;
"@MMK_R_V" = -69;
"@MMK_R_W" = -61;
"@MMK_R_Y" = -73;
"@MMK_R_percent" = -44;
"@MMK_R_period" = -17;
"@MMK_R_uni02BA" = -61;
"@MMK_R_w" = -23;
"@MMK_R_y" = -29;
};
"@MMK_L_b" = {
"@MMK_R_T" = -117;
"@MMK_R_V" = -80;
"@MMK_R_asterisk" = -58;
"@MMK_R_backslash" = -84;
"@MMK_R_braceright" = -50;
"@MMK_R_c" = -8;
"@MMK_R_f" = -7;
"@MMK_R_g" = -8;
"@MMK_R_lslash" = 7;
"@MMK_R_parenright" = -56;
"@MMK_R_question" = -40;
"@MMK_R_s" = -8;
"@MMK_R_slash" = -6;
"@MMK_R_t" = -20;
"@MMK_R_uni02BA" = -86;
"@MMK_R_v" = -40;
"@MMK_R_w" = -30;
"@MMK_R_x" = -33;
"@MMK_R_y" = -46;
"@MMK_R_z" = -3;
};
"@MMK_L_backslash" = {
"@MMK_R_C" = -40;
"@MMK_R_T" = -77;
"@MMK_R_U" = -13;
"@MMK_R_V" = -93;
"@MMK_R_W" = -66;
"@MMK_R_Y" = -70;
"@MMK_R_c" = -20;
"@MMK_R_hyphen" = -42;
"@MMK_R_uni02BA" = -104;
};
"@MMK_L_braceright" = {
"@MMK_R_A" = -46;
"@MMK_R_AE" = -50;
"@MMK_R_T" = -48;
"@MMK_R_W" = -24;
"@MMK_R_Y" = -50;
"@MMK_R_period" = -50;
};
"@MMK_L_c" = {
"@MMK_R_w" = -13;
"@MMK_R_y" = -18;
};
"@MMK_L_colon" = {
"@MMK_R_V" = -30;
"@MMK_R_Y" = -40;
};
"@MMK_L_comma" = {
"@MMK_R_C" = -36;
"@MMK_R_T" = -80;
"@MMK_R_V" = -80;
"@MMK_R_W" = -52;
"@MMK_R_Y" = -78;
"@MMK_R_percent" = -79;
"@MMK_R_t" = -28;
"@MMK_R_w" = -30;
"@MMK_R_y" = -50;
};
"@MMK_L_exclamdown" = {
"@MMK_R_T" = -36;
"@MMK_R_V" = -34;
"@MMK_R_W" = -13;
"@MMK_R_Y" = -44;
};
"@MMK_L_f" = {
"@MMK_R_a" = -15;
"@MMK_R_c" = -10;
"@MMK_R_g" = -20;
"@MMK_R_period" = -13;
"@MMK_R_s" = -9;
};
"@MMK_L_g" = {
"@MMK_R_a" = -7;
"@MMK_R_c" = -18;
"@MMK_R_f" = 10;
"@MMK_R_j" = 40;
"@MMK_R_t" = 20;
"@MMK_R_u" = -2;
};
"@MMK_L_germandbls" = {
"@MMK_R_y" = -40;
};
"@MMK_L_greater" = {
"@MMK_R_period" = -60;
};
"@MMK_L_hyphen" = {
"@MMK_R_A" = -36;
"@MMK_R_T" = -54;
"@MMK_R_V" = -46;
"@MMK_R_W" = -36;
"@MMK_R_Y" = -54;
"@MMK_R_backslash" = -67;
"@MMK_R_slash" = -42;
};
"@MMK_L_ibreve" = {
"@MMK_R_T" = 73;
"@MMK_R_b" = 27;
};
"@MMK_L_k" = {
"@MMK_R_a" = -32;
"@MMK_R_at" = -13;
"@MMK_R_c" = -34;
"@MMK_R_s" = -22;
};
"@MMK_L_l" = {
"@MMK_R_ibreve" = 20;
};
"@MMK_L_lslash" = {
"@MMK_R_a" = 3;
"@MMK_R_c" = 7;
"@MMK_R_w" = 17;
};
"@MMK_L_multiply" = {
"@MMK_R_A" = -12;
"@MMK_R_AE" = -17;
"@MMK_R_T" = -82;
"@MMK_R_V" = -54;
"@MMK_R_W" = -40;
"@MMK_R_Y" = -74;
};
"@MMK_L_parenleft" = {
"@MMK_R_A" = -23;
"@MMK_R_C" = -56;
"@MMK_R_a" = -50;
"@MMK_R_c" = -34;
"@MMK_R_s" = -20;
};
"@MMK_L_period" = {
"@MMK_R_C" = -50;
"@MMK_R_T" = -80;
"@MMK_R_U" = -20;
"@MMK_R_V" = -60;
"@MMK_R_W" = -70;
"@MMK_R_Y" = -83;
"@MMK_R_at" = -13;
"@MMK_R_backslash" = -97;
"@MMK_R_less" = -60;
"@MMK_R_question" = -42;
"@MMK_R_v" = -48;
"@MMK_R_w" = -40;
"@MMK_R_y" = -60;
};
"@MMK_L_plus" = {
"@MMK_R_A" = -23;
"@MMK_R_T" = -56;
"@MMK_R_V" = -72;
"@MMK_R_W" = -52;
"@MMK_R_Y" = -80;
};
"@MMK_L_question" = {
"@MMK_R_A" = -66;
"@MMK_R_AE" = -77;
"@MMK_R_period" = -90;
};
"@MMK_L_questiondown" = {
"@MMK_R_T" = -72;
"@MMK_R_Y" = -70;
"@MMK_R_c" = -34;
"@MMK_R_percent" = -34;
"@MMK_R_z" = 20;
};
"@MMK_L_quotedblright" = {
"@MMK_R_J" = -74;
"@MMK_R_at" = -23;
"@MMK_R_s" = -48;
"@MMK_R_slash" = -104;
};
"@MMK_L_r" = {
"@MMK_R_c" = -12;
"@MMK_R_colon" = 12;
"@MMK_R_f" = 7;
"@MMK_R_period" = -40;
"@MMK_R_t" = 13;
"@MMK_R_u" = 5;
"@MMK_R_w" = 7;
"@MMK_R_y" = 10;
};
"@MMK_L_s" = {
"@MMK_R_asterisk" = -61;
"@MMK_R_backslash" = -66;
"@MMK_R_f" = -12;
"@MMK_R_parenright" = -24;
"@MMK_R_question" = -26;
"@MMK_R_t" = -17;
"@MMK_R_u" = -3;
"@MMK_R_v" = -32;
"@MMK_R_w" = -18;
"@MMK_R_x" = -18;
"@MMK_R_y" = -32;
};
"@MMK_L_semicolon" = {
"@MMK_R_T" = -40;
"@MMK_R_Y" = -17;
};
"@MMK_L_slash" = {
"@MMK_R_C" = -32;
"@MMK_R_T" = 13;
"@MMK_R_V" = 34;
"@MMK_R_W" = 13;
"@MMK_R_Y" = 40;
"@MMK_R_a" = -30;
"@MMK_R_c" = -45;
"@MMK_R_dotlessi" = -13;
"@MMK_R_g" = -34;
"@MMK_R_hyphen" = -42;
"@MMK_R_period" = -107;
"@MMK_R_s" = -29;
};
"@MMK_L_t" = {
"@MMK_R_c" = -18;
"@MMK_R_comma" = 35;
};
"@MMK_L_underscore" = {
"@MMK_R_C" = -68;
"@MMK_R_T" = -74;
"@MMK_R_U" = -48;
"@MMK_R_V" = -90;
"@MMK_R_W" = -68;
"@MMK_R_Y" = -74;
};
"@MMK_L_v" = {
"@MMK_R_A" = -67;
"@MMK_R_a" = -11;
"@MMK_R_c" = -23;
"@MMK_R_g" = -24;
"@MMK_R_period" = -40;
"@MMK_R_s" = -14;
"@MMK_R_t" = 20;
};
"@MMK_L_w" = {
"@MMK_R_a" = -8;
"@MMK_R_at" = -9;
"@MMK_R_c" = -12;
"@MMK_R_comma" = -30;
"@MMK_R_f" = 7;
"@MMK_R_g" = -22;
"@MMK_R_lslash" = 8;
"@MMK_R_period" = -40;
"@MMK_R_questiondown" = -12;
"@MMK_R_s" = -5;
"@MMK_R_t" = 7;
};
"@MMK_L_x" = {
"@MMK_R_c" = -28;
"@MMK_R_s" = -18;
};
"@MMK_L_y" = {
"@MMK_R_T" = -67;
"@MMK_R_a" = -19;
"@MMK_R_at" = -9;
"@MMK_R_c" = -24;
"@MMK_R_comma" = -60;
"@MMK_R_g" = -28;
"@MMK_R_multiply" = -12;
"@MMK_R_period" = -50;
"@MMK_R_questiondown" = -36;
"@MMK_R_s" = -12;
"@MMK_R_slash" = -30;
};
"@MMK_L_z" = {
"@MMK_R_c" = -7;
};
AE = {
ibreve = 26;
imacron = 54;
itilde = 38;
v = -16;
};
AEacute = {
ibreve = 26;
imacron = 54;
itilde = 38;
v = -16;
};
Aacute = {
asterisk = -97;
at = -19;
backslash = -64;
f = -12;
multiply = -46;
parenright = -17;
plus = -52;
question = -40;
v = -70;
};
Abreve = {
asterisk = -97;
at = -19;
backslash = -64;
f = -12;
multiply = -46;
parenright = -17;
plus = -52;
question = -40;
v = -70;
};
Acircumflex = {
asterisk = -97;
at = -19;
backslash = -64;
f = -12;
multiply = -46;
parenright = -17;
plus = -52;
question = -40;
v = -70;
};
Adieresis = {
asterisk = -97;
at = -19;
backslash = -64;
f = -12;
multiply = -46;
parenright = -17;
plus = -52;
question = -40;
v = -70;
};
Agrave = {
asterisk = -97;
at = -19;
backslash = -64;
f = -12;
multiply = -46;
parenright = -17;
plus = -52;
question = -40;
v = -70;
};
Amacron = {
asterisk = -97;
at = -19;
backslash = -64;
f = -12;
multiply = -46;
parenright = -17;
plus = -52;
question = -40;
v = -70;
};
Aogonek = {
asterisk = -97;
at = -19;
backslash = -64;
f = -12;
multiply = -46;
parenright = -17;
plus = -52;
question = -40;
v = -70;
};
Aring = {
asterisk = -97;
at = -19;
backslash = -64;
f = -12;
multiply = -46;
parenright = -17;
plus = -52;
question = -40;
v = -70;
};
Atilde = {
asterisk = -97;
at = -19;
backslash = -64;
f = -12;
multiply = -46;
parenright = -17;
plus = -52;
question = -40;
v = -70;
};
B = {
A = -22;
AE = -31;
AEacute = -31;
Aacute = -22;
Abreve = -22;
Acircumflex = -22;
Adieresis = -22;
Agrave = -22;
Amacron = -22;
Aogonek = -22;
Aring = -22;
Atilde = -22;
C = -7;
Cacute = -7;
Ccaron = -7;
Ccedilla = -7;
Cdotaccent = -7;
G = -7;
Gbreve = -7;
Gdotaccent = -7;
O = -7;
OE = -7;
Oacute = -7;
Obreve = -7;
Ocircumflex = -7;
Odieresis = -7;
Ograve = -7;
Ohungarumlaut = -7;
Omacron = -7;
Otilde = -7;
Q = -7;
T = -26;
Tcaron = -26;
V = -29;
W = -27;
Wacute = -27;
Wcircumflex = -27;
Wdieresis = -27;
Wgrave = -27;
X = -18;
Y = -26;
Yacute = -26;
Ycircumflex = -26;
Ydieresis = -26;
Ygrave = -26;
imacron = 23;
itilde = 13;
uni0122 = -7;
uni0162 = -26;
uni021A = -26;
uni1EF8 = -26;
uni1EF9 = -10;
y = -10;
yacute = -10;
ycircumflex = -10;
ydieresis = -10;
ygrave = -10;
};
C = {
dotlessi = 7;
eng = 7;
idieresis = 13;
imacron = 13;
iogonek = 7;
itilde = 13;
m = 7;
n = 7;
nacute = 7;
ncaron = 7;
ntilde = 7;
r = 7;
racute = 7;
uni0146 = 7;
uni0157 = 7;
uni0326 = 7;
};
Cacute = {
imacron = 30;
itilde = 30;
};
Ccaron = {
imacron = 30;
itilde = 30;
};
Ccedilla = {
imacron = 30;
itilde = 30;
};
Cdotaccent = {
imacron = 30;
itilde = 30;
};
E = {
ibreve = 20;
icircumflex = 13;
imacron = 54;
itilde = 38;
v = -16;
};
Eacute = {
ibreve = 26;
imacron = 54;
itilde = 38;
v = -16;
};
Ebreve = {
ibreve = 26;
imacron = 54;
itilde = 38;
v = -16;
};
Ecaron = {
ibreve = 26;
imacron = 54;
itilde = 38;
v = -16;
};
Ecircumflex = {
ibreve = 26;
imacron = 54;
itilde = 38;
v = -16;
};
Edieresis = {
ibreve = 26;
imacron = 54;
itilde = 38;
v = -16;
};
Edotaccent = {
ibreve = 26;
imacron = 54;
itilde = 38;
v = -16;
};
Egrave = {
ibreve = 26;
imacron = 54;
itilde = 38;
v = -16;
};
Emacron = {
ibreve = 26;
imacron = 54;
itilde = 38;
v = -16;
};
Eogonek = {
ibreve = 26;
imacron = 54;
itilde = 38;
v = -16;
};
Euro = {
imacron = 30;
itilde = 30;
};
F = {
J = -47;
at = -20;
comma = -40;
iacute = 7;
ibreve = 30;
icircumflex = 30;
igrave = 10;
imacron = 70;
itilde = 40;
multiply = -20;
underscore = -40;
uni006A0301 = 10;
};
G = {
imacron = 30;
};
Gbreve = {
imacron = 30;
};
Gdotaccent = {
imacron = 30;
};
H = {
ibreve = 13;
imacron = 47;
itilde = 18;
};
I = {
ibreve = 13;
imacron = 47;
itilde = 18;
};
Iacute = {
imacron = 40;
itilde = 13;
};
Ibreve = {
imacron = 40;
itilde = 13;
};
Icircumflex = {
imacron = 40;
itilde = 13;
};
Idieresis = {
imacron = 40;
itilde = 13;
};
Idotaccent = {
imacron = 40;
itilde = 13;
};
Igrave = {
imacron = 40;
itilde = 13;
};
Imacron = {
imacron = 40;
itilde = 13;
};
Iogonek = {
imacron = 40;
itilde = 13;
};
Itilde = {
imacron = 40;
itilde = 13;
};
J = {
ibreve = 13;
igrave = 50;
imacron = 56;
itilde = 17;
};
K = {
ibreve = 20;
icircumflex = -7;
imacron = 50;
l = -3;
};
L = {
V = -80;
};
Lacute = {
V = -80;
};
Lcaron = {
V = -80;
};
Ldot = {
V = -80;
};
Lslash = {
V = -80;
};
M = {
ibreve = 13;
imacron = 47;
itilde = 18;
};
N = {
ibreve = 13;
imacron = 47;
itilde = 18;
};
Nacute = {
imacron = 40;
itilde = 13;
};
Ncaron = {
imacron = 40;
itilde = 13;
};
Ntilde = {
imacron = 40;
itilde = 13;
};
OE = {
ibreve = 26;
imacron = 54;
itilde = 38;
v = -16;
};
Oslash = {
igrave = 50;
imacron = 53;
slash = -42;
underscore = -32;
};
P = {
J = -63;
X = -30;
Z = -20;
Zacute = -20;
Zcaron = -20;
Zdotaccent = -20;
at = -16;
comma = -88;
imacron = 23;
itilde = 37;
parenright = -40;
slash = -72;
underscore = -44;
};
Q = {
X = -20;
};
R = {
imacron = 30;
itilde = 20;
};
Racute = {
imacron = 30;
itilde = 20;
};
Rcaron = {
imacron = 30;
itilde = 20;
};
S = {
imacron = 34;
itilde = 20;
};
Sacute = {
imacron = 34;
itilde = 20;
};
Scaron = {
imacron = 34;
itilde = 20;
};
Scedilla = {
imacron = 34;
itilde = 20;
};
T = {
abreve = -102;
adieresis = -75;
amacron = -80;
atilde = -102;
ebreve = -102;
edieresis = -75;
emacron = -80;
gbreve = -93;
ibreve = 38;
icircumflex = 60;
imacron = 75;
itilde = 43;
ntilde = -90;
odieresis = -75;
omacron = -87;
otilde = -102;
racute = -67;
scaron = -93;
udieresis = -73;
umacron = -83;
uni1EBD = -102;
utilde = -100;
ydieresis = -62;
};
Tcaron = {
abreve = -102;
adieresis = -75;
amacron = -80;
atilde = -102;
ebreve = -102;
edieresis = -75;
emacron = -80;
gbreve = -93;
ibreve = 38;
icircumflex = 60;
imacron = 75;
itilde = 43;
ntilde = -90;
odieresis = -75;
omacron = -87;
otilde = -102;
racute = -67;
scaron = -93;
udieresis = -73;
umacron = -83;
uni1EBD = -102;
utilde = -100;
ydieresis = -62;
};
Thorn = {
X = -70;
parenright = -50;
};
U = {
ibreve = 13;
imacron = 47;
itilde = 18;
};
Uacute = {
ibreve = 13;
imacron = 47;
itilde = 18;
};
Ubreve = {
ibreve = 13;
imacron = 47;
itilde = 18;
};
Ucircumflex = {
ibreve = 13;
imacron = 47;
itilde = 18;
};
Udieresis = {
ibreve = 13;
imacron = 47;
itilde = 18;
};
Ugrave = {
ibreve = 13;
imacron = 47;
itilde = 18;
};
Uhungarumlaut = {
ibreve = 13;
imacron = 47;
itilde = 18;
};
Umacron = {
ibreve = 13;
imacron = 47;
itilde = 18;
};
Uogonek = {
ibreve = 13;
imacron = 47;
itilde = 18;
};
Uring = {
ibreve = 13;
imacron = 47;
itilde = 18;
};
Utilde = {
ibreve = 13;
imacron = 47;
itilde = 18;
};
V = {
adieresis = -55;
edieresis = -58;
emacron = -65;
ibreve = 43;
icircumflex = 27;
imacron = 77;
itilde = 43;
odieresis = -58;
omacron = -68;
};
W = {
adieresis = -72;
edieresis = -72;
ibreve = 39;
icircumflex = 23;
imacron = 73;
itilde = 33;
odieresis = -72;
};
Wacute = {
adieresis = -72;
edieresis = -72;
ibreve = 39;
icircumflex = 23;
imacron = 73;
itilde = 33;
odieresis = -72;
};
Wcircumflex = {
adieresis = -72;
edieresis = -72;
ibreve = 39;
icircumflex = 23;
imacron = 73;
itilde = 33;
odieresis = -72;
};
Wdieresis = {
adieresis = -72;
edieresis = -72;
ibreve = 39;
icircumflex = 23;
imacron = 73;
itilde = 33;
odieresis = -72;
};
Wgrave = {
adieresis = -72;
edieresis = -72;
ibreve = 39;
icircumflex = 23;
imacron = 73;
itilde = 33;
odieresis = -72;
};
X = {
J = -10;
at = -29;
f = -25;
ibreve = 26;
imacron = 50;
itilde = 10;
multiply = -66;
question = -24;
v = -70;
x = -33;
};
Y = {
adieresis = -72;
amacron = -78;
edieresis = -75;
emacron = -88;
ibreve = 33;
icircumflex = 17;
imacron = 70;
itilde = 30;
odieresis = -75;
omacron = -88;
racute = -50;
scaron = -88;
udieresis = -68;
};
Yacute = {
adieresis = -72;
amacron = -78;
edieresis = -75;
emacron = -88;
ibreve = 33;
icircumflex = 17;
imacron = 70;
itilde = 30;
odieresis = -75;
omacron = -88;
racute = -50;
scaron = -88;
udieresis = -68;
};
Ycircumflex = {
adieresis = -72;
amacron = -78;
edieresis = -75;
emacron = -88;
ibreve = 33;
icircumflex = 17;
imacron = 70;
itilde = 30;
odieresis = -75;
omacron = -88;
racute = -50;
scaron = -88;
udieresis = -68;
};
Ydieresis = {
adieresis = -72;
amacron = -78;
edieresis = -75;
emacron = -88;
ibreve = 33;
icircumflex = 17;
imacron = 70;
itilde = 30;
odieresis = -75;
omacron = -88;
racute = -50;
scaron = -88;
udieresis = -68;
};
Ygrave = {
adieresis = -72;
amacron = -78;
edieresis = -75;
emacron = -88;
ibreve = 33;
icircumflex = 17;
imacron = 70;
itilde = 30;
odieresis = -75;
omacron = -88;
racute = -50;
scaron = -88;
udieresis = -68;
};
Z = {
ibreve = 36;
imacron = 60;
itilde = 34;
};
Zacute = {
ibreve = 36;
imacron = 60;
itilde = 34;
};
Zcaron = {
ibreve = 36;
imacron = 60;
itilde = 34;
};
Zdotaccent = {
ibreve = 36;
imacron = 60;
itilde = 34;
};
asterisk = {
J = -66;
at = -40;
exclam = -13;
imacron = 66;
itilde = 40;
questiondown = -84;
slash = -124;
};
at = {
X = -13;
asterisk = -71;
backslash = -59;
braceright = -34;
comma = -17;
greater = -27;
less = -26;
parenright = -57;
question = -44;
quotedblleft = -9;
quotedblright = -15;
quoteleft = -9;
quoteright = -15;
semicolon = -15;
slash = -23;
underscore = -27;
};
backslash = {
at = -26;
backslash = -126;
comma = 50;
question = -30;
quotedblbase = 56;
quotedblleft = -66;
quotedblright = -102;
quoteleft = -66;
quoteright = -102;
quotesinglbase = 56;
underscore = 28;
};
bar = {
imacron = 40;
itilde = 13;
};
bracketleft = {
imacron = 25;
};
bracketright = {
imacron = 60;
itilde = 28;
};
brokenbar = {
imacron = 40;
itilde = 13;
};
c = {
asterisk = -37;
backslash = -74;
parenright = -30;
question = -34;
v = -19;
x = -18;
};
cacute = {
asterisk = -37;
backslash = -74;
parenright = -30;
question = -34;
v = -20;
};
ccaron = {
asterisk = -37;
backslash = -74;
parenright = -30;
question = -34;
v = -20;
};
ccedilla = {
asterisk = -37;
backslash = -74;
parenright = -30;
question = -34;
v = -20;
};
cdotaccent = {
asterisk = -37;
backslash = -74;
parenright = -30;
question = -34;
v = -20;
};
comma = {
backslash = -86;
question = -13;
v = -54;
};
d = {
imacron = 40;
};
dcaron = {
questiondown = -22;
};
dcroat = {
imacron = 73;
};
dollar = {
imacron = 34;
itilde = 20;
};
eth = {
imacron = 30;
};
exclam = {
asterisk = -17;
igrave = 46;
imacron = 50;
itilde = 8;
};
f = {
aacute = -17;
abreve = -17;
acircumflex = -17;
adieresis = -17;
aeacute = -17;
agrave = -17;
amacron = -17;
aogonek = -17;
aring = -17;
atilde = -17;
ibreve = 26;
igrave = 40;
imacron = 60;
itilde = 38;
};
fl = {
imacron = 40;
};
germandbls = {
asterisk = -60;
v = -60;
};
greater = {
at = -29;
parenright = -60;
};
i = {
lslash = 8;
};
iacute = {
asterisk = 23;
b = 60;
backslash = 74;
braceright = 13;
bracketleft = 60;
bracketright = 25;
exclam = 46;
f = 40;
h = 60;
idieresis = 80;
imacron = 60;
itilde = 57;
k = 60;
l = 60;
lacute = 60;
lcaron = 60;
ldot = 60;
lslash = 40;
parenright = 17;
question = 56;
quotedblleft = 52;
quotedblright = 40;
quoteleft = 52;
quoteright = 40;
uni0137 = 60;
uni013C = 60;
};
ibreve = {
backslash = 54;
question = 40;
};
imacron = {
B = 40;
D = 40;
Dcaron = 40;
E = 40;
Eacute = 40;
Ebreve = 40;
Ecaron = 40;
Ecircumflex = 40;
Edieresis = 40;
Edotaccent = 40;
Egrave = 40;
Emacron = 40;
Eogonek = 40;
F = 40;
H = 40;
I = 40;
Iacute = 40;
Ibreve = 40;
Icircumflex = 40;
Idieresis = 40;
Idotaccent = 40;
Igrave = 40;
Imacron = 40;
Itilde = 40;
K = 40;
L = 40;
Lacute = 40;
Lcaron = 40;
Ldot = 40;
M = 40;
N = 40;
Nacute = 40;
Ncaron = 40;
Ntilde = 40;
P = 40;
R = 40;
Racute = 40;
Rcaron = 40;
Thorn = 40;
asterisk = 70;
b = 60;
backslash = 92;
bar = 40;
bracketleft = 60;
bracketright = 25;
brokenbar = 40;
exclam = 70;
f = 40;
germandbls = 60;
h = 60;
k = 60;
l = 60;
lacute = 60;
lcaron = 60;
ldot = 60;
lslash = 66;
question = 72;
quotedblleft = 72;
quotedblright = 70;
quoteleft = 72;
quoteright = 70;
thorn = 60;
uni0136 = 40;
uni0137 = 60;
uni013B = 40;
uni013C = 60;
uni0145 = 40;
uni0156 = 40;
uni02B9 = 100;
uni02BA = 100;
uni1EBC = 40;
uni20A8 = 40;
z = 40;
zacute = 40;
zcaron = 40;
zdotaccent = 40;
};
itilde = {
asterisk = 40;
b = 17;
bracketleft = 28;
exclam = 13;
f = 30;
h = 17;
j = 34;
k = 17;
l = 17;
lacute = 17;
lcaron = 17;
ldot = 17;
question = 40;
quotedblleft = 30;
quotedblright = 30;
quoteleft = 30;
quoteright = 30;
uni0137 = 17;
uni013C = 17;
uni02B9 = 60;
uni02BA = 60;
};
j = {
itilde = 40;
};
l = {
imacron = 40;
};
lacute = {
imacron = 40;
};
lcaron = {
b = 120;
h = 120;
k = 120;
l = 120;
questiondown = -22;
};
less = {
at = -33;
parenright = -44;
};
lslash = {
i = 8;
imacron = 60;
questiondown = 24;
v = 17;
};
multiply = {
X = -32;
};
parenleft = {
at = -53;
};
plus = {
slash = -36;
};
q = {
backslash = -40;
j = 30;
};
question = {
J = -32;
X = -30;
at = -19;
comma = -67;
ibreve = 30;
igrave = 40;
imacron = 54;
itilde = 38;
parenright = -83;
questiondown = -92;
quotedblbase = -38;
quotesinglbase = -38;
slash = -70;
underscore = -64;
};
questiondown = {
asterisk = -48;
backslash = -50;
question = -48;
quotedblbase = 40;
quotesinglbase = 40;
v = -12;
};
quotedbl = {
ibreve = 26;
imacron = 77;
itilde = 30;
};
quotedblbase = {
backslash = -120;
question = -30;
};
quotedblleft = {
J = -74;
at = -29;
ibreve = 12;
imacron = 62;
itilde = 24;
questiondown = -68;
slash = -97;
};
quotedblright = {
ibreve = 26;
imacron = 77;
itilde = 30;
};
quoteleft = {
J = -74;
at = -29;
ibreve = 12;
imacron = 62;
itilde = 24;
questiondown = -68;
slash = -97;
};
quoteright = {
ibreve = 26;
imacron = 77;
itilde = 30;
};
quotesinglbase = {
backslash = -120;
question = -30;
};
quotesingle = {
ibreve = 26;
imacron = 77;
itilde = 30;
};
sacute = {
v = -38;
};
scaron = {
v = -38;
};
scedilla = {
v = -38;
};
slash = {
B = 44;
D = 44;
Dcaron = 44;
E = 44;
Eacute = 44;
Ebreve = 44;
Ecaron = 44;
Ecircumflex = 44;
Edieresis = 44;
Edotaccent = 44;
Egrave = 44;
Emacron = 44;
Eogonek = 44;
F = 44;
H = 44;
I = 44;
Iacute = 44;
Ibreve = 44;
Icircumflex = 60;
Idieresis = 54;
Idotaccent = 44;
Igrave = 40;
Imacron = 90;
Itilde = 44;
J = -36;
K = 44;
L = 44;
Lacute = 44;
Lcaron = 44;
Ldot = 44;
M = 44;
N = 44;
Nacute = 44;
Ncaron = 44;
Ntilde = 44;
Oslash = -32;
P = 44;
R = 44;
Racute = 44;
Rcaron = 44;
Thorn = 44;
at = -43;
bar = 44;
brokenbar = 44;
comma = -44;
ibreve = 40;
icircumflex = 42;
idieresis = 37;
igrave = 86;
imacron = 80;
plus = -53;
questiondown = -56;
quotedblbase = -51;
quotesinglbase = -51;
slash = -122;
underscore = -124;
uni0136 = 44;
uni013B = 44;
uni0145 = 44;
uni0156 = 44;
uni1EBC = 44;
uni20A8 = 44;
};
underscore = {
asterisk = -96;
at = -44;
backslash = -156;
j = 25;
question = -60;
underscore = -113;
};
uni0122 = {
imacron = 30;
};
uni0136 = {
ibreve = 20;
icircumflex = -7;
imacron = 50;
l = -3;
};
uni013B = {
V = -80;
};
uni013C = {
imacron = 40;
};
uni0145 = {
imacron = 40;
itilde = 13;
};
uni0156 = {
imacron = 30;
itilde = 20;
};
uni0162 = {
abreve = -102;
adieresis = -75;
amacron = -80;
atilde = -102;
ebreve = -102;
edieresis = -75;
emacron = -80;
gbreve = -93;
ibreve = 38;
icircumflex = 60;
imacron = 75;
itilde = 43;
ntilde = -90;
odieresis = -75;
omacron = -87;
otilde = -102;
racute = -67;
scaron = -93;
udieresis = -73;
umacron = -83;
uni1EBD = -102;
utilde = -100;
ydieresis = -62;
};
uni0218 = {
imacron = 34;
itilde = 20;
};
uni0219 = {
v = -38;
};
uni021A = {
abreve = -102;
adieresis = -75;
amacron = -80;
atilde = -102;
ebreve = -102;
edieresis = -75;
emacron = -80;
gbreve = -93;
ibreve = 38;
icircumflex = 60;
imacron = 75;
itilde = 43;
ntilde = -90;
odieresis = -75;
omacron = -87;
otilde = -102;
racute = -67;
scaron = -93;
udieresis = -73;
umacron = -83;
uni1EBD = -102;
utilde = -100;
ydieresis = -62;
};
uni02B9 = {
J = -43;
at = -33;
backslash = 20;
imacron = 100;
itilde = 60;
};
uni02BA = {
J = -43;
at = -33;
backslash = 20;
imacron = 100;
itilde = 60;
};
uni1EBC = {
ibreve = 26;
imacron = 54;
itilde = 38;
v = -16;
};
uni1EF8 = {
adieresis = -72;
amacron = -78;
edieresis = -75;
emacron = -88;
ibreve = 33;
icircumflex = 17;
imacron = 70;
itilde = 30;
odieresis = -75;
omacron = -88;
racute = -50;
scaron = -88;
udieresis = -68;
};
uni20A8 = {
v = -38;
};
v = {
at = -20;
comma = -40;
f = 20;
lslash = 8;
questiondown = -17;
};
z = {
imacron = 40;
};
zacute = {
imacron = 40;
};
zcaron = {
imacron = 40;
};
zdotaccent = {
imacron = 40;
};
};
"D238A28B-6A19-4190-B1CF-6D2CA2E33010" = {
"@MMK_L_A" = {
"@MMK_R_C" = -60;
"@MMK_R_S" = -15;
"@MMK_R_T" = -80;
"@MMK_R_U" = -36;
"@MMK_R_V" = -113;
"@MMK_R_W" = -85;
"@MMK_R_X" = -35;
"@MMK_R_Y" = -99;
"@MMK_R_a" = -15;
"@MMK_R_asterisk" = -103;
"@MMK_R_at" = -29;
"@MMK_R_backslash" = -66;
"@MMK_R_c" = -35;
"@MMK_R_f" = -25;
"@MMK_R_hyphen" = -40;
"@MMK_R_multiply" = -44;
"@MMK_R_parenright" = -13;
"@MMK_R_plus" = -49;
"@MMK_R_question" = -40;
"@MMK_R_s" = -20;
"@MMK_R_t" = -50;
"@MMK_R_u" = -23;
"@MMK_R_v" = -70;
"@MMK_R_w" = -50;
"@MMK_R_x" = -40;
"@MMK_R_y" = -74;
"@MMK_R_z" = 11;
};
"@MMK_L_B" = {
"@MMK_R_A" = -30;
"@MMK_R_AE" = -34;
"@MMK_R_S" = -10;
"@MMK_R_T" = -50;
"@MMK_R_V" = -45;
"@MMK_R_W" = -30;
"@MMK_R_X" = -30;
"@MMK_R_Y" = -60;
"@MMK_R_asterisk" = -26;
"@MMK_R_backslash" = -36;
"@MMK_R_braceright" = -40;
"@MMK_R_c" = -5;
"@MMK_R_comma" = -26;
"@MMK_R_g" = -15;
"@MMK_R_parenright" = -64;
"@MMK_R_period" = -30;
"@MMK_R_slash" = -39;
"@MMK_R_underscore" = -50;
"@MMK_R_x" = -10;
};
"@MMK_L_Cacute" = {
"@MMK_R_AE" = -9;
"@MMK_R_T" = -20;
"@MMK_R_V" = -13;
"@MMK_R_W" = -20;
"@MMK_R_X" = -20;
"@MMK_R_Y" = -40;
"@MMK_R_parenright" = -20;
};
"@MMK_L_E" = {
"@MMK_R_C" = -10;
};
"@MMK_L_F" = {
"@MMK_R_A" = -60;
"@MMK_R_a" = -40;
"@MMK_R_c" = -30;
"@MMK_R_g" = -35;
"@MMK_R_period" = -60;
"@MMK_R_s" = -20;
};
"@MMK_L_G" = {
"@MMK_R_T" = -25;
"@MMK_R_W" = -25;
"@MMK_R_Y" = -50;
};
"@MMK_L_J" = {
"@MMK_R_A" = -21;
};
"@MMK_L_K" = {
"@MMK_R_A" = -40;
"@MMK_R_C" = -65;
"@MMK_R_J" = -11;
"@MMK_R_S" = -50;
"@MMK_R_T" = -20;
"@MMK_R_a" = -35;
"@MMK_R_asterisk" = -17;
"@MMK_R_at" = -20;
"@MMK_R_c" = -65;
"@MMK_R_dotlessi" = -40;
"@MMK_R_f" = -30;
"@MMK_R_g" = -40;
"@MMK_R_guillemotleft" = -46;
"@MMK_R_hyphen" = -60;
"@MMK_R_i" = -30;
"@MMK_R_igrave" = -20;
"@MMK_R_j" = -30;
"@MMK_R_p" = -20;
"@MMK_R_plus" = -40;
"@MMK_R_question" = -18;
"@MMK_R_s" = -45;
"@MMK_R_t" = -50;
"@MMK_R_u" = -45;
"@MMK_R_v" = -75;
"@MMK_R_w" = -70;
"@MMK_R_x" = -65;
"@MMK_R_y" = -75;
"@MMK_R_z" = -25;
};
"@MMK_L_L" = {
"@MMK_R_C" = -74;
"@MMK_R_S" = -24;
"@MMK_R_T" = -120;
"@MMK_R_U" = -40;
"@MMK_R_V" = -134;
"@MMK_R_W" = -80;
"@MMK_R_Y" = -127;
"@MMK_R_asterisk" = -111;
"@MMK_R_at" = -30;
"@MMK_R_backslash" = -66;
"@MMK_R_c" = -40;
"@MMK_R_hyphen" = -60;
"@MMK_R_percent" = -79;
"@MMK_R_plus" = -60;
"@MMK_R_question" = -30;
"@MMK_R_t" = -34;
"@MMK_R_uni018F" = -30;
"@MMK_R_uni02BA" = -107;
"@MMK_R_v" = -65;
"@MMK_R_w" = -45;
"@MMK_R_y" = -70;
};
"@MMK_L_N" = {
"@MMK_R_c" = -5;
};
"@MMK_L_P" = {
"@MMK_R_A" = -71;
"@MMK_R_AE" = -104;
"@MMK_R_S" = 6;
"@MMK_R_Y" = -18;
"@MMK_R_a" = -15;
"@MMK_R_c" = -19;
"@MMK_R_dotlessi" = 20;
"@MMK_R_g" = -26;
"@MMK_R_period" = -50;
};
"@MMK_L_Q" = {
"@MMK_R_A" = -13;
"@MMK_R_T" = -40;
"@MMK_R_U" = 11;
"@MMK_R_V" = -40;
"@MMK_R_W" = -40;
"@MMK_R_Y" = -49;
"@MMK_R_u" = 5;
};
"@MMK_L_R" = {
"@MMK_R_C" = -10;
"@MMK_R_T" = -20;
"@MMK_R_V" = -40;
"@MMK_R_W" = -35;
"@MMK_R_Y" = -30;
"@MMK_R_a" = -25;
"@MMK_R_c" = -40;
"@MMK_R_plus" = -9;
"@MMK_R_s" = -9;
"@MMK_R_u" = -15;
};
"@MMK_L_S" = {
"@MMK_R_C" = -10;
"@MMK_R_T" = -20;
"@MMK_R_V" = -30;
"@MMK_R_W" = -40;
"@MMK_R_Y" = -50;
"@MMK_R_c" = -10;
"@MMK_R_y" = -10;
};
"@MMK_L_T" = {
"@MMK_R_A" = -76;
"@MMK_R_AE" = -90;
"@MMK_R_C" = -25;
"@MMK_R_J" = -60;
"@MMK_R_a" = -115;
"@MMK_R_at" = -57;
"@MMK_R_backslash" = 26;
"@MMK_R_c" = -115;
"@MMK_R_comma" = -80;
"@MMK_R_dotlessi" = -110;
"@MMK_R_exclamdown" = -26;
"@MMK_R_f" = -20;
"@MMK_R_g" = -115;
"@MMK_R_hyphen" = -50;
"@MMK_R_iacute" = 10;
"@MMK_R_ibreve" = 80;
"@MMK_R_igrave" = 10;
"@MMK_R_multiply" = -79;
"@MMK_R_p" = -110;
"@MMK_R_period" = -80;
"@MMK_R_plus" = -49;
"@MMK_R_question" = 20;
"@MMK_R_questiondown" = -64;
"@MMK_R_rcaron" = -40;
"@MMK_R_s" = -110;
"@MMK_R_semicolon" = -56;
"@MMK_R_slash" = -46;
"@MMK_R_t" = -24;
"@MMK_R_u" = -110;
"@MMK_R_underscore" = -60;
"@MMK_R_uni006A0301" = 20;
"@MMK_R_v" = -85;
"@MMK_R_w" = -90;
"@MMK_R_x" = -85;
"@MMK_R_y" = -85;
"@MMK_R_z" = -90;
};
"@MMK_L_Thorn" = {
"@MMK_R_A" = -18;
"@MMK_R_T" = -89;
"@MMK_R_V" = -60;
"@MMK_R_W" = -40;
"@MMK_R_Y" = -74;
"@MMK_R_period" = -13;
};
"@MMK_L_U" = {
"@MMK_R_A" = -34;
"@MMK_R_AE" = -43;
"@MMK_R_g" = -25;
"@MMK_R_period" = -20;
"@MMK_R_s" = -10;
"@MMK_R_slash" = -30;
"@MMK_R_underscore" = -34;
};
"@MMK_L_V" = {
"@MMK_R_A" = -85;
"@MMK_R_AE" = -99;
"@MMK_R_C" = -23;
"@MMK_R_J" = -75;
"@MMK_R_S" = -20;
"@MMK_R_a" = -65;
"@MMK_R_at" = -64;
"@MMK_R_backslash" = 11;
"@MMK_R_c" = -75;
"@MMK_R_colon" = -30;
"@MMK_R_comma" = -74;
"@MMK_R_dotlessi" = -40;
"@MMK_R_exclamdown" = -36;
"@MMK_R_f" = -20;
"@MMK_R_g" = -70;
"@MMK_R_hyphen" = -44;
"@MMK_R_igrave" = 20;
"@MMK_R_multiply" = -49;
"@MMK_R_p" = -40;
"@MMK_R_period" = -60;
"@MMK_R_plus" = -53;
"@MMK_R_rcaron" = -20;
"@MMK_R_s" = -65;
"@MMK_R_slash" = -59;
"@MMK_R_t" = -15;
"@MMK_R_u" = -45;
"@MMK_R_underscore" = -70;
"@MMK_R_uni006A0301" = 10;
"@MMK_R_v" = -20;
"@MMK_R_w" = -25;
"@MMK_R_x" = -25;
"@MMK_R_y" = -15;
"@MMK_R_z" = -20;
};
"@MMK_L_W" = {
"@MMK_R_A" = -95;
"@MMK_R_AE" = -83;
"@MMK_R_C" = -40;
"@MMK_R_J" = -55;
"@MMK_R_Oslash" = -20;
"@MMK_R_S" = -20;
"@MMK_R_a" = -80;
"@MMK_R_at" = -70;
"@MMK_R_c" = -85;
"@MMK_R_comma" = -54;
"@MMK_R_dotlessi" = -50;
"@MMK_R_exclamdown" = -31;
"@MMK_R_f" = -20;
"@MMK_R_g" = -75;
"@MMK_R_hyphen" = -44;
"@MMK_R_i" = -15;
"@MMK_R_iacute" = -10;
"@MMK_R_igrave" = 5;
"@MMK_R_j" = -5;
"@MMK_R_multiply" = -44;
"@MMK_R_p" = -50;
"@MMK_R_period" = -70;
"@MMK_R_plus" = -49;
"@MMK_R_rcaron" = -30;
"@MMK_R_s" = -75;
"@MMK_R_semicolon" = -31;
"@MMK_R_slash" = -54;
"@MMK_R_t" = -20;
"@MMK_R_u" = -50;
"@MMK_R_underscore" = -39;
"@MMK_R_v" = -35;
"@MMK_R_w" = -35;
"@MMK_R_x" = -35;
"@MMK_R_y" = -35;
"@MMK_R_z" = -40;
};
"@MMK_L_X" = {
"@MMK_R_A" = -25;
"@MMK_R_C" = -60;
"@MMK_R_S" = -20;
"@MMK_R_a" = -40;
"@MMK_R_c" = -55;
"@MMK_R_g" = -30;
"@MMK_R_s" = -45;
"@MMK_R_t" = -50;
"@MMK_R_u" = -36;
"@MMK_R_w" = -60;
"@MMK_R_y" = -75;
"@MMK_R_z" = -20;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -84;
"@MMK_R_AE" = -86;
"@MMK_R_C" = -50;
"@MMK_R_J" = -75;
"@MMK_R_Oslash" = -37;
"@MMK_R_S" = -20;
"@MMK_R_a" = -100;
"@MMK_R_at" = -80;
"@MMK_R_c" = -115;
"@MMK_R_colon" = -40;
"@MMK_R_comma" = -61;
"@MMK_R_dotlessi" = -75;
"@MMK_R_exclamdown" = -46;
"@MMK_R_f" = -25;
"@MMK_R_g" = -90;
"@MMK_R_hyphen" = -46;
"@MMK_R_i" = -15;
"@MMK_R_iacute" = -15;
"@MMK_R_multiply" = -79;
"@MMK_R_p" = -65;
"@MMK_R_period" = -81;
"@MMK_R_plus" = -84;
"@MMK_R_questiondown" = -76;
"@MMK_R_rcaron" = -40;
"@MMK_R_s" = -105;
"@MMK_R_semicolon" = -47;
"@MMK_R_slash" = -61;
"@MMK_R_t" = -30;
"@MMK_R_u" = -85;
"@MMK_R_underscore" = -76;
"@MMK_R_uni02BA" = 30;
"@MMK_R_v" = -50;
"@MMK_R_w" = -40;
"@MMK_R_x" = -50;
"@MMK_R_y" = -50;
"@MMK_R_z" = -50;
};
"@MMK_L_Z" = {
"@MMK_R_C" = -20;
"@MMK_R_a" = -25;
"@MMK_R_c" = -35;
};
"@MMK_L_a" = {
"@MMK_R_asterisk" = -36;
"@MMK_R_backslash" = -40;
"@MMK_R_lslash" = 10;
"@MMK_R_uni02BA" = -66;
"@MMK_R_v" = -26;
"@MMK_R_w" = -18;
"@MMK_R_y" = -28;
};
"@MMK_L_aacute" = {
"@MMK_R_asterisk" = -36;
"@MMK_R_backslash" = -60;
"@MMK_R_c" = -10;
"@MMK_R_f" = -15;
"@MMK_R_t" = -25;
"@MMK_R_v" = -35;
"@MMK_R_w" = -30;
"@MMK_R_y" = -45;
};
"@MMK_L_ae" = {
"@MMK_R_Y" = -100;
"@MMK_R_asterisk" = -47;
"@MMK_R_backslash" = -66;
"@MMK_R_g" = -11;
"@MMK_R_lslash" = 20;
"@MMK_R_question" = -20;
"@MMK_R_uni02BA" = -71;
"@MMK_R_v" = -27;
"@MMK_R_w" = -20;
"@MMK_R_x" = -30;
"@MMK_R_y" = -29;
};
"@MMK_L_asterisk" = {
"@MMK_R_A" = -83;
"@MMK_R_AE" = -116;
"@MMK_R_C" = -12;
"@MMK_R_a" = -11;
"@MMK_R_c" = -27;
"@MMK_R_s" = -19;
};
"@MMK_L_at" = {
"@MMK_R_A" = -30;
"@MMK_R_AE" = -30;
"@MMK_R_T" = -94;
"@MMK_R_V" = -104;
"@MMK_R_W" = -91;
"@MMK_R_Y" = -109;
"@MMK_R_percent" = -66;
"@MMK_R_period" = -26;
"@MMK_R_uni02BA" = -91;
"@MMK_R_w" = -34;
"@MMK_R_y" = -44;
};
"@MMK_L_b" = {
"@MMK_R_T" = -120;
"@MMK_R_V" = -80;
"@MMK_R_asterisk" = -61;
"@MMK_R_backslash" = -86;
"@MMK_R_braceright" = -50;
"@MMK_R_c" = -10;
"@MMK_R_f" = -5;
"@MMK_R_g" = -10;
"@MMK_R_lslash" = 10;
"@MMK_R_parenright" = -54;
"@MMK_R_question" = -40;
"@MMK_R_s" = -10;
"@MMK_R_slash" = -4;
"@MMK_R_t" = -20;
"@MMK_R_uni02BA" = -84;
"@MMK_R_v" = -41;
"@MMK_R_w" = -31;
"@MMK_R_x" = -35;
"@MMK_R_y" = -44;
};
"@MMK_L_backslash" = {
"@MMK_R_C" = -40;
"@MMK_R_T" = -73;
"@MMK_R_U" = -17;
"@MMK_R_V" = -97;
"@MMK_R_W" = -64;
"@MMK_R_Y" = -70;
"@MMK_R_c" = -20;
"@MMK_R_hyphen" = -39;
"@MMK_R_uni02BA" = -106;
};
"@MMK_L_braceright" = {
"@MMK_R_A" = -44;
"@MMK_R_AE" = -50;
"@MMK_R_T" = -47;
"@MMK_R_W" = -26;
"@MMK_R_Y" = -50;
"@MMK_R_period" = -50;
};
"@MMK_L_c" = {
"@MMK_R_w" = -20;
"@MMK_R_y" = -20;
};
"@MMK_L_colon" = {
"@MMK_R_V" = -30;
"@MMK_R_Y" = -40;
};
"@MMK_L_comma" = {
"@MMK_R_C" = -34;
"@MMK_R_T" = -80;
"@MMK_R_V" = -80;
"@MMK_R_W" = -49;
"@MMK_R_Y" = -81;
"@MMK_R_percent" = -92;
"@MMK_R_t" = -31;
"@MMK_R_w" = -30;
"@MMK_R_y" = -50;
};
"@MMK_L_exclamdown" = {
"@MMK_R_T" = -34;
"@MMK_R_V" = -36;
"@MMK_R_W" = -17;
"@MMK_R_Y" = -46;
};
"@MMK_L_f" = {
"@MMK_R_a" = -15;
"@MMK_R_c" = -10;
"@MMK_R_g" = -20;
"@MMK_R_period" = -17;
"@MMK_R_s" = -7;
};
"@MMK_L_g" = {
"@MMK_R_a" = -10;
"@MMK_R_c" = -17;
"@MMK_R_f" = 10;
"@MMK_R_j" = 50;
"@MMK_R_t" = 20;
};
"@MMK_L_germandbls" = {
"@MMK_R_y" = -40;
};
"@MMK_L_greater" = {
"@MMK_R_period" = -60;
};
"@MMK_L_hyphen" = {
"@MMK_R_A" = -34;
"@MMK_R_T" = -56;
"@MMK_R_V" = -44;
"@MMK_R_W" = -34;
"@MMK_R_Y" = -56;
"@MMK_R_backslash" = -63;
"@MMK_R_slash" = -39;
};
"@MMK_L_ibreve" = {
"@MMK_R_T" = 80;
"@MMK_R_b" = 40;
};
"@MMK_L_k" = {
"@MMK_R_a" = -33;
"@MMK_R_at" = -20;
"@MMK_R_c" = -36;
"@MMK_R_s" = -23;
};
"@MMK_L_l" = {
"@MMK_R_ibreve" = 30;
};
"@MMK_L_lslash" = {
"@MMK_R_a" = 5;
"@MMK_R_c" = 10;
"@MMK_R_w" = 20;
};
"@MMK_L_multiply" = {
"@MMK_R_A" = -9;
"@MMK_R_AE" = -13;
"@MMK_R_T" = -79;
"@MMK_R_V" = -56;
"@MMK_R_W" = -40;
"@MMK_R_Y" = -76;
};
"@MMK_L_parenleft" = {
"@MMK_R_A" = -17;
"@MMK_R_C" = -54;
"@MMK_R_a" = -50;
"@MMK_R_c" = -36;
"@MMK_R_s" = -20;
};
"@MMK_L_period" = {
"@MMK_R_C" = -50;
"@MMK_R_T" = -80;
"@MMK_R_U" = -20;
"@MMK_R_V" = -60;
"@MMK_R_W" = -70;
"@MMK_R_Y" = -87;
"@MMK_R_at" = -20;
"@MMK_R_backslash" = -93;
"@MMK_R_less" = -60;
"@MMK_R_question" = -39;
"@MMK_R_v" = -51;
"@MMK_R_w" = -40;
"@MMK_R_y" = -60;
};
"@MMK_L_plus" = {
"@MMK_R_A" = -17;
"@MMK_R_T" = -54;
"@MMK_R_V" = -69;
"@MMK_R_W" = -49;
"@MMK_R_Y" = -80;
};
"@MMK_L_question" = {
"@MMK_R_A" = -64;
"@MMK_R_AE" = -73;
"@MMK_R_period" = -90;
};
"@MMK_L_questiondown" = {
"@MMK_R_T" = -69;
"@MMK_R_Y" = -70;
"@MMK_R_c" = -36;
"@MMK_R_percent" = -36;
"@MMK_R_z" = 20;
};
"@MMK_L_quotedblright" = {
"@MMK_R_J" = -76;
"@MMK_R_at" = -34;
"@MMK_R_s" = -51;
"@MMK_R_slash" = -106;
};
"@MMK_L_r" = {
"@MMK_R_c" = -9;
"@MMK_R_colon" = 9;
"@MMK_R_f" = 10;
"@MMK_R_period" = -40;
"@MMK_R_t" = 20;
"@MMK_R_u" = 6;
"@MMK_R_w" = 10;
"@MMK_R_y" = 15;
};
"@MMK_L_s" = {
"@MMK_R_asterisk" = -61;
"@MMK_R_backslash" = -64;
"@MMK_R_f" = -10;
"@MMK_R_parenright" = -26;
"@MMK_R_question" = -24;
"@MMK_R_t" = -15;
"@MMK_R_u" = -5;
"@MMK_R_v" = -30;
"@MMK_R_w" = -20;
"@MMK_R_x" = -20;
"@MMK_R_y" = -30;
};
"@MMK_L_semicolon" = {
"@MMK_R_T" = -40;
"@MMK_R_Y" = -23;
};
"@MMK_L_slash" = {
"@MMK_R_C" = -29;
"@MMK_R_T" = 17;
"@MMK_R_V" = 36;
"@MMK_R_W" = 17;
"@MMK_R_Y" = 40;
"@MMK_R_a" = -30;
"@MMK_R_c" = -45;
"@MMK_R_dotlessi" = -13;
"@MMK_R_g" = -36;
"@MMK_R_hyphen" = -39;
"@MMK_R_period" = -103;
"@MMK_R_s" = -27;
};
"@MMK_L_t" = {
"@MMK_R_c" = -17;
"@MMK_R_comma" = 26;
};
"@MMK_L_underscore" = {
"@MMK_R_C" = -71;
"@MMK_R_T" = -76;
"@MMK_R_U" = -51;
"@MMK_R_V" = -90;
"@MMK_R_W" = -71;
"@MMK_R_Y" = -76;
};
"@MMK_L_v" = {
"@MMK_R_A" = -60;
"@MMK_R_a" = -13;
"@MMK_R_c" = -23;
"@MMK_R_g" = -26;
"@MMK_R_period" = -40;
"@MMK_R_s" = -14;
"@MMK_R_t" = 20;
};
"@MMK_L_w" = {
"@MMK_R_a" = -9;
"@MMK_R_at" = -13;
"@MMK_R_c" = -11;
"@MMK_R_comma" = -30;
"@MMK_R_f" = 10;
"@MMK_R_g" = -25;
"@MMK_R_lslash" = 10;
"@MMK_R_period" = -40;
"@MMK_R_questiondown" = -9;
"@MMK_R_t" = 10;
};
"@MMK_L_x" = {
"@MMK_R_c" = -30;
"@MMK_R_s" = -20;
};
"@MMK_L_y" = {
"@MMK_R_T" = -60;
"@MMK_R_a" = -19;
"@MMK_R_at" = -13;
"@MMK_R_c" = -25;
"@MMK_R_comma" = -60;
"@MMK_R_g" = -31;
"@MMK_R_multiply" = -9;
"@MMK_R_period" = -50;
"@MMK_R_questiondown" = -34;
"@MMK_R_s" = -9;
"@MMK_R_slash" = -30;
};
"@MMK_L_z" = {
"@MMK_R_c" = -5;
};
AE = {
ibreve = 24;
imacron = 56;
itilde = 41;
v = -15;
};
AEacute = {
ibreve = 24;
imacron = 56;
itilde = 41;
v = -15;
};
Aacute = {
asterisk = -103;
at = -29;
backslash = -66;
f = -9;
multiply = -44;
parenright = -13;
plus = -49;
question = -40;
v = -70;
};
Abreve = {
asterisk = -103;
at = -29;
backslash = -66;
f = -9;
multiply = -44;
parenright = -13;
plus = -49;
question = -40;
v = -70;
};
Acircumflex = {
asterisk = -103;
at = -29;
backslash = -66;
f = -9;
multiply = -44;
parenright = -13;
plus = -49;
question = -40;
v = -70;
};
Adieresis = {
asterisk = -103;
at = -29;
backslash = -66;
f = -9;
multiply = -44;
parenright = -13;
plus = -49;
question = -40;
v = -70;
};
Agrave = {
asterisk = -103;
at = -29;
backslash = -66;
f = -9;
multiply = -44;
parenright = -13;
plus = -49;
question = -40;
v = -70;
};
Amacron = {
asterisk = -103;
at = -29;
backslash = -66;
f = -9;
multiply = -44;
parenright = -13;
plus = -49;
question = -40;
v = -70;
};
Aogonek = {
asterisk = -103;
at = -29;
backslash = -66;
f = -9;
multiply = -44;
parenright = -13;
plus = -49;
question = -40;
v = -70;
};
Aring = {
asterisk = -103;
at = -29;
backslash = -66;
f = -9;
multiply = -44;
parenright = -13;
plus = -49;
question = -40;
v = -70;
};
Atilde = {
asterisk = -103;
at = -29;
backslash = -66;
f = -9;
multiply = -44;
parenright = -13;
plus = -49;
question = -40;
v = -70;
};
B = {
A = -25;
Aacute = -25;
Abreve = -25;
Acircumflex = -25;
Adieresis = -25;
Agrave = -25;
Amacron = -25;
Aogonek = -25;
Aring = -25;
Atilde = -25;
C = -10;
Cacute = -10;
Ccaron = -10;
Ccedilla = -10;
Cdotaccent = -10;
G = -10;
Gbreve = -10;
Gdotaccent = -10;
O = -10;
OE = -10;
Oacute = -10;
Obreve = -10;
Ocircumflex = -10;
Odieresis = -10;
Ograve = -10;
Ohungarumlaut = -10;
Omacron = -10;
Otilde = -10;
Q = -10;
T = -20;
Tcaron = -20;
V = -30;
W = -30;
Wacute = -30;
Wcircumflex = -30;
Wdieresis = -30;
Wgrave = -30;
X = -20;
Y = -20;
Yacute = -20;
Ycircumflex = -20;
Ydieresis = -20;
Ygrave = -20;
imacron = 20;
itilde = 20;
uni0122 = -10;
uni0162 = -20;
uni021A = -20;
uni1EF8 = -20;
uni1EF9 = -15;
y = -15;
yacute = -15;
ycircumflex = -15;
ydieresis = -15;
ygrave = -15;
};
C = {
dotlessi = 10;
eng = 10;
idieresis = 20;
imacron = 20;
iogonek = 10;
itilde = 20;
m = 10;
n = 10;
nacute = 10;
ncaron = 10;
ntilde = 10;
r = 10;
racute = 10;
uni0146 = 10;
uni0157 = 10;
uni0326 = 10;
};
Cacute = {
imacron = 30;
itilde = 30;
};
Ccaron = {
imacron = 30;
itilde = 30;
};
Ccedilla = {
imacron = 30;
itilde = 30;
};
Cdotaccent = {
imacron = 30;
itilde = 30;
};
E = {
ibreve = 25;
icircumflex = 20;
imacron = 56;
itilde = 41;
v = -15;
};
Eacute = {
ibreve = 24;
imacron = 56;
itilde = 41;
v = -15;
};
Ebreve = {
ibreve = 24;
imacron = 56;
itilde = 41;
v = -15;
};
Ecaron = {
ibreve = 24;
imacron = 56;
itilde = 41;
v = -15;
};
Ecircumflex = {
ibreve = 24;
imacron = 56;
itilde = 41;
v = -15;
};
Edieresis = {
ibreve = 24;
imacron = 56;
itilde = 41;
v = -15;
};
Edotaccent = {
ibreve = 24;
imacron = 56;
itilde = 41;
v = -15;
};
Egrave = {
ibreve = 24;
imacron = 56;
itilde = 41;
v = -15;
};
Emacron = {
ibreve = 24;
imacron = 56;
itilde = 41;
v = -15;
};
Eogonek = {
ibreve = 24;
imacron = 56;
itilde = 41;
v = -15;
};
Euro = {
imacron = 30;
itilde = 30;
};
F = {
J = -43;
at = -30;
comma = -40;
iacute = 10;
ibreve = 35;
icircumflex = 35;
igrave = 15;
imacron = 75;
itilde = 45;
multiply = -20;
underscore = -40;
uni006A0301 = 15;
};
G = {
imacron = 30;
};
Gbreve = {
imacron = 30;
};
Gdotaccent = {
imacron = 30;
};
H = {
ibreve = 20;
imacron = 50;
itilde = 25;
};
I = {
ibreve = 20;
imacron = 50;
itilde = 25;
};
Iacute = {
imacron = 40;
itilde = 17;
};
Ibreve = {
imacron = 40;
itilde = 17;
};
Icircumflex = {
imacron = 40;
itilde = 17;
};
Idieresis = {
imacron = 40;
itilde = 17;
};
Idotaccent = {
imacron = 40;
itilde = 17;
};
Igrave = {
imacron = 40;
itilde = 17;
};
Imacron = {
imacron = 40;
itilde = 17;
};
Iogonek = {
imacron = 40;
itilde = 17;
};
Itilde = {
imacron = 40;
itilde = 17;
};
J = {
ibreve = 20;
igrave = 50;
imacron = 50;
itilde = 25;
};
K = {
ibreve = 20;
icircumflex = -10;
imacron = 50;
l = -5;
};
L = {
V = -80;
};
Lacute = {
V = -80;
};
Lcaron = {
V = -80;
};
Ldot = {
V = -80;
};
Lslash = {
V = -80;
};
M = {
ibreve = 20;
imacron = 50;
itilde = 25;
};
N = {
ibreve = 20;
imacron = 50;
itilde = 25;
};
Nacute = {
imacron = 40;
itilde = 17;
};
Ncaron = {
imacron = 40;
itilde = 17;
};
Ntilde = {
imacron = 40;
itilde = 17;
};
OE = {
ibreve = 24;
imacron = 56;
itilde = 41;
v = -15;
};
Oslash = {
igrave = 50;
imacron = 57;
slash = -39;
underscore = -29;
};
P = {
J = -57;
X = -30;
Z = -20;
Zacute = -20;
Zcaron = -20;
Zdotaccent = -20;
at = -24;
comma = -91;
imacron = 30;
itilde = 40;
parenright = -40;
slash = -69;
underscore = -46;
};
Q = {
X = -20;
};
R = {
imacron = 30;
itilde = 20;
};
Racute = {
imacron = 30;
itilde = 20;
};
Rcaron = {
imacron = 30;
itilde = 20;
};
S = {
imacron = 36;
itilde = 20;
};
Sacute = {
imacron = 36;
itilde = 20;
};
Scaron = {
imacron = 36;
itilde = 20;
};
Scedilla = {
imacron = 36;
itilde = 20;
};
T = {
abreve = -100;
adieresis = -60;
amacron = -75;
atilde = -100;
ebreve = -100;
edieresis = -60;
emacron = -75;
gbreve = -90;
ibreve = 45;
imacron = 80;
itilde = 50;
ntilde = -90;
odieresis = -60;
omacron = -80;
otilde = -100;
racute = -60;
scaron = -90;
udieresis = -60;
umacron = -80;
uni1EBD = -100;
utilde = -100;
ydieresis = -55;
};
Tcaron = {
abreve = -100;
adieresis = -60;
amacron = -75;
atilde = -100;
ebreve = -100;
edieresis = -60;
emacron = -75;
gbreve = -90;
ibreve = 45;
imacron = 80;
itilde = 50;
ntilde = -90;
odieresis = -60;
omacron = -80;
otilde = -100;
racute = -60;
scaron = -90;
udieresis = -60;
umacron = -80;
uni1EBD = -100;
utilde = -100;
ydieresis = -55;
};
Thorn = {
X = -70;
parenright = -50;
};
U = {
ibreve = 20;
imacron = 50;
itilde = 25;
};
Uacute = {
ibreve = 20;
imacron = 50;
itilde = 25;
};
Ubreve = {
ibreve = 20;
imacron = 50;
itilde = 25;
};
Ucircumflex = {
ibreve = 20;
imacron = 50;
itilde = 25;
};
Udieresis = {
ibreve = 20;
imacron = 50;
itilde = 25;
};
Ugrave = {
ibreve = 20;
imacron = 50;
itilde = 25;
};
Uhungarumlaut = {
ibreve = 20;
imacron = 50;
itilde = 25;
};
Umacron = {
ibreve = 20;
imacron = 50;
itilde = 25;
};
Uogonek = {
ibreve = 20;
imacron = 50;
itilde = 25;
};
Uring = {
ibreve = 20;
imacron = 50;
itilde = 25;
};
Utilde = {
ibreve = 20;
imacron = 50;
itilde = 25;
};
V = {
adieresis = -55;
edieresis = -55;
emacron = -65;
ibreve = 50;
icircumflex = 30;
imacron = 80;
itilde = 50;
odieresis = -55;
omacron = -70;
};
W = {
adieresis = -70;
edieresis = -70;
ibreve = 46;
icircumflex = 30;
imacron = 75;
itilde = 40;
odieresis = -70;
};
Wacute = {
adieresis = -70;
edieresis = -70;
ibreve = 46;
icircumflex = 30;
imacron = 75;
itilde = 40;
odieresis = -70;
};
Wcircumflex = {
adieresis = -70;
edieresis = -70;
ibreve = 46;
icircumflex = 30;
imacron = 75;
itilde = 40;
odieresis = -70;
};
Wdieresis = {
adieresis = -70;
edieresis = -70;
ibreve = 46;
icircumflex = 30;
imacron = 75;
itilde = 40;
odieresis = -70;
};
Wgrave = {
adieresis = -70;
edieresis = -70;
ibreve = 46;
icircumflex = 30;
imacron = 75;
itilde = 40;
odieresis = -70;
};
X = {
J = -15;
at = -44;
f = -30;
ibreve = 24;
imacron = 50;
itilde = 10;
multiply = -64;
question = -26;
v = -75;
x = -40;
};
Y = {
adieresis = -70;
amacron = -80;
edieresis = -70;
emacron = -90;
ibreve = 40;
icircumflex = 20;
imacron = 75;
itilde = 35;
odieresis = -70;
omacron = -90;
racute = -55;
scaron = -90;
udieresis = -70;
};
Yacute = {
adieresis = -70;
amacron = -80;
edieresis = -70;
emacron = -90;
ibreve = 40;
icircumflex = 20;
imacron = 75;
itilde = 35;
odieresis = -70;
omacron = -90;
racute = -55;
scaron = -90;
udieresis = -70;
};
Ycircumflex = {
adieresis = -70;
amacron = -80;
edieresis = -70;
emacron = -90;
ibreve = 40;
icircumflex = 20;
imacron = 75;
itilde = 35;
odieresis = -70;
omacron = -90;
racute = -55;
scaron = -90;
udieresis = -70;
};
Ydieresis = {
adieresis = -70;
amacron = -80;
edieresis = -70;
emacron = -90;
ibreve = 40;
icircumflex = 20;
imacron = 75;
itilde = 35;
odieresis = -70;
omacron = -90;
racute = -55;
scaron = -90;
udieresis = -70;
};
Ygrave = {
adieresis = -70;
amacron = -80;
edieresis = -70;
emacron = -90;
ibreve = 40;
icircumflex = 20;
imacron = 75;
itilde = 35;
odieresis = -70;
omacron = -90;
racute = -55;
scaron = -90;
udieresis = -70;
};
Z = {
ibreve = 34;
imacron = 60;
itilde = 36;
};
Zacute = {
ibreve = 34;
imacron = 60;
itilde = 36;
};
Zcaron = {
ibreve = 34;
imacron = 60;
itilde = 36;
};
Zdotaccent = {
ibreve = 34;
imacron = 60;
itilde = 36;
};
asterisk = {
J = -64;
at = -60;
exclam = -17;
imacron = 64;
itilde = 40;
questiondown = -86;
slash = -126;
};
at = {
X = -20;
asterisk = -106;
backslash = -89;
braceright = -51;
comma = -26;
greater = -40;
less = -39;
parenright = -86;
question = -66;
quotedblleft = -13;
quotedblright = -23;
quoteleft = -13;
quoteright = -23;
semicolon = -23;
slash = -34;
underscore = -40;
};
backslash = {
at = -39;
backslash = -124;
comma = 50;
question = -30;
quotedblbase = 54;
quotedblleft = -64;
quotedblright = -99;
quoteleft = -64;
quoteright = -99;
quotesinglbase = 54;
underscore = 31;
};
bar = {
imacron = 40;
itilde = 17;
};
bracketleft = {
imacron = 34;
};
bracketright = {
imacron = 60;
itilde = 31;
};
brokenbar = {
imacron = 40;
itilde = 17;
};
c = {
asterisk = -43;
backslash = -76;
parenright = -30;
question = -36;
v = -20;
x = -20;
};
cacute = {
asterisk = -43;
backslash = -76;
parenright = -30;
question = -36;
v = -22;
};
ccaron = {
asterisk = -43;
backslash = -76;
parenright = -30;
question = -36;
v = -22;
};
ccedilla = {
asterisk = -43;
backslash = -76;
parenright = -30;
question = -36;
v = -22;
};
cdotaccent = {
asterisk = -43;
backslash = -76;
parenright = -30;
question = -36;
v = -22;
};
comma = {
backslash = -84;
question = -17;
v = -56;
};
d = {
imacron = 40;
};
dcaron = {
questiondown = -29;
};
dcroat = {
imacron = 77;
};
dollar = {
imacron = 36;
itilde = 20;
};
eth = {
imacron = 30;
};
exclam = {
asterisk = -23;
igrave = 44;
imacron = 50;
itilde = 11;
};
f = {
aacute = -17;
abreve = -17;
acircumflex = -17;
adieresis = -17;
aeacute = -17;
agrave = -17;
amacron = -17;
aogonek = -17;
aring = -17;
atilde = -17;
ibreve = 24;
igrave = 40;
imacron = 60;
itilde = 41;
};
fl = {
imacron = 40;
};
germandbls = {
asterisk = -60;
v = -60;
};
greater = {
at = -43;
parenright = -60;
};
i = {
lslash = 10;
};
iacute = {
asterisk = 17;
b = 60;
backslash = 76;
braceright = 17;
bracketleft = 60;
bracketright = 34;
exclam = 44;
f = 40;
h = 60;
idieresis = 80;
imacron = 60;
itilde = 63;
k = 60;
l = 60;
lacute = 60;
lcaron = 60;
ldot = 60;
lslash = 40;
parenright = 23;
question = 54;
quotedblleft = 49;
quotedblright = 40;
quoteleft = 49;
quoteright = 40;
uni0137 = 60;
uni013C = 60;
};
ibreve = {
backslash = 56;
question = 40;
};
imacron = {
B = 40;
D = 40;
Dcaron = 40;
E = 40;
Eacute = 40;
Ebreve = 40;
Ecaron = 40;
Ecircumflex = 40;
Edieresis = 40;
Edotaccent = 40;
Egrave = 40;
Emacron = 40;
Eogonek = 40;
F = 40;
H = 40;
I = 40;
Iacute = 40;
Ibreve = 40;
Icircumflex = 40;
Idieresis = 40;
Idotaccent = 40;
Igrave = 40;
Imacron = 40;
Itilde = 40;
K = 40;
L = 40;
Lacute = 40;
Lcaron = 40;
Ldot = 40;
M = 40;
N = 40;
Nacute = 40;
Ncaron = 40;
Ntilde = 40;
P = 40;
R = 40;
Racute = 40;
Rcaron = 40;
Thorn = 40;
asterisk = 70;
b = 60;
backslash = 89;
bar = 40;
bracketleft = 60;
bracketright = 34;
brokenbar = 40;
exclam = 70;
f = 40;
germandbls = 60;
h = 60;
k = 60;
l = 60;
lacute = 60;
lcaron = 60;
ldot = 60;
lslash = 64;
question = 69;
quotedblleft = 69;
quotedblright = 70;
quoteleft = 69;
quoteright = 70;
thorn = 60;
uni0136 = 40;
uni0137 = 60;
uni013B = 40;
uni013C = 60;
uni0145 = 40;
uni0156 = 40;
uni02B9 = 100;
uni02BA = 100;
uni1EBC = 40;
uni20A8 = 40;
z = 40;
zacute = 40;
zcaron = 40;
zdotaccent = 40;
};
itilde = {
asterisk = 40;
b = 23;
bracketleft = 31;
exclam = 17;
f = 30;
h = 23;
j = 36;
k = 23;
l = 23;
lacute = 23;
lcaron = 23;
ldot = 23;
question = 40;
quotedblleft = 30;
quotedblright = 30;
quoteleft = 30;
quoteright = 30;
uni0137 = 23;
uni013C = 23;
uni02B9 = 60;
uni02BA = 60;
};
j = {
itilde = 40;
};
l = {
imacron = 40;
};
lacute = {
imacron = 40;
};
lcaron = {
b = 140;
h = 140;
k = 140;
l = 140;
questiondown = -29;
};
less = {
at = -50;
parenright = -46;
};
lslash = {
i = 10;
imacron = 60;
questiondown = 26;
v = 20;
};
multiply = {
X = -29;
};
parenleft = {
at = -79;
};
plus = {
slash = -34;
};
q = {
backslash = -40;
j = 30;
};
question = {
J = -29;
X = -30;
at = -29;
comma = -73;
ibreve = 30;
igrave = 40;
imacron = 56;
itilde = 41;
parenright = -87;
questiondown = -89;
quotedblbase = -41;
quotesinglbase = -41;
slash = -70;
underscore = -66;
};
questiondown = {
asterisk = -51;
backslash = -50;
question = -51;
quotedblbase = 40;
quotesinglbase = 40;
v = -9;
};
quotedbl = {
ibreve = 24;
imacron = 73;
itilde = 30;
};
quotedblbase = {
backslash = -120;
question = -30;
};
quotedblleft = {
J = -76;
at = -44;
ibreve = 9;
imacron = 59;
itilde = 26;
questiondown = -71;
slash = -93;
};
quotedblright = {
ibreve = 24;
imacron = 73;
itilde = 30;
};
quoteleft = {
J = -76;
at = -44;
ibreve = 9;
imacron = 59;
itilde = 26;
questiondown = -71;
slash = -93;
};
quoteright = {
ibreve = 24;
imacron = 73;
itilde = 30;
};
quotesinglbase = {
backslash = -120;
question = -30;
};
quotesingle = {
ibreve = 24;
imacron = 73;
itilde = 30;
};
sacute = {
v = -39;
};
scaron = {
v = -39;
};
scedilla = {
v = -39;
};
slash = {
B = 46;
D = 46;
Dcaron = 46;
E = 46;
Eacute = 46;
Ebreve = 46;
Ecaron = 46;
Ecircumflex = 46;
Edieresis = 46;
Edotaccent = 46;
Egrave = 46;
Emacron = 46;
Eogonek = 46;
F = 46;
H = 46;
I = 46;
Iacute = 46;
Ibreve = 46;
Icircumflex = 60;
Idieresis = 56;
Idotaccent = 46;
Igrave = 40;
Imacron = 90;
Itilde = 46;
J = -34;
K = 46;
L = 46;
Lacute = 46;
Lcaron = 46;
Ldot = 46;
M = 46;
N = 46;
Nacute = 46;
Ncaron = 46;
Ntilde = 46;
Oslash = -29;
P = 46;
R = 46;
Racute = 46;
Rcaron = 46;
Thorn = 46;
at = -64;
bar = 46;
brokenbar = 46;
comma = -46;
ibreve = 40;
icircumflex = 41;
idieresis = 37;
igrave = 84;
imacron = 80;
plus = -47;
questiondown = -54;
quotedblbase = -38;
quotesinglbase = -38;
slash = -119;
underscore = -126;
uni0136 = 46;
uni013B = 46;
uni0145 = 46;
uni0156 = 46;
uni1EBC = 46;
uni20A8 = 46;
};
underscore = {
asterisk = -94;
at = -66;
backslash = -154;
j = 34;
question = -60;
underscore = -110;
};
uni0122 = {
imacron = 30;
};
uni0136 = {
ibreve = 20;
icircumflex = -10;
imacron = 50;
l = -5;
};
uni013B = {
V = -80;
};
uni013C = {
imacron = 40;
};
uni0145 = {
imacron = 40;
itilde = 17;
};
uni0156 = {
imacron = 30;
itilde = 20;
};
uni0162 = {
abreve = -100;
adieresis = -60;
amacron = -75;
atilde = -100;
ebreve = -100;
edieresis = -60;
emacron = -75;
gbreve = -90;
ibreve = 45;
imacron = 80;
itilde = 50;
ntilde = -90;
odieresis = -60;
omacron = -80;
otilde = -100;
racute = -60;
scaron = -90;
udieresis = -60;
umacron = -80;
uni1EBD = -100;
utilde = -100;
ydieresis = -55;
};
uni0218 = {
imacron = 36;
itilde = 20;
};
uni0219 = {
v = -39;
};
uni021A = {
abreve = -100;
adieresis = -60;
amacron = -75;
atilde = -100;
ebreve = -100;
edieresis = -60;
emacron = -75;
gbreve = -90;
ibreve = 45;
imacron = 80;
itilde = 50;
ntilde = -90;
odieresis = -60;
omacron = -80;
otilde = -100;
racute = -60;
scaron = -90;
udieresis = -60;
umacron = -80;
uni1EBD = -100;
utilde = -100;
ydieresis = -55;
};
uni02B9 = {
J = -47;
at = -50;
backslash = 20;
imacron = 100;
itilde = 60;
};
uni02BA = {
J = -47;
at = -50;
backslash = 20;
imacron = 100;
itilde = 60;
};
uni1EBC = {
ibreve = 24;
imacron = 56;
itilde = 41;
v = -15;
};
uni1EF8 = {
adieresis = -70;
amacron = -80;
edieresis = -70;
emacron = -90;
ibreve = 40;
icircumflex = 20;
imacron = 75;
itilde = 35;
odieresis = -70;
omacron = -90;
racute = -55;
scaron = -90;
udieresis = -70;
};
uni20A8 = {
v = -39;
};
v = {
at = -30;
comma = -40;
f = 20;
lslash = 10;
questiondown = -13;
};
z = {
imacron = 40;
};
zacute = {
imacron = 40;
};
zcaron = {
imacron = 40;
};
zdotaccent = {
imacron = 40;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright 2022 The Rethink Sans Project Authors (https://github.com/hans-thiessen/Rethink-Sans)";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "The Rethink Sans project authors (Hans Thiessen). DM Sans designed by Colophon Foundry.";
}
);
},
{
key = designerURL;
value = "https://www.hansthiessen.com/";
},
{
key = licenses;
values = (
{
language = ENG;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL";
}
);
},
{
key = licenseURL;
value = "https://scripts.sil.org/OFL";
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Rethink Communications LLC";
}
);
},
{
key = manufacturerURL;
value = "https://rethinkideas.com/";
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 1000;
versionMajor = 1;
versionMinor = 1;
}

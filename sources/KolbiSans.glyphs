{
.appVersion = "3420";
.formatVersion = 3;
customParameters = (
{
name = panose;
value = (
0,
0,
0,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
4,
5,
6,
7,
9,
29,
31,
32,
33,
35,
36,
37,
38,
42,
45,
47,
60,
62
);
},
{
name = fsType;
value = (
);
},
{
name = glyphOrder;
value = (
.notdef,
CR,
space,
A,
Aacute,
Abreve,
uni01CD,
Acircumflex,
Adieresis,
Agrave,
Amacron,
Aogonek,
Aring,
Atilde,
AE,
AEacute,
B,
C,
Cacute,
Ccaron,
Ccedilla,
Cdotaccent,
D,
Dcaron,
Dcroat,
Eth,
E,
Eacute,
Ebreve,
Ecaron,
Ecircumflex,
Edieresis,
Edotaccent,
Egrave,
Emacron,
Eogonek,
uni018E,
uni1EBC,
uni018F,
F,
G,
Gbreve,
uni0122,
Gdotaccent,
H,
Hbar,
I,
IJ,
Iacute,
Ibreve,
Icircumflex,
Idieresis,
Idotaccent,
Igrave,
Imacron,
Iogonek,
Itilde,
J,
uni004A0301,
K,
uni0136,
L,
Lacute,
Lcaron,
uni013B,
Ldot,
Lslash,
M,
N,
Nacute,
Ncaron,
uni0145,
Ntilde,
Eng,
O,
Oacute,
Obreve,
Ocircumflex,
Odieresis,
Ograve,
Ohungarumlaut,
Omacron,
Oslash,
Otilde,
OE,
P,
Thorn,
Q,
R,
Racute,
Rcaron,
uni0156,
S,
Sacute,
Scaron,
Scedilla,
uni0218,
uni1E9E,
T,
Tcaron,
uni0162,
uni021A,
U,
Uacute,
Ubreve,
Ucircumflex,
Udieresis,
Ugrave,
Uhungarumlaut,
Umacron,
Uogonek,
Uring,
Utilde,
V,
W,
Wacute,
Wcircumflex,
Wdieresis,
Wgrave,
X,
Y,
Yacute,
Ycircumflex,
Ydieresis,
Ygrave,
uni1EF8,
Z,
Zacute,
Zcaron,
Zdotaccent,
uniA78B,
a,
aacute,
abreve,
uni01CE,
acircumflex,
adieresis,
agrave,
amacron,
aogonek,
aring,
atilde,
ae,
aeacute,
b,
c,
cacute,
ccaron,
ccedilla,
cdotaccent,
d,
dcaron,
dcroat,
eth,
e,
eacute,
ebreve,
ecaron,
ecircumflex,
edieresis,
edotaccent,
egrave,
emacron,
eogonek,
uni1EBD,
uni0259,
f,
g,
gbreve,
uni0123,
gdotaccent,
h,
hbar,
i,
dotlessi,
iacute,
ibreve,
icircumflex,
idieresis,
i.loclTRK,
igrave,
imacron,
iogonek,
itilde,
ij,
j,
uni0237,
uni006A0301,
k,
uni0137,
l,
lacute,
lcaron,
uni013C,
ldot,
lslash,
m,
n,
nacute,
ncaron,
uni0146,
ntilde,
eng,
o,
oacute,
obreve,
ocircumflex,
odieresis,
ograve,
ohungarumlaut,
omacron,
oslash,
otilde,
oe,
p,
thorn,
q,
r,
racute,
rcaron,
uni0157,
s,
sacute,
scaron,
scedilla,
uni0219,
germandbls,
t,
tcaron,
uni0163,
uni021B,
u,
uacute,
ubreve,
ucircumflex,
udieresis,
ugrave,
uhungarumlaut,
umacron,
uogonek,
uring,
utilde,
v,
w,
wacute,
wcircumflex,
wdieresis,
wgrave,
x,
y,
yacute,
ycircumflex,
ydieresis,
ygrave,
uni1EF9,
z,
zacute,
zcaron,
zdotaccent,
uniA78C,
fi,
fl,
ordfeminine,
ordmasculine,
uni042F,
uni0394,
Pi,
uni03A9,
uni03BC,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
uni24EA,
uni2780,
uni2781,
uni2782,
uni2783,
uni2784,
uni2785,
uni2786,
uni2787,
uni2788,
uni278A,
uni278B,
uni278C,
uni278D,
uni278E,
uni278F,
uni2790,
uni2791,
uni2792,
uni24EA.solid,
zero.dnom,
one.dnom,
two.dnom,
three.dnom,
four.dnom,
five.dnom,
six.dnom,
seven.dnom,
eight.dnom,
nine.dnom,
zero.numr,
one.numr,
two.numr,
three.numr,
four.numr,
five.numr,
six.numr,
seven.numr,
eight.numr,
nine.numr,
fraction,
onehalf,
onequarter,
threequarters,
oneeighth,
threeeighths,
fiveeighths,
seveneighths,
uni2080,
uni2081,
uni2082,
uni2083,
uni2084,
uni2085,
uni2086,
uni2087,
uni2088,
uni2089,
uni2070,
uni00B9,
uni00B2,
uni00B3,
uni2074,
uni2075,
uni2076,
uni2077,
uni2078,
uni2079,
uni00A0,
period,
comma,
colon,
semicolon,
ellipsis,
exclam,
exclamdown,
question,
questiondown,
periodcentered,
bullet,
asterisk,
numbersign,
slash,
backslash,
periodcentered.loclCAT,
periodcentered.loclCAT.case,
hyphen,
endash,
emdash,
underscore,
parenleft,
parenright,
braceleft,
braceright,
bracketleft,
bracketright,
quotesinglbase,
quotedblbase,
quotedblleft,
quotedblright,
quoteleft,
quoteright,
guillemotleft,
guillemotright,
guilsinglleft,
guilsinglright,
quotedbl,
quotesingle,
florin,
at,
ampersand,
paragraph,
section,
copyright,
registered,
trademark,
degree,
bar,
brokenbar,
dagger,
uni2113,
daggerdbl,
estimated,
at.case,
registered.case,
uni20BF,
cent,
currency,
dollar,
Euro,
uni20BD,
uni20A8,
sterling,
yen,
cent.001,
uni2215,
plus,
minus,
multiply,
divide,
equal,
notequal,
greater,
less,
greaterequal,
lessequal,
plusminus,
approxequal,
asciitilde,
logicalnot,
asciicircum,
infinity,
integral,
uni2126,
uni2206,
product,
summation,
radical,
uni00B5,
partialdiff,
percent,
perthousand,
plus.case,
arrowup,
arrowright,
arrowdown,
arrowleft,
lozenge,
uni0308,
uni0307,
gravecomb,
acutecomb,
uni030B,
uni030C.alt,
uni0302,
uni030C,
uni0306,
uni030A,
tildecomb,
uni0304,
uni0312,
uni0326,
uni0327,
uni0328,
uni0308.case,
uni0307.case,
gravecomb.case,
acutecomb.case,
uni030B.case,
uni030C.alt.case,
uni0302.case,
uni030C.case,
uni0306.case,
uni030A.case,
tildecomb.case,
uni0304.case,
uni0327.case,
uni0328.case,
uni0308.narrow,
dieresis,
dotaccent,
grave,
acute,
hungarumlaut,
circumflex,
caron,
breve,
ring,
tilde,
macron,
cedilla,
ogonek,
uni02BA,
uni02B9,
uniE000,
uniE001,
uniE002,
uniE003,
uniE004,
uniE005,
REbackwards,
RethinkWordmark,
Rlogobig
);
}
);
date = "2021-03-04 17:58:23 +0000";
familyName = "Kolbi Sans";
featurePrefixes = (
{
code = "lookup SUB_19 {
	sub i by dotlessi;
	sub j by uni0237;
	sub uni0308 by uni0308.case;
	sub uni0307 by uni0307.case;
	sub gravecomb by gravecomb.case;
	sub acutecomb by acutecomb.case;
	sub uni030B by uni030B.case;
	sub uni030C.alt by uni030C.alt.case;
	sub uni0302 by uni0302.case;
	sub uni030C by uni030C.case;
	sub uni0306 by uni0306.case;
	sub uni030A by uni030A.case;
	sub tildecomb by tildecomb.case;
	sub uni0304 by uni0304.case;
	sub uni0327 by uni0327.case;
	sub uni0328 by uni0328.case;
} SUB_19;
lookup SUB_20 {
	sub iogonek by dotlessi uni0328;
} SUB_20;
lookup SUB_21 {
	sub uni0308 by uni0308.case;
	sub uni0307 by uni0307.case;
	sub gravecomb by gravecomb.case;
	sub acutecomb by acutecomb.case;
	sub uni030B by uni030B.case;
	sub uni030C.alt by uni030C.alt.case;
	sub uni0302 by uni0302.case;
	sub uni030C by uni030C.case;
	sub uni0306 by uni0306.case;
	sub uni030A by uni030A.case;
	sub tildecomb by tildecomb.case;
	sub uni0304 by uni0304.case;
	sub uni0327 by uni0327.case;
	sub uni0328 by uni0328.case;
} SUB_21;
lookup SUB_22 {
	sub periodcentered by periodcentered.loclCAT;
} SUB_22;
lookup SUB_23 {
	sub J by uni004A0301;
	sub j by uni006A0301;
	sub periodcentered by periodcentered.loclCAT.case;
} SUB_23;
lookup SUB_24 {
	sub zero.numr by zero.dnom;
	sub one.numr by one.dnom;
	sub two.numr by two.dnom;
	sub three.numr by three.dnom;
	sub four.numr by four.dnom;
	sub five.numr by five.dnom;
	sub six.numr by six.dnom;
	sub seven.numr by seven.dnom;
	sub eight.numr by eight.dnom;
	sub nine.numr by nine.dnom;
} SUB_24;
lookup SUB_25 {
	sub A by ordfeminine;
	sub O by ordmasculine;
	sub a by ordfeminine;
	sub o by ordmasculine;
} SUB_25;
";
name = Prefix;
}
);
features = (
{
automatic = 1;
code = "";
tag = aalt;
},
{
code = "script DFLT;
language dflt;
lookup SUB_1 {
	@SUB_1_0_LA_0 = [uni0308 uni0307 gravecomb acutecomb uni030B uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0312];
	sub [i j]' lookup SUB_19 @SUB_1_0_LA_0;
	@SUB_1_1_LA_0 = [uni0308 uni0307 gravecomb acutecomb uni030B uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0312];
	sub [i j]' lookup SUB_19 [uni0327 uni0328] @SUB_1_1_LA_0;
	@SUB_1_2_BT_0 = [uni0308 uni0307 gravecomb acutecomb uni030B uni030C.alt uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0327 uni0328];
	@SUB_1_2_1 = [uni0308 uni0307 gravecomb acutecomb uni030B uni030C.alt uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0327 uni0328];
	sub @SUB_1_2_BT_0 @SUB_1_2_1' lookup SUB_19;
	@SUB_1_3_BT_0 = [A Aacute Abreve uni01CD Acircumflex Adieresis Agrave Amacron Aogonek Aring Atilde AE AEacute B C Cacute Ccaron Ccedilla Cdotaccent D Dcaron Dcroat Eth E Eacute Ebreve Ecaron Ecircumflex Edieresis Edotaccent Egrave Emacron Eogonek uni018E uni1EBC uni018F F G Gbreve uni0122 Gdotaccent H Hbar I IJ Iacute Ibreve Icircumflex Idieresis Idotaccent Igrave Imacron Iogonek Itilde J uni004A0301 K uni0136 L Lacute Lcaron uni013B Ldot Lslash M N Nacute Ncaron uni0145 Ntilde Eng O Oacute Obreve Ocircumflex Odieresis Ograve Ohungarumlaut Omacron Oslash Otilde OE P Thorn Q R Racute Rcaron uni0156 S Sacute Scaron Scedilla uni0218 uni1E9E T Tcaron uni0162 uni021A U Uacute Ubreve Ucircumflex Udieresis Ugrave Uhungarumlaut Umacron Uogonek Uring Utilde V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ygrave uni1EF8 Z Zacute Zcaron Zdotaccent uniA78B uni042F uni0394 Pi uni03A9];
	@SUB_1_3_1 = [uni0308 uni0307 gravecomb acutecomb uni030B uni030C.alt uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0327 uni0328];
	sub @SUB_1_3_BT_0 @SUB_1_3_1' lookup SUB_19;
	@SUB_1_4_LA_0 = [uni0308 uni0307 gravecomb acutecomb uni030B uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0312];
	sub iogonek' lookup SUB_20 @SUB_1_4_LA_0;
} SUB_1;
lookup SUB_2 {
	@SUB_2_0_0 = [uni0308 uni0307 gravecomb acutecomb uni030B uni030C.alt uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0327 uni0328];
	@SUB_2_0_LA_1 = [uni0308.case uni0307.case gravecomb.case acutecomb.case uni030B.case uni030C.alt.case uni0302.case uni030C.case uni0306.case uni030A.case tildecomb.case uni0304.case uni0327.case uni0328.case];
	sub @SUB_2_0_0' lookup SUB_21 @SUB_2_0_LA_1;
	@SUB_2_1_BT_0 = [uni0308.case uni0307.case gravecomb.case acutecomb.case uni030B.case uni030C.alt.case uni0302.case uni030C.case uni0306.case uni030A.case tildecomb.case uni0304.case uni0327.case uni0328.case];
	@SUB_2_1_1 = [uni0308 uni0307 gravecomb acutecomb uni030B uni030C.alt uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0327 uni0328];
	sub @SUB_2_1_BT_0 @SUB_2_1_1' lookup SUB_21;
} SUB_2;
lookup SUB_3 {
	sub Ldot by L periodcentered.loclCAT.case;
	sub fi by f i;
	sub fl by f l;
} SUB_3;
script latn;
language dflt;
lookup SUB_1;
lookup SUB_2;
lookup SUB_3;
language AZE;
lookup SUB_1;
lookup SUB_2;
lookup SUB_3;
language CAT;
lookup SUB_1;
lookup SUB_2;
lookup SUB_3;
language CRT;
lookup SUB_1;
lookup SUB_2;
lookup SUB_3;
language KAZ;
lookup SUB_1;
lookup SUB_2;
lookup SUB_3;
language MOL;
lookup SUB_1;
lookup SUB_2;
lookup SUB_3;
language NLD;
lookup SUB_1;
lookup SUB_2;
lookup SUB_3;
language ROM;
lookup SUB_1;
lookup SUB_2;
lookup SUB_3;
language TAT;
lookup SUB_1;
lookup SUB_2;
lookup SUB_3;
language TRK;
lookup SUB_1;
lookup SUB_2;
lookup SUB_3;
";
tag = ccmp;
},
{
code = "script latn;
language AZE;
lookup SUB_4 {
	sub i by i.loclTRK;
} SUB_4;
language CRT;
lookup SUB_4;
language KAZ;
lookup SUB_4;
language TAT;
lookup SUB_4;
language TRK;
lookup SUB_4;
language MOL;
lookup SUB_5 {
	sub Scedilla by uni0218;
	sub uni0162 by uni021A;
	sub scedilla by uni0219;
	sub uni0163 by uni021B;
} SUB_5;
language ROM;
lookup SUB_5;
language CAT;
lookup SUB_6 {
	sub L periodcentered' lookup SUB_23 L;
	sub l periodcentered' lookup SUB_22 l;
} SUB_6;
language NLD;
lookup SUB_7 {
	sub Iacute J' lookup SUB_23;
	sub iacute j' lookup SUB_23;
} SUB_7;
";
tag = locl;
},
{
code = "script DFLT;
language dflt;
lookup SUB_8 {
	sub zero by uni2080;
	sub one by uni2081;
	sub two by uni2082;
	sub three by uni2083;
	sub four by uni2084;
	sub five by uni2085;
	sub six by uni2086;
	sub seven by uni2087;
	sub eight by uni2088;
	sub nine by uni2089;
} SUB_8;
script latn;
language dflt;
lookup SUB_8;
language AZE;
lookup SUB_8;
language CAT;
lookup SUB_8;
language CRT;
lookup SUB_8;
language KAZ;
lookup SUB_8;
language MOL;
lookup SUB_8;
language NLD;
lookup SUB_8;
language ROM;
lookup SUB_8;
language TAT;
lookup SUB_8;
language TRK;
lookup SUB_8;
";
tag = subs;
},
{
code = "script DFLT;
language dflt;
lookup SUB_9 {
	sub zero by uni2080;
	sub one by uni2081;
	sub two by uni2082;
	sub three by uni2083;
	sub four by uni2084;
	sub five by uni2085;
	sub six by uni2086;
	sub seven by uni2087;
	sub eight by uni2088;
	sub nine by uni2089;
} SUB_9;
script latn;
language dflt;
lookup SUB_9;
language AZE;
lookup SUB_9;
language CAT;
lookup SUB_9;
language CRT;
lookup SUB_9;
language KAZ;
lookup SUB_9;
language MOL;
lookup SUB_9;
language NLD;
lookup SUB_9;
language ROM;
lookup SUB_9;
language TAT;
lookup SUB_9;
language TRK;
lookup SUB_9;
";
tag = sinf;
},
{
code = "script DFLT;
language dflt;
lookup SUB_10 {
	sub zero by uni2070;
	sub one by uni00B9;
	sub two by uni00B2;
	sub three by uni00B3;
	sub four by uni2074;
	sub five by uni2075;
	sub six by uni2076;
	sub seven by uni2077;
	sub eight by uni2078;
	sub nine by uni2079;
} SUB_10;
script latn;
language dflt;
lookup SUB_10;
language AZE;
lookup SUB_10;
language CAT;
lookup SUB_10;
language CRT;
lookup SUB_10;
language KAZ;
lookup SUB_10;
language MOL;
lookup SUB_10;
language NLD;
lookup SUB_10;
language ROM;
lookup SUB_10;
language TAT;
lookup SUB_10;
language TRK;
lookup SUB_10;
";
tag = sups;
},
{
code = "script DFLT;
language dflt;
lookup SUB_11 {
	sub zero by zero.numr;
	sub one by one.numr;
	sub two by two.numr;
	sub three by three.numr;
	sub four by four.numr;
	sub five by five.numr;
	sub six by six.numr;
	sub seven by seven.numr;
	sub eight by eight.numr;
	sub nine by nine.numr;
} SUB_11;
script latn;
language dflt;
lookup SUB_11;
language AZE;
lookup SUB_11;
language CAT;
lookup SUB_11;
language CRT;
lookup SUB_11;
language KAZ;
lookup SUB_11;
language MOL;
lookup SUB_11;
language NLD;
lookup SUB_11;
language ROM;
lookup SUB_11;
language TAT;
lookup SUB_11;
language TRK;
lookup SUB_11;
";
tag = numr;
},
{
code = "script DFLT;
language dflt;
lookup SUB_12 {
	sub zero by zero.dnom;
	sub one by one.dnom;
	sub two by two.dnom;
	sub three by three.dnom;
	sub four by four.dnom;
	sub five by five.dnom;
	sub six by six.dnom;
	sub seven by seven.dnom;
	sub eight by eight.dnom;
	sub nine by nine.dnom;
} SUB_12;
script latn;
language dflt;
lookup SUB_12;
language AZE;
lookup SUB_12;
language CAT;
lookup SUB_12;
language CRT;
lookup SUB_12;
language KAZ;
lookup SUB_12;
language MOL;
lookup SUB_12;
language NLD;
lookup SUB_12;
language ROM;
lookup SUB_12;
language TAT;
lookup SUB_12;
language TRK;
lookup SUB_12;
";
tag = dnom;
},
{
code = "script DFLT;
language dflt;
lookup SUB_13 {
	sub slash by fraction;
} SUB_13;
lookup SUB_14 {
	sub zero by zero.numr;
	sub one by one.numr;
	sub two by two.numr;
	sub three by three.numr;
	sub four by four.numr;
	sub five by five.numr;
	sub six by six.numr;
	sub seven by seven.numr;
	sub eight by eight.numr;
	sub nine by nine.numr;
} SUB_14;
lookup SUB_15 {
	@SUB_15_0_0 = [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
	sub fraction @SUB_15_0_0' lookup SUB_24;
	@SUB_15_1_BT_0 = [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
	@SUB_15_1_1 = [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
	sub @SUB_15_1_BT_0 @SUB_15_1_1' lookup SUB_24;
} SUB_15;
script latn;
language dflt;
lookup SUB_13;
lookup SUB_14;
lookup SUB_15;
language AZE;
lookup SUB_13;
lookup SUB_14;
lookup SUB_15;
language CAT;
lookup SUB_13;
lookup SUB_14;
lookup SUB_15;
language CRT;
lookup SUB_13;
lookup SUB_14;
lookup SUB_15;
language KAZ;
lookup SUB_13;
lookup SUB_14;
lookup SUB_15;
language MOL;
lookup SUB_13;
lookup SUB_14;
lookup SUB_15;
language NLD;
lookup SUB_13;
lookup SUB_14;
lookup SUB_15;
language ROM;
lookup SUB_13;
lookup SUB_14;
lookup SUB_15;
language TAT;
lookup SUB_13;
lookup SUB_14;
lookup SUB_15;
language TRK;
lookup SUB_13;
lookup SUB_14;
lookup SUB_15;
";
tag = frac;
},
{
code = "script DFLT;
language dflt;
lookup SUB_16 {
	lookupflag IgnoreMarks;
	sub E less by uni018E;
	sub R E less by REbackwards;
	sub R less E by REbackwards;
	sub R greater by RethinkWordmark;
	sub R less by uni042F;
	sub f i by fi;
	sub f l by fl;
	sub hyphen hyphen hyphen greater by arrowdown;
	sub hyphen hyphen greater by arrowright;
	sub parenleft R parenright by Rlogobig;
	sub parenleft zero parenright by uni24EA;
	sub parenleft one parenright by uni2780;
	sub parenleft two parenright by uni2781;
	sub parenleft three parenright by uni2782;
	sub parenleft four parenright by uni2783;
	sub parenleft five parenright by uni2784;
	sub parenleft six parenright by uni2785;
	sub parenleft seven parenright by uni2786;
	sub parenleft eight parenright by uni2787;
	sub parenleft nine parenright by uni2788;
	sub braceleft zero braceright by uni24EA.solid;
	sub braceleft one braceright by uni278A;
	sub braceleft two braceright by uni278B;
	sub braceleft three braceright by uni278C;
	sub braceleft four braceright by uni278D;
	sub braceleft five braceright by uni278E;
	sub braceleft six braceright by uni278F;
	sub braceleft seven braceright by uni2790;
	sub braceleft eight braceright by uni2791;
	sub braceleft nine braceright by uni2792;
	sub registered plus by registered.case;
	sub less hyphen hyphen hyphen by arrowup;
	sub less hyphen hyphen by arrowleft;
} SUB_16;
script latn;
language dflt;
lookup SUB_16;
language AZE;
lookup SUB_16;
language CAT;
lookup SUB_16;
language CRT;
lookup SUB_16;
language KAZ;
lookup SUB_16;
language MOL;
lookup SUB_16;
language NLD;
lookup SUB_16;
language ROM;
lookup SUB_16;
language TAT;
lookup SUB_16;
language TRK;
lookup SUB_16;
";
tag = liga;
},
{
code = "script DFLT;
language dflt;
lookup SUB_17 {
	@SUB_17_0_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_17_0_BT_0 [A a]' lookup SUB_25;
	@SUB_17_1_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_17_1_BT_0 [O o]' lookup SUB_25;
} SUB_17;
script latn;
language dflt;
lookup SUB_17;
language AZE;
lookup SUB_17;
language CAT;
lookup SUB_17;
language CRT;
lookup SUB_17;
language KAZ;
lookup SUB_17;
language MOL;
lookup SUB_17;
language NLD;
lookup SUB_17;
language ROM;
lookup SUB_17;
language TAT;
lookup SUB_17;
language TRK;
lookup SUB_17;
";
tag = ordn;
},
{
code = "script DFLT;
language dflt;
lookup SUB_18 {
	sub periodcentered.loclCAT by periodcentered.loclCAT.case;
	sub at by at.case;
	sub registered by registered.case;
	sub plus by plus.case;
	sub uni0308 by uni0308.case;
	sub uni0307 by uni0307.case;
	sub gravecomb by gravecomb.case;
	sub acutecomb by acutecomb.case;
	sub uni030B by uni030B.case;
	sub uni030C.alt by uni030C.alt.case;
	sub uni0302 by uni0302.case;
	sub uni030C by uni030C.case;
	sub uni0306 by uni0306.case;
	sub uni030A by uni030A.case;
	sub tildecomb by tildecomb.case;
	sub uni0304 by uni0304.case;
	sub uni0327 by uni0327.case;
	sub uni0328 by uni0328.case;
} SUB_18;
script latn;
language dflt;
lookup SUB_18;
language AZE;
lookup SUB_18;
language CAT;
lookup SUB_18;
language CRT;
lookup SUB_18;
language KAZ;
lookup SUB_18;
language MOL;
lookup SUB_18;
language NLD;
lookup SUB_18;
language ROM;
lookup SUB_18;
language TAT;
lookup SUB_18;
language TRK;
lookup SUB_18;
";
tag = case;
},
{
code = "script DFLT;
language dflt;
lookup POS_2 {
	markClass uni0326 <anchor 56 0> @POS_2_0_MARK_0;
	markClass uni0327 <anchor 84 0> @POS_2_0_MARK_0;
	markClass uni0327.case <anchor 82 0> @POS_2_0_MARK_0;
	markClass uni0308 <anchor 171 496> @POS_2_0_MARK_1;
	markClass uni0307 <anchor 71 496> @POS_2_0_MARK_1;
	markClass gravecomb <anchor 109 496> @POS_2_0_MARK_1;
	markClass acutecomb <anchor 109 496> @POS_2_0_MARK_1;
	markClass uni030B <anchor 132 496> @POS_2_0_MARK_1;
	markClass uni0302 <anchor 142 496> @POS_2_0_MARK_1;
	markClass uni030C <anchor 142 496> @POS_2_0_MARK_1;
	markClass uni0306 <anchor 149 496> @POS_2_0_MARK_1;
	markClass uni030A <anchor 110 496> @POS_2_0_MARK_1;
	markClass tildecomb <anchor 164 496> @POS_2_0_MARK_1;
	markClass uni0304 <anchor 176 496> @POS_2_0_MARK_1;
	markClass uni0312 <anchor 58 496> @POS_2_0_MARK_1;
	markClass uni0308.case <anchor 171 700> @POS_2_0_MARK_1;
	markClass uni0307.case <anchor 71 700> @POS_2_0_MARK_1;
	markClass gravecomb.case <anchor 109 700> @POS_2_0_MARK_1;
	markClass acutecomb.case <anchor 109 700> @POS_2_0_MARK_1;
	markClass uni030B.case <anchor 162 700> @POS_2_0_MARK_1;
	markClass uni0302.case <anchor 142 700> @POS_2_0_MARK_1;
	markClass uni030C.case <anchor 142 700> @POS_2_0_MARK_1;
	markClass uni0306.case <anchor 149 700> @POS_2_0_MARK_1;
	markClass uni030A.case <anchor 110 700> @POS_2_0_MARK_1;
	markClass tildecomb.case <anchor 164 700> @POS_2_0_MARK_1;
	markClass uni0304.case <anchor 176 700> @POS_2_0_MARK_1;
	markClass uni0308.narrow <anchor 171 496> @POS_2_0_MARK_1;
	pos base cent <anchor 380 6> mark @POS_2_0_MARK_0 <anchor 379 694> mark @POS_2_0_MARK_1;
	pos base uni20A8 <anchor 826 0> mark @POS_2_0_MARK_0 <anchor 819 496> mark @POS_2_0_MARK_1;
} POS_2;
lookup POS_3 {
	markClass uni0326 <anchor 56 0> @POS_3_0_MARK_0;
	markClass uni0327 <anchor 84 0> @POS_3_0_MARK_0;
	markClass uni0327.case <anchor 82 0> @POS_3_0_MARK_0;
	markClass uni0308 <anchor 171 496> @POS_3_0_MARK_1;
	markClass uni0307 <anchor 71 496> @POS_3_0_MARK_1;
	markClass gravecomb <anchor 109 496> @POS_3_0_MARK_1;
	markClass acutecomb <anchor 109 496> @POS_3_0_MARK_1;
	markClass uni030B <anchor 132 496> @POS_3_0_MARK_1;
	markClass uni0302 <anchor 142 496> @POS_3_0_MARK_1;
	markClass uni030C <anchor 142 496> @POS_3_0_MARK_1;
	markClass uni0306 <anchor 149 496> @POS_3_0_MARK_1;
	markClass uni030A <anchor 110 496> @POS_3_0_MARK_1;
	markClass tildecomb <anchor 164 496> @POS_3_0_MARK_1;
	markClass uni0304 <anchor 176 496> @POS_3_0_MARK_1;
	markClass uni0312 <anchor 58 496> @POS_3_0_MARK_1;
	markClass uni0308.case <anchor 171 700> @POS_3_0_MARK_1;
	markClass uni0307.case <anchor 71 700> @POS_3_0_MARK_1;
	markClass gravecomb.case <anchor 109 700> @POS_3_0_MARK_1;
	markClass acutecomb.case <anchor 109 700> @POS_3_0_MARK_1;
	markClass uni030B.case <anchor 162 700> @POS_3_0_MARK_1;
	markClass uni0302.case <anchor 142 700> @POS_3_0_MARK_1;
	markClass uni030C.case <anchor 142 700> @POS_3_0_MARK_1;
	markClass uni0306.case <anchor 149 700> @POS_3_0_MARK_1;
	markClass uni030A.case <anchor 110 700> @POS_3_0_MARK_1;
	markClass tildecomb.case <anchor 164 700> @POS_3_0_MARK_1;
	markClass uni0304.case <anchor 176 700> @POS_3_0_MARK_1;
	markClass uni0308.narrow <anchor 171 496> @POS_3_0_MARK_1;
	pos base A <anchor 340 0> mark @POS_3_0_MARK_0 <anchor 340 700> mark @POS_3_0_MARK_1;
	pos base Aacute <anchor 340 0> mark @POS_3_0_MARK_0 <anchor 340 942> mark @POS_3_0_MARK_1;
	pos base Abreve <anchor 340 0> mark @POS_3_0_MARK_0 <anchor 340 909> mark @POS_3_0_MARK_1;
	pos base uni01CD <anchor 340 0> mark @POS_3_0_MARK_0 <anchor 340 910> mark @POS_3_0_MARK_1;
	pos base Acircumflex <anchor 340 0> mark @POS_3_0_MARK_0 <anchor 340 911> mark @POS_3_0_MARK_1;
	pos base Adieresis <anchor 340 0> mark @POS_3_0_MARK_0 <anchor 340 912> mark @POS_3_0_MARK_1;
	pos base Agrave <anchor 340 0> mark @POS_3_0_MARK_0 <anchor 340 942> mark @POS_3_0_MARK_1;
	pos base Amacron <anchor 340 0> mark @POS_3_0_MARK_0 <anchor 340 867> mark @POS_3_0_MARK_1;
	pos base Aogonek <anchor 340 0> mark @POS_3_0_MARK_0 <anchor 340 700> mark @POS_3_0_MARK_1;
	pos base Aring <anchor 340 0> mark @POS_3_0_MARK_0 <anchor 340 971> mark @POS_3_0_MARK_1;
	pos base Atilde <anchor 340 0> mark @POS_3_0_MARK_0 <anchor 340 868> mark @POS_3_0_MARK_1;
	pos base AE <anchor 461 0> mark @POS_3_0_MARK_0 <anchor 536 700> mark @POS_3_0_MARK_1;
	pos base AEacute <anchor 461 0> mark @POS_3_0_MARK_0 <anchor 536 942> mark @POS_3_0_MARK_1;
	pos base C <anchor 381 0> mark @POS_3_0_MARK_0 <anchor 380 700> mark @POS_3_0_MARK_1;
	pos base Cacute <anchor 381 0> mark @POS_3_0_MARK_0 <anchor 380 942> mark @POS_3_0_MARK_1;
	pos base Ccaron <anchor 381 0> mark @POS_3_0_MARK_0 <anchor 380 910> mark @POS_3_0_MARK_1;
	pos base Ccedilla <anchor 381 -261> mark @POS_3_0_MARK_0 <anchor 380 700> mark @POS_3_0_MARK_1;
	pos base Cdotaccent <anchor 381 0> mark @POS_3_0_MARK_0 <anchor 380 912> mark @POS_3_0_MARK_1;
	pos base D <anchor 344 0> mark @POS_3_0_MARK_0 <anchor 344 700> mark @POS_3_0_MARK_1;
	pos base Dcaron <anchor 344 0> mark @POS_3_0_MARK_0 <anchor 344 910> mark @POS_3_0_MARK_1;
	pos base E <anchor 282 0> mark @POS_3_0_MARK_0 <anchor 282 700> mark @POS_3_0_MARK_1;
	pos base Eacute <anchor 282 0> mark @POS_3_0_MARK_0 <anchor 282 942> mark @POS_3_0_MARK_1;
	pos base Ebreve <anchor 282 0> mark @POS_3_0_MARK_0 <anchor 282 909> mark @POS_3_0_MARK_1;
	pos base Ecaron <anchor 282 0> mark @POS_3_0_MARK_0 <anchor 282 910> mark @POS_3_0_MARK_1;
	pos base Ecircumflex <anchor 282 0> mark @POS_3_0_MARK_0 <anchor 282 911> mark @POS_3_0_MARK_1;
	pos base Edieresis <anchor 282 0> mark @POS_3_0_MARK_0 <anchor 282 912> mark @POS_3_0_MARK_1;
	pos base Edotaccent <anchor 282 0> mark @POS_3_0_MARK_0 <anchor 282 912> mark @POS_3_0_MARK_1;
	pos base Egrave <anchor 282 0> mark @POS_3_0_MARK_0 <anchor 282 942> mark @POS_3_0_MARK_1;
	pos base Emacron <anchor 282 0> mark @POS_3_0_MARK_0 <anchor 282 867> mark @POS_3_0_MARK_1;
	pos base Eogonek <anchor 282 0> mark @POS_3_0_MARK_0 <anchor 282 700> mark @POS_3_0_MARK_1;
	pos base uni1EBC <anchor 282 0> mark @POS_3_0_MARK_0 <anchor 282 868> mark @POS_3_0_MARK_1;
	pos base G <anchor 381 0> mark @POS_3_0_MARK_0 <anchor 381 700> mark @POS_3_0_MARK_1;
	pos base Gbreve <anchor 381 0> mark @POS_3_0_MARK_0 <anchor 381 909> mark @POS_3_0_MARK_1;
	pos base uni0122 <anchor 381 -256> mark @POS_3_0_MARK_0 <anchor 381 700> mark @POS_3_0_MARK_1;
	pos base Gdotaccent <anchor 381 0> mark @POS_3_0_MARK_0 <anchor 381 912> mark @POS_3_0_MARK_1;
	pos base I <anchor 122 0> mark @POS_3_0_MARK_0 <anchor 122 700> mark @POS_3_0_MARK_1;
	pos base IJ <anchor 500 0> mark @POS_3_0_MARK_0 <anchor 635 700> mark @POS_3_0_MARK_1;
	pos base Iacute <anchor 122 0> mark @POS_3_0_MARK_0 <anchor 122 942> mark @POS_3_0_MARK_1;
	pos base Ibreve <anchor 122 0> mark @POS_3_0_MARK_0 <anchor 122 909> mark @POS_3_0_MARK_1;
	pos base Icircumflex <anchor 122 0> mark @POS_3_0_MARK_0 <anchor 122 911> mark @POS_3_0_MARK_1;
	pos base Idieresis <anchor 122 0> mark @POS_3_0_MARK_0 <anchor 122 912> mark @POS_3_0_MARK_1;
	pos base Idotaccent <anchor 122 0> mark @POS_3_0_MARK_0 <anchor 122 912> mark @POS_3_0_MARK_1;
	pos base Igrave <anchor 122 0> mark @POS_3_0_MARK_0 <anchor 122 942> mark @POS_3_0_MARK_1;
	pos base Imacron <anchor 122 0> mark @POS_3_0_MARK_0 <anchor 122 867> mark @POS_3_0_MARK_1;
	pos base Iogonek <anchor 122 0> mark @POS_3_0_MARK_0 <anchor 122 700> mark @POS_3_0_MARK_1;
	pos base Itilde <anchor 122 0> mark @POS_3_0_MARK_0 <anchor 122 868> mark @POS_3_0_MARK_1;
	pos base J <anchor 256 0> mark @POS_3_0_MARK_0 <anchor 391 700> mark @POS_3_0_MARK_1;
	pos base uni004A0301 <anchor 256 0> mark @POS_3_0_MARK_0 <anchor 391 942> mark @POS_3_0_MARK_1;
	pos base K <anchor 302 0> mark @POS_3_0_MARK_0 <anchor 302 700> mark @POS_3_0_MARK_1;
	pos base uni0136 <anchor 303 -256> mark @POS_3_0_MARK_0 <anchor 302 700> mark @POS_3_0_MARK_1;
	pos base L <anchor 266 0> mark @POS_3_0_MARK_0 <anchor 177 700> mark @POS_3_0_MARK_1;
	pos base Lacute <anchor 266 0> mark @POS_3_0_MARK_0 <anchor 177 942> mark @POS_3_0_MARK_1;
	pos base Lcaron <anchor 266 0> mark @POS_3_0_MARK_0 <anchor 177 700> mark @POS_3_0_MARK_1;
	pos base uni013B <anchor 266 -256> mark @POS_3_0_MARK_0 <anchor 177 700> mark @POS_3_0_MARK_1;
	pos base N <anchor 351 0> mark @POS_3_0_MARK_0 <anchor 351 700> mark @POS_3_0_MARK_1;
	pos base Nacute <anchor 351 0> mark @POS_3_0_MARK_0 <anchor 351 942> mark @POS_3_0_MARK_1;
	pos base Ncaron <anchor 351 0> mark @POS_3_0_MARK_0 <anchor 351 910> mark @POS_3_0_MARK_1;
	pos base uni0145 <anchor 351 -256> mark @POS_3_0_MARK_0 <anchor 351 700> mark @POS_3_0_MARK_1;
	pos base Ntilde <anchor 351 0> mark @POS_3_0_MARK_0 <anchor 351 868> mark @POS_3_0_MARK_1;
	pos base O <anchor 396 0> mark @POS_3_0_MARK_0 <anchor 396 700> mark @POS_3_0_MARK_1;
	pos base Oacute <anchor 396 0> mark @POS_3_0_MARK_0 <anchor 396 942> mark @POS_3_0_MARK_1;
	pos base Obreve <anchor 396 0> mark @POS_3_0_MARK_0 <anchor 396 909> mark @POS_3_0_MARK_1;
	pos base Ocircumflex <anchor 396 0> mark @POS_3_0_MARK_0 <anchor 396 911> mark @POS_3_0_MARK_1;
	pos base Odieresis <anchor 396 0> mark @POS_3_0_MARK_0 <anchor 396 912> mark @POS_3_0_MARK_1;
	pos base Ograve <anchor 396 0> mark @POS_3_0_MARK_0 <anchor 396 942> mark @POS_3_0_MARK_1;
	pos base Ohungarumlaut <anchor 396 0> mark @POS_3_0_MARK_0 <anchor 396 915> mark @POS_3_0_MARK_1;
	pos base Omacron <anchor 396 0> mark @POS_3_0_MARK_0 <anchor 396 867> mark @POS_3_0_MARK_1;
	pos base Otilde <anchor 396 0> mark @POS_3_0_MARK_0 <anchor 396 868> mark @POS_3_0_MARK_1;
	pos base R <anchor 307 0> mark @POS_3_0_MARK_0 <anchor 294 700> mark @POS_3_0_MARK_1;
	pos base Racute <anchor 307 0> mark @POS_3_0_MARK_0 <anchor 294 942> mark @POS_3_0_MARK_1;
	pos base Rcaron <anchor 307 0> mark @POS_3_0_MARK_0 <anchor 294 910> mark @POS_3_0_MARK_1;
	pos base uni0156 <anchor 307 -256> mark @POS_3_0_MARK_0 <anchor 294 700> mark @POS_3_0_MARK_1;
	pos base S <anchor 292 0> mark @POS_3_0_MARK_0 <anchor 292 700> mark @POS_3_0_MARK_1;
	pos base Sacute <anchor 292 0> mark @POS_3_0_MARK_0 <anchor 292 942> mark @POS_3_0_MARK_1;
	pos base Scaron <anchor 292 0> mark @POS_3_0_MARK_0 <anchor 292 910> mark @POS_3_0_MARK_1;
	pos base Scedilla <anchor 292 -261> mark @POS_3_0_MARK_0 <anchor 292 700> mark @POS_3_0_MARK_1;
	pos base uni0218 <anchor 292 -256> mark @POS_3_0_MARK_0 <anchor 292 700> mark @POS_3_0_MARK_1;
	pos base T <anchor 286 0> mark @POS_3_0_MARK_0 <anchor 286 700> mark @POS_3_0_MARK_1;
	pos base Tcaron <anchor 286 0> mark @POS_3_0_MARK_0 <anchor 286 910> mark @POS_3_0_MARK_1;
	pos base uni0162 <anchor 286 -261> mark @POS_3_0_MARK_0 <anchor 286 700> mark @POS_3_0_MARK_1;
	pos base uni021A <anchor 286 -256> mark @POS_3_0_MARK_0 <anchor 286 700> mark @POS_3_0_MARK_1;
	pos base U <anchor 333 0> mark @POS_3_0_MARK_0 <anchor 333 700> mark @POS_3_0_MARK_1;
	pos base Uacute <anchor 333 0> mark @POS_3_0_MARK_0 <anchor 333 942> mark @POS_3_0_MARK_1;
	pos base Ubreve <anchor 333 0> mark @POS_3_0_MARK_0 <anchor 333 909> mark @POS_3_0_MARK_1;
	pos base Ucircumflex <anchor 333 0> mark @POS_3_0_MARK_0 <anchor 333 911> mark @POS_3_0_MARK_1;
	pos base Udieresis <anchor 333 0> mark @POS_3_0_MARK_0 <anchor 333 912> mark @POS_3_0_MARK_1;
	pos base Ugrave <anchor 333 0> mark @POS_3_0_MARK_0 <anchor 333 942> mark @POS_3_0_MARK_1;
	pos base Uhungarumlaut <anchor 333 0> mark @POS_3_0_MARK_0 <anchor 333 915> mark @POS_3_0_MARK_1;
	pos base Umacron <anchor 333 0> mark @POS_3_0_MARK_0 <anchor 333 867> mark @POS_3_0_MARK_1;
	pos base Uogonek <anchor 333 0> mark @POS_3_0_MARK_0 <anchor 333 700> mark @POS_3_0_MARK_1;
	pos base Uring <anchor 333 0> mark @POS_3_0_MARK_0 <anchor 333 971> mark @POS_3_0_MARK_1;
	pos base Utilde <anchor 333 0> mark @POS_3_0_MARK_0 <anchor 333 868> mark @POS_3_0_MARK_1;
	pos base W <anchor 506 0> mark @POS_3_0_MARK_0 <anchor 506 700> mark @POS_3_0_MARK_1;
	pos base Wacute <anchor 506 0> mark @POS_3_0_MARK_0 <anchor 506 942> mark @POS_3_0_MARK_1;
	pos base Wcircumflex <anchor 506 0> mark @POS_3_0_MARK_0 <anchor 506 911> mark @POS_3_0_MARK_1;
	pos base Wdieresis <anchor 506 0> mark @POS_3_0_MARK_0 <anchor 506 912> mark @POS_3_0_MARK_1;
	pos base Wgrave <anchor 506 0> mark @POS_3_0_MARK_0 <anchor 506 942> mark @POS_3_0_MARK_1;
	pos base Y <anchor 300 0> mark @POS_3_0_MARK_0 <anchor 300 700> mark @POS_3_0_MARK_1;
	pos base Yacute <anchor 300 0> mark @POS_3_0_MARK_0 <anchor 300 942> mark @POS_3_0_MARK_1;
	pos base Ycircumflex <anchor 300 0> mark @POS_3_0_MARK_0 <anchor 300 911> mark @POS_3_0_MARK_1;
	pos base Ydieresis <anchor 300 0> mark @POS_3_0_MARK_0 <anchor 300 912> mark @POS_3_0_MARK_1;
	pos base Ygrave <anchor 300 0> mark @POS_3_0_MARK_0 <anchor 300 942> mark @POS_3_0_MARK_1;
	pos base uni1EF8 <anchor 300 0> mark @POS_3_0_MARK_0 <anchor 300 868> mark @POS_3_0_MARK_1;
	pos base Z <anchor 274 0> mark @POS_3_0_MARK_0 <anchor 274 700> mark @POS_3_0_MARK_1;
	pos base Zacute <anchor 274 0> mark @POS_3_0_MARK_0 <anchor 274 942> mark @POS_3_0_MARK_1;
	pos base Zcaron <anchor 274 0> mark @POS_3_0_MARK_0 <anchor 274 910> mark @POS_3_0_MARK_1;
	pos base Zdotaccent <anchor 274 0> mark @POS_3_0_MARK_0 <anchor 274 912> mark @POS_3_0_MARK_1;
	pos base a <anchor 243 0> mark @POS_3_0_MARK_0 <anchor 271 496> mark @POS_3_0_MARK_1;
	pos base aacute <anchor 243 0> mark @POS_3_0_MARK_0 <anchor 271 749> mark @POS_3_0_MARK_1;
	pos base abreve <anchor 243 0> mark @POS_3_0_MARK_0 <anchor 271 722> mark @POS_3_0_MARK_1;
	pos base uni01CE <anchor 243 0> mark @POS_3_0_MARK_0 <anchor 271 730> mark @POS_3_0_MARK_1;
	pos base acircumflex <anchor 243 0> mark @POS_3_0_MARK_0 <anchor 271 730> mark @POS_3_0_MARK_1;
	pos base adieresis <anchor 243 0> mark @POS_3_0_MARK_0 <anchor 271 723> mark @POS_3_0_MARK_1;
	pos base agrave <anchor 243 0> mark @POS_3_0_MARK_0 <anchor 271 749> mark @POS_3_0_MARK_1;
	pos base amacron <anchor 243 0> mark @POS_3_0_MARK_0 <anchor 271 693> mark @POS_3_0_MARK_1;
	pos base aogonek <anchor 243 0> mark @POS_3_0_MARK_0 <anchor 271 496> mark @POS_3_0_MARK_1;
	pos base aring <anchor 243 0> mark @POS_3_0_MARK_0 <anchor 271 766> mark @POS_3_0_MARK_1;
	pos base atilde <anchor 243 0> mark @POS_3_0_MARK_0 <anchor 271 705> mark @POS_3_0_MARK_1;
	pos base ae <anchor 454 0> mark @POS_3_0_MARK_0 <anchor 454 496> mark @POS_3_0_MARK_1;
	pos base aeacute <anchor 454 0> mark @POS_3_0_MARK_0 <anchor 454 749> mark @POS_3_0_MARK_1;
	pos base c <anchor 287 0> mark @POS_3_0_MARK_0 <anchor 285 496> mark @POS_3_0_MARK_1;
	pos base cacute <anchor 287 0> mark @POS_3_0_MARK_0 <anchor 285 749> mark @POS_3_0_MARK_1;
	pos base ccaron <anchor 287 0> mark @POS_3_0_MARK_0 <anchor 285 730> mark @POS_3_0_MARK_1;
	pos base ccedilla <anchor 287 -261> mark @POS_3_0_MARK_0 <anchor 285 496> mark @POS_3_0_MARK_1;
	pos base cdotaccent <anchor 287 0> mark @POS_3_0_MARK_0 <anchor 285 723> mark @POS_3_0_MARK_1;
	pos base d <anchor 307 0> mark @POS_3_0_MARK_0 <anchor 307 992> mark @POS_3_0_MARK_1;
	pos base dcaron <anchor 307 0> mark @POS_3_0_MARK_0 <anchor 307 992> mark @POS_3_0_MARK_1;
	pos base e <anchor 285 0> mark @POS_3_0_MARK_0 <anchor 283 496> mark @POS_3_0_MARK_1;
	pos base eacute <anchor 285 0> mark @POS_3_0_MARK_0 <anchor 283 749> mark @POS_3_0_MARK_1;
	pos base ebreve <anchor 285 0> mark @POS_3_0_MARK_0 <anchor 283 722> mark @POS_3_0_MARK_1;
	pos base ecaron <anchor 285 0> mark @POS_3_0_MARK_0 <anchor 283 730> mark @POS_3_0_MARK_1;
	pos base ecircumflex <anchor 285 0> mark @POS_3_0_MARK_0 <anchor 283 730> mark @POS_3_0_MARK_1;
	pos base edieresis <anchor 285 0> mark @POS_3_0_MARK_0 <anchor 283 723> mark @POS_3_0_MARK_1;
	pos base edotaccent <anchor 285 0> mark @POS_3_0_MARK_0 <anchor 283 723> mark @POS_3_0_MARK_1;
	pos base egrave <anchor 285 0> mark @POS_3_0_MARK_0 <anchor 283 749> mark @POS_3_0_MARK_1;
	pos base emacron <anchor 285 0> mark @POS_3_0_MARK_0 <anchor 283 693> mark @POS_3_0_MARK_1;
	pos base eogonek <anchor 285 0> mark @POS_3_0_MARK_0 <anchor 283 496> mark @POS_3_0_MARK_1;
	pos base uni1EBD <anchor 285 0> mark @POS_3_0_MARK_0 <anchor 283 705> mark @POS_3_0_MARK_1;
	pos base g <anchor 264 -310> mark @POS_3_0_MARK_0 <anchor 254 496> mark @POS_3_0_MARK_1;
	pos base gbreve <anchor 264 -310> mark @POS_3_0_MARK_0 <anchor 254 722> mark @POS_3_0_MARK_1;
	pos base uni0123 <anchor 264 -310> mark @POS_3_0_MARK_0 <anchor 254 804> mark @POS_3_0_MARK_1;
	pos base gdotaccent <anchor 264 -310> mark @POS_3_0_MARK_0 <anchor 254 723> mark @POS_3_0_MARK_1;
	pos base i <anchor 117 0> mark @POS_3_0_MARK_0;
	pos base dotlessi <anchor 111 0> mark @POS_3_0_MARK_0 <anchor 111 496> mark @POS_3_0_MARK_1;
	pos base iacute <anchor 111 0> mark @POS_3_0_MARK_0 <anchor 111 749> mark @POS_3_0_MARK_1;
	pos base ibreve <anchor 111 0> mark @POS_3_0_MARK_0 <anchor 111 722> mark @POS_3_0_MARK_1;
	pos base icircumflex <anchor 111 0> mark @POS_3_0_MARK_0 <anchor 111 730> mark @POS_3_0_MARK_1;
	pos base idieresis <anchor 111 0> mark @POS_3_0_MARK_0 <anchor 111 723> mark @POS_3_0_MARK_1;
	pos base i.loclTRK <anchor 111 0> mark @POS_3_0_MARK_0 <anchor 111 723> mark @POS_3_0_MARK_1;
	pos base igrave <anchor 111 0> mark @POS_3_0_MARK_0 <anchor 111 749> mark @POS_3_0_MARK_1;
	pos base imacron <anchor 111 0> mark @POS_3_0_MARK_0 <anchor 111 693> mark @POS_3_0_MARK_1;
	pos base iogonek <anchor 111 0> mark @POS_3_0_MARK_0 <anchor 111 723> mark @POS_3_0_MARK_1;
	pos base itilde <anchor 111 0> mark @POS_3_0_MARK_0 <anchor 111 705> mark @POS_3_0_MARK_1;
	pos base ij <anchor 117 0> mark @POS_3_0_MARK_0;
	pos base uni0237 <anchor 118 -310> mark @POS_3_0_MARK_0 <anchor 118 496> mark @POS_3_0_MARK_1;
	pos base uni006A0301 <anchor 118 -310> mark @POS_3_0_MARK_0 <anchor 118 749> mark @POS_3_0_MARK_1;
	pos base k <anchor 257 0> mark @POS_3_0_MARK_0 <anchor 257 992> mark @POS_3_0_MARK_1;
	pos base uni0137 <anchor 257 -256> mark @POS_3_0_MARK_0 <anchor 257 992> mark @POS_3_0_MARK_1;
	pos base l <anchor 111 0> mark @POS_3_0_MARK_0 <anchor 111 700> mark @POS_3_0_MARK_1;
	pos base lacute <anchor 111 0> mark @POS_3_0_MARK_0 <anchor 111 953> mark @POS_3_0_MARK_1;
	pos base lcaron <anchor 111 0> mark @POS_3_0_MARK_0 <anchor 111 700> mark @POS_3_0_MARK_1;
	pos base uni013C <anchor 111 -256> mark @POS_3_0_MARK_0 <anchor 111 700> mark @POS_3_0_MARK_1;
	pos base n <anchor 295 0> mark @POS_3_0_MARK_0 <anchor 296 496> mark @POS_3_0_MARK_1;
	pos base nacute <anchor 295 0> mark @POS_3_0_MARK_0 <anchor 296 749> mark @POS_3_0_MARK_1;
	pos base ncaron <anchor 295 0> mark @POS_3_0_MARK_0 <anchor 296 730> mark @POS_3_0_MARK_1;
	pos base uni0146 <anchor 295 -256> mark @POS_3_0_MARK_0 <anchor 296 496> mark @POS_3_0_MARK_1;
	pos base ntilde <anchor 295 0> mark @POS_3_0_MARK_0 <anchor 296 705> mark @POS_3_0_MARK_1;
	pos base o <anchor 297 0> mark @POS_3_0_MARK_0 <anchor 297 496> mark @POS_3_0_MARK_1;
	pos base oacute <anchor 297 0> mark @POS_3_0_MARK_0 <anchor 297 749> mark @POS_3_0_MARK_1;
	pos base obreve <anchor 297 0> mark @POS_3_0_MARK_0 <anchor 297 722> mark @POS_3_0_MARK_1;
	pos base ocircumflex <anchor 297 0> mark @POS_3_0_MARK_0 <anchor 297 730> mark @POS_3_0_MARK_1;
	pos base odieresis <anchor 297 0> mark @POS_3_0_MARK_0 <anchor 297 723> mark @POS_3_0_MARK_1;
	pos base ograve <anchor 297 0> mark @POS_3_0_MARK_0 <anchor 297 749> mark @POS_3_0_MARK_1;
	pos base ohungarumlaut <anchor 297 0> mark @POS_3_0_MARK_0 <anchor 297 711> mark @POS_3_0_MARK_1;
	pos base omacron <anchor 297 0> mark @POS_3_0_MARK_0 <anchor 297 693> mark @POS_3_0_MARK_1;
	pos base otilde <anchor 297 0> mark @POS_3_0_MARK_0 <anchor 297 705> mark @POS_3_0_MARK_1;
	pos base r <anchor 116 0> mark @POS_3_0_MARK_0 <anchor 177 496> mark @POS_3_0_MARK_1;
	pos base racute <anchor 116 0> mark @POS_3_0_MARK_0 <anchor 177 749> mark @POS_3_0_MARK_1;
	pos base rcaron <anchor 116 0> mark @POS_3_0_MARK_0 <anchor 177 730> mark @POS_3_0_MARK_1;
	pos base uni0157 <anchor 116 -256> mark @POS_3_0_MARK_0 <anchor 177 496> mark @POS_3_0_MARK_1;
	pos base s <anchor 251 0> mark @POS_3_0_MARK_0 <anchor 244 496> mark @POS_3_0_MARK_1;
	pos base sacute <anchor 251 0> mark @POS_3_0_MARK_0 <anchor 244 749> mark @POS_3_0_MARK_1;
	pos base scaron <anchor 251 0> mark @POS_3_0_MARK_0 <anchor 244 730> mark @POS_3_0_MARK_1;
	pos base scedilla <anchor 251 -261> mark @POS_3_0_MARK_0 <anchor 244 496> mark @POS_3_0_MARK_1;
	pos base uni0219 <anchor 251 -256> mark @POS_3_0_MARK_0 <anchor 244 496> mark @POS_3_0_MARK_1;
	pos base t <anchor 229 0> mark @POS_3_0_MARK_0 <anchor 185 496> mark @POS_3_0_MARK_1;
	pos base tcaron <anchor 229 0> mark @POS_3_0_MARK_0 <anchor 185 496> mark @POS_3_0_MARK_1;
	pos base uni0163 <anchor 229 -261> mark @POS_3_0_MARK_0 <anchor 185 496> mark @POS_3_0_MARK_1;
	pos base uni021B <anchor 229 -256> mark @POS_3_0_MARK_0 <anchor 185 496> mark @POS_3_0_MARK_1;
	pos base u <anchor 284 0> mark @POS_3_0_MARK_0 <anchor 282 496> mark @POS_3_0_MARK_1;
	pos base uacute <anchor 284 0> mark @POS_3_0_MARK_0 <anchor 282 749> mark @POS_3_0_MARK_1;
	pos base ubreve <anchor 284 0> mark @POS_3_0_MARK_0 <anchor 282 722> mark @POS_3_0_MARK_1;
	pos base ucircumflex <anchor 284 0> mark @POS_3_0_MARK_0 <anchor 282 730> mark @POS_3_0_MARK_1;
	pos base udieresis <anchor 284 0> mark @POS_3_0_MARK_0 <anchor 282 723> mark @POS_3_0_MARK_1;
	pos base ugrave <anchor 284 0> mark @POS_3_0_MARK_0 <anchor 282 749> mark @POS_3_0_MARK_1;
	pos base uhungarumlaut <anchor 284 0> mark @POS_3_0_MARK_0 <anchor 282 711> mark @POS_3_0_MARK_1;
	pos base umacron <anchor 284 0> mark @POS_3_0_MARK_0 <anchor 282 693> mark @POS_3_0_MARK_1;
	pos base uogonek <anchor 284 0> mark @POS_3_0_MARK_0 <anchor 282 496> mark @POS_3_0_MARK_1;
	pos base uring <anchor 284 0> mark @POS_3_0_MARK_0 <anchor 282 766> mark @POS_3_0_MARK_1;
	pos base utilde <anchor 284 0> mark @POS_3_0_MARK_0 <anchor 282 705> mark @POS_3_0_MARK_1;
	pos base w <anchor 376 0> mark @POS_3_0_MARK_0 <anchor 376 496> mark @POS_3_0_MARK_1;
	pos base wacute <anchor 376 0> mark @POS_3_0_MARK_0 <anchor 376 749> mark @POS_3_0_MARK_1;
	pos base wcircumflex <anchor 376 0> mark @POS_3_0_MARK_0 <anchor 376 730> mark @POS_3_0_MARK_1;
	pos base wdieresis <anchor 376 0> mark @POS_3_0_MARK_0 <anchor 376 723> mark @POS_3_0_MARK_1;
	pos base wgrave <anchor 376 0> mark @POS_3_0_MARK_0 <anchor 376 749> mark @POS_3_0_MARK_1;
	pos base y <anchor 273 0> mark @POS_3_0_MARK_0 <anchor 273 496> mark @POS_3_0_MARK_1;
	pos base yacute <anchor 273 0> mark @POS_3_0_MARK_0 <anchor 273 749> mark @POS_3_0_MARK_1;
	pos base ycircumflex <anchor 273 0> mark @POS_3_0_MARK_0 <anchor 273 730> mark @POS_3_0_MARK_1;
	pos base ydieresis <anchor 273 0> mark @POS_3_0_MARK_0 <anchor 273 723> mark @POS_3_0_MARK_1;
	pos base ygrave <anchor 273 0> mark @POS_3_0_MARK_0 <anchor 273 749> mark @POS_3_0_MARK_1;
	pos base uni1EF9 <anchor 273 0> mark @POS_3_0_MARK_0 <anchor 273 705> mark @POS_3_0_MARK_1;
	pos base z <anchor 217 0> mark @POS_3_0_MARK_0 <anchor 217 496> mark @POS_3_0_MARK_1;
	pos base zacute <anchor 217 0> mark @POS_3_0_MARK_0 <anchor 217 749> mark @POS_3_0_MARK_1;
	pos base zcaron <anchor 217 0> mark @POS_3_0_MARK_0 <anchor 217 730> mark @POS_3_0_MARK_1;
	pos base zdotaccent <anchor 217 0> mark @POS_3_0_MARK_0 <anchor 217 723> mark @POS_3_0_MARK_1;
} POS_3;
lookup POS_4 {
	markClass uni0328 <anchor 203 0> @POS_4_0_MARK_0;
	markClass uni0328.case <anchor 203 0> @POS_4_0_MARK_0;
	pos base A <anchor 655 0> mark @POS_4_0_MARK_0;
	pos base Aacute <anchor 655 0> mark @POS_4_0_MARK_0;
	pos base Abreve <anchor 655 0> mark @POS_4_0_MARK_0;
	pos base uni01CD <anchor 655 0> mark @POS_4_0_MARK_0;
	pos base Acircumflex <anchor 655 0> mark @POS_4_0_MARK_0;
	pos base Adieresis <anchor 655 0> mark @POS_4_0_MARK_0;
	pos base Agrave <anchor 655 0> mark @POS_4_0_MARK_0;
	pos base Amacron <anchor 655 0> mark @POS_4_0_MARK_0;
	pos base Aogonek <anchor 655 0> mark @POS_4_0_MARK_0;
	pos base Aring <anchor 655 0> mark @POS_4_0_MARK_0;
	pos base Atilde <anchor 655 0> mark @POS_4_0_MARK_0;
	pos base E <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base Eacute <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base Ebreve <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base Ecaron <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base Ecircumflex <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base Edieresis <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base Edotaccent <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base Egrave <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base Emacron <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base Eogonek <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base uni1EBC <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base I <anchor 175 0> mark @POS_4_0_MARK_0;
	pos base IJ <anchor 175 0> mark @POS_4_0_MARK_0;
	pos base Iacute <anchor 175 0> mark @POS_4_0_MARK_0;
	pos base Ibreve <anchor 175 0> mark @POS_4_0_MARK_0;
	pos base Icircumflex <anchor 175 0> mark @POS_4_0_MARK_0;
	pos base Idieresis <anchor 175 0> mark @POS_4_0_MARK_0;
	pos base Idotaccent <anchor 175 0> mark @POS_4_0_MARK_0;
	pos base Igrave <anchor 175 0> mark @POS_4_0_MARK_0;
	pos base Imacron <anchor 175 0> mark @POS_4_0_MARK_0;
	pos base Iogonek <anchor 175 0> mark @POS_4_0_MARK_0;
	pos base Itilde <anchor 175 0> mark @POS_4_0_MARK_0;
	pos base O <anchor 474 10> mark @POS_4_0_MARK_0;
	pos base Oacute <anchor 474 10> mark @POS_4_0_MARK_0;
	pos base Obreve <anchor 474 10> mark @POS_4_0_MARK_0;
	pos base Ocircumflex <anchor 474 10> mark @POS_4_0_MARK_0;
	pos base Odieresis <anchor 474 10> mark @POS_4_0_MARK_0;
	pos base Ograve <anchor 474 10> mark @POS_4_0_MARK_0;
	pos base Ohungarumlaut <anchor 474 10> mark @POS_4_0_MARK_0;
	pos base Omacron <anchor 474 10> mark @POS_4_0_MARK_0;
	pos base Otilde <anchor 474 10> mark @POS_4_0_MARK_0;
	pos base U <anchor 411 10> mark @POS_4_0_MARK_0;
	pos base Uacute <anchor 411 10> mark @POS_4_0_MARK_0;
	pos base Ubreve <anchor 411 10> mark @POS_4_0_MARK_0;
	pos base Ucircumflex <anchor 411 10> mark @POS_4_0_MARK_0;
	pos base Udieresis <anchor 411 10> mark @POS_4_0_MARK_0;
	pos base Ugrave <anchor 411 10> mark @POS_4_0_MARK_0;
	pos base Uhungarumlaut <anchor 411 10> mark @POS_4_0_MARK_0;
	pos base Umacron <anchor 411 10> mark @POS_4_0_MARK_0;
	pos base Uogonek <anchor 411 10> mark @POS_4_0_MARK_0;
	pos base Uring <anchor 411 10> mark @POS_4_0_MARK_0;
	pos base Utilde <anchor 411 10> mark @POS_4_0_MARK_0;
	pos base a <anchor 539 0> mark @POS_4_0_MARK_0;
	pos base aacute <anchor 539 0> mark @POS_4_0_MARK_0;
	pos base abreve <anchor 539 0> mark @POS_4_0_MARK_0;
	pos base uni01CE <anchor 539 0> mark @POS_4_0_MARK_0;
	pos base acircumflex <anchor 539 0> mark @POS_4_0_MARK_0;
	pos base adieresis <anchor 539 0> mark @POS_4_0_MARK_0;
	pos base agrave <anchor 539 0> mark @POS_4_0_MARK_0;
	pos base amacron <anchor 539 0> mark @POS_4_0_MARK_0;
	pos base aogonek <anchor 539 0> mark @POS_4_0_MARK_0;
	pos base aring <anchor 539 0> mark @POS_4_0_MARK_0;
	pos base atilde <anchor 539 0> mark @POS_4_0_MARK_0;
	pos base e <anchor 393 10> mark @POS_4_0_MARK_0;
	pos base eacute <anchor 393 10> mark @POS_4_0_MARK_0;
	pos base ebreve <anchor 393 10> mark @POS_4_0_MARK_0;
	pos base ecaron <anchor 393 10> mark @POS_4_0_MARK_0;
	pos base ecircumflex <anchor 393 10> mark @POS_4_0_MARK_0;
	pos base edieresis <anchor 393 10> mark @POS_4_0_MARK_0;
	pos base edotaccent <anchor 393 10> mark @POS_4_0_MARK_0;
	pos base egrave <anchor 393 10> mark @POS_4_0_MARK_0;
	pos base emacron <anchor 393 10> mark @POS_4_0_MARK_0;
	pos base eogonek <anchor 393 10> mark @POS_4_0_MARK_0;
	pos base uni1EBD <anchor 393 10> mark @POS_4_0_MARK_0;
	pos base dotlessi <anchor 163 0> mark @POS_4_0_MARK_0;
	pos base iacute <anchor 163 0> mark @POS_4_0_MARK_0;
	pos base ibreve <anchor 163 0> mark @POS_4_0_MARK_0;
	pos base icircumflex <anchor 163 0> mark @POS_4_0_MARK_0;
	pos base idieresis <anchor 163 0> mark @POS_4_0_MARK_0;
	pos base i.loclTRK <anchor 163 0> mark @POS_4_0_MARK_0;
	pos base igrave <anchor 163 0> mark @POS_4_0_MARK_0;
	pos base imacron <anchor 163 0> mark @POS_4_0_MARK_0;
	pos base iogonek <anchor 163 0> mark @POS_4_0_MARK_0;
	pos base itilde <anchor 163 0> mark @POS_4_0_MARK_0;
	pos base o <anchor 405 10> mark @POS_4_0_MARK_0;
	pos base oacute <anchor 405 10> mark @POS_4_0_MARK_0;
	pos base obreve <anchor 405 10> mark @POS_4_0_MARK_0;
	pos base ocircumflex <anchor 405 10> mark @POS_4_0_MARK_0;
	pos base odieresis <anchor 405 10> mark @POS_4_0_MARK_0;
	pos base ograve <anchor 405 10> mark @POS_4_0_MARK_0;
	pos base ohungarumlaut <anchor 405 10> mark @POS_4_0_MARK_0;
	pos base omacron <anchor 405 10> mark @POS_4_0_MARK_0;
	pos base otilde <anchor 405 10> mark @POS_4_0_MARK_0;
	pos base u <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base uacute <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base ubreve <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base ucircumflex <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base udieresis <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base ugrave <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base uhungarumlaut <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base umacron <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base uogonek <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base uring <anchor 510 0> mark @POS_4_0_MARK_0;
	pos base utilde <anchor 510 0> mark @POS_4_0_MARK_0;
} POS_4;
lookup POS_5 {
	markClass uni030C.alt <anchor 0 992> @POS_5_0_MARK_0;
	markClass uni030C.alt.case <anchor 2 700> @POS_5_0_MARK_0;
	pos base L <anchor 271 700> mark @POS_5_0_MARK_0;
	pos base Lacute <anchor 271 700> mark @POS_5_0_MARK_0;
	pos base Lcaron <anchor 271 700> mark @POS_5_0_MARK_0;
	pos base uni013B <anchor 271 700> mark @POS_5_0_MARK_0;
	pos base O <anchor 771 700> mark @POS_5_0_MARK_0;
	pos base Oacute <anchor 771 700> mark @POS_5_0_MARK_0;
	pos base Obreve <anchor 771 700> mark @POS_5_0_MARK_0;
	pos base Ocircumflex <anchor 771 700> mark @POS_5_0_MARK_0;
	pos base Odieresis <anchor 771 700> mark @POS_5_0_MARK_0;
	pos base Ograve <anchor 771 700> mark @POS_5_0_MARK_0;
	pos base Ohungarumlaut <anchor 771 700> mark @POS_5_0_MARK_0;
	pos base Omacron <anchor 771 700> mark @POS_5_0_MARK_0;
	pos base Otilde <anchor 771 700> mark @POS_5_0_MARK_0;
	pos base U <anchor 645 700> mark @POS_5_0_MARK_0;
	pos base Uacute <anchor 645 700> mark @POS_5_0_MARK_0;
	pos base Ubreve <anchor 645 700> mark @POS_5_0_MARK_0;
	pos base Ucircumflex <anchor 645 700> mark @POS_5_0_MARK_0;
	pos base Udieresis <anchor 645 700> mark @POS_5_0_MARK_0;
	pos base Ugrave <anchor 645 700> mark @POS_5_0_MARK_0;
	pos base Uhungarumlaut <anchor 645 700> mark @POS_5_0_MARK_0;
	pos base Umacron <anchor 645 700> mark @POS_5_0_MARK_0;
	pos base Uogonek <anchor 645 700> mark @POS_5_0_MARK_0;
	pos base Uring <anchor 645 700> mark @POS_5_0_MARK_0;
	pos base Utilde <anchor 645 700> mark @POS_5_0_MARK_0;
	pos base d <anchor 593 992> mark @POS_5_0_MARK_0;
	pos base dcaron <anchor 593 992> mark @POS_5_0_MARK_0;
	pos base l <anchor 202 992> mark @POS_5_0_MARK_0;
	pos base lacute <anchor 202 992> mark @POS_5_0_MARK_0;
	pos base lcaron <anchor 202 992> mark @POS_5_0_MARK_0;
	pos base uni013C <anchor 202 992> mark @POS_5_0_MARK_0;
	pos base o <anchor 572 496> mark @POS_5_0_MARK_0;
	pos base oacute <anchor 572 496> mark @POS_5_0_MARK_0;
	pos base obreve <anchor 572 496> mark @POS_5_0_MARK_0;
	pos base ocircumflex <anchor 572 496> mark @POS_5_0_MARK_0;
	pos base odieresis <anchor 572 496> mark @POS_5_0_MARK_0;
	pos base ograve <anchor 572 496> mark @POS_5_0_MARK_0;
	pos base ohungarumlaut <anchor 572 496> mark @POS_5_0_MARK_0;
	pos base omacron <anchor 572 496> mark @POS_5_0_MARK_0;
	pos base otilde <anchor 572 496> mark @POS_5_0_MARK_0;
	pos base t <anchor 253 992> mark @POS_5_0_MARK_0;
	pos base tcaron <anchor 253 992> mark @POS_5_0_MARK_0;
	pos base uni0163 <anchor 253 992> mark @POS_5_0_MARK_0;
	pos base uni021B <anchor 253 992> mark @POS_5_0_MARK_0;
	pos base u <anchor 547 496> mark @POS_5_0_MARK_0;
	pos base uacute <anchor 547 496> mark @POS_5_0_MARK_0;
	pos base ubreve <anchor 547 496> mark @POS_5_0_MARK_0;
	pos base ucircumflex <anchor 547 496> mark @POS_5_0_MARK_0;
	pos base udieresis <anchor 547 496> mark @POS_5_0_MARK_0;
	pos base ugrave <anchor 547 496> mark @POS_5_0_MARK_0;
	pos base uhungarumlaut <anchor 547 496> mark @POS_5_0_MARK_0;
	pos base umacron <anchor 547 496> mark @POS_5_0_MARK_0;
	pos base uogonek <anchor 547 496> mark @POS_5_0_MARK_0;
	pos base uring <anchor 547 496> mark @POS_5_0_MARK_0;
	pos base utilde <anchor 547 496> mark @POS_5_0_MARK_0;
} POS_5;
script latn;
language dflt;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language AZE;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language CAT;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language CRT;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language KAZ;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language MOL;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language NLD;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language ROM;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language TAT;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language TRK;
lookup POS_2;
lookup POS_3;
lookup POS_4;
lookup POS_5;
";
tag = mark;
},
{
code = "script DFLT;
language dflt;
lookup POS_6 {
	lookupflag UseMarkFilteringSet [uni0326 uni0327 uni0327.case];
	markClass uni0326 <anchor 56 0> @POS_6_0_MARK_0;
	markClass uni0327 <anchor 84 0> @POS_6_0_MARK_0;
	markClass uni0327.case <anchor 82 0> @POS_6_0_MARK_0;
	pos mark uni0326 <anchor 56 -256> mark @POS_6_0_MARK_0;
	pos mark uni0327 <anchor 84 -261> mark @POS_6_0_MARK_0;
	pos mark uni0327.case <anchor 82 -261> mark @POS_6_0_MARK_0;
} POS_6;
lookup POS_7 {
	lookupflag UseMarkFilteringSet [uni0308 uni0307 gravecomb acutecomb uni030B uni0302 uni030C uni0306 uni030A tildecomb uni0304 uni0312 uni0308.case uni0307.case gravecomb.case acutecomb.case uni030B.case uni0302.case uni030C.case uni0306.case uni030A.case tildecomb.case uni0304.case uni0308.narrow];
	markClass uni0308 <anchor 171 496> @POS_7_0_MARK_0;
	markClass uni0307 <anchor 71 496> @POS_7_0_MARK_0;
	markClass gravecomb <anchor 109 496> @POS_7_0_MARK_0;
	markClass acutecomb <anchor 109 496> @POS_7_0_MARK_0;
	markClass uni030B <anchor 132 496> @POS_7_0_MARK_0;
	markClass uni0302 <anchor 142 496> @POS_7_0_MARK_0;
	markClass uni030C <anchor 142 496> @POS_7_0_MARK_0;
	markClass uni0306 <anchor 149 496> @POS_7_0_MARK_0;
	markClass uni030A <anchor 110 496> @POS_7_0_MARK_0;
	markClass tildecomb <anchor 164 496> @POS_7_0_MARK_0;
	markClass uni0304 <anchor 176 496> @POS_7_0_MARK_0;
	markClass uni0312 <anchor 58 496> @POS_7_0_MARK_0;
	markClass uni0308.case <anchor 171 700> @POS_7_0_MARK_0;
	markClass uni0307.case <anchor 71 700> @POS_7_0_MARK_0;
	markClass gravecomb.case <anchor 109 700> @POS_7_0_MARK_0;
	markClass acutecomb.case <anchor 109 700> @POS_7_0_MARK_0;
	markClass uni030B.case <anchor 162 700> @POS_7_0_MARK_0;
	markClass uni0302.case <anchor 142 700> @POS_7_0_MARK_0;
	markClass uni030C.case <anchor 142 700> @POS_7_0_MARK_0;
	markClass uni0306.case <anchor 149 700> @POS_7_0_MARK_0;
	markClass uni030A.case <anchor 110 700> @POS_7_0_MARK_0;
	markClass tildecomb.case <anchor 164 700> @POS_7_0_MARK_0;
	markClass uni0304.case <anchor 176 700> @POS_7_0_MARK_0;
	markClass uni0308.narrow <anchor 171 496> @POS_7_0_MARK_0;
	pos mark uni0308 <anchor 171 723> mark @POS_7_0_MARK_0;
	pos mark uni0307 <anchor 71 723> mark @POS_7_0_MARK_0;
	pos mark gravecomb <anchor 109 749> mark @POS_7_0_MARK_0;
	pos mark acutecomb <anchor 109 749> mark @POS_7_0_MARK_0;
	pos mark uni030B <anchor 132 711> mark @POS_7_0_MARK_0;
	pos mark uni0302 <anchor 142 730> mark @POS_7_0_MARK_0;
	pos mark uni030C <anchor 142 730> mark @POS_7_0_MARK_0;
	pos mark uni0306 <anchor 149 722> mark @POS_7_0_MARK_0;
	pos mark uni030A <anchor 110 766> mark @POS_7_0_MARK_0;
	pos mark tildecomb <anchor 164 705> mark @POS_7_0_MARK_0;
	pos mark uni0304 <anchor 176 693> mark @POS_7_0_MARK_0;
	pos mark uni0312 <anchor 58 804> mark @POS_7_0_MARK_0;
	pos mark uni0308.case <anchor 171 912> mark @POS_7_0_MARK_0;
	pos mark uni0307.case <anchor 71 912> mark @POS_7_0_MARK_0;
	pos mark gravecomb.case <anchor 109 942> mark @POS_7_0_MARK_0;
	pos mark acutecomb.case <anchor 109 942> mark @POS_7_0_MARK_0;
	pos mark uni030B.case <anchor 162 915> mark @POS_7_0_MARK_0;
	pos mark uni0302.case <anchor 142 911> mark @POS_7_0_MARK_0;
	pos mark uni030C.case <anchor 142 910> mark @POS_7_0_MARK_0;
	pos mark uni0306.case <anchor 149 909> mark @POS_7_0_MARK_0;
	pos mark uni030A.case <anchor 110 971> mark @POS_7_0_MARK_0;
	pos mark tildecomb.case <anchor 164 868> mark @POS_7_0_MARK_0;
	pos mark uni0304.case <anchor 176 867> mark @POS_7_0_MARK_0;
	pos mark uni0308.narrow <anchor 171 723> mark @POS_7_0_MARK_0;
} POS_7;
script latn;
language dflt;
lookup POS_6;
lookup POS_7;
language AZE;
lookup POS_6;
lookup POS_7;
language CAT;
lookup POS_6;
lookup POS_7;
language CRT;
lookup POS_6;
lookup POS_7;
language KAZ;
lookup POS_6;
lookup POS_7;
language MOL;
lookup POS_6;
lookup POS_7;
language NLD;
lookup POS_6;
lookup POS_7;
language ROM;
lookup POS_6;
lookup POS_7;
language TAT;
lookup POS_6;
lookup POS_7;
language TRK;
lookup POS_6;
lookup POS_7;
";
tag = mkmk;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 992;
},
{
name = typoDescender;
value = -310;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 992;
},
{
name = winDescent;
value = 310;
},
{
name = hheaAscender;
value = 992;
},
{
name = hheaDescender;
value = -310;
},
{
name = strikeoutPosition;
value = 297;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
200
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 1
INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
WCVTF[ ]	/* WriteCVTInFUnits */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 6 values pushed */
0 0 42 0 4 0
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
NPUSHB[ ]	/* 10 values pushed */
55 4 47 4 31 8 21 5 4 10
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
NPUSHB[ ]	/* 10 values pushed */
59 2 51 2 39 6 26 3 4 10
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 11
WS[ ]	/* WriteStore */
PUSHW[ ]	/* 6 values pushed */
3584 3072 2048 1408 4 11
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 15
WS[ ]	/* WriteStore */
PUSHW[ ]	/* 6 values pushed */
64 64 64 64 4 11
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
36 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
40 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2048
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
39 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 3 values pushed */
2176 1 1088
GETINFO[ ]	/* GetInfo */
MUL[ ]	/* Multiply */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
57 2 49 2 33 6 23 3 4 14
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
4
SCANTYPE[ ]	/* ScanType */
PUSHB[ ]	/* 2 values pushed */
2 0
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 4 values pushed */
5 100 6 0
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */
0
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
RCVT[ ]	/* ReadCVT */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
14
LTEQ[ ]	/* LessThenOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
6
GTEQ[ ]	/* GreaterThanOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
52
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
40
EIF[ ]	/* EndIf */
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
2
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 4 values pushed */
3 20 21 0
WS[ ]	/* WriteStore */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
19
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
2 20
RS[ ]	/* ReadStore */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
37 3
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
EQ[ ]	/* Equal */
JROT[ ]	/* JumpRelativeOnTrue */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
4
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 3 values pushed */
2 2 2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
33
NEG[ ]	/* Negate */
JMPR[ ]	/* Jump */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 3 values pushed */
14 21 1
WS[ ]	/* WriteStore */
JMPR[ ]	/* Jump */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
19 1 19
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 1 2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
4
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
21
RS[ ]	/* ReadStore */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
22
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
AND[ ]	/* LogicalAnd */
PUSHB[ ]	/* 3 values pushed */
40 1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
EIF[ ]	/* EndIf */
GT[ ]	/* GreaterThan */
OR[ ]	/* LogicalOr */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
80
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
56
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
56
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
40
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
48
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
10
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
54
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
54
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
30
MPPEM[ ]	/* MeasurePixelPerEm */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 1 value pushed */
4096
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1280
DIV[ ]	/* Divide */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ABS[ ]	/* Absolute */
SUB[ ]	/* Subtract */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
22
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
5
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
7
RS[ ]	/* ReadStore */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
6
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 2 values pushed */
7 98
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
5
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
48 5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
ADD[ ]	/* Add */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
SUB[ ]	/* Subtract */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
0 2 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
7
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
9 14 0
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
11
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
12
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
13
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
36
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
14
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 4 values pushed */
13 12 0 3
RCVT[ ]	/* ReadCVT */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
15
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 2
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
100
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
16
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
15
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
15
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
MUL[ ]	/* Multiply */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
17
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
17
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
4 100
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
13
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
MPPEM[ ]	/* MeasurePixelPerEm */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
4 100
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
19
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 18
RS[ ]	/* ReadStore */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
18 18
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
17
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
15 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
16 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
16
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
0 0
SZP0[ ]	/* SetZonePointer0 */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
0
MIAP[0]	/* MoveIndirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
1 1 1
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
14
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
13
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 8 values pushed */
24 24 1 0 17 0 19 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
20
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 2 values pushed */
20 8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
139
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
24
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
25
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
26
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
27
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
28
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
29
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
30
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
31
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
43
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
6
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP1[ ]	/* DeltaExceptionP1 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
44
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
22
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP2[ ]	/* DeltaExceptionP2 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
45
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
38
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP3[ ]	/* DeltaExceptionP3 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
15
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
14
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
13
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
24 24 1 0 17 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
20 8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
139
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
33
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
34
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
35
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
36
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
38
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
39
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
40
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
41
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
42
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
46
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
24
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
46
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
47
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
49
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
15
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
49
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
SHC[1]	/* ShiftContourByLastPt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 5 values pushed */
0 0 0 0 0
WCVTP[ ]	/* WriteCVTInPixels */
MIAP[0]	/* MoveIndirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
52 1
SZP2[ ]	/* SetZonePointer2 */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
54
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55
FDEF[ ]	/* FunctionDefinition */
MDAP[0]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
56
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 0
SZPS[ ]	/* SetZonePointerS */
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
56 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
4 32 5 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
4 38 5 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
60
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
61
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
62
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
0
EQ[ ]	/* Equal */
IF[ ]	/* If */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
63
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
64
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
65
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
GT[ ]	/* GreaterThan */
ELSE[ ]	/* Else */
LT[ ]	/* LessThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
66
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
GT[ ]	/* GreaterThan */
ELSE[ ]	/* Else */
LT[ ]	/* LessThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
67
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
68
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
CALL[ ]	/* CallFunction */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
69
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
70
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
10 4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
4 32 5 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
4 38 5 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
71
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 58
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
72
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 59
CALL[ ]	/* CallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
73
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
54
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
74
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
54
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
75
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 1
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
PUSHB[ ]	/* 1 value pushed */
55
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
76
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
77
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
78
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
77
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
79
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
80
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
81
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
82
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
83
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
84
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
85
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
86
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
87
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
88
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
89
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
90
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
91
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
92
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
93
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
94
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
95
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
96
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
97
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
98
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
99
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
100
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
101
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
102
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
103
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
104
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
105
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
106
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
107
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
108
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
109
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
110
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
111
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
112
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
113
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
114
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
115
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
116
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
117
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
118
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
119
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
120
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
121
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
122
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
123
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
124
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
125
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
126
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
127
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
128
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
129
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
130
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
131
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
132
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
133
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
134
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
135
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
136
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
137
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
138
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
139
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
11 0 3
RCVT[ ]	/* ReadCVT */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6
ELSE[ ]	/* Else */
PUSHB[ ]	/* 3 values pushed */
4 2 3
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
8
NEG[ ]	/* Negate */
PUSHB[ ]	/* 1 value pushed */
3
DEPTH[ ]	/* GetDepthStack */
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    24,
    24,
    24,
    712,
    0,
    \"-220\",
    712,
    0,
    \"-220\",
    85,
    85,
    73,
    73,
    700,
    0,
    700,
    496,
    0,
    \"-220\",
    712,
    \"-12\",
    720,
    508,
    \"-12\",
    \"-220\",
    65,
    65,
    57,
    57,
    353,
    0,
    358,
    \"-5\",
    65,
    65,
    57,
    57,
    700,
    347,
    705,
    342
)";
}
);
id = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
metricValues = (
{
pos = 992;
},
{
pos = 700;
},
{
pos = 496;
},
{
},
{
pos = -310;
},
{
}
);
name = Regular;
},
{
customParameters = (
{
name = typoAscender;
value = 992;
},
{
name = typoDescender;
value = -310;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 992;
},
{
name = winDescent;
value = 310;
},
{
name = hheaAscender;
value = 992;
},
{
name = hheaDescender;
value = -310;
},
{
name = strikeoutPosition;
value = 297;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
200
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 1
INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
WCVTF[ ]	/* WriteCVTInFUnits */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 6 values pushed */
0 0 42 0 4 0
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
NPUSHB[ ]	/* 10 values pushed */
55 4 47 4 31 8 21 5 4 10
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
NPUSHB[ ]	/* 10 values pushed */
59 2 51 2 39 6 26 3 4 10
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 11
WS[ ]	/* WriteStore */
PUSHW[ ]	/* 6 values pushed */
3584 3072 2048 1408 4 11
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 15
WS[ ]	/* WriteStore */
PUSHW[ ]	/* 6 values pushed */
64 64 64 64 4 11
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
36 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
40 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2048
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
39 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 3 values pushed */
2176 1 1088
GETINFO[ ]	/* GetInfo */
MUL[ ]	/* Multiply */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
57 2 49 2 33 6 23 3 4 14
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
4
SCANTYPE[ ]	/* ScanType */
PUSHB[ ]	/* 2 values pushed */
2 0
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 4 values pushed */
5 100 6 0
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */
0
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
RCVT[ ]	/* ReadCVT */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
14
LTEQ[ ]	/* LessThenOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
6
GTEQ[ ]	/* GreaterThanOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
52
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
40
EIF[ ]	/* EndIf */
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
2
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 4 values pushed */
3 20 21 0
WS[ ]	/* WriteStore */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
19
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
2 20
RS[ ]	/* ReadStore */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
37 3
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
EQ[ ]	/* Equal */
JROT[ ]	/* JumpRelativeOnTrue */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
4
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 3 values pushed */
2 2 2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
33
NEG[ ]	/* Negate */
JMPR[ ]	/* Jump */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 3 values pushed */
14 21 1
WS[ ]	/* WriteStore */
JMPR[ ]	/* Jump */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
19 1 19
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 1 2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
4
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
21
RS[ ]	/* ReadStore */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
22
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
AND[ ]	/* LogicalAnd */
PUSHB[ ]	/* 3 values pushed */
40 1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
EIF[ ]	/* EndIf */
GT[ ]	/* GreaterThan */
OR[ ]	/* LogicalOr */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
80
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
56
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
56
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
40
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
48
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
10
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
54
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
54
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
30
MPPEM[ ]	/* MeasurePixelPerEm */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 1 value pushed */
4096
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1280
DIV[ ]	/* Divide */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ABS[ ]	/* Absolute */
SUB[ ]	/* Subtract */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
22
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
5
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
7
RS[ ]	/* ReadStore */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
6
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 2 values pushed */
7 98
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
5
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
48 5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
ADD[ ]	/* Add */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
SUB[ ]	/* Subtract */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
0 2 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
7
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
9 14 0
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
11
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
12
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
13
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
36
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
14
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 4 values pushed */
13 12 0 3
RCVT[ ]	/* ReadCVT */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
15
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 2
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
100
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
16
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
15
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
15
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
MUL[ ]	/* Multiply */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
17
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
17
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
4 100
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
13
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
MPPEM[ ]	/* MeasurePixelPerEm */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
4 100
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
19
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 18
RS[ ]	/* ReadStore */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
18 18
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
17
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
15 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
16 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
16
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
0 0
SZP0[ ]	/* SetZonePointer0 */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
0
MIAP[0]	/* MoveIndirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
1 1 1
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
14
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
13
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 8 values pushed */
24 24 1 0 17 0 19 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
20
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 2 values pushed */
20 8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
139
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
24
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
25
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
26
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
27
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
28
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
29
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
30
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
31
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
43
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
6
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP1[ ]	/* DeltaExceptionP1 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
44
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
22
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP2[ ]	/* DeltaExceptionP2 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
45
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
38
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP3[ ]	/* DeltaExceptionP3 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
15
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
14
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
13
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
24 24 1 0 17 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
20 8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
139
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
33
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
34
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
35
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
36
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
38
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
39
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
40
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
41
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
42
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
46
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
24
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
46
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
47
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
49
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
15
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
49
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
SHC[1]	/* ShiftContourByLastPt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 5 values pushed */
0 0 0 0 0
WCVTP[ ]	/* WriteCVTInPixels */
MIAP[0]	/* MoveIndirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
52 1
SZP2[ ]	/* SetZonePointer2 */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
54
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55
FDEF[ ]	/* FunctionDefinition */
MDAP[0]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
56
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 0
SZPS[ ]	/* SetZonePointerS */
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
56 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
4 32 5 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
4 38 5 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
60
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
61
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
62
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
0
EQ[ ]	/* Equal */
IF[ ]	/* If */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
63
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
64
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
65
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
GT[ ]	/* GreaterThan */
ELSE[ ]	/* Else */
LT[ ]	/* LessThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
66
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
GT[ ]	/* GreaterThan */
ELSE[ ]	/* Else */
LT[ ]	/* LessThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
67
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
68
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
CALL[ ]	/* CallFunction */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
69
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
70
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
10 4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
4 32 5 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
4 38 5 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
71
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 58
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
72
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 59
CALL[ ]	/* CallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
73
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
54
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
74
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
54
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
75
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 1
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
PUSHB[ ]	/* 1 value pushed */
55
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
76
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
77
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
78
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
77
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
79
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
80
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
81
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
82
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
83
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
84
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
85
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
86
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
87
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
88
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
89
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
90
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
91
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
92
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
93
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
94
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
95
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
96
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
97
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
98
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
99
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
100
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
101
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
102
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
103
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
104
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
105
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
106
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
107
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
108
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
109
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
110
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
111
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
112
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
113
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
114
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
115
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
116
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
117
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
118
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
119
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
120
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
121
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
122
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
123
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
124
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
125
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
126
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
127
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
128
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
129
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
130
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
131
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
132
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
133
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
134
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
135
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
136
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
137
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
138
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
139
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
11 0 3
RCVT[ ]	/* ReadCVT */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6
ELSE[ ]	/* Else */
PUSHB[ ]	/* 3 values pushed */
4 2 3
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
8
NEG[ ]	/* Negate */
PUSHB[ ]	/* 1 value pushed */
3
DEPTH[ ]	/* GetDepthStack */
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    24,
    24,
    24,
    712,
    0,
    \"-220\",
    712,
    0,
    \"-220\",
    107,
    107,
    92,
    92,
    700,
    0,
    700,
    496,
    0,
    \"-220\",
    712,
    \"-12\",
    723,
    508,
    \"-12\",
    \"-220\",
    71,
    71,
    63,
    63,
    353,
    0,
    358,
    \"-5\",
    71,
    71,
    63,
    63,
    700,
    347,
    705,
    342
)";
}
);
id = m01;
metricValues = (
{
pos = 992;
},
{
pos = 700;
},
{
pos = 496;
},
{
},
{
pos = -310;
},
{
}
);
name = Medium;
},
{
customParameters = (
{
name = typoAscender;
value = 992;
},
{
name = typoDescender;
value = -310;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 992;
},
{
name = winDescent;
value = 310;
},
{
name = hheaAscender;
value = 992;
},
{
name = hheaDescender;
value = -310;
},
{
name = strikeoutPosition;
value = 297;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
200
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 1
INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
WCVTF[ ]	/* WriteCVTInFUnits */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 6 values pushed */
0 0 42 0 4 0
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
NPUSHB[ ]	/* 10 values pushed */
55 4 47 4 31 8 21 5 4 10
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
NPUSHB[ ]	/* 10 values pushed */
59 2 51 2 39 6 26 3 4 10
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 11
WS[ ]	/* WriteStore */
PUSHW[ ]	/* 6 values pushed */
3584 3072 2048 1408 4 11
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 15
WS[ ]	/* WriteStore */
PUSHW[ ]	/* 6 values pushed */
64 64 64 64 4 11
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
36 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
40 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2048
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
39 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 3 values pushed */
2176 1 1088
GETINFO[ ]	/* GetInfo */
MUL[ ]	/* Multiply */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
57 2 49 2 33 6 23 3 4 14
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
4
SCANTYPE[ ]	/* ScanType */
PUSHB[ ]	/* 2 values pushed */
2 0
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 4 values pushed */
5 100 6 0
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */
0
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
RCVT[ ]	/* ReadCVT */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
14
LTEQ[ ]	/* LessThenOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
6
GTEQ[ ]	/* GreaterThanOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
52
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
40
EIF[ ]	/* EndIf */
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
2
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 4 values pushed */
3 20 21 0
WS[ ]	/* WriteStore */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
19
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
2 20
RS[ ]	/* ReadStore */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
37 3
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
EQ[ ]	/* Equal */
JROT[ ]	/* JumpRelativeOnTrue */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
4
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 3 values pushed */
2 2 2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
33
NEG[ ]	/* Negate */
JMPR[ ]	/* Jump */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 3 values pushed */
14 21 1
WS[ ]	/* WriteStore */
JMPR[ ]	/* Jump */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
19 1 19
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 1 2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
4
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
21
RS[ ]	/* ReadStore */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
22
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
AND[ ]	/* LogicalAnd */
PUSHB[ ]	/* 3 values pushed */
40 1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
EIF[ ]	/* EndIf */
GT[ ]	/* GreaterThan */
OR[ ]	/* LogicalOr */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
80
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
56
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
56
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
40
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
48
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
10
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
54
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
54
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
30
MPPEM[ ]	/* MeasurePixelPerEm */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 1 value pushed */
4096
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1280
DIV[ ]	/* Divide */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ABS[ ]	/* Absolute */
SUB[ ]	/* Subtract */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
22
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
5
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
7
RS[ ]	/* ReadStore */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
6
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 2 values pushed */
7 98
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
5
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
48 5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
ADD[ ]	/* Add */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
SUB[ ]	/* Subtract */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
0 2 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
7
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
9 14 0
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
11
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
12
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
13
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
36
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
14
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 4 values pushed */
13 12 0 3
RCVT[ ]	/* ReadCVT */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
15
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 2
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
100
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
16
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
15
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
15
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
MUL[ ]	/* Multiply */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
17
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
17
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
4 100
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
13
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
MPPEM[ ]	/* MeasurePixelPerEm */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
4 100
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
19
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 18
RS[ ]	/* ReadStore */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
18 18
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
17
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
15 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
16 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
16
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
0 0
SZP0[ ]	/* SetZonePointer0 */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
0
MIAP[0]	/* MoveIndirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
1 1 1
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
14
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
13
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 8 values pushed */
24 24 1 0 17 0 19 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
20
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 2 values pushed */
20 8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
139
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
24
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
25
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
26
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
27
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
28
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
29
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
30
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
31
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
43
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
6
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP1[ ]	/* DeltaExceptionP1 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
44
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
22
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP2[ ]	/* DeltaExceptionP2 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
45
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
38
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP3[ ]	/* DeltaExceptionP3 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
15
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
14
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
13
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
24 24 1 0 17 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
20 8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
139
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
33
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
34
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
35
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
36
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
38
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
39
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
40
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
41
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
42
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
46
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
24
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
46
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
47
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
49
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
15
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
49
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
SHC[1]	/* ShiftContourByLastPt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 5 values pushed */
0 0 0 0 0
WCVTP[ ]	/* WriteCVTInPixels */
MIAP[0]	/* MoveIndirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
52 1
SZP2[ ]	/* SetZonePointer2 */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
54
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55
FDEF[ ]	/* FunctionDefinition */
MDAP[0]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
56
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 0
SZPS[ ]	/* SetZonePointerS */
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
56 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
4 32 5 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
4 38 5 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
60
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
61
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
62
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
0
EQ[ ]	/* Equal */
IF[ ]	/* If */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
63
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
64
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
65
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
GT[ ]	/* GreaterThan */
ELSE[ ]	/* Else */
LT[ ]	/* LessThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
66
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
GT[ ]	/* GreaterThan */
ELSE[ ]	/* Else */
LT[ ]	/* LessThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
67
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
68
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
CALL[ ]	/* CallFunction */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
69
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
70
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
10 4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
4 32 5 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
4 38 5 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
71
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 58
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
72
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 59
CALL[ ]	/* CallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
73
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
54
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
74
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
54
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
75
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 1
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
PUSHB[ ]	/* 1 value pushed */
55
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
76
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
77
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
78
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
77
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
79
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
80
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
81
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
82
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
83
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
84
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
85
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
86
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
87
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
88
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
89
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
90
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
91
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
92
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
93
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
94
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
95
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
96
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
97
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
98
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
99
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
100
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
101
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
102
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
103
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
104
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
105
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
106
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
107
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
108
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
109
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
110
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
111
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
112
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
113
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
114
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
115
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
116
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
117
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
118
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
119
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
120
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
121
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
122
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
123
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
124
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
125
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
126
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
127
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
128
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
129
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
130
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
131
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
132
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
133
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
134
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
135
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
136
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
137
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
138
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
139
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
11 0 3
RCVT[ ]	/* ReadCVT */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6
ELSE[ ]	/* Else */
PUSHB[ ]	/* 3 values pushed */
4 2 3
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
8
NEG[ ]	/* Negate */
PUSHB[ ]	/* 1 value pushed */
3
DEPTH[ ]	/* GetDepthStack */
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    24,
    24,
    24,
    712,
    0,
    \"-220\",
    712,
    0,
    \"-220\",
    115,
    115,
    98,
    98,
    700,
    0,
    700,
    496,
    0,
    \"-220\",
    712,
    \"-12\",
    724,
    508,
    \"-12\",
    \"-220\",
    73,
    73,
    66,
    66,
    353,
    0,
    358,
    \"-5\",
    73,
    73,
    66,
    66,
    700,
    347,
    705,
    342
)";
}
);
iconName = SemiBold;
id = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
metricValues = (
{
pos = 992;
},
{
pos = 700;
},
{
pos = 496;
},
{
},
{
pos = -310;
},
{
}
);
name = SemiBold;
},
{
customParameters = (
{
name = typoAscender;
value = 992;
},
{
name = typoDescender;
value = -310;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 992;
},
{
name = winDescent;
value = 310;
},
{
name = hheaAscender;
value = 992;
},
{
name = hheaDescender;
value = -310;
},
{
name = strikeoutPosition;
value = 297;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
200
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 1
INSTCTRL[ ]	/* SetInstrExecControl */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
WCVTF[ ]	/* WriteCVTInFUnits */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 6 values pushed */
0 0 42 0 4 0
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
NPUSHB[ ]	/* 10 values pushed */
55 4 47 4 31 8 21 5 4 10
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 7
WS[ ]	/* WriteStore */
NPUSHB[ ]	/* 10 values pushed */
59 2 51 2 39 6 26 3 4 10
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 11
WS[ ]	/* WriteStore */
PUSHW[ ]	/* 6 values pushed */
3584 3072 2048 1408 4 11
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
0 15
WS[ ]	/* WriteStore */
PUSHW[ ]	/* 6 values pushed */
64 64 64 64 4 11
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
36 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 2 values pushed */
40 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2048
GETINFO[ ]	/* GetInfo */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
39 1
GETINFO[ ]	/* GetInfo */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHW[ ]	/* 3 values pushed */
2176 1 1088
GETINFO[ ]	/* GetInfo */
MUL[ ]	/* Multiply */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHW[ ]	/* 2 values pushed */
3 0
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
57 2 49 2 33 6 23 3 4 14
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHW[ ]	/* 1 value pushed */
511
SCANCTRL[ ]	/* ScanConversionControl */
PUSHB[ ]	/* 1 value pushed */
4
SCANTYPE[ ]	/* ScanType */
PUSHB[ ]	/* 2 values pushed */
2 0
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 4 values pushed */
5 100 6 0
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */
0
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
RCVT[ ]	/* ReadCVT */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHW[ ]	/* 1 value pushed */
14
LTEQ[ ]	/* LessThenOrEqual */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
6
GTEQ[ ]	/* GreaterThanOrEqual */
AND[ ]	/* LogicalAnd */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
52
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
40
EIF[ ]	/* EndIf */
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
2
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 4 values pushed */
3 20 21 0
WS[ ]	/* WriteStore */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
19
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
2 20
RS[ ]	/* ReadStore */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
37 3
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
EQ[ ]	/* Equal */
JROT[ ]	/* JumpRelativeOnTrue */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
4
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 3 values pushed */
2 2 2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
33
NEG[ ]	/* Negate */
JMPR[ ]	/* Jump */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 3 values pushed */
14 21 1
WS[ ]	/* WriteStore */
JMPR[ ]	/* Jump */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
2
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
19 1 19
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 1 2
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
4
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
3
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
21
RS[ ]	/* ReadStore */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
22
RS[ ]	/* ReadStore */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
AND[ ]	/* LogicalAnd */
PUSHB[ ]	/* 3 values pushed */
40 1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
EIF[ ]	/* EndIf */
GT[ ]	/* GreaterThan */
OR[ ]	/* LogicalOr */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
ROLL[ ]	/* RollTopThreeStack */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
80
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
56
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
56
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
40
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
48
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
192
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
FLOOR[ ]	/* Floor */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
10
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
54
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
54
ADD[ ]	/* Add */
ELSE[ ]	/* Else */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
30
MPPEM[ ]	/* MeasurePixelPerEm */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 1 value pushed */
4096
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
12
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1280
DIV[ ]	/* Divide */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
ABS[ ]	/* Absolute */
SUB[ ]	/* Subtract */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
22
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
5
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
7
RS[ ]	/* ReadStore */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
6
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 2 values pushed */
7 98
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
6
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 2 values pushed */
1 13
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
5
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
8
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
48 5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
ADD[ ]	/* Add */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
SUB[ ]	/* Subtract */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
EIF[ ]	/* EndIf */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
7
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
0 2 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
8
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
7
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
9
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
9 14 0
RS[ ]	/* ReadStore */
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
11
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 3 values pushed */
0 1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
12
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
48
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
13
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ABS[ ]	/* Absolute */
PUSHB[ ]	/* 1 value pushed */
36
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
64
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
NEG[ ]	/* Negate */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
14
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 4 values pushed */
13 12 0 3
RCVT[ ]	/* ReadCVT */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
15
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 2
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
100
SUB[ ]	/* Subtract */
WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
16
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
15
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
15
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16
RS[ ]	/* ReadStore */
MD[1]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
0
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
17
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHW[ ]	/* 1 value pushed */
1024
MUL[ ]	/* Multiply */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
17
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
17
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
18
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
4 100
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
13
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
19
FDEF[ ]	/* FunctionDefinition */
MPPEM[ ]	/* MeasurePixelPerEm */
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
MPPEM[ ]	/* MeasurePixelPerEm */
GTEQ[ ]	/* GreaterThanOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
4 100
WCVTP[ ]	/* WriteCVTInPixels */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
DEPTH[ ]	/* GetDepthStack */
PUSHB[ ]	/* 1 value pushed */
19
NEG[ ]	/* Negate */
SWAP[ ]	/* SwapTopStack */
JROT[ ]	/* JumpRelativeOnTrue */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
20
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 18
RS[ ]	/* ReadStore */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
18 18
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
17
CALL[ ]	/* CallFunction */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
15 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
16 2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 0
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
16
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
16
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
0 0
SZP0[ ]	/* SetZonePointer0 */
SWAP[ ]	/* SwapTopStack */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
0
MIAP[0]	/* MoveIndirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
1 1 1
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
21
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
14
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
13
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 8 values pushed */
24 24 1 0 17 0 19 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
20
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 2 values pushed */
20 8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
139
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
22
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
23
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
24
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
25
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
26
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
27
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
28
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
29
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
30
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
31
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 21
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
43
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
6
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP1[ ]	/* DeltaExceptionP1 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
44
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
22
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP2[ ]	/* DeltaExceptionP2 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
45
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
16
DIV[ ]	/* Divide */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
38
ADD[ ]	/* Add */
MPPEM[ ]	/* MeasurePixelPerEm */
EQ[ ]	/* Equal */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1
DELTAP3[ ]	/* DeltaExceptionP3 */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
32
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
15
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
PUSHB[ ]	/* 1 value pushed */
14
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
13
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
4
ADD[ ]	/* Add */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 6 values pushed */
24 24 1 0 17 0
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 2 values pushed */
20 8
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
139
CALL[ ]	/* CallFunction */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
33
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
34
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
35
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
36
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
3 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
37
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
4 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
38
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
5 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
39
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
6 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
40
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
7 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
41
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
8 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
42
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
9 32
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
46
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
24
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
RS[ ]	/* ReadStore */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
46
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
48
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
47
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
47
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
49
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
NEQ[ ]	/* NotEqual */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
50
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
49
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
51
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
15
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
0 2
RCVT[ ]	/* ReadCVT */
EQ[ ]	/* Equal */
IF[ ]	/* If */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
49
LOOPCALL[ ]	/* LoopAndCallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ELSE[ ]	/* Else */
CLEAR[ ]	/* ClearStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
52
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
SHC[1]	/* ShiftContourByLastPt */
PUSHB[ ]	/* 1 value pushed */
1
ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
53
FDEF[ ]	/* FunctionDefinition */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 2 values pushed */
14 6
RCVT[ ]	/* ReadCVT */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
1
RCVT[ ]	/* ReadCVT */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 5 values pushed */
0 0 0 0 0
WCVTP[ ]	/* WriteCVTInPixels */
MIAP[0]	/* MoveIndirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
52 1
SZP2[ ]	/* SetZonePointer2 */
LOOPCALL[ ]	/* LoopAndCallFunction */
POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
54
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
55
FDEF[ ]	/* FunctionDefinition */
MDAP[0]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
56
FDEF[ ]	/* FunctionDefinition */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
14
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
0
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
1
RS[ ]	/* ReadStore */
MUL[ ]	/* Multiply */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
2 0
SZPS[ ]	/* SetZonePointerS */
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
56 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
NEG[ ]	/* Negate */
ROLL[ ]	/* RollTopThreeStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
4 32 5 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
4 38 5 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
SWAP[ ]	/* SwapTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
60
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SWAP[ ]	/* SwapTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
61
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
62
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
0
EQ[ ]	/* Equal */
IF[ ]	/* If */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
6
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
5
CINDEX[ ]	/* CopyXToTopStack */
MD[0]	/* MeasureDistance */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
SUB[ ]	/* Subtract */
PUSHW[ ]	/* 2 values pushed */
2048 2048
MUL[ ]	/* Multiply */
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
IF[ ]	/* If */
DIV[ ]	/* Divide */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
MUL[ ]	/* Multiply */
PUSHW[ ]	/* 1 value pushed */
1024
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
SWAP[ ]	/* SwapTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
63
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
23
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
10
RS[ ]	/* ReadStore */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
ADD[ ]	/* Add */
PUSHB[ ]	/* 1 value pushed */
32
ADD[ ]	/* Add */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
64
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
65
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
GT[ ]	/* GreaterThan */
ELSE[ ]	/* Else */
LT[ ]	/* LessThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
66
FDEF[ ]	/* FunctionDefinition */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
GT[ ]	/* GreaterThan */
ELSE[ ]	/* Else */
LT[ ]	/* LessThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
67
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
58
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
68
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
59
CALL[ ]	/* CallFunction */
ROLL[ ]	/* RollTopThreeStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
ROLL[ ]	/* RollTopThreeStack */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
23
RS[ ]	/* ReadStore */
IF[ ]	/* If */
LT[ ]	/* LessThan */
ELSE[ ]	/* Else */
GT[ ]	/* GreaterThan */
EIF[ ]	/* EndIf */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
EIF[ ]	/* EndIf */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
69
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
MINDEX[ ]	/* MoveXToTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
12
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
70
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
10 4
CINDEX[ ]	/* CopyXToTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
4
CINDEX[ ]	/* CopyXToTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 2 values pushed */
12 0
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
11
RS[ ]	/* ReadStore */
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
96
LT[ ]	/* LessThan */
IF[ ]	/* If */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
64
LTEQ[ ]	/* LessThenOrEqual */
IF[ ]	/* If */
PUSHB[ ]	/* 4 values pushed */
4 32 5 32
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
4 38 5 26
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
ADD[ ]	/* Add */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
DUP[ ]	/* DuplicateTopStack */
ROLL[ ]	/* RollTopThreeStack */
ROLL[ ]	/* RollTopThreeStack */
SUB[ ]	/* Subtract */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
ABS[ ]	/* Absolute */
SWAP[ ]	/* SwapTopStack */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ABS[ ]	/* Absolute */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4
RS[ ]	/* ReadStore */
SUB[ ]	/* Subtract */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 1 value pushed */
5
RS[ ]	/* ReadStore */
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3
CINDEX[ ]	/* CopyXToTopStack */
PUSHB[ ]	/* 1 value pushed */
2
DIV[ ]	/* Divide */
DUP[ ]	/* DuplicateTopStack */
PUSHB[ ]	/* 1 value pushed */
0
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64
ADD[ ]	/* Add */
EIF[ ]	/* EndIf */
FLOOR[ ]	/* Floor */
PUSHB[ ]	/* 1 value pushed */
1
MUL[ ]	/* Multiply */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
2
CINDEX[ ]	/* CopyXToTopStack */
GC[0]	/* GetCoordOnPVector */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
SWAP[ ]	/* SwapTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
1
CALL[ ]	/* CallFunction */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
71
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 58
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
72
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 59
CALL[ ]	/* CallFunction */
POP[ ]	/* PopTopStack */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
DUP[ ]	/* DuplicateTopStack */
ALIGNRP[ ]	/* AlignRelativePt */
PUSHB[ ]	/* 1 value pushed */
6
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
SWAP[ ]	/* SwapTopStack */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
6
RS[ ]	/* ReadStore */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
48
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
73
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
54
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
74
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZP2[ ]	/* SetZonePointer2 */
DUP[ ]	/* DuplicateTopStack */
GC[1]	/* GetCoordOnPVector */
PUSHB[ ]	/* 1 value pushed */
0
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 3 values pushed */
0 1 1
SZP2[ ]	/* SetZonePointer2 */
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
54
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
75
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 1
SZP1[ ]	/* SetZonePointer1 */
SZP0[ ]	/* SetZonePointer0 */
PUSHB[ ]	/* 1 value pushed */
55
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
76
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
57
LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
77
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
RCVT[ ]	/* ReadCVT */
SWAP[ ]	/* SwapTopStack */
DUP[ ]	/* DuplicateTopStack */
MDAP[0]	/* MoveDirectAbsPt */
DUP[ ]	/* DuplicateTopStack */
GC[0]	/* GetCoordOnPVector */
ROLL[ ]	/* RollTopThreeStack */
SWAP[ ]	/* SwapTopStack */
SUB[ ]	/* Subtract */
SHPIX[ ]	/* ShiftZoneByPixel */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
78
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
10
SWAP[ ]	/* SwapTopStack */
WS[ ]	/* WriteStore */
PUSHB[ ]	/* 1 value pushed */
77
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
79
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
80
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
81
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
82
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 70
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
83
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
84
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
85
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
86
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 71
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
87
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
88
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
89
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
90
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 0 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
91
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
92
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
93
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
94
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 1 67
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
95
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
96
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
97
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
98
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 69
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
99
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 0 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
100
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
0 1 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
101
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 0 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
102
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
1 1 72
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
103
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
104
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
105
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
106
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 0 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
107
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 0 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
108
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
0 1 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
109
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 0 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
110
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 4 values pushed */
1 1 1 68
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
111
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
112
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
113
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
114
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 2 values pushed */
0 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
115
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
116
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
117
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
0
SZPS[ ]	/* SetZonePointerS */
PUSHB[ ]	/* 2 values pushed */
1 60
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
118
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
119
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
120
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
121
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
122
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
123
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
124
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 61
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
125
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
126
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
127
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
128
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
129
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
130
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
131
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 62
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
132
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
MDAP[0]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
48 1
SZP1[ ]	/* SetZonePointer1 */
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
133
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
134
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
135
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
0 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
136
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
64
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
137
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
65
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
138
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 2 values pushed */
1 63
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
66
CALL[ ]	/* CallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHB[ ]	/* 1 value pushed */
139
FDEF[ ]	/* FunctionDefinition */
PUSHB[ ]	/* 3 values pushed */
11 0 3
RCVT[ ]	/* ReadCVT */
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6
ELSE[ ]	/* Else */
PUSHB[ ]	/* 3 values pushed */
4 2 3
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
SWAP[ ]	/* SwapTopStack */
POP[ ]	/* PopTopStack */
ELSE[ ]	/* Else */
POP[ ]	/* PopTopStack */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
WS[ ]	/* WriteStore */
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
8
NEG[ ]	/* Negate */
PUSHB[ ]	/* 1 value pushed */
3
DEPTH[ ]	/* GetDepthStack */
LT[ ]	/* LessThan */
JROT[ ]	/* JumpRelativeOnTrue */
PUSHB[ ]	/* 2 values pushed */
5 1
SZP2[ ]	/* SetZonePointer2 */
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
IUP[0]	/* InterpolateUntPts */
EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    24,
    24,
    24,
    712,
    0,
    \"-220\",
    712,
    0,
    \"-220\",
    130,
    130,
    111,
    111,
    700,
    0,
    700,
    496,
    0,
    \"-220\",
    712,
    \"-12\",
    726,
    508,
    \"-12\",
    \"-220\",
    77,
    77,
    70,
    70,
    353,
    0,
    358,
    \"-5\",
    77,
    77,
    70,
    70,
    700,
    347,
    705,
    342
)";
}
);
iconName = Bold;
id = "59E4F189-9048-43B1-80D4-C98F20AC972F";
metricValues = (
{
pos = 992;
},
{
pos = 700;
},
{
pos = 496;
},
{
},
{
pos = -310;
},
{
}
);
name = Bold;
}
);
glyphs = (
{
glyphname = .notdef;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(465,0,l),
(465,700,l),
(64,700,l),
(64,0,l)
);
},
{
closed = 1;
nodes = (
(134,643,l),
(395,643,l),
(395,57,l),
(134,57,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 0 0 2 3 0 2 103 4 1 3 1 1 3 87 4 1 3 3 1 95 0 1 3 1 79 4 4 4 7 4 7 18 17 16 5 6 25
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(465,0,l),
(465,700,l),
(64,700,l),
(64,0,l)
);
},
{
closed = 1;
nodes = (
(134,643,l),
(395,643,l),
(395,57,l),
(134,57,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 0 0 2 3 0 2 103 4 1 3 1 1 3 87 4 1 3 3 1 95 0 1 3 1 79 4 4 4 7 4 7 18 17 16 5 6 25
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(465,0,l),
(465,700,l),
(64,700,l),
(64,0,l)
);
},
{
closed = 1;
nodes = (
(134,643,l),
(395,643,l),
(395,57,l),
(134,57,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 0 0 2 3 0 2 103 4 1 3 1 1 3 87 4 1 3 3 1 95 0 1 3 1 79 4 4 4 7 4 7 18 17 16 5 6 25
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(465,0,l),
(465,700,l),
(64,700,l),
(64,0,l)
);
},
{
closed = 1;
nodes = (
(134,643,l),
(395,643,l),
(395,57,l),
(134,57,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 0 0 2 3 0 2 103 4 1 3 1 1 3 87 4 1 3 3 1 95 0 1 3 1 79 4 4 4 7 4 7 18 17 16 5 6 25
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = .notdef;
},
{
glyphname = CR;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
width = 600;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
width = 600;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
width = 600;
}
);
note = CR;
unicode = 13;
},
{
glyphname = space;
kernLeft = space;
kernRight = space;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
width = 248;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
width = 265;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
width = 230;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
width = 242;
}
);
note = space;
unicode = 32;
},
{
glyphname = A;
kernLeft = A;
kernRight = A;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (340,0);
},
{
name = ogonek;
pos = (655,0);
},
{
name = top;
pos = (340,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(136,0,l),
(196,170,l),
(483,170,l),
(542,0,l),
(655,0,l),
(398,700,l),
(282,700,l),
(25,0,l)
);
},
{
closed = 1;
nodes = (
(339,574,l),
(452,255,l),
(227,255,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
9 1 4 0 1 76 5 1 4 0 2 1 4 2 104 0 0 0 33 77 3 1 1 1 34 1 78 8 8 8 10 8 10 17 17 17 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 679;
},
{
anchors = (
{
name = bottom;
pos = (332,0);
},
{
name = ogonek;
pos = (634,0);
},
{
name = top;
pos = (332,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(118,0,l),
(183,180,l),
(481,180,l),
(545,0,l),
(634,0,l),
(377,700,l),
(288,700,l),
(30,0,l)
);
},
{
closed = 1;
nodes = (
(332,594,l),
(456,248,l),
(208,248,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
9 1 4 0 1 76 5 1 4 0 2 1 4 2 104 0 0 0 33 77 3 1 1 1 34 1 78 8 8 8 10 8 10 17 17 17 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (347,0);
},
{
name = ogonek;
pos = (675,0);
},
{
name = top;
pos = (347,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(153,0,l),
(209,159,l),
(484,159,l),
(539,0,l),
(675,0,l),
(419,700,l),
(275,700,l),
(19,0,l)
);
},
{
closed = 1;
nodes = (
(346,553,l),
(448,262,l),
(245,262,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
9 1 4 0 1 76 5 1 4 0 2 1 4 2 104 0 0 0 33 77 3 1 1 1 34 1 78 8 8 8 10 8 10 17 17 17 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 694;
},
{
anchors = (
{
name = bottom;
pos = (342,0);
},
{
name = ogonek;
pos = (661,0);
},
{
name = top;
pos = (342,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(141,0,l),
(200,166,l),
(483,166,l),
(541,0,l),
(661,0,l),
(405,700,l),
(279,700,l),
(23,0,l)
);
},
{
closed = 1;
nodes = (
(341,567,l),
(451,257,l),
(233,257,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
9 1 4 0 1 76 5 1 4 0 2 1 4 2 104 0 0 0 33 77 3 1 1 1 34 1 78 8 8 8 10 8 10 17 17 17 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 684;
}
);
note = A;
unicode = 65;
},
{
glyphname = Aacute;
kernLeft = A;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (340,0);
},
{
name = ogonek;
pos = (655,0);
},
{
name = top;
pos = (340,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (231,0);
ref = acutecomb.case;
}
);
width = 679;
},
{
anchors = (
{
name = bottom;
pos = (332,0);
},
{
name = ogonek;
pos = (634,0);
},
{
name = top;
pos = (332,931);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (227,0);
ref = acutecomb.case;
}
);
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (347,0);
},
{
name = ogonek;
pos = (675,0);
},
{
name = top;
pos = (347,952);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (234,0);
ref = acutecomb.case;
}
);
width = 694;
},
{
anchors = (
{
name = bottom;
pos = (342,0);
},
{
name = ogonek;
pos = (661,0);
},
{
name = top;
pos = (342,945);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (232,0);
ref = acutecomb.case;
}
);
width = 684;
}
);
note = Aacute;
unicode = 193;
},
{
glyphname = Abreve;
kernLeft = A;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (340,0);
},
{
name = ogonek;
pos = (655,0);
},
{
name = top;
pos = (340,909);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (191,0);
ref = uni0306.case;
}
);
width = 679;
},
{
anchors = (
{
name = bottom;
pos = (332,0);
},
{
name = ogonek;
pos = (634,0);
},
{
name = top;
pos = (332,901);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (191,0);
ref = uni0306.case;
}
);
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (347,0);
},
{
name = ogonek;
pos = (675,0);
},
{
name = top;
pos = (347,917);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (191,0);
ref = uni0306.case;
}
);
width = 694;
},
{
anchors = (
{
name = bottom;
pos = (342,0);
},
{
name = ogonek;
pos = (661,0);
},
{
name = top;
pos = (342,912);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (191,0);
ref = uni0306.case;
}
);
width = 684;
}
);
note = Abreve;
unicode = 258;
},
{
glyphname = uni01CD;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (340,0);
},
{
name = ogonek;
pos = (655,0);
},
{
name = top;
pos = (340,910);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (198,0);
ref = uni030C.case;
}
);
width = 679;
},
{
anchors = (
{
name = bottom;
pos = (332,0);
},
{
name = ogonek;
pos = (634,0);
},
{
name = top;
pos = (332,901);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (195,0);
ref = uni030C.case;
}
);
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (347,0);
},
{
name = ogonek;
pos = (675,0);
},
{
name = top;
pos = (347,918);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (201,0);
ref = uni030C.case;
}
);
width = 694;
},
{
anchors = (
{
name = bottom;
pos = (342,0);
},
{
name = ogonek;
pos = (661,0);
},
{
name = top;
pos = (342,912);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (199,0);
ref = uni030C.case;
}
);
width = 684;
}
);
note = uni01CD;
unicode = 461;
},
{
glyphname = Acircumflex;
kernLeft = A;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (340,0);
},
{
name = ogonek;
pos = (655,0);
},
{
name = top;
pos = (340,911);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (198,0);
ref = uni0302.case;
}
);
width = 679;
},
{
anchors = (
{
name = bottom;
pos = (332,0);
},
{
name = ogonek;
pos = (634,0);
},
{
name = top;
pos = (332,902);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (195,0);
ref = uni0302.case;
}
);
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (347,0);
},
{
name = ogonek;
pos = (675,0);
},
{
name = top;
pos = (347,919);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (201,0);
ref = uni0302.case;
}
);
width = 694;
},
{
anchors = (
{
name = bottom;
pos = (342,0);
},
{
name = ogonek;
pos = (661,0);
},
{
name = top;
pos = (342,913);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (199,0);
ref = uni0302.case;
}
);
width = 684;
}
);
note = Acircumflex;
unicode = 194;
},
{
glyphname = Adieresis;
kernLeft = A;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (340,0);
},
{
name = ogonek;
pos = (655,0);
},
{
name = top;
pos = (340,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (169,0);
ref = uni0308.case;
}
);
width = 679;
},
{
anchors = (
{
name = bottom;
pos = (332,0);
},
{
name = ogonek;
pos = (634,0);
},
{
name = top;
pos = (332,889);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (185,0);
ref = uni0308.case;
}
);
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (347,0);
},
{
name = ogonek;
pos = (675,0);
},
{
name = top;
pos = (347,934);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (153,0);
ref = uni0308.case;
}
);
width = 694;
},
{
anchors = (
{
name = bottom;
pos = (342,0);
},
{
name = ogonek;
pos = (661,0);
},
{
name = top;
pos = (342,919);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (164,0);
ref = uni0308.case;
}
);
width = 684;
}
);
note = Adieresis;
unicode = 196;
},
{
glyphname = Agrave;
kernLeft = A;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (340,0);
},
{
name = ogonek;
pos = (655,0);
},
{
name = top;
pos = (340,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (231,0);
ref = gravecomb.case;
}
);
width = 679;
},
{
anchors = (
{
name = bottom;
pos = (332,0);
},
{
name = ogonek;
pos = (634,0);
},
{
name = top;
pos = (332,931);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (227,0);
ref = gravecomb.case;
}
);
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (347,0);
},
{
name = ogonek;
pos = (675,0);
},
{
name = top;
pos = (347,952);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (234,0);
ref = gravecomb.case;
}
);
width = 694;
},
{
anchors = (
{
name = bottom;
pos = (342,0);
},
{
name = ogonek;
pos = (661,0);
},
{
name = top;
pos = (342,945);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (232,0);
ref = gravecomb.case;
}
);
width = 684;
}
);
note = Agrave;
unicode = 192;
},
{
glyphname = Amacron;
kernLeft = A;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (340,0);
},
{
name = ogonek;
pos = (655,0);
},
{
name = top;
pos = (340,867);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (164,0);
ref = uni0304.case;
}
);
width = 679;
},
{
anchors = (
{
name = bottom;
pos = (332,0);
},
{
name = ogonek;
pos = (634,0);
},
{
name = top;
pos = (332,859);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (158,0);
ref = uni0304.case;
}
);
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (347,0);
},
{
name = ogonek;
pos = (675,0);
},
{
name = top;
pos = (347,874);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (170,0);
ref = uni0304.case;
}
);
width = 694;
},
{
anchors = (
{
name = bottom;
pos = (342,0);
},
{
name = ogonek;
pos = (661,0);
},
{
name = top;
pos = (342,869);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (166,0);
ref = uni0304.case;
}
);
width = 684;
}
);
note = Amacron;
unicode = 256;
},
{
glyphname = Aogonek;
kernLeft = A;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (340,0);
},
{
name = ogonek;
pos = (655,0);
},
{
name = top;
pos = (340,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(136,0,l),
(196,170,l),
(483,170,l),
(539,10,l),
(493,-17,o),
(452,-74,o),
(452,-107,qs),
(452,-156,o),
(524,-206,o),
(578,-206,qs),
(618,-206,o),
(659,-193,q),
(659,-127,l),
(622,-142,o),
(591,-142,qs),
(565,-142,o),
(535,-118,o),
(535,-97,qs),
(535,-78,o),
(565,-44,o),
(600,-27,qs),
(655,0,l),
(398,700,l),
(282,700,l),
(25,0,l)
);
},
{
closed = 1;
nodes = (
(339,574,l),
(452,255,l),
(227,255,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
26 1 5 0 20 1 4 3 11 1 1 4 12 1 2 1 4 76 2 1 4 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 5 0 3 4 5 3 104 0 0 0 33 77 0 4 4 34 77 0 1 1 2 97 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
6 1 5 0 3 4 5 3 104 0 1 0 2 1 2 101 0 0 0 33 77 0 4 4 34 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 25 25 27 25 27 17 22 35 39 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 679;
},
{
anchors = (
{
name = bottom;
pos = (332,0);
},
{
name = ogonek;
pos = (634,0);
},
{
name = top;
pos = (332,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(118,0,l),
(183,180,l),
(481,180,l),
(541,11,l),
(489,-15,o),
(444,-74,o),
(444,-108,qs),
(444,-155,o),
(512,-203,o),
(562,-203,qs),
(601,-203,o),
(637,-190,q),
(637,-134,l),
(603,-149,o),
(572,-149,qs),
(545,-149,o),
(512,-123,o),
(512,-100,qs),
(512,-59,o),
(576,-28,qs),
(634,0,l),
(377,700,l),
(288,700,l),
(30,0,l)
);
},
{
closed = 1;
nodes = (
(332,594,l),
(456,248,l),
(208,248,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
25 1 5 0 19 1 4 3 10 1 1 4 11 1 2 1 4 76 2 1 4 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 5 0 3 4 5 3 104 0 0 0 33 77 0 4 4 34 77 0 1 1 2 97 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
6 1 5 0 3 4 5 3 104 0 1 0 2 1 2 101 0 0 0 33 77 0 4 4 34 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
24 24 24 26 24 26 17 22 35 38 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (347,0);
},
{
name = ogonek;
pos = (675,0);
},
{
name = top;
pos = (347,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(153,0,l),
(209,159,l),
(484,159,l),
(537,7,l),
(496,-19,o),
(460,-74,o),
(460,-106,qs),
(460,-157,o),
(535,-210,o),
(593,-210,qs),
(636,-210,o),
(680,-196,q),
(680,-120,l),
(641,-135,o),
(609,-135,qs),
(585,-135,o),
(557,-113,o),
(557,-94,qs),
(557,-76,o),
(588,-44,o),
(623,-26,qs),
(675,0,l),
(419,700,l),
(275,700,l),
(19,0,l)
);
},
{
closed = 1;
nodes = (
(346,553,l),
(448,262,l),
(245,262,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
26 1 5 0 20 1 4 3 11 1 1 4 12 1 2 1 4 76 2 1 4 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 5 0 3 4 5 3 104 0 0 0 33 77 0 4 4 34 77 0 1 1 2 97 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
6 1 5 0 3 4 5 3 104 0 1 0 2 1 2 101 0 0 0 33 77 0 4 4 34 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 25 25 27 25 27 17 22 35 39 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 694;
},
{
anchors = (
{
name = bottom;
pos = (342,0);
},
{
name = ogonek;
pos = (661,0);
},
{
name = top;
pos = (342,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(141,0,l),
(200,166,l),
(483,166,l),
(538,9,l),
(493,-17,o),
(455,-74,o),
(455,-107,qs),
(455,-157,o),
(527,-208,o),
(583,-208,qs),
(622,-208,o),
(666,-194,q),
(666,-125,l),
(629,-140,o),
(597,-140,qs),
(572,-140,o),
(542,-116,o),
(542,-96,qs),
(542,-77,o),
(573,-44,o),
(608,-27,qs),
(662,0,l),
(658,7,l),
(405,700,l),
(279,700,l),
(23,0,l)
);
},
{
closed = 1;
nodes = (
(341,567,l),
(451,257,l),
(233,257,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
27 1 5 0 21 1 4 3 12 1 1 4 13 1 2 1 4 76 3 1 4 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 5 0 3 4 5 3 104 0 0 0 33 77 0 4 4 34 77 0 1 1 2 97 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
6 1 5 0 3 4 5 3 104 0 1 0 2 1 2 101 0 0 0 33 77 0 4 4 34 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 26 26 28 26 28 17 22 35 40 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 684;
}
);
note = Aogonek;
unicode = 260;
},
{
glyphname = Aring;
kernLeft = A;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (340,0);
},
{
name = ogonek;
pos = (655,0);
},
{
name = top;
pos = (340,971);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (230,0);
ref = uni030A.case;
}
);
width = 679;
},
{
anchors = (
{
name = bottom;
pos = (332,0);
},
{
name = ogonek;
pos = (634,0);
},
{
name = top;
pos = (332,967);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (227,0);
ref = uni030A.case;
}
);
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (347,0);
},
{
name = ogonek;
pos = (675,0);
},
{
name = top;
pos = (347,975);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (233,0);
ref = uni030A.case;
}
);
width = 694;
},
{
anchors = (
{
name = bottom;
pos = (342,0);
},
{
name = ogonek;
pos = (661,0);
},
{
name = top;
pos = (342,972);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (231,0);
ref = uni030A.case;
}
);
width = 684;
}
);
note = Aring;
unicode = 197;
},
{
glyphname = Atilde;
kernLeft = A;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (340,0);
},
{
name = ogonek;
pos = (655,0);
},
{
name = top;
pos = (340,868);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (176,0);
ref = tildecomb.case;
}
);
width = 679;
},
{
anchors = (
{
name = bottom;
pos = (332,0);
},
{
name = ogonek;
pos = (634,0);
},
{
name = top;
pos = (332,859);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (181,0);
ref = tildecomb.case;
}
);
width = 664;
},
{
anchors = (
{
name = bottom;
pos = (347,0);
},
{
name = ogonek;
pos = (675,0);
},
{
name = top;
pos = (347,877);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (171,0);
ref = tildecomb.case;
}
);
width = 694;
},
{
anchors = (
{
name = bottom;
pos = (342,0);
},
{
name = ogonek;
pos = (661,0);
},
{
name = top;
pos = (342,871);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = A;
},
{
alignment = -1;
pos = (174,0);
ref = tildecomb.case;
}
);
width = 684;
}
);
note = Atilde;
unicode = 195;
},
{
glyphname = AE;
kernLeft = AE;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (461,0);
},
{
name = top;
pos = (536,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140,0,l),
(222,148,l),
(482,148,l),
(482,0,l),
(868,0,l),
(868,88,l),
(588,88,l),
(588,327,l),
(823,327,l),
(823,415,l),
(588,415,l),
(588,612,l),
(868,612,l),
(868,700,l),
(414,700,l),
(25,0,l)
);
},
{
closed = 1;
nodes = (
(482,617,l),
(482,232,l),
(268,232,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
17 1 1 0 1 76 0 2 0 3 8 2 3 103 9 1 8 0 6 4 8 6 103 0 1 1 0 95 0 0 0 33 77 0 4 4 5 95 7 1 5 5 34 5 78 16 16 16 18 16 18 17 17 17 17 17 17 17 16 10 8 30
CALL[ ]	/* CallFunction */";
};
width = 921;
},
{
anchors = (
{
name = bottom;
pos = (456,0);
},
{
name = top;
pos = (526,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(122,0,l),
(212,159,l),
(481,159,l),
(481,0,l),
(854,0,l),
(854,67,l),
(565,67,l),
(565,338,l),
(808,338,l),
(808,406,l),
(565,406,l),
(565,633,l),
(854,633,l),
(854,700,l),
(429,700,l),
(30,0,l)
);
},
{
closed = 1;
nodes = (
(481,631,l),
(481,226,l),
(250,226,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
17 1 2 1 1 76 0 2 0 3 8 2 3 103 9 1 8 0 6 4 8 6 103 0 1 1 0 95 0 0 0 33 77 0 4 4 5 95 7 1 5 5 34 5 78 16 16 16 18 16 18 17 17 17 17 17 17 17 16 10 8 30
CALL[ ]	/* CallFunction */";
};
width = 911;
},
{
anchors = (
{
name = bottom;
pos = (466,0);
},
{
name = top;
pos = (546,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(158,0,l),
(232,136,l),
(482,136,l),
(482,0,l),
(881,0,l),
(881,109,l),
(610,109,l),
(610,315,l),
(837,315,l),
(837,424,l),
(610,424,l),
(610,591,l),
(881,591,l),
(881,700,l),
(398,700,l),
(19,0,l)
);
},
{
closed = 1;
nodes = (
(482,602,l),
(482,237,l),
(286,237,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
17 1 1 0 1 76 0 2 0 3 8 2 3 103 9 1 8 0 6 4 8 6 103 0 1 1 0 95 0 0 0 33 77 0 4 4 5 95 7 1 5 5 34 5 78 16 16 16 18 16 18 17 17 17 17 17 17 17 16 10 8 30
CALL[ ]	/* CallFunction */";
};
width = 931;
},
{
anchors = (
{
name = bottom;
pos = (463,0);
},
{
name = top;
pos = (539,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(146,0,l),
(225,144,l),
(482,144,l),
(482,0,l),
(872,0,l),
(872,95,l),
(595,95,l),
(595,323,l),
(827,323,l),
(827,418,l),
(595,418,l),
(595,605,l),
(872,605,l),
(872,700,l),
(408,700,l),
(23,0,l)
);
},
{
closed = 1;
nodes = (
(482,612,l),
(482,233,l),
(274,233,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
17 1 1 0 1 76 0 2 0 3 8 2 3 103 9 1 8 0 6 4 8 6 103 0 1 1 0 95 0 0 0 33 77 0 4 4 5 95 7 1 5 5 34 5 78 16 16 16 18 16 18 17 17 17 17 17 17 17 16 10 8 30
CALL[ ]	/* CallFunction */";
};
width = 924;
}
);
note = AE;
unicode = 198;
},
{
glyphname = AEacute;
kernLeft = AE;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (461,0);
},
{
name = top;
pos = (536,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = AE;
},
{
alignment = -1;
pos = (427,0);
ref = acutecomb.case;
}
);
width = 921;
},
{
anchors = (
{
name = bottom;
pos = (456,0);
},
{
name = top;
pos = (526,931);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = AE;
},
{
alignment = -1;
pos = (421,0);
ref = acutecomb.case;
}
);
width = 911;
},
{
anchors = (
{
name = bottom;
pos = (466,0);
},
{
name = top;
pos = (546,952);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = AE;
},
{
alignment = -1;
pos = (433,0);
ref = acutecomb.case;
}
);
width = 931;
},
{
anchors = (
{
name = bottom;
pos = (463,0);
},
{
name = top;
pos = (539,945);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = AE;
},
{
alignment = -1;
pos = (429,0);
ref = acutecomb.case;
}
);
width = 924;
}
);
note = AEacute;
unicode = 508;
},
{
glyphname = B;
kernRight = B;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(347,0,ls),
(455,0,o),
(573,110,o),
(573,198,qs),
(573,260,o),
(500,355,o),
(438,376,q),
(484,393,o),
(541,471,o),
(541,527,qs),
(541,605,o),
(425,700,o),
(322,700,qs),
(69,700,l),
(69,0,l)
);
},
{
closed = 1;
nodes = (
(175,90,l),
(175,325,l),
(326,325,ls),
(392,325,o),
(466,266,o),
(466,207,qs),
(466,148,o),
(396,90,o),
(328,90,qs)
);
},
{
closed = 1;
nodes = (
(175,413,l),
(175,611,l),
(311,611,ls),
(433,611,o),
(433,512,qs),
(433,464,o),
(373,413,o),
(314,413,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
7 1 2 5 1 76 7 1 5 0 2 3 5 2 103 0 4 4 0 95 0 0 0 33 77 6 1 3 3 1 95 0 1 1 34 1 78 24 24 15 15 24 31 24 30 29 27 15 23 15 22 37 42 32 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(338,0,ls),
(448,0,o),
(561,108,o),
(561,199,qs),
(561,263,o),
(489,355,o),
(421,377,q),
(468,391,o),
(529,473,o),
(529,529,qs),
(529,579,o),
(477,657,o),
(380,700,o),
(315,700,qs),
(74,700,l),
(74,0,l)
);
},
{
closed = 1;
nodes = (
(158,70,l),
(158,339,l),
(310,339,ls),
(386,339,o),
(476,272,o),
(476,204,qs),
(476,136,o),
(391,70,o),
(312,70,qs)
);
},
{
closed = 1;
nodes = (
(158,406,l),
(158,630,l),
(306,630,ls),
(373,630,o),
(444,571,o),
(444,518,qs),
(444,466,o),
(373,406,o),
(309,406,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
8 1 2 5 1 76 7 1 5 0 2 3 5 2 103 0 4 4 0 95 0 0 0 33 77 6 1 3 3 1 95 0 1 1 34 1 78 25 25 16 16 25 33 25 32 31 29 16 24 16 23 37 43 32 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 602;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(355,0,ls),
(427,0,o),
(531,51,o),
(585,141,o),
(585,197,qs),
(585,257,o),
(510,355,o),
(455,375,q),
(500,394,o),
(553,469,o),
(553,524,qs),
(553,604,o),
(436,700,o),
(329,700,qs),
(64,700,l),
(64,0,l)
);
},
{
closed = 1;
nodes = (
(192,109,l),
(192,311,l),
(341,311,ls),
(397,311,o),
(455,259,o),
(455,210,qs),
(455,109,o),
(343,109,qs)
);
},
{
closed = 1;
nodes = (
(192,420,l),
(192,591,l),
(316,591,ls),
(372,591,o),
(422,548,o),
(422,506,qs),
(422,462,o),
(372,420,o),
(318,420,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
7 1 2 5 1 76 7 1 5 0 2 3 5 2 103 0 4 4 0 95 0 0 0 33 77 6 1 3 3 1 95 0 1 1 34 1 78 24 24 16 16 24 32 24 31 30 28 16 23 16 22 36 43 32 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 623;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(349,0,ls),
(422,0,o),
(524,51,o),
(577,141,o),
(577,198,qs),
(577,259,o),
(503,355,o),
(444,376,q),
(489,394,o),
(545,470,o),
(545,526,qs),
(545,605,o),
(428,700,o),
(324,700,qs),
(67,700,l),
(67,0,l)
);
},
{
closed = 1;
nodes = (
(181,96,l),
(181,320,l),
(331,320,ls),
(394,320,o),
(462,263,o),
(462,208,qs),
(462,96,o),
(333,96,qs)
);
},
{
closed = 1;
nodes = (
(181,415,l),
(181,604,l),
(313,604,ls),
(429,604,o),
(429,510,qs),
(429,464,o),
(372,415,o),
(315,415,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
7 1 2 5 1 76 7 1 5 0 2 3 5 2 103 0 4 4 0 95 0 0 0 33 77 6 1 3 3 1 95 0 1 1 34 1 78 24 24 16 16 24 31 24 30 29 27 16 23 16 22 36 43 32 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 616;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
kernLeft = C;
kernRight = C;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (380,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(503,-12,o),
(660,105,o),
(681,211,q),
(564,211,l),
(549,150,o),
(456,83,o),
(380,83,qs),
(273,83,o),
(153,228,o),
(153,350,qs),
(153,471,o),
(272,617,o),
(380,617,qs),
(456,617,o),
(549,547,o),
(564,484,q),
(681,484,l),
(660,592,o),
(504,712,o),
(381,712,qs),
(275,712,o),
(123,618,o),
(44,454,o),
(44,350,qs),
(44,246,o),
(124,82,o),
(277,-12,o),
(381,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 39 77 0 3 3 5 97 6 1 5 5 40 5 78 0 0 0 27 0 26 18 36 34 18 38 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 725;
},
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (381,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(500,-12,o),
(652,101,o),
(673,203,q),
(580,203,l),
(564,137,o),
(463,62,o),
(381,62,qs),
(302,62,o),
(190,136,o),
(133,266,o),
(133,350,qs),
(133,433,o),
(189,563,o),
(301,638,o),
(381,638,qs),
(463,638,o),
(564,561,o),
(580,494,q),
(673,494,l),
(652,597,o),
(500,712,o),
(381,712,qs),
(276,712,o),
(125,617,o),
(47,453,o),
(47,350,qs),
(47,246,o),
(126,82,o),
(277,-12,o),
(381,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 39 77 0 3 3 5 97 6 1 5 5 40 5 78 0 0 0 29 0 28 18 38 34 18 38 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 720;
},
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (379,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(506,-12,o),
(668,110,o),
(688,218,q),
(547,218,l),
(534,163,o),
(448,103,o),
(379,103,qs),
(282,103,o),
(172,234,o),
(172,349,qs),
(172,464,o),
(282,596,o),
(379,596,qs),
(448,596,o),
(534,532,o),
(547,474,q),
(688,474,l),
(668,587,o),
(507,712,o),
(381,712,qs),
(274,712,o),
(120,618,o),
(41,454,o),
(41,349,qs),
(41,244,o),
(122,81,o),
(275,-12,o),
(381,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 39 77 0 3 3 5 97 6 1 5 5 40 5 78 0 0 0 27 0 26 18 36 34 18 38 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 729;
},
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (380,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(504,-12,o),
(663,107,o),
(683,213,q),
(558,213,l),
(544,155,o),
(453,89,o),
(380,89,qs),
(276,89,o),
(159,230,o),
(159,349,qs),
(159,468,o),
(275,610,o),
(380,610,qs),
(453,610,o),
(544,542,o),
(558,481,q),
(683,481,l),
(663,591,o),
(505,712,o),
(381,712,qs),
(275,712,o),
(122,618,o),
(43,453,o),
(43,349,qs),
(43,245,o),
(123,81,o),
(276,-12,o),
(381,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 39 77 0 3 3 5 97 6 1 5 5 40 5 78 0 0 0 27 0 26 18 36 34 18 38 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 726;
}
);
note = C;
unicode = 67;
},
{
glyphname = Cacute;
kernLeft = C;
kernRight = C;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (380,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (271,0);
ref = acutecomb.case;
}
);
width = 725;
},
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (381,931);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (276,0);
ref = acutecomb.case;
}
);
width = 720;
},
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (379,952);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (266,0);
ref = acutecomb.case;
}
);
width = 729;
},
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (380,945);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (269,0);
ref = acutecomb.case;
}
);
width = 726;
}
);
note = Cacute;
unicode = 262;
},
{
glyphname = Ccaron;
kernLeft = C;
kernRight = C;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (380,910);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (239,0);
ref = uni030C.case;
}
);
width = 725;
},
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (381,901);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (244,0);
ref = uni030C.case;
}
);
width = 720;
},
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (379,918);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (233,0);
ref = uni030C.case;
}
);
width = 729;
},
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (380,912);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (237,0);
ref = uni030C.case;
}
);
width = 726;
}
);
note = Ccaron;
unicode = 268;
},
{
glyphname = Ccedilla;
kernLeft = C;
kernRight = C;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (381,-261);
},
{
name = top;
pos = (380,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(418,-261,ls),
(473,-261,o),
(544,-206,o),
(544,-157,qs),
(544,-107,o),
(471,-55,o),
(414,-56,q),
(414,-11,l),
(522,-3,o),
(661,113,o),
(681,211,q),
(564,211,l),
(549,150,o),
(456,83,o),
(380,83,qs),
(273,83,o),
(153,228,o),
(153,350,qs),
(153,471,o),
(272,617,o),
(380,617,qs),
(456,617,o),
(549,547,o),
(564,484,q),
(681,484,l),
(660,592,o),
(504,712,o),
(381,712,qs),
(275,712,o),
(123,618,o),
(44,454,o),
(44,350,qs),
(44,252,o),
(116,94,o),
(252,-3,o),
(346,-11,q),
(346,-115,l),
(401,-115,ls),
(462,-115,o),
(462,-155,qs),
(462,-197,o),
(401,-197,qs),
(299,-197,l),
(299,-261,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
35 7 2 7 5 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 5 7 7 5 112 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 39 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 5 7 4 5 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 39 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 20 18 36 34 18 40 34 32 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 725;
},
{
anchors = (
{
name = bottom;
pos = (381,-259);
},
{
name = top;
pos = (381,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(416,-259,ls),
(470,-259,o),
(537,-205,o),
(537,-159,qs),
(537,-112,o),
(467,-62,o),
(408,-63,q),
(408,-11,l),
(516,-5,o),
(653,107,o),
(673,203,q),
(580,203,l),
(564,137,o),
(463,62,o),
(381,62,qs),
(302,62,o),
(190,136,o),
(133,266,o),
(133,350,qs),
(133,433,o),
(189,563,o),
(301,638,o),
(381,638,qs),
(463,638,o),
(564,561,o),
(580,494,q),
(673,494,l),
(652,597,o),
(500,712,o),
(381,712,qs),
(276,712,o),
(125,617,o),
(47,453,o),
(47,350,qs),
(47,251,o),
(119,92,o),
(257,-4,o),
(352,-11,q),
(352,-113,l),
(401,-113,ls),
(469,-113,o),
(469,-158,qs),
(469,-206,o),
(401,-206,qs),
(309,-206,l),
(309,-259,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
7 1 8 7 1 76 0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 99 0 4 4 2 97 0 2 2 39 77 0 5 5 7 97 0 7 7 40 7 78 45 43 17 18 18 38 34 18 40 34 32 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 720;
},
{
anchors = (
{
name = bottom;
pos = (381,-263);
},
{
name = top;
pos = (379,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(420,-263,ls),
(475,-263,o),
(550,-207,o),
(550,-155,qs),
(550,-103,o),
(476,-48,o),
(420,-50,q),
(420,-10,l),
(529,-1,o),
(669,118,o),
(688,218,q),
(547,218,l),
(534,163,o),
(448,103,o),
(379,103,qs),
(282,103,o),
(172,234,o),
(172,349,qs),
(172,464,o),
(282,596,o),
(379,596,qs),
(448,596,o),
(534,532,o),
(547,474,q),
(688,474,l),
(668,587,o),
(507,712,o),
(381,712,qs),
(274,712,o),
(120,618,o),
(41,454,o),
(41,349,qs),
(41,252,o),
(111,95,o),
(246,-1,o),
(340,-10,q),
(340,-118,l),
(401,-118,ls),
(454,-118,o),
(454,-153,qs),
(454,-189,o),
(401,-189,qs),
(289,-189,l),
(289,-263,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
35 7 2 7 5 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 5 7 7 5 112 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 39 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 5 7 4 5 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 39 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 20 18 36 34 18 40 34 32 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 729;
},
{
anchors = (
{
name = bottom;
pos = (381,-262);
},
{
name = top;
pos = (380,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(419,-262,ls),
(474,-262,o),
(546,-206,o),
(546,-156,qs),
(546,-106,o),
(473,-53,o),
(416,-54,q),
(416,-11,l),
(525,-3,o),
(664,114,o),
(683,213,q),
(558,213,l),
(544,155,o),
(453,89,o),
(380,89,qs),
(276,89,o),
(159,230,o),
(159,349,qs),
(159,468,o),
(275,610,o),
(380,610,qs),
(453,610,o),
(544,542,o),
(558,481,q),
(683,481,l),
(663,591,o),
(505,712,o),
(381,712,qs),
(275,712,o),
(122,618,o),
(43,453,o),
(43,349,qs),
(43,251,o),
(114,94,o),
(250,-2,o),
(344,-10,q),
(344,-116,l),
(401,-116,ls),
(459,-116,o),
(459,-155,qs),
(459,-195,o),
(401,-195,qs),
(296,-195,l),
(296,-262,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
35 7 2 7 5 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 5 7 7 5 112 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 39 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 5 7 4 5 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 39 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 20 18 36 34 18 40 34 32 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 726;
}
);
note = Ccedilla;
unicode = 199;
},
{
glyphname = Cdotaccent;
kernLeft = C;
kernRight = C;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (380,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (310,0);
ref = uni0307.case;
}
);
width = 725;
},
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (381,889);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (323,0);
ref = uni0307.case;
}
);
width = 720;
},
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (379,934);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (296,0);
ref = uni0307.case;
}
);
width = 729;
},
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (380,919);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = C;
},
{
alignment = -1;
pos = (305,0);
ref = uni0307.case;
}
);
width = 726;
}
);
note = Cdotaccent;
unicode = 266;
},
{
glyphname = D;
kernRight = D;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (344,0);
},
{
name = top;
pos = (344,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(296,0,ls),
(474,0,o),
(656,182,o),
(656,349,qs),
(656,515,o),
(477,700,o),
(296,700,qs),
(69,700,l),
(69,0,l)
);
},
{
closed = 1;
nodes = (
(175,90,l),
(175,611,l),
(292,611,ls),
(423,611,o),
(547,483,o),
(547,349,qs),
(547,222,o),
(428,90,o),
(292,90,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 2 2 0 95 0 0 0 33 77 4 1 3 3 1 95 0 1 1 34 1 78 9 9 9 17 9 16 37 36 32 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 700;
},
{
anchors = (
{
name = bottom;
pos = (342,0);
},
{
name = top;
pos = (342,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(289,0,ls),
(470,0,o),
(649,182,o),
(649,348,qs),
(649,517,o),
(470,700,o),
(289,700,qs),
(74,700,l),
(74,0,l)
);
},
{
closed = 1;
nodes = (
(158,70,l),
(158,630,l),
(287,630,ls),
(429,630,o),
(562,492,o),
(562,348,qs),
(562,210,o),
(432,70,o),
(287,70,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 2 2 0 95 0 0 0 33 77 4 1 3 3 1 95 0 1 1 34 1 78 9 9 9 17 9 16 37 36 32 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 696;
},
{
anchors = (
{
name = bottom;
pos = (346,0);
},
{
name = top;
pos = (346,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(303,0,ls),
(477,0,o),
(662,181,o),
(662,350,qs),
(662,513,o),
(484,700,o),
(303,700,qs),
(64,700,l),
(64,0,l)
);
},
{
closed = 1;
nodes = (
(192,110,l),
(192,591,l),
(297,591,ls),
(417,591,o),
(531,475,o),
(531,350,qs),
(531,232,o),
(424,110,o),
(297,110,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 2 2 0 95 0 0 0 33 77 4 1 3 3 1 95 0 1 1 34 1 78 9 9 9 17 9 16 37 36 32 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 703;
},
{
anchors = (
{
name = bottom;
pos = (345,0);
},
{
name = top;
pos = (345,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(298,0,ls),
(474,0,o),
(658,182,o),
(658,349,qs),
(658,514,o),
(479,700,o),
(298,700,qs),
(67,700,l),
(67,0,l)
);
},
{
closed = 1;
nodes = (
(181,97,l),
(181,604,l),
(294,604,ls),
(421,604,o),
(541,480,o),
(541,349,qs),
(541,225,o),
(427,97,o),
(294,97,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 2 2 0 95 0 0 0 33 77 4 1 3 3 1 95 0 1 1 34 1 78 9 9 9 17 9 16 37 36 32 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 701;
}
);
note = D;
unicode = 68;
},
{
glyphname = Dcaron;
kernRight = D;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (344,0);
},
{
name = top;
pos = (344,910);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = D;
},
{
alignment = -1;
pos = (203,0);
ref = uni030C.case;
}
);
width = 700;
},
{
anchors = (
{
name = bottom;
pos = (342,0);
},
{
name = top;
pos = (342,901);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = D;
},
{
alignment = -1;
pos = (205,0);
ref = uni030C.case;
}
);
width = 696;
},
{
anchors = (
{
name = bottom;
pos = (346,0);
},
{
name = top;
pos = (346,918);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = D;
},
{
alignment = -1;
pos = (200,0);
ref = uni030C.case;
}
);
width = 703;
},
{
anchors = (
{
name = bottom;
pos = (345,0);
},
{
name = top;
pos = (345,912);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = D;
},
{
alignment = -1;
pos = (202,0);
ref = uni030C.case;
}
);
width = 701;
}
);
note = Dcaron;
unicode = 270;
},
{
glyphname = Dcroat;
kernRight = D;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(313,0,ls),
(491,0,o),
(673,182,o),
(673,349,qs),
(673,515,o),
(494,700,o),
(313,700,qs),
(86,700,l),
(86,396,l),
(5,396,l),
(5,303,l),
(86,303,l),
(86,0,l)
);
},
{
closed = 1;
nodes = (
(192,90,l),
(192,303,l),
(382,303,l),
(382,396,l),
(192,396,l),
(192,611,l),
(310,611,ls),
(440,611,o),
(564,483,o),
(564,349,qs),
(564,224,o),
(448,90,o),
(310,90,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
5 1 1 6 1 0 7 1 0 103 0 4 4 2 95 0 2 2 33 77 8 1 7 7 3 95 0 3 3 34 3 78 13 13 13 25 13 24 17 17 37 36 33 17 16 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 717;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(310,0,ls),
(491,0,o),
(670,182,o),
(670,348,qs),
(670,517,o),
(491,700,o),
(310,700,qs),
(95,700,l),
(95,387,l),
(8,387,l),
(8,311,l),
(95,311,l),
(95,0,l)
);
},
{
closed = 1;
nodes = (
(179,70,l),
(179,311,l),
(381,311,l),
(381,387,l),
(179,387,l),
(179,630,l),
(309,630,ls),
(451,630,o),
(584,491,o),
(584,348,qs),
(584,215,o),
(459,70,o),
(309,70,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
5 1 1 6 1 0 7 1 0 103 0 4 4 2 95 0 2 2 33 77 8 1 7 7 3 95 0 3 3 34 3 78 13 13 13 25 13 24 17 17 37 36 33 17 16 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 717;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(316,0,ls),
(490,0,o),
(675,181,o),
(675,350,qs),
(675,513,o),
(497,700,o),
(316,700,qs),
(77,700,l),
(77,405,l),
(2,405,l),
(2,295,l),
(77,295,l),
(77,0,l)
);
},
{
closed = 1;
nodes = (
(205,110,l),
(205,295,l),
(382,295,l),
(382,405,l),
(205,405,l),
(205,591,l),
(310,591,ls),
(430,591,o),
(544,475,o),
(544,350,qs),
(544,232,o),
(437,110,o),
(310,110,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
5 1 1 6 1 0 7 1 0 103 0 4 4 2 95 0 2 2 33 77 8 1 7 7 3 95 0 3 3 34 3 78 13 13 13 25 13 24 17 17 37 36 33 17 16 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 716;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(314,0,ls),
(490,0,o),
(673,181,o),
(673,349,qs),
(673,514,o),
(495,700,o),
(314,700,qs),
(83,700,l),
(83,399,l),
(4,399,l),
(4,300,l),
(83,300,l),
(83,0,l)
);
},
{
closed = 1;
nodes = (
(196,97,l),
(196,300,l),
(382,300,l),
(382,399,l),
(196,399,l),
(196,604,l),
(310,604,ls),
(437,604,o),
(557,480,o),
(557,349,qs),
(557,226,o),
(445,97,o),
(310,97,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
5 1 1 6 1 0 7 1 0 103 0 4 4 2 95 0 2 2 33 77 8 1 7 7 3 95 0 3 3 34 3 78 13 13 13 25 13 24 17 17 37 36 33 17 16 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 716;
}
);
note = Dcroat;
unicode = 272;
},
{
glyphname = Eth;
kernRight = D;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(313,0,ls),
(491,0,o),
(673,182,o),
(673,349,qs),
(673,515,o),
(494,700,o),
(313,700,qs),
(86,700,l),
(86,396,l),
(5,396,l),
(5,303,l),
(86,303,l),
(86,0,l)
);
},
{
closed = 1;
nodes = (
(192,90,l),
(192,303,l),
(382,303,l),
(382,396,l),
(192,396,l),
(192,611,l),
(310,611,ls),
(440,611,o),
(564,483,o),
(564,349,qs),
(564,224,o),
(448,90,o),
(310,90,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
5 1 1 6 1 0 7 1 0 103 0 4 4 2 95 0 2 2 33 77 8 1 7 7 3 95 0 3 3 34 3 78 13 13 13 25 13 24 17 17 37 36 33 17 16 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 717;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(310,0,ls),
(491,0,o),
(670,182,o),
(670,348,qs),
(670,517,o),
(491,700,o),
(310,700,qs),
(95,700,l),
(95,387,l),
(8,387,l),
(8,311,l),
(95,311,l),
(95,0,l)
);
},
{
closed = 1;
nodes = (
(179,70,l),
(179,311,l),
(381,311,l),
(381,387,l),
(179,387,l),
(179,630,l),
(309,630,ls),
(451,630,o),
(584,491,o),
(584,348,qs),
(584,215,o),
(459,70,o),
(309,70,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
5 1 1 6 1 0 7 1 0 103 0 4 4 2 95 0 2 2 33 77 8 1 7 7 3 95 0 3 3 34 3 78 13 13 13 25 13 24 17 17 37 36 33 17 16 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 717;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(316,0,ls),
(490,0,o),
(675,181,o),
(675,350,qs),
(675,513,o),
(497,700,o),
(316,700,qs),
(77,700,l),
(77,405,l),
(2,405,l),
(2,295,l),
(77,295,l),
(77,0,l)
);
},
{
closed = 1;
nodes = (
(205,110,l),
(205,295,l),
(382,295,l),
(382,405,l),
(205,405,l),
(205,591,l),
(310,591,ls),
(430,591,o),
(544,475,o),
(544,350,qs),
(544,232,o),
(437,110,o),
(310,110,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
5 1 1 6 1 0 7 1 0 103 0 4 4 2 95 0 2 2 33 77 8 1 7 7 3 95 0 3 3 34 3 78 13 13 13 25 13 24 17 17 37 36 33 17 16 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 716;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(314,0,ls),
(490,0,o),
(673,181,o),
(673,349,qs),
(673,514,o),
(495,700,o),
(314,700,qs),
(83,700,l),
(83,399,l),
(4,399,l),
(4,300,l),
(83,300,l),
(83,0,l)
);
},
{
closed = 1;
nodes = (
(196,97,l),
(196,300,l),
(382,300,l),
(382,399,l),
(196,399,l),
(196,604,l),
(310,604,ls),
(437,604,o),
(557,480,o),
(557,349,qs),
(557,226,o),
(445,97,o),
(310,97,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
5 1 1 6 1 0 7 1 0 103 0 4 4 2 95 0 2 2 33 77 8 1 7 7 3 95 0 3 3 34 3 78 13 13 13 25 13 24 17 17 37 36 33 17 16 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 716;
}
);
note = Eth;
unicode = 208;
},
{
glyphname = E;
kernRight = E;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(510,0,l),
(510,89,l),
(175,89,l),
(175,326,l),
(465,326,l),
(465,414,l),
(175,414,l),
(175,611,l),
(510,611,l),
(510,700,l),
(69,700,l),
(69,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 5 95 0 5 5 34 5 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 563;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (507,0);
},
{
name = top;
pos = (282,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(507,0,l),
(507,69,l),
(158,69,l),
(158,336,l),
(463,336,l),
(463,404,l),
(158,404,l),
(158,631,l),
(507,631,l),
(507,700,l),
(74,700,l),
(74,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 5 95 0 5 5 34 5 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 564;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (513,0);
},
{
name = top;
pos = (281,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(513,0,l),
(513,109,l),
(192,109,l),
(192,315,l),
(467,315,l),
(467,424,l),
(192,424,l),
(192,591,l),
(513,591,l),
(513,700,l),
(64,700,l),
(64,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 5 95 0 5 5 34 5 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (511,0);
},
{
name = top;
pos = (281,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(511,0,l),
(511,96,l),
(181,96,l),
(181,322,l),
(466,322,l),
(466,417,l),
(181,417,l),
(181,604,l),
(511,604,l),
(511,700,l),
(67,700,l),
(67,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 5 95 0 5 5 34 5 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 563;
}
);
note = E;
unicode = 69;
},
{
glyphname = Eacute;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (173,0);
ref = acutecomb.case;
}
);
width = 563;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (507,0);
},
{
name = top;
pos = (282,931);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (177,0);
ref = acutecomb.case;
}
);
width = 564;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (513,0);
},
{
name = top;
pos = (281,952);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (168,0);
ref = acutecomb.case;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (511,0);
},
{
name = top;
pos = (281,945);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (171,0);
ref = acutecomb.case;
}
);
width = 563;
}
);
note = Eacute;
unicode = 201;
},
{
glyphname = Ebreve;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,909);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (133,0);
ref = uni0306.case;
}
);
width = 563;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (507,0);
},
{
name = top;
pos = (282,901);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (141,0);
ref = uni0306.case;
}
);
width = 564;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (513,0);
},
{
name = top;
pos = (281,917);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (125,0);
ref = uni0306.case;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (511,0);
},
{
name = top;
pos = (281,912);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (130,0);
ref = uni0306.case;
}
);
width = 563;
}
);
note = Ebreve;
unicode = 276;
},
{
glyphname = Ecaron;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,910);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (140,0);
ref = uni030C.case;
}
);
width = 563;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (507,0);
},
{
name = top;
pos = (282,901);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (145,0);
ref = uni030C.case;
}
);
width = 564;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (513,0);
},
{
name = top;
pos = (281,918);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (135,0);
ref = uni030C.case;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (511,0);
},
{
name = top;
pos = (281,912);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (138,0);
ref = uni030C.case;
}
);
width = 563;
}
);
note = Ecaron;
unicode = 282;
},
{
glyphname = Ecircumflex;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,911);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (140,0);
ref = uni0302.case;
}
);
width = 563;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (507,0);
},
{
name = top;
pos = (282,902);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (145,0);
ref = uni0302.case;
}
);
width = 564;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (513,0);
},
{
name = top;
pos = (281,919);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (135,0);
ref = uni0302.case;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (511,0);
},
{
name = top;
pos = (281,913);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (138,0);
ref = uni0302.case;
}
);
width = 563;
}
);
note = Ecircumflex;
unicode = 202;
},
{
glyphname = Edieresis;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (111,0);
ref = uni0308.case;
}
);
width = 563;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (507,0);
},
{
name = top;
pos = (282,889);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (135,0);
ref = uni0308.case;
}
);
width = 564;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (513,0);
},
{
name = top;
pos = (281,934);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (87,0);
ref = uni0308.case;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (511,0);
},
{
name = top;
pos = (281,919);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (103,0);
ref = uni0308.case;
}
);
width = 563;
}
);
note = Edieresis;
unicode = 203;
},
{
glyphname = Edotaccent;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (211,0);
ref = uni0307.case;
}
);
width = 563;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (507,0);
},
{
name = top;
pos = (282,889);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (224,0);
ref = uni0307.case;
}
);
width = 564;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (513,0);
},
{
name = top;
pos = (281,934);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (198,0);
ref = uni0307.case;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (511,0);
},
{
name = top;
pos = (281,919);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (207,0);
ref = uni0307.case;
}
);
width = 563;
}
);
note = Edotaccent;
unicode = 278;
},
{
glyphname = Egrave;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (173,0);
ref = gravecomb.case;
}
);
width = 563;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (507,0);
},
{
name = top;
pos = (282,931);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (177,0);
ref = gravecomb.case;
}
);
width = 564;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (513,0);
},
{
name = top;
pos = (281,952);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (168,0);
ref = gravecomb.case;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (511,0);
},
{
name = top;
pos = (281,945);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (171,0);
ref = gravecomb.case;
}
);
width = 563;
}
);
note = Egrave;
unicode = 200;
},
{
glyphname = Emacron;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,867);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (106,0);
ref = uni0304.case;
}
);
width = 563;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (507,0);
},
{
name = top;
pos = (282,859);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (108,0);
ref = uni0304.case;
}
);
width = 564;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (513,0);
},
{
name = top;
pos = (281,874);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (104,0);
ref = uni0304.case;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (511,0);
},
{
name = top;
pos = (281,869);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (105,0);
ref = uni0304.case;
}
);
width = 563;
}
);
note = Emacron;
unicode = 274;
},
{
glyphname = Eogonek;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(379,0,l),
(308,-45,o),
(308,-107,qs),
(308,-156,o),
(380,-206,o),
(434,-206,qs),
(474,-206,o),
(515,-193,q),
(515,-127,l),
(478,-142,o),
(447,-142,qs),
(421,-142,o),
(391,-118,o),
(391,-97,qs),
(391,-78,o),
(421,-44,o),
(456,-27,qs),
(511,0,l),
(510,2,l),
(510,89,l),
(175,89,l),
(175,326,l),
(465,326,l),
(465,414,l),
(175,414,l),
(175,611,l),
(510,611,l),
(510,700,l),
(69,700,l),
(69,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
10 1 7 4 20 1 5 7 21 1 6 5 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 7 95 0 7 7 34 77 0 5 5 6 97 0 6 6 38 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 3 4 2 3 103 0 5 0 6 5 6 101 0 1 1 0 95 0 0 0 33 77 0 4 4 7 95 0 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
20 35 40 17 17 17 17 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 563;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (507,0);
},
{
name = top;
pos = (282,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(393,0,l),
(317,-45,o),
(317,-108,qs),
(317,-155,o),
(385,-203,o),
(435,-203,qs),
(474,-203,o),
(510,-190,q),
(510,-134,l),
(476,-149,o),
(445,-149,qs),
(418,-149,o),
(385,-123,o),
(385,-100,qs),
(385,-59,o),
(449,-28,qs),
(507,0,l),
(507,69,l),
(158,69,l),
(158,336,l),
(463,336,l),
(463,404,l),
(158,404,l),
(158,631,l),
(507,631,l),
(507,700,l),
(74,700,l),
(74,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
18 1 5 7 19 1 6 5 2 76 10 1 7 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 7 95 0 7 7 34 77 0 5 5 6 97 0 6 6 38 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 3 4 2 3 103 0 5 0 6 5 6 101 0 1 1 0 95 0 0 0 33 77 0 4 4 7 95 0 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
20 35 38 17 17 17 17 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 564;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (513,0);
},
{
name = top;
pos = (281,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(364,0,l),
(298,-44,o),
(298,-106,qs),
(298,-157,o),
(373,-210,o),
(431,-210,qs),
(474,-210,o),
(518,-196,q),
(518,-120,l),
(479,-135,o),
(447,-135,qs),
(423,-135,o),
(395,-113,o),
(395,-94,qs),
(395,-76,o),
(426,-44,o),
(461,-26,qs),
(513,0,l),
(513,109,l),
(192,109,l),
(192,315,l),
(467,315,l),
(467,424,l),
(192,424,l),
(192,591,l),
(513,591,l),
(513,700,l),
(64,700,l),
(64,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
19 1 5 7 20 1 6 5 2 76 10 1 7 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 7 95 0 7 7 34 77 0 5 5 6 97 0 6 6 38 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 3 4 2 3 103 0 5 0 6 5 6 101 0 1 1 0 95 0 0 0 33 77 0 4 4 7 95 0 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
20 35 39 17 17 17 17 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (511,0);
},
{
name = top;
pos = (281,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(373,0,l),
(304,-45,o),
(304,-107,qs),
(304,-157,o),
(376,-208,o),
(432,-208,qs),
(471,-208,o),
(515,-194,q),
(515,-125,l),
(478,-140,o),
(446,-140,qs),
(421,-140,o),
(391,-116,o),
(391,-96,qs),
(391,-77,o),
(422,-44,o),
(457,-27,qs),
(511,0,l),
(511,96,l),
(181,96,l),
(181,322,l),
(466,322,l),
(466,417,l),
(181,417,l),
(181,604,l),
(511,604,l),
(511,700,l),
(67,700,l),
(67,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
19 1 5 7 20 1 6 5 2 76 10 1 7 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 7 95 0 7 7 34 77 0 5 5 6 97 0 6 6 38 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 3 4 2 3 103 0 5 0 6 5 6 101 0 1 1 0 95 0 0 0 33 77 0 4 4 7 95 0 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
20 35 39 17 17 17 17 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 563;
}
);
note = Eogonek;
unicode = 280;
},
{
glyphname = uni018E;
kernRight = uni018E;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(501,0,l),
(501,700,l),
(60,700,l),
(60,611,l),
(395,611,l),
(395,414,l),
(105,414,l),
(105,326,l),
(395,326,l),
(395,89,l),
(60,89,l),
(60,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 1 0 2 1 103 0 3 3 4 95 0 4 4 33 77 0 0 0 5 95 0 5 5 34 5 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 577;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(507,0,l),
(507,700,l),
(74,700,l),
(74,631,l),
(423,631,l),
(423,404,l),
(118,404,l),
(118,336,l),
(423,336,l),
(423,69,l),
(74,69,l),
(74,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 1 0 2 1 103 0 3 3 4 95 0 4 4 33 77 0 0 0 5 95 0 5 5 34 5 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(494,0,l),
(494,700,l),
(45,700,l),
(45,591,l),
(366,591,l),
(366,424,l),
(91,424,l),
(91,315,l),
(366,315,l),
(366,109,l),
(45,109,l),
(45,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 1 0 2 1 103 0 3 3 4 95 0 4 4 33 77 0 0 0 5 95 0 5 5 34 5 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 554;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(498,0,l),
(498,700,l),
(55,700,l),
(55,604,l),
(385,604,l),
(385,417,l),
(100,417,l),
(100,322,l),
(385,322,l),
(385,96,l),
(55,96,l),
(55,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 0 1 0 2 1 103 0 3 3 4 95 0 4 4 33 77 0 0 0 5 95 0 5 5 34 5 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 569;
}
);
note = uni018E;
unicode = (398,477);
},
{
glyphname = uni1EBC;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,868);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (118,0);
ref = tildecomb.case;
}
);
width = 563;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (507,0);
},
{
name = top;
pos = (282,859);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (131,0);
ref = tildecomb.case;
}
);
width = 564;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (513,0);
},
{
name = top;
pos = (281,877);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (105,0);
ref = tildecomb.case;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (511,0);
},
{
name = top;
pos = (281,871);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = E;
},
{
alignment = -1;
pos = (114,0);
ref = tildecomb.case;
}
);
width = 563;
}
);
note = uni1EBC;
unicode = 7868;
},
{
glyphname = uni018F;
kernLeft = uni018F;
kernRight = D;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(476,-12,o),
(552,33,qs),
(629,78,o),
(713,241,o),
(713,347,qs),
(713,457,o),
(670,539,qs),
(628,621,o),
(476,712,o),
(376,712,qs),
(296,712,o),
(229,683,qs),
(163,653,o),
(71,547,o),
(51,477,q),
(169,477,l),
(190,542,o),
(302,616,o),
(377,616,qs),
(439,616,o),
(488,588,qs),
(538,560,o),
(597,453,o),
(600,381,q),
(48,381,l),
(44,353,o),
(44,321,qs),
(44,215,o),
(87,142,qs),
(128,68,o),
(277,-12,o),
(374,-12,qs)
);
},
{
closed = 1;
nodes = (
(308,85,o),
(258,112,qs),
(208,138,o),
(154,234,o),
(154,298,q),
(600,298,l),
(595,228,o),
(565,183,qs),
(535,135,o),
(434,85,o),
(373,85,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 2 1 0 1 2 0 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 39 77 8 1 6 6 4 97 7 1 4 4 40 4 78 32 32 0 0 32 42 32 41 37 36 0 31 0 30 36 18 36 22 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 757;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(473,-12,o),
(549,33,qs),
(625,79,o),
(708,240,o),
(708,346,qs),
(708,456,o),
(666,538,qs),
(624,621,o),
(473,712,o),
(375,712,qs),
(296,712,o),
(230,683,qs),
(164,654,o),
(73,549,o),
(52,479,q),
(147,479,l),
(170,553,o),
(293,636,o),
(375,636,qs),
(444,636,o),
(497,605,qs),
(552,573,o),
(615,455,o),
(618,375,q),
(50,375,l),
(47,344,o),
(47,316,qs),
(47,213,o),
(89,139,qs),
(130,66,o),
(277,-12,o),
(372,-12,qs)
);
},
{
closed = 1;
nodes = (
(300,64,o),
(246,94,qs),
(192,123,o),
(134,231,o),
(135,303,q),
(618,303,l),
(613,226,o),
(581,174,qs),
(548,121,o),
(439,64,o),
(372,64,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 2 1 0 1 2 0 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 39 77 8 1 6 6 4 97 7 1 4 4 40 4 78 32 32 0 0 32 42 32 41 37 36 0 31 0 30 36 18 36 22 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 755;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(479,-12,o),
(555,33,qs),
(632,78,o),
(717,241,o),
(717,348,qs),
(717,458,o),
(674,540,qs),
(631,622,o),
(477,712,o),
(376,712,qs),
(295,712,o),
(227,682,qs),
(161,652,o),
(69,544,o),
(49,474,q),
(190,474,l),
(209,531,o),
(311,596,o),
(378,596,qs),
(435,596,o),
(479,571,qs),
(525,546,o),
(579,451,o),
(582,386,q),
(45,386,l),
(41,359,o),
(41,326,qs),
(41,218,o),
(84,144,qs),
(126,68,o),
(276,-12,o),
(376,-12,qs)
);
},
{
closed = 1;
nodes = (
(315,105,o),
(270,129,qs),
(224,153,o),
(174,236,o),
(173,292,q),
(582,292,l),
(577,231,o),
(549,191,qs),
(521,149,o),
(429,105,o),
(374,105,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 2 1 0 1 2 0 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 39 77 8 1 6 6 4 97 7 1 4 4 40 4 78 32 32 0 0 32 42 32 41 37 36 0 31 0 30 36 18 36 22 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 758;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(477,-12,o),
(553,33,qs),
(630,78,o),
(714,241,o),
(714,347,qs),
(714,457,o),
(671,539,qs),
(629,621,o),
(476,712,o),
(376,712,qs),
(294,712,o),
(228,682,qs),
(162,653,o),
(70,546,o),
(50,476,q),
(176,476,l),
(196,538,o),
(305,609,o),
(377,609,qs),
(440,609,o),
(485,582,qs),
(534,554,o),
(591,452,o),
(594,382,q),
(47,382,l),
(43,355,o),
(43,323,qs),
(43,216,o),
(86,142,qs),
(127,68,o),
(277,-12,o),
(375,-12,qs)
);
},
{
closed = 1;
nodes = (
(311,91,o),
(262,117,qs),
(214,143,o),
(161,235,o),
(160,296,q),
(594,296,l),
(589,229,o),
(560,185,qs),
(530,140,o),
(433,91,o),
(373,91,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 2 1 0 1 2 0 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 39 77 8 1 6 6 4 97 7 1 4 4 40 4 78 32 32 0 0 32 42 32 41 37 36 0 31 0 30 36 18 36 22 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 757;
}
);
note = uni018F;
unicode = 399;
},
{
glyphname = F;
kernRight = F;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,0,l),
(175,317,l),
(458,317,l),
(458,406,l),
(175,406,l),
(175,611,l),
(503,611,l),
(503,700,l),
(69,700,l),
(69,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 34 4 78 17 17 17 17 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 533;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(158,0,l),
(158,327,l),
(449,327,l),
(449,395,l),
(158,395,l),
(158,631,l),
(500,631,l),
(500,700,l),
(74,700,l),
(74,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 34 4 78 17 17 17 17 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 534;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(192,0,l),
(192,307,l),
(466,307,l),
(466,416,l),
(192,416,l),
(192,591,l),
(505,591,l),
(505,700,l),
(64,700,l),
(64,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 34 4 78 17 17 17 17 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 532;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(181,0,l),
(181,314,l),
(460,314,l),
(460,409,l),
(181,409,l),
(181,604,l),
(503,604,l),
(503,700,l),
(67,700,l),
(67,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 2 0 3 4 2 3 103 0 1 1 0 95 0 0 0 33 77 0 4 4 34 4 78 17 17 17 17 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 533;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
kernLeft = C;
kernRight = G;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (381,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(455,-12,o),
(562,46,o),
(600,104,q),
(608,0,l),
(706,0,l),
(706,376,l),
(359,376,l),
(359,289,l),
(597,289,l),
(585,190,o),
(478,83,o),
(380,83,qs),
(274,83,o),
(153,226,o),
(153,347,qs),
(153,468,o),
(277,615,o),
(389,615,qs),
(462,615,o),
(558,551,o),
(573,494,q),
(693,494,l),
(669,597,o),
(509,712,o),
(389,712,qs),
(281,712,o),
(125,617,o),
(44,452,o),
(44,348,qs),
(44,243,o),
(125,79,o),
(274,-12,o),
(373,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
29 1 3 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 5 2 1 5 128 0 5 0 4 3 5 4 103 0 2 2 0 97 0 0 0 39 77 0 3 3 6 97 8 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 5 2 1 5 128 0 5 0 4 3 5 4 103 0 2 2 0 97 0 0 0 39 77 0 6 6 34 77 0 3 3 7 97 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 32 0 31 17 17 18 36 34 18 38 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 761;
},
{
anchors = (
{
name = bottom;
pos = (379,0);
},
{
name = top;
pos = (379,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(462,-12,o),
(574,51,o),
(614,115,q),
(621,0,l),
(698,0,l),
(698,374,l),
(360,374,l),
(360,308,l),
(612,308,l),
(604,191,o),
(487,63,o),
(378,63,qs),
(302,63,o),
(191,136,o),
(133,266,o),
(133,349,qs),
(133,431,o),
(191,560,o),
(306,635,o),
(387,635,qs),
(468,635,o),
(574,562,o),
(588,498,q),
(685,498,l),
(662,598,o),
(504,712,o),
(387,712,qs),
(282,712,o),
(128,618,o),
(47,453,o),
(47,349,qs),
(47,244,o),
(128,80,o),
(277,-12,o),
(375,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 3 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 5 2 1 5 128 0 5 0 4 3 5 4 103 0 2 2 0 97 0 0 0 39 77 0 3 3 6 97 8 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 5 2 1 5 128 0 5 0 4 3 5 4 103 0 2 2 0 97 0 0 0 39 77 0 6 6 34 77 0 3 3 7 97 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 34 0 33 17 17 18 38 34 18 38 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 757;
},
{
anchors = (
{
name = bottom;
pos = (383,0);
},
{
name = top;
pos = (383,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(447,-12,o),
(550,40,o),
(585,92,q),
(595,0,l),
(713,0,l),
(713,378,l),
(358,378,l),
(358,270,l),
(581,270,l),
(567,190,o),
(469,102,o),
(382,102,qs),
(284,102,o),
(172,230,o),
(172,345,qs),
(172,462,o),
(287,594,o),
(391,594,qs),
(456,594,o),
(541,540,o),
(557,490,q),
(700,490,l),
(676,595,o),
(514,712,o),
(391,712,qs),
(281,712,o),
(123,616,o),
(41,450,o),
(41,346,qs),
(41,240,o),
(123,78,o),
(272,-12,o),
(370,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
29 1 6 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 5 2 1 5 128 0 5 0 4 3 5 4 103 0 2 2 0 97 0 0 0 39 77 0 3 3 6 97 8 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 5 2 1 5 128 0 5 0 4 3 5 4 103 0 2 2 0 97 0 0 0 39 77 0 6 6 34 77 0 3 3 7 97 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 32 0 31 17 17 18 36 34 18 38 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 765;
},
{
anchors = (
{
name = bottom;
pos = (382,0);
},
{
name = top;
pos = (382,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(452,-12,o),
(558,44,o),
(595,100,q),
(604,0,l),
(708,0,l),
(708,377,l),
(359,377,l),
(359,283,l),
(591,283,l),
(579,191,o),
(475,89,o),
(381,89,qs),
(278,89,o),
(159,227,o),
(159,346,qs),
(159,466,o),
(280,608,o),
(390,608,qs),
(460,608,o),
(552,547,o),
(567,493,q),
(695,493,l),
(671,596,o),
(510,712,o),
(390,712,qs),
(281,712,o),
(124,617,o),
(43,451,o),
(43,347,qs),
(43,242,o),
(124,79,o),
(273,-12,o),
(372,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
29 1 3 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 5 2 1 5 128 0 5 0 4 3 5 4 103 0 2 2 0 97 0 0 0 39 77 0 3 3 6 97 8 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 5 2 1 5 128 0 5 0 4 3 5 4 103 0 2 2 0 97 0 0 0 39 77 0 6 6 34 77 0 3 3 7 97 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 32 0 31 17 17 18 36 34 18 38 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 762;
}
);
note = G;
unicode = 71;
},
{
glyphname = Gbreve;
kernLeft = C;
kernRight = G;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (381,909);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (233,0);
ref = uni0306.case;
}
);
width = 761;
},
{
anchors = (
{
name = bottom;
pos = (379,0);
},
{
name = top;
pos = (379,901);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (238,0);
ref = uni0306.case;
}
);
width = 757;
},
{
anchors = (
{
name = bottom;
pos = (383,0);
},
{
name = top;
pos = (383,917);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (227,0);
ref = uni0306.case;
}
);
width = 765;
},
{
anchors = (
{
name = bottom;
pos = (382,0);
},
{
name = top;
pos = (382,912);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (231,0);
ref = uni0306.case;
}
);
width = 762;
}
);
note = Gbreve;
unicode = 286;
},
{
glyphname = uni0122;
kernLeft = C;
kernRight = G;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (381,-256);
},
{
name = top;
pos = (381,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (326,0);
ref = uni0326;
}
);
width = 761;
},
{
anchors = (
{
name = bottom;
pos = (379,-238);
},
{
name = top;
pos = (379,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (330,0);
ref = uni0326;
}
);
width = 757;
},
{
anchors = (
{
name = bottom;
pos = (383,-274);
},
{
name = top;
pos = (383,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (321,0);
ref = uni0326;
}
);
width = 765;
},
{
anchors = (
{
name = bottom;
pos = (382,-262);
},
{
name = top;
pos = (382,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (324,0);
ref = uni0326;
}
);
width = 762;
}
);
note = uni0122;
unicode = 290;
},
{
glyphname = Gdotaccent;
kernLeft = C;
kernRight = G;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (381,0);
},
{
name = top;
pos = (381,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (311,0);
ref = uni0307.case;
}
);
width = 761;
},
{
anchors = (
{
name = bottom;
pos = (379,0);
},
{
name = top;
pos = (379,889);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (321,0);
ref = uni0307.case;
}
);
width = 757;
},
{
anchors = (
{
name = bottom;
pos = (383,0);
},
{
name = top;
pos = (383,934);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (300,0);
ref = uni0307.case;
}
);
width = 765;
},
{
anchors = (
{
name = bottom;
pos = (382,0);
},
{
name = top;
pos = (382,919);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = G;
},
{
alignment = -1;
pos = (307,0);
ref = uni0307.case;
}
);
width = 762;
}
);
note = Gdotaccent;
unicode = 288;
},
{
glyphname = H;
kernRight = H;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,0,l),
(175,326,l),
(514,326,l),
(514,0,l),
(620,0,l),
(620,700,l),
(514,700,l),
(514,415,l),
(175,415,l),
(175,700,l),
(69,700,l),
(69,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 0 4 3 1 4 103 2 1 0 0 33 77 5 1 3 3 34 3 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 689;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(158,0,l),
(158,336,l),
(521,336,l),
(521,0,l),
(605,0,l),
(605,700,l),
(521,700,l),
(521,405,l),
(158,405,l),
(158,700,l),
(74,700,l),
(74,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 0 4 3 1 4 103 2 1 0 0 33 77 5 1 3 3 34 3 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 679;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(192,0,l),
(192,316,l),
(506,316,l),
(506,0,l),
(634,0,l),
(634,700,l),
(506,700,l),
(506,425,l),
(192,425,l),
(192,700,l),
(64,700,l),
(64,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 0 4 3 1 4 103 2 1 0 0 33 77 5 1 3 3 34 3 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 698;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(181,0,l),
(181,323,l),
(511,323,l),
(511,0,l),
(624,0,l),
(624,700,l),
(511,700,l),
(511,418,l),
(181,418,l),
(181,700,l),
(67,700,l),
(67,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 0 4 3 1 4 103 2 1 0 0 33 77 5 1 3 3 34 3 78 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 692;
}
);
note = H;
unicode = 72;
},
{
glyphname = Hbar;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(176,0,l),
(176,326,l),
(514,326,l),
(514,0,l),
(620,0,l),
(620,503,l),
(665,503,l),
(665,592,l),
(620,592,l),
(620,700,l),
(514,700,l),
(514,592,l),
(176,592,l),
(176,700,l),
(70,700,l),
(70,592,l),
(24,592,l),
(24,503,l),
(70,503,l),
(70,0,l)
);
},
{
closed = 1;
nodes = (
(176,503,l),
(514,503,l),
(514,415,l),
(176,415,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
5 3 2 1 10 6 2 0 11 1 0 103 12 1 11 0 8 7 11 8 103 4 1 2 2 33 77 9 1 7 7 34 7 78 20 20 20 23 20 23 22 21 19 18 17 17 17 17 17 17 17 17 16 13 8 31
CALL[ ]	/* CallFunction */";
};
width = 689;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(158,0,l),
(158,336,l),
(521,336,l),
(521,0,l),
(605,0,l),
(605,513,l),
(655,513,l),
(655,582,l),
(605,582,l),
(605,700,l),
(521,700,l),
(521,582,l),
(158,582,l),
(158,700,l),
(74,700,l),
(74,582,l),
(24,582,l),
(24,513,l),
(74,513,l),
(74,0,l)
);
},
{
closed = 1;
nodes = (
(158,513,l),
(521,513,l),
(521,405,l),
(158,405,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
5 3 2 1 10 6 2 0 11 1 0 103 12 1 11 0 8 7 11 8 103 4 1 2 2 33 77 9 1 7 7 34 7 78 20 20 20 23 20 23 22 21 19 18 17 17 17 17 17 17 17 17 16 13 8 31
CALL[ ]	/* CallFunction */";
};
width = 679;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(193,0,l),
(193,316,l),
(507,316,l),
(507,0,l),
(635,0,l),
(635,493,l),
(675,493,l),
(675,602,l),
(635,602,l),
(635,700,l),
(507,700,l),
(507,602,l),
(193,602,l),
(193,700,l),
(65,700,l),
(65,602,l),
(24,602,l),
(24,493,l),
(65,493,l),
(65,0,l)
);
},
{
closed = 1;
nodes = (
(193,493,l),
(507,493,l),
(507,425,l),
(193,425,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
5 3 2 1 10 6 2 0 11 1 0 103 12 1 11 0 8 7 11 8 103 4 1 2 2 33 77 9 1 7 7 34 7 78 20 20 20 23 20 23 22 21 19 18 17 17 17 17 17 17 17 17 16 13 8 31
CALL[ ]	/* CallFunction */";
};
width = 699;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(181,0,l),
(181,323,l),
(512,323,l),
(512,0,l),
(625,0,l),
(625,500,l),
(668,500,l),
(668,595,l),
(625,595,l),
(625,700,l),
(512,700,l),
(512,595,l),
(181,595,l),
(181,700,l),
(68,700,l),
(68,595,l),
(24,595,l),
(24,500,l),
(68,500,l),
(68,0,l)
);
},
{
closed = 1;
nodes = (
(181,500,l),
(512,500,l),
(512,418,l),
(181,418,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
5 3 2 1 10 6 2 0 11 1 0 103 12 1 11 0 8 7 11 8 103 4 1 2 2 33 77 9 1 7 7 34 7 78 20 20 20 23 20 23 22 21 19 18 17 17 17 17 17 17 17 17 16 13 8 31
CALL[ ]	/* CallFunction */";
};
width = 692;
}
);
note = Hbar;
unicode = 294;
},
{
glyphname = I;
kernRight = I;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (122,0);
},
{
name = ogonek;
pos = (175,0);
},
{
name = top;
pos = (122,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,0,l),
(175,700,l),
(69,700,l),
(69,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 244;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = ogonek;
pos = (158,0);
},
{
name = top;
pos = (116,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(158,0,l),
(158,700,l),
(74,700,l),
(74,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 232;
},
{
anchors = (
{
name = bottom;
pos = (128,0);
},
{
name = ogonek;
pos = (192,0);
},
{
name = top;
pos = (128,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(192,0,l),
(192,700,l),
(64,700,l),
(64,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 256;
},
{
anchors = (
{
name = bottom;
pos = (124,0);
},
{
name = ogonek;
pos = (181,0);
},
{
name = top;
pos = (124,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(181,0,l),
(181,700,l),
(67,700,l),
(67,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = I;
unicode = 73;
},
{
glyphname = IJ;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (500,0);
},
{
name = ogonek;
pos = (175,0);
},
{
name = top;
pos = (635,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (244,0);
ref = J;
}
);
width = 756;
},
{
anchors = (
{
name = bottom;
pos = (482,0);
},
{
name = ogonek;
pos = (158,0);
},
{
name = top;
pos = (616,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (232,0);
ref = J;
}
);
width = 731;
},
{
anchors = (
{
name = bottom;
pos = (518,0);
},
{
name = ogonek;
pos = (192,0);
},
{
name = top;
pos = (653,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (256,0);
ref = J;
}
);
width = 780;
},
{
anchors = (
{
name = bottom;
pos = (506,0);
},
{
name = ogonek;
pos = (181,0);
},
{
name = top;
pos = (641,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (248,0);
ref = J;
}
);
width = 764;
}
);
note = IJ;
unicode = 306;
},
{
glyphname = Iacute;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (122,0);
},
{
name = ogonek;
pos = (175,0);
},
{
name = top;
pos = (122,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (13,0);
ref = acutecomb.case;
}
);
width = 244;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = ogonek;
pos = (158,0);
},
{
name = top;
pos = (116,931);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (11,0);
ref = acutecomb.case;
}
);
width = 232;
},
{
anchors = (
{
name = bottom;
pos = (128,0);
},
{
name = ogonek;
pos = (192,0);
},
{
name = top;
pos = (128,952);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (15,0);
ref = acutecomb.case;
}
);
width = 256;
},
{
anchors = (
{
name = bottom;
pos = (124,0);
},
{
name = ogonek;
pos = (181,0);
},
{
name = top;
pos = (124,945);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (14,0);
ref = acutecomb.case;
}
);
width = 248;
}
);
note = Iacute;
unicode = 205;
},
{
glyphname = Ibreve;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (122,0);
},
{
name = ogonek;
pos = (175,0);
},
{
name = top;
pos = (122,909);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-27,0);
ref = uni0306.case;
}
);
width = 244;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = ogonek;
pos = (158,0);
},
{
name = top;
pos = (116,901);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-25,0);
ref = uni0306.case;
}
);
width = 232;
},
{
anchors = (
{
name = bottom;
pos = (128,0);
},
{
name = ogonek;
pos = (192,0);
},
{
name = top;
pos = (128,917);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-28,0);
ref = uni0306.case;
}
);
width = 256;
},
{
anchors = (
{
name = bottom;
pos = (124,0);
},
{
name = ogonek;
pos = (181,0);
},
{
name = top;
pos = (124,912);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-27,0);
ref = uni0306.case;
}
);
width = 248;
}
);
note = Ibreve;
unicode = 300;
},
{
glyphname = Icircumflex;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (122,0);
},
{
name = ogonek;
pos = (175,0);
},
{
name = top;
pos = (122,911);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-20,0);
ref = uni0302.case;
}
);
width = 244;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = ogonek;
pos = (158,0);
},
{
name = top;
pos = (116,902);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-21,0);
ref = uni0302.case;
}
);
width = 232;
},
{
anchors = (
{
name = bottom;
pos = (128,0);
},
{
name = ogonek;
pos = (192,0);
},
{
name = top;
pos = (128,919);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-18,0);
ref = uni0302.case;
}
);
width = 256;
},
{
anchors = (
{
name = bottom;
pos = (124,0);
},
{
name = ogonek;
pos = (181,0);
},
{
name = top;
pos = (124,913);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-19,0);
ref = uni0302.case;
}
);
width = 248;
}
);
note = Icircumflex;
unicode = 206;
},
{
glyphname = Idieresis;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (122,0);
},
{
name = ogonek;
pos = (175,0);
},
{
name = top;
pos = (122,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-49,0);
ref = uni0308.case;
}
);
width = 244;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = ogonek;
pos = (158,0);
},
{
name = top;
pos = (116,889);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-31,0);
ref = uni0308.case;
}
);
width = 232;
},
{
anchors = (
{
name = bottom;
pos = (128,0);
},
{
name = ogonek;
pos = (192,0);
},
{
name = top;
pos = (128,934);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-66,0);
ref = uni0308.case;
}
);
width = 256;
},
{
anchors = (
{
name = bottom;
pos = (124,0);
},
{
name = ogonek;
pos = (181,0);
},
{
name = top;
pos = (124,919);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-54,0);
ref = uni0308.case;
}
);
width = 248;
}
);
note = Idieresis;
unicode = 207;
},
{
glyphname = Idotaccent;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (122,0);
},
{
name = ogonek;
pos = (175,0);
},
{
name = top;
pos = (122,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (52,0);
ref = uni0307.case;
}
);
width = 244;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = ogonek;
pos = (158,0);
},
{
name = top;
pos = (116,889);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (58,0);
ref = uni0307.case;
}
);
width = 232;
},
{
anchors = (
{
name = bottom;
pos = (128,0);
},
{
name = ogonek;
pos = (192,0);
},
{
name = top;
pos = (128,934);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (45,0);
ref = uni0307.case;
}
);
width = 256;
},
{
anchors = (
{
name = bottom;
pos = (124,0);
},
{
name = ogonek;
pos = (181,0);
},
{
name = top;
pos = (124,919);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (49,0);
ref = uni0307.case;
}
);
width = 248;
}
);
note = Idotaccent;
unicode = 304;
},
{
glyphname = Igrave;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (122,0);
},
{
name = ogonek;
pos = (175,0);
},
{
name = top;
pos = (122,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (13,0);
ref = gravecomb.case;
}
);
width = 244;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = ogonek;
pos = (158,0);
},
{
name = top;
pos = (116,931);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (11,0);
ref = gravecomb.case;
}
);
width = 232;
},
{
anchors = (
{
name = bottom;
pos = (128,0);
},
{
name = ogonek;
pos = (192,0);
},
{
name = top;
pos = (128,952);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (15,0);
ref = gravecomb.case;
}
);
width = 256;
},
{
anchors = (
{
name = bottom;
pos = (124,0);
},
{
name = ogonek;
pos = (181,0);
},
{
name = top;
pos = (124,945);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (14,0);
ref = gravecomb.case;
}
);
width = 248;
}
);
note = Igrave;
unicode = 204;
},
{
glyphname = Imacron;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (122,0);
},
{
name = ogonek;
pos = (175,0);
},
{
name = top;
pos = (122,867);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-54,0);
ref = uni0304.case;
}
);
width = 244;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = ogonek;
pos = (158,0);
},
{
name = top;
pos = (116,859);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-58,0);
ref = uni0304.case;
}
);
width = 232;
},
{
anchors = (
{
name = bottom;
pos = (128,0);
},
{
name = ogonek;
pos = (192,0);
},
{
name = top;
pos = (128,874);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-49,0);
ref = uni0304.case;
}
);
width = 256;
},
{
anchors = (
{
name = bottom;
pos = (124,0);
},
{
name = ogonek;
pos = (181,0);
},
{
name = top;
pos = (124,869);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-52,0);
ref = uni0304.case;
}
);
width = 248;
}
);
note = Imacron;
unicode = 298;
},
{
glyphname = Iogonek;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (122,0);
},
{
name = ogonek;
pos = (175,0);
},
{
name = top;
pos = (122,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,-206,o),
(180,-193,q),
(180,-127,l),
(143,-142,o),
(112,-142,qs),
(86,-142,o),
(56,-118,o),
(56,-97,qs),
(56,-78,o),
(86,-44,o),
(121,-27,qs),
(176,0,l),
(175,2,l),
(175,700,l),
(69,700,l),
(69,15,l),
(18,-12,o),
(-27,-72,o),
(-27,-107,qs),
(-27,-156,o),
(45,-206,o),
(99,-206,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
18 8 5 3 1 0 19 1 2 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 33 77 0 1 1 2 98 3 1 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
0 1 3 1 2 1 2 102 0 0 0 33 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 21 0 20 40 22 4 8 24
CALL[ ]	/* CallFunction */";
};
width = 244;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = ogonek;
pos = (158,0);
},
{
name = top;
pos = (116,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(125,-203,o),
(161,-190,q),
(161,-134,l),
(127,-149,o),
(96,-149,qs),
(69,-149,o),
(36,-123,o),
(36,-100,qs),
(36,-59,o),
(100,-28,qs),
(158,0,l),
(158,700,l),
(74,700,l),
(74,15,l),
(-32,-33,o),
(-32,-108,qs),
(-32,-155,o),
(36,-203,o),
(86,-203,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
15 7 4 3 1 0 16 1 2 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 33 77 0 1 1 2 97 3 1 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
0 1 3 1 2 1 2 101 0 0 0 33 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 18 0 17 38 21 4 8 24
CALL[ ]	/* CallFunction */";
};
width = 232;
},
{
anchors = (
{
name = bottom;
pos = (128,0);
},
{
name = ogonek;
pos = (192,0);
},
{
name = top;
pos = (128,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(153,-210,o),
(197,-196,q),
(197,-120,l),
(158,-135,o),
(126,-135,qs),
(102,-135,o),
(74,-113,o),
(74,-94,qs),
(74,-76,o),
(105,-44,o),
(140,-26,qs),
(192,0,l),
(192,700,l),
(64,700,l),
(64,14,l),
(17,-13,o),
(-23,-72,o),
(-23,-106,qs),
(-23,-157,o),
(52,-210,o),
(110,-210,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
17 8 5 3 1 0 18 1 2 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 33 77 0 1 1 2 98 3 1 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
0 1 3 1 2 1 2 102 0 0 0 33 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 0 19 39 22 4 8 24
CALL[ ]	/* CallFunction */";
};
width = 256;
},
{
anchors = (
{
name = bottom;
pos = (124,0);
},
{
name = ogonek;
pos = (181,0);
},
{
name = top;
pos = (124,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(141,-208,o),
(185,-194,q),
(185,-125,l),
(148,-140,o),
(116,-140,qs),
(91,-140,o),
(61,-116,o),
(61,-96,qs),
(61,-77,o),
(92,-44,o),
(127,-27,qs),
(181,0,l),
(181,700,l),
(67,700,l),
(67,14,l),
(17,-13,o),
(-26,-72,o),
(-26,-107,qs),
(-26,-157,o),
(46,-208,o),
(102,-208,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
17 8 5 3 1 0 18 1 2 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 33 77 0 1 1 2 98 3 1 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
0 1 3 1 2 1 2 102 0 0 0 33 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 20 0 19 39 22 4 8 24
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = Iogonek;
unicode = 302;
},
{
glyphname = Itilde;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (122,0);
},
{
name = ogonek;
pos = (175,0);
},
{
name = top;
pos = (122,868);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-42,0);
ref = tildecomb.case;
}
);
width = 244;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = ogonek;
pos = (158,0);
},
{
name = top;
pos = (116,859);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-35,0);
ref = tildecomb.case;
}
);
width = 232;
},
{
anchors = (
{
name = bottom;
pos = (128,0);
},
{
name = ogonek;
pos = (192,0);
},
{
name = top;
pos = (128,877);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-48,0);
ref = tildecomb.case;
}
);
width = 256;
},
{
anchors = (
{
name = bottom;
pos = (124,0);
},
{
name = ogonek;
pos = (181,0);
},
{
name = top;
pos = (124,871);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = I;
},
{
alignment = -1;
pos = (-44,0);
ref = tildecomb.case;
}
);
width = 248;
}
);
note = Itilde;
unicode = 296;
},
{
glyphname = J;
kernLeft = J;
kernRight = J;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (256,0);
},
{
name = top;
pos = (391,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(335,-12,o),
(443,96,o),
(443,194,qs),
(443,700,l),
(337,700,l),
(337,194,ls),
(337,142,o),
(289,83,o),
(237,83,qs),
(183,83,o),
(132,145,o),
(131,199,q),
(25,199,l),
(25,100,o),
(139,-12,o),
(239,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 0 2 1 2 0 1 128 0 2 2 33 77 0 1 1 3 97 4 1 3 3 40 3 78 0 0 0 15 0 14 19 34 18 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 512;
},
{
anchors = (
{
name = bottom;
pos = (250,0);
},
{
name = top;
pos = (384,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(322,-12,o),
(425,92,o),
(425,185,qs),
(425,700,l),
(341,700,l),
(341,185,ls),
(341,63,o),
(229,63,qs),
(167,63,o),
(112,130,o),
(112,188,q),
(27,188,l),
(27,94,o),
(135,-12,o),
(230,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 0 2 1 2 0 1 128 0 2 2 33 77 0 1 1 3 97 4 1 3 3 40 3 78 0 0 0 14 0 13 18 34 18 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 499;
},
{
anchors = (
{
name = bottom;
pos = (262,0);
},
{
name = top;
pos = (397,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(346,-12,o),
(460,100,o),
(460,202,qs),
(460,700,l),
(332,700,l),
(332,202,ls),
(332,155,o),
(288,102,o),
(244,102,qs),
(197,102,o),
(151,158,o),
(150,209,q),
(22,209,l),
(22,105,o),
(144,-12,o),
(247,-12,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 0 2 1 1 0 114 0 2 2 33 77 0 1 1 3 98 4 1 3 3 40 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 1 2 0 1 128 0 2 2 33 77 0 1 1 3 98 4 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 15 0 14 19 34 18 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 524;
},
{
anchors = (
{
name = bottom;
pos = (258,0);
},
{
name = top;
pos = (393,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(338,-12,o),
(448,97,o),
(448,196,qs),
(448,700,l),
(335,700,l),
(335,196,ls),
(335,146,o),
(289,89,o),
(239,89,qs),
(187,89,o),
(138,149,o),
(137,202,q),
(24,202,l),
(24,101,o),
(140,-12,o),
(241,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 0 2 1 2 0 1 128 0 2 2 33 77 0 1 1 3 98 4 1 3 3 40 3 78 0 0 0 15 0 14 19 34 18 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = J;
unicode = 74;
},
{
glyphname = uni004A0301;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (256,0);
},
{
name = top;
pos = (391,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = J;
},
{
alignment = -1;
pos = (282,0);
ref = acutecomb.case;
}
);
width = 512;
},
{
anchors = (
{
name = bottom;
pos = (250,0);
},
{
name = top;
pos = (384,931);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = J;
},
{
alignment = -1;
pos = (279,0);
ref = acutecomb.case;
}
);
width = 499;
},
{
anchors = (
{
name = bottom;
pos = (262,0);
},
{
name = top;
pos = (397,952);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = J;
},
{
alignment = -1;
pos = (284,0);
ref = acutecomb.case;
}
);
width = 524;
},
{
anchors = (
{
name = bottom;
pos = (258,0);
},
{
name = top;
pos = (393,945);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = J;
},
{
alignment = -1;
pos = (282,0);
ref = acutecomb.case;
}
);
width = 516;
}
);
note = uni004A0301;
},
{
glyphname = K;
kernRight = K;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (302,0);
},
{
name = top;
pos = (302,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,0,l),
(177,329,l),
(454,0,l),
(601,0,l),
(287,359,l),
(586,700,l),
(450,700,l),
(177,374,l),
(177,700,l),
(71,700,l),
(71,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
8 5 2 3 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 607;
},
{
anchors = (
{
name = bottom;
pos = (288,0);
},
{
name = top;
pos = (288,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(158,0,l),
(158,333,l),
(457,0,l),
(576,0,l),
(248,357,l),
(561,700,l),
(454,700,l),
(158,367,l),
(158,700,l),
(74,700,l),
(74,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
8 5 2 3 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
anchors = (
{
name = bottom;
pos = (316,0);
},
{
name = top;
pos = (316,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(195,0,l),
(195,324,l),
(451,0,l),
(626,0,l),
(325,360,l),
(610,700,l),
(446,700,l),
(195,379,l),
(195,700,l),
(67,700,l),
(67,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
8 5 2 3 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 633;
},
{
anchors = (
{
name = bottom;
pos = (307,0);
},
{
name = top;
pos = (307,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(183,0,l),
(183,327,l),
(453,0,l),
(609,0,l),
(300,359,l),
(594,700,l),
(449,700,l),
(183,375,l),
(183,700,l),
(69,700,l),
(69,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
8 5 2 3 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 615;
}
);
note = K;
unicode = 75;
},
{
glyphname = uni0136;
kernRight = K;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (303,-256);
},
{
name = top;
pos = (302,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = K;
},
{
alignment = -1;
pos = (247,0);
ref = uni0326;
}
);
width = 607;
},
{
anchors = (
{
name = bottom;
pos = (288,-238);
},
{
name = top;
pos = (288,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = K;
},
{
alignment = -1;
pos = (239,0);
ref = uni0326;
}
);
width = 580;
},
{
anchors = (
{
name = bottom;
pos = (316,-274);
},
{
name = top;
pos = (316,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = K;
},
{
alignment = -1;
pos = (254,0);
ref = uni0326;
}
);
width = 633;
},
{
anchors = (
{
name = bottom;
pos = (307,-262);
},
{
name = top;
pos = (307,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = K;
},
{
alignment = -1;
pos = (249,0);
ref = uni0326;
}
);
width = 615;
}
);
note = uni0136;
unicode = 310;
},
{
glyphname = L;
kernRight = L;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (266,0);
},
{
name = top;
pos = (177,700);
},
{
name = topright;
pos = (271,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(489,0,l),
(489,88,l),
(175,88,l),
(175,700,l),
(69,700,l),
(69,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 17 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 530;
},
{
anchors = (
{
name = bottom;
pos = (263,0);
},
{
name = top;
pos = (178,700);
},
{
name = topright;
pos = (261,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(484,0,l),
(484,67,l),
(158,67,l),
(158,700,l),
(74,700,l),
(74,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 17 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 525;
},
{
anchors = (
{
name = bottom;
pos = (268,0);
},
{
name = top;
pos = (175,700);
},
{
name = topright;
pos = (281,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(494,0,l),
(494,109,l),
(192,109,l),
(192,700,l),
(64,700,l),
(64,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 17 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (266,0);
},
{
name = top;
pos = (176,700);
},
{
name = topright;
pos = (274,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(491,0,l),
(491,95,l),
(181,95,l),
(181,700,l),
(67,700,l),
(67,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 17 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 532;
}
);
note = L;
unicode = 76;
},
{
glyphname = Lacute;
kernRight = L;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (266,0);
},
{
name = top;
pos = (177,942);
},
{
name = topright;
pos = (271,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (68,0);
ref = acutecomb.case;
}
);
width = 530;
},
{
anchors = (
{
name = bottom;
pos = (263,0);
},
{
name = top;
pos = (178,931);
},
{
name = topright;
pos = (261,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (73,0);
ref = acutecomb.case;
}
);
width = 525;
},
{
anchors = (
{
name = bottom;
pos = (268,0);
},
{
name = top;
pos = (175,952);
},
{
name = topright;
pos = (281,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (62,0);
ref = acutecomb.case;
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (266,0);
},
{
name = top;
pos = (176,945);
},
{
name = topright;
pos = (274,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (66,0);
ref = acutecomb.case;
}
);
width = 532;
}
);
note = Lacute;
unicode = 313;
},
{
glyphname = Lcaron;
kernRight = L;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (266,0);
},
{
name = top;
pos = (177,700);
},
{
name = topright;
pos = (271,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (269,0);
ref = uni030C.alt.case;
}
);
width = 530;
},
{
anchors = (
{
name = bottom;
pos = (263,0);
},
{
name = top;
pos = (178,700);
},
{
name = topright;
pos = (261,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (257,0);
ref = uni030C.alt.case;
}
);
width = 525;
},
{
anchors = (
{
name = bottom;
pos = (268,0);
},
{
name = top;
pos = (175,700);
},
{
name = topright;
pos = (281,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (281,0);
ref = uni030C.alt.case;
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (266,0);
},
{
name = top;
pos = (176,700);
},
{
name = topright;
pos = (274,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (273,0);
ref = uni030C.alt.case;
}
);
width = 532;
}
);
note = Lcaron;
unicode = 317;
},
{
glyphname = uni013B;
kernRight = L;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (266,-256);
},
{
name = top;
pos = (177,700);
},
{
name = topright;
pos = (271,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (210,0);
ref = uni0326;
}
);
width = 530;
},
{
anchors = (
{
name = bottom;
pos = (263,-238);
},
{
name = top;
pos = (178,700);
},
{
name = topright;
pos = (261,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (214,0);
ref = uni0326;
}
);
width = 525;
},
{
anchors = (
{
name = bottom;
pos = (268,-274);
},
{
name = top;
pos = (175,700);
},
{
name = topright;
pos = (281,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (206,0);
ref = uni0326;
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (266,-262);
},
{
name = top;
pos = (176,700);
},
{
name = topright;
pos = (274,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = L;
},
{
alignment = -1;
pos = (209,0);
ref = uni0326;
}
);
width = 532;
}
);
note = uni013B;
unicode = 315;
},
{
glyphname = Ldot;
kernRight = L;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(489,0,l),
(489,88,l),
(175,88,l),
(175,700,l),
(69,700,l),
(69,0,l)
);
},
{
closed = 1;
nodes = (
(392,280,o),
(433,321,o),
(433,350,qs),
(433,380,o),
(392,420,o),
(363,420,qs),
(333,420,o),
(293,380,o),
(293,350,qs),
(293,321,o),
(333,280,o),
(363,280,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 5 1 4 1 3 4 105 0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 6 6 6 17 6 16 37 17 17 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 530;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(484,0,l),
(484,67,l),
(158,67,l),
(158,700,l),
(74,700,l),
(74,0,l)
);
},
{
closed = 1;
nodes = (
(381,293,o),
(414,326,o),
(414,350,qs),
(414,375,o),
(381,407,o),
(357,407,qs),
(332,407,o),
(299,375,o),
(299,350,qs),
(299,326,o),
(332,293,o),
(357,293,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 5 1 4 1 3 4 105 0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 6 6 6 17 6 16 37 17 17 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 525;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(494,0,l),
(494,109,l),
(192,109,l),
(192,700,l),
(64,700,l),
(64,0,l)
);
},
{
closed = 1;
nodes = (
(404,267,o),
(452,316,o),
(452,350,qs),
(452,385,o),
(404,433,o),
(369,433,qs),
(334,433,o),
(286,385,o),
(286,350,qs),
(286,315,o),
(334,267,o),
(369,267,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 5 1 4 1 3 4 105 0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 6 6 6 17 6 16 37 17 17 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 535;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(491,0,l),
(491,95,l),
(181,95,l),
(181,700,l),
(67,700,l),
(67,0,l)
);
},
{
closed = 1;
nodes = (
(396,276,o),
(439,319,o),
(439,350,qs),
(439,381,o),
(396,424,o),
(365,424,qs),
(333,424,o),
(290,381,o),
(290,350,qs),
(290,319,o),
(334,276,o),
(365,276,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 5 1 4 1 3 4 105 0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 6 6 6 17 6 16 37 17 17 16 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 532;
}
);
note = Ldot;
unicode = 319;
},
{
glyphname = Lslash;
kernRight = L;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(514,0,l),
(514,88,l),
(200,88,l),
(200,341,l),
(313,381,l),
(313,468,l),
(200,427,l),
(200,700,l),
(94,700,l),
(94,390,l),
(18,363,l),
(18,276,l),
(94,304,l),
(94,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
9 8 7 6 3 2 1 0 8 1 0 1 76 0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 17 21 20 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 555;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(510,0,l),
(510,67,l),
(184,67,l),
(184,346,l),
(306,392,l),
(306,459,l),
(184,413,l),
(184,700,l),
(100,700,l),
(100,381,l),
(20,351,l),
(20,284,l),
(100,314,l),
(100,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
9 8 7 6 3 2 1 0 8 1 0 1 76 0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 17 21 20 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 551;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(518,0,l),
(518,109,l),
(216,109,l),
(216,335,l),
(319,370,l),
(319,476,l),
(216,441,l),
(216,700,l),
(88,700,l),
(88,399,l),
(16,374,l),
(16,268,l),
(88,293,l),
(88,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
9 8 7 6 3 2 1 0 8 1 0 1 76 0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 17 21 20 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 559;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(515,0,l),
(515,95,l),
(205,95,l),
(205,339,l),
(315,377,l),
(315,470,l),
(205,432,l),
(205,700,l),
(92,700,l),
(92,393,l),
(17,366,l),
(17,273,l),
(92,300,l),
(92,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
9 8 7 6 3 2 1 0 8 1 0 1 76 0 0 0 33 77 0 1 1 2 96 0 2 2 34 2 78 17 21 20 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = Lslash;
unicode = 321;
},
{
glyphname = M;
kernRight = M;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,0,l),
(175,510,l),
(373,95,l),
(455,95,l),
(652,510,l),
(652,0,l),
(758,0,l),
(758,700,l),
(633,700,l),
(415,231,l),
(194,700,l),
(69,700,l),
(69,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
10 7 2 3 3 0 1 76 0 3 0 2 0 3 2 128 1 1 0 0 33 77 4 1 2 2 34 2 78 18 18 17 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 827;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(158,0,l),
(158,547,l),
(382,100,l),
(445,100,l),
(669,548,l),
(669,0,l),
(753,0,l),
(753,700,l),
(654,700,l),
(414,214,l),
(172,700,l),
(74,700,l),
(74,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
10 7 2 3 3 0 1 76 0 3 0 2 0 3 2 128 1 1 0 0 33 77 4 1 2 2 34 2 78 18 18 17 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 827;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(192,0,l),
(192,472,l),
(363,89,l),
(464,89,l),
(635,472,l),
(635,0,l),
(763,0,l),
(763,700,l),
(611,700,l),
(415,248,l),
(216,700,l),
(64,700,l),
(64,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
10 7 2 3 3 0 1 76 0 3 0 2 0 3 2 128 1 1 0 0 33 77 4 1 2 2 34 2 78 18 18 17 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 827;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(181,0,l),
(181,497,l),
(369,93,l),
(458,93,l),
(646,497,l),
(646,0,l),
(760,0,l),
(760,700,l),
(625,700,l),
(415,237,l),
(201,700,l),
(67,700,l),
(67,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
10 7 2 3 3 0 1 76 0 3 0 2 0 3 2 128 1 1 0 0 33 77 4 1 2 2 34 2 78 18 18 17 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 827;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
kernLeft = N;
kernRight = N;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (351,0);
},
{
name = top;
pos = (351,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,0,l),
(175,525,l),
(526,0,l),
(632,0,l),
(632,700,l),
(526,700,l),
(526,175,l),
(175,700,l),
(69,700,l),
(69,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
7 2 2 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 17 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 701;
},
{
anchors = (
{
name = bottom;
pos = (345,0);
},
{
name = top;
pos = (345,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(158,0,l),
(158,561,l),
(531,0,l),
(615,0,l),
(615,700,l),
(531,700,l),
(531,139,l),
(158,700,l),
(74,700,l),
(74,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
7 2 2 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 17 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 689;
},
{
anchors = (
{
name = bottom;
pos = (357,0);
},
{
name = top;
pos = (357,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(192,0,l),
(192,488,l),
(521,0,l),
(649,0,l),
(649,700,l),
(521,700,l),
(521,211,l),
(192,700,l),
(64,700,l),
(64,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
7 2 2 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 17 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 713;
},
{
anchors = (
{
name = bottom;
pos = (353,0);
},
{
name = top;
pos = (353,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(181,0,l),
(181,512,l),
(524,0,l),
(638,0,l),
(638,700,l),
(524,700,l),
(524,187,l),
(181,700,l),
(67,700,l),
(67,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
7 2 2 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 17 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 705;
}
);
note = N;
unicode = 78;
},
{
glyphname = Nacute;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (351,0);
},
{
name = top;
pos = (351,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (242,0);
ref = acutecomb.case;
}
);
width = 701;
},
{
anchors = (
{
name = bottom;
pos = (345,0);
},
{
name = top;
pos = (345,931);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (240,0);
ref = acutecomb.case;
}
);
width = 689;
},
{
anchors = (
{
name = bottom;
pos = (357,0);
},
{
name = top;
pos = (357,952);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (244,0);
ref = acutecomb.case;
}
);
width = 713;
},
{
anchors = (
{
name = bottom;
pos = (353,0);
},
{
name = top;
pos = (353,945);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (243,0);
ref = acutecomb.case;
}
);
width = 705;
}
);
note = Nacute;
unicode = 323;
},
{
glyphname = Ncaron;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (351,0);
},
{
name = top;
pos = (351,910);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (210,0);
ref = uni030C.case;
}
);
width = 701;
},
{
anchors = (
{
name = bottom;
pos = (345,0);
},
{
name = top;
pos = (345,901);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (208,0);
ref = uni030C.case;
}
);
width = 689;
},
{
anchors = (
{
name = bottom;
pos = (357,0);
},
{
name = top;
pos = (357,918);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (211,0);
ref = uni030C.case;
}
);
width = 713;
},
{
anchors = (
{
name = bottom;
pos = (353,0);
},
{
name = top;
pos = (353,912);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (210,0);
ref = uni030C.case;
}
);
width = 705;
}
);
note = Ncaron;
unicode = 327;
},
{
glyphname = uni0145;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (351,-256);
},
{
name = top;
pos = (351,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (296,0);
ref = uni0326;
}
);
width = 701;
},
{
anchors = (
{
name = bottom;
pos = (345,-238);
},
{
name = top;
pos = (345,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (296,0);
ref = uni0326;
}
);
width = 689;
},
{
anchors = (
{
name = bottom;
pos = (357,-274);
},
{
name = top;
pos = (357,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (295,0);
ref = uni0326;
}
);
width = 713;
},
{
anchors = (
{
name = bottom;
pos = (353,-262);
},
{
name = top;
pos = (353,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (295,0);
ref = uni0326;
}
);
width = 705;
}
);
note = uni0145;
unicode = 325;
},
{
glyphname = Ntilde;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (351,0);
},
{
name = top;
pos = (351,868);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (188,0);
ref = tildecomb.case;
}
);
width = 701;
},
{
anchors = (
{
name = bottom;
pos = (345,0);
},
{
name = top;
pos = (345,859);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (194,0);
ref = tildecomb.case;
}
);
width = 689;
},
{
anchors = (
{
name = bottom;
pos = (357,0);
},
{
name = top;
pos = (357,877);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (181,0);
ref = tildecomb.case;
}
);
width = 713;
},
{
anchors = (
{
name = bottom;
pos = (353,0);
},
{
name = top;
pos = (353,871);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = N;
},
{
alignment = -1;
pos = (185,0);
ref = tildecomb.case;
}
);
width = 705;
}
);
note = Ntilde;
unicode = 209;
},
{
glyphname = Eng;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,0,l),
(175,525,l),
(526,0,l),
(526,-67,ls),
(526,-100,o),
(495,-129,o),
(461,-129,qs),
(428,-129,l),
(428,-220,l),
(477,-220,ls),
(632,-220,o),
(632,-68,qs),
(632,700,l),
(526,700,l),
(526,175,l),
(175,700,l),
(69,700,l),
(69,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
15 2 2 4 0 1 76 14 1 4 1 75 1 1 0 0 33 77 0 4 4 34 77 0 3 3 2 98 0 2 2 38 2 78 21 33 34 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 701;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(158,0,l),
(158,561,l),
(531,0,l),
(531,-80,ls),
(531,-116,o),
(498,-148,o),
(461,-148,qs),
(422,-148,l),
(422,-220,l),
(474,-220,ls),
(544,-220,o),
(615,-153,o),
(615,-82,qs),
(615,700,l),
(531,700,l),
(531,139,l),
(158,700,l),
(74,700,l),
(74,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
16 2 2 4 0 1 76 15 1 4 1 75 1 1 0 0 33 77 0 4 4 34 77 0 3 3 2 97 0 2 2 38 2 78 21 33 35 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 689;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(192,0,l),
(192,488,l),
(521,0,l),
(521,-54,ls),
(521,-85,o),
(492,-111,o),
(460,-111,qs),
(433,-111,l),
(433,-220,l),
(480,-220,ls),
(649,-220,o),
(649,-54,qs),
(649,700,l),
(521,700,l),
(521,211,l),
(192,700,l),
(64,700,l),
(64,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
15 2 2 4 0 1 76 14 1 4 1 75 1 1 0 0 33 77 0 4 4 34 77 0 3 3 2 98 0 2 2 38 2 78 21 33 34 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 713;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(181,0,l),
(181,512,l),
(524,0,l),
(524,-63,ls),
(524,-96,o),
(494,-123,o),
(460,-123,qs),
(429,-123,l),
(429,-220,l),
(478,-220,ls),
(554,-220,o),
(638,-146,o),
(638,-63,qs),
(638,700,l),
(524,700,l),
(524,187,l),
(181,700,l),
(67,700,l),
(67,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
16 2 2 4 0 1 76 15 1 4 1 75 1 1 0 0 33 77 0 4 4 34 77 0 3 3 2 98 0 2 2 38 2 78 21 33 35 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 705;
}
);
note = Eng;
unicode = 330;
},
{
glyphname = O;
kernLeft = C;
kernRight = D;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (396,0);
},
{
name = ogonek;
pos = (474,10);
},
{
name = top;
pos = (396,700);
},
{
name = topright;
pos = (771,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(495,-12,o),
(655,79,o),
(747,244,o),
(747,350,qs),
(747,457,o),
(655,622,o),
(495,712,o),
(395,712,qs),
(295,712,o),
(135,620,o),
(44,456,o),
(44,350,qs),
(44,244,o),
(135,80,o),
(295,-12,o),
(395,-12,qs)
);
},
{
closed = 1;
nodes = (
(326,83,o),
(216,147,o),
(153,268,o),
(153,350,qs),
(153,432,o),
(216,553,o),
(326,617,o),
(395,617,qs),
(465,617,o),
(575,554,o),
(638,433,o),
(638,350,qs),
(638,268,o),
(575,147,o),
(464,83,o),
(395,83,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 39 77 5 1 3 3 1 97 4 1 1 1 40 1 78 16 16 0 0 16 31 16 30 24 22 0 15 0 14 38 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 791;
},
{
anchors = (
{
name = bottom;
pos = (392,0);
},
{
name = ogonek;
pos = (464,10);
},
{
name = top;
pos = (392,700);
},
{
name = topright;
pos = (764,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(497,-12,o),
(653,80,o),
(737,245,o),
(737,350,qs),
(737,455,o),
(653,620,o),
(496,712,o),
(392,712,qs),
(287,712,o),
(131,618,o),
(47,453,o),
(47,350,qs),
(47,247,o),
(131,82,o),
(287,-12,o),
(392,-12,qs)
);
},
{
closed = 1;
nodes = (
(312,62,o),
(195,136,o),
(133,266,o),
(133,350,qs),
(133,434,o),
(195,564,o),
(312,637,o),
(392,637,qs),
(473,637,o),
(590,566,o),
(651,436,o),
(651,350,qs),
(651,265,o),
(589,135,o),
(472,62,o),
(392,62,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 39 77 5 1 3 3 1 97 4 1 1 1 40 1 78 16 16 0 0 16 31 16 30 24 22 0 15 0 14 38 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 784;
},
{
anchors = (
{
name = bottom;
pos = (399,0);
},
{
name = ogonek;
pos = (483,10);
},
{
name = top;
pos = (399,700);
},
{
name = topright;
pos = (777,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(493,-12,o),
(658,77,o),
(756,242,o),
(756,350,qs),
(756,458,o),
(658,623,o),
(493,712,o),
(398,712,qs),
(303,712,o),
(139,623,o),
(41,458,o),
(41,350,qs),
(41,242,o),
(139,77,o),
(303,-12,o),
(398,-12,qs)
);
},
{
closed = 1;
nodes = (
(340,104,o),
(237,159,o),
(173,270,o),
(173,350,qs),
(173,430,o),
(237,542,o),
(340,597,o),
(398,597,qs),
(456,597,o),
(560,542,o),
(624,430,o),
(624,350,qs),
(624,270,o),
(560,159,o),
(456,104,o),
(398,104,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 39 77 5 1 3 3 1 97 4 1 1 1 40 1 78 16 16 0 0 16 31 16 30 24 22 0 15 0 14 38 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 797;
},
{
anchors = (
{
name = bottom;
pos = (397,0);
},
{
name = ogonek;
pos = (477,10);
},
{
name = top;
pos = (397,700);
},
{
name = topright;
pos = (773,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(495,-12,o),
(656,78,o),
(750,243,o),
(750,350,qs),
(750,457,o),
(656,622,o),
(495,712,o),
(396,712,qs),
(298,712,o),
(136,621,o),
(43,457,o),
(43,350,qs),
(43,243,o),
(136,79,o),
(298,-12,o),
(396,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,90,o),
(223,151,o),
(160,269,o),
(160,350,qs),
(160,431,o),
(223,549,o),
(331,610,o),
(396,610,qs),
(462,610,o),
(570,549,o),
(633,432,o),
(633,350,qs),
(633,269,o),
(570,151,o),
(462,90,o),
(396,90,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 39 77 5 1 3 3 1 97 4 1 1 1 40 1 78 16 16 0 0 16 31 16 30 24 22 0 15 0 14 38 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 793;
}
);
note = O;
unicode = 79;
},
{
glyphname = Oacute;
kernLeft = C;
kernRight = D;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (396,0);
},
{
name = ogonek;
pos = (474,10);
},
{
name = top;
pos = (396,942);
},
{
name = topright;
pos = (771,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (287,0);
ref = acutecomb.case;
}
);
width = 791;
},
{
anchors = (
{
name = bottom;
pos = (392,0);
},
{
name = ogonek;
pos = (464,10);
},
{
name = top;
pos = (392,931);
},
{
name = topright;
pos = (764,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (287,0);
ref = acutecomb.case;
}
);
width = 784;
},
{
anchors = (
{
name = bottom;
pos = (399,0);
},
{
name = ogonek;
pos = (483,10);
},
{
name = top;
pos = (399,952);
},
{
name = topright;
pos = (777,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (286,0);
ref = acutecomb.case;
}
);
width = 797;
},
{
anchors = (
{
name = bottom;
pos = (397,0);
},
{
name = ogonek;
pos = (477,10);
},
{
name = top;
pos = (397,945);
},
{
name = topright;
pos = (773,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (286,0);
ref = acutecomb.case;
}
);
width = 793;
}
);
note = Oacute;
unicode = 211;
},
{
glyphname = Obreve;
kernLeft = C;
kernRight = D;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (396,0);
},
{
name = ogonek;
pos = (474,10);
},
{
name = top;
pos = (396,909);
},
{
name = topright;
pos = (771,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (247,0);
ref = uni0306.case;
}
);
width = 791;
},
{
anchors = (
{
name = bottom;
pos = (392,0);
},
{
name = ogonek;
pos = (464,10);
},
{
name = top;
pos = (392,901);
},
{
name = topright;
pos = (764,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (251,0);
ref = uni0306.case;
}
);
width = 784;
},
{
anchors = (
{
name = bottom;
pos = (399,0);
},
{
name = ogonek;
pos = (483,10);
},
{
name = top;
pos = (399,917);
},
{
name = topright;
pos = (777,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (243,0);
ref = uni0306.case;
}
);
width = 797;
},
{
anchors = (
{
name = bottom;
pos = (397,0);
},
{
name = ogonek;
pos = (477,10);
},
{
name = top;
pos = (397,912);
},
{
name = topright;
pos = (773,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (246,0);
ref = uni0306.case;
}
);
width = 793;
}
);
note = Obreve;
unicode = 334;
},
{
glyphname = Ocircumflex;
kernLeft = C;
kernRight = D;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (396,0);
},
{
name = ogonek;
pos = (474,10);
},
{
name = top;
pos = (396,911);
},
{
name = topright;
pos = (771,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (254,0);
ref = uni0302.case;
}
);
width = 791;
},
{
anchors = (
{
name = bottom;
pos = (392,0);
},
{
name = ogonek;
pos = (464,10);
},
{
name = top;
pos = (392,902);
},
{
name = topright;
pos = (764,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (255,0);
ref = uni0302.case;
}
);
width = 784;
},
{
anchors = (
{
name = bottom;
pos = (399,0);
},
{
name = ogonek;
pos = (483,10);
},
{
name = top;
pos = (399,919);
},
{
name = topright;
pos = (777,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (253,0);
ref = uni0302.case;
}
);
width = 797;
},
{
anchors = (
{
name = bottom;
pos = (397,0);
},
{
name = ogonek;
pos = (477,10);
},
{
name = top;
pos = (397,913);
},
{
name = topright;
pos = (773,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (254,0);
ref = uni0302.case;
}
);
width = 793;
}
);
note = Ocircumflex;
unicode = 212;
},
{
glyphname = Odieresis;
kernLeft = C;
kernRight = D;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (396,0);
},
{
name = ogonek;
pos = (474,10);
},
{
name = top;
pos = (396,912);
},
{
name = topright;
pos = (771,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (225,0);
ref = uni0308.case;
}
);
width = 791;
},
{
anchors = (
{
name = bottom;
pos = (392,0);
},
{
name = ogonek;
pos = (464,10);
},
{
name = top;
pos = (392,889);
},
{
name = topright;
pos = (764,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (245,0);
ref = uni0308.case;
}
);
width = 784;
},
{
anchors = (
{
name = bottom;
pos = (399,0);
},
{
name = ogonek;
pos = (483,10);
},
{
name = top;
pos = (399,934);
},
{
name = topright;
pos = (777,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (205,0);
ref = uni0308.case;
}
);
width = 797;
},
{
anchors = (
{
name = bottom;
pos = (397,0);
},
{
name = ogonek;
pos = (477,10);
},
{
name = top;
pos = (397,919);
},
{
name = topright;
pos = (773,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (218,0);
ref = uni0308.case;
}
);
width = 793;
}
);
note = Odieresis;
unicode = 214;
},
{
glyphname = Ograve;
kernLeft = C;
kernRight = D;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (396,0);
},
{
name = ogonek;
pos = (474,10);
},
{
name = top;
pos = (396,942);
},
{
name = topright;
pos = (771,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (287,0);
ref = gravecomb.case;
}
);
width = 791;
},
{
anchors = (
{
name = bottom;
pos = (392,0);
},
{
name = ogonek;
pos = (464,10);
},
{
name = top;
pos = (392,931);
},
{
name = topright;
pos = (764,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (287,0);
ref = gravecomb.case;
}
);
width = 784;
},
{
anchors = (
{
name = bottom;
pos = (399,0);
},
{
name = ogonek;
pos = (483,10);
},
{
name = top;
pos = (399,952);
},
{
name = topright;
pos = (777,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (286,0);
ref = gravecomb.case;
}
);
width = 797;
},
{
anchors = (
{
name = bottom;
pos = (397,0);
},
{
name = ogonek;
pos = (477,10);
},
{
name = top;
pos = (397,945);
},
{
name = topright;
pos = (773,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (286,0);
ref = gravecomb.case;
}
);
width = 793;
}
);
note = Ograve;
unicode = 210;
},
{
glyphname = Ohungarumlaut;
kernLeft = C;
kernRight = D;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (396,0);
},
{
name = ogonek;
pos = (474,10);
},
{
name = top;
pos = (396,915);
},
{
name = topright;
pos = (771,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (234,0);
ref = uni030B.case;
}
);
width = 791;
},
{
anchors = (
{
name = bottom;
pos = (392,0);
},
{
name = ogonek;
pos = (464,10);
},
{
name = top;
pos = (392,902);
},
{
name = topright;
pos = (764,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (246,0);
ref = uni030B.case;
}
);
width = 784;
},
{
anchors = (
{
name = bottom;
pos = (399,0);
},
{
name = ogonek;
pos = (483,10);
},
{
name = top;
pos = (399,927);
},
{
name = topright;
pos = (777,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (221,0);
ref = uni030B.case;
}
);
width = 797;
},
{
anchors = (
{
name = bottom;
pos = (397,0);
},
{
name = ogonek;
pos = (477,10);
},
{
name = top;
pos = (397,919);
},
{
name = topright;
pos = (773,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (229,0);
ref = uni030B.case;
}
);
width = 793;
}
);
note = Ohungarumlaut;
unicode = 336;
},
{
glyphname = Omacron;
kernLeft = C;
kernRight = D;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (396,0);
},
{
name = ogonek;
pos = (474,10);
},
{
name = top;
pos = (396,867);
},
{
name = topright;
pos = (771,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (220,0);
ref = uni0304.case;
}
);
width = 791;
},
{
anchors = (
{
name = bottom;
pos = (392,0);
},
{
name = ogonek;
pos = (464,10);
},
{
name = top;
pos = (392,859);
},
{
name = topright;
pos = (764,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (218,0);
ref = uni0304.case;
}
);
width = 784;
},
{
anchors = (
{
name = bottom;
pos = (399,0);
},
{
name = ogonek;
pos = (483,10);
},
{
name = top;
pos = (399,874);
},
{
name = topright;
pos = (777,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (222,0);
ref = uni0304.case;
}
);
width = 797;
},
{
anchors = (
{
name = bottom;
pos = (397,0);
},
{
name = ogonek;
pos = (477,10);
},
{
name = top;
pos = (397,869);
},
{
name = topright;
pos = (773,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (221,0);
ref = uni0304.case;
}
);
width = 793;
}
);
note = Omacron;
unicode = 332;
},
{
glyphname = Oslash;
kernLeft = Oslash;
kernRight = Oslash;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(497,-12,o),
(654,81,o),
(739,245,o),
(739,350,qs),
(739,499,o),
(657,596,q),
(749,700,l),
(643,700,l),
(599,650,l),
(512,712,o),
(392,712,qs),
(287,712,o),
(129,619,o),
(44,454,o),
(44,350,qs),
(44,277,o),
(86,153,o),
(125,106,q),
(33,0,l),
(139,0,l),
(184,51,l),
(272,-12,o),
(392,-12,qs)
);
},
{
closed = 1;
nodes = (
(308,83,o),
(249,127,q),
(588,516,l),
(631,448,o),
(631,350,qs),
(631,270,o),
(573,149,o),
(465,83,o),
(392,83,qs)
);
},
{
closed = 1;
nodes = (
(194,186,l),
(152,254,o),
(152,350,qs),
(152,430,o),
(210,551,o),
(319,617,o),
(392,617,qs),
(475,617,o),
(533,574,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
13 1 5 1 40 39 29 28 16 4 6 4 5 1 1 0 4 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
13 1 5 2 40 39 29 28 16 4 6 4 5 1 1 0 4 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 1 97 2 1 1 1 39 77 7 1 4 4 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 33 77 0 5 5 1 97 0 1 1 39 77 0 0 0 34 77 7 1 4 4 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
23 23 0 0 34 32 23 31 23 30 0 22 0 21 18 39 18 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 781;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(497,-12,o),
(653,80,o),
(737,245,o),
(737,350,qs),
(737,423,o),
(695,548,o),
(655,596,q),
(747,700,l),
(658,700,l),
(607,643,l),
(564,676,o),
(455,712,o),
(392,712,qs),
(287,712,o),
(131,618,o),
(47,453,o),
(47,350,qs),
(47,276,o),
(90,150,o),
(130,102,q),
(39,0,l),
(129,0,l),
(179,56,l),
(266,-12,o),
(392,-12,qs)
);
},
{
closed = 1;
nodes = (
(296,62,o),
(231,115,q),
(601,534,l),
(651,461,o),
(651,350,qs),
(651,265,o),
(589,135,o),
(472,62,o),
(392,62,qs)
);
},
{
closed = 1;
nodes = (
(184,164,l),
(133,241,o),
(133,350,qs),
(133,434,o),
(195,564,o),
(312,637,o),
(392,637,qs),
(488,637,o),
(555,584,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
14 1 5 1 42 41 31 30 17 4 6 4 5 1 1 0 4 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
14 1 5 2 42 41 31 30 17 4 6 4 5 1 1 0 4 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 1 97 2 1 1 1 39 77 7 1 4 4 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 33 77 0 5 5 1 97 0 1 1 39 77 0 0 0 34 77 7 1 4 4 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
25 25 0 0 36 34 25 33 25 32 0 24 0 23 19 39 18 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 786;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(496,-12,o),
(655,81,o),
(741,245,o),
(741,350,qs),
(741,498,o),
(659,595,q),
(750,700,l),
(628,700,l),
(590,656,l),
(504,712,o),
(391,712,qs),
(286,712,o),
(127,619,o),
(41,455,o),
(41,350,qs),
(41,278,o),
(82,155,o),
(120,109,q),
(27,0,l),
(149,0,l),
(189,46,l),
(275,-12,o),
(391,-12,qs)
);
},
{
closed = 1;
nodes = (
(320,103,o),
(267,138,q),
(575,497,l),
(611,436,o),
(611,350,qs),
(611,274,o),
(557,163,o),
(457,103,o),
(391,103,qs)
);
},
{
closed = 1;
nodes = (
(204,207,l),
(171,267,o),
(171,350,qs),
(171,426,o),
(225,537,o),
(325,597,o),
(391,597,qs),
(460,597,o),
(511,564,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
13 1 5 1 40 39 29 28 16 4 6 4 5 1 1 0 4 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
13 1 5 2 40 39 29 28 16 4 6 4 5 1 1 0 4 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 1 97 2 1 1 1 39 77 7 1 4 4 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 33 77 0 5 5 1 97 0 1 1 39 77 0 0 0 34 77 7 1 4 4 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
23 23 0 0 34 32 23 31 23 30 0 22 0 21 18 39 18 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 776;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(496,-12,o),
(654,81,o),
(740,245,o),
(740,350,qs),
(740,496,o),
(658,595,q),
(749,700,l),
(638,700,l),
(596,652,l),
(508,712,o),
(391,712,qs),
(286,712,o),
(128,619,o),
(43,454,o),
(43,350,qs),
(43,278,o),
(84,153,o),
(123,107,q),
(31,0,l),
(142,0,l),
(186,49,l),
(272,-12,o),
(391,-12,qs)
);
},
{
closed = 1;
nodes = (
(313,89,o),
(255,130,q),
(584,509,l),
(624,443,o),
(624,350,qs),
(624,271,o),
(567,153,o),
(462,89,o),
(391,89,qs)
);
},
{
closed = 1;
nodes = (
(197,193,l),
(158,259,o),
(158,350,qs),
(158,428,o),
(215,546,o),
(320,610,o),
(391,610,qs),
(469,610,o),
(526,571,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
13 1 5 1 40 39 29 28 16 4 6 4 5 1 1 0 4 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
13 1 5 2 40 39 29 28 16 4 6 4 5 1 1 0 4 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 1 97 2 1 1 1 39 77 7 1 4 4 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 33 77 0 5 5 1 97 0 1 1 39 77 0 0 0 34 77 7 1 4 4 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
23 23 0 0 34 32 23 31 23 30 0 22 0 21 18 39 18 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 779;
}
);
note = Oslash;
unicode = 216;
},
{
glyphname = Otilde;
kernLeft = C;
kernRight = D;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (396,0);
},
{
name = ogonek;
pos = (474,10);
},
{
name = top;
pos = (396,868);
},
{
name = topright;
pos = (771,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (232,0);
ref = tildecomb.case;
}
);
width = 791;
},
{
anchors = (
{
name = bottom;
pos = (392,0);
},
{
name = ogonek;
pos = (464,10);
},
{
name = top;
pos = (392,859);
},
{
name = topright;
pos = (764,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (241,0);
ref = tildecomb.case;
}
);
width = 784;
},
{
anchors = (
{
name = bottom;
pos = (399,0);
},
{
name = ogonek;
pos = (483,10);
},
{
name = top;
pos = (399,877);
},
{
name = topright;
pos = (777,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (223,0);
ref = tildecomb.case;
}
);
width = 797;
},
{
anchors = (
{
name = bottom;
pos = (397,0);
},
{
name = ogonek;
pos = (477,10);
},
{
name = top;
pos = (397,871);
},
{
name = topright;
pos = (773,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = O;
},
{
alignment = -1;
pos = (229,0);
ref = tildecomb.case;
}
);
width = 793;
}
);
note = Otilde;
unicode = 213;
},
{
glyphname = OE;
kernLeft = C;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(465,-12,o),
(598,52,o),
(639,110,q),
(639,0,l),
(1054,0,l),
(1054,89,l),
(745,89,l),
(745,326,l),
(1011,326,l),
(1011,414,l),
(745,414,l),
(745,611,l),
(1054,611,l),
(1054,700,l),
(639,700,l),
(639,588,l),
(598,648,o),
(465,712,o),
(389,712,qs),
(290,712,o),
(133,618,o),
(44,453,o),
(44,350,qs),
(44,248,o),
(132,83,o),
(289,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,83,o),
(220,145,o),
(153,266,o),
(153,350,qs),
(153,421,o),
(209,543,o),
(319,617,o),
(395,617,qs),
(463,617,o),
(573,553,o),
(638,432,o),
(638,350,qs),
(638,279,o),
(582,157,o),
(472,83,o),
(395,83,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 3 2 23 1 5 4 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 1 1 0 0 39 77 11 9 2 5 5 6 97 10 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 0 0 0 39 77 8 1 2 2 1 95 0 1 1 33 77 11 9 2 5 5 6 95 0 6 6 34 77 11 9 2 5 5 7 97 10 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 3 0 4 5 3 4 103 0 8 8 0 97 0 0 0 39 77 0 2 2 1 95 0 1 1 33 77 0 5 5 6 95 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
27 27 0 0 27 42 27 41 35 33 0 26 0 25 17 17 17 17 17 19 38 12 8 29
CALL[ ]	/* CallFunction */";
};
width = 1107;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(475,-12,o),
(614,58,o),
(659,124,q),
(659,0,l),
(1061,0,l),
(1061,69,l),
(743,69,l),
(743,336,l),
(1021,336,l),
(1021,404,l),
(743,404,l),
(743,631,l),
(1061,631,l),
(1061,700,l),
(659,700,l),
(659,575,l),
(614,641,o),
(475,712,o),
(393,712,qs),
(294,712,o),
(136,618,o),
(47,453,o),
(47,350,qs),
(47,249,o),
(135,83,o),
(293,-12,o),
(393,-12,qs)
);
},
{
closed = 1;
nodes = (
(328,62,o),
(208,127,o),
(133,258,o),
(133,350,qs),
(133,427,o),
(195,559,o),
(314,637,o),
(395,637,qs),
(468,637,o),
(587,569,o),
(657,439,o),
(657,350,qs),
(657,275,o),
(598,143,o),
(479,62,o),
(395,62,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 3 2 23 1 5 4 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 1 1 0 0 39 77 11 9 2 5 5 6 97 10 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 0 0 0 39 77 8 1 2 2 1 95 0 1 1 33 77 11 9 2 5 5 6 95 0 6 6 34 77 11 9 2 5 5 7 97 10 1 7 7 40 7 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 0 0 0 39 77 8 1 2 2 1 95 0 1 1 33 77 0 5 5 6 95 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 3 0 4 5 3 4 103 0 8 8 0 97 0 0 0 39 77 0 2 2 1 95 0 1 1 33 77 0 5 5 6 95 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
27 27 0 0 27 42 27 41 35 33 0 26 0 25 17 17 17 17 17 19 38 12 8 29
CALL[ ]	/* CallFunction */";
};
width = 1118;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(455,-12,o),
(581,45,o),
(619,96,q),
(619,0,l),
(1046,0,l),
(1046,109,l),
(747,109,l),
(747,315,l),
(1000,315,l),
(1000,424,l),
(747,424,l),
(747,591,l),
(1046,591,l),
(1046,700,l),
(619,700,l),
(619,601,l),
(581,654,o),
(455,712,o),
(385,712,qs),
(286,712,o),
(130,618,o),
(41,453,o),
(41,350,qs),
(41,248,o),
(129,83,o),
(286,-12,o),
(385,-12,qs)
);
},
{
closed = 1;
nodes = (
(334,103,o),
(232,162,o),
(172,274,o),
(172,350,qs),
(172,414,o),
(222,527,o),
(323,597,o),
(395,597,qs),
(457,597,o),
(559,536,o),
(619,424,o),
(619,350,qs),
(619,283,o),
(566,170,o),
(464,103,o),
(395,103,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
10 1 2 0 23 1 6 5 2 76
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
10 1 2 1 23 1 6 5 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
10 1 8 1 23 1 6 9 2 76
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 1 1 0 0 39 77 11 9 2 5 5 6 97 10 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 0 0 0 39 77 8 1 2 2 1 95 0 1 1 33 77 11 9 2 5 5 6 95 0 6 6 34 77 11 9 2 5 5 7 97 10 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 3 0 4 5 3 4 103 0 8 8 0 97 0 0 0 39 77 0 2 2 1 95 0 1 1 33 77 0 5 5 6 95 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
27 27 0 0 27 42 27 41 35 33 0 26 0 25 17 17 17 17 17 19 38 12 8 29
CALL[ ]	/* CallFunction */";
};
width = 1095;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(462,-12,o),
(592,49,o),
(632,105,q),
(632,0,l),
(1051,0,l),
(1051,96,l),
(746,96,l),
(746,322,l),
(1007,322,l),
(1007,417,l),
(746,417,l),
(746,604,l),
(1051,604,l),
(1051,700,l),
(632,700,l),
(632,592,l),
(592,649,o),
(462,712,o),
(388,712,qs),
(289,712,o),
(132,618,o),
(43,453,o),
(43,350,qs),
(43,248,o),
(131,83,o),
(288,-12,o),
(388,-12,qs)
);
},
{
closed = 1;
nodes = (
(332,89,o),
(224,150,o),
(159,269,o),
(159,350,qs),
(159,419,o),
(213,538,o),
(320,610,o),
(395,610,qs),
(461,610,o),
(569,547,o),
(632,429,o),
(632,350,qs),
(632,281,o),
(576,161,o),
(469,89,o),
(395,89,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 3 2 23 1 5 4 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 1 1 0 0 39 77 11 9 2 5 5 6 97 10 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 0 0 0 39 77 8 1 2 2 1 95 0 1 1 33 77 11 9 2 5 5 6 95 0 6 6 34 77 11 9 2 5 5 7 97 10 1 7 7 40 7 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 3 0 4 5 3 4 103 8 1 2 2 0 97 0 0 0 39 77 8 1 2 2 1 95 0 1 1 33 77 0 5 5 6 95 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 3 0 4 5 3 4 103 0 8 8 0 97 0 0 0 39 77 0 2 2 1 95 0 1 1 33 77 0 5 5 6 95 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
27 27 0 0 27 42 27 41 35 33 0 26 0 25 17 17 17 17 17 19 38 12 8 29
CALL[ ]	/* CallFunction */";
};
width = 1103;
}
);
note = OE;
unicode = 338;
},
{
glyphname = P;
kernRight = P;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,0,l),
(175,292,l),
(314,292,ls),
(424,292,o),
(557,397,o),
(557,496,qs),
(557,594,o),
(426,700,o),
(314,700,qs),
(69,700,l),
(69,0,l)
);
},
{
closed = 1;
nodes = (
(175,382,l),
(175,611,l),
(312,611,ls),
(384,611,o),
(449,552,o),
(449,496,qs),
(449,440,o),
(384,382,o),
(312,382,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 4 0 1 2 4 1 103 0 3 3 0 95 0 0 0 33 77 0 2 2 34 2 78 11 11 11 19 11 18 37 17 36 32 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 589;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(158,0,l),
(158,304,l),
(305,304,ls),
(414,304,o),
(543,403,o),
(543,502,qs),
(543,599,o),
(417,700,o),
(305,700,qs),
(74,700,l),
(74,0,l)
);
},
{
closed = 1;
nodes = (
(158,375,l),
(158,630,l),
(303,630,ls),
(385,630,o),
(457,567,o),
(457,502,qs),
(457,438,o),
(385,375,o),
(303,375,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 4 0 1 2 4 1 103 0 3 3 0 95 0 0 0 33 77 0 2 2 34 2 78 11 11 11 19 11 18 37 17 36 32 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 579;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(192,0,l),
(192,279,l),
(323,279,ls),
(434,279,o),
(571,391,o),
(571,490,qs),
(571,589,o),
(434,700,o),
(323,700,qs),
(64,700,l),
(64,0,l)
);
},
{
closed = 1;
nodes = (
(192,388,l),
(192,591,l),
(320,591,ls),
(441,591,o),
(441,490,qs),
(441,388,o),
(320,388,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 4 0 1 2 4 1 103 0 3 3 0 95 0 0 0 33 77 0 2 2 34 2 78 11 11 11 17 11 16 35 17 36 32 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(181,0,l),
(181,287,l),
(317,287,ls),
(428,287,o),
(562,395,o),
(562,494,qs),
(562,592,o),
(429,700,o),
(317,700,qs),
(67,700,l),
(67,0,l)
);
},
{
closed = 1;
nodes = (
(181,384,l),
(181,604,l),
(314,604,ls),
(384,604,o),
(446,547,o),
(446,494,qs),
(446,440,o),
(384,384,o),
(314,384,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 4 0 1 2 4 1 103 0 3 3 0 95 0 0 0 33 77 0 2 2 34 2 78 11 11 11 19 11 18 37 17 36 32 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = P;
unicode = 80;
},
{
glyphname = Thorn;
kernRight = Thorn;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,0,l),
(175,142,l),
(314,142,ls),
(399,142,o),
(452,170,qs),
(505,198,o),
(557,291,o),
(557,350,qs),
(557,412,o),
(531,458,qs),
(504,507,o),
(395,560,o),
(314,560,qs),
(175,560,l),
(175,700,l),
(69,700,l),
(69,0,l)
);
},
{
closed = 1;
nodes = (
(175,228,l),
(175,472,l),
(309,472,ls),
(382,472,o),
(449,410,o),
(449,350,qs),
(449,228,o),
(309,228,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 0 4 5 1 4 103 6 1 5 0 2 3 5 2 103 0 0 0 33 77 0 3 3 34 3 78 17 17 17 24 17 23 36 17 40 33 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 589;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(158,0,l),
(158,147,l),
(304,147,ls),
(388,147,o),
(440,174,qs),
(492,200,o),
(543,291,o),
(543,350,qs),
(543,409,o),
(518,455,qs),
(492,503,o),
(384,554,o),
(304,554,qs),
(158,554,l),
(158,700,l),
(74,700,l),
(74,0,l)
);
},
{
closed = 1;
nodes = (
(158,217,l),
(158,484,l),
(302,484,ls),
(383,484,o),
(457,416,o),
(457,350,qs),
(457,217,o),
(302,217,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 0 4 5 1 4 103 6 1 5 0 2 3 5 2 103 0 0 0 33 77 0 3 3 34 3 78 17 17 17 24 17 23 36 17 40 33 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 579;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(192,0,l),
(192,136,l),
(323,136,ls),
(409,136,o),
(464,166,qs),
(517,194,o),
(571,290,o),
(571,349,qs),
(571,411,o),
(544,460,qs),
(516,510,o),
(405,565,o),
(323,565,qs),
(192,565,l),
(192,700,l),
(64,700,l),
(64,0,l)
);
},
{
closed = 1;
nodes = (
(192,239,l),
(192,460,l),
(315,460,ls),
(441,460,o),
(441,349,qs),
(441,297,o),
(380,239,o),
(315,239,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 0 4 5 1 4 103 6 1 5 0 2 3 5 2 103 0 0 0 33 77 0 3 3 34 3 78 17 17 17 24 17 23 36 17 40 33 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(181,0,l),
(181,140,l),
(317,140,ls),
(404,140,o),
(456,169,qs),
(509,197,o),
(562,290,o),
(562,349,qs),
(562,410,o),
(535,458,qs),
(508,507,o),
(398,561,o),
(317,561,qs),
(181,561,l),
(181,700,l),
(67,700,l),
(67,0,l)
);
},
{
closed = 1;
nodes = (
(181,232,l),
(181,468,l),
(311,468,ls),
(446,468,o),
(446,349,qs),
(446,293,o),
(380,232,o),
(311,232,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 0 4 5 1 4 103 6 1 5 0 2 3 5 2 103 0 0 0 33 77 0 3 3 34 3 78 17 17 17 24 17 23 36 17 40 33 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = Thorn;
unicode = 222;
},
{
glyphname = Q;
kernLeft = C;
kernRight = Q;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(680,-11,l),
(747,59,l),
(677,125,l),
(747,217,o),
(747,350,qs),
(747,457,o),
(655,622,o),
(495,712,o),
(395,712,qs),
(295,712,o),
(135,620,o),
(44,456,o),
(44,350,qs),
(44,244,o),
(135,80,o),
(295,-12,o),
(395,-12,qs),
(456,-12,o),
(566,23,o),
(610,56,q)
);
},
{
closed = 1;
nodes = (
(153,432,o),
(216,553,o),
(326,617,o),
(395,617,qs),
(465,617,o),
(575,554,o),
(638,433,o),
(638,350,qs),
(638,258,o),
(603,197,q),
(499,299,l),
(431,229,l),
(540,125,l),
(482,83,o),
(395,83,qs),
(326,83,o),
(216,147,o),
(153,268,o),
(153,350,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
28 27 26 25 16 5 2 3 19 18 17 3 0 2 2 76 0 3 3 1 97 0 1 1 39 77 0 2 2 0 97 0 0 0 40 0 78 41 43 38 33 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 796;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(677,-11,l),
(727,41,l),
(658,106,l),
(697,154,o),
(737,278,o),
(737,350,qs),
(737,455,o),
(653,620,o),
(496,712,o),
(392,712,qs),
(287,712,o),
(131,618,o),
(47,453,o),
(47,350,qs),
(47,247,o),
(131,82,o),
(287,-12,o),
(392,-12,qs),
(518,-12,o),
(607,56,q)
);
},
{
closed = 1;
nodes = (
(133,434,o),
(195,564,o),
(312,637,o),
(392,637,qs),
(473,637,o),
(590,566,o),
(651,436,o),
(651,350,qs),
(651,236,o),
(601,162,q),
(494,267,l),
(443,215,l),
(552,110,l),
(489,62,o),
(392,62,qs),
(312,62,o),
(195,136,o),
(133,266,o),
(133,350,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
28 27 26 25 16 5 2 3 19 18 17 3 0 2 2 76 0 3 3 1 97 0 1 1 39 77 0 2 2 0 97 0 0 0 40 0 78 41 44 38 32 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 789;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(683,-12,l),
(767,76,l),
(696,143,l),
(756,231,o),
(756,350,qs),
(756,458,o),
(658,623,o),
(493,712,o),
(398,712,qs),
(303,712,o),
(139,623,o),
(41,458,o),
(41,350,qs),
(41,242,o),
(139,77,o),
(303,-12,o),
(398,-12,qs),
(457,-12,o),
(567,23,o),
(613,56,q)
);
},
{
closed = 1;
nodes = (
(173,430,o),
(237,542,o),
(340,597,o),
(398,597,qs),
(456,597,o),
(560,542,o),
(624,430,o),
(624,350,qs),
(624,278,o),
(604,232,q),
(503,331,l),
(419,243,l),
(527,139,l),
(475,104,o),
(398,104,qs),
(340,104,o),
(237,159,o),
(173,270,o),
(173,350,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
28 27 26 25 16 5 2 3 19 17 2 0 2 2 76 18 1 0 73 0 3 3 1 97 0 1 1 39 77 0 2 2 0 97 0 0 0 40 0 78 41 43 38 33 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 802;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(681,-12,l),
(754,64,l),
(683,131,l),
(750,221,o),
(750,350,qs),
(750,457,o),
(656,622,o),
(495,712,o),
(396,712,qs),
(298,712,o),
(136,621,o),
(43,457,o),
(43,350,qs),
(43,243,o),
(136,79,o),
(298,-12,o),
(396,-12,qs),
(457,-12,o),
(567,23,o),
(611,56,q)
);
},
{
closed = 1;
nodes = (
(160,431,o),
(223,549,o),
(331,610,o),
(396,610,qs),
(462,610,o),
(570,549,o),
(633,432,o),
(633,350,qs),
(633,263,o),
(603,209,q),
(500,310,l),
(427,234,l),
(535,129,l),
(478,90,o),
(396,90,qs),
(331,90,o),
(223,151,o),
(160,269,o),
(160,350,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
28 27 26 25 16 5 2 3 19 17 2 0 2 2 76 18 1 0 73 0 3 3 1 97 0 1 1 39 77 0 2 2 0 97 0 0 0 40 0 78 41 43 38 33 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 798;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
kernRight = R;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (307,0);
},
{
name = top;
pos = (294,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,0,l),
(175,303,l),
(272,303,l),
(448,0,l),
(576,0,l),
(378,321,l),
(531,354,o),
(531,502,qs),
(531,598,o),
(405,700,o),
(294,700,qs),
(69,700,l),
(69,0,l)
);
},
{
closed = 1;
nodes = (
(175,393,l),
(175,611,l),
(292,611,ls),
(364,611,o),
(423,556,o),
(423,502,qs),
(423,447,o),
(364,393,o),
(292,393,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
6 1 2 5 1 76 6 1 5 0 2 1 5 2 103 0 4 4 0 95 0 0 0 33 77 3 1 1 1 34 1 78 13 13 13 21 13 20 37 17 17 21 32 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 604;
},
{
anchors = (
{
name = bottom;
pos = (302,0);
},
{
name = top;
pos = (283,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(158,0,l),
(158,310,l),
(274,310,l),
(454,0,l),
(558,0,l),
(357,326,l),
(515,354,o),
(515,505,qs),
(515,602,o),
(393,700,o),
(281,700,qs),
(74,700,l),
(74,0,l)
);
},
{
closed = 1;
nodes = (
(158,381,l),
(158,630,l),
(279,630,ls),
(361,630,o),
(429,570,o),
(429,505,qs),
(429,441,o),
(361,381,o),
(279,381,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
6 1 2 5 1 76 6 1 5 0 2 1 5 2 103 0 4 4 0 95 0 0 0 33 77 3 1 1 1 34 1 78 13 13 13 21 13 20 37 17 17 21 32 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (311,0);
},
{
name = top;
pos = (305,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(192,0,l),
(192,295,l),
(270,295,l),
(442,0,l),
(593,0,l),
(398,316,l),
(469,333,o),
(547,425,o),
(547,498,qs),
(547,594,o),
(417,700,o),
(307,700,qs),
(64,700,l),
(64,0,l)
);
},
{
closed = 1;
nodes = (
(192,404,l),
(192,591,l),
(304,591,ls),
(366,591,o),
(417,542,o),
(417,498,qs),
(417,453,o),
(367,404,o),
(304,404,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
7 1 2 5 1 76 6 1 5 0 2 1 5 2 103 0 4 4 0 95 0 0 0 33 77 3 1 1 1 34 1 78 14 14 14 22 14 21 37 17 17 22 32 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 615;
},
{
anchors = (
{
name = bottom;
pos = (308,0);
},
{
name = top;
pos = (298,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(181,0,l),
(181,300,l),
(271,300,l),
(446,0,l),
(581,0,l),
(384,319,l),
(457,335,o),
(536,425,o),
(536,500,qs),
(536,596,o),
(409,700,o),
(298,700,qs),
(67,700,l),
(67,0,l)
);
},
{
closed = 1;
nodes = (
(181,396,l),
(181,604,l),
(296,604,ls),
(365,604,o),
(421,551,o),
(421,500,qs),
(421,449,o),
(364,396,o),
(296,396,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
7 1 2 5 1 76 6 1 5 0 2 1 5 2 103 0 4 4 0 95 0 0 0 33 77 3 1 1 1 34 1 78 14 14 14 22 14 21 37 17 17 22 32 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 608;
}
);
note = R;
unicode = 82;
},
{
glyphname = Racute;
kernRight = R;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (307,0);
},
{
name = top;
pos = (294,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (185,0);
ref = acutecomb.case;
}
);
width = 604;
},
{
anchors = (
{
name = bottom;
pos = (302,0);
},
{
name = top;
pos = (283,931);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (178,0);
ref = acutecomb.case;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (311,0);
},
{
name = top;
pos = (305,952);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (192,0);
ref = acutecomb.case;
}
);
width = 615;
},
{
anchors = (
{
name = bottom;
pos = (308,0);
},
{
name = top;
pos = (298,945);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (187,0);
ref = acutecomb.case;
}
);
width = 608;
}
);
note = Racute;
unicode = 340;
},
{
glyphname = Rcaron;
kernRight = R;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (307,0);
},
{
name = top;
pos = (294,910);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (153,0);
ref = uni030C.case;
}
);
width = 604;
},
{
anchors = (
{
name = bottom;
pos = (302,0);
},
{
name = top;
pos = (283,901);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (146,0);
ref = uni030C.case;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (311,0);
},
{
name = top;
pos = (305,918);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (159,0);
ref = uni030C.case;
}
);
width = 615;
},
{
anchors = (
{
name = bottom;
pos = (308,0);
},
{
name = top;
pos = (298,912);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (155,0);
ref = uni030C.case;
}
);
width = 608;
}
);
note = Rcaron;
unicode = 344;
},
{
glyphname = uni0156;
kernRight = R;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (307,-256);
},
{
name = top;
pos = (294,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (251,0);
ref = uni0326;
}
);
width = 604;
},
{
anchors = (
{
name = bottom;
pos = (302,-238);
},
{
name = top;
pos = (283,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (253,0);
ref = uni0326;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (311,-274);
},
{
name = top;
pos = (305,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (249,0);
ref = uni0326;
}
);
width = 615;
},
{
anchors = (
{
name = bottom;
pos = (308,-262);
},
{
name = top;
pos = (298,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (250,0);
ref = uni0326;
}
);
width = 608;
}
);
note = uni0156;
unicode = 342;
},
{
glyphname = S;
kernLeft = S;
kernRight = S;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (292,0);
},
{
name = top;
pos = (292,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(368,-12,o),
(477,36,o),
(541,127,o),
(541,189,qs),
(541,250,o),
(487,331,o),
(404,377,o),
(344,397,qs),
(276,420,o),
(209,450,o),
(173,492,o),
(173,525,qs),
(173,571,o),
(235,622,o),
(283,622,qs),
(339,622,o),
(408,561,o),
(408,514,q),
(521,514,l),
(520,576,o),
(458,666,o),
(354,712,o),
(290,712,qs),
(226,712,o),
(122,667,o),
(62,579,o),
(62,518,qs),
(62,449,o),
(146,356,o),
(237,326,qs),
(323,297,o),
(395,266,o),
(430,221,o),
(430,182,qs),
(430,133,o),
(358,78,o),
(300,78,qs),
(234,78,o),
(155,151,o),
(153,211,q),
(42,211,l),
(42,141,o),
(110,40,o),
(227,-12,o),
(300,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 39 77 0 1 1 5 97 6 1 5 5 40 5 78 0 0 0 44 0 43 34 19 44 34 19 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 584;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = top;
pos = (289,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(362,-12,o),
(470,34,o),
(533,122,o),
(533,183,qs),
(533,243,o),
(486,320,o),
(400,369,o),
(329,393,qs),
(252,419,o),
(185,449,o),
(155,491,o),
(155,528,qs),
(155,582,o),
(229,642,o),
(285,640,qs),
(345,640,o),
(422,571,o),
(422,518,q),
(510,518,l),
(508,609,o),
(384,712,o),
(288,712,qs),
(226,712,o),
(124,667,o),
(67,580,o),
(68,520,qs),
(68,452,o),
(147,370,o),
(227,342,qs),
(278,325,ls),
(347,302,o),
(411,272,o),
(446,222,o),
(446,178,qs),
(446,122,o),
(363,59,o),
(297,59,qs),
(223,59,o),
(132,141,o),
(132,210,q),
(44,210,l),
(44,141,o),
(110,40,o),
(225,-12,o),
(297,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 39 77 0 1 1 5 97 6 1 5 5 40 5 78 0 0 0 44 0 43 34 18 45 34 19 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
anchors = (
{
name = bottom;
pos = (295,0);
},
{
name = top;
pos = (295,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(373,-12,o),
(485,38,o),
(549,131,o),
(549,194,qs),
(549,257,o),
(488,341,o),
(409,384,o),
(359,401,qs),
(298,422,o),
(232,451,o),
(190,492,o),
(190,521,qs),
(190,560,o),
(244,604,o),
(286,604,qs),
(334,604,o),
(393,549,o),
(394,510,q),
(531,510,l),
(530,574,o),
(465,665,o),
(357,712,o),
(291,712,qs),
(224,712,o),
(118,666,o),
(56,576,o),
(56,512,qs),
(56,443,o),
(145,343,o),
(246,310,qs),
(317,287,o),
(387,253,o),
(413,215,o),
(413,185,qs),
(413,144,o),
(353,96,o),
(302,96,qs),
(244,96,o),
(176,161,o),
(174,211,q),
(39,211,l),
(40,139,o),
(110,39,o),
(229,-12,o),
(303,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 39 77 0 1 1 5 97 6 1 5 5 40 5 78 0 0 0 44 0 43 34 19 44 34 19 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 589;
},
{
anchors = (
{
name = bottom;
pos = (293,0);
},
{
name = top;
pos = (293,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(369,-12,o),
(480,37,o),
(544,128,o),
(544,190,qs),
(544,252,o),
(488,334,o),
(406,379,o),
(349,398,qs),
(284,420,o),
(216,450,o),
(178,492,o),
(178,523,qs),
(178,567,o),
(238,616,o),
(283,616,qs),
(337,616,o),
(403,557,o),
(403,513,q),
(524,513,l),
(523,575,o),
(460,665,o),
(355,712,o),
(290,712,qs),
(225,712,o),
(121,667,o),
(60,579,o),
(60,517,qs),
(60,447,o),
(146,351,o),
(240,321,qs),
(319,295,o),
(392,262,o),
(424,219,o),
(424,183,qs),
(424,137,o),
(356,84,o),
(300,84,qs),
(237,84,o),
(162,154,o),
(160,211,q),
(41,211,l),
(42,140,o),
(110,39,o),
(227,-12,o),
(301,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 39 77 0 1 1 5 97 6 1 5 5 40 5 78 0 0 0 44 0 43 34 19 44 34 19 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 585;
}
);
note = S;
unicode = 83;
},
{
glyphname = Sacute;
kernLeft = S;
kernRight = S;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (292,0);
},
{
name = top;
pos = (292,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (183,0);
ref = acutecomb.case;
}
);
width = 584;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = top;
pos = (289,931);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (184,0);
ref = acutecomb.case;
}
);
width = 578;
},
{
anchors = (
{
name = bottom;
pos = (295,0);
},
{
name = top;
pos = (295,952);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (182,0);
ref = acutecomb.case;
}
);
width = 589;
},
{
anchors = (
{
name = bottom;
pos = (293,0);
},
{
name = top;
pos = (293,945);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (183,0);
ref = acutecomb.case;
}
);
width = 585;
}
);
note = Sacute;
unicode = 346;
},
{
glyphname = Scaron;
kernLeft = S;
kernRight = S;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (292,0);
},
{
name = top;
pos = (292,910);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (151,0);
ref = uni030C.case;
}
);
width = 584;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = top;
pos = (289,901);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (152,0);
ref = uni030C.case;
}
);
width = 578;
},
{
anchors = (
{
name = bottom;
pos = (295,0);
},
{
name = top;
pos = (295,918);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (149,0);
ref = uni030C.case;
}
);
width = 589;
},
{
anchors = (
{
name = bottom;
pos = (293,0);
},
{
name = top;
pos = (293,912);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (150,0);
ref = uni030C.case;
}
);
width = 585;
}
);
note = Scaron;
unicode = 352;
},
{
glyphname = Scedilla;
kernLeft = S;
kernRight = S;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (292,-261);
},
{
name = top;
pos = (292,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,-261,ls),
(384,-261,o),
(455,-206,o),
(455,-157,qs),
(455,-107,o),
(382,-55,o),
(325,-56,q),
(325,-11,l),
(420,-4,o),
(541,102,o),
(541,189,qs),
(541,250,o),
(487,331,o),
(404,377,o),
(344,397,qs),
(276,420,o),
(209,450,o),
(173,492,o),
(173,525,qs),
(173,571,o),
(235,622,o),
(283,622,qs),
(339,622,o),
(408,561,o),
(408,514,q),
(521,514,l),
(520,576,o),
(458,666,o),
(354,712,o),
(290,712,qs),
(226,712,o),
(122,667,o),
(62,579,o),
(62,518,qs),
(62,449,o),
(146,356,o),
(237,326,qs),
(323,297,o),
(395,266,o),
(430,221,o),
(430,182,qs),
(430,133,o),
(358,78,o),
(300,78,qs),
(234,78,o),
(155,151,o),
(153,211,q),
(42,211,l),
(43,117,o),
(161,2,o),
(257,-10,q),
(257,-115,l),
(312,-115,ls),
(373,-115,o),
(373,-155,qs),
(373,-197,o),
(312,-197,qs),
(210,-197,l),
(210,-261,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
50 7 2 7 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 3 7 7 3 112 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 6 6 4 97 0 4 4 39 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 3 7 6 3 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 6 6 4 97 0 4 4 39 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 30 34 19 44 34 20 34 32 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 584;
},
{
anchors = (
{
name = bottom;
pos = (289,-259);
},
{
name = top;
pos = (289,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(324,-259,ls),
(378,-259,o),
(445,-205,o),
(445,-159,qs),
(445,-112,o),
(375,-62,o),
(316,-63,q),
(316,-11,l),
(410,-6,o),
(533,96,o),
(533,183,qs),
(533,243,o),
(486,320,o),
(400,369,o),
(329,393,qs),
(252,419,o),
(185,449,o),
(155,491,o),
(155,528,qs),
(155,582,o),
(229,642,o),
(285,640,qs),
(345,640,o),
(422,571,o),
(422,518,q),
(510,518,l),
(508,609,o),
(384,712,o),
(288,712,qs),
(226,712,o),
(124,667,o),
(67,580,o),
(68,520,qs),
(68,452,o),
(147,370,o),
(227,342,qs),
(278,325,ls),
(347,302,o),
(411,272,o),
(446,222,o),
(446,178,qs),
(446,122,o),
(363,59,o),
(297,59,qs),
(223,59,o),
(132,141,o),
(132,210,q),
(44,210,l),
(44,116,o),
(163,0,o),
(260,-10,q),
(260,-113,l),
(309,-113,ls),
(377,-113,o),
(377,-158,qs),
(377,-206,o),
(309,-206,qs),
(217,-206,l),
(217,-259,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
7 1 8 7 1 76 0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 99 0 6 6 4 97 0 4 4 39 77 0 3 3 7 97 0 7 7 40 7 78 58 56 17 28 34 18 45 34 20 34 32 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
anchors = (
{
name = bottom;
pos = (295,-263);
},
{
name = top;
pos = (295,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(334,-263,ls),
(389,-263,o),
(464,-207,o),
(464,-155,qs),
(464,-103,o),
(390,-48,o),
(334,-50,q),
(334,-11,l),
(429,-3,o),
(549,107,o),
(549,194,qs),
(549,257,o),
(488,341,o),
(409,384,o),
(359,401,qs),
(298,422,o),
(232,451,o),
(190,492,o),
(190,521,qs),
(190,560,o),
(244,604,o),
(286,604,qs),
(334,604,o),
(393,549,o),
(394,510,q),
(531,510,l),
(530,574,o),
(465,665,o),
(357,712,o),
(291,712,qs),
(224,712,o),
(118,666,o),
(56,576,o),
(56,512,qs),
(56,443,o),
(145,343,o),
(246,310,qs),
(317,287,o),
(387,253,o),
(413,215,o),
(413,185,qs),
(413,144,o),
(353,96,o),
(302,96,qs),
(244,96,o),
(176,161,o),
(174,211,q),
(39,211,l),
(41,116,o),
(159,3,o),
(254,-9,q),
(254,-118,l),
(315,-118,ls),
(368,-118,o),
(368,-153,qs),
(368,-189,o),
(315,-189,qs),
(203,-189,l),
(203,-263,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
50 7 2 7 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 3 7 7 3 112 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 6 6 4 97 0 4 4 39 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 3 7 6 3 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 6 6 4 97 0 4 4 39 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 30 34 19 44 34 20 34 32 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 589;
},
{
anchors = (
{
name = bottom;
pos = (293,-262);
},
{
name = top;
pos = (293,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(331,-262,ls),
(386,-262,o),
(458,-206,o),
(458,-156,qs),
(458,-106,o),
(385,-53,o),
(328,-54,q),
(328,-11,l),
(423,-4,o),
(544,104,o),
(544,190,qs),
(544,252,o),
(488,334,o),
(406,379,o),
(349,398,qs),
(284,420,o),
(216,450,o),
(178,492,o),
(178,523,qs),
(178,567,o),
(238,616,o),
(283,616,qs),
(337,616,o),
(403,557,o),
(403,513,q),
(524,513,l),
(523,575,o),
(460,665,o),
(355,712,o),
(290,712,qs),
(225,712,o),
(121,667,o),
(60,579,o),
(60,517,qs),
(60,447,o),
(146,351,o),
(240,321,qs),
(319,295,o),
(392,262,o),
(424,219,o),
(424,183,qs),
(424,137,o),
(356,84,o),
(300,84,qs),
(237,84,o),
(162,154,o),
(160,211,q),
(41,211,l),
(42,116,o),
(160,2,o),
(256,-9,q),
(256,-116,l),
(313,-116,ls),
(371,-116,o),
(371,-155,qs),
(371,-195,o),
(313,-195,qs),
(208,-195,l),
(208,-262,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
50 7 2 7 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 3 7 7 3 112 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 6 6 4 97 0 4 4 39 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 3 7 6 3 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 6 6 4 97 0 4 4 39 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 30 34 19 44 34 20 34 32 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 585;
}
);
note = Scedilla;
unicode = 350;
},
{
glyphname = uni0218;
kernLeft = S;
kernRight = S;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (292,-256);
},
{
name = top;
pos = (292,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (237,0);
ref = uni0326;
}
);
width = 584;
},
{
anchors = (
{
name = bottom;
pos = (289,-238);
},
{
name = top;
pos = (289,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (240,0);
ref = uni0326;
}
);
width = 578;
},
{
anchors = (
{
name = bottom;
pos = (295,-274);
},
{
name = top;
pos = (295,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (233,0);
ref = uni0326;
}
);
width = 589;
},
{
anchors = (
{
name = bottom;
pos = (293,-262);
},
{
name = top;
pos = (293,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = S;
},
{
alignment = -1;
pos = (235,0);
ref = uni0326;
}
);
width = 585;
}
);
note = uni0218;
unicode = 536;
},
{
glyphname = uni1E9E;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(533,-10,o),
(641,78,o),
(641,155,qs),
(641,217,o),
(571,289,o),
(502,314,qs),
(443,335,o),
(394,363,o),
(394,388,qs),
(394,406,o),
(418,429,o),
(441,444,qs),
(482,469,o),
(527,519,o),
(527,563,qs),
(527,616,o),
(467,692,o),
(365,732,o),
(303,732,qs),
(193,732,o),
(59,618,o),
(59,515,qs),
(59,0,l),
(164,0,l),
(164,506,ls),
(164,570,o),
(230,643,o),
(300,643,qs),
(352,643,o),
(422,598,o),
(422,553,qs),
(422,530,o),
(398,497,o),
(375,481,qs),
(335,454,ls),
(287,423,o),
(287,373,qs),
(287,338,o),
(330,289,o),
(391,258,o),
(438,242,qs),
(487,226,o),
(536,187,o),
(536,148,qs),
(536,110,o),
(487,71,o),
(446,71,qs),
(399,71,o),
(344,127,o),
(339,172,q),
(237,172,l),
(247,85,o),
(361,-10,o),
(448,-10,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 1 1 3 97 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 2 1 2 0 1 128 0 4 0 2 0 4 2 105 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 53 0 52 35 33 30 29 26 24 34 18 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 666;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(522,-10,o),
(626,74,o),
(626,150,qs),
(626,212,o),
(557,283,o),
(489,307,qs),
(436,325,o),
(375,357,o),
(375,386,qs),
(375,405,o),
(399,428,o),
(425,445,qs),
(467,469,o),
(516,523,o),
(516,569,qs),
(516,645,o),
(393,732,o),
(302,732,qs),
(197,732,o),
(71,621,o),
(71,520,qs),
(71,0,l),
(154,0,l),
(154,512,ls),
(154,580,o),
(223,661,o),
(300,661,qs),
(358,661,o),
(432,612,o),
(432,562,qs),
(432,537,o),
(407,501,o),
(383,486,qs),
(340,458,ls),
(317,443,o),
(290,404,o),
(290,375,qs),
(290,326,o),
(369,270,o),
(438,246,qs),
(489,230,o),
(541,186,o),
(541,144,qs),
(541,101,o),
(486,56,o),
(440,56,qs),
(386,56,o),
(325,120,o),
(321,169,q),
(238,169,l),
(245,85,o),
(356,-10,o),
(441,-10,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 1 1 3 97 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 2 1 2 0 1 128 0 4 0 2 0 4 2 105 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 52 0 51 35 33 30 29 26 24 34 18 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 664;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(544,-10,o),
(656,80,o),
(656,159,qs),
(656,222,o),
(584,295,o),
(515,321,qs),
(454,343,o),
(413,369,o),
(413,390,qs),
(413,406,o),
(437,429,o),
(457,442,qs),
(496,468,o),
(538,516,o),
(538,556,qs),
(538,611,o),
(476,690,o),
(369,732,o),
(304,732,qs),
(230,732,o),
(113,680,o),
(46,580,o),
(46,509,qs),
(46,0,l),
(174,0,l),
(174,499,ls),
(174,625,o),
(299,625,qs),
(347,625,o),
(411,584,o),
(411,543,qs),
(411,522,o),
(388,492,o),
(367,476,qs),
(329,450,ls),
(284,419,o),
(284,370,qs),
(284,334,o),
(328,284,o),
(389,255,o),
(438,238,qs),
(486,221,o),
(531,187,o),
(531,151,qs),
(531,118,o),
(488,85,o),
(452,85,qs),
(412,85,o),
(362,133,o),
(357,175,q),
(236,175,l),
(247,84,o),
(365,-10,o),
(454,-10,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 1 1 3 97 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 2 1 2 0 1 128 0 4 0 2 0 4 2 105 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 53 0 52 35 33 29 28 26 24 34 18 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(536,-10,o),
(646,78,o),
(646,156,qs),
(646,219,o),
(575,291,o),
(506,316,qs),
(447,337,o),
(400,365,o),
(400,389,qs),
(400,405,o),
(423,427,o),
(446,443,qs),
(486,468,o),
(531,518,o),
(531,560,qs),
(531,614,o),
(470,692,o),
(366,732,o),
(303,732,qs),
(231,732,o),
(118,681,o),
(54,582,o),
(54,513,qs),
(54,0,l),
(167,0,l),
(167,503,ls),
(167,567,o),
(231,637,o),
(299,637,qs),
(350,637,o),
(418,593,o),
(418,549,qs),
(418,527,o),
(394,494,o),
(372,479,qs),
(333,453,ls),
(286,420,o),
(286,372,qs),
(286,321,o),
(366,265,o),
(438,241,qs),
(486,225,o),
(534,186,o),
(534,149,qs),
(534,112,o),
(487,75,o),
(448,75,qs),
(403,75,o),
(350,128,o),
(345,173,q),
(237,173,l),
(246,84,o),
(362,-10,o),
(450,-10,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 1 1 3 97 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 2 1 2 0 1 128 0 4 0 2 0 4 2 105 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 53 0 52 35 33 29 28 25 23 34 18 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 666;
}
);
note = uni1E9E;
unicode = 7838;
},
{
glyphname = T;
kernLeft = T;
kernRight = T;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (286,0);
},
{
name = top;
pos = (286,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(339,0,l),
(339,611,l),
(546,611,l),
(546,700,l),
(26,700,l),
(26,611,l),
(233,611,l),
(233,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 0 0 1 95 0 1 1 33 77 0 3 3 34 3 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (280,0);
},
{
name = top;
pos = (280,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(322,0,l),
(322,631,l),
(531,631,l),
(531,700,l),
(29,700,l),
(29,631,l),
(238,631,l),
(238,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 0 0 1 95 0 1 1 33 77 0 3 3 34 3 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 560;
},
{
anchors = (
{
name = bottom;
pos = (292,0);
},
{
name = top;
pos = (292,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(355,0,l),
(355,591,l),
(560,591,l),
(560,700,l),
(23,700,l),
(23,591,l),
(227,591,l),
(227,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 0 0 1 95 0 1 1 33 77 0 3 3 34 3 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 582;
},
{
anchors = (
{
name = bottom;
pos = (288,0);
},
{
name = top;
pos = (288,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(344,0,l),
(344,604,l),
(550,604,l),
(550,700,l),
(25,700,l),
(25,604,l),
(231,604,l),
(231,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 0 0 1 95 0 1 1 33 77 0 3 3 34 3 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = T;
unicode = 84;
},
{
glyphname = Tcaron;
kernLeft = T;
kernRight = T;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (286,0);
},
{
name = top;
pos = (286,910);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = T;
},
{
alignment = -1;
pos = (145,0);
ref = uni030C.case;
}
);
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (280,0);
},
{
name = top;
pos = (280,901);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = T;
},
{
alignment = -1;
pos = (143,0);
ref = uni030C.case;
}
);
width = 560;
},
{
anchors = (
{
name = bottom;
pos = (292,0);
},
{
name = top;
pos = (292,918);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = T;
},
{
alignment = -1;
pos = (146,0);
ref = uni030C.case;
}
);
width = 582;
},
{
anchors = (
{
name = bottom;
pos = (288,0);
},
{
name = top;
pos = (288,912);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = T;
},
{
alignment = -1;
pos = (145,0);
ref = uni030C.case;
}
);
width = 575;
}
);
note = Tcaron;
unicode = 356;
},
{
glyphname = uni0162;
kernLeft = T;
kernRight = T;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (286,-261);
},
{
name = top;
pos = (286,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251,0,l),
(251,-115,l),
(306,-115,ls),
(367,-115,o),
(367,-155,qs),
(367,-197,o),
(306,-197,qs),
(204,-197,l),
(204,-261,l),
(323,-261,ls),
(378,-261,o),
(449,-206,o),
(449,-157,qs),
(449,-107,o),
(376,-55,o),
(319,-56,q),
(319,0,l),
(339,0,l),
(339,611,l),
(546,611,l),
(546,700,l),
(26,700,l),
(26,611,l),
(233,611,l),
(233,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 4 0 7 6 4 7 105 0 6 0 5 6 5 99 2 1 0 0 1 95 0 1 1 33 77 8 1 3 3 34 3 78 17 34 33 36 17 17 17 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (280,-259);
},
{
name = top;
pos = (280,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(251,0,l),
(251,-113,l),
(300,-113,ls),
(368,-113,o),
(368,-158,qs),
(368,-206,o),
(300,-206,qs),
(208,-206,l),
(208,-259,l),
(315,-259,ls),
(369,-259,o),
(436,-205,o),
(436,-159,qs),
(436,-112,o),
(366,-62,o),
(307,-63,q),
(307,0,l),
(322,0,l),
(322,631,l),
(531,631,l),
(531,700,l),
(29,700,l),
(29,631,l),
(238,631,l),
(238,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 4 0 7 6 4 7 105 0 6 0 5 6 5 99 2 1 0 0 1 95 0 1 1 33 77 8 1 3 3 34 3 78 17 34 33 36 17 17 17 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 560;
},
{
anchors = (
{
name = bottom;
pos = (292,-263);
},
{
name = top;
pos = (292,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(251,0,l),
(251,-118,l),
(312,-118,ls),
(365,-118,o),
(365,-153,qs),
(365,-189,o),
(312,-189,qs),
(200,-189,l),
(200,-263,l),
(331,-263,ls),
(386,-263,o),
(461,-207,o),
(461,-155,qs),
(461,-103,o),
(387,-48,o),
(331,-50,q),
(331,0,l),
(355,0,l),
(355,591,l),
(560,591,l),
(560,700,l),
(23,700,l),
(23,591,l),
(227,591,l),
(227,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 4 0 7 6 4 7 105 0 6 0 5 6 5 99 2 1 0 0 1 95 0 1 1 33 77 8 1 3 3 34 3 78 17 34 33 36 17 17 17 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 582;
},
{
anchors = (
{
name = bottom;
pos = (288,-262);
},
{
name = top;
pos = (288,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(251,0,l),
(251,-116,l),
(308,-116,ls),
(366,-116,o),
(366,-155,qs),
(366,-195,o),
(308,-195,qs),
(203,-195,l),
(203,-262,l),
(326,-262,ls),
(381,-262,o),
(453,-206,o),
(453,-156,qs),
(453,-106,o),
(380,-53,o),
(323,-54,q),
(323,0,l),
(344,0,l),
(344,604,l),
(550,604,l),
(550,700,l),
(25,700,l),
(25,604,l),
(231,604,l),
(231,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 4 0 7 6 4 7 105 0 6 0 5 6 5 99 2 1 0 0 1 95 0 1 1 33 77 8 1 3 3 34 3 78 17 34 33 36 17 17 17 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = uni0162;
unicode = 354;
},
{
glyphname = uni021A;
kernLeft = T;
kernRight = T;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (286,-256);
},
{
name = top;
pos = (286,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = T;
},
{
alignment = -1;
pos = (231,0);
ref = uni0326;
}
);
width = 571;
},
{
anchors = (
{
name = bottom;
pos = (280,-238);
},
{
name = top;
pos = (280,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = T;
},
{
alignment = -1;
pos = (231,0);
ref = uni0326;
}
);
width = 560;
},
{
anchors = (
{
name = bottom;
pos = (292,-274);
},
{
name = top;
pos = (292,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = T;
},
{
alignment = -1;
pos = (230,0);
ref = uni0326;
}
);
width = 582;
},
{
anchors = (
{
name = bottom;
pos = (288,-262);
},
{
name = top;
pos = (288,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = T;
},
{
alignment = -1;
pos = (230,0);
ref = uni0326;
}
);
width = 575;
}
);
note = uni021A;
unicode = 538;
},
{
glyphname = U;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (333,0);
},
{
name = ogonek;
pos = (411,10);
},
{
name = top;
pos = (333,700);
},
{
name = topright;
pos = (645,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(400,-12,o),
(522,42,o),
(601,165,o),
(601,263,qs),
(601,700,l),
(495,700,l),
(495,262,ls),
(495,173,o),
(410,84,o),
(333,84,qs),
(256,84,o),
(170,173,o),
(170,262,qs),
(170,700,l),
(64,700,l),
(64,263,ls),
(64,186,o),
(121,62,o),
(241,-12,o),
(331,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
2 1 0 0 33 77 0 1 1 3 97 4 1 3 3 40 3 78 0 0 0 19 0 18 19 35 20 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 665;
},
{
anchors = (
{
name = bottom;
pos = (328,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (328,700);
},
{
name = topright;
pos = (636,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(395,-12,o),
(512,40,o),
(588,161,o),
(588,258,qs),
(588,700,l),
(504,700,l),
(504,257,ls),
(504,159,o),
(411,63,o),
(329,63,qs),
(247,63,o),
(152,159,o),
(152,257,qs),
(152,700,l),
(68,700,l),
(68,258,ls),
(68,183,o),
(123,61,o),
(239,-12,o),
(327,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
2 1 0 0 33 77 0 1 1 3 97 4 1 3 3 40 3 78 0 0 0 19 0 18 19 35 20 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 656;
},
{
anchors = (
{
name = bottom;
pos = (337,0);
},
{
name = ogonek;
pos = (418,10);
},
{
name = top;
pos = (337,700);
},
{
name = topright;
pos = (653,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(405,-12,o),
(532,43,o),
(614,169,o),
(614,268,qs),
(614,700,l),
(486,700,l),
(486,267,ls),
(486,187,o),
(408,105,o),
(337,105,qs),
(266,105,o),
(188,187,o),
(188,267,qs),
(188,700,l),
(60,700,l),
(60,268,ls),
(60,190,o),
(119,63,o),
(242,-12,o),
(334,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
2 1 0 0 33 77 0 1 1 3 97 4 1 3 3 40 3 78 0 0 0 19 0 18 19 35 20 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (334,0);
},
{
name = ogonek;
pos = (413,10);
},
{
name = top;
pos = (334,700);
},
{
name = topright;
pos = (647,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(402,-12,o),
(525,42,o),
(605,166,o),
(605,265,qs),
(605,700,l),
(492,700,l),
(492,264,ls),
(492,178,o),
(409,91,o),
(334,91,qs),
(259,91,o),
(176,178,o),
(176,264,qs),
(176,700,l),
(63,700,l),
(63,265,ls),
(63,187,o),
(120,62,o),
(241,-12,o),
(332,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
2 1 0 0 33 77 0 1 1 3 97 4 1 3 3 40 3 78 0 0 0 19 0 18 19 35 20 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = U;
unicode = 85;
},
{
glyphname = Uacute;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (333,0);
},
{
name = ogonek;
pos = (411,10);
},
{
name = top;
pos = (333,942);
},
{
name = topright;
pos = (645,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (224,0);
ref = acutecomb.case;
}
);
width = 665;
},
{
anchors = (
{
name = bottom;
pos = (328,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (328,931);
},
{
name = topright;
pos = (636,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (223,0);
ref = acutecomb.case;
}
);
width = 656;
},
{
anchors = (
{
name = bottom;
pos = (337,0);
},
{
name = ogonek;
pos = (418,10);
},
{
name = top;
pos = (337,952);
},
{
name = topright;
pos = (653,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (224,0);
ref = acutecomb.case;
}
);
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (334,0);
},
{
name = ogonek;
pos = (413,10);
},
{
name = top;
pos = (334,945);
},
{
name = topright;
pos = (647,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (224,0);
ref = acutecomb.case;
}
);
width = 667;
}
);
note = Uacute;
unicode = 218;
},
{
glyphname = Ubreve;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (333,0);
},
{
name = ogonek;
pos = (411,10);
},
{
name = top;
pos = (333,909);
},
{
name = topright;
pos = (645,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (184,0);
ref = uni0306.case;
}
);
width = 665;
},
{
anchors = (
{
name = bottom;
pos = (328,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (328,901);
},
{
name = topright;
pos = (636,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (187,0);
ref = uni0306.case;
}
);
width = 656;
},
{
anchors = (
{
name = bottom;
pos = (337,0);
},
{
name = ogonek;
pos = (418,10);
},
{
name = top;
pos = (337,917);
},
{
name = topright;
pos = (653,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (181,0);
ref = uni0306.case;
}
);
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (334,0);
},
{
name = ogonek;
pos = (413,10);
},
{
name = top;
pos = (334,912);
},
{
name = topright;
pos = (647,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (183,0);
ref = uni0306.case;
}
);
width = 667;
}
);
note = Ubreve;
unicode = 364;
},
{
glyphname = Ucircumflex;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (333,0);
},
{
name = ogonek;
pos = (411,10);
},
{
name = top;
pos = (333,911);
},
{
name = topright;
pos = (645,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (191,0);
ref = uni0302.case;
}
);
width = 665;
},
{
anchors = (
{
name = bottom;
pos = (328,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (328,902);
},
{
name = topright;
pos = (636,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (191,0);
ref = uni0302.case;
}
);
width = 656;
},
{
anchors = (
{
name = bottom;
pos = (337,0);
},
{
name = ogonek;
pos = (418,10);
},
{
name = top;
pos = (337,919);
},
{
name = topright;
pos = (653,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (191,0);
ref = uni0302.case;
}
);
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (334,0);
},
{
name = ogonek;
pos = (413,10);
},
{
name = top;
pos = (334,913);
},
{
name = topright;
pos = (647,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (191,0);
ref = uni0302.case;
}
);
width = 667;
}
);
note = Ucircumflex;
unicode = 219;
},
{
glyphname = Udieresis;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (333,0);
},
{
name = ogonek;
pos = (411,10);
},
{
name = top;
pos = (333,912);
},
{
name = topright;
pos = (645,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (162,0);
ref = uni0308.case;
}
);
width = 665;
},
{
anchors = (
{
name = bottom;
pos = (328,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (328,889);
},
{
name = topright;
pos = (636,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (181,0);
ref = uni0308.case;
}
);
width = 656;
},
{
anchors = (
{
name = bottom;
pos = (337,0);
},
{
name = ogonek;
pos = (418,10);
},
{
name = top;
pos = (337,934);
},
{
name = topright;
pos = (653,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (143,0);
ref = uni0308.case;
}
);
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (334,0);
},
{
name = ogonek;
pos = (413,10);
},
{
name = top;
pos = (334,919);
},
{
name = topright;
pos = (647,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (156,0);
ref = uni0308.case;
}
);
width = 667;
}
);
note = Udieresis;
unicode = 220;
},
{
glyphname = Ugrave;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (333,0);
},
{
name = ogonek;
pos = (411,10);
},
{
name = top;
pos = (333,942);
},
{
name = topright;
pos = (645,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (224,0);
ref = gravecomb.case;
}
);
width = 665;
},
{
anchors = (
{
name = bottom;
pos = (328,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (328,931);
},
{
name = topright;
pos = (636,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (223,0);
ref = gravecomb.case;
}
);
width = 656;
},
{
anchors = (
{
name = bottom;
pos = (337,0);
},
{
name = ogonek;
pos = (418,10);
},
{
name = top;
pos = (337,952);
},
{
name = topright;
pos = (653,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (224,0);
ref = gravecomb.case;
}
);
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (334,0);
},
{
name = ogonek;
pos = (413,10);
},
{
name = top;
pos = (334,945);
},
{
name = topright;
pos = (647,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (224,0);
ref = gravecomb.case;
}
);
width = 667;
}
);
note = Ugrave;
unicode = 217;
},
{
glyphname = Uhungarumlaut;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (333,0);
},
{
name = ogonek;
pos = (411,10);
},
{
name = top;
pos = (333,915);
},
{
name = topright;
pos = (645,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (171,0);
ref = uni030B.case;
}
);
width = 665;
},
{
anchors = (
{
name = bottom;
pos = (328,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (328,902);
},
{
name = topright;
pos = (636,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (182,0);
ref = uni030B.case;
}
);
width = 656;
},
{
anchors = (
{
name = bottom;
pos = (337,0);
},
{
name = ogonek;
pos = (418,10);
},
{
name = top;
pos = (337,927);
},
{
name = topright;
pos = (653,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (159,0);
ref = uni030B.case;
}
);
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (334,0);
},
{
name = ogonek;
pos = (413,10);
},
{
name = top;
pos = (334,919);
},
{
name = topright;
pos = (647,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (167,0);
ref = uni030B.case;
}
);
width = 667;
}
);
note = Uhungarumlaut;
unicode = 368;
},
{
glyphname = Umacron;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (333,0);
},
{
name = ogonek;
pos = (411,10);
},
{
name = top;
pos = (333,867);
},
{
name = topright;
pos = (645,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (157,0);
ref = uni0304.case;
}
);
width = 665;
},
{
anchors = (
{
name = bottom;
pos = (328,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (328,859);
},
{
name = topright;
pos = (636,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (154,0);
ref = uni0304.case;
}
);
width = 656;
},
{
anchors = (
{
name = bottom;
pos = (337,0);
},
{
name = ogonek;
pos = (418,10);
},
{
name = top;
pos = (337,874);
},
{
name = topright;
pos = (653,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (160,0);
ref = uni0304.case;
}
);
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (334,0);
},
{
name = ogonek;
pos = (413,10);
},
{
name = top;
pos = (334,869);
},
{
name = topright;
pos = (647,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (158,0);
ref = uni0304.case;
}
);
width = 667;
}
);
note = Umacron;
unicode = 362;
},
{
glyphname = Uogonek;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (333,0);
},
{
name = ogonek;
pos = (411,10);
},
{
name = top;
pos = (333,700);
},
{
name = topright;
pos = (645,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(374,-196,o),
(415,-183,q),
(415,-117,l),
(378,-132,o),
(347,-132,qs),
(321,-132,o),
(291,-108,o),
(291,-87,qs),
(291,-68,o),
(321,-34,o),
(356,-17,qs),
(371,-10,l),
(468,1,o),
(601,134,o),
(601,263,qs),
(601,700,l),
(495,700,l),
(495,262,ls),
(495,173,o),
(410,84,o),
(333,84,qs),
(256,84,o),
(170,173,o),
(170,262,qs),
(170,700,l),
(64,700,l),
(64,263,ls),
(64,162,o),
(161,16,o),
(258,-5,q),
(208,-45,o),
(208,-97,qs),
(208,-146,o),
(280,-196,o),
(334,-196,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
31 4 2 3 1 32 1 4 3 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 0 3 0 1 3 128 2 1 0 0 33 77 0 3 3 4 98 5 1 4 4 38 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 3 0 1 3 128 0 3 5 1 4 3 4 102 2 1 0 0 33 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 34 0 33 42 19 35 24 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 665;
},
{
anchors = (
{
name = bottom;
pos = (328,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (328,700);
},
{
name = topright;
pos = (636,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(370,-193,o),
(406,-180,q),
(406,-124,l),
(372,-139,o),
(341,-139,qs),
(314,-139,o),
(281,-113,o),
(281,-90,qs),
(281,-49,o),
(345,-18,qs),
(361,-10,l),
(458,-1,o),
(588,128,o),
(588,258,qs),
(588,700,l),
(504,700,l),
(504,257,ls),
(504,159,o),
(411,63,o),
(329,63,qs),
(247,63,o),
(152,159,o),
(152,257,qs),
(152,700,l),
(68,700,l),
(68,258,ls),
(68,157,o),
(166,12,o),
(264,-7,q),
(213,-46,o),
(213,-98,qs),
(213,-145,o),
(281,-193,o),
(331,-193,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
30 4 2 3 1 31 1 4 3 2 76 0 1 0 3 0 1 3 128 0 3 5 1 4 3 4 102 2 1 0 0 33 0 78 0 0 0 33 0 32 41 19 35 24 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 656;
},
{
anchors = (
{
name = bottom;
pos = (337,0);
},
{
name = ogonek;
pos = (418,10);
},
{
name = top;
pos = (337,700);
},
{
name = topright;
pos = (653,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(379,-200,o),
(423,-186,q),
(423,-110,l),
(384,-125,o),
(352,-125,qs),
(328,-125,o),
(300,-103,o),
(300,-84,qs),
(300,-66,o),
(331,-34,o),
(366,-16,qs),
(380,-9,l),
(479,4,o),
(614,139,o),
(614,268,qs),
(614,700,l),
(486,700,l),
(486,267,ls),
(486,187,o),
(408,105,o),
(337,105,qs),
(266,105,o),
(188,187,o),
(188,267,qs),
(188,700,l),
(60,700,l),
(60,268,ls),
(60,167,o),
(157,20,o),
(252,-3,q),
(203,-42,o),
(203,-96,qs),
(203,-147,o),
(278,-200,o),
(336,-200,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
31 4 2 3 1 32 1 4 3 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 0 3 0 1 3 128 2 1 0 0 33 77 0 3 3 4 98 5 1 4 4 38 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 3 0 1 3 128 0 3 5 1 4 3 4 102 2 1 0 0 33 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 34 0 33 42 19 35 24 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (334,0);
},
{
name = ogonek;
pos = (413,10);
},
{
name = top;
pos = (334,700);
},
{
name = topright;
pos = (647,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(373,-198,o),
(417,-184,q),
(417,-115,l),
(380,-130,o),
(348,-130,qs),
(323,-130,o),
(293,-106,o),
(293,-86,qs),
(293,-67,o),
(324,-34,o),
(359,-17,qs),
(374,-10,l),
(472,2,o),
(605,135,o),
(605,265,qs),
(605,700,l),
(492,700,l),
(492,264,ls),
(492,178,o),
(409,91,o),
(334,91,qs),
(259,91,o),
(176,178,o),
(176,264,qs),
(176,700,l),
(63,700,l),
(63,265,ls),
(63,164,o),
(159,17,o),
(256,-4,q),
(206,-43,o),
(206,-97,qs),
(206,-147,o),
(278,-198,o),
(334,-198,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
31 4 2 3 1 32 1 4 3 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 0 3 0 1 3 128 2 1 0 0 33 77 0 3 3 4 98 5 1 4 4 38 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 3 0 1 3 128 0 3 5 1 4 3 4 102 2 1 0 0 33 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 34 0 33 42 19 35 24 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = Uogonek;
unicode = 370;
},
{
glyphname = Uring;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (333,0);
},
{
name = ogonek;
pos = (411,10);
},
{
name = top;
pos = (333,971);
},
{
name = topright;
pos = (645,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (223,0);
ref = uni030A.case;
}
);
width = 665;
},
{
anchors = (
{
name = bottom;
pos = (328,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (328,967);
},
{
name = topright;
pos = (636,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (223,0);
ref = uni030A.case;
}
);
width = 656;
},
{
anchors = (
{
name = bottom;
pos = (337,0);
},
{
name = ogonek;
pos = (418,10);
},
{
name = top;
pos = (337,975);
},
{
name = topright;
pos = (653,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (223,0);
ref = uni030A.case;
}
);
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (334,0);
},
{
name = ogonek;
pos = (413,10);
},
{
name = top;
pos = (334,972);
},
{
name = topright;
pos = (647,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (223,0);
ref = uni030A.case;
}
);
width = 667;
}
);
note = Uring;
unicode = 366;
},
{
glyphname = Utilde;
kernLeft = U;
kernRight = U;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (333,0);
},
{
name = ogonek;
pos = (411,10);
},
{
name = top;
pos = (333,868);
},
{
name = topright;
pos = (645,700);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (169,0);
ref = tildecomb.case;
}
);
width = 665;
},
{
anchors = (
{
name = bottom;
pos = (328,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (328,859);
},
{
name = topright;
pos = (636,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (177,0);
ref = tildecomb.case;
}
);
width = 656;
},
{
anchors = (
{
name = bottom;
pos = (337,0);
},
{
name = ogonek;
pos = (418,10);
},
{
name = top;
pos = (337,877);
},
{
name = topright;
pos = (653,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (161,0);
ref = tildecomb.case;
}
);
width = 673;
},
{
anchors = (
{
name = bottom;
pos = (334,0);
},
{
name = ogonek;
pos = (413,10);
},
{
name = top;
pos = (334,871);
},
{
name = topright;
pos = (647,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = U;
},
{
alignment = -1;
pos = (166,0);
ref = tildecomb.case;
}
);
width = 667;
}
);
note = Utilde;
unicode = 360;
},
{
glyphname = V;
kernLeft = V;
kernRight = V;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(404,0,l),
(663,700,l),
(551,700,l),
(340,110,l),
(131,700,l),
(17,700,l),
(276,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 2 0 1 76 1 1 0 0 33 77 0 2 2 34 2 78 17 18 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 680;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(383,0,l),
(646,700,l),
(557,700,l),
(334,89,l),
(113,700,l),
(22,700,l),
(285,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 2 0 1 76 1 1 0 0 33 77 0 2 2 34 2 78 17 18 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 668;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(424,0,l),
(680,700,l),
(545,700,l),
(346,131,l),
(148,700,l),
(11,700,l),
(267,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 2 0 1 76 1 1 0 0 33 77 0 2 2 34 2 78 17 18 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(410,0,l),
(669,700,l),
(549,700,l),
(342,117,l),
(136,700,l),
(15,700,l),
(273,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 2 0 1 76 1 1 0 0 33 77 0 2 2 34 2 78 17 18 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
kernLeft = W;
kernRight = W;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (506,0);
},
{
name = top;
pos = (506,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(506,560,l),
(658,0,l),
(787,0,l),
(981,700,l),
(866,700,l),
(722,124,l),
(569,700,l),
(446,700,l),
(289,129,l),
(146,700,l),
(32,700,l),
(221,0,l),
(349,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
11 6 3 3 3 0 1 76 2 1 2 0 0 33 77 5 4 2 3 3 34 3 78 0 0 0 12 0 12 17 18 18 17 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 1013;
},
{
anchors = (
{
name = bottom;
pos = (493,0);
},
{
name = top;
pos = (493,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(491,586,l),
(658,0,l),
(755,0,l),
(950,700,l),
(860,700,l),
(707,97,l),
(542,700,l),
(445,700,l),
(275,102,l),
(124,700,l),
(34,700,l),
(224,0,l),
(320,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
11 6 3 3 3 0 1 76 2 1 2 0 0 33 77 5 4 2 3 3 34 3 78 0 0 0 12 0 12 17 18 18 17 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 985;
},
{
anchors = (
{
name = bottom;
pos = (519,0);
},
{
name = top;
pos = (519,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(520,531,l),
(657,0,l),
(818,0,l),
(1012,700,l),
(872,700,l),
(737,153,l),
(596,700,l),
(447,700,l),
(302,153,l),
(168,700,l),
(29,700,l),
(218,0,l),
(378,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
11 6 3 3 3 0 1 76 2 1 2 0 0 33 77 5 4 2 3 3 34 3 78 0 0 0 12 0 12 17 18 18 17 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 1041;
},
{
anchors = (
{
name = bottom;
pos = (510,0);
},
{
name = top;
pos = (510,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(511,549,l),
(657,0,l),
(797,0,l),
(991,700,l),
(868,700,l),
(727,134,l),
(578,700,l),
(446,700,l),
(293,137,l),
(153,700,l),
(31,700,l),
(220,0,l),
(359,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
11 6 3 3 3 0 1 76 2 1 2 0 0 33 77 5 4 2 3 3 34 3 78 0 0 0 12 0 12 17 18 18 17 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 1022;
}
);
note = W;
unicode = 87;
},
{
glyphname = Wacute;
kernLeft = W;
kernRight = W;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (506,0);
},
{
name = top;
pos = (506,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (397,0);
ref = acutecomb.case;
}
);
width = 1013;
},
{
anchors = (
{
name = bottom;
pos = (493,0);
},
{
name = top;
pos = (493,931);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (388,0);
ref = acutecomb.case;
}
);
width = 985;
},
{
anchors = (
{
name = bottom;
pos = (519,0);
},
{
name = top;
pos = (519,952);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (406,0);
ref = acutecomb.case;
}
);
width = 1041;
},
{
anchors = (
{
name = bottom;
pos = (510,0);
},
{
name = top;
pos = (510,945);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (400,0);
ref = acutecomb.case;
}
);
width = 1022;
}
);
note = Wacute;
unicode = 7810;
},
{
glyphname = Wcircumflex;
kernLeft = W;
kernRight = W;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (506,0);
},
{
name = top;
pos = (506,911);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (365,0);
ref = uni0302.case;
}
);
width = 1013;
},
{
anchors = (
{
name = bottom;
pos = (493,0);
},
{
name = top;
pos = (493,902);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (356,0);
ref = uni0302.case;
}
);
width = 985;
},
{
anchors = (
{
name = bottom;
pos = (519,0);
},
{
name = top;
pos = (519,919);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (373,0);
ref = uni0302.case;
}
);
width = 1041;
},
{
anchors = (
{
name = bottom;
pos = (510,0);
},
{
name = top;
pos = (510,913);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (367,0);
ref = uni0302.case;
}
);
width = 1022;
}
);
note = Wcircumflex;
unicode = 372;
},
{
glyphname = Wdieresis;
kernLeft = W;
kernRight = W;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (506,0);
},
{
name = top;
pos = (506,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (336,0);
ref = uni0308.case;
}
);
width = 1013;
},
{
anchors = (
{
name = bottom;
pos = (493,0);
},
{
name = top;
pos = (493,889);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (346,0);
ref = uni0308.case;
}
);
width = 985;
},
{
anchors = (
{
name = bottom;
pos = (519,0);
},
{
name = top;
pos = (519,934);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (325,0);
ref = uni0308.case;
}
);
width = 1041;
},
{
anchors = (
{
name = bottom;
pos = (510,0);
},
{
name = top;
pos = (510,919);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (332,0);
ref = uni0308.case;
}
);
width = 1022;
}
);
note = Wdieresis;
unicode = 7812;
},
{
glyphname = Wgrave;
kernLeft = W;
kernRight = W;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (506,0);
},
{
name = top;
pos = (506,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (397,0);
ref = gravecomb.case;
}
);
width = 1013;
},
{
anchors = (
{
name = bottom;
pos = (493,0);
},
{
name = top;
pos = (493,931);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (388,0);
ref = gravecomb.case;
}
);
width = 985;
},
{
anchors = (
{
name = bottom;
pos = (519,0);
},
{
name = top;
pos = (519,952);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (406,0);
ref = gravecomb.case;
}
);
width = 1041;
},
{
anchors = (
{
name = bottom;
pos = (510,0);
},
{
name = top;
pos = (510,945);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = W;
},
{
alignment = -1;
pos = (400,0);
ref = gravecomb.case;
}
);
width = 1022;
}
);
note = Wgrave;
unicode = 7808;
},
{
glyphname = X;
kernLeft = X;
kernRight = X;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(151,0,l),
(310,282,l),
(479,0,l),
(598,0,l),
(372,379,l),
(561,700,l),
(441,700,l),
(314,474,l),
(179,700,l),
(60,700,l),
(252,379,l),
(30,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 3 3 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 627;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(127,0,l),
(297,300,l),
(477,0,l),
(571,0,l),
(346,377,l),
(537,700,l),
(442,700,l),
(301,451,l),
(152,700,l),
(58,700,l),
(252,376,l),
(31,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 3 3 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 602;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(174,0,l),
(323,264,l),
(480,0,l),
(625,0,l),
(398,381,l),
(585,700,l),
(440,700,l),
(327,497,l),
(206,700,l),
(61,700,l),
(251,381,l),
(29,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 3 3 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 651;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(158,0,l),
(314,276,l),
(479,0,l),
(607,0,l),
(381,380,l),
(569,700,l),
(441,700,l),
(318,482,l),
(188,700,l),
(60,700,l),
(251,379,l),
(30,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 3 3 2 0 1 76 1 1 0 0 33 77 3 1 2 2 34 2 78 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 635;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
kernLeft = Y;
kernRight = Y;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (300,0);
},
{
name = top;
pos = (300,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(353,0,l),
(353,274,l),
(583,700,l),
(465,700,l),
(300,378,l),
(135,700,l),
(15,700,l),
(247,274,l),
(247,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
6 3 0 3 2 0 1 76 1 1 0 0 33 77 0 2 2 34 2 78 18 18 17 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 598;
},
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = top;
pos = (290,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(332,0,l),
(332,266,l),
(559,700,l),
(465,700,l),
(290,346,l),
(115,700,l),
(20,700,l),
(248,266,l),
(248,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
6 3 0 3 2 0 1 76 1 1 0 0 33 77 0 2 2 34 2 78 18 18 17 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 579;
},
{
anchors = (
{
name = bottom;
pos = (309,0);
},
{
name = top;
pos = (309,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(373,0,l),
(373,281,l),
(607,700,l),
(464,700,l),
(310,409,l),
(155,700,l),
(10,700,l),
(245,281,l),
(245,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
6 3 0 3 2 0 1 76 1 1 0 0 33 77 0 2 2 34 2 78 18 18 17 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 617;
},
{
anchors = (
{
name = bottom;
pos = (303,0);
},
{
name = top;
pos = (303,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(359,0,l),
(359,276,l),
(591,700,l),
(464,700,l),
(303,388,l),
(142,700,l),
(13,700,l),
(246,276,l),
(246,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
6 3 0 3 2 0 1 76 1 1 0 0 33 77 0 2 2 34 2 78 18 18 17 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 604;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Yacute;
kernLeft = Y;
kernRight = Y;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (300,0);
},
{
name = top;
pos = (300,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (191,0);
ref = acutecomb.case;
}
);
width = 598;
},
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = top;
pos = (290,931);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (185,0);
ref = acutecomb.case;
}
);
width = 579;
},
{
anchors = (
{
name = bottom;
pos = (309,0);
},
{
name = top;
pos = (309,952);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (196,0);
ref = acutecomb.case;
}
);
width = 617;
},
{
anchors = (
{
name = bottom;
pos = (303,0);
},
{
name = top;
pos = (303,945);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (192,0);
ref = acutecomb.case;
}
);
width = 604;
}
);
note = Yacute;
unicode = 221;
},
{
glyphname = Ycircumflex;
kernLeft = Y;
kernRight = Y;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (300,0);
},
{
name = top;
pos = (300,911);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (158,0);
ref = uni0302.case;
}
);
width = 598;
},
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = top;
pos = (290,902);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (153,0);
ref = uni0302.case;
}
);
width = 579;
},
{
anchors = (
{
name = bottom;
pos = (309,0);
},
{
name = top;
pos = (309,919);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (163,0);
ref = uni0302.case;
}
);
width = 617;
},
{
anchors = (
{
name = bottom;
pos = (303,0);
},
{
name = top;
pos = (303,913);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (160,0);
ref = uni0302.case;
}
);
width = 604;
}
);
note = Ycircumflex;
unicode = 374;
},
{
glyphname = Ydieresis;
kernLeft = Y;
kernRight = Y;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (300,0);
},
{
name = top;
pos = (300,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (129,0);
ref = uni0308.case;
}
);
width = 598;
},
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = top;
pos = (290,889);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (143,0);
ref = uni0308.case;
}
);
width = 579;
},
{
anchors = (
{
name = bottom;
pos = (309,0);
},
{
name = top;
pos = (309,934);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (115,0);
ref = uni0308.case;
}
);
width = 617;
},
{
anchors = (
{
name = bottom;
pos = (303,0);
},
{
name = top;
pos = (303,919);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (124,0);
ref = uni0308.case;
}
);
width = 604;
}
);
note = Ydieresis;
unicode = 376;
},
{
glyphname = Ygrave;
kernLeft = Y;
kernRight = Y;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (300,0);
},
{
name = top;
pos = (300,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (191,0);
ref = gravecomb.case;
}
);
width = 598;
},
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = top;
pos = (290,931);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (185,0);
ref = gravecomb.case;
}
);
width = 579;
},
{
anchors = (
{
name = bottom;
pos = (309,0);
},
{
name = top;
pos = (309,952);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (196,0);
ref = gravecomb.case;
}
);
width = 617;
},
{
anchors = (
{
name = bottom;
pos = (303,0);
},
{
name = top;
pos = (303,945);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (192,0);
ref = gravecomb.case;
}
);
width = 604;
}
);
note = Ygrave;
unicode = 7922;
},
{
glyphname = uni1EF8;
kernLeft = Y;
kernRight = Y;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (300,0);
},
{
name = top;
pos = (300,868);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (136,0);
ref = tildecomb.case;
}
);
width = 598;
},
{
anchors = (
{
name = bottom;
pos = (290,0);
},
{
name = top;
pos = (290,859);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (139,0);
ref = tildecomb.case;
}
);
width = 579;
},
{
anchors = (
{
name = bottom;
pos = (309,0);
},
{
name = top;
pos = (309,877);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (133,0);
ref = tildecomb.case;
}
);
width = 617;
},
{
anchors = (
{
name = bottom;
pos = (303,0);
},
{
name = top;
pos = (303,871);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = Y;
},
{
alignment = -1;
pos = (135,0);
ref = tildecomb.case;
}
);
width = 604;
}
);
note = uni1EF8;
unicode = 7928;
},
{
glyphname = Z;
kernRight = Z;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (274,0);
},
{
name = top;
pos = (274,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(503,0,l),
(503,91,l),
(166,91,l),
(500,618,l),
(500,700,l),
(48,700,l),
(48,610,l),
(377,610,l),
(44,82,l),
(44,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 0 1 0 1 3 2 2 76 0 0 0 1 95 0 1 1 33 77 0 2 2 3 95 0 3 3 34 3 78 17 18 17 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 547;
},
{
anchors = (
{
name = bottom;
pos = (268,0);
},
{
name = top;
pos = (268,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(491,0,l),
(491,73,l),
(141,73,l),
(487,634,l),
(487,700,l),
(49,700,l),
(49,627,l),
(389,627,l),
(44,66,l),
(44,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 0 1 0 1 3 2 2 76 0 0 0 1 95 0 1 1 33 77 0 2 2 3 95 0 3 3 34 3 78 17 18 17 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (279,0);
},
{
name = top;
pos = (279,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(515,0,l),
(515,109,l),
(190,109,l),
(513,602,l),
(513,700,l),
(46,700,l),
(46,592,l),
(364,592,l),
(43,98,l),
(43,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 0 1 0 1 3 2 2 76 0 0 0 1 95 0 1 1 33 77 0 2 2 3 95 0 3 3 34 3 78 17 18 17 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 558;
},
{
anchors = (
{
name = bottom;
pos = (275,0);
},
{
name = top;
pos = (275,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(507,0,l),
(507,97,l),
(174,97,l),
(504,613,l),
(504,700,l),
(47,700,l),
(47,604,l),
(372,604,l),
(43,87,l),
(43,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 0 1 0 1 3 2 2 76 0 0 0 1 95 0 1 1 33 77 0 2 2 3 95 0 3 3 34 3 78 17 18 17 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 550;
}
);
note = Z;
unicode = 90;
},
{
glyphname = Zacute;
kernRight = Z;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (274,0);
},
{
name = top;
pos = (274,942);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (165,0);
ref = acutecomb.case;
}
);
width = 547;
},
{
anchors = (
{
name = bottom;
pos = (268,0);
},
{
name = top;
pos = (268,931);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (163,0);
ref = acutecomb.case;
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (279,0);
},
{
name = top;
pos = (279,952);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (166,0);
ref = acutecomb.case;
}
);
width = 558;
},
{
anchors = (
{
name = bottom;
pos = (275,0);
},
{
name = top;
pos = (275,945);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (165,0);
ref = acutecomb.case;
}
);
width = 550;
}
);
note = Zacute;
unicode = 377;
},
{
glyphname = Zcaron;
kernRight = Z;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (274,0);
},
{
name = top;
pos = (274,910);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (132,0);
ref = uni030C.case;
}
);
width = 547;
},
{
anchors = (
{
name = bottom;
pos = (268,0);
},
{
name = top;
pos = (268,901);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (131,0);
ref = uni030C.case;
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (279,0);
},
{
name = top;
pos = (279,918);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (133,0);
ref = uni030C.case;
}
);
width = 558;
},
{
anchors = (
{
name = bottom;
pos = (275,0);
},
{
name = top;
pos = (275,912);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (132,0);
ref = uni030C.case;
}
);
width = 550;
}
);
note = Zcaron;
unicode = 381;
},
{
glyphname = Zdotaccent;
kernRight = Z;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (274,0);
},
{
name = top;
pos = (274,912);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (203,0);
ref = uni0307.case;
}
);
width = 547;
},
{
anchors = (
{
name = bottom;
pos = (268,0);
},
{
name = top;
pos = (268,889);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (210,0);
ref = uni0307.case;
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (279,0);
},
{
name = top;
pos = (279,934);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (196,0);
ref = uni0307.case;
}
);
width = 558;
},
{
anchors = (
{
name = bottom;
pos = (275,0);
},
{
name = top;
pos = (275,919);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = Z;
},
{
alignment = -1;
pos = (201,0);
ref = uni0307.case;
}
);
width = 550;
}
);
note = Zdotaccent;
unicode = 379;
},
{
glyphname = uniA78B;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,220,l),
(177,700,l),
(63,700,l),
(75,220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 239;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(146,229,l),
(156,700,l),
(65,700,l),
(75,229,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 221;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(182,210,l),
(197,700,l),
(60,700,l),
(74,210,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 257;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(170,216,l),
(183,700,l),
(62,700,l),
(74,216,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 245;
}
);
note = uniA78B;
unicode = 42891;
},
{
glyphname = a;
kernLeft = a;
kernRight = a;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (271,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(273,-12,o),
(361,38,o),
(385,77,q),
(388,0,l),
(485,0,l),
(485,301,ls),
(485,394,o),
(377,508,o),
(273,508,qs),
(217,508,o),
(118,467,o),
(54,390,o),
(50,338,q),
(157,338,l),
(164,378,o),
(225,419,o),
(270,419,qs),
(320,419,o),
(378,359,o),
(378,298,q),
(252,298,ls),
(158,298,o),
(40,219,o),
(40,139,qs),
(40,69,o),
(141,-12,o),
(216,-12,qs)
);
},
{
closed = 1;
nodes = (
(200,75,o),
(149,112,o),
(149,148,qs),
(149,188,o),
(211,224,o),
(260,224,qs),
(378,224,l),
(378,222,ls),
(378,182,o),
(343,115,o),
(281,75,o),
(241,75,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
23 1 7 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 7 0 6 103 0 1 1 3 97 0 3 3 42 77 9 1 7 7 4 97 8 5 2 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 7 0 6 103 0 1 1 3 97 0 3 3 42 77 0 4 4 34 77 9 1 7 7 5 97 8 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
27 27 0 0 27 38 27 37 33 30 0 26 0 25 19 35 18 34 36 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 533;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (275,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(290,-12,o),
(379,41,o),
(404,84,q),
(408,0,l),
(484,0,l),
(484,305,ls),
(484,396,o),
(382,508,o),
(275,508,qs),
(221,508,o),
(126,468,o),
(64,393,o),
(60,341,q),
(146,341,l),
(155,388,o),
(224,437,o),
(275,437,qs),
(330,437,o),
(400,371,o),
(400,299,q),
(266,299,ls),
(172,299,o),
(50,222,o),
(50,141,qs),
(50,68,o),
(152,-12,o),
(232,-12,qs)
);
},
{
closed = 1;
nodes = (
(199,59,o),
(138,102,o),
(138,145,qs),
(138,193,o),
(213,234,o),
(273,234,qs),
(400,234,l),
(400,233,ls),
(400,189,o),
(364,109,o),
(294,59,o),
(247,59,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
23 1 7 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 7 0 6 103 0 1 1 3 97 0 3 3 42 77 9 1 7 7 4 97 8 5 2 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 7 0 6 103 0 1 1 3 97 0 3 3 42 77 0 4 4 34 77 9 1 7 7 5 97 8 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
27 27 0 0 27 38 27 37 33 30 0 26 0 25 19 35 18 34 36 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 543;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (266,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(255,-12,o),
(341,33,o),
(366,69,q),
(368,0,l),
(485,0,l),
(485,296,ls),
(485,393,o),
(370,508,o),
(268,508,qs),
(210,508,o),
(109,466,o),
(44,387,o),
(40,334,q),
(168,334,l),
(174,368,o),
(226,401,o),
(264,401,qs),
(308,401,o),
(356,346,o),
(356,296,q),
(238,296,ls),
(144,296,o),
(30,216,o),
(30,137,qs),
(30,92,o),
(76,24,o),
(154,-12,o),
(200,-12,qs)
);
},
{
closed = 1;
nodes = (
(201,91,o),
(160,122,o),
(160,151,qs),
(160,183,o),
(209,214,o),
(246,214,qs),
(356,214,l),
(356,210,ls),
(356,158,o),
(285,91,o),
(234,91,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
24 1 4 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 7 0 6 103 0 1 1 3 97 0 3 3 42 77 9 1 7 7 4 97 8 5 2 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 7 0 6 103 0 1 1 3 97 0 3 3 42 77 0 4 4 34 77 9 1 7 7 5 97 8 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
28 28 0 0 28 38 28 37 33 30 0 27 0 26 19 35 18 34 37 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 522;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (269,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(268,-12,o),
(354,36,o),
(378,74,q),
(381,0,l),
(485,0,l),
(485,299,ls),
(485,394,o),
(374,508,o),
(271,508,qs),
(215,508,o),
(115,467,o),
(51,389,o),
(47,336,q),
(161,336,l),
(167,375,o),
(225,413,o),
(268,413,qs),
(315,413,o),
(371,354,o),
(371,297,q),
(247,297,ls),
(153,297,o),
(37,218,o),
(37,138,qs),
(37,69,o),
(137,-12,o),
(211,-12,qs)
);
},
{
closed = 1;
nodes = (
(201,80,o),
(153,115,o),
(153,149,qs),
(153,186,o),
(211,221,o),
(255,221,qs),
(371,221,l),
(371,218,ls),
(371,160,o),
(295,80,o),
(238,80,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
23 1 4 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 7 0 6 103 0 1 1 3 97 0 3 3 42 77 9 1 7 7 4 97 8 5 2 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 7 0 6 103 0 1 1 3 97 0 3 3 42 77 0 4 4 34 77 9 1 7 7 5 97 8 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
27 27 0 0 27 37 27 36 32 29 0 26 0 25 19 35 18 34 36 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = a;
unicode = 97;
},
{
glyphname = aacute;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (271,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (162,0);
ref = acutecomb;
}
);
width = 533;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (275,747);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (170,0);
ref = acutecomb;
}
);
width = 543;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (266,751);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (153,0);
ref = acutecomb;
}
);
width = 522;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (269,750);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (159,0);
ref = acutecomb;
}
);
width = 529;
}
);
note = aacute;
unicode = 225;
},
{
glyphname = abreve;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (271,722);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (122,0);
ref = uni0306;
}
);
width = 533;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (275,732);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (134,0);
ref = uni0306;
}
);
width = 543;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (266,712);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (110,0);
ref = uni0306;
}
);
width = 522;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (269,719);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (118,0);
ref = uni0306;
}
);
width = 529;
}
);
note = abreve;
unicode = 259;
},
{
glyphname = uni01CE;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (271,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (129,0);
ref = uni030C;
}
);
width = 533;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (275,733);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (138,0);
ref = uni030C;
}
);
width = 543;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (266,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (120,0);
ref = uni030C;
}
);
width = 522;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (269,728);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (126,0);
ref = uni030C;
}
);
width = 529;
}
);
note = uni01CE;
unicode = 462;
},
{
glyphname = acircumflex;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (271,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (129,0);
ref = uni0302;
}
);
width = 533;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (275,733);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (138,0);
ref = uni0302;
}
);
width = 543;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (266,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (120,0);
ref = uni0302;
}
);
width = 522;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (269,728);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (126,0);
ref = uni0302;
}
);
width = 529;
}
);
note = acircumflex;
unicode = 226;
},
{
glyphname = adieresis;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (271,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (100,0);
ref = uni0308;
}
);
width = 533;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (275,720);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (128,0);
ref = uni0308;
}
);
width = 543;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (266,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (72,0);
ref = uni0308;
}
);
width = 522;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (269,724);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (91,0);
ref = uni0308;
}
);
width = 529;
}
);
note = adieresis;
unicode = 228;
},
{
glyphname = agrave;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (271,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (162,0);
ref = gravecomb;
}
);
width = 533;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (275,747);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (170,0);
ref = gravecomb;
}
);
width = 543;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (266,751);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (153,0);
ref = gravecomb;
}
);
width = 522;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (269,750);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (159,0);
ref = gravecomb;
}
);
width = 529;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = amacron;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (271,693);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (95,0);
ref = uni0304;
}
);
width = 533;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (275,695);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (101,0);
ref = uni0304;
}
);
width = 543;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (266,690);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (89,0);
ref = uni0304;
}
);
width = 522;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (269,692);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (93,0);
ref = uni0304;
}
);
width = 529;
}
);
note = amacron;
unicode = 257;
},
{
glyphname = aogonek;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (271,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(273,-12,o),
(361,38,o),
(385,77,q),
(388,0,l),
(407,0,l),
(336,-45,o),
(336,-107,qs),
(336,-156,o),
(408,-206,o),
(462,-206,qs),
(502,-206,o),
(543,-193,q),
(543,-127,l),
(506,-142,o),
(475,-142,qs),
(449,-142,o),
(419,-118,o),
(419,-97,qs),
(419,-78,o),
(449,-44,o),
(484,-27,qs),
(539,0,l),
(514,52,l),
(485,39,l),
(485,301,ls),
(485,394,o),
(377,508,o),
(273,508,qs),
(217,508,o),
(118,467,o),
(54,390,o),
(50,338,q),
(157,338,l),
(164,378,o),
(225,419,o),
(270,419,qs),
(320,419,o),
(378,359,o),
(378,298,q),
(252,298,ls),
(158,298,o),
(40,219,o),
(40,139,qs),
(40,69,o),
(141,-12,o),
(216,-12,qs)
);
},
{
closed = 1;
nodes = (
(200,75,o),
(149,112,o),
(149,148,qs),
(149,188,o),
(211,224,o),
(260,224,qs),
(378,224,l),
(378,222,ls),
(378,182,o),
(343,115,o),
(281,75,o),
(241,75,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
42 1 9 8 22 21 2 6 9 32 1 4 6 33 1 5 4 4 76 23 1 6 1 75
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
42 1 9 8 22 21 2 6 9 32 1 4 7 33 1 5 4 4 76 23 1 6 1 75
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 2 1 0 1 2 0 128 0 0 0 8 9 0 8 103 0 1 1 3 97 0 3 3 42 77 11 1 9 9 6 97 10 7 2 6 6 34 77 0 4 4 5 97 0 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 2 1 0 1 2 0 128 0 0 0 8 9 0 8 103 0 1 1 3 97 0 3 3 42 77 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 77 0 4 4 5 97 0 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 2 1 0 1 2 0 128 0 0 0 8 9 0 8 103 0 4 0 5 4 5 101 0 1 1 3 97 0 3 3 42 77 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
46 46 0 0 46 57 46 56 52 49 0 45 0 44 20 35 43 35 18 34 36 12 8 29
CALL[ ]	/* CallFunction */";
};
width = 533;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (275,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(290,-12,o),
(379,41,o),
(404,84,q),
(408,0,l),
(425,0,l),
(349,-45,o),
(349,-108,qs),
(349,-155,o),
(417,-203,o),
(467,-203,qs),
(506,-203,o),
(542,-190,q),
(542,-134,l),
(508,-149,o),
(477,-149,qs),
(450,-149,o),
(417,-123,o),
(417,-100,qs),
(417,-59,o),
(481,-28,qs),
(539,0,l),
(518,43,l),
(484,28,l),
(484,305,ls),
(484,396,o),
(382,508,o),
(275,508,qs),
(221,508,o),
(126,468,o),
(64,393,o),
(60,341,q),
(146,341,l),
(155,388,o),
(224,437,o),
(275,437,qs),
(330,437,o),
(400,371,o),
(400,299,q),
(266,299,ls),
(172,299,o),
(50,222,o),
(50,141,qs),
(50,68,o),
(152,-12,o),
(232,-12,qs)
);
},
{
closed = 1;
nodes = (
(199,59,o),
(138,102,o),
(138,145,qs),
(138,193,o),
(213,234,o),
(273,234,qs),
(400,234,l),
(400,233,ls),
(400,189,o),
(364,109,o),
(294,59,o),
(247,59,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
41 1 9 8 22 21 2 6 9 31 1 4 6 32 1 5 4 4 76 23 1 6 1 75
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
41 1 9 8 22 21 2 6 9 31 1 4 7 32 1 5 4 4 76 23 1 6 1 75
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 2 1 0 1 2 0 128 0 0 0 8 9 0 8 103 0 1 1 3 97 0 3 3 42 77 11 1 9 9 6 97 10 7 2 6 6 34 77 0 4 4 5 97 0 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 2 1 0 1 2 0 128 0 0 0 8 9 0 8 103 0 1 1 3 97 0 3 3 42 77 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 77 0 4 4 5 97 0 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 2 1 0 1 2 0 128 0 0 0 8 9 0 8 103 0 4 0 5 4 5 101 0 1 1 3 97 0 3 3 42 77 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
45 45 0 0 45 56 45 55 51 48 0 44 0 43 20 35 42 35 18 34 36 12 8 29
CALL[ ]	/* CallFunction */";
};
width = 543;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (266,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(255,-12,o),
(341,33,o),
(366,69,q),
(368,0,l),
(389,0,l),
(323,-44,o),
(323,-106,qs),
(323,-157,o),
(398,-210,o),
(456,-210,qs),
(499,-210,o),
(543,-196,q),
(543,-120,l),
(504,-135,o),
(472,-135,qs),
(448,-135,o),
(420,-113,o),
(420,-94,qs),
(420,-76,o),
(451,-44,o),
(486,-26,qs),
(538,0,l),
(509,60,l),
(485,50,l),
(485,296,ls),
(485,393,o),
(370,508,o),
(268,508,qs),
(210,508,o),
(109,466,o),
(44,387,o),
(40,334,q),
(168,334,l),
(174,368,o),
(226,401,o),
(264,401,qs),
(308,401,o),
(356,346,o),
(356,296,q),
(238,296,ls),
(144,296,o),
(30,216,o),
(30,137,qs),
(30,92,o),
(76,24,o),
(154,-12,o),
(200,-12,qs)
);
},
{
closed = 1;
nodes = (
(201,91,o),
(160,122,o),
(160,151,qs),
(160,183,o),
(209,214,o),
(246,214,qs),
(356,214,l),
(356,210,ls),
(356,158,o),
(285,91,o),
(234,91,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
43 23 22 3 6 9 33 1 4 6 34 1 5 4 3 76 24 1 6 1 75
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
43 23 22 3 6 9 33 1 4 7 34 1 5 4 3 76 24 1 6 1 75
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 2 1 0 1 2 0 128 0 0 0 8 9 0 8 103 0 1 1 3 97 0 3 3 42 77 11 1 9 9 6 97 10 7 2 6 6 34 77 0 4 4 5 97 0 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 2 1 0 1 2 0 128 0 0 0 8 9 0 8 103 0 1 1 3 97 0 3 3 42 77 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 77 0 4 4 5 97 0 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 2 1 0 1 2 0 128 0 0 0 8 9 0 8 103 0 4 0 5 4 5 101 0 1 1 3 97 0 3 3 42 77 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
47 47 0 0 47 57 47 56 52 49 0 46 0 45 20 35 43 35 18 34 37 12 8 29
CALL[ ]	/* CallFunction */";
};
width = 522;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (269,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(268,-12,o),
(354,36,o),
(378,74,q),
(381,0,l),
(401,0,l),
(332,-45,o),
(332,-107,qs),
(332,-157,o),
(404,-208,o),
(460,-208,qs),
(499,-208,o),
(543,-194,q),
(543,-125,l),
(506,-140,o),
(474,-140,qs),
(449,-140,o),
(419,-116,o),
(419,-96,qs),
(419,-77,o),
(450,-44,o),
(485,-27,qs),
(539,0,l),
(512,54,l),
(485,42,l),
(485,299,ls),
(485,394,o),
(374,508,o),
(271,508,qs),
(215,508,o),
(115,467,o),
(51,389,o),
(47,336,q),
(161,336,l),
(167,375,o),
(225,413,o),
(268,413,qs),
(315,413,o),
(371,354,o),
(371,297,q),
(247,297,ls),
(153,297,o),
(37,218,o),
(37,138,qs),
(37,69,o),
(137,-12,o),
(211,-12,qs)
);
},
{
closed = 1;
nodes = (
(201,80,o),
(153,115,o),
(153,149,qs),
(153,186,o),
(211,221,o),
(255,221,qs),
(371,221,l),
(371,218,ls),
(371,160,o),
(295,80,o),
(238,80,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
42 22 21 3 6 9 32 1 4 6 33 1 5 4 3 76 23 1 6 1 75
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
42 22 21 3 6 9 32 1 4 7 33 1 5 4 3 76 23 1 6 1 75
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 2 1 0 1 2 0 128 0 0 0 8 9 0 8 103 0 1 1 3 97 0 3 3 42 77 11 1 9 9 6 97 10 7 2 6 6 34 77 0 4 4 5 97 0 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 2 1 0 1 2 0 128 0 0 0 8 9 0 8 103 0 1 1 3 97 0 3 3 42 77 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 77 0 4 4 5 97 0 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 2 1 0 1 2 0 128 0 0 0 8 9 0 8 103 0 4 0 5 4 5 101 0 1 1 3 97 0 3 3 42 77 0 6 6 34 77 11 1 9 9 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
46 46 0 0 46 56 46 55 51 48 0 45 0 44 20 35 43 35 18 34 36 12 8 29
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = aogonek;
unicode = 261;
},
{
glyphname = aring;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (271,766);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (161,0);
ref = uni030A;
}
);
width = 533;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (275,763);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (170,0);
ref = uni030A;
}
);
width = 543;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (266,769);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (152,0);
ref = uni030A;
}
);
width = 522;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (269,767);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (158,0);
ref = uni030A;
}
);
width = 529;
}
);
note = aring;
unicode = 229;
},
{
glyphname = atilde;
kernLeft = a;
kernRight = aacute;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (243,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (271,705);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (107,0);
ref = tildecomb;
}
);
width = 533;
},
{
anchors = (
{
name = bottom;
pos = (247,0);
},
{
name = ogonek;
pos = (539,0);
},
{
name = top;
pos = (275,705);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (124,0);
ref = tildecomb;
}
);
width = 543;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (266,704);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (90,0);
ref = tildecomb;
}
);
width = 522;
},
{
anchors = (
{
name = bottom;
pos = (241,0);
},
{
name = ogonek;
pos = (538,0);
},
{
name = top;
pos = (269,704);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = a;
},
{
alignment = -1;
pos = (101,0);
ref = tildecomb;
}
);
width = 529;
}
);
note = atilde;
unicode = 227;
},
{
glyphname = ae;
kernLeft = a;
kernRight = ae;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (454,0);
},
{
name = top;
pos = (454,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(363,-12,o),
(431,98,q),
(464,46,o),
(572,-12,o),
(637,-12,qs),
(721,-12,o),
(840,80,o),
(862,151,q),
(756,151,l),
(740,116,o),
(679,76,o),
(636,76,qs),
(579,76,o),
(499,156,o),
(495,224,q),
(873,224,l),
(875,271,ls),
(875,338,o),
(814,446,o),
(705,508,o),
(637,508,qs),
(582,508,o),
(488,466,o),
(456,427,q),
(430,466,o),
(338,508,o),
(277,508,qs),
(224,508,o),
(129,469,o),
(66,392,o),
(60,337,q),
(166,337,l),
(173,377,o),
(235,421,o),
(277,421,qs),
(327,421,o),
(387,359,o),
(387,297,q),
(252,297,ls),
(151,297,o),
(40,213,o),
(40,140,qs),
(40,71,o),
(147,-12,o),
(231,-12,qs)
);
},
{
closed = 1;
nodes = (
(201,74,o),
(152,115,o),
(152,149,qs),
(152,184,o),
(207,224,o),
(264,224,qs),
(384,224,l),
(384,210,l),
(376,153,o),
(297,74,o),
(243,74,qs)
);
},
{
closed = 1;
nodes = (
(497,297,l),
(506,356,o),
(584,421,o),
(638,421,qs),
(692,421,o),
(765,354,o),
(769,297,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 97 values pushed */
20 1 1 3 47 1 7 5 42 1 6 7 3 76 0 2 1 0 1 2 0 128 0 7 5 6 5 7 6 128 13 1 0 10 1 5 7 0 5 103 12 1 1 1 3 97 4 1 3 3 42 77 15 11 2 6 6 8 97 14 9 2 8 8 40 8 78 45 45 0 0 62 61 59 57 45 55 45 54 50 48 0 44 0 43 34 18 34 20 36 35 18 34 36 16 8 31
CALL[ ]	/* CallFunction */";
};
width = 907;
},
{
anchors = (
{
name = bottom;
pos = (457,0);
},
{
name = top;
pos = (457,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(305,-12,o),
(405,52,o),
(436,106,q),
(467,51,o),
(575,-12,o),
(641,-12,qs),
(722,-12,o),
(837,77,o),
(859,148,q),
(776,148,l),
(739,59,o),
(640,59,qs),
(598,59,o),
(528,102,o),
(486,181,o),
(484,232,q),
(869,232,l),
(871,278,ls),
(871,341,o),
(814,446,o),
(710,508,o),
(642,508,qs),
(584,508,o),
(487,461,o),
(455,417,q),
(431,460,o),
(339,508,o),
(277,508,qs),
(227,508,o),
(136,470,o),
(74,394,o),
(68,341,q),
(155,341,l),
(163,387,o),
(230,437,o),
(277,437,qs),
(332,437,o),
(399,366,o),
(399,297,q),
(261,297,ls),
(163,297,o),
(50,216,o),
(50,141,qs),
(50,70,o),
(153,-12,o),
(237,-12,qs)
);
},
{
closed = 1;
nodes = (
(195,59,o),
(138,107,o),
(138,146,qs),
(138,232,o),
(269,232,qs),
(398,232,l),
(398,212,l),
(394,171,o),
(350,101,o),
(282,59,o),
(243,59,qs)
);
},
{
closed = 1;
nodes = (
(485,297,l),
(493,363,o),
(582,437,o),
(642,437,qs),
(702,437,o),
(784,361,o),
(788,297,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 97 values pushed */
20 1 2 1 49 1 7 5 42 1 6 7 3 76 0 2 1 0 1 2 0 128 0 7 5 6 5 7 6 128 13 1 0 10 1 5 7 0 5 103 12 1 1 1 3 97 4 1 3 3 42 77 15 11 2 6 6 8 97 14 9 2 8 8 40 8 78 46 46 0 0 63 62 60 58 46 56 46 55 52 50 0 45 0 44 34 17 35 20 36 35 18 34 36 16 8 31
CALL[ ]	/* CallFunction */";
};
width = 913;
},
{
anchors = (
{
name = bottom;
pos = (451,0);
},
{
name = top;
pos = (451,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(357,-12,o),
(426,90,q),
(460,42,o),
(567,-12,o),
(632,-12,qs),
(719,-12,o),
(842,82,o),
(864,154,q),
(735,154,l),
(720,126,o),
(667,93,o),
(631,93,qs),
(581,93,o),
(511,158,o),
(506,216,q),
(876,216,l),
(878,264,ls),
(878,336,o),
(814,447,o),
(701,508,o),
(632,508,qs),
(581,508,o),
(489,470,o),
(456,436,q),
(428,471,o),
(336,508,o),
(277,508,qs),
(221,508,o),
(122,468,o),
(57,389,o),
(52,333,q),
(177,333,l),
(184,367,o),
(239,404,o),
(277,404,qs),
(321,404,o),
(375,351,o),
(375,296,q),
(242,296,ls),
(138,296,o),
(30,211,o),
(30,139,qs),
(30,70,o),
(141,-12,o),
(225,-12,qs)
);
},
{
closed = 1;
nodes = (
(208,88,o),
(165,123,o),
(165,152,qs),
(165,181,o),
(211,216,o),
(258,216,qs),
(370,216,l),
(370,207,l),
(361,156,o),
(292,88,o),
(243,88,qs)
);
},
{
closed = 1;
nodes = (
(508,296,l),
(517,348,o),
(586,404,o),
(633,404,qs),
(681,404,o),
(745,346,o),
(749,296,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
20 1 1 3 47 1 7 5 42 1 8 6 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
20 1 1 3 47 1 7 5 42 1 11 6 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 1 0 1 2 0 128 0 7 5 6 5 7 6 128 13 1 0 10 1 5 7 0 5 103 12 1 1 1 3 97 4 1 3 3 42 77 15 11 2 6 6 8 97 14 9 2 8 8 40 8 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 2 1 0 1 2 0 128 0 7 5 6 5 7 6 128 13 1 0 10 1 5 7 0 5 103 12 1 1 1 3 97 4 1 3 3 42 77 0 6 6 8 97 14 9 2 8 8 40 77 15 1 11 11 8 97 14 9 2 8 8 40 8 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
45 45 0 0 62 61 59 57 45 55 45 54 50 48 0 44 0 43 34 18 34 20 36 35 18 34 36 16 8 31
CALL[ ]	/* CallFunction */";
};
width = 901;
},
{
anchors = (
{
name = bottom;
pos = (453,0);
},
{
name = top;
pos = (453,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(361,-12,o),
(429,95,q),
(462,44,o),
(570,-12,o),
(635,-12,qs),
(720,-12,o),
(840,80,o),
(862,152,q),
(749,152,l),
(733,119,o),
(675,82,o),
(634,82,qs),
(579,82,o),
(503,157,o),
(499,221,q),
(874,221,l),
(876,269,ls),
(876,338,o),
(814,447,o),
(704,508,o),
(635,508,qs),
(582,508,o),
(488,467,o),
(456,430,q),
(429,468,o),
(337,508,o),
(277,508,qs),
(223,508,o),
(127,469,o),
(63,391,o),
(57,336,q),
(170,336,l),
(177,374,o),
(236,415,o),
(277,415,qs),
(325,415,o),
(383,356,o),
(383,296,q),
(248,296,ls),
(146,296,o),
(37,213,o),
(37,140,qs),
(37,70,o),
(145,-12,o),
(229,-12,qs)
);
},
{
closed = 1;
nodes = (
(203,78,o),
(156,118,o),
(156,150,qs),
(156,183,o),
(208,221,o),
(262,221,qs),
(379,221,l),
(379,209,l),
(370,154,o),
(295,78,o),
(243,78,qs)
);
},
{
closed = 1;
nodes = (
(500,296,l),
(509,353,o),
(584,415,o),
(636,415,qs),
(688,415,o),
(758,351,o),
(762,296,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 97 values pushed */
20 1 1 3 47 1 7 5 42 1 6 7 3 76 0 2 1 0 1 2 0 128 0 7 5 6 5 7 6 128 13 1 0 10 1 5 7 0 5 103 12 1 1 1 3 97 4 1 3 3 42 77 15 11 2 6 6 8 97 14 9 2 8 8 40 8 78 45 45 0 0 62 61 59 57 45 55 45 54 50 48 0 44 0 43 34 18 34 20 36 35 18 34 36 16 8 31
CALL[ ]	/* CallFunction */";
};
width = 905;
}
);
note = ae;
unicode = 230;
},
{
glyphname = aeacute;
kernLeft = a;
kernRight = ae;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (454,0);
},
{
name = top;
pos = (454,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = ae;
},
{
alignment = -1;
pos = (345,0);
ref = acutecomb;
}
);
width = 907;
},
{
anchors = (
{
name = bottom;
pos = (457,0);
},
{
name = top;
pos = (457,747);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = ae;
},
{
alignment = -1;
pos = (352,0);
ref = acutecomb;
}
);
width = 913;
},
{
anchors = (
{
name = bottom;
pos = (451,0);
},
{
name = top;
pos = (451,751);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = ae;
},
{
alignment = -1;
pos = (338,0);
ref = acutecomb;
}
);
width = 901;
},
{
anchors = (
{
name = bottom;
pos = (453,0);
},
{
name = top;
pos = (453,750);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = ae;
},
{
alignment = -1;
pos = (343,0);
ref = acutecomb;
}
);
width = 905;
}
);
note = aeacute;
unicode = 509;
},
{
glyphname = b;
kernLeft = b;
kernRight = b;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(408,-12,o),
(516,57,o),
(575,176,o),
(575,249,qs),
(575,323,o),
(516,440,o),
(408,508,o),
(337,508,qs),
(279,508,o),
(190,461,o),
(163,420,q),
(163,700,l),
(57,700,l),
(57,0,l),
(159,0,l),
(163,76,l),
(190,33,o),
(281,-12,o),
(337,-12,qs)
);
},
{
closed = 1;
nodes = (
(249,81,o),
(164,176,o),
(164,248,qs),
(164,322,o),
(248,416,o),
(315,416,qs),
(382,416,o),
(467,324,o),
(467,249,qs),
(467,176,o),
(383,81,o),
(315,81,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
7 1 4 2 2 1 0 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 1 33 77 0 4 4 2 97 0 2 2 42 77 7 1 5 5 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 1 33 77 0 4 4 2 97 0 2 2 42 77 0 0 0 34 77 7 1 5 5 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
19 19 0 0 19 30 19 29 25 23 0 18 0 17 35 17 19 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(408,-12,o),
(519,55,o),
(580,173,o),
(580,247,qs),
(580,322,o),
(520,441,o),
(409,508,o),
(335,508,qs),
(271,508,o),
(180,455,o),
(153,414,q),
(153,700,l),
(69,700,l),
(69,0,l),
(145,0,l),
(153,83,l),
(178,38,o),
(273,-12,o),
(334,-12,qs)
);
},
{
closed = 1;
nodes = (
(274,61,o),
(197,110,o),
(155,195,o),
(155,248,qs),
(155,331,o),
(249,435,o),
(325,435,qs),
(403,435,o),
(495,329,o),
(495,248,qs),
(495,165,o),
(401,61,o),
(325,61,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
7 2 2 5 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 1 33 77 0 4 4 2 97 0 2 2 42 77 7 1 5 5 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 1 33 77 0 4 4 2 97 0 2 2 42 77 0 0 0 34 77 7 1 5 5 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
19 19 0 0 19 31 19 30 25 23 0 18 0 17 35 17 19 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(408,-12,o),
(512,58,o),
(569,178,o),
(569,250,qs),
(569,322,o),
(513,440,o),
(408,508,o),
(339,508,qs),
(287,508,o),
(199,466,o),
(172,426,q),
(172,700,l),
(45,700,l),
(45,0,l),
(173,0,l),
(173,68,l),
(201,28,o),
(287,-12,o),
(339,-12,qs)
);
},
{
closed = 1;
nodes = (
(249,100,o),
(173,183,o),
(173,248,qs),
(173,313,o),
(247,396,o),
(305,396,qs),
(361,396,o),
(439,317,o),
(439,250,qs),
(439,187,o),
(364,100,o),
(305,100,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
7 1 4 2 2 1 0 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 1 33 77 0 4 4 2 97 0 2 2 42 77 7 1 5 5 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 1 33 77 0 4 4 2 97 0 2 2 42 77 0 0 0 34 77 7 1 5 5 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
19 19 0 0 19 30 19 29 25 23 0 18 0 17 35 17 19 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 598;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(407,-12,o),
(515,57,o),
(573,176,o),
(573,249,qs),
(573,322,o),
(515,440,o),
(408,508,o),
(338,508,qs),
(282,508,o),
(193,462,o),
(166,422,q),
(166,700,l),
(53,700,l),
(53,0,l),
(164,0,l),
(166,73,l),
(193,31,o),
(282,-12,o),
(337,-12,qs)
);
},
{
closed = 1;
nodes = (
(249,87,o),
(167,178,o),
(167,248,qs),
(167,319,o),
(248,409,o),
(312,409,qs),
(375,409,o),
(458,321,o),
(458,249,qs),
(458,179,o),
(377,87,o),
(312,87,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
7 1 4 2 2 1 0 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 1 33 77 0 4 4 2 97 0 2 2 42 77 7 1 5 5 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 1 33 77 0 4 4 2 97 0 2 2 42 77 0 0 0 34 77 7 1 5 5 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
19 19 0 0 19 30 19 29 25 23 0 18 0 17 35 17 19 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 608;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
kernLeft = c;
kernRight = c;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (287,0);
},
{
name = top;
pos = (285,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(376,-12,o),
(501,82,o),
(519,162,q),
(407,162,l),
(397,121,o),
(333,78,o),
(287,78,qs),
(223,78,o),
(147,174,o),
(147,248,qs),
(147,321,o),
(220,418,o),
(287,418,qs),
(333,418,o),
(398,372,o),
(407,335,q),
(519,335,l),
(500,417,o),
(377,508,o),
(288,508,qs),
(214,508,o),
(101,442,o),
(39,323,o),
(39,248,qs),
(39,172,o),
(102,53,o),
(216,-12,o),
(288,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 42 77 0 3 3 5 97 6 1 5 5 40 5 78 0 0 0 27 0 26 18 36 34 18 38 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 557;
},
{
anchors = (
{
name = bottom;
pos = (296,0);
},
{
name = top;
pos = (293,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(384,-12,o),
(507,81,o),
(522,157,q),
(436,157,l),
(426,111,o),
(349,59,o),
(296,59,qs),
(249,59,o),
(176,107,o),
(134,193,o),
(134,248,qs),
(134,299,o),
(172,385,o),
(245,436,o),
(296,436,qs),
(349,436,o),
(426,384,o),
(436,339,q),
(522,339,l),
(506,416,o),
(385,508,o),
(297,508,qs),
(225,508,o),
(111,442,o),
(48,324,o),
(48,248,qs),
(48,171,o),
(113,53,o),
(227,-12,o),
(297,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 42 77 0 3 3 5 97 6 1 5 5 40 5 78 0 0 0 29 0 28 18 38 34 18 38 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (278,0);
},
{
name = top;
pos = (276,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(368,-12,o),
(495,82,o),
(515,166,q),
(378,166,l),
(354,97,o),
(277,97,qs),
(219,97,o),
(159,182,o),
(159,248,qs),
(159,314,o),
(219,400,o),
(277,400,qs),
(316,400,o),
(368,361,o),
(378,330,q),
(515,330,l),
(494,417,o),
(369,508,o),
(278,508,qs),
(203,508,o),
(90,441,o),
(29,323,o),
(29,248,qs),
(29,172,o),
(91,54,o),
(204,-12,o),
(278,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 42 77 0 3 3 5 97 6 1 5 5 40 5 78 0 0 0 26 0 25 17 36 34 18 38 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (284,0);
},
{
name = top;
pos = (282,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(373,-12,o),
(499,82,o),
(517,163,q),
(397,163,l),
(386,124,o),
(327,84,o),
(283,84,qs),
(221,84,o),
(151,176,o),
(151,248,qs),
(151,319,o),
(219,412,o),
(283,412,qs),
(327,412,o),
(388,368,o),
(397,333,q),
(517,333,l),
(498,416,o),
(374,508,o),
(284,508,qs),
(210,508,o),
(97,441,o),
(35,323,o),
(35,248,qs),
(35,172,o),
(98,54,o),
(211,-12,o),
(284,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 42 77 0 3 3 5 97 6 1 5 5 40 5 78 0 0 0 27 0 26 18 36 34 18 38 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
note = c;
unicode = 99;
},
{
glyphname = cacute;
kernLeft = c;
kernRight = c;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (287,0);
},
{
name = top;
pos = (285,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (176,0);
ref = acutecomb;
}
);
width = 557;
},
{
anchors = (
{
name = bottom;
pos = (296,0);
},
{
name = top;
pos = (293,747);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (188,0);
ref = acutecomb;
}
);
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (278,0);
},
{
name = top;
pos = (276,751);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (163,0);
ref = acutecomb;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (284,0);
},
{
name = top;
pos = (282,750);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (171,0);
ref = acutecomb;
}
);
width = 553;
}
);
note = cacute;
unicode = 263;
},
{
glyphname = ccaron;
kernLeft = c;
kernRight = c;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (287,0);
},
{
name = top;
pos = (285,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (143,0);
ref = uni030C;
}
);
width = 557;
},
{
anchors = (
{
name = bottom;
pos = (296,0);
},
{
name = top;
pos = (293,733);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (156,0);
ref = uni030C;
}
);
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (278,0);
},
{
name = top;
pos = (276,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (130,0);
ref = uni030C;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (284,0);
},
{
name = top;
pos = (282,728);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (139,0);
ref = uni030C;
}
);
width = 553;
}
);
note = ccaron;
unicode = 269;
},
{
glyphname = ccedilla;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (287,-261);
},
{
name = top;
pos = (285,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(322,-261,ls),
(377,-261,o),
(448,-206,o),
(448,-157,qs),
(448,-107,o),
(375,-55,o),
(318,-56,q),
(318,-10,l),
(395,-2,o),
(503,89,o),
(519,162,q),
(407,162,l),
(397,121,o),
(333,78,o),
(287,78,qs),
(223,78,o),
(147,174,o),
(147,248,qs),
(147,321,o),
(220,418,o),
(287,418,qs),
(333,418,o),
(398,372,o),
(407,335,q),
(519,335,l),
(500,417,o),
(377,508,o),
(288,508,qs),
(214,508,o),
(101,442,o),
(39,323,o),
(39,248,qs),
(39,178,o),
(92,67,o),
(187,-2,o),
(250,-10,q),
(250,-115,l),
(305,-115,ls),
(366,-115,o),
(366,-155,qs),
(366,-197,o),
(305,-197,qs),
(203,-197,l),
(203,-261,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
35 7 2 7 5 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 5 7 7 5 112 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 42 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 5 7 4 5 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 42 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 20 18 36 34 18 40 34 32 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 557;
},
{
anchors = (
{
name = bottom;
pos = (296,-259);
},
{
name = top;
pos = (293,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(329,-259,ls),
(383,-259,o),
(450,-205,o),
(450,-159,qs),
(450,-112,o),
(380,-62,o),
(321,-63,q),
(321,-11,l),
(399,-4,o),
(508,87,o),
(522,157,q),
(436,157,l),
(426,111,o),
(349,59,o),
(296,59,qs),
(249,59,o),
(176,107,o),
(134,193,o),
(134,248,qs),
(134,299,o),
(172,385,o),
(245,436,o),
(296,436,qs),
(349,436,o),
(426,384,o),
(436,339,q),
(522,339,l),
(506,416,o),
(385,508,o),
(297,508,qs),
(225,508,o),
(111,442,o),
(48,324,o),
(48,248,qs),
(48,177,o),
(104,65,o),
(203,-3,o),
(265,-10,q),
(265,-113,l),
(314,-113,ls),
(382,-113,o),
(382,-158,qs),
(382,-206,o),
(314,-206,qs),
(222,-206,l),
(222,-259,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
37 7 2 7 5 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 5 7 7 5 112 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 42 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 5 7 4 5 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 42 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 20 18 38 34 18 40 34 32 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (278,-263);
},
{
name = top;
pos = (276,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(315,-263,ls),
(370,-263,o),
(445,-207,o),
(445,-155,qs),
(445,-103,o),
(371,-48,o),
(315,-50,q),
(315,-10,l),
(391,-1,o),
(497,91,o),
(515,166,q),
(378,166,l),
(354,97,o),
(277,97,qs),
(219,97,o),
(159,182,o),
(159,248,qs),
(159,314,o),
(219,400,o),
(277,400,qs),
(316,400,o),
(368,361,o),
(378,330,q),
(515,330,l),
(494,417,o),
(369,508,o),
(278,508,qs),
(203,508,o),
(90,441,o),
(29,323,o),
(29,248,qs),
(29,145,o),
(141,5,o),
(235,-9,q),
(235,-118,l),
(296,-118,ls),
(349,-118,o),
(349,-153,qs),
(349,-189,o),
(296,-189,qs),
(184,-189,l),
(184,-263,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
33 7 2 7 5 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 5 7 7 5 112 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 42 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 5 7 4 5 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 42 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 20 17 36 34 18 39 34 32 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (284,-262);
},
{
name = top;
pos = (282,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(320,-262,ls),
(375,-262,o),
(447,-206,o),
(447,-156,qs),
(447,-106,o),
(374,-53,o),
(317,-54,q),
(317,-10,l),
(394,-2,o),
(501,90,o),
(517,163,q),
(397,163,l),
(386,124,o),
(327,84,o),
(283,84,qs),
(221,84,o),
(151,176,o),
(151,248,qs),
(151,319,o),
(219,412,o),
(283,412,qs),
(327,412,o),
(388,368,o),
(397,333,q),
(517,333,l),
(498,416,o),
(374,508,o),
(284,508,qs),
(210,508,o),
(97,441,o),
(35,323,o),
(35,248,qs),
(35,144,o),
(150,4,o),
(245,-9,q),
(245,-116,l),
(302,-116,ls),
(360,-116,o),
(360,-155,qs),
(360,-195,o),
(302,-195,qs),
(197,-195,l),
(197,-262,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
34 7 2 7 5 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 5 7 7 5 112 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 42 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 5 7 4 5 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 4 4 2 97 0 2 2 42 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 20 18 36 34 18 39 34 32 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
note = ccedilla;
unicode = 231;
},
{
glyphname = cdotaccent;
kernLeft = c;
kernRight = c;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (287,0);
},
{
name = top;
pos = (285,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (214,0);
ref = uni0307;
}
);
width = 557;
},
{
anchors = (
{
name = bottom;
pos = (296,0);
},
{
name = top;
pos = (293,720);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (235,0);
ref = uni0307;
}
);
width = 570;
},
{
anchors = (
{
name = bottom;
pos = (278,0);
},
{
name = top;
pos = (276,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (193,0);
ref = uni0307;
}
);
width = 544;
},
{
anchors = (
{
name = bottom;
pos = (284,0);
},
{
name = top;
pos = (282,724);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = c;
},
{
alignment = -1;
pos = (207,0);
ref = uni0307;
}
);
width = 553;
}
);
note = cdotaccent;
unicode = 267;
},
{
glyphname = d;
kernLeft = c;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (307,0);
},
{
name = top;
pos = (307,992);
},
{
name = topright;
pos = (593,992);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(334,-12,o),
(425,37,o),
(450,77,q),
(454,0,l),
(557,0,l),
(557,700,l),
(450,700,l),
(450,422,l),
(422,463,o),
(332,508,o),
(277,508,qs),
(205,508,o),
(97,440,o),
(39,322,o),
(39,250,qs),
(39,177,o),
(97,58,o),
(205,-12,o),
(277,-12,qs)
);
},
{
closed = 1;
nodes = (
(256,81,o),
(187,123,o),
(147,200,o),
(147,249,qs),
(147,323,o),
(232,416,o),
(297,416,qs),
(362,416,o),
(449,326,o),
(449,248,qs),
(449,175,o),
(367,81,o),
(298,81,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 4 0 15 1 2 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 1 33 77 0 4 4 0 97 0 0 0 42 77 7 1 5 5 2 97 6 3 2 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 1 33 77 0 4 4 0 97 0 0 0 42 77 0 2 2 34 77 7 1 5 5 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
19 19 0 0 19 31 19 30 25 23 0 18 0 17 17 19 38 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
anchors = (
{
name = bottom;
pos = (314,0);
},
{
name = top;
pos = (314,992);
},
{
name = topright;
pos = (608,992);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(357,-12,o),
(449,41,o),
(476,82,q),
(484,0,l),
(560,0,l),
(560,700,l),
(476,700,l),
(476,413,l),
(450,458,o),
(355,508,o),
(295,508,qs),
(219,508,o),
(107,440,o),
(48,322,o),
(48,249,qs),
(48,176,o),
(108,57,o),
(220,-12,o),
(294,-12,qs)
);
},
{
closed = 1;
nodes = (
(257,61,o),
(179,106,o),
(134,191,o),
(134,248,qs),
(134,304,o),
(178,389,o),
(255,435,o),
(303,435,qs),
(382,435,o),
(473,330,o),
(473,248,qs),
(473,167,o),
(383,61,o),
(303,61,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
15 10 2 5 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 1 33 77 0 4 4 0 97 0 0 0 42 77 7 1 5 5 2 97 6 3 2 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 1 33 77 0 4 4 0 97 0 0 0 42 77 0 2 2 34 77 7 1 5 5 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
19 19 0 0 19 32 19 31 25 23 0 18 0 17 17 19 38 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
anchors = (
{
name = bottom;
pos = (299,0);
},
{
name = top;
pos = (299,992);
},
{
name = topright;
pos = (578,992);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(310,-12,o),
(400,31,o),
(424,71,q),
(424,0,l),
(553,0,l),
(553,700,l),
(424,700,l),
(424,430,l),
(394,467,o),
(307,508,o),
(259,508,qs),
(190,508,o),
(86,439,o),
(29,322,o),
(29,250,qs),
(29,177,o),
(85,58,o),
(189,-12,o),
(259,-12,qs)
);
},
{
closed = 1;
nodes = (
(235,100,o),
(159,186,o),
(159,250,qs),
(159,314,o),
(233,396,o),
(291,396,qs),
(323,396,o),
(385,365,o),
(425,298,o),
(425,248,qs),
(425,183,o),
(351,100,o),
(292,100,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 4 0 15 1 2 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 1 33 77 0 4 4 0 97 0 0 0 42 77 7 1 5 5 2 97 6 3 2 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 1 33 77 0 4 4 0 97 0 0 0 42 77 0 2 2 34 77 7 1 5 5 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
19 19 0 0 19 31 19 30 26 24 0 18 0 17 17 19 38 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 598;
},
{
anchors = (
{
name = bottom;
pos = (304,0);
},
{
name = top;
pos = (304,992);
},
{
name = topright;
pos = (588,992);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(326,-12,o),
(417,35,o),
(441,75,q),
(444,0,l),
(555,0,l),
(555,700,l),
(441,700,l),
(441,424,l),
(413,464,o),
(324,508,o),
(271,508,qs),
(200,508,o),
(93,440,o),
(35,322,o),
(35,250,qs),
(35,177,o),
(92,58,o),
(199,-12,o),
(271,-12,qs)
);
},
{
closed = 1;
nodes = (
(255,87,o),
(189,128,o),
(151,202,o),
(151,249,qs),
(151,320,o),
(232,409,o),
(295,409,qs),
(334,409,o),
(401,372,o),
(441,299,o),
(441,248,qs),
(441,178,o),
(362,87,o),
(296,87,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 4 0 15 1 2 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 1 33 77 0 4 4 0 97 0 0 0 42 77 7 1 5 5 2 97 6 3 2 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 1 33 77 0 4 4 0 97 0 0 0 42 77 0 2 2 34 77 7 1 5 5 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
19 19 0 0 19 32 19 31 26 24 0 18 0 17 17 19 38 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 608;
}
);
note = d;
unicode = 100;
},
{
glyphname = dcaron;
kernLeft = c;
kernRight = dcaron;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (307,0);
},
{
name = top;
pos = (307,992);
},
{
name = topright;
pos = (593,992);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = d;
},
{
alignment = -1;
pos = (593,0);
ref = uni030C.alt;
}
);
width = 613;
},
{
anchors = (
{
name = bottom;
pos = (314,0);
},
{
name = top;
pos = (314,992);
},
{
name = topright;
pos = (608,992);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = d;
},
{
alignment = -1;
pos = (608,0);
ref = uni030C.alt;
}
);
width = 628;
},
{
anchors = (
{
name = bottom;
pos = (299,0);
},
{
name = top;
pos = (299,992);
},
{
name = topright;
pos = (578,992);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = d;
},
{
alignment = -1;
pos = (578,0);
ref = uni030C.alt;
}
);
width = 598;
},
{
anchors = (
{
name = bottom;
pos = (304,0);
},
{
name = top;
pos = (304,992);
},
{
name = topright;
pos = (588,992);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = d;
},
{
alignment = -1;
pos = (588,0);
ref = uni030C.alt;
}
);
width = 608;
}
);
note = dcaron;
unicode = 271;
},
{
glyphname = dcroat;
kernLeft = c;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(334,-12,o),
(425,37,o),
(450,77,q),
(454,0,l),
(557,0,l),
(557,565,l),
(600,565,l),
(600,641,l),
(557,641,l),
(557,700,l),
(450,700,l),
(450,641,l),
(287,641,l),
(287,565,l),
(450,565,l),
(450,422,l),
(422,463,o),
(332,508,o),
(277,508,qs),
(205,508,o),
(97,440,o),
(39,322,o),
(39,250,qs),
(39,177,o),
(97,58,o),
(205,-12,o),
(277,-12,qs)
);
},
{
closed = 1;
nodes = (
(147,323,o),
(232,416,o),
(297,416,qs),
(362,416,o),
(449,326,o),
(449,248,qs),
(449,175,o),
(367,81,o),
(298,81,qs),
(256,81,o),
(187,123,o),
(147,200,o),
(147,249,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 9 0 23 1 6 8 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
4 1 2 5 1 1 0 2 1 103 0 3 3 33 77 0 9 9 0 97 0 0 0 42 77 0 8 8 6 97 10 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
4 1 2 5 1 1 0 2 1 103 0 3 3 33 77 0 9 9 0 97 0 0 0 42 77 0 6 6 34 77 0 8 8 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
0 0 37 35 31 29 0 26 0 25 17 17 17 17 17 19 38 11 8 29
CALL[ ]	/* CallFunction */";
};
width = 614;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(357,-12,o),
(449,41,o),
(476,82,q),
(484,0,l),
(560,0,l),
(560,571,l),
(607,571,l),
(607,634,l),
(560,634,l),
(560,700,l),
(476,700,l),
(476,634,l),
(305,634,l),
(305,571,l),
(476,571,l),
(476,413,l),
(450,458,o),
(355,508,o),
(295,508,qs),
(219,508,o),
(107,440,o),
(48,322,o),
(48,249,qs),
(48,176,o),
(108,57,o),
(220,-12,o),
(294,-12,qs)
);
},
{
closed = 1;
nodes = (
(134,304,o),
(178,389,o),
(255,435,o),
(303,435,qs),
(382,435,o),
(473,330,o),
(473,248,qs),
(473,167,o),
(383,61,o),
(303,61,qs),
(257,61,o),
(179,106,o),
(134,191,o),
(134,248,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
23 10 2 8 9 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
4 1 2 5 1 1 0 2 1 103 0 3 3 33 77 0 9 9 0 97 0 0 0 42 77 0 8 8 6 97 10 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
4 1 2 5 1 1 0 2 1 103 0 3 3 33 77 0 9 9 0 97 0 0 0 42 77 0 6 6 34 77 0 8 8 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
0 0 37 35 31 29 0 26 0 25 17 17 17 17 17 19 38 11 8 29
CALL[ ]	/* CallFunction */";
};
width = 629;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(310,-12,o),
(400,31,o),
(424,71,q),
(424,0,l),
(553,0,l),
(553,558,l),
(592,558,l),
(592,648,l),
(553,648,l),
(553,700,l),
(424,700,l),
(424,648,l),
(269,648,l),
(269,558,l),
(424,558,l),
(424,430,l),
(394,467,o),
(307,508,o),
(259,508,qs),
(190,508,o),
(86,439,o),
(29,322,o),
(29,250,qs),
(29,177,o),
(85,58,o),
(189,-12,o),
(259,-12,qs)
);
},
{
closed = 1;
nodes = (
(159,314,o),
(233,396,o),
(291,396,qs),
(323,396,o),
(385,365,o),
(425,298,o),
(425,248,qs),
(425,183,o),
(351,100,o),
(292,100,qs),
(235,100,o),
(159,186,o),
(159,250,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 9 0 23 1 6 8 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
4 1 2 5 1 1 0 2 1 103 0 3 3 33 77 0 9 9 0 97 0 0 0 42 77 0 8 8 6 97 10 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
4 1 2 5 1 1 0 2 1 103 0 3 3 33 77 0 9 9 0 97 0 0 0 42 77 0 6 6 34 77 0 8 8 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
0 0 37 35 30 28 0 26 0 25 17 17 17 17 17 19 38 11 8 29
CALL[ ]	/* CallFunction */";
};
width = 598;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(326,-12,o),
(417,35,o),
(441,75,q),
(444,0,l),
(555,0,l),
(555,562,l),
(597,562,l),
(597,643,l),
(555,643,l),
(555,700,l),
(441,700,l),
(441,643,l),
(281,643,l),
(281,562,l),
(441,562,l),
(441,424,l),
(413,464,o),
(324,508,o),
(271,508,qs),
(200,508,o),
(93,440,o),
(35,322,o),
(35,250,qs),
(35,177,o),
(92,58,o),
(199,-12,o),
(271,-12,qs)
);
},
{
closed = 1;
nodes = (
(151,320,o),
(232,409,o),
(295,409,qs),
(334,409,o),
(401,372,o),
(441,299,o),
(441,248,qs),
(441,178,o),
(362,87,o),
(296,87,qs),
(255,87,o),
(189,128,o),
(151,202,o),
(151,249,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 9 0 23 1 6 8 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
4 1 2 5 1 1 0 2 1 103 0 3 3 33 77 0 9 9 0 97 0 0 0 42 77 0 8 8 6 97 10 7 2 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
4 1 2 5 1 1 0 2 1 103 0 3 3 33 77 0 9 9 0 97 0 0 0 42 77 0 6 6 34 77 0 8 8 7 97 10 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
0 0 38 36 31 29 0 26 0 25 17 17 17 17 17 19 38 11 8 29
CALL[ ]	/* CallFunction */";
};
width = 608;
}
);
note = dcroat;
unicode = 273;
},
{
glyphname = eth;
kernLeft = c;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(382,-12,o),
(443,25,qs),
(506,62,o),
(577,194,o),
(577,281,qs),
(577,371,o),
(517,540,o),
(457,614,q),
(537,642,l),
(537,709,l),
(411,666,l),
(394,684,o),
(374,700,q),
(271,700,l),
(306,672,o),
(334,640,q),
(248,611,l),
(248,544,l),
(378,588,l),
(432,517,o),
(459,443,q),
(397,505,o),
(298,505,qs),
(225,505,o),
(166,472,qs),
(107,438,o),
(39,320,o),
(39,247,qs),
(39,174,o),
(73,116,qs),
(108,57,o),
(229,-12,o),
(305,-12,qs)
);
},
{
closed = 1;
nodes = (
(264,79,o),
(191,122,o),
(148,199,o),
(148,249,qs),
(148,295,o),
(188,372,o),
(261,416,o),
(308,416,qs),
(348,416,o),
(422,377,o),
(469,301,o),
(469,248,qs),
(469,201,o),
(429,124,o),
(355,79,o),
(308,79,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
24 23 21 16 15 14 13 7 0 1 11 1 3 0 2 76 22 1 1 74 0 1 1 33 77 0 3 3 0 97 0 0 0 42 77 6 1 4 4 2 97 5 1 2 2 40 2 78 33 33 0 0 33 48 33 47 41 39 0 32 0 31 24 40 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 616;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(386,-12,o),
(447,24,qs),
(508,61,o),
(578,190,o),
(578,272,qs),
(578,468,o),
(449,619,q),
(539,651,l),
(539,708,l),
(408,663,l),
(387,684,o),
(367,700,q),
(283,700,l),
(320,669,o),
(347,641,q),
(252,608,l),
(252,551,l),
(386,598,l),
(451,518,o),
(483,429,q),
(451,469,o),
(357,507,o),
(305,507,qs),
(234,507,o),
(175,474,qs),
(116,440,o),
(48,321,o),
(48,247,qs),
(48,175,o),
(82,117,qs),
(117,57,o),
(235,-12,o),
(311,-12,qs)
);
},
{
closed = 1;
nodes = (
(266,59,o),
(184,105,o),
(134,191,o),
(134,248,qs),
(134,299,o),
(179,385,o),
(260,436,o),
(313,436,qs),
(359,436,o),
(442,391,o),
(492,305,o),
(492,248,qs),
(492,197,o),
(447,111,o),
(366,59,o),
(313,59,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
25 24 22 17 16 15 14 7 0 1 12 1 4 3 2 76 23 1 1 74 0 1 1 33 77 0 3 3 0 97 0 0 0 42 77 6 1 4 4 2 97 5 1 2 2 40 2 78 33 33 0 0 33 48 33 47 41 39 0 32 0 31 25 40 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 626;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(377,-12,o),
(439,25,qs),
(503,63,o),
(576,199,o),
(576,289,qs),
(576,370,o),
(520,536,o),
(465,609,q),
(535,632,l),
(535,709,l),
(413,669,l),
(380,700,l),
(259,700,l),
(296,668,o),
(321,639,q),
(244,614,l),
(244,537,l),
(370,578,l),
(412,515,o),
(434,456,q),
(371,503,o),
(290,503,qs),
(216,503,o),
(157,470,qs),
(97,436,o),
(29,319,o),
(29,246,qs),
(29,174,o),
(64,115,qs),
(99,56,o),
(222,-12,o),
(299,-12,qs)
);
},
{
closed = 1;
nodes = (
(242,99,o),
(161,185,o),
(161,249,qs),
(161,313,o),
(240,395,o),
(302,395,qs),
(337,395,o),
(403,364,o),
(446,297,o),
(446,247,qs),
(446,182,o),
(367,99,o),
(303,99,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
23 22 20 16 15 14 13 7 0 1 11 1 3 0 2 76 21 1 1 74 0 1 1 33 77 0 3 3 0 97 0 0 0 42 77 6 1 4 4 2 97 5 1 2 2 40 2 78 32 32 0 0 32 44 32 43 39 37 0 31 0 30 24 40 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 605;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(380,-12,o),
(442,25,qs),
(505,62,o),
(577,196,o),
(577,283,qs),
(577,370,o),
(518,538,o),
(460,612,q),
(536,638,l),
(536,709,l),
(411,667,l),
(406,673,o),
(376,700,q),
(267,700,l),
(307,666,o),
(330,640,q),
(247,612,l),
(247,542,l),
(375,585,l),
(425,518,o),
(450,447,q),
(389,504,o),
(295,504,qs),
(222,504,o),
(163,471,qs),
(103,437,o),
(35,320,o),
(35,246,qs),
(35,175,o),
(70,116,qs),
(105,56,o),
(226,-12,o),
(303,-12,qs)
);
},
{
closed = 1;
nodes = (
(264,86,o),
(193,127,o),
(152,202,o),
(152,249,qs),
(152,294,o),
(191,367,o),
(261,409,o),
(306,409,qs),
(345,409,o),
(416,373,o),
(461,300,o),
(461,247,qs),
(461,178,o),
(375,86,o),
(306,86,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
24 23 21 16 15 14 13 7 0 1 11 1 3 0 2 76 22 1 1 74 0 1 1 33 77 0 3 3 0 97 0 0 0 42 77 6 1 4 4 2 97 5 1 2 2 40 2 78 33 33 0 0 33 47 33 46 40 38 0 32 0 31 24 40 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 612;
}
);
note = eth;
unicode = 240;
},
{
glyphname = e;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (285,0);
},
{
name = ogonek;
pos = (393,10);
},
{
name = top;
pos = (283,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(375,-12,o),
(493,79,o),
(515,151,q),
(405,151,l),
(390,115,o),
(329,76,o),
(286,76,qs),
(226,76,o),
(149,156,o),
(145,220,q),
(526,220,l),
(529,247,o),
(529,268,qs),
(529,336,o),
(468,446,o),
(358,508,o),
(288,508,qs),
(214,508,o),
(101,443,o),
(39,326,o),
(39,248,qs),
(39,172,o),
(102,54,o),
(214,-12,o),
(287,-12,qs)
);
},
{
closed = 1;
nodes = (
(146,295,l),
(153,355,o),
(232,420,o),
(285,420,qs),
(342,420,o),
(419,352,o),
(421,295,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
0 3 1 2 1 3 2 128 0 6 0 1 3 6 1 103 0 5 5 0 97 0 0 0 42 77 0 2 2 4 97 7 1 4 4 40 4 78 0 0 31 30 28 26 0 24 0 23 18 34 21 38 8 8 26
CALL[ ]	/* CallFunction */";
};
width = 561;
},
{
anchors = (
{
name = bottom;
pos = (292,0);
},
{
name = ogonek;
pos = (397,10);
},
{
name = top;
pos = (289,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(377,-12,o),
(492,76,o),
(513,148,q),
(430,148,l),
(414,106,o),
(343,59,o),
(292,59,qs),
(224,59,o),
(135,155,o),
(131,229,q),
(526,229,l),
(527,276,ls),
(527,341,o),
(468,447,o),
(362,508,o),
(294,508,qs),
(221,508,o),
(109,443,o),
(48,325,o),
(48,248,qs),
(48,170,o),
(112,52,o),
(223,-12,o),
(292,-12,qs)
);
},
{
closed = 1;
nodes = (
(132,294,l),
(139,361,o),
(229,437,o),
(292,437,qs),
(356,437,o),
(441,360,o),
(444,294,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
0 3 1 2 1 3 2 128 0 6 0 1 3 6 1 103 0 5 5 0 97 0 0 0 42 77 0 2 2 4 97 7 1 4 4 40 4 78 0 0 30 29 27 25 0 23 0 22 18 34 20 38 8 8 26
CALL[ ]	/* CallFunction */";
};
width = 569;
},
{
anchors = (
{
name = bottom;
pos = (277,0);
},
{
name = ogonek;
pos = (388,10);
},
{
name = top;
pos = (277,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(373,-12,o),
(494,82,o),
(517,154,q),
(380,154,l),
(350,93,o),
(279,93,qs),
(228,93,o),
(163,157,o),
(158,210,q),
(526,210,l),
(530,230,o),
(530,259,qs),
(530,331,o),
(467,445,o),
(355,508,o),
(282,508,qs),
(207,508,o),
(92,443,o),
(29,326,o),
(29,248,qs),
(29,173,o),
(91,55,o),
(206,-12,o),
(282,-12,qs)
);
},
{
closed = 1;
nodes = (
(159,295,l),
(167,349,o),
(233,403,o),
(278,403,qs),
(328,403,o),
(397,344,o),
(398,295,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
0 3 1 2 1 3 2 128 0 6 0 1 3 6 1 103 0 5 5 0 97 0 0 0 42 77 0 2 2 4 97 7 1 4 4 40 4 78 0 0 30 29 27 25 0 23 0 22 17 34 21 38 8 8 26
CALL[ ]	/* CallFunction */";
};
width = 553;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (391,10);
},
{
name = top;
pos = (281,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(374,-12,o),
(493,80,o),
(516,152,q),
(397,152,l),
(365,82,o),
(283,82,qs),
(227,82,o),
(154,156,o),
(149,216,q),
(526,216,l),
(529,243,o),
(529,265,qs),
(529,334,o),
(467,445,o),
(357,508,o),
(286,508,qs),
(212,508,o),
(98,443,o),
(35,326,o),
(35,248,qs),
(35,173,o),
(98,54,o),
(211,-12,o),
(285,-12,qs)
);
},
{
closed = 1;
nodes = (
(150,295,l),
(157,353,o),
(232,414,o),
(283,414,qs),
(337,414,o),
(412,349,o),
(413,295,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
0 3 1 2 1 3 2 128 0 6 0 1 3 6 1 103 0 5 5 0 97 0 0 0 42 77 0 2 2 4 97 7 1 4 4 40 4 78 0 0 30 29 27 25 0 23 0 22 17 34 21 38 8 8 26
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = e;
unicode = 101;
},
{
glyphname = eacute;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (285,0);
},
{
name = ogonek;
pos = (393,10);
},
{
name = top;
pos = (283,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (174,0);
ref = acutecomb;
}
);
width = 561;
},
{
anchors = (
{
name = bottom;
pos = (292,0);
},
{
name = ogonek;
pos = (397,10);
},
{
name = top;
pos = (289,747);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (184,0);
ref = acutecomb;
}
);
width = 569;
},
{
anchors = (
{
name = bottom;
pos = (277,0);
},
{
name = ogonek;
pos = (388,10);
},
{
name = top;
pos = (277,751);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (164,0);
ref = acutecomb;
}
);
width = 553;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (391,10);
},
{
name = top;
pos = (281,750);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (171,0);
ref = acutecomb;
}
);
width = 558;
}
);
note = eacute;
unicode = 233;
},
{
glyphname = ebreve;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (285,0);
},
{
name = ogonek;
pos = (393,10);
},
{
name = top;
pos = (283,722);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (135,0);
ref = uni0306;
}
);
width = 561;
},
{
anchors = (
{
name = bottom;
pos = (292,0);
},
{
name = ogonek;
pos = (397,10);
},
{
name = top;
pos = (289,732);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (148,0);
ref = uni0306;
}
);
width = 569;
},
{
anchors = (
{
name = bottom;
pos = (277,0);
},
{
name = ogonek;
pos = (388,10);
},
{
name = top;
pos = (277,712);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (121,0);
ref = uni0306;
}
);
width = 553;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (391,10);
},
{
name = top;
pos = (281,719);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (130,0);
ref = uni0306;
}
);
width = 558;
}
);
note = ebreve;
unicode = 277;
},
{
glyphname = ecaron;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (285,0);
},
{
name = ogonek;
pos = (393,10);
},
{
name = top;
pos = (283,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (142,0);
ref = uni030C;
}
);
width = 561;
},
{
anchors = (
{
name = bottom;
pos = (292,0);
},
{
name = ogonek;
pos = (397,10);
},
{
name = top;
pos = (289,733);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (152,0);
ref = uni030C;
}
);
width = 569;
},
{
anchors = (
{
name = bottom;
pos = (277,0);
},
{
name = ogonek;
pos = (388,10);
},
{
name = top;
pos = (277,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (131,0);
ref = uni030C;
}
);
width = 553;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (391,10);
},
{
name = top;
pos = (281,728);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (138,0);
ref = uni030C;
}
);
width = 558;
}
);
note = ecaron;
unicode = 283;
},
{
glyphname = ecircumflex;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (285,0);
},
{
name = ogonek;
pos = (393,10);
},
{
name = top;
pos = (283,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (142,0);
ref = uni0302;
}
);
width = 561;
},
{
anchors = (
{
name = bottom;
pos = (292,0);
},
{
name = ogonek;
pos = (397,10);
},
{
name = top;
pos = (289,733);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (152,0);
ref = uni0302;
}
);
width = 569;
},
{
anchors = (
{
name = bottom;
pos = (277,0);
},
{
name = ogonek;
pos = (388,10);
},
{
name = top;
pos = (277,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (131,0);
ref = uni0302;
}
);
width = 553;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (391,10);
},
{
name = top;
pos = (281,728);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (138,0);
ref = uni0302;
}
);
width = 558;
}
);
note = ecircumflex;
unicode = 234;
},
{
glyphname = edieresis;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (285,0);
},
{
name = ogonek;
pos = (393,10);
},
{
name = top;
pos = (283,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (113,0);
ref = uni0308;
}
);
width = 561;
},
{
anchors = (
{
name = bottom;
pos = (292,0);
},
{
name = ogonek;
pos = (397,10);
},
{
name = top;
pos = (289,720);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (142,0);
ref = uni0308;
}
);
width = 569;
},
{
anchors = (
{
name = bottom;
pos = (277,0);
},
{
name = ogonek;
pos = (388,10);
},
{
name = top;
pos = (277,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (83,0);
ref = uni0308;
}
);
width = 553;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (391,10);
},
{
name = top;
pos = (281,724);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (103,0);
ref = uni0308;
}
);
width = 558;
}
);
note = edieresis;
unicode = 235;
},
{
glyphname = edotaccent;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (285,0);
},
{
name = ogonek;
pos = (393,10);
},
{
name = top;
pos = (283,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (213,0);
ref = uni0307;
}
);
width = 561;
},
{
anchors = (
{
name = bottom;
pos = (292,0);
},
{
name = ogonek;
pos = (397,10);
},
{
name = top;
pos = (289,720);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (231,0);
ref = uni0307;
}
);
width = 569;
},
{
anchors = (
{
name = bottom;
pos = (277,0);
},
{
name = ogonek;
pos = (388,10);
},
{
name = top;
pos = (277,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (194,0);
ref = uni0307;
}
);
width = 553;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (391,10);
},
{
name = top;
pos = (281,724);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (206,0);
ref = uni0307;
}
);
width = 558;
}
);
note = edotaccent;
unicode = 279;
},
{
glyphname = egrave;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (285,0);
},
{
name = ogonek;
pos = (393,10);
},
{
name = top;
pos = (283,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (174,0);
ref = gravecomb;
}
);
width = 561;
},
{
anchors = (
{
name = bottom;
pos = (292,0);
},
{
name = ogonek;
pos = (397,10);
},
{
name = top;
pos = (289,747);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (184,0);
ref = gravecomb;
}
);
width = 569;
},
{
anchors = (
{
name = bottom;
pos = (277,0);
},
{
name = ogonek;
pos = (388,10);
},
{
name = top;
pos = (277,751);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (164,0);
ref = gravecomb;
}
);
width = 553;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (391,10);
},
{
name = top;
pos = (281,750);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (171,0);
ref = gravecomb;
}
);
width = 558;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = emacron;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (285,0);
},
{
name = ogonek;
pos = (393,10);
},
{
name = top;
pos = (283,693);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (108,0);
ref = uni0304;
}
);
width = 561;
},
{
anchors = (
{
name = bottom;
pos = (292,0);
},
{
name = ogonek;
pos = (397,10);
},
{
name = top;
pos = (289,695);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (115,0);
ref = uni0304;
}
);
width = 569;
},
{
anchors = (
{
name = bottom;
pos = (277,0);
},
{
name = ogonek;
pos = (388,10);
},
{
name = top;
pos = (277,690);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (100,0);
ref = uni0304;
}
);
width = 553;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (391,10);
},
{
name = top;
pos = (281,692);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (105,0);
ref = uni0304;
}
);
width = 558;
}
);
note = emacron;
unicode = 275;
},
{
glyphname = eogonek;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (285,0);
},
{
name = ogonek;
pos = (393,10);
},
{
name = top;
pos = (283,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,295,l),
(153,355,o),
(232,420,o),
(285,420,qs),
(342,420,o),
(419,352,o),
(421,295,q)
);
},
{
closed = 1;
nodes = (
(356,-196,o),
(397,-183,q),
(397,-117,l),
(360,-132,o),
(329,-132,qs),
(303,-132,o),
(273,-108,o),
(273,-87,qs),
(273,-68,o),
(303,-34,o),
(338,-17,qs),
(385,6,ls),
(434,26,o),
(500,102,o),
(515,151,q),
(405,151,l),
(390,115,o),
(329,76,o),
(286,76,qs),
(226,76,o),
(149,156,o),
(145,220,q),
(526,220,l),
(529,247,o),
(529,268,qs),
(529,336,o),
(468,446,o),
(358,508,o),
(288,508,qs),
(214,508,o),
(101,443,o),
(39,326,o),
(39,248,qs),
(39,147,o),
(147,9,o),
(237,-8,q),
(190,-47,o),
(190,-97,qs),
(190,-146,o),
(262,-196,o),
(316,-196,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
44 11 2 6 4 45 1 7 6 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 3 4 3 5 4 128 0 4 6 3 4 6 126 0 1 0 3 5 1 3 103 0 0 0 2 97 0 2 2 42 77 0 6 6 7 98 8 1 7 7 38 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 5 3 4 3 5 4 128 0 4 6 3 4 6 126 0 1 0 3 5 1 3 103 0 6 8 1 7 6 7 102 0 0 0 2 97 0 2 2 42 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
7 7 7 47 7 46 41 18 34 21 43 18 33 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 561;
},
{
anchors = (
{
name = bottom;
pos = (292,0);
},
{
name = ogonek;
pos = (397,10);
},
{
name = top;
pos = (289,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(132,294,l),
(139,361,o),
(229,437,o),
(292,437,qs),
(356,437,o),
(441,360,o),
(444,294,q)
);
},
{
closed = 1;
nodes = (
(364,-193,o),
(400,-180,q),
(400,-124,l),
(366,-139,o),
(335,-139,qs),
(308,-139,o),
(275,-113,o),
(275,-90,qs),
(275,-49,o),
(339,-18,qs),
(392,7,ls),
(437,27,o),
(499,100,o),
(513,148,q),
(430,148,l),
(414,106,o),
(343,59,o),
(292,59,qs),
(224,59,o),
(135,155,o),
(131,229,q),
(526,229,l),
(527,276,ls),
(527,341,o),
(468,447,o),
(362,508,o),
(294,508,qs),
(221,508,o),
(109,443,o),
(48,325,o),
(48,248,qs),
(48,177,o),
(101,67,o),
(195,-1,o),
(255,-9,q),
(207,-47,o),
(207,-98,qs),
(207,-145,o),
(275,-193,o),
(325,-193,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
43 11 2 6 4 44 1 7 6 2 76 0 5 3 4 3 5 4 128 0 4 6 3 4 6 126 0 1 0 3 5 1 3 103 0 6 8 1 7 6 7 102 0 0 0 2 97 0 2 2 42 0 78 7 7 7 46 7 45 40 18 34 20 44 18 33 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 569;
},
{
anchors = (
{
name = bottom;
pos = (277,0);
},
{
name = ogonek;
pos = (388,10);
},
{
name = top;
pos = (277,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(159,295,l),
(167,349,o),
(233,403,o),
(278,403,qs),
(328,403,o),
(397,344,o),
(398,295,q)
);
},
{
closed = 1;
nodes = (
(349,-200,o),
(393,-186,q),
(393,-110,l),
(354,-125,o),
(322,-125,qs),
(298,-125,o),
(270,-103,o),
(270,-84,qs),
(270,-66,o),
(301,-34,o),
(336,-16,qs),
(377,4,l),
(430,24,o),
(501,104,o),
(517,154,q),
(380,154,l),
(350,93,o),
(279,93,qs),
(228,93,o),
(163,157,o),
(158,210,q),
(526,210,l),
(530,230,o),
(530,259,qs),
(530,331,o),
(467,445,o),
(355,508,o),
(282,508,qs),
(207,508,o),
(92,443,o),
(29,326,o),
(29,248,qs),
(29,151,o),
(130,14,o),
(219,-5,q),
(173,-44,o),
(173,-96,qs),
(173,-147,o),
(248,-200,o),
(306,-200,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
43 11 2 6 4 44 1 7 6 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 3 4 3 5 4 128 0 4 6 3 4 6 126 0 1 0 3 5 1 3 103 0 0 0 2 97 0 2 2 42 77 0 6 6 7 98 8 1 7 7 38 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 5 3 4 3 5 4 128 0 4 6 3 4 6 126 0 1 0 3 5 1 3 103 0 6 8 1 7 6 7 102 0 0 0 2 97 0 2 2 42 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
7 7 7 46 7 45 41 17 34 21 43 18 33 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 553;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (391,10);
},
{
name = top;
pos = (281,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(150,295,l),
(157,353,o),
(232,414,o),
(283,414,qs),
(337,414,o),
(412,349,o),
(413,295,q)
);
},
{
closed = 1;
nodes = (
(351,-198,o),
(395,-184,q),
(395,-115,l),
(358,-130,o),
(326,-130,qs),
(301,-130,o),
(271,-106,o),
(271,-86,qs),
(271,-67,o),
(302,-34,o),
(337,-17,qs),
(382,6,l),
(432,26,o),
(500,103,o),
(516,152,q),
(397,152,l),
(365,82,o),
(283,82,qs),
(227,82,o),
(154,156,o),
(149,216,q),
(526,216,l),
(529,243,o),
(529,265,qs),
(529,334,o),
(467,445,o),
(357,508,o),
(286,508,qs),
(212,508,o),
(98,443,o),
(35,326,o),
(35,248,qs),
(35,148,o),
(141,10,o),
(230,-7,q),
(184,-45,o),
(184,-97,qs),
(184,-147,o),
(256,-198,o),
(312,-198,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
43 11 2 6 4 44 1 7 6 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 3 4 3 5 4 128 0 4 6 3 4 6 126 0 1 0 3 5 1 3 103 0 0 0 2 97 0 2 2 42 77 0 6 6 7 98 8 1 7 7 38 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 5 3 4 3 5 4 128 0 4 6 3 4 6 126 0 1 0 3 5 1 3 103 0 6 8 1 7 6 7 102 0 0 0 2 97 0 2 2 42 0 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
7 7 7 46 7 45 41 17 34 21 43 18 33 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = eogonek;
unicode = 281;
},
{
glyphname = uni1EBD;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (285,0);
},
{
name = ogonek;
pos = (393,10);
},
{
name = top;
pos = (283,705);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (120,0);
ref = tildecomb;
}
);
width = 561;
},
{
anchors = (
{
name = bottom;
pos = (292,0);
},
{
name = ogonek;
pos = (397,10);
},
{
name = top;
pos = (289,705);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (138,0);
ref = tildecomb;
}
);
width = 569;
},
{
anchors = (
{
name = bottom;
pos = (277,0);
},
{
name = ogonek;
pos = (388,10);
},
{
name = top;
pos = (277,704);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (101,0);
ref = tildecomb;
}
);
width = 553;
},
{
anchors = (
{
name = bottom;
pos = (282,0);
},
{
name = ogonek;
pos = (391,10);
},
{
name = top;
pos = (281,704);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = e;
},
{
alignment = -1;
pos = (113,0);
ref = tildecomb;
}
);
width = 558;
}
);
note = uni1EBD;
unicode = 7869;
},
{
glyphname = uni0259;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(347,-12,o),
(460,53,o),
(523,171,o),
(523,248,qs),
(523,323,o),
(462,441,o),
(349,508,o),
(274,508,qs),
(187,508,o),
(68,417,o),
(46,345,q),
(156,345,l),
(172,381,o),
(233,420,o),
(276,420,qs),
(335,420,o),
(412,342,o),
(417,277,q),
(35,277,l),
(33,259,o),
(33,229,qs),
(33,160,o),
(94,51,o),
(203,-12,o),
(273,-12,qs)
);
},
{
closed = 1;
nodes = (
(219,76,o),
(142,145,o),
(140,202,q),
(416,202,l),
(409,141,o),
(330,76,o),
(276,76,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 2 1 0 1 2 0 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 42 77 8 1 6 6 4 97 7 1 4 4 40 4 78 25 25 0 0 25 31 25 30 28 27 0 24 0 23 34 18 34 21 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 561;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(347,-12,o),
(459,54,o),
(521,172,o),
(521,248,qs),
(521,323,o),
(461,441,o),
(350,508,o),
(277,508,qs),
(192,508,o),
(77,420,o),
(56,348,q),
(139,348,l),
(155,390,o),
(226,437,o),
(277,437,qs),
(345,437,o),
(434,343,o),
(438,267,q),
(43,267,l),
(42,220,ls),
(42,155,o),
(101,49,o),
(207,-12,o),
(275,-12,qs)
);
},
{
closed = 1;
nodes = (
(213,59,o),
(128,136,o),
(125,202,q),
(437,202,l),
(430,135,o),
(340,59,o),
(277,59,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 2 1 0 1 2 0 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 42 77 8 1 6 6 4 97 7 1 4 4 40 4 78 24 24 0 0 24 30 24 29 27 26 0 23 0 22 34 18 34 20 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 569;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(346,-12,o),
(461,53,o),
(524,170,o),
(524,248,qs),
(524,323,o),
(462,441,o),
(347,508,o),
(271,508,qs),
(180,508,o),
(59,414,o),
(36,342,q),
(173,342,l),
(203,403,o),
(274,403,qs),
(325,403,o),
(390,339,o),
(395,286,q),
(27,286,l),
(23,266,o),
(23,237,qs),
(23,165,o),
(86,51,o),
(198,-12,o),
(271,-12,qs)
);
},
{
closed = 1;
nodes = (
(225,93,o),
(156,152,o),
(155,201,q),
(394,201,l),
(386,147,o),
(320,93,o),
(275,93,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 2 1 0 1 2 0 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 42 77 8 1 6 6 4 97 7 1 4 4 40 4 78 24 24 0 0 24 30 24 29 27 26 0 23 0 22 34 17 34 21 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 553;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(346,-12,o),
(460,53,o),
(523,171,o),
(523,248,qs),
(523,323,o),
(462,441,o),
(349,508,o),
(273,508,qs),
(184,508,o),
(65,415,o),
(43,344,q),
(162,344,l),
(192,414,o),
(275,414,qs),
(332,414,o),
(405,340,o),
(409,280,q),
(32,280,l),
(29,255,o),
(29,231,qs),
(29,162,o),
(91,51,o),
(201,-12,o),
(272,-12,qs)
);
},
{
closed = 1;
nodes = (
(221,82,o),
(147,147,o),
(145,201,q),
(408,201,l),
(401,143,o),
(326,82,o),
(276,82,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 2 1 0 1 2 0 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 42 77 8 1 6 6 4 97 7 1 4 4 40 4 78 24 24 0 0 24 30 24 29 27 26 0 23 0 22 34 17 34 21 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = uni0259;
unicode = 601;
},
{
glyphname = f;
kernLeft = f;
kernRight = f;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(183,0,l),
(183,407,l),
(289,407,l),
(289,496,l),
(183,496,l),
(183,547,ls),
(183,581,o),
(213,610,o),
(249,610,qs),
(278,610,l),
(278,700,l),
(232,700,ls),
(156,700,o),
(77,627,o),
(77,548,qs),
(77,496,l),
(11,496,l),
(11,407,l),
(77,407,l),
(77,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 3 2 97 0 2 2 33 77 5 1 0 0 1 95 4 1 1 1 36 77 0 6 6 34 6 78 17 17 19 33 35 17 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 321;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(180,0,l),
(180,425,l),
(302,425,l),
(302,496,l),
(180,496,l),
(180,560,ls),
(180,597,o),
(212,628,o),
(250,628,qs),
(287,628,l),
(287,700,l),
(237,700,ls),
(167,700,o),
(96,633,o),
(96,562,qs),
(96,496,l),
(21,496,l),
(21,425,l),
(96,425,l),
(96,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 3 2 97 0 2 2 33 77 5 1 0 0 1 95 4 1 1 1 36 77 0 6 6 34 6 78 17 17 19 33 35 17 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 333;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(186,0,l),
(186,389,l),
(275,389,l),
(275,496,l),
(186,496,l),
(186,534,ls),
(186,565,o),
(214,591,o),
(247,591,qs),
(269,591,l),
(269,700,l),
(227,700,ls),
(58,700,o),
(58,534,qs),
(58,496,l),
(0,496,l),
(0,389,l),
(58,389,l),
(58,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 3 2 97 0 2 2 33 77 5 1 0 0 1 95 4 1 1 1 36 77 0 6 6 34 6 78 17 17 19 33 34 17 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 309;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(184,0,l),
(184,401,l),
(284,401,l),
(284,496,l),
(184,496,l),
(184,543,ls),
(184,575,o),
(214,603,o),
(248,603,qs),
(275,603,l),
(275,700,l),
(230,700,ls),
(152,700,o),
(71,625,o),
(71,543,qs),
(71,496,l),
(7,496,l),
(7,401,l),
(71,401,l),
(71,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 3 2 97 0 2 2 33 77 5 1 0 0 1 95 4 1 1 1 36 77 0 6 6 34 6 78 17 17 19 33 35 17 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 317;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
kernLeft = g;
kernRight = g;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (264,-310);
},
{
name = top;
pos = (254,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(328,-232,o),
(432,-192,o),
(494,-115,o),
(494,-62,qs),
(494,17,o),
(394,92,o),
(304,92,qs),
(217,92,ls),
(177,92,o),
(138,115,o),
(138,139,qs),
(138,150,o),
(151,171,o),
(162,176,q),
(204,155,o),
(254,155,qs),
(310,155,o),
(401,198,o),
(454,279,o),
(454,332,qs),
(454,371,o),
(434,413,q),
(507,413,l),
(507,496,l),
(333,496,l),
(297,508,o),
(254,508,qs),
(166,508,o),
(54,413,o),
(54,332,qs),
(54,265,o),
(99,217,q),
(41,180,o),
(41,118,qs),
(41,61,o),
(94,31,q),
(62,13,o),
(29,-39,o),
(29,-76,qs),
(29,-156,o),
(161,-232,o),
(265,-232,qs)
);
},
{
closed = 1;
nodes = (
(204,-147,o),
(128,-110,o),
(128,-70,qs),
(128,-35,o),
(177,2,o),
(222,2,qs),
(301,2,ls),
(394,2,o),
(394,-70,qs),
(394,-107,o),
(321,-147,o),
(264,-147,qs)
);
},
{
closed = 1;
nodes = (
(207,240,o),
(153,291,o),
(153,332,qs),
(153,372,o),
(208,423,o),
(253,423,qs),
(298,423,o),
(355,371,o),
(355,332,qs),
(355,291,o),
(298,240,o),
(253,240,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
27 9 2 3 9 5 1 6 4 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
12 1 9 0 3 4 9 3 105 8 1 2 2 0 97 1 1 0 0 42 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
12 1 9 0 3 4 9 3 105 8 1 2 2 0 97 0 0 0 42 77 8 1 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
12 1 9 0 3 4 9 3 105 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
12 1 9 0 3 4 9 3 105 11 1 7 10 1 5 7 5 101 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
54 54 42 42 0 0 54 65 54 64 60 58 42 53 42 52 48 45 0 41 0 40 54 37 17 17 45 13 8 27
CALL[ ]	/* CallFunction */";
};
width = 528;
},
{
anchors = (
{
name = bottom;
pos = (264,-310);
},
{
name = top;
pos = (254,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(326,-232,o),
(428,-193,o),
(490,-116,o),
(490,-61,qs),
(490,89,o),
(299,89,qs),
(216,89,ls),
(132,89,o),
(132,139,qs),
(132,152,o),
(146,173,o),
(158,179,q),
(204,156,o),
(255,156,qs),
(340,156,o),
(452,249,o),
(452,332,qs),
(452,384,o),
(426,425,q),
(503,425,l),
(503,496,l),
(334,496,l),
(297,508,o),
(255,508,qs),
(168,508,o),
(58,413,o),
(58,332,qs),
(58,265,o),
(101,217,q),
(47,180,o),
(47,120,qs),
(47,94,o),
(76,51,o),
(101,37,q),
(32,6,o),
(32,-72,qs),
(32,-155,o),
(166,-232,o),
(266,-232,qs)
);
},
{
closed = 1;
nodes = (
(198,-162,o),
(114,-118,o),
(114,-71,qs),
(114,-29,o),
(169,15,o),
(219,15,qs),
(304,15,ls),
(408,15,o),
(408,-71,qs),
(408,-115,o),
(327,-162,o),
(264,-162,qs)
);
},
{
closed = 1;
nodes = (
(200,226,o),
(138,285,o),
(138,332,qs),
(138,378,o),
(201,438,o),
(253,438,qs),
(305,438,o),
(371,378,o),
(371,332,qs),
(371,286,o),
(305,226,o),
(253,226,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
26 9 2 3 9 4 1 6 4 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
12 1 9 0 3 4 9 3 105 8 1 2 2 0 97 1 1 0 0 42 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
12 1 9 0 3 4 9 3 105 0 8 8 0 97 1 1 0 0 42 77 0 2 2 0 97 1 1 0 0 42 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
12 1 9 0 3 4 9 3 105 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
12 1 9 0 3 4 9 3 105 0 4 0 6 7 4 6 103 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
12 1 9 0 3 4 9 3 105 0 4 0 6 7 4 6 103 11 1 7 10 1 5 7 5 101 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
51 51 39 39 0 0 51 62 51 61 57 55 39 50 39 49 45 42 0 38 0 37 53 36 17 17 45 13 8 27
CALL[ ]	/* CallFunction */";
};
width = 529;
},
{
anchors = (
{
name = bottom;
pos = (264,-310);
},
{
name = top;
pos = (253,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(329,-232,o),
(436,-191,o),
(497,-114,o),
(497,-63,qs),
(497,16,o),
(400,94,o),
(308,94,qs),
(217,94,ls),
(180,94,o),
(144,115,o),
(144,138,qs),
(144,149,o),
(156,168,o),
(166,173,q),
(201,154,o),
(253,154,qs),
(310,154,o),
(403,199,o),
(456,280,o),
(456,331,qs),
(456,357,o),
(441,400,q),
(510,400,l),
(510,496,l),
(332,496,l),
(296,508,o),
(253,508,qs),
(163,508,o),
(50,411,o),
(50,331,qs),
(50,299,o),
(74,240,o),
(96,217,q),
(66,200,o),
(34,147,o),
(34,115,qs),
(34,54,o),
(86,24,q),
(55,4,o),
(25,-46,o),
(25,-81,qs),
(25,-159,o),
(155,-232,o),
(264,-232,qs)
);
},
{
closed = 1;
nodes = (
(210,-132,o),
(142,-102,o),
(142,-70,qs),
(142,-41,o),
(185,-11,o),
(225,-11,qs),
(297,-11,ls),
(379,-11,o),
(379,-70,qs),
(379,-100,o),
(315,-132,o),
(264,-132,qs)
);
},
{
closed = 1;
nodes = (
(213,254,o),
(167,296,o),
(167,331,qs),
(167,364,o),
(214,408,o),
(252,408,qs),
(290,408,o),
(339,364,o),
(339,331,qs),
(339,297,o),
(290,254,o),
(252,254,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
29 10 2 3 9 5 1 6 4 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
12 1 9 0 3 4 9 3 105 8 1 2 2 0 97 1 1 0 0 42 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
12 1 9 0 3 4 9 3 105 8 1 2 2 0 97 0 0 0 42 77 8 1 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
12 1 9 0 3 4 9 3 105 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
12 1 9 0 3 4 9 3 105 11 1 7 10 1 5 7 5 101 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
12 1 9 0 3 4 9 3 105 0 4 0 6 7 4 6 103 11 1 7 10 1 5 7 5 101 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
56 56 44 44 0 0 56 67 56 66 62 60 44 55 44 54 50 47 0 43 0 42 54 37 17 17 47 13 8 27
CALL[ ]	/* CallFunction */";
};
width = 527;
},
{
anchors = (
{
name = bottom;
pos = (264,-310);
},
{
name = top;
pos = (253,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(328,-232,o),
(433,-192,o),
(495,-115,o),
(495,-62,qs),
(495,92,o),
(305,92,qs),
(217,92,ls),
(178,92,o),
(140,114,o),
(140,138,qs),
(140,149,o),
(153,170,o),
(163,175,q),
(203,155,o),
(254,155,qs),
(310,155,o),
(402,199,o),
(455,279,o),
(455,331,qs),
(455,367,o),
(436,408,q),
(508,408,l),
(508,496,l),
(333,496,l),
(296,508,o),
(254,508,qs),
(164,508,o),
(53,412,o),
(53,331,qs),
(53,264,o),
(98,217,q),
(38,180,o),
(38,117,qs),
(38,59,o),
(91,28,q),
(27,-8,o),
(27,-78,qs),
(27,-157,o),
(158,-232,o),
(265,-232,qs)
);
},
{
closed = 1;
nodes = (
(206,-142,o),
(133,-107,o),
(133,-70,qs),
(133,-37,o),
(180,-2,o),
(223,-2,qs),
(299,-2,ls),
(389,-2,o),
(389,-70,qs),
(389,-105,o),
(319,-142,o),
(264,-142,qs)
);
},
{
closed = 1;
nodes = (
(208,245,o),
(157,292,o),
(157,331,qs),
(157,369,o),
(210,418,o),
(252,418,qs),
(295,418,o),
(350,369,o),
(350,331,qs),
(350,293,o),
(295,245,o),
(252,245,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
26 8 2 3 9 4 1 6 4 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
12 1 9 0 3 4 9 3 105 8 1 2 2 0 97 1 1 0 0 42 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
12 1 9 0 3 4 9 3 105 8 1 2 2 0 97 0 0 0 42 77 8 1 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
12 1 9 0 3 4 9 3 105 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 77 11 1 7 7 5 97 10 1 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
12 1 9 0 3 4 9 3 105 11 1 7 10 1 5 7 5 101 0 8 8 0 97 0 0 0 42 77 0 2 2 1 95 0 1 1 36 77 0 4 4 6 95 0 6 6 34 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
52 52 40 40 0 0 52 63 52 62 58 56 40 51 40 50 46 43 0 39 0 38 54 37 17 17 44 13 8 27
CALL[ ]	/* CallFunction */";
};
width = 528;
}
);
note = g;
unicode = 103;
},
{
glyphname = gbreve;
kernLeft = g;
kernRight = g;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (264,-310);
},
{
name = top;
pos = (254,722);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (105,0);
ref = uni0306;
}
);
width = 528;
},
{
anchors = (
{
name = bottom;
pos = (264,-310);
},
{
name = top;
pos = (254,732);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (113,0);
ref = uni0306;
}
);
width = 529;
},
{
anchors = (
{
name = bottom;
pos = (264,-310);
},
{
name = top;
pos = (253,712);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (97,0);
ref = uni0306;
}
);
width = 527;
},
{
anchors = (
{
name = bottom;
pos = (264,-310);
},
{
name = top;
pos = (253,719);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (102,0);
ref = uni0306;
}
);
width = 528;
}
);
note = gbreve;
unicode = 287;
},
{
glyphname = uni0123;
kernLeft = g;
kernRight = g;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (264,-310);
},
{
name = top;
pos = (254,804);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (196,0);
ref = uni0312;
}
);
width = 528;
},
{
anchors = (
{
name = bottom;
pos = (264,-310);
},
{
name = top;
pos = (254,783);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (203,0);
ref = uni0312;
}
);
width = 529;
},
{
anchors = (
{
name = bottom;
pos = (264,-310);
},
{
name = top;
pos = (253,824);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (188,0);
ref = uni0312;
}
);
width = 527;
},
{
anchors = (
{
name = bottom;
pos = (264,-310);
},
{
name = top;
pos = (253,810);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (193,0);
ref = uni0312;
}
);
width = 528;
}
);
note = uni0123;
unicode = 291;
},
{
glyphname = gdotaccent;
kernLeft = g;
kernRight = g;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (264,-310);
},
{
name = top;
pos = (254,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (183,0);
ref = uni0307;
}
);
width = 528;
},
{
anchors = (
{
name = bottom;
pos = (264,-310);
},
{
name = top;
pos = (254,720);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (196,0);
ref = uni0307;
}
);
width = 529;
},
{
anchors = (
{
name = bottom;
pos = (264,-310);
},
{
name = top;
pos = (253,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (170,0);
ref = uni0307;
}
);
width = 527;
},
{
anchors = (
{
name = bottom;
pos = (264,-310);
},
{
name = top;
pos = (253,724);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = g;
},
{
alignment = -1;
pos = (179,0);
ref = uni0307;
}
);
width = 528;
}
);
note = gdotaccent;
unicode = 289;
},
{
glyphname = h;
kernLeft = b;
kernRight = a;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,0,l),
(163,266,ls),
(163,337,o),
(235,418,o),
(296,418,qs),
(354,418,o),
(415,345,o),
(415,278,qs),
(415,0,l),
(520,0,l),
(520,291,ls),
(520,396,o),
(415,508,o),
(327,508,qs),
(276,508,o),
(187,465,o),
(163,425,q),
(163,700,l),
(57,700,l),
(57,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
2 1 3 1 1 76 0 0 0 33 77 0 3 3 1 97 0 1 1 42 77 4 1 2 2 34 2 78 19 35 19 35 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 567;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(153,0,l),
(153,257,ls),
(153,341,o),
(239,436,o),
(306,436,qs),
(431,436,o),
(431,281,qs),
(431,0,l),
(514,0,l),
(514,290,ls),
(514,398,o),
(413,508,o),
(324,508,qs),
(270,508,o),
(178,456,o),
(153,411,q),
(153,700,l),
(69,700,l),
(69,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
2 1 2 3 1 76 0 0 0 33 77 0 3 3 1 97 0 1 1 42 77 4 1 2 2 34 2 78 19 34 19 35 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 572;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(172,0,l),
(172,275,ls),
(172,332,o),
(232,400,o),
(286,400,qs),
(340,400,o),
(398,332,o),
(398,275,qs),
(398,0,l),
(525,0,l),
(525,292,ls),
(525,394,o),
(417,508,o),
(329,508,qs),
(282,508,o),
(196,472,o),
(172,438,q),
(172,700,l),
(45,700,l),
(45,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
2 1 3 1 1 76 0 0 0 33 77 0 3 3 1 97 0 1 1 42 77 4 1 2 2 34 2 78 19 35 19 35 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(166,0,l),
(166,269,ls),
(166,335,o),
(234,412,o),
(293,412,qs),
(349,412,o),
(409,341,o),
(409,277,qs),
(409,0,l),
(521,0,l),
(521,291,ls),
(521,396,o),
(416,508,o),
(327,508,qs),
(278,508,o),
(190,467,o),
(166,429,q),
(166,700,l),
(53,700,l),
(53,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
2 1 3 1 1 76 0 0 0 33 77 0 3 3 1 97 0 1 1 42 77 4 1 2 2 34 2 78 19 35 19 35 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = h;
unicode = 104;
},
{
glyphname = hbar;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,0,l),
(163,266,ls),
(163,337,o),
(235,418,o),
(296,418,qs),
(354,418,o),
(415,345,o),
(415,278,qs),
(415,0,l),
(520,0,l),
(520,291,ls),
(520,396,o),
(415,508,o),
(327,508,qs),
(276,508,o),
(187,465,o),
(163,425,q),
(163,565,l),
(327,565,l),
(327,641,l),
(163,641,l),
(163,700,l),
(57,700,l),
(57,641,l),
(14,641,l),
(14,565,l),
(57,565,l),
(57,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
10 1 7 5 1 76 3 1 1 4 1 0 5 1 0 103 0 2 2 33 77 0 7 7 5 97 0 5 5 42 77 8 1 6 6 34 6 78 19 35 19 35 17 17 17 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 567;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(153,0,l),
(153,257,ls),
(153,341,o),
(239,436,o),
(306,436,qs),
(431,436,o),
(431,281,qs),
(431,0,l),
(514,0,l),
(514,290,ls),
(514,398,o),
(413,508,o),
(324,508,qs),
(270,508,o),
(178,456,o),
(153,411,q),
(153,571,l),
(324,571,l),
(324,634,l),
(153,634,l),
(153,700,l),
(69,700,l),
(69,634,l),
(22,634,l),
(22,571,l),
(69,571,l),
(69,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
10 1 6 7 1 76 3 1 1 4 1 0 5 1 0 103 0 2 2 33 77 0 7 7 5 97 0 5 5 42 77 8 1 6 6 34 6 78 19 34 19 35 17 17 17 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 572;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(172,0,l),
(172,275,ls),
(172,332,o),
(232,400,o),
(286,400,qs),
(340,400,o),
(398,332,o),
(398,275,qs),
(398,0,l),
(525,0,l),
(525,292,ls),
(525,394,o),
(417,508,o),
(329,508,qs),
(282,508,o),
(196,472,o),
(172,438,q),
(172,558,l),
(329,558,l),
(329,648,l),
(172,648,l),
(172,700,l),
(45,700,l),
(45,648,l),
(6,648,l),
(6,558,l),
(45,558,l),
(45,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
10 1 7 5 1 76 3 1 1 4 1 0 5 1 0 103 0 2 2 33 77 0 7 7 5 97 0 5 5 42 77 8 1 6 6 34 6 78 19 35 19 35 17 17 17 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(166,0,l),
(166,269,ls),
(166,335,o),
(234,412,o),
(293,412,qs),
(349,412,o),
(409,341,o),
(409,277,qs),
(409,0,l),
(521,0,l),
(521,291,ls),
(521,396,o),
(416,508,o),
(327,508,qs),
(278,508,o),
(190,467,o),
(166,429,q),
(166,562,l),
(327,562,l),
(327,643,l),
(166,643,l),
(166,700,l),
(53,700,l),
(53,643,l),
(11,643,l),
(11,562,l),
(53,562,l),
(53,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
10 1 7 5 1 76 3 1 1 4 1 0 5 1 0 103 0 2 2 33 77 0 7 7 5 97 0 5 5 42 77 8 1 6 6 34 6 78 19 35 19 35 17 17 17 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = hbar;
unicode = 295;
},
{
glyphname = i;
kernLeft = i;
kernRight = i;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (117,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,583,o),
(188,624,o),
(188,654,qs),
(188,683,o),
(147,723,o),
(117,723,qs),
(88,723,o),
(47,683,o),
(47,654,qs),
(47,624,o),
(88,583,o),
(117,583,qs)
);
},
{
closed = 1;
nodes = (
(170,0,l),
(170,496,l),
(64,496,l),
(64,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 1 1 0 97 0 0 0 41 77 0 2 2 36 77 0 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 1 1 0 97 0 0 0 39 77 0 2 2 36 77 0 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 0 4 1 1 2 0 1 105 0 2 2 36 77 0 3 3 34 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 15 14 13 12 0 11 0 10 36 5 8 23
CALL[ ]	/* CallFunction */";
};
width = 233;
},
{
anchors = (
{
name = bottom;
pos = (120,0);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(144,606,o),
(178,639,o),
(178,664,qs),
(178,688,o),
(144,720,o),
(120,720,qs),
(95,720,o),
(62,688,o),
(62,664,qs),
(62,639,o),
(95,606,o),
(120,606,qs)
);
},
{
closed = 1;
nodes = (
(162,0,l),
(162,496,l),
(78,496,l),
(78,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 1 1 0 97 0 0 0 41 77 0 2 2 36 77 0 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
4 1 1 1 0 97 0 0 0 39 77 0 2 2 36 77 0 3 3 34 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 15 14 13 12 0 11 0 10 36 5 8 23
CALL[ ]	/* CallFunction */";
};
width = 239;
},
{
anchors = (
{
name = bottom;
pos = (114,0);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(149,560,o),
(197,608,o),
(197,643,qs),
(197,678,o),
(149,726,o),
(114,726,qs),
(80,726,o),
(31,678,o),
(31,643,qs),
(31,609,o),
(80,560,o),
(114,560,qs)
);
},
{
closed = 1;
nodes = (
(178,0,l),
(178,496,l),
(50,496,l),
(50,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 1 1 0 97 0 0 0 41 77 0 2 2 36 77 0 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 1 1 0 97 0 0 0 39 77 0 2 2 36 77 0 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 0 4 1 1 2 0 1 105 0 2 2 36 77 0 3 3 34 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 15 14 13 12 0 11 0 10 36 5 8 23
CALL[ ]	/* CallFunction */";
};
width = 227;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(148,575,o),
(191,619,o),
(191,650,qs),
(191,681,o),
(147,724,o),
(116,724,qs),
(85,724,o),
(41,681,o),
(41,650,qs),
(41,619,o),
(85,575,o),
(116,575,qs)
);
},
{
closed = 1;
nodes = (
(173,0,l),
(173,496,l),
(59,496,l),
(59,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 1 1 0 97 0 0 0 41 77 0 2 2 36 77 0 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 1 1 0 97 0 0 0 39 77 0 2 2 36 77 0 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 0 4 1 1 2 0 1 105 0 2 2 36 77 0 3 3 34 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 15 14 13 12 0 11 0 10 36 5 8 23
CALL[ ]	/* CallFunction */";
};
width = 231;
}
);
note = i;
unicode = 105;
},
{
glyphname = dotlessi;
kernLeft = dotlessi;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (163,0);
},
{
name = top;
pos = (111,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,0,l),
(163,496,l),
(57,496,l),
(57,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 36 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (153,0);
},
{
name = top;
pos = (111,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(153,0,l),
(153,496,l),
(69,496,l),
(69,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 36 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 222;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (173,0);
},
{
name = top;
pos = (110,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(173,0,l),
(173,496,l),
(45,496,l),
(45,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 36 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 219;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (166,0);
},
{
name = top;
pos = (110,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(166,0,l),
(166,496,l),
(53,496,l),
(53,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 36 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 220;
}
);
note = dotlessi;
unicode = 305;
},
{
glyphname = iacute;
kernLeft = iacute;
kernRight = iacute;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (163,0);
},
{
name = top;
pos = (111,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (2,0);
ref = acutecomb;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (153,0);
},
{
name = top;
pos = (111,747);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (6,0);
ref = acutecomb;
}
);
width = 222;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (173,0);
},
{
name = top;
pos = (110,751);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-3,0);
ref = acutecomb;
}
);
width = 219;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (166,0);
},
{
name = top;
pos = (110,750);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
ref = acutecomb;
}
);
width = 220;
}
);
note = iacute;
unicode = 237;
},
{
glyphname = ibreve;
kernLeft = ibreve;
kernRight = ibreve;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (163,0);
},
{
name = top;
pos = (111,722);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-38,0);
ref = uni0306;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (153,0);
},
{
name = top;
pos = (111,732);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-30,0);
ref = uni0306;
}
);
width = 222;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (173,0);
},
{
name = top;
pos = (110,712);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-46,0);
ref = uni0306;
}
);
width = 219;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (166,0);
},
{
name = top;
pos = (110,719);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-41,0);
ref = uni0306;
}
);
width = 220;
}
);
note = ibreve;
unicode = 301;
},
{
glyphname = icircumflex;
kernLeft = ibreve;
kernRight = ibreve;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (163,0);
},
{
name = top;
pos = (111,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-31,0);
ref = uni0302;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (153,0);
},
{
name = top;
pos = (111,733);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-26,0);
ref = uni0302;
}
);
width = 222;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (173,0);
},
{
name = top;
pos = (110,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-36,0);
ref = uni0302;
}
);
width = 219;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (166,0);
},
{
name = top;
pos = (110,728);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-33,0);
ref = uni0302;
}
);
width = 220;
}
);
note = icircumflex;
unicode = 238;
},
{
glyphname = idieresis;
kernLeft = ibreve;
kernRight = ibreve;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (163,0);
},
{
name = top;
pos = (111,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-60,0);
ref = uni0308.narrow;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (153,0);
},
{
name = top;
pos = (111,720);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-36,0);
ref = uni0308.narrow;
}
);
width = 222;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (173,0);
},
{
name = top;
pos = (110,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-84,0);
ref = uni0308.narrow;
}
);
width = 219;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (166,0);
},
{
name = top;
pos = (110,724);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-68,0);
ref = uni0308.narrow;
}
);
width = 220;
}
);
note = idieresis;
unicode = 239;
},
{
glyphname = i.loclTRK;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (163,0);
},
{
name = top;
pos = (111,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (40,0);
ref = uni0307;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (153,0);
},
{
name = top;
pos = (111,720);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (53,0);
ref = uni0307;
}
);
width = 222;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (173,0);
},
{
name = top;
pos = (110,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (27,0);
ref = uni0307;
}
);
width = 219;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (166,0);
},
{
name = top;
pos = (110,724);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (36,0);
ref = uni0307;
}
);
width = 220;
}
);
note = i.loclTRK;
},
{
glyphname = igrave;
kernRight = igrave;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (163,0);
},
{
name = top;
pos = (111,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (2,0);
ref = gravecomb;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (153,0);
},
{
name = top;
pos = (111,747);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (6,0);
ref = gravecomb;
}
);
width = 222;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (173,0);
},
{
name = top;
pos = (110,751);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-3,0);
ref = gravecomb;
}
);
width = 219;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (166,0);
},
{
name = top;
pos = (110,750);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
ref = gravecomb;
}
);
width = 220;
}
);
note = igrave;
unicode = 236;
},
{
glyphname = imacron;
kernLeft = ibreve;
kernRight = ibreve;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (163,0);
},
{
name = top;
pos = (111,693);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-65,0);
ref = uni0304;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (153,0);
},
{
name = top;
pos = (111,695);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-63,0);
ref = uni0304;
}
);
width = 222;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (173,0);
},
{
name = top;
pos = (110,690);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-67,0);
ref = uni0304;
}
);
width = 219;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (166,0);
},
{
name = top;
pos = (110,692);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-66,0);
ref = uni0304;
}
);
width = 220;
}
);
note = imacron;
unicode = 299;
},
{
glyphname = iogonek;
kernLeft = dotlessi;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (163,0);
},
{
name = top;
pos = (111,723);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140,583,o),
(181,624,o),
(181,654,qs),
(181,683,o),
(140,723,o),
(111,723,qs),
(81,723,o),
(40,683,o),
(40,654,qs),
(40,624,o),
(81,583,o),
(111,583,qs)
);
},
{
closed = 1;
nodes = (
(127,-206,o),
(168,-193,q),
(168,-127,l),
(131,-142,o),
(100,-142,qs),
(74,-142,o),
(44,-118,o),
(44,-97,qs),
(44,-78,o),
(74,-44,o),
(109,-27,qs),
(164,0,l),
(163,2,l),
(163,496,l),
(57,496,l),
(57,15,l),
(6,-12,o),
(-39,-72,o),
(-39,-107,qs),
(-39,-156,o),
(33,-206,o),
(87,-206,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
30 20 17 3 3 2 31 1 4 3 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 1 1 0 97 0 0 0 41 77 0 2 2 36 77 0 3 3 4 98 6 1 4 4 38 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 1 1 0 97 0 0 0 39 77 0 2 2 36 77 0 3 3 4 98 6 1 4 4 38 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 3 6 1 4 3 4 102 5 1 1 1 0 97 0 0 0 39 77 0 2 2 36 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 0 5 1 1 2 0 1 105 0 3 6 1 4 3 4 102 0 2 2 36 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
12 12 0 0 12 33 12 32 29 27 19 18 0 11 0 10 36 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (153,0);
},
{
name = top;
pos = (111,720);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(135,606,o),
(169,639,o),
(169,664,qs),
(169,688,o),
(135,720,o),
(111,720,qs),
(86,720,o),
(53,688,o),
(53,664,qs),
(53,639,o),
(86,606,o),
(111,606,qs)
);
},
{
closed = 1;
nodes = (
(120,-203,o),
(156,-190,q),
(156,-134,l),
(122,-149,o),
(91,-149,qs),
(64,-149,o),
(31,-123,o),
(31,-100,qs),
(31,-59,o),
(95,-28,qs),
(153,0,l),
(153,496,l),
(69,496,l),
(69,15,l),
(-37,-33,o),
(-37,-108,qs),
(-37,-155,o),
(31,-203,o),
(81,-203,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
27 19 16 3 3 2 28 1 4 3 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 1 1 0 97 0 0 0 41 77 0 2 2 36 77 0 3 3 4 98 6 1 4 4 38 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 3 6 1 4 3 4 102 5 1 1 1 0 97 0 0 0 41 77 0 2 2 36 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 6 1 4 3 4 102 5 1 1 1 0 97 0 0 0 39 77 0 2 2 36 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
12 12 0 0 12 30 12 29 26 24 18 17 0 11 0 10 36 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 222;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (173,0);
},
{
name = top;
pos = (110,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(145,560,o),
(193,608,o),
(193,643,qs),
(193,678,o),
(145,726,o),
(110,726,qs),
(75,726,o),
(27,678,o),
(27,643,qs),
(27,608,o),
(75,560,o),
(110,560,qs)
);
},
{
closed = 1;
nodes = (
(134,-210,o),
(178,-196,q),
(178,-120,l),
(139,-135,o),
(107,-135,qs),
(83,-135,o),
(55,-113,o),
(55,-94,qs),
(55,-76,o),
(86,-44,o),
(121,-26,qs),
(173,0,l),
(173,496,l),
(45,496,l),
(45,14,l),
(-2,-13,o),
(-42,-72,o),
(-42,-106,qs),
(-42,-157,o),
(33,-210,o),
(91,-210,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
29 20 17 3 3 2 30 1 4 3 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 1 1 0 97 0 0 0 41 77 0 2 2 36 77 0 3 3 4 98 6 1 4 4 38 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 1 1 0 97 0 0 0 39 77 0 2 2 36 77 0 3 3 4 98 6 1 4 4 38 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 0 5 1 1 2 0 1 105 0 2 2 36 77 0 3 3 4 98 6 1 4 4 38 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 0 5 1 1 2 0 1 105 0 3 6 1 4 3 4 102 0 2 2 36 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
12 12 0 0 12 32 12 31 28 26 19 18 0 11 0 10 36 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 219;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (166,0);
},
{
name = top;
pos = (110,724);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(142,575,o),
(185,618,o),
(185,650,qs),
(185,682,o),
(143,724,o),
(111,724,qs),
(79,724,o),
(36,682,o),
(36,650,qs),
(36,618,o),
(79,575,o),
(111,575,qs)
);
},
{
closed = 1;
nodes = (
(127,-208,o),
(171,-194,q),
(171,-125,l),
(134,-140,o),
(102,-140,qs),
(77,-140,o),
(47,-116,o),
(47,-96,qs),
(47,-77,o),
(78,-44,o),
(113,-27,qs),
(167,0,l),
(166,2,l),
(166,496,l),
(53,496,l),
(53,14,l),
(3,-13,o),
(-40,-72,o),
(-40,-107,qs),
(-40,-157,o),
(32,-208,o),
(88,-208,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
30 20 17 3 3 2 31 1 4 3 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 1 1 0 97 0 0 0 41 77 0 2 2 36 77 0 3 3 4 98 6 1 4 4 38 4 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 1 1 0 97 0 0 0 39 77 0 2 2 36 77 0 3 3 4 98 6 1 4 4 38 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 0 5 1 1 2 0 1 105 0 3 6 1 4 3 4 102 0 2 2 36 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
12 12 0 0 12 33 12 32 29 27 19 18 0 11 0 10 36 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 220;
}
);
note = iogonek;
unicode = 303;
},
{
glyphname = itilde;
kernLeft = ibreve;
kernRight = ibreve;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (163,0);
},
{
name = top;
pos = (111,705);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-53,0);
ref = tildecomb;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = ogonek;
pos = (153,0);
},
{
name = top;
pos = (111,705);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-40,0);
ref = tildecomb;
}
);
width = 222;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (173,0);
},
{
name = top;
pos = (110,704);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-66,0);
ref = tildecomb;
}
);
width = 219;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = ogonek;
pos = (166,0);
},
{
name = top;
pos = (110,704);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = dotlessi;
},
{
alignment = -1;
pos = (-57,0);
ref = tildecomb;
}
);
width = 220;
}
);
note = itilde;
unicode = 297;
},
{
glyphname = ij;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (117,0);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = i;
},
{
alignment = -1;
pos = (233,0);
ref = j;
}
);
width = 468;
},
{
anchors = (
{
name = bottom;
pos = (120,0);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = i;
},
{
alignment = -1;
pos = (239,0);
ref = j;
}
);
width = 481;
},
{
anchors = (
{
name = bottom;
pos = (114,0);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = i;
},
{
alignment = -1;
pos = (227,0);
ref = j;
}
);
width = 455;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = i;
},
{
alignment = -1;
pos = (231,0);
ref = j;
}
);
width = 464;
}
);
note = ij;
unicode = 307;
},
{
glyphname = j;
kernLeft = j;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(17,-220,ls),
(172,-220,o),
(172,-68,qs),
(172,496,l),
(66,496,l),
(66,-67,ls),
(66,-100,o),
(35,-129,o),
(1,-129,qs),
(-32,-129,l),
(-32,-220,l)
);
},
{
closed = 1;
nodes = (
(149,583,o),
(190,624,o),
(190,654,qs),
(190,683,o),
(149,723,o),
(120,723,qs),
(91,723,o),
(50,683,o),
(50,654,qs),
(50,624,o),
(91,583,o),
(120,583,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 4 4 3 97 0 3 3 41 77 0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 4 4 3 97 0 3 3 39 77 0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 5 1 4 1 3 4 105 0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
11 11 11 22 11 21 37 34 19 32 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 235;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(24,-220,ls),
(94,-220,o),
(165,-153,o),
(165,-82,qs),
(165,496,l),
(81,496,l),
(81,-80,ls),
(81,-116,o),
(48,-148,o),
(11,-148,qs),
(-28,-148,l),
(-28,-220,l)
);
},
{
closed = 1;
nodes = (
(148,606,o),
(181,639,o),
(181,664,qs),
(181,688,o),
(148,720,o),
(124,720,qs),
(100,720,o),
(66,688,o),
(66,664,qs),
(66,639,o),
(100,606,o),
(124,606,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 4 4 3 97 0 3 3 41 77 0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
5 1 4 4 3 97 0 3 3 39 77 0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
12 12 12 23 12 22 37 35 19 32 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 242;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(10,-220,ls),
(179,-220,o),
(179,-54,qs),
(179,496,l),
(51,496,l),
(51,-54,ls),
(51,-85,o),
(22,-111,o),
(-10,-111,qs),
(-37,-111,l),
(-37,-220,l)
);
},
{
closed = 1;
nodes = (
(151,560,o),
(199,609,o),
(199,643,qs),
(199,678,o),
(151,726,o),
(116,726,qs),
(81,726,o),
(33,678,o),
(33,643,qs),
(33,608,o),
(81,560,o),
(116,560,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 4 4 3 97 0 3 3 41 77 0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 4 4 3 97 0 3 3 39 77 0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 5 1 4 1 3 4 105 0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
11 11 11 22 11 21 37 34 19 32 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 228;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(15,-220,ls),
(91,-220,o),
(174,-146,o),
(174,-63,qs),
(174,496,l),
(61,496,l),
(61,-63,ls),
(61,-95,o),
(31,-123,o),
(-3,-123,qs),
(-34,-123,l),
(-34,-220,l)
);
},
{
closed = 1;
nodes = (
(150,575,o),
(193,619,o),
(193,650,qs),
(193,681,o),
(150,724,o),
(119,724,qs),
(88,724,o),
(44,681,o),
(44,650,qs),
(44,619,o),
(88,575,o),
(119,575,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 4 4 3 97 0 3 3 41 77 0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
5 1 4 4 3 97 0 3 3 39 77 0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 5 1 4 1 3 4 105 0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
12 12 12 23 12 22 37 35 19 32 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = j;
unicode = 106;
},
{
glyphname = uni0237;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (118,-310);
},
{
name = top;
pos = (118,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(17,-220,ls),
(172,-220,o),
(172,-68,qs),
(172,496,l),
(66,496,l),
(66,-67,ls),
(66,-100,o),
(35,-129,o),
(1,-129,qs),
(-32,-129,l),
(-32,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78 34 19 32 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 235;
},
{
anchors = (
{
name = bottom;
pos = (121,-310);
},
{
name = top;
pos = (121,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(24,-220,ls),
(94,-220,o),
(165,-153,o),
(165,-82,qs),
(165,496,l),
(81,496,l),
(81,-80,ls),
(81,-116,o),
(48,-148,o),
(11,-148,qs),
(-28,-148,l),
(-28,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78 35 19 32 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 242;
},
{
anchors = (
{
name = bottom;
pos = (114,-310);
},
{
name = top;
pos = (114,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(10,-220,ls),
(179,-220,o),
(179,-54,qs),
(179,496,l),
(51,496,l),
(51,-54,ls),
(51,-85,o),
(22,-111,o),
(-10,-111,qs),
(-37,-111,l),
(-37,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78 34 19 32 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 228;
},
{
anchors = (
{
name = bottom;
pos = (116,-310);
},
{
name = top;
pos = (116,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(15,-220,ls),
(91,-220,o),
(174,-146,o),
(174,-63,qs),
(174,496,l),
(61,496,l),
(61,-63,ls),
(61,-95,o),
(31,-123,o),
(-3,-123,qs),
(-34,-123,l),
(-34,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 1 1 36 77 0 0 0 2 98 0 2 2 38 2 78 35 19 32 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = uni0237;
unicode = 567;
},
{
glyphname = uni006A0301;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (118,-310);
},
{
name = top;
pos = (118,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = uni0237;
},
{
alignment = -1;
pos = (9,0);
ref = acutecomb;
}
);
width = 235;
},
{
anchors = (
{
name = bottom;
pos = (121,-310);
},
{
name = top;
pos = (121,747);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = uni0237;
},
{
alignment = -1;
pos = (16,0);
ref = acutecomb;
}
);
width = 242;
},
{
anchors = (
{
name = bottom;
pos = (114,-310);
},
{
name = top;
pos = (114,751);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = uni0237;
},
{
alignment = -1;
pos = (1,0);
ref = acutecomb;
}
);
width = 228;
},
{
anchors = (
{
name = bottom;
pos = (116,-310);
},
{
name = top;
pos = (116,750);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = uni0237;
},
{
alignment = -1;
pos = (6,0);
ref = acutecomb;
}
);
width = 233;
}
);
note = uni006A0301;
},
{
glyphname = k;
kernLeft = b;
kernRight = k;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (257,0);
},
{
name = top;
pos = (257,992);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,0,l),
(163,234,l),
(361,0,l),
(497,0,l),
(262,260,l),
(481,496,l),
(347,496,l),
(163,287,l),
(163,700,l),
(57,700,l),
(57,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
8 5 2 3 2 1 1 76 0 0 0 33 77 0 1 1 36 77 3 1 2 2 34 2 78 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 514;
},
{
anchors = (
{
name = bottom;
pos = (252,0);
},
{
name = top;
pos = (252,992);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(153,0,l),
(153,257,l),
(380,0,l),
(487,0,l),
(239,272,l),
(459,496,l),
(356,496,l),
(153,287,l),
(153,700,l),
(69,700,l),
(69,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
8 5 2 3 2 1 1 76 0 0 0 33 77 0 1 1 36 77 3 1 2 2 34 2 78 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 504;
},
{
anchors = (
{
name = bottom;
pos = (262,0);
},
{
name = top;
pos = (262,992);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(173,0,l),
(173,211,l),
(341,0,l),
(506,0,l),
(285,247,l),
(503,496,l),
(338,496,l),
(173,286,l),
(173,700,l),
(45,700,l),
(45,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
8 5 2 3 2 1 1 76 0 0 0 33 77 0 1 1 36 77 3 1 2 2 34 2 78 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 523;
},
{
anchors = (
{
name = bottom;
pos = (259,0);
},
{
name = top;
pos = (259,992);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(166,0,l),
(166,226,l),
(354,0,l),
(500,0,l),
(270,255,l),
(488,496,l),
(344,496,l),
(166,286,l),
(166,700,l),
(53,700,l),
(53,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
8 5 2 3 2 1 1 76 0 0 0 33 77 0 1 1 36 77 3 1 2 2 34 2 78 18 18 18 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = k;
unicode = 107;
},
{
glyphname = uni0137;
kernLeft = b;
kernRight = k;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (257,-256);
},
{
name = top;
pos = (257,992);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = k;
},
{
alignment = -1;
pos = (202,0);
ref = uni0326;
}
);
width = 514;
},
{
anchors = (
{
name = bottom;
pos = (252,-238);
},
{
name = top;
pos = (252,992);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = k;
},
{
alignment = -1;
pos = (203,0);
ref = uni0326;
}
);
width = 504;
},
{
anchors = (
{
name = bottom;
pos = (262,-274);
},
{
name = top;
pos = (262,992);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = k;
},
{
alignment = -1;
pos = (200,0);
ref = uni0326;
}
);
width = 523;
},
{
anchors = (
{
name = bottom;
pos = (259,-262);
},
{
name = top;
pos = (259,992);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = k;
},
{
alignment = -1;
pos = (201,0);
ref = uni0326;
}
);
width = 517;
}
);
note = uni0137;
unicode = 311;
},
{
glyphname = l;
kernLeft = b;
kernRight = l;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = top;
pos = (111,700);
},
{
name = topright;
pos = (202,992);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,0,l),
(163,700,l),
(57,700,l),
(57,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = top;
pos = (111,700);
},
{
name = topright;
pos = (202,992);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(153,0,l),
(153,700,l),
(69,700,l),
(69,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 222;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = top;
pos = (110,700);
},
{
name = topright;
pos = (202,992);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(173,0,l),
(173,700,l),
(45,700,l),
(45,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 219;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = top;
pos = (110,700);
},
{
name = topright;
pos = (202,992);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(166,0,l),
(166,700,l),
(53,700,l),
(53,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 220;
}
);
note = l;
unicode = 108;
},
{
glyphname = lacute;
kernLeft = b;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = top;
pos = (111,953);
},
{
name = topright;
pos = (202,992);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (2,204);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1
PUSHB[ ]	/* 1 value pushed */
204
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = top;
pos = (111,951);
},
{
name = topright;
pos = (202,992);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (6,204);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1
PUSHB[ ]	/* 1 value pushed */
204
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 222;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = top;
pos = (110,955);
},
{
name = topright;
pos = (202,992);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (-3,204);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1
PUSHB[ ]	/* 1 value pushed */
204
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 219;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = top;
pos = (110,954);
},
{
name = topright;
pos = (202,992);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (0,204);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1
PUSHB[ ]	/* 1 value pushed */
204
PUSHB[ ]	/* 1 value pushed */
53
CALL[ ]	/* CallFunction */";
};
width = 220;
}
);
note = lacute;
unicode = 314;
},
{
glyphname = lcaron;
kernLeft = b;
kernRight = dcaron;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = top;
pos = (111,700);
},
{
name = topright;
pos = (202,992);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (202,0);
ref = uni030C.alt;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (111,0);
},
{
name = top;
pos = (111,700);
},
{
name = topright;
pos = (202,992);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (202,0);
ref = uni030C.alt;
}
);
width = 222;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = top;
pos = (110,700);
},
{
name = topright;
pos = (202,992);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (202,0);
ref = uni030C.alt;
}
);
width = 219;
},
{
anchors = (
{
name = bottom;
pos = (110,0);
},
{
name = top;
pos = (110,700);
},
{
name = topright;
pos = (202,992);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (202,0);
ref = uni030C.alt;
}
);
width = 220;
}
);
note = lcaron;
unicode = 318;
},
{
glyphname = uni013C;
kernLeft = b;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (111,-256);
},
{
name = top;
pos = (111,700);
},
{
name = topright;
pos = (202,992);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (55,0);
ref = uni0326;
}
);
width = 221;
},
{
anchors = (
{
name = bottom;
pos = (111,-238);
},
{
name = top;
pos = (111,700);
},
{
name = topright;
pos = (202,992);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (62,0);
ref = uni0326;
}
);
width = 222;
},
{
anchors = (
{
name = bottom;
pos = (110,-274);
},
{
name = top;
pos = (110,700);
},
{
name = topright;
pos = (202,992);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (48,0);
ref = uni0326;
}
);
width = 219;
},
{
anchors = (
{
name = bottom;
pos = (110,-262);
},
{
name = top;
pos = (110,700);
},
{
name = topright;
pos = (202,992);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = l;
},
{
alignment = -1;
pos = (53,0);
ref = uni0326;
}
);
width = 220;
}
);
note = uni013C;
unicode = 316;
},
{
glyphname = ldot;
kernLeft = b;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,0,l),
(170,700,l),
(64,700,l),
(64,0,l)
);
},
{
closed = 1;
nodes = (
(312,311,o),
(344,343,o),
(344,366,qs),
(344,390,o),
(312,423,o),
(288,423,qs),
(265,423,o),
(232,390,o),
(232,366,qs),
(232,343,o),
(265,311,o),
(288,311,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 2 4 1 3 1 2 3 105 0 0 0 33 77 0 1 1 34 1 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 350;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(162,0,l),
(162,700,l),
(78,700,l),
(78,0,l)
);
},
{
closed = 1;
nodes = (
(309,318,o),
(338,347,o),
(338,367,qs),
(338,388,o),
(309,417,o),
(288,417,qs),
(267,417,o),
(238,388,o),
(238,367,qs),
(238,347,o),
(267,318,o),
(288,318,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 2 4 1 3 1 2 3 105 0 0 0 33 77 0 1 1 34 1 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 346;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(178,0,l),
(178,700,l),
(50,700,l),
(50,0,l)
);
},
{
closed = 1;
nodes = (
(314,304,o),
(350,339,o),
(350,365,qs),
(350,391,o),
(314,428,o),
(288,428,qs),
(262,428,o),
(226,391,o),
(226,365,qs),
(226,339,o),
(262,304,o),
(288,304,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 2 4 1 3 1 2 3 105 0 0 0 33 77 0 1 1 34 1 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 354;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(173,0,l),
(173,700,l),
(59,700,l),
(59,0,l)
);
},
{
closed = 1;
nodes = (
(313,309,o),
(346,341,o),
(346,366,qs),
(346,390,o),
(313,424,o),
(288,424,qs),
(263,424,o),
(230,390,o),
(230,366,qs),
(230,341,o),
(263,309,o),
(288,309,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 2 4 1 3 1 2 3 105 0 0 0 33 77 0 1 1 34 1 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 351;
}
);
note = ldot;
unicode = 320;
},
{
glyphname = lslash;
kernLeft = b;
kernRight = lslash;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(186,0,l),
(186,379,l),
(259,406,l),
(259,494,l),
(186,466,l),
(186,700,l),
(80,700,l),
(80,427,l),
(9,399,l),
(9,312,l),
(80,339,l),
(80,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
9 8 7 6 3 2 1 0 8 1 0 1 76 0 0 0 33 77 0 1 1 34 1 78 21 20 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 284;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(160,0,l),
(160,396,l),
(235,426,l),
(235,494,l),
(160,463,l),
(160,700,l),
(76,700,l),
(76,429,l),
(2,398,l),
(2,331,l),
(76,361,l),
(76,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
9 8 7 6 3 2 1 0 8 1 0 1 76 0 0 0 33 77 0 1 1 34 1 78 21 20 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 251;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(212,0,l),
(212,362,l),
(282,386,l),
(282,493,l),
(212,468,l),
(212,700,l),
(84,700,l),
(84,424,l),
(15,400,l),
(15,293,l),
(84,317,l),
(84,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
9 8 7 6 3 2 1 0 8 1 0 1 76 0 0 0 33 77 0 1 1 34 1 78 21 20 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 317;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(195,0,l),
(195,373,l),
(266,399,l),
(266,493,l),
(195,466,l),
(195,700,l),
(81,700,l),
(81,426,l),
(11,399,l),
(11,306,l),
(81,332,l),
(81,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
9 8 7 6 3 2 1 0 8 1 0 1 76 0 0 0 33 77 0 1 1 34 1 78 21 20 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 295;
}
);
note = lslash;
unicode = 322;
},
{
glyphname = m;
kernLeft = dotlessi;
kernRight = a;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,0,l),
(163,266,ls),
(163,339,o),
(233,417,o),
(288,417,qs),
(343,417,o),
(403,345,o),
(403,278,qs),
(403,0,l),
(508,0,l),
(508,266,ls),
(508,337,o),
(575,417,o),
(633,417,qs),
(690,417,o),
(748,345,o),
(748,278,qs),
(748,0,l),
(853,0,l),
(853,292,ls),
(853,398,o),
(744,508,o),
(654,508,qs),
(601,508,o),
(510,457,o),
(485,411,q),
(461,459,o),
(371,508,o),
(312,508,qs),
(264,508,o),
(186,469,o),
(162,432,q),
(159,496,l),
(57,496,l),
(57,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
2 1 4 0 8 1 3 4 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
6 1 4 4 0 97 2 1 2 0 0 36 77 7 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 36 77 6 1 4 4 1 97 2 1 1 1 42 77 7 5 2 3 3 34 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
19 35 19 35 19 36 35 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 901;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(153,0,l),
(153,257,ls),
(153,341,o),
(230,436,o),
(291,436,qs),
(349,436,o),
(411,358,o),
(411,281,qs),
(411,0,l),
(495,0,l),
(495,257,ls),
(495,341,o),
(572,436,o),
(634,436,qs),
(692,436,o),
(754,358,o),
(754,281,qs),
(754,0,l),
(837,0,l),
(837,290,ls),
(837,398,o),
(734,508,o),
(642,508,qs),
(589,508,o),
(498,456,o),
(472,411,q),
(426,508,o),
(305,508,qs),
(255,508,o),
(175,464,o),
(151,424,q),
(145,496,l),
(69,496,l),
(69,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
7 2 2 3 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
6 1 4 4 0 97 2 1 2 0 0 36 77 7 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 36 77 6 1 4 4 1 97 2 1 1 1 42 77 7 5 2 3 3 34 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
19 35 19 35 19 35 35 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 895;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(172,0,l),
(172,275,ls),
(172,337,o),
(235,397,o),
(284,397,qs),
(336,397,o),
(394,332,o),
(394,275,qs),
(394,0,l),
(521,0,l),
(521,275,ls),
(521,332,o),
(578,397,o),
(632,397,qs),
(686,397,o),
(742,332,o),
(742,275,qs),
(742,0,l),
(869,0,l),
(869,293,ls),
(869,397,o),
(755,508,o),
(665,508,qs),
(612,508,o),
(523,457,o),
(498,411,q),
(472,459,o),
(376,508,o),
(318,508,qs),
(273,508,o),
(196,473,o),
(172,439,q),
(172,496,l),
(45,496,l),
(45,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
8 2 2 4 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
6 1 4 4 0 97 2 1 2 0 0 36 77 7 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 36 77 6 1 4 4 1 97 2 1 1 1 42 77 7 5 2 3 3 34 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
19 35 19 35 19 36 35 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 906;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(166,0,l),
(166,269,ls),
(166,338,o),
(234,410,o),
(286,410,qs),
(341,410,o),
(400,341,o),
(400,277,qs),
(400,0,l),
(512,0,l),
(512,269,ls),
(512,335,o),
(576,410,o),
(633,410,qs),
(689,410,o),
(746,341,o),
(746,277,qs),
(746,0,l),
(858,0,l),
(858,292,ls),
(858,397,o),
(748,508,o),
(657,508,qs),
(604,508,o),
(514,457,o),
(489,411,q),
(464,459,o),
(372,508,o),
(314,508,qs),
(268,508,o),
(190,470,o),
(165,434,q),
(163,496,l),
(53,496,l),
(53,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
8 2 2 4 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
6 1 4 4 0 97 2 1 2 0 0 36 77 7 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 36 77 6 1 4 4 1 97 2 1 1 1 42 77 7 5 2 3 3 34 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
19 35 19 35 19 36 35 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 902;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
kernLeft = dotlessi;
kernRight = a;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (295,0);
},
{
name = top;
pos = (296,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,0,l),
(163,266,ls),
(163,337,o),
(234,418,o),
(294,418,qs),
(353,418,o),
(414,345,o),
(414,278,qs),
(414,0,l),
(520,0,l),
(520,291,ls),
(520,396,o),
(415,508,o),
(325,508,qs),
(274,508,o),
(185,463,o),
(161,423,q),
(159,496,l),
(57,496,l),
(57,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 3 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 3 0 97 1 1 0 0 36 77 4 1 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 36 77 0 3 3 1 97 0 1 1 42 77 4 1 2 2 34 2 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
19 35 19 35 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 568;
},
{
anchors = (
{
name = bottom;
pos = (300,0);
},
{
name = top;
pos = (306,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(153,0,l),
(153,257,ls),
(153,341,o),
(236,436,o),
(302,436,qs),
(430,436,o),
(430,281,qs),
(430,0,l),
(514,0,l),
(514,290,ls),
(514,398,o),
(411,508,o),
(321,508,qs),
(264,508,o),
(174,454,o),
(150,407,q),
(145,496,l),
(69,496,l),
(69,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 2 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 3 0 97 1 1 0 0 36 77 4 1 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 36 77 0 3 3 1 97 0 1 1 42 77 4 1 2 2 34 2 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
19 34 19 35 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = top;
pos = (286,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(172,0,l),
(172,275,ls),
(172,332,o),
(232,400,o),
(286,400,qs),
(340,400,o),
(398,332,o),
(398,275,qs),
(398,0,l),
(525,0,l),
(525,292,ls),
(525,394,o),
(417,508,o),
(329,508,qs),
(282,508,o),
(196,472,o),
(172,438,q),
(172,496,l),
(45,496,l),
(45,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 3 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 3 0 97 1 1 0 0 36 77 4 1 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 36 77 0 3 3 1 97 0 1 1 42 77 4 1 2 2 34 2 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
19 35 19 35 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (293,0);
},
{
name = top;
pos = (293,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(166,0,l),
(166,269,ls),
(166,335,o),
(233,412,o),
(291,412,qs),
(348,412,o),
(409,341,o),
(409,277,qs),
(409,0,l),
(521,0,l),
(521,291,ls),
(521,396,o),
(415,508,o),
(326,508,qs),
(277,508,o),
(189,466,o),
(165,428,q),
(163,496,l),
(53,496,l),
(53,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 3 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 3 0 97 1 1 0 0 36 77 4 1 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 36 77 0 3 3 1 97 0 1 1 42 77 4 1 2 2 34 2 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
19 35 19 35 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 566;
}
);
note = n;
unicode = 110;
},
{
glyphname = nacute;
kernLeft = dotlessi;
kernRight = a;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (295,0);
},
{
name = top;
pos = (296,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (187,0);
ref = acutecomb;
}
);
width = 568;
},
{
anchors = (
{
name = bottom;
pos = (300,0);
},
{
name = top;
pos = (306,747);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (201,0);
ref = acutecomb;
}
);
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = top;
pos = (286,751);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (173,0);
ref = acutecomb;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (293,0);
},
{
name = top;
pos = (293,750);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (182,0);
ref = acutecomb;
}
);
width = 566;
}
);
note = nacute;
unicode = 324;
},
{
glyphname = ncaron;
kernLeft = dotlessi;
kernRight = a;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (295,0);
},
{
name = top;
pos = (296,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (155,0);
ref = uni030C;
}
);
width = 568;
},
{
anchors = (
{
name = bottom;
pos = (300,0);
},
{
name = top;
pos = (306,733);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (169,0);
ref = uni030C;
}
);
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = top;
pos = (286,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (140,0);
ref = uni030C;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (293,0);
},
{
name = top;
pos = (293,728);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (150,0);
ref = uni030C;
}
);
width = 566;
}
);
note = ncaron;
unicode = 328;
},
{
glyphname = uni0146;
kernLeft = dotlessi;
kernRight = a;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (295,-256);
},
{
name = top;
pos = (296,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (239,0);
ref = uni0326;
}
);
width = 568;
},
{
anchors = (
{
name = bottom;
pos = (300,-238);
},
{
name = top;
pos = (306,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (251,0);
ref = uni0326;
}
);
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (289,-274);
},
{
name = top;
pos = (286,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (227,0);
ref = uni0326;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (293,-262);
},
{
name = top;
pos = (293,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (235,0);
ref = uni0326;
}
);
width = 566;
}
);
note = uni0146;
unicode = 326;
},
{
glyphname = ntilde;
kernLeft = dotlessi;
kernRight = a;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (295,0);
},
{
name = top;
pos = (296,705);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (133,0);
ref = tildecomb;
}
);
width = 568;
},
{
anchors = (
{
name = bottom;
pos = (300,0);
},
{
name = top;
pos = (306,705);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (155,0);
ref = tildecomb;
}
);
width = 573;
},
{
anchors = (
{
name = bottom;
pos = (289,0);
},
{
name = top;
pos = (286,704);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (110,0);
ref = tildecomb;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (293,0);
},
{
name = top;
pos = (293,704);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = n;
},
{
alignment = -1;
pos = (125,0);
ref = tildecomb;
}
);
width = 566;
}
);
note = ntilde;
unicode = 241;
},
{
glyphname = eng;
kernLeft = dotlessi;
kernRight = a;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(365,-220,ls),
(520,-220,o),
(520,-68,qs),
(520,291,ls),
(520,396,o),
(415,508,o),
(325,508,qs),
(274,508,o),
(185,463,o),
(161,423,q),
(159,496,l),
(57,496,l),
(57,0,l),
(163,0,l),
(163,266,ls),
(163,337,o),
(234,418,o),
(294,418,qs),
(353,418,o),
(414,345,o),
(414,278,qs),
(414,-67,ls),
(414,-100,o),
(383,-129,o),
(349,-129,qs),
(315,-129,l),
(315,-220,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 1 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 1 3 97 4 1 3 3 36 77 0 2 2 34 77 0 0 0 5 97 0 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 3 3 36 77 0 1 1 4 97 0 4 4 42 77 0 2 2 34 77 0 0 0 5 97 0 5 5 38 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 35 17 19 37 32 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 567;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(373,-220,ls),
(443,-220,o),
(514,-153,o),
(514,-82,qs),
(514,290,ls),
(514,398,o),
(411,508,o),
(321,508,qs),
(264,508,o),
(174,454,o),
(150,407,q),
(145,496,l),
(69,496,l),
(69,0,l),
(153,0,l),
(153,257,ls),
(153,341,o),
(236,436,o),
(302,436,qs),
(430,436,o),
(430,281,qs),
(430,-80,ls),
(430,-116,o),
(397,-148,o),
(360,-148,qs),
(321,-148,l),
(321,-220,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 2 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 1 3 97 4 1 3 3 36 77 0 2 2 34 77 0 0 0 5 97 0 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 3 3 36 77 0 1 1 4 97 0 4 4 42 77 0 2 2 34 77 0 0 0 5 97 0 5 5 38 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
37 35 17 19 36 32 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 572;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(356,-220,ls),
(525,-220,o),
(525,-54,qs),
(525,292,ls),
(525,394,o),
(417,508,o),
(329,508,qs),
(282,508,o),
(196,472,o),
(172,438,q),
(172,496,l),
(45,496,l),
(45,0,l),
(172,0,l),
(172,275,ls),
(172,332,o),
(232,400,o),
(286,400,qs),
(340,400,o),
(398,332,o),
(398,275,qs),
(398,-54,ls),
(398,-85,o),
(369,-111,o),
(337,-111,qs),
(309,-111,l),
(309,-220,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 1 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 1 3 97 4 1 3 3 36 77 0 2 2 34 77 0 0 0 5 97 0 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 3 3 36 77 0 1 1 4 97 0 4 4 42 77 0 2 2 34 77 0 0 0 5 97 0 5 5 38 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 35 17 19 37 32 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(362,-220,ls),
(438,-220,o),
(521,-146,o),
(521,-63,qs),
(521,291,ls),
(521,396,o),
(415,508,o),
(326,508,qs),
(277,508,o),
(189,466,o),
(165,428,q),
(163,496,l),
(53,496,l),
(53,0,l),
(166,0,l),
(166,269,ls),
(166,335,o),
(233,412,o),
(291,412,qs),
(348,412,o),
(409,341,o),
(409,277,qs),
(409,-63,ls),
(409,-95,o),
(379,-123,o),
(345,-123,qs),
(313,-123,l),
(313,-220,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 1 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 1 3 97 4 1 3 3 36 77 0 2 2 34 77 0 0 0 5 97 0 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 3 3 36 77 0 1 1 4 97 0 4 4 42 77 0 2 2 34 77 0 0 0 5 97 0 5 5 38 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
37 35 17 19 37 32 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = eng;
unicode = 331;
},
{
glyphname = o;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (297,496);
},
{
name = topright;
pos = (572,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(369,-12,o),
(488,55,o),
(555,174,o),
(555,249,qs),
(555,327,o),
(487,445,o),
(369,508,o),
(297,508,qs),
(224,508,o),
(107,445,o),
(39,327,o),
(39,249,qs),
(39,170,o),
(105,52,o),
(221,-12,o),
(293,-12,qs)
);
},
{
closed = 1;
nodes = (
(254,80,o),
(186,119,o),
(146,196,o),
(146,249,qs),
(146,322,o),
(226,416,o),
(295,416,qs),
(362,416,o),
(447,325,o),
(447,250,qs),
(447,201,o),
(407,124,o),
(338,80,o),
(294,80,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 42 77 5 1 3 3 1 97 4 1 1 1 40 1 78 16 16 0 0 16 29 16 28 23 21 0 15 0 14 38 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (302,0);
},
{
name = ogonek;
pos = (408,10);
},
{
name = top;
pos = (302,496);
},
{
name = topright;
pos = (584,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(372,-12,o),
(490,55,o),
(556,174,o),
(556,249,qs),
(556,329,o),
(488,447,o),
(372,508,o),
(302,508,qs),
(230,508,o),
(114,444,o),
(48,326,o),
(48,249,qs),
(48,168,o),
(115,50,o),
(229,-12,o),
(298,-12,qs)
);
},
{
closed = 1;
nodes = (
(255,61,o),
(180,102,o),
(133,186,o),
(133,249,qs),
(133,330,o),
(221,435,o),
(301,435,qs),
(380,435,o),
(471,331,o),
(471,249,qs),
(471,193,o),
(426,108,o),
(347,61,o),
(298,61,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 42 77 5 1 3 3 1 97 4 1 1 1 40 1 78 16 16 0 0 16 29 16 28 23 21 0 15 0 14 38 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 604;
},
{
anchors = (
{
name = bottom;
pos = (291,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (291,496);
},
{
name = topright;
pos = (559,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(364,-12,o),
(485,55,o),
(553,173,o),
(553,248,qs),
(553,325,o),
(485,443,o),
(365,508,o),
(291,508,qs),
(218,508,o),
(99,445,o),
(29,327,o),
(29,248,qs),
(29,172,o),
(95,53,o),
(212,-12,o),
(287,-12,qs)
);
},
{
closed = 1;
nodes = (
(233,99,o),
(158,182,o),
(158,248,qs),
(158,313,o),
(231,397,o),
(289,397,qs),
(345,397,o),
(422,318,o),
(422,250,qs),
(422,187,o),
(347,99,o),
(289,99,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 42 77 5 1 3 3 1 97 4 1 1 1 40 1 78 16 16 0 0 16 27 16 26 22 20 0 15 0 14 38 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 582;
},
{
anchors = (
{
name = bottom;
pos = (295,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (295,496);
},
{
name = topright;
pos = (567,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(367,-12,o),
(487,55,o),
(554,173,o),
(554,248,qs),
(554,326,o),
(486,444,o),
(368,508,o),
(295,508,qs),
(222,508,o),
(104,445,o),
(35,326,o),
(35,248,qs),
(35,170,o),
(101,52,o),
(218,-12,o),
(291,-12,qs)
);
},
{
closed = 1;
nodes = (
(253,86,o),
(189,125,o),
(150,198,o),
(150,248,qs),
(150,319,o),
(228,410,o),
(293,410,qs),
(356,410,o),
(438,322,o),
(438,250,qs),
(438,204,o),
(400,129,o),
(334,86,o),
(292,86,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 42 77 5 1 3 3 1 97 4 1 1 1 40 1 78 16 16 0 0 16 29 16 28 23 21 0 15 0 14 38 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 589;
}
);
note = o;
unicode = 111;
},
{
glyphname = oacute;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (297,749);
},
{
name = topright;
pos = (572,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (188,0);
ref = acutecomb;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (302,0);
},
{
name = ogonek;
pos = (408,10);
},
{
name = top;
pos = (302,747);
},
{
name = topright;
pos = (584,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (197,0);
ref = acutecomb;
}
);
width = 604;
},
{
anchors = (
{
name = bottom;
pos = (291,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (291,751);
},
{
name = topright;
pos = (559,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (178,0);
ref = acutecomb;
}
);
width = 582;
},
{
anchors = (
{
name = bottom;
pos = (295,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (295,750);
},
{
name = topright;
pos = (567,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (184,0);
ref = acutecomb;
}
);
width = 589;
}
);
note = oacute;
unicode = 243;
},
{
glyphname = obreve;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (297,722);
},
{
name = topright;
pos = (572,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (148,0);
ref = uni0306;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (302,0);
},
{
name = ogonek;
pos = (408,10);
},
{
name = top;
pos = (302,732);
},
{
name = topright;
pos = (584,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (161,0);
ref = uni0306;
}
);
width = 604;
},
{
anchors = (
{
name = bottom;
pos = (291,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (291,712);
},
{
name = topright;
pos = (559,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (135,0);
ref = uni0306;
}
);
width = 582;
},
{
anchors = (
{
name = bottom;
pos = (295,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (295,719);
},
{
name = topright;
pos = (567,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (144,0);
ref = uni0306;
}
);
width = 589;
}
);
note = obreve;
unicode = 335;
},
{
glyphname = ocircumflex;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (297,730);
},
{
name = topright;
pos = (572,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (155,0);
ref = uni0302;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (302,0);
},
{
name = ogonek;
pos = (408,10);
},
{
name = top;
pos = (302,733);
},
{
name = topright;
pos = (584,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (165,0);
ref = uni0302;
}
);
width = 604;
},
{
anchors = (
{
name = bottom;
pos = (291,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (291,726);
},
{
name = topright;
pos = (559,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (145,0);
ref = uni0302;
}
);
width = 582;
},
{
anchors = (
{
name = bottom;
pos = (295,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (295,728);
},
{
name = topright;
pos = (567,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (152,0);
ref = uni0302;
}
);
width = 589;
}
);
note = ocircumflex;
unicode = 244;
},
{
glyphname = odieresis;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (297,723);
},
{
name = topright;
pos = (572,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (126,0);
ref = uni0308;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (302,0);
},
{
name = ogonek;
pos = (408,10);
},
{
name = top;
pos = (302,720);
},
{
name = topright;
pos = (584,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (155,0);
ref = uni0308;
}
);
width = 604;
},
{
anchors = (
{
name = bottom;
pos = (291,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (291,726);
},
{
name = topright;
pos = (559,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (97,0);
ref = uni0308;
}
);
width = 582;
},
{
anchors = (
{
name = bottom;
pos = (295,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (295,724);
},
{
name = topright;
pos = (567,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (116,0);
ref = uni0308;
}
);
width = 589;
}
);
note = odieresis;
unicode = 246;
},
{
glyphname = ograve;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (297,749);
},
{
name = topright;
pos = (572,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (188,0);
ref = gravecomb;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (302,0);
},
{
name = ogonek;
pos = (408,10);
},
{
name = top;
pos = (302,747);
},
{
name = topright;
pos = (584,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (197,0);
ref = gravecomb;
}
);
width = 604;
},
{
anchors = (
{
name = bottom;
pos = (291,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (291,751);
},
{
name = topright;
pos = (559,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (178,0);
ref = gravecomb;
}
);
width = 582;
},
{
anchors = (
{
name = bottom;
pos = (295,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (295,750);
},
{
name = topright;
pos = (567,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (184,0);
ref = gravecomb;
}
);
width = 589;
}
);
note = ograve;
unicode = 242;
},
{
glyphname = ohungarumlaut;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (297,711);
},
{
name = topright;
pos = (572,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (165,0);
ref = uni030B;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (302,0);
},
{
name = ogonek;
pos = (408,10);
},
{
name = top;
pos = (302,698);
},
{
name = topright;
pos = (584,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (186,0);
ref = uni030B;
}
);
width = 604;
},
{
anchors = (
{
name = bottom;
pos = (291,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (291,723);
},
{
name = topright;
pos = (559,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (143,0);
ref = uni030B;
}
);
width = 582;
},
{
anchors = (
{
name = bottom;
pos = (295,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (295,715);
},
{
name = topright;
pos = (567,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (157,0);
ref = uni030B;
}
);
width = 589;
}
);
note = ohungarumlaut;
unicode = 337;
},
{
glyphname = omacron;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (297,693);
},
{
name = topright;
pos = (572,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (121,0);
ref = uni0304;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (302,0);
},
{
name = ogonek;
pos = (408,10);
},
{
name = top;
pos = (302,695);
},
{
name = topright;
pos = (584,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (128,0);
ref = uni0304;
}
);
width = 604;
},
{
anchors = (
{
name = bottom;
pos = (291,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (291,690);
},
{
name = topright;
pos = (559,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (114,0);
ref = uni0304;
}
);
width = 582;
},
{
anchors = (
{
name = bottom;
pos = (295,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (295,692);
},
{
name = topright;
pos = (567,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (119,0);
ref = uni0304;
}
);
width = 589;
}
);
note = omacron;
unicode = 333;
},
{
glyphname = oslash;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(370,-12,o),
(487,54,o),
(552,173,o),
(552,248,qs),
(552,350,o),
(494,421,q),
(560,496,l),
(469,496,l),
(443,466,l),
(382,508,o),
(298,508,qs),
(227,508,o),
(110,444,o),
(42,326,o),
(42,248,qs),
(42,144,o),
(100,75,q),
(35,0,l),
(126,0,l),
(151,29,l),
(212,-12,o),
(295,-12,qs)
);
},
{
closed = 1;
nodes = (
(251,79,o),
(216,103,q),
(424,341,l),
(445,302,o),
(445,249,qs),
(445,177,o),
(363,79,o),
(296,79,qs)
);
},
{
closed = 1;
nodes = (
(170,155,l),
(149,195,o),
(149,248,qs),
(149,322,o),
(228,418,o),
(297,418,qs),
(342,418,o),
(378,393,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
15 12 2 5 1 37 36 27 26 4 4 5 4 1 2 0 4 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
15 12 2 5 2 37 36 27 26 4 4 5 4 1 2 0 4 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 1 97 2 1 1 1 42 77 7 1 4 4 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 36 77 0 5 5 1 97 0 1 1 42 77 0 0 0 34 77 7 1 4 4 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
22 22 0 0 32 30 22 29 22 28 0 21 0 20 18 38 18 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 592;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(374,-12,o),
(487,54,o),
(551,172,o),
(551,248,qs),
(551,351,o),
(493,422,q),
(558,496,l),
(479,496,l),
(450,463,l),
(387,508,o),
(304,508,qs),
(234,508,o),
(120,443,o),
(55,325,o),
(55,248,qs),
(55,144,o),
(112,74,q),
(48,0,l),
(128,0,l),
(156,33,l),
(219,-12,o),
(302,-12,qs)
);
},
{
closed = 1;
nodes = (
(248,58,o),
(205,90,q),
(440,360,l),
(467,311,o),
(467,248,qs),
(467,166,o),
(378,58,o),
(302,58,qs)
);
},
{
closed = 1;
nodes = (
(166,136,l),
(139,182,o),
(139,248,qs),
(139,330,o),
(224,438,o),
(304,438,qs),
(359,438,o),
(400,406,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
12 1 5 1 37 36 27 26 15 4 6 4 5 1 1 0 4 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
12 1 5 2 37 36 27 26 15 4 6 4 5 1 1 0 4 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 1 97 2 1 1 1 42 77 7 1 4 4 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 36 77 0 5 5 1 97 0 1 1 42 77 0 0 0 34 77 7 1 4 4 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
22 22 0 0 32 30 22 29 22 28 0 21 0 20 18 38 18 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 601;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(364,-12,o),
(485,55,o),
(553,173,o),
(553,248,qs),
(553,350,o),
(494,420,q),
(561,496,l),
(459,496,l),
(436,469,l),
(372,508,o),
(291,508,qs),
(218,508,o),
(99,445,o),
(29,327,o),
(29,248,qs),
(29,144,o),
(87,75,q),
(21,0,l),
(123,0,l),
(145,25,l),
(205,-12,o),
(287,-12,qs)
);
},
{
closed = 1;
nodes = (
(254,99,o),
(226,116,q),
(407,322,l),
(422,292,o),
(422,250,qs),
(422,187,o),
(347,99,o),
(289,99,qs)
);
},
{
closed = 1;
nodes = (
(174,173,l),
(158,208,o),
(158,248,qs),
(158,313,o),
(231,397,o),
(289,397,qs),
(326,397,o),
(356,379,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
15 12 2 5 1 37 36 27 26 4 4 5 4 1 2 0 4 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
15 12 2 5 2 37 36 27 26 4 4 5 4 1 2 0 4 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 1 97 2 1 1 1 42 77 7 1 4 4 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 36 77 0 5 5 1 97 0 1 1 42 77 0 0 0 34 77 7 1 4 4 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
22 22 0 0 32 30 22 29 22 28 0 21 0 20 18 38 18 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 582;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(368,-12,o),
(486,54,o),
(552,173,o),
(552,248,qs),
(552,350,o),
(494,421,q),
(560,496,l),
(466,496,l),
(441,467,l),
(377,508,o),
(295,508,qs),
(224,508,o),
(106,444,o),
(38,326,o),
(38,248,qs),
(38,145,o),
(95,75,q),
(30,0,l),
(125,0,l),
(149,28,l),
(211,-12,o),
(292,-12,qs)
);
},
{
closed = 1;
nodes = (
(252,85,o),
(219,107,q),
(418,335,l),
(437,299,o),
(437,249,qs),
(437,180,o),
(357,85,o),
(293,85,qs)
);
},
{
closed = 1;
nodes = (
(171,161,l),
(152,199,o),
(152,248,qs),
(152,319,o),
(229,411,o),
(294,411,qs),
(336,411,o),
(371,388,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
15 12 2 5 1 37 36 27 26 4 4 5 4 1 2 0 4 3 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
15 12 2 5 2 37 36 27 26 4 4 5 4 1 2 0 4 3 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 5 5 1 97 2 1 1 1 42 77 7 1 4 4 0 97 6 3 2 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 36 77 0 5 5 1 97 0 1 1 42 77 0 0 0 34 77 7 1 4 4 3 97 6 1 3 3 40 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
22 22 0 0 32 30 22 29 22 28 0 21 0 20 18 38 18 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 588;
}
);
note = oslash;
unicode = 248;
},
{
glyphname = otilde;
kernLeft = c;
kernRight = b;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (297,0);
},
{
name = ogonek;
pos = (405,10);
},
{
name = top;
pos = (297,705);
},
{
name = topright;
pos = (572,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (133,0);
ref = tildecomb;
}
);
width = 593;
},
{
anchors = (
{
name = bottom;
pos = (302,0);
},
{
name = ogonek;
pos = (408,10);
},
{
name = top;
pos = (302,705);
},
{
name = topright;
pos = (584,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (151,0);
ref = tildecomb;
}
);
width = 604;
},
{
anchors = (
{
name = bottom;
pos = (291,0);
},
{
name = ogonek;
pos = (401,10);
},
{
name = top;
pos = (291,704);
},
{
name = topright;
pos = (559,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (115,0);
ref = tildecomb;
}
);
width = 582;
},
{
anchors = (
{
name = bottom;
pos = (295,0);
},
{
name = ogonek;
pos = (403,10);
},
{
name = top;
pos = (295,704);
},
{
name = topright;
pos = (567,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = o;
},
{
alignment = -1;
pos = (127,0);
ref = tildecomb;
}
);
width = 589;
}
);
note = otilde;
unicode = 245;
},
{
glyphname = oe;
kernLeft = c;
kernRight = ae;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(352,-12,o),
(452,41,o),
(482,90,q),
(515,41,o),
(618,-12,o),
(683,-12,qs),
(769,-12,o),
(889,79,o),
(912,151,q),
(806,151,l),
(789,116,o),
(726,76,o),
(683,76,qs),
(622,76,o),
(541,156,o),
(537,223,q),
(923,223,l),
(925,271,ls),
(925,336,o),
(895,390,qs),
(864,445,o),
(756,508,o),
(684,508,qs),
(619,508,o),
(514,454,o),
(482,406,q),
(452,455,o),
(354,508,o),
(291,508,qs),
(221,508,o),
(163,476,qs),
(105,442,o),
(39,325,o),
(39,248,qs),
(39,171,o),
(72,112,qs),
(105,53,o),
(219,-12,o),
(289,-12,qs)
);
},
{
closed = 1;
nodes = (
(227,80,o),
(147,171,o),
(147,248,qs),
(147,324,o),
(225,417,o),
(291,417,qs),
(352,417,o),
(433,325,o),
(433,248,qs),
(433,173,o),
(354,80,o),
(289,80,qs)
);
},
{
closed = 1;
nodes = (
(540,296,l),
(547,355,o),
(627,421,o),
(683,421,qs),
(740,421,o),
(816,353,o),
(819,296,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
12 1 10 7 35 1 3 4 2 76 0 4 2 3 2 4 3 128 0 10 0 2 4 10 2 103 9 1 7 7 0 97 1 1 0 0 42 77 12 8 2 3 3 5 97 11 6 2 5 5 40 5 78 39 39 0 0 57 56 54 52 39 50 39 49 45 43 0 38 0 37 34 18 34 21 36 40 13 8 28
CALL[ ]	/* CallFunction */";
};
width = 957;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(363,-12,o),
(467,47,o),
(497,102,q),
(528,48,o),
(634,-12,o),
(702,-12,qs),
(787,-12,o),
(903,76,o),
(925,148,q),
(842,148,l),
(824,106,o),
(753,59,o),
(702,59,qs),
(634,59,o),
(544,153,o),
(540,229,q),
(935,229,l),
(937,276,ls),
(937,338,o),
(909,390,qs),
(880,445,o),
(774,508,o),
(704,508,qs),
(635,508,o),
(527,448,o),
(496,394,q),
(467,449,o),
(364,508,o),
(297,508,qs),
(227,508,o),
(171,476,qs),
(113,443,o),
(48,325,o),
(48,248,qs),
(48,170,o),
(81,111,qs),
(113,52,o),
(225,-12,o),
(295,-12,qs)
);
},
{
closed = 1;
nodes = (
(248,60,o),
(175,108,o),
(134,194,o),
(134,248,qs),
(134,328,o),
(220,436,o),
(297,436,qs),
(344,436,o),
(417,389,o),
(458,304,o),
(458,248,qs),
(458,168,o),
(372,60,o),
(295,60,qs)
);
},
{
closed = 1;
nodes = (
(542,294,l),
(548,361,o),
(638,437,o),
(701,437,qs),
(766,437,o),
(851,360,o),
(854,294,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
12 1 10 7 35 1 3 4 2 76 0 4 2 3 2 4 3 128 0 10 0 2 4 10 2 103 9 1 7 7 0 97 1 1 0 0 42 77 12 8 2 3 3 5 97 11 6 2 5 5 40 5 78 39 39 0 0 59 58 56 54 39 52 39 51 46 44 0 38 0 37 34 18 34 21 36 40 13 8 28
CALL[ ]	/* CallFunction */";
};
width = 979;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(341,-12,o),
(436,34,o),
(467,77,q),
(500,34,o),
(602,-12,o),
(664,-12,qs),
(752,-12,o),
(875,82,o),
(898,154,q),
(769,154,l),
(753,126,o),
(699,93,o),
(663,93,qs),
(610,93,o),
(538,159,o),
(533,217,q),
(910,217,l),
(912,265,ls),
(912,334,o),
(881,389,qs),
(849,445,o),
(737,508,o),
(664,508,qs),
(602,508,o),
(501,461,o),
(468,418,q),
(437,461,o),
(343,508,o),
(284,508,qs),
(212,508,o),
(155,475,qs),
(96,441,o),
(29,324,o),
(29,248,qs),
(29,171,o),
(63,113,qs),
(96,54,o),
(211,-12,o),
(283,-12,qs)
);
},
{
closed = 1;
nodes = (
(230,99,o),
(160,177,o),
(160,248,qs),
(160,319,o),
(230,397,o),
(284,397,qs),
(336,397,o),
(407,319,o),
(407,248,qs),
(407,177,o),
(336,99,o),
(283,99,qs)
);
},
{
closed = 1;
nodes = (
(537,297,l),
(545,349,o),
(615,404,o),
(664,404,qs),
(713,404,o),
(780,345,o),
(783,297,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
12 1 7 0 35 1 5 3 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
12 1 9 0 35 1 5 3 2 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 2 3 2 4 3 128 0 10 0 2 4 10 2 103 9 1 7 7 0 97 1 1 0 0 42 77 12 8 2 3 3 5 97 11 6 2 5 5 40 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 4 2 3 2 4 3 128 0 10 0 2 4 10 2 103 0 9 9 0 97 1 1 0 0 42 77 0 7 7 0 97 1 1 0 0 42 77 12 8 2 3 3 5 97 11 6 2 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 4 2 8 2 4 8 128 0 10 0 2 4 10 2 103 0 9 9 0 97 1 1 0 0 42 77 0 7 7 0 97 1 1 0 0 42 77 12 1 8 8 5 97 11 6 2 5 5 40 77 0 3 3 5 97 11 6 2 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
39 39 0 0 57 56 54 52 39 50 39 49 45 43 0 38 0 37 34 18 34 21 36 40 13 8 28
CALL[ ]	/* CallFunction */";
};
width = 935;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(348,-12,o),
(446,39,o),
(477,85,q),
(510,39,o),
(613,-12,o),
(677,-12,qs),
(763,-12,o),
(884,80,o),
(907,152,q),
(793,152,l),
(777,119,o),
(717,82,o),
(676,82,qs),
(618,82,o),
(540,157,o),
(535,221,q),
(918,221,l),
(920,269,ls),
(920,338,o),
(890,389,qs),
(859,445,o),
(749,508,o),
(677,508,qs),
(613,508,o),
(510,457,o),
(477,410,q),
(447,457,o),
(350,508,o),
(288,508,qs),
(217,508,o),
(160,475,qs),
(102,442,o),
(35,324,o),
(35,248,qs),
(35,170,o),
(69,112,qs),
(102,53,o),
(216,-12,o),
(287,-12,qs)
);
},
{
closed = 1;
nodes = (
(228,86,o),
(151,173,o),
(151,248,qs),
(151,322,o),
(227,410,o),
(288,410,qs),
(347,410,o),
(424,323,o),
(424,248,qs),
(424,174,o),
(348,86,o),
(287,86,qs)
);
},
{
closed = 1;
nodes = (
(539,296,l),
(546,352,o),
(623,415,o),
(676,415,qs),
(731,415,o),
(804,350,o),
(807,296,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
35 1 3 4 1 76 12 1 7 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 2 3 2 4 3 128 0 10 0 2 4 10 2 103 9 1 7 7 0 97 1 1 0 0 42 77 12 8 2 3 3 5 97 11 6 2 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 4 2 3 2 4 3 128 0 10 0 2 4 10 2 103 0 9 9 0 97 1 1 0 0 42 77 0 7 7 0 97 1 1 0 0 42 77 12 8 2 3 3 5 97 11 6 2 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
39 39 0 0 57 56 54 52 39 50 39 49 45 43 0 38 0 37 34 18 34 21 36 40 13 8 28
CALL[ ]	/* CallFunction */";
};
width = 950;
}
);
note = oe;
unicode = 339;
},
{
glyphname = p;
kernLeft = p;
kernRight = b;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,-220,l),
(163,76,l),
(187,37,o),
(278,-12,o),
(337,-12,qs),
(408,-12,o),
(516,57,o),
(575,176,o),
(575,249,qs),
(575,322,o),
(517,440,o),
(409,508,o),
(337,508,qs),
(280,508,o),
(191,461,o),
(163,421,q),
(159,496,l),
(57,496,l),
(57,-220,l)
);
},
{
closed = 1;
nodes = (
(248,81,o),
(164,176,o),
(164,248,qs),
(164,322,o),
(249,416,o),
(315,416,qs),
(382,416,o),
(467,324,o),
(467,249,qs),
(467,176,o),
(383,81,o),
(315,81,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
2 1 4 0 16 1 2 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 0 97 1 1 0 0 36 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 36 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 19 19 30 19 29 37 19 38 35 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(153,-220,l),
(153,83,l),
(178,38,o),
(273,-12,o),
(334,-12,qs),
(408,-12,o),
(519,55,o),
(580,173,o),
(580,247,qs),
(580,322,o),
(520,441,o),
(409,508,o),
(335,508,qs),
(271,508,o),
(180,455,o),
(153,414,q),
(145,496,l),
(69,496,l),
(69,-220,l)
);
},
{
closed = 1;
nodes = (
(274,61,o),
(197,110,o),
(155,195,o),
(155,248,qs),
(155,331,o),
(249,435,o),
(325,435,qs),
(403,435,o),
(495,329,o),
(495,248,qs),
(495,165,o),
(401,61,o),
(325,61,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
16 2 2 5 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 0 97 1 1 0 0 36 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 36 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 19 19 31 19 30 37 19 38 35 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(173,-220,l),
(173,68,l),
(197,35,o),
(282,-12,o),
(339,-12,qs),
(408,-12,o),
(512,58,o),
(569,178,o),
(569,250,qs),
(569,321,o),
(513,439,o),
(408,508,o),
(339,508,qs),
(288,508,o),
(201,466,o),
(172,427,q),
(172,496,l),
(45,496,l),
(45,-220,l)
);
},
{
closed = 1;
nodes = (
(247,100,o),
(172,185,o),
(172,248,qs),
(172,312,o),
(248,396,o),
(305,396,qs),
(361,396,o),
(439,317,o),
(439,250,qs),
(439,187,o),
(364,100,o),
(305,100,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
2 1 4 0 16 1 2 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 0 97 1 1 0 0 36 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 36 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 19 19 30 19 29 37 19 38 35 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 598;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(166,-220,l),
(166,73,l),
(190,36,o),
(278,-12,o),
(337,-12,qs),
(407,-12,o),
(515,57,o),
(573,176,o),
(573,249,qs),
(573,321,o),
(515,439,o),
(409,508,o),
(338,508,qs),
(283,508,o),
(194,463,o),
(166,423,q),
(163,496,l),
(53,496,l),
(53,-220,l)
);
},
{
closed = 1;
nodes = (
(248,87,o),
(166,179,o),
(166,248,qs),
(166,318,o),
(248,409,o),
(312,409,qs),
(375,409,o),
(458,321,o),
(458,249,qs),
(458,180,o),
(376,87,o),
(312,87,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
2 1 4 0 16 1 2 5 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 0 97 1 1 0 0 36 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 36 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 19 19 30 19 29 37 19 38 35 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 608;
}
);
note = p;
unicode = 112;
},
{
glyphname = thorn;
kernRight = b;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,-220,l),
(163,76,l),
(189,34,o),
(279,-12,o),
(337,-12,qs),
(409,-12,o),
(520,56,o),
(582,174,o),
(582,247,qs),
(582,320,o),
(521,439,o),
(410,508,o),
(337,508,qs),
(224,508,o),
(163,420,q),
(163,700,l),
(57,700,l),
(57,-220,l)
);
},
{
closed = 1;
nodes = (
(249,81,o),
(163,175,o),
(163,248,qs),
(163,322,o),
(250,416,o),
(319,416,qs),
(388,416,o),
(474,321,o),
(474,248,qs),
(474,174,o),
(387,81,o),
(319,81,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
2 1 4 1 15 1 2 5 2 76 0 0 0 33 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78 18 18 18 29 18 28 37 19 38 34 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 620;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(153,-220,l),
(153,83,l),
(178,38,o),
(273,-12,o),
(334,-12,qs),
(408,-12,o),
(519,55,o),
(580,173,o),
(580,247,qs),
(580,322,o),
(520,441,o),
(409,508,o),
(335,508,qs),
(271,508,o),
(180,455,o),
(153,414,q),
(153,700,l),
(69,700,l),
(69,-220,l)
);
},
{
closed = 1;
nodes = (
(274,61,o),
(197,110,o),
(155,195,o),
(155,248,qs),
(155,331,o),
(249,435,o),
(325,435,qs),
(403,435,o),
(495,329,o),
(495,248,qs),
(495,165,o),
(401,61,o),
(325,61,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
16 2 2 5 4 1 76 0 0 0 33 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78 19 19 19 31 19 30 37 19 38 35 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(173,-220,l),
(173,68,l),
(200,29,o),
(284,-12,o),
(339,-12,qs),
(409,-12,o),
(520,56,o),
(583,175,o),
(583,247,qs),
(583,319,o),
(522,438,o),
(411,508,o),
(339,508,qs),
(233,508,o),
(173,425,q),
(173,700,l),
(45,700,l),
(45,-220,l)
);
},
{
closed = 1;
nodes = (
(250,100,o),
(171,183,o),
(171,248,qs),
(171,313,o),
(250,396,o),
(312,396,qs),
(373,396,o),
(453,312,o),
(453,247,qs),
(453,182,o),
(373,100,o),
(312,100,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
2 1 4 1 15 1 2 5 2 76 0 0 0 33 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78 18 18 18 29 18 28 37 19 38 34 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 612;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(166,-220,l),
(166,73,l),
(193,32,o),
(280,-12,o),
(337,-12,qs),
(409,-12,o),
(520,56,o),
(582,174,o),
(582,247,qs),
(582,320,o),
(521,439,o),
(410,508,o),
(338,508,qs),
(227,508,o),
(166,421,q),
(166,700,l),
(53,700,l),
(53,-220,l)
);
},
{
closed = 1;
nodes = (
(249,87,o),
(166,178,o),
(166,248,qs),
(166,319,o),
(249,409,o),
(316,409,qs),
(383,409,o),
(467,318,o),
(467,247,qs),
(467,176,o),
(382,87,o),
(316,87,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
2 1 4 1 15 1 2 5 2 76 0 0 0 33 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 2 97 0 2 2 40 77 0 3 3 38 3 78 18 18 18 29 18 28 37 19 38 34 16 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 617;
}
);
note = thorn;
unicode = 254;
},
{
glyphname = q;
kernLeft = c;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(451,-220,l),
(557,-220,l),
(557,496,l),
(455,496,l),
(451,424,l),
(424,464,o),
(334,508,o),
(280,508,qs),
(208,508,o),
(99,439,o),
(39,321,o),
(39,249,qs),
(39,176,o),
(100,57,o),
(208,-11,o),
(278,-11,qs),
(338,-11,o),
(426,38,o),
(451,74,q)
);
},
{
closed = 1;
nodes = (
(256,81,o),
(187,123,o),
(147,200,o),
(147,249,qs),
(147,297,o),
(186,373,o),
(255,416,o),
(298,416,qs),
(366,416,o),
(450,321,o),
(450,248,qs),
(450,173,o),
(365,81,o),
(298,81,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
13 1 4 1 18 1 0 5 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
13 1 4 2 18 1 0 5 2 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 1 97 2 1 1 1 42 77 6 1 5 5 0 97 0 0 0 40 77 0 3 3 38 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 36 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 0 97 0 0 0 40 77 0 3 3 38 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 19 19 32 19 31 38 17 19 38 33 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 614;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(476,-220,l),
(560,-220,l),
(560,496,l),
(484,496,l),
(476,413,l),
(450,458,o),
(355,508,o),
(295,508,qs),
(219,508,o),
(107,440,o),
(48,322,o),
(48,249,qs),
(48,176,o),
(108,57,o),
(220,-12,o),
(294,-12,qs),
(357,-12,o),
(449,41,o),
(476,82,q)
);
},
{
closed = 1;
nodes = (
(257,61,o),
(179,106,o),
(134,191,o),
(134,248,qs),
(134,304,o),
(178,389,o),
(255,435,o),
(303,435,qs),
(382,435,o),
(473,330,o),
(473,248,qs),
(473,167,o),
(383,61,o),
(303,61,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 13 2 5 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 1 97 2 1 1 1 42 77 6 1 5 5 0 97 0 0 0 40 77 0 3 3 38 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 36 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 0 97 0 0 0 40 77 0 3 3 38 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 19 19 32 19 31 38 17 19 38 33 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 628;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(426,-220,l),
(554,-220,l),
(554,496,l),
(426,496,l),
(426,434,l),
(399,469,o),
(313,507,o),
(264,507,qs),
(197,507,o),
(90,438,o),
(29,320,o),
(29,249,qs),
(30,175,o),
(91,57,o),
(196,-11,o),
(262,-11,qs),
(318,-11,o),
(402,35,o),
(426,65,q)
);
},
{
closed = 1;
nodes = (
(235,100,o),
(160,185,o),
(160,249,qs),
(160,311,o),
(234,396,o),
(292,396,qs),
(350,396,o),
(426,312,o),
(426,248,qs),
(426,201,o),
(388,134,o),
(326,100,o),
(292,100,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
13 1 4 1 18 1 0 5 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
13 1 4 2 18 1 0 5 2 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 1 97 2 1 1 1 42 77 6 1 5 5 0 97 0 0 0 40 77 0 3 3 38 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 36 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 0 97 0 0 0 40 77 0 3 3 38 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 19 19 31 19 30 39 17 19 38 33 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(443,-220,l),
(556,-220,l),
(556,496,l),
(445,496,l),
(443,427,l),
(416,466,o),
(327,507,o),
(274,507,qs),
(204,507,o),
(95,439,o),
(35,321,o),
(35,249,qs),
(36,175,o),
(97,57,o),
(204,-11,o),
(273,-11,qs),
(331,-11,o),
(418,37,o),
(443,71,q)
);
},
{
closed = 1;
nodes = (
(255,87,o),
(189,128,o),
(151,202,o),
(151,249,qs),
(151,318,o),
(233,409,o),
(296,409,qs),
(361,409,o),
(442,318,o),
(442,248,qs),
(442,199,o),
(403,126,o),
(336,87,o),
(296,87,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
13 1 4 1 18 1 0 5 2 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
13 1 4 2 18 1 0 5 2 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 1 97 2 1 1 1 42 77 6 1 5 5 0 97 0 0 0 40 77 0 3 3 38 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 36 77 0 4 4 1 97 0 1 1 42 77 6 1 5 5 0 97 0 0 0 40 77 0 3 3 38 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 19 19 32 19 31 39 17 19 38 33 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
kernLeft = dotlessi;
kernRight = r;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = top;
pos = (177,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,0,l),
(163,249,ls),
(163,324,o),
(233,397,o),
(304,397,qs),
(333,397,l),
(333,508,l),
(275,508,o),
(187,458,o),
(162,412,q),
(159,496,l),
(57,496,l),
(57,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 2 2 0 97 1 1 0 0 36 77 0 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 36 77 0 2 2 1 97 0 1 1 42 77 0 3 3 34 3 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
19 33 19 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 353;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = top;
pos = (182,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(153,0,l),
(153,250,ls),
(153,333,o),
(234,420,o),
(315,420,qs),
(338,420,l),
(338,508,l),
(271,508,o),
(176,451,o),
(152,401,q),
(145,496,l),
(69,496,l),
(69,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 3 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 2 2 0 97 1 1 0 0 36 77 0 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 36 77 0 2 2 1 97 0 1 1 42 77 0 3 3 34 3 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
19 33 19 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 363;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = top;
pos = (171,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(172,0,l),
(172,248,ls),
(172,315,o),
(231,374,o),
(293,374,qs),
(327,374,l),
(327,508,l),
(278,508,o),
(198,464,o),
(172,422,q),
(172,496,l),
(45,496,l),
(45,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 2 2 0 97 1 1 0 0 36 77 0 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 36 77 0 2 2 1 97 0 1 1 42 77 0 3 3 34 3 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
19 33 19 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 342;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = top;
pos = (175,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(166,0,l),
(166,249,ls),
(166,321,o),
(232,389,o),
(300,389,qs),
(331,389,l),
(331,508,l),
(275,508,o),
(191,460,o),
(165,415,q),
(163,496,l),
(53,496,l),
(53,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 2 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 2 2 0 97 1 1 0 0 36 77 0 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 36 77 0 2 2 1 97 0 1 1 42 77 0 3 3 34 3 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
19 33 19 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 349;
}
);
note = r;
unicode = 114;
},
{
glyphname = racute;
kernLeft = dotlessi;
kernRight = r;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = top;
pos = (177,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (68,0);
ref = acutecomb;
}
);
width = 353;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = top;
pos = (182,747);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (77,0);
ref = acutecomb;
}
);
width = 363;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = top;
pos = (171,751);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (58,0);
ref = acutecomb;
}
);
width = 342;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = top;
pos = (175,750);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (64,0);
ref = acutecomb;
}
);
width = 349;
}
);
note = racute;
unicode = 341;
},
{
glyphname = rcaron;
kernLeft = dotlessi;
kernRight = r;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = top;
pos = (177,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (35,0);
ref = uni030C;
}
);
width = 353;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = top;
pos = (182,733);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (45,0);
ref = uni030C;
}
);
width = 363;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = top;
pos = (171,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (25,0);
ref = uni030C;
}
);
width = 342;
},
{
anchors = (
{
name = bottom;
pos = (116,0);
},
{
name = top;
pos = (175,728);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (32,0);
ref = uni030C;
}
);
width = 349;
}
);
note = rcaron;
unicode = 345;
},
{
glyphname = uni0157;
kernLeft = dotlessi;
kernRight = r;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (116,-256);
},
{
name = top;
pos = (177,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (61,0);
ref = uni0326;
}
);
width = 353;
},
{
anchors = (
{
name = bottom;
pos = (116,-238);
},
{
name = top;
pos = (182,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (67,0);
ref = uni0326;
}
);
width = 363;
},
{
anchors = (
{
name = bottom;
pos = (116,-274);
},
{
name = top;
pos = (171,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (54,0);
ref = uni0326;
}
);
width = 342;
},
{
anchors = (
{
name = bottom;
pos = (116,-262);
},
{
name = top;
pos = (175,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = r;
},
{
alignment = -1;
pos = (58,0);
ref = uni0326;
}
);
width = 349;
}
);
note = uni0157;
unicode = 343;
},
{
glyphname = s;
kernLeft = s;
kernRight = s;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (251,0);
},
{
name = top;
pos = (244,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(339,-12,o),
(448,72,o),
(448,141,qs),
(447,189,o),
(402,248,o),
(327,280,o),
(268,293,qs),
(217,305,o),
(157,337,o),
(157,364,qs),
(157,392,o),
(202,422,o),
(240,422,qs),
(280,422,o),
(331,384,o),
(335,349,q),
(437,349,l),
(430,425,o),
(325,508,o),
(242,508,qs),
(160,508,o),
(53,426,o),
(53,359,qs),
(53,295,o),
(146,232,o),
(230,213,qs),
(288,200,o),
(344,171,o),
(344,138,qs),
(344,109,o),
(295,74,o),
(254,74,qs),
(210,74,o),
(149,119,o),
(142,156,q),
(35,156,l),
(42,80,o),
(166,-12,o),
(254,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 42 77 0 1 1 5 97 6 1 5 5 40 5 78 0 0 0 38 0 37 34 18 42 34 18 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 487;
},
{
anchors = (
{
name = bottom;
pos = (255,0);
},
{
name = top;
pos = (250,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(316,-12,o),
(402,27,o),
(449,96,o),
(449,140,qs),
(449,191,o),
(402,250,o),
(328,279,o),
(267,292,qs),
(209,305,o),
(150,340,o),
(150,368,qs),
(150,399,o),
(200,437,o),
(244,437,qs),
(290,437,o),
(345,394,o),
(350,356,q),
(433,356,l),
(425,428,o),
(324,508,o),
(245,508,qs),
(163,508,o),
(65,426,o),
(65,360,qs),
(65,300,o),
(161,239,o),
(239,222,qs),
(286,212,o),
(335,196,o),
(363,164,o),
(363,135,qs),
(363,102,o),
(311,59,o),
(260,59,qs),
(206,59,o),
(137,113,o),
(128,155,q),
(42,155,l),
(52,78,o),
(169,-12,o),
(259,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 42 77 0 1 1 5 97 6 1 5 5 40 5 78 0 0 0 40 0 39 34 18 43 34 18 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 500;
},
{
anchors = (
{
name = bottom;
pos = (246,0);
},
{
name = top;
pos = (237,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(332,-12,o),
(446,69,o),
(446,140,qs),
(445,187,o),
(401,245,o),
(327,279,o),
(268,294,qs),
(220,306,o),
(163,333,o),
(163,359,qs),
(163,385,o),
(203,407,o),
(235,407,qs),
(271,407,o),
(317,373,o),
(320,342,q),
(441,342,l),
(436,421,o),
(324,508,o),
(239,508,qs),
(185,508,o),
(94,472,o),
(40,403,o),
(40,357,qs),
(40,310,o),
(86,251,o),
(162,218,o),
(220,204,qs),
(268,191,o),
(292,183,o),
(324,159,o),
(324,140,qs),
(324,115,o),
(278,88,o),
(247,88,qs),
(213,88,o),
(161,125,o),
(156,156,q),
(28,156,l),
(31,106,o),
(93,30,o),
(192,-12,o),
(248,-12,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 4 0 4 3 114 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 42 77 0 1 1 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 42 77 0 1 1 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 42 0 41 34 18 45 34 19 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 474;
},
{
anchors = (
{
name = bottom;
pos = (249,0);
},
{
name = top;
pos = (241,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(336,-12,o),
(447,71,o),
(447,141,qs),
(446,188,o),
(401,247,o),
(327,279,o),
(268,293,qs),
(218,305,o),
(159,335,o),
(159,362,qs),
(159,389,o),
(202,417,o),
(238,417,qs),
(277,417,o),
(326,380,o),
(330,347,q),
(438,347,l),
(432,424,o),
(324,508,o),
(241,508,qs),
(158,508,o),
(48,426,o),
(48,358,qs),
(48,293,o),
(140,230,o),
(226,210,qs),
(266,200,o),
(306,187,o),
(337,160,o),
(337,138,qs),
(337,111,o),
(288,78,o),
(251,78,qs),
(211,78,o),
(153,121,o),
(147,156,q),
(33,156,l),
(37,106,o),
(97,29,o),
(194,-12,o),
(252,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 42 77 0 1 1 5 97 6 1 5 5 40 5 78 0 0 0 40 0 39 34 18 43 34 19 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = s;
unicode = 115;
},
{
glyphname = sacute;
kernLeft = s;
kernRight = s;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (251,0);
},
{
name = top;
pos = (244,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (135,0);
ref = acutecomb;
}
);
width = 487;
},
{
anchors = (
{
name = bottom;
pos = (255,0);
},
{
name = top;
pos = (250,747);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (145,0);
ref = acutecomb;
}
);
width = 500;
},
{
anchors = (
{
name = bottom;
pos = (246,0);
},
{
name = top;
pos = (237,751);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (124,0);
ref = acutecomb;
}
);
width = 474;
},
{
anchors = (
{
name = bottom;
pos = (249,0);
},
{
name = top;
pos = (241,750);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (131,0);
ref = acutecomb;
}
);
width = 483;
}
);
note = sacute;
unicode = 347;
},
{
glyphname = scaron;
kernLeft = s;
kernRight = s;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (251,0);
},
{
name = top;
pos = (244,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (102,0);
ref = uni030C;
}
);
width = 487;
},
{
anchors = (
{
name = bottom;
pos = (255,0);
},
{
name = top;
pos = (250,733);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (113,0);
ref = uni030C;
}
);
width = 500;
},
{
anchors = (
{
name = bottom;
pos = (246,0);
},
{
name = top;
pos = (237,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (91,0);
ref = uni030C;
}
);
width = 474;
},
{
anchors = (
{
name = bottom;
pos = (249,0);
},
{
name = top;
pos = (241,728);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (98,0);
ref = uni030C;
}
);
width = 483;
}
);
note = scaron;
unicode = 353;
},
{
glyphname = scedilla;
kernLeft = s;
kernRight = s;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (251,-261);
},
{
name = top;
pos = (244,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286,-261,ls),
(341,-261,o),
(412,-206,o),
(412,-157,qs),
(412,-107,o),
(339,-55,o),
(282,-56,q),
(282,-11,l),
(356,-4,o),
(448,78,o),
(448,141,qs),
(447,189,o),
(402,248,o),
(327,280,o),
(268,293,qs),
(217,305,o),
(157,337,o),
(157,364,qs),
(157,392,o),
(202,422,o),
(240,422,qs),
(280,422,o),
(331,384,o),
(335,349,q),
(437,349,l),
(430,425,o),
(325,508,o),
(242,508,qs),
(160,508,o),
(53,426,o),
(53,359,qs),
(53,295,o),
(146,232,o),
(230,213,qs),
(288,200,o),
(344,171,o),
(344,138,qs),
(344,109,o),
(295,74,o),
(254,74,qs),
(210,74,o),
(149,119,o),
(142,156,q),
(35,156,l),
(42,89,o),
(140,1,o),
(214,-9,q),
(214,-115,l),
(269,-115,ls),
(330,-115,o),
(330,-155,qs),
(330,-197,o),
(269,-197,qs),
(167,-197,l),
(167,-261,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
46 7 2 7 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 3 7 7 3 112 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 6 6 4 97 0 4 4 42 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 3 7 6 3 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 6 6 4 97 0 4 4 42 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 29 34 18 42 34 20 34 32 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 487;
},
{
anchors = (
{
name = bottom;
pos = (255,-259);
},
{
name = top;
pos = (250,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(288,-259,ls),
(342,-259,o),
(409,-205,o),
(409,-159,qs),
(409,-112,o),
(339,-62,o),
(280,-63,q),
(280,-11,l),
(357,-6,o),
(449,77,o),
(449,140,qs),
(449,191,o),
(402,250,o),
(328,279,o),
(267,292,qs),
(209,305,o),
(150,340,o),
(150,368,qs),
(150,399,o),
(200,437,o),
(244,437,qs),
(290,437,o),
(345,394,o),
(350,356,q),
(433,356,l),
(425,428,o),
(324,508,o),
(245,508,qs),
(163,508,o),
(65,426,o),
(65,360,qs),
(65,300,o),
(161,239,o),
(239,222,qs),
(286,212,o),
(335,196,o),
(363,164,o),
(363,135,qs),
(363,102,o),
(311,59,o),
(260,59,qs),
(206,59,o),
(137,113,o),
(128,155,q),
(42,155,l),
(51,86,o),
(148,-2,o),
(224,-10,q),
(224,-113,l),
(273,-113,ls),
(341,-113,o),
(341,-158,qs),
(341,-206,o),
(273,-206,qs),
(181,-206,l),
(181,-259,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
7 1 8 7 1 76 0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 8 0 1 0 8 1 105 0 0 0 9 0 9 99 0 6 6 4 97 0 4 4 42 77 0 3 3 7 97 0 7 7 40 7 78 55 53 17 27 34 18 43 34 20 34 32 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 500;
},
{
anchors = (
{
name = bottom;
pos = (246,-263);
},
{
name = top;
pos = (237,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(283,-263,ls),
(338,-263,o),
(413,-207,o),
(413,-155,qs),
(413,-103,o),
(339,-48,o),
(283,-50,q),
(283,-10,l),
(354,-2,o),
(446,77,o),
(446,140,qs),
(445,187,o),
(401,245,o),
(327,279,o),
(268,294,qs),
(220,306,o),
(163,333,o),
(163,359,qs),
(163,385,o),
(203,407,o),
(235,407,qs),
(271,407,o),
(317,373,o),
(320,342,q),
(441,342,l),
(436,421,o),
(324,508,o),
(239,508,qs),
(185,508,o),
(94,472,o),
(40,403,o),
(40,357,qs),
(40,310,o),
(86,251,o),
(162,218,o),
(220,204,qs),
(268,191,o),
(292,183,o),
(324,159,o),
(324,140,qs),
(324,115,o),
(278,88,o),
(247,88,qs),
(213,88,o),
(161,125,o),
(156,156,q),
(28,156,l),
(32,91,o),
(131,3,o),
(203,-8,q),
(203,-118,l),
(264,-118,ls),
(317,-118,o),
(317,-153,qs),
(317,-189,o),
(264,-189,qs),
(152,-189,l),
(152,-263,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
49 7 2 7 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 6 2 6 5 114 0 2 3 6 2 3 126 0 3 7 7 3 112 0 7 0 1 0 7 1 106 0 0 0 8 0 8 100 0 6 6 4 97 0 4 4 42 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 6 2 6 5 114 0 2 3 6 2 3 126 0 3 7 6 3 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 100 0 6 6 4 97 0 4 4 42 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 3 7 6 3 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 100 0 6 6 4 97 0 4 4 42 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 29 34 18 45 34 20 34 32 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 474;
},
{
anchors = (
{
name = bottom;
pos = (249,-262);
},
{
name = top;
pos = (241,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(285,-262,ls),
(340,-262,o),
(412,-206,o),
(412,-156,qs),
(412,-106,o),
(339,-53,o),
(282,-54,q),
(282,-11,l),
(355,-3,o),
(447,78,o),
(447,141,qs),
(446,188,o),
(401,247,o),
(327,279,o),
(268,293,qs),
(218,305,o),
(159,335,o),
(159,362,qs),
(159,389,o),
(202,417,o),
(238,417,qs),
(277,417,o),
(326,380,o),
(330,347,q),
(438,347,l),
(432,424,o),
(324,508,o),
(241,508,qs),
(158,508,o),
(48,426,o),
(48,358,qs),
(48,293,o),
(140,230,o),
(226,210,qs),
(266,200,o),
(306,187,o),
(337,160,o),
(337,138,qs),
(337,111,o),
(288,78,o),
(251,78,qs),
(211,78,o),
(153,121,o),
(147,156,q),
(33,156,l),
(38,90,o),
(136,2,o),
(210,-9,q),
(210,-116,l),
(267,-116,ls),
(325,-116,o),
(325,-155,qs),
(325,-195,o),
(267,-195,qs),
(162,-195,l),
(162,-262,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
47 7 2 7 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 3 7 7 3 112 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 6 6 4 97 0 4 4 42 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 6 2 6 5 2 128 0 2 3 6 2 3 126 0 3 7 6 3 7 126 0 7 0 1 0 7 1 106 0 0 0 8 0 8 99 0 6 6 4 97 0 4 4 42 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 29 34 18 43 34 20 34 32 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = scedilla;
unicode = 351;
},
{
glyphname = uni0219;
kernLeft = s;
kernRight = s;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (251,-256);
},
{
name = top;
pos = (244,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (195,0);
ref = uni0326;
}
);
width = 487;
},
{
anchors = (
{
name = bottom;
pos = (255,-238);
},
{
name = top;
pos = (250,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (206,0);
ref = uni0326;
}
);
width = 500;
},
{
anchors = (
{
name = bottom;
pos = (246,-274);
},
{
name = top;
pos = (237,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (184,0);
ref = uni0326;
}
);
width = 474;
},
{
anchors = (
{
name = bottom;
pos = (249,-262);
},
{
name = top;
pos = (241,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = s;
},
{
alignment = -1;
pos = (191,0);
ref = uni0326;
}
);
width = 483;
}
);
note = uni0219;
unicode = 537;
},
{
glyphname = germandbls;
kernLeft = b;
kernRight = germandbls;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(533,-10,o),
(641,78,o),
(641,155,qs),
(641,217,o),
(571,289,o),
(502,314,qs),
(443,335,o),
(394,363,o),
(394,388,qs),
(394,406,o),
(418,429,o),
(441,444,qs),
(482,469,o),
(527,519,o),
(527,563,qs),
(527,616,o),
(467,692,o),
(365,732,o),
(303,732,qs),
(193,732,o),
(59,618,o),
(59,515,qs),
(59,0,l),
(164,0,l),
(164,506,ls),
(164,570,o),
(230,643,o),
(300,643,qs),
(352,643,o),
(422,598,o),
(422,553,qs),
(422,530,o),
(398,497,o),
(375,481,qs),
(335,454,ls),
(287,423,o),
(287,373,qs),
(287,338,o),
(330,289,o),
(391,258,o),
(438,242,qs),
(487,226,o),
(536,187,o),
(536,148,qs),
(536,110,o),
(487,71,o),
(446,71,qs),
(399,71,o),
(344,127,o),
(339,172,q),
(237,172,l),
(247,85,o),
(361,-10,o),
(448,-10,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 1 1 3 97 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 2 1 2 0 1 128 0 4 0 2 0 4 2 105 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 53 0 52 35 33 30 29 26 24 34 18 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 666;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(522,-10,o),
(626,74,o),
(626,150,qs),
(626,212,o),
(557,283,o),
(489,307,qs),
(436,325,o),
(375,357,o),
(375,386,qs),
(375,405,o),
(399,428,o),
(425,445,qs),
(467,469,o),
(516,523,o),
(516,569,qs),
(516,645,o),
(393,732,o),
(302,732,qs),
(197,732,o),
(71,621,o),
(71,520,qs),
(71,0,l),
(154,0,l),
(154,512,ls),
(154,580,o),
(223,661,o),
(300,661,qs),
(358,661,o),
(432,612,o),
(432,562,qs),
(432,537,o),
(407,501,o),
(383,486,qs),
(340,458,ls),
(317,443,o),
(290,404,o),
(290,375,qs),
(290,326,o),
(369,270,o),
(438,246,qs),
(489,230,o),
(541,186,o),
(541,144,qs),
(541,101,o),
(486,56,o),
(440,56,qs),
(386,56,o),
(325,120,o),
(321,169,q),
(238,169,l),
(245,85,o),
(356,-10,o),
(441,-10,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 1 1 3 97 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 2 1 2 0 1 128 0 4 0 2 0 4 2 105 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 52 0 51 35 33 30 29 26 24 34 18 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 664;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(544,-10,o),
(656,80,o),
(656,159,qs),
(656,222,o),
(584,295,o),
(515,321,qs),
(454,343,o),
(413,369,o),
(413,390,qs),
(413,406,o),
(437,429,o),
(457,442,qs),
(496,468,o),
(538,516,o),
(538,556,qs),
(538,611,o),
(476,690,o),
(369,732,o),
(304,732,qs),
(230,732,o),
(113,680,o),
(46,580,o),
(46,509,qs),
(46,0,l),
(174,0,l),
(174,499,ls),
(174,625,o),
(299,625,qs),
(347,625,o),
(411,584,o),
(411,543,qs),
(411,522,o),
(388,492,o),
(367,476,qs),
(329,450,ls),
(284,419,o),
(284,370,qs),
(284,334,o),
(328,284,o),
(389,255,o),
(438,238,qs),
(486,221,o),
(531,187,o),
(531,151,qs),
(531,118,o),
(488,85,o),
(452,85,qs),
(412,85,o),
(362,133,o),
(357,175,q),
(236,175,l),
(247,84,o),
(365,-10,o),
(454,-10,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 1 1 3 97 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 2 1 2 0 1 128 0 4 0 2 0 4 2 105 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 53 0 52 35 33 29 28 26 24 34 18 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 667;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(536,-10,o),
(646,78,o),
(646,156,qs),
(646,219,o),
(575,291,o),
(506,316,qs),
(447,337,o),
(400,365,o),
(400,389,qs),
(400,405,o),
(423,427,o),
(446,443,qs),
(486,468,o),
(531,518,o),
(531,560,qs),
(531,614,o),
(470,692,o),
(366,732,o),
(303,732,qs),
(231,732,o),
(118,681,o),
(54,582,o),
(54,513,qs),
(54,0,l),
(167,0,l),
(167,503,ls),
(167,567,o),
(231,637,o),
(299,637,qs),
(350,637,o),
(418,593,o),
(418,549,qs),
(418,527,o),
(394,494,o),
(372,479,qs),
(333,453,ls),
(286,420,o),
(286,372,qs),
(286,321,o),
(366,265,o),
(438,241,qs),
(486,225,o),
(534,186,o),
(534,149,qs),
(534,112,o),
(487,75,o),
(448,75,qs),
(403,75,o),
(350,128,o),
(345,173,q),
(237,173,l),
(246,84,o),
(362,-10,o),
(450,-10,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 1 1 3 97 6 5 2 3 3 34 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 2 0 1 128 0 2 2 4 97 0 4 4 41 77 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 2 1 2 0 1 128 0 4 0 2 0 4 2 105 0 3 3 34 77 0 1 1 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 53 0 52 35 33 29 28 25 23 34 18 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 666;
}
);
note = germandbls;
unicode = 223;
},
{
glyphname = t;
kernLeft = t;
kernRight = t;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (229,0);
},
{
name = top;
pos = (185,496);
},
{
name = topright;
pos = (253,992);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(331,0,l),
(331,90,l),
(275,90,ls),
(238,90,o),
(205,118,o),
(205,154,qs),
(205,407,l),
(331,407,l),
(331,496,l),
(205,496,l),
(205,616,l),
(99,616,l),
(99,496,l),
(24,496,l),
(24,407,l),
(99,407,l),
(99,154,ls),
(99,74,o),
(177,0,o),
(253,0,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 2 1 2 133 4 1 0 0 1 95 3 1 1 1 36 77 0 5 5 6 96 7 1 6 6 34 6 78 0 0 0 19 0 18 35 17 17 17 17 19 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 369;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = top;
pos = (194,496);
},
{
name = topright;
pos = (253,992);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(342,0,l),
(342,72,l),
(289,72,ls),
(240,72,o),
(203,105,o),
(203,152,qs),
(203,425,l),
(342,425,l),
(342,496,l),
(203,496,l),
(203,615,l),
(119,615,l),
(119,496,l),
(33,496,l),
(33,425,l),
(119,425,l),
(119,152,ls),
(119,69,o),
(193,0,o),
(265,0,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 2 1 2 133 4 1 0 0 1 95 3 1 1 1 36 77 0 5 5 6 96 7 1 6 6 34 6 78 0 0 0 19 0 18 35 17 17 17 17 19 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 387;
},
{
anchors = (
{
name = bottom;
pos = (219,0);
},
{
name = top;
pos = (176,496);
},
{
name = topright;
pos = (253,992);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(320,0,l),
(320,107,l),
(261,107,ls),
(235,107,o),
(207,129,o),
(207,155,qs),
(207,389,l),
(320,389,l),
(320,496,l),
(207,496,l),
(207,617,l),
(79,617,l),
(79,496,l),
(15,496,l),
(15,389,l),
(79,389,l),
(79,156,ls),
(79,0,o),
(240,0,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 2 1 2 133 4 1 0 0 1 95 3 1 1 1 36 77 0 5 5 6 96 7 1 6 6 34 6 78 0 0 0 18 0 17 35 17 17 17 17 18 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 351;
},
{
anchors = (
{
name = bottom;
pos = (225,0);
},
{
name = top;
pos = (182,496);
},
{
name = topright;
pos = (253,992);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(327,0,l),
(327,95,l),
(270,95,ls),
(237,95,o),
(206,121,o),
(206,154,qs),
(206,401,l),
(327,401,l),
(327,496,l),
(206,496,l),
(206,616,l),
(92,616,l),
(92,496,l),
(21,496,l),
(21,401,l),
(92,401,l),
(92,155,ls),
(92,75,o),
(171,0,o),
(248,0,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 2 1 2 133 4 1 0 0 1 95 3 1 1 1 36 77 0 5 5 6 96 7 1 6 6 34 6 78 0 0 0 19 0 18 35 17 17 17 17 19 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 363;
}
);
note = t;
unicode = 116;
},
{
glyphname = tcaron;
kernLeft = t;
kernRight = t;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (229,0);
},
{
name = top;
pos = (185,496);
},
{
name = topright;
pos = (253,992);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (253,0);
ref = uni030C.alt;
}
);
width = 369;
},
{
anchors = (
{
name = bottom;
pos = (238,0);
},
{
name = top;
pos = (194,496);
},
{
name = topright;
pos = (253,992);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (253,0);
ref = uni030C.alt;
}
);
width = 387;
},
{
anchors = (
{
name = bottom;
pos = (219,0);
},
{
name = top;
pos = (176,496);
},
{
name = topright;
pos = (253,992);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (253,0);
ref = uni030C.alt;
}
);
width = 351;
},
{
anchors = (
{
name = bottom;
pos = (225,0);
},
{
name = top;
pos = (182,496);
},
{
name = topright;
pos = (253,992);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (253,0);
ref = uni030C.alt;
}
);
width = 363;
}
);
note = tcaron;
unicode = 357;
},
{
glyphname = uni0163;
kernLeft = t;
kernRight = t;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (229,-261);
},
{
name = top;
pos = (185,496);
},
{
name = topright;
pos = (253,992);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,-261,ls),
(319,-261,o),
(390,-206,o),
(390,-157,qs),
(390,-107,o),
(317,-55,o),
(260,-56,q),
(260,0,l),
(331,0,l),
(331,90,l),
(275,90,ls),
(238,90,o),
(205,118,o),
(205,154,qs),
(205,407,l),
(331,407,l),
(331,496,l),
(205,496,l),
(205,616,l),
(99,616,l),
(99,496,l),
(24,496,l),
(24,407,l),
(99,407,l),
(99,154,ls),
(99,33,o),
(192,7,q),
(192,-115,l),
(247,-115,ls),
(308,-115,o),
(308,-155,qs),
(308,-197,o),
(247,-197,qs),
(145,-197,l),
(145,-261,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
7 1 8 7 1 76 0 4 3 4 133 0 9 0 1 0 9 1 106 0 0 0 10 0 10 99 6 1 2 2 3 95 5 1 3 3 36 77 0 7 7 8 95 0 8 8 34 8 78 34 32 28 27 17 35 17 17 17 17 20 34 32 11 8 31
CALL[ ]	/* CallFunction */";
};
width = 369;
},
{
anchors = (
{
name = bottom;
pos = (238,-259);
},
{
name = top;
pos = (194,496);
},
{
name = topright;
pos = (253,992);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(342,0,l),
(342,72,l),
(289,72,ls),
(240,72,o),
(203,105,o),
(203,152,qs),
(203,425,l),
(342,425,l),
(342,496,l),
(203,496,l),
(203,615,l),
(119,615,l),
(119,496,l),
(33,496,l),
(33,425,l),
(119,425,l),
(119,152,ls),
(119,88,o),
(163,19,o),
(207,7,q),
(207,-113,l),
(256,-113,ls),
(324,-113,o),
(324,-158,qs),
(324,-206,o),
(256,-206,qs),
(164,-206,l),
(164,-259,l),
(271,-259,ls),
(325,-259,o),
(392,-205,o),
(392,-159,qs),
(392,-112,o),
(322,-62,o),
(263,-63,q),
(263,0,l),
(265,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
16 1 10 9 1 76 0 6 5 6 133 0 0 0 3 2 0 3 105 0 2 0 1 2 1 99 8 1 4 4 5 95 7 1 5 5 36 77 0 9 9 10 95 0 10 10 34 10 78 36 35 34 32 17 17 17 17 21 34 33 36 17 11 8 31
CALL[ ]	/* CallFunction */";
};
width = 387;
},
{
anchors = (
{
name = bottom;
pos = (219,-263);
},
{
name = top;
pos = (176,496);
},
{
name = topright;
pos = (253,992);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(256,-263,ls),
(311,-263,o),
(386,-207,o),
(386,-155,qs),
(386,-103,o),
(312,-48,o),
(256,-50,q),
(256,0,l),
(320,0,l),
(320,107,l),
(261,107,ls),
(235,107,o),
(207,129,o),
(207,155,qs),
(207,389,l),
(320,389,l),
(320,496,l),
(207,496,l),
(207,617,l),
(79,617,l),
(79,496,l),
(15,496,l),
(15,389,l),
(79,389,l),
(79,156,ls),
(79,35,o),
(176,8,q),
(176,-118,l),
(237,-118,ls),
(290,-118,o),
(290,-153,qs),
(290,-189,o),
(237,-189,qs),
(125,-189,l),
(125,-263,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
7 1 8 7 1 76 0 4 3 4 133 0 9 0 1 0 9 1 106 0 0 0 10 0 10 99 6 1 2 2 3 95 5 1 3 3 36 77 0 7 7 8 95 0 8 8 34 8 78 34 32 28 27 17 35 17 17 17 17 20 34 32 11 8 31
CALL[ ]	/* CallFunction */";
};
width = 351;
},
{
anchors = (
{
name = bottom;
pos = (225,-262);
},
{
name = top;
pos = (182,496);
},
{
name = topright;
pos = (253,992);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(261,-262,ls),
(316,-262,o),
(388,-206,o),
(388,-156,qs),
(388,-106,o),
(315,-53,o),
(258,-54,q),
(258,0,l),
(327,0,l),
(327,95,l),
(270,95,ls),
(237,95,o),
(206,121,o),
(206,154,qs),
(206,401,l),
(327,401,l),
(327,496,l),
(206,496,l),
(206,616,l),
(92,616,l),
(92,496,l),
(21,496,l),
(21,401,l),
(92,401,l),
(92,155,ls),
(92,34,o),
(186,8,q),
(186,-116,l),
(243,-116,ls),
(301,-116,o),
(301,-155,qs),
(301,-195,o),
(243,-195,qs),
(138,-195,l),
(138,-262,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
7 1 8 7 1 76 0 4 3 4 133 0 9 0 1 0 9 1 106 0 0 0 10 0 10 99 6 1 2 2 3 95 5 1 3 3 36 77 0 7 7 8 95 0 8 8 34 8 78 34 32 28 27 17 35 17 17 17 17 20 34 32 11 8 31
CALL[ ]	/* CallFunction */";
};
width = 363;
}
);
note = uni0163;
unicode = 355;
},
{
glyphname = uni021B;
kernLeft = t;
kernRight = t;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (229,-256);
},
{
name = top;
pos = (185,496);
},
{
name = topright;
pos = (253,992);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (173,0);
ref = uni0326;
}
);
width = 369;
},
{
anchors = (
{
name = bottom;
pos = (238,-238);
},
{
name = top;
pos = (194,496);
},
{
name = topright;
pos = (253,992);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (189,0);
ref = uni0326;
}
);
width = 387;
},
{
anchors = (
{
name = bottom;
pos = (219,-274);
},
{
name = top;
pos = (176,496);
},
{
name = topright;
pos = (253,992);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (157,0);
ref = uni0326;
}
);
width = 351;
},
{
anchors = (
{
name = bottom;
pos = (225,-262);
},
{
name = top;
pos = (182,496);
},
{
name = topright;
pos = (253,992);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = t;
},
{
alignment = -1;
pos = (168,0);
ref = uni0326;
}
);
width = 363;
}
);
note = uni021B;
unicode = 539;
},
{
glyphname = u;
kernLeft = u;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (284,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,496);
},
{
name = topright;
pos = (547,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(295,-12,o),
(381,34,o),
(406,74,q),
(408,0,l),
(510,0,l),
(510,496,l),
(404,496,l),
(404,230,ls),
(404,159,o),
(334,78,o),
(273,78,qs),
(214,78,o),
(153,151,o),
(153,218,qs),
(153,496,l),
(48,496,l),
(48,204,ls),
(48,102,o),
(153,-12,o),
(245,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
2 1 0 0 36 77 0 1 1 3 97 5 4 2 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 36 77 0 3 3 34 77 0 1 1 4 97 5 1 4 4 40 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 19 0 18 17 19 35 19 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 567;
},
{
anchors = (
{
name = bottom;
pos = (286,0);
},
{
name = ogonek;
pos = (503,0);
},
{
name = top;
pos = (284,496);
},
{
name = topright;
pos = (552,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(308,-12,o),
(398,42,o),
(422,89,q),
(427,0,l),
(503,0,l),
(503,496,l),
(419,496,l),
(419,239,ls),
(419,155,o),
(336,60,o),
(270,60,qs),
(142,60,o),
(142,215,qs),
(142,496,l),
(58,496,l),
(58,206,ls),
(58,98,o),
(161,-12,o),
(251,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 1 0 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
2 1 0 0 36 77 0 1 1 3 97 5 4 2 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 36 77 0 3 3 34 77 0 1 1 4 97 5 1 4 4 40 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 18 0 17 17 19 34 19 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 572;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (517,0);
},
{
name = top;
pos = (280,496);
},
{
name = topright;
pos = (542,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(284,-12,o),
(365,25,o),
(389,58,q),
(389,0,l),
(517,0,l),
(517,496,l),
(389,496,l),
(389,221,ls),
(389,162,o),
(332,96,o),
(276,96,qs),
(223,96,o),
(164,165,o),
(164,221,qs),
(164,496,l),
(37,496,l),
(37,202,ls),
(37,106,o),
(145,-12,o),
(239,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
2 1 0 0 36 77 0 1 1 3 98 5 4 2 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 36 77 0 3 3 34 77 0 1 1 4 98 5 1 4 4 40 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 19 0 18 17 19 35 19 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (283,0);
},
{
name = ogonek;
pos = (512,0);
},
{
name = top;
pos = (281,496);
},
{
name = topright;
pos = (545,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(292,-12,o),
(376,30,o),
(400,68,q),
(402,0,l),
(512,0,l),
(512,496,l),
(399,496,l),
(399,227,ls),
(399,160,o),
(333,84,o),
(274,84,qs),
(217,84,o),
(157,156,o),
(157,219,qs),
(157,496,l),
(44,496,l),
(44,203,ls),
(44,104,o),
(150,-12,o),
(243,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
2 1 0 0 36 77 0 1 1 3 98 5 4 2 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 36 77 0 3 3 34 77 0 1 1 4 98 5 1 4 4 40 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 19 0 18 17 19 35 19 6 8 26
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = u;
unicode = 117;
},
{
glyphname = uacute;
kernLeft = u;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (284,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,749);
},
{
name = topright;
pos = (547,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (173,0);
ref = acutecomb;
}
);
width = 567;
},
{
anchors = (
{
name = bottom;
pos = (286,0);
},
{
name = ogonek;
pos = (503,0);
},
{
name = top;
pos = (284,747);
},
{
name = topright;
pos = (552,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (179,0);
ref = acutecomb;
}
);
width = 572;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (517,0);
},
{
name = top;
pos = (280,751);
},
{
name = topright;
pos = (542,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (167,0);
ref = acutecomb;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (283,0);
},
{
name = ogonek;
pos = (512,0);
},
{
name = top;
pos = (281,750);
},
{
name = topright;
pos = (545,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (171,0);
ref = acutecomb;
}
);
width = 565;
}
);
note = uacute;
unicode = 250;
},
{
glyphname = ubreve;
kernLeft = u;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (284,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,722);
},
{
name = topright;
pos = (547,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (134,0);
ref = uni0306;
}
);
width = 567;
},
{
anchors = (
{
name = bottom;
pos = (286,0);
},
{
name = ogonek;
pos = (503,0);
},
{
name = top;
pos = (284,732);
},
{
name = topright;
pos = (552,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (143,0);
ref = uni0306;
}
);
width = 572;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (517,0);
},
{
name = top;
pos = (280,712);
},
{
name = topright;
pos = (542,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (124,0);
ref = uni0306;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (283,0);
},
{
name = ogonek;
pos = (512,0);
},
{
name = top;
pos = (281,719);
},
{
name = topright;
pos = (545,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (130,0);
ref = uni0306;
}
);
width = 565;
}
);
note = ubreve;
unicode = 365;
},
{
glyphname = ucircumflex;
kernLeft = u;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (284,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,730);
},
{
name = topright;
pos = (547,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (141,0);
ref = uni0302;
}
);
width = 567;
},
{
anchors = (
{
name = bottom;
pos = (286,0);
},
{
name = ogonek;
pos = (503,0);
},
{
name = top;
pos = (284,733);
},
{
name = topright;
pos = (552,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (147,0);
ref = uni0302;
}
);
width = 572;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (517,0);
},
{
name = top;
pos = (280,726);
},
{
name = topright;
pos = (542,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (134,0);
ref = uni0302;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (283,0);
},
{
name = ogonek;
pos = (512,0);
},
{
name = top;
pos = (281,728);
},
{
name = topright;
pos = (545,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (138,0);
ref = uni0302;
}
);
width = 565;
}
);
note = ucircumflex;
unicode = 251;
},
{
glyphname = udieresis;
kernLeft = u;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (284,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,723);
},
{
name = topright;
pos = (547,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (112,0);
ref = uni0308;
}
);
width = 567;
},
{
anchors = (
{
name = bottom;
pos = (286,0);
},
{
name = ogonek;
pos = (503,0);
},
{
name = top;
pos = (284,720);
},
{
name = topright;
pos = (552,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (137,0);
ref = uni0308;
}
);
width = 572;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (517,0);
},
{
name = top;
pos = (280,726);
},
{
name = topright;
pos = (542,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (86,0);
ref = uni0308;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (283,0);
},
{
name = ogonek;
pos = (512,0);
},
{
name = top;
pos = (281,724);
},
{
name = topright;
pos = (545,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (103,0);
ref = uni0308;
}
);
width = 565;
}
);
note = udieresis;
unicode = 252;
},
{
glyphname = ugrave;
kernLeft = u;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (284,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,749);
},
{
name = topright;
pos = (547,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (173,0);
ref = gravecomb;
}
);
width = 567;
},
{
anchors = (
{
name = bottom;
pos = (286,0);
},
{
name = ogonek;
pos = (503,0);
},
{
name = top;
pos = (284,747);
},
{
name = topright;
pos = (552,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (179,0);
ref = gravecomb;
}
);
width = 572;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (517,0);
},
{
name = top;
pos = (280,751);
},
{
name = topright;
pos = (542,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (167,0);
ref = gravecomb;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (283,0);
},
{
name = ogonek;
pos = (512,0);
},
{
name = top;
pos = (281,750);
},
{
name = topright;
pos = (545,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (171,0);
ref = gravecomb;
}
);
width = 565;
}
);
note = ugrave;
unicode = 249;
},
{
glyphname = uhungarumlaut;
kernLeft = u;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (284,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,711);
},
{
name = topright;
pos = (547,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (150,0);
ref = uni030B;
}
);
width = 567;
},
{
anchors = (
{
name = bottom;
pos = (286,0);
},
{
name = ogonek;
pos = (503,0);
},
{
name = top;
pos = (284,698);
},
{
name = topright;
pos = (552,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (168,0);
ref = uni030B;
}
);
width = 572;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (517,0);
},
{
name = top;
pos = (280,723);
},
{
name = topright;
pos = (542,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (132,0);
ref = uni030B;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (283,0);
},
{
name = ogonek;
pos = (512,0);
},
{
name = top;
pos = (281,715);
},
{
name = topright;
pos = (545,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (144,0);
ref = uni030B;
}
);
width = 565;
}
);
note = uhungarumlaut;
unicode = 369;
},
{
glyphname = umacron;
kernLeft = u;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (284,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,693);
},
{
name = topright;
pos = (547,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (107,0);
ref = uni0304;
}
);
width = 567;
},
{
anchors = (
{
name = bottom;
pos = (286,0);
},
{
name = ogonek;
pos = (503,0);
},
{
name = top;
pos = (284,695);
},
{
name = topright;
pos = (552,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (110,0);
ref = uni0304;
}
);
width = 572;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (517,0);
},
{
name = top;
pos = (280,690);
},
{
name = topright;
pos = (542,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (103,0);
ref = uni0304;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (283,0);
},
{
name = ogonek;
pos = (512,0);
},
{
name = top;
pos = (281,692);
},
{
name = topright;
pos = (545,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (105,0);
ref = uni0304;
}
);
width = 565;
}
);
note = umacron;
unicode = 363;
},
{
glyphname = uogonek;
kernLeft = u;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (284,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,496);
},
{
name = topright;
pos = (547,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(295,-12,o),
(381,34,o),
(406,74,q),
(408,17,l),
(354,-11,o),
(308,-72,o),
(308,-107,qs),
(308,-156,o),
(380,-206,o),
(434,-206,qs),
(474,-206,o),
(515,-193,q),
(515,-127,l),
(478,-142,o),
(447,-142,qs),
(421,-142,o),
(391,-118,o),
(391,-97,qs),
(391,-78,o),
(421,-44,o),
(456,-27,qs),
(511,0,l),
(510,2,l),
(510,496,l),
(404,496,l),
(404,230,ls),
(404,159,o),
(334,78,o),
(273,78,qs),
(214,78,o),
(153,151,o),
(153,218,qs),
(153,496,l),
(48,496,l),
(48,204,ls),
(48,102,o),
(153,-12,o),
(245,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
34 33 14 3 5 1 24 1 3 5 25 1 4 3 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
2 1 0 0 36 77 0 1 1 5 97 6 1 5 5 40 77 0 3 3 4 98 0 4 4 38 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 4 3 4 102 2 1 0 0 36 77 0 1 1 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 37 0 36 35 40 19 35 19 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 567;
},
{
anchors = (
{
name = bottom;
pos = (286,0);
},
{
name = ogonek;
pos = (503,0);
},
{
name = top;
pos = (284,496);
},
{
name = topright;
pos = (552,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(308,-12,o),
(398,42,o),
(422,89,q),
(426,19,l),
(365,-8,o),
(313,-71,o),
(313,-108,qs),
(313,-155,o),
(381,-203,o),
(431,-203,qs),
(470,-203,o),
(506,-190,q),
(506,-134,l),
(472,-149,o),
(441,-149,qs),
(414,-149,o),
(381,-123,o),
(381,-100,qs),
(381,-59,o),
(445,-28,qs),
(503,0,l),
(503,496,l),
(419,496,l),
(419,239,ls),
(419,155,o),
(336,60,o),
(270,60,qs),
(142,60,o),
(142,215,qs),
(142,496,l),
(58,496,l),
(58,206,ls),
(58,98,o),
(161,-12,o),
(251,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
31 1 1 0 30 13 2 5 1 21 1 3 5 22 1 4 3 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
2 1 0 0 36 77 0 1 1 5 97 6 1 5 5 40 77 0 3 3 4 98 0 4 4 38 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 4 3 4 102 2 1 0 0 36 77 0 1 1 5 97 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 34 0 33 35 38 19 34 19 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 572;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (517,0);
},
{
name = top;
pos = (280,496);
},
{
name = topright;
pos = (542,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(284,-12,o),
(365,25,o),
(389,58,q),
(389,14,l),
(342,-13,o),
(302,-72,o),
(302,-106,qs),
(302,-157,o),
(377,-210,o),
(435,-210,qs),
(478,-210,o),
(522,-196,q),
(522,-120,l),
(483,-135,o),
(451,-135,qs),
(427,-135,o),
(399,-113,o),
(399,-94,qs),
(399,-76,o),
(430,-44,o),
(465,-26,qs),
(517,0,l),
(517,496,l),
(389,496,l),
(389,221,ls),
(389,162,o),
(332,96,o),
(276,96,qs),
(223,96,o),
(164,165,o),
(164,221,qs),
(164,496,l),
(37,496,l),
(37,202,ls),
(37,106,o),
(145,-12,o),
(239,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
33 32 14 3 5 1 23 1 3 5 24 1 4 3 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
2 1 0 0 36 77 0 1 1 5 98 6 1 5 5 40 77 0 3 3 4 97 0 4 4 38 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 4 3 4 101 2 1 0 0 36 77 0 1 1 5 98 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 36 0 35 35 39 19 35 19 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (283,0);
},
{
name = ogonek;
pos = (512,0);
},
{
name = top;
pos = (281,496);
},
{
name = topright;
pos = (545,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(292,-12,o),
(376,30,o),
(400,68,q),
(402,16,l),
(350,-11,o),
(306,-72,o),
(306,-107,qs),
(306,-157,o),
(378,-208,o),
(434,-208,qs),
(473,-208,o),
(517,-194,q),
(517,-125,l),
(480,-140,o),
(448,-140,qs),
(423,-140,o),
(393,-116,o),
(393,-96,qs),
(393,-77,o),
(424,-44,o),
(459,-27,qs),
(513,0,l),
(512,2,l),
(512,496,l),
(399,496,l),
(399,227,ls),
(399,160,o),
(333,84,o),
(274,84,qs),
(217,84,o),
(157,156,o),
(157,219,qs),
(157,496,l),
(44,496,l),
(44,203,ls),
(44,104,o),
(150,-12,o),
(243,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
34 33 14 3 5 1 24 1 3 5 25 1 4 3 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
2 1 0 0 36 77 0 1 1 5 98 6 1 5 5 40 77 0 3 3 4 97 0 4 4 38 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 4 3 4 101 2 1 0 0 36 77 0 1 1 5 98 6 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 37 0 36 35 40 19 35 19 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 565;
}
);
note = uogonek;
unicode = 371;
},
{
glyphname = uring;
kernLeft = u;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (284,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,766);
},
{
name = topright;
pos = (547,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (173,0);
ref = uni030A;
}
);
width = 567;
},
{
anchors = (
{
name = bottom;
pos = (286,0);
},
{
name = ogonek;
pos = (503,0);
},
{
name = top;
pos = (284,763);
},
{
name = topright;
pos = (552,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (179,0);
ref = uni030A;
}
);
width = 572;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (517,0);
},
{
name = top;
pos = (280,769);
},
{
name = topright;
pos = (542,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (166,0);
ref = uni030A;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (283,0);
},
{
name = ogonek;
pos = (512,0);
},
{
name = top;
pos = (281,767);
},
{
name = topright;
pos = (545,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (170,0);
ref = uni030A;
}
);
width = 565;
}
);
note = uring;
unicode = 367;
},
{
glyphname = utilde;
kernLeft = u;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (284,0);
},
{
name = ogonek;
pos = (510,0);
},
{
name = top;
pos = (282,705);
},
{
name = topright;
pos = (547,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (119,0);
ref = tildecomb;
}
);
width = 567;
},
{
anchors = (
{
name = bottom;
pos = (286,0);
},
{
name = ogonek;
pos = (503,0);
},
{
name = top;
pos = (284,705);
},
{
name = topright;
pos = (552,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (133,0);
ref = tildecomb;
}
);
width = 572;
},
{
anchors = (
{
name = bottom;
pos = (281,0);
},
{
name = ogonek;
pos = (517,0);
},
{
name = top;
pos = (280,704);
},
{
name = topright;
pos = (542,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (104,0);
ref = tildecomb;
}
);
width = 562;
},
{
anchors = (
{
name = bottom;
pos = (283,0);
},
{
name = ogonek;
pos = (512,0);
},
{
name = top;
pos = (281,704);
},
{
name = topright;
pos = (545,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = u;
},
{
alignment = -1;
pos = (114,0);
ref = tildecomb;
}
);
width = 565;
}
);
note = utilde;
unicode = 361;
},
{
glyphname = v;
kernLeft = v;
kernRight = v;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(324,0,l),
(511,496,l),
(401,496,l),
(262,98,l),
(124,496,l),
(12,496,l),
(199,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 2 0 1 76 1 1 0 0 36 77 0 2 2 34 2 78 17 18 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 523;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(309,0,l),
(497,496,l),
(411,496,l),
(261,81,l),
(112,496,l),
(24,496,l),
(212,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 2 0 1 76 1 1 0 0 36 77 0 2 2 34 2 78 17 18 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 521;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(339,0,l),
(525,496,l),
(390,496,l),
(263,115,l),
(135,496,l),
(-1,496,l),
(185,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 2 0 1 76 1 1 0 0 36 77 0 2 2 34 2 78 17 18 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 524;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(329,0,l),
(516,496,l),
(397,496,l),
(262,104,l),
(127,496,l),
(7,496,l),
(194,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 2 0 1 76 1 1 0 0 36 77 0 2 2 34 2 78 17 18 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 523;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
kernLeft = w;
kernRight = w;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (376,0);
},
{
name = top;
pos = (376,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(269,0,l),
(376,378,l),
(483,1,l),
(595,1,l),
(741,496,l),
(637,496,l),
(541,114,l),
(435,496,l),
(320,496,l),
(214,113,l),
(117,496,l),
(11,496,l),
(157,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
10 5 2 3 3 0 1 76 2 1 2 0 0 36 77 4 1 3 3 34 3 78 18 17 18 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 751;
},
{
anchors = (
{
name = bottom;
pos = (377,0);
},
{
name = top;
pos = (377,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(255,0,l),
(377,409,l),
(499,0,l),
(585,0,l),
(730,496,l),
(645,496,l),
(541,107,l),
(424,496,l),
(329,496,l),
(213,107,l),
(108,496,l),
(24,496,l),
(169,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
10 5 2 3 3 0 1 76 2 1 2 0 0 36 77 4 1 3 3 34 3 78 18 17 18 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 754;
},
{
anchors = (
{
name = bottom;
pos = (374,0);
},
{
name = top;
pos = (375,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(283,0,l),
(375,347,l),
(467,1,l),
(604,1,l),
(751,496,l),
(629,496,l),
(540,120,l),
(446,496,l),
(311,496,l),
(215,119,l),
(126,496,l),
(-3,496,l),
(145,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
10 5 2 3 3 0 1 76 2 1 2 0 0 36 77 4 1 3 3 34 3 78 18 17 18 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 747;
},
{
anchors = (
{
name = bottom;
pos = (375,0);
},
{
name = top;
pos = (376,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(274,0,l),
(376,368,l),
(478,1,l),
(598,1,l),
(744,496,l),
(634,496,l),
(540,116,l),
(439,496,l),
(317,496,l),
(214,115,l),
(120,496,l),
(6,496,l),
(153,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
10 5 2 3 3 0 1 76 2 1 2 0 0 36 77 4 1 3 3 34 3 78 18 17 18 18 16 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = w;
unicode = 119;
},
{
glyphname = wacute;
kernLeft = w;
kernRight = w;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (376,0);
},
{
name = top;
pos = (376,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (267,0);
ref = acutecomb;
}
);
width = 751;
},
{
anchors = (
{
name = bottom;
pos = (377,0);
},
{
name = top;
pos = (377,747);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (272,0);
ref = acutecomb;
}
);
width = 754;
},
{
anchors = (
{
name = bottom;
pos = (374,0);
},
{
name = top;
pos = (375,751);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (262,0);
ref = acutecomb;
}
);
width = 747;
},
{
anchors = (
{
name = bottom;
pos = (375,0);
},
{
name = top;
pos = (376,750);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (265,0);
ref = acutecomb;
}
);
width = 749;
}
);
note = wacute;
unicode = 7811;
},
{
glyphname = wcircumflex;
kernLeft = w;
kernRight = w;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (376,0);
},
{
name = top;
pos = (376,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (235,0);
ref = uni0302;
}
);
width = 751;
},
{
anchors = (
{
name = bottom;
pos = (377,0);
},
{
name = top;
pos = (377,733);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (240,0);
ref = uni0302;
}
);
width = 754;
},
{
anchors = (
{
name = bottom;
pos = (374,0);
},
{
name = top;
pos = (375,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (229,0);
ref = uni0302;
}
);
width = 747;
},
{
anchors = (
{
name = bottom;
pos = (375,0);
},
{
name = top;
pos = (376,728);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (233,0);
ref = uni0302;
}
);
width = 749;
}
);
note = wcircumflex;
unicode = 373;
},
{
glyphname = wdieresis;
kernLeft = w;
kernRight = w;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (376,0);
},
{
name = top;
pos = (376,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (206,0);
ref = uni0308;
}
);
width = 751;
},
{
anchors = (
{
name = bottom;
pos = (377,0);
},
{
name = top;
pos = (377,720);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (230,0);
ref = uni0308;
}
);
width = 754;
},
{
anchors = (
{
name = bottom;
pos = (374,0);
},
{
name = top;
pos = (375,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (181,0);
ref = uni0308;
}
);
width = 747;
},
{
anchors = (
{
name = bottom;
pos = (375,0);
},
{
name = top;
pos = (376,724);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (197,0);
ref = uni0308;
}
);
width = 749;
}
);
note = wdieresis;
unicode = 7813;
},
{
glyphname = wgrave;
kernLeft = w;
kernRight = w;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (376,0);
},
{
name = top;
pos = (376,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (267,0);
ref = gravecomb;
}
);
width = 751;
},
{
anchors = (
{
name = bottom;
pos = (377,0);
},
{
name = top;
pos = (377,747);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (272,0);
ref = gravecomb;
}
);
width = 754;
},
{
anchors = (
{
name = bottom;
pos = (374,0);
},
{
name = top;
pos = (375,751);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (262,0);
ref = gravecomb;
}
);
width = 747;
},
{
anchors = (
{
name = bottom;
pos = (375,0);
},
{
name = top;
pos = (376,750);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = w;
},
{
alignment = -1;
pos = (265,0);
ref = gravecomb;
}
);
width = 749;
}
);
note = wgrave;
unicode = 7809;
},
{
glyphname = x;
kernLeft = x;
kernRight = x;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,0,l),
(239,180,l),
(361,0,l),
(477,0,l),
(308,249,l),
(476,496,l),
(363,496,l),
(247,317,l),
(126,496,l),
(9,496,l),
(178,249,l),
(10,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 3 3 2 0 1 76 1 1 0 0 36 77 3 1 2 2 34 2 78 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 485;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(110,0,l),
(249,205,l),
(389,0,l),
(479,0,l),
(307,248,l),
(479,496,l),
(389,496,l),
(249,291,l),
(110,496,l),
(19,496,l),
(191,248,l),
(19,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 3 3 2 0 1 76 1 1 0 0 36 77 3 1 2 2 34 2 78 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 498;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(136,0,l),
(228,154,l),
(332,0,l),
(475,0,l),
(308,249,l),
(473,496,l),
(337,496,l),
(244,343,l),
(142,496,l),
(-2,496,l),
(164,249,l),
(0,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 3 3 2 0 1 76 1 1 0 0 36 77 3 1 2 2 34 2 78 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 472;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(127,0,l),
(235,171,l),
(351,0,l),
(476,0,l),
(308,249,l),
(475,496,l),
(354,496,l),
(246,326,l),
(131,496,l),
(5,496,l),
(173,249,l),
(6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 3 3 2 0 1 76 1 1 0 0 36 77 3 1 2 2 34 2 78 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 481;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
kernLeft = y;
kernRight = y;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (273,0);
},
{
name = top;
pos = (273,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(219,-220,l),
(536,496,l),
(425,496,l),
(273,134,l),
(127,496,l),
(10,496,l),
(217,22,l),
(107,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
3 1 2 0 1 76 1 1 0 0 36 77 0 2 2 38 2 78 17 18 17 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 546;
},
{
anchors = (
{
name = bottom;
pos = (278,0);
},
{
name = top;
pos = (278,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(211,-220,l),
(536,496,l),
(449,496,l),
(275,110,l),
(111,496,l),
(20,496,l),
(233,20,l),
(123,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
3 1 2 0 1 76 1 1 0 0 36 77 0 2 2 38 2 78 17 18 17 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 556;
},
{
anchors = (
{
name = bottom;
pos = (268,0);
},
{
name = top;
pos = (268,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(226,-220,l),
(536,496,l),
(401,496,l),
(270,158,l),
(142,496,l),
(-1,496,l),
(200,23,l),
(91,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
3 1 2 0 1 76 1 1 0 0 36 77 0 2 2 38 2 78 17 18 17 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (271,0);
},
{
name = top;
pos = (271,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(221,-220,l),
(536,496,l),
(417,496,l),
(272,142,l),
(132,496,l),
(6,496,l),
(211,22,l),
(102,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
3 1 2 0 1 76 1 1 0 0 36 77 0 2 2 38 2 78 17 18 17 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = y;
unicode = 121;
},
{
glyphname = yacute;
kernLeft = y;
kernRight = y;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (273,0);
},
{
name = top;
pos = (273,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (164,0);
ref = acutecomb;
}
);
width = 546;
},
{
anchors = (
{
name = bottom;
pos = (278,0);
},
{
name = top;
pos = (278,747);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (173,0);
ref = acutecomb;
}
);
width = 556;
},
{
anchors = (
{
name = bottom;
pos = (268,0);
},
{
name = top;
pos = (268,751);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (155,0);
ref = acutecomb;
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (271,0);
},
{
name = top;
pos = (271,750);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (161,0);
ref = acutecomb;
}
);
width = 542;
}
);
note = yacute;
unicode = 253;
},
{
glyphname = ycircumflex;
kernLeft = y;
kernRight = y;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (273,0);
},
{
name = top;
pos = (273,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (132,0);
ref = uni0302;
}
);
width = 546;
},
{
anchors = (
{
name = bottom;
pos = (278,0);
},
{
name = top;
pos = (278,733);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (141,0);
ref = uni0302;
}
);
width = 556;
},
{
anchors = (
{
name = bottom;
pos = (268,0);
},
{
name = top;
pos = (268,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (122,0);
ref = uni0302;
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (271,0);
},
{
name = top;
pos = (271,728);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (128,0);
ref = uni0302;
}
);
width = 542;
}
);
note = ycircumflex;
unicode = 375;
},
{
glyphname = ydieresis;
kernLeft = y;
kernRight = y;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (273,0);
},
{
name = top;
pos = (273,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (103,0);
ref = uni0308;
}
);
width = 546;
},
{
anchors = (
{
name = bottom;
pos = (278,0);
},
{
name = top;
pos = (278,720);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (131,0);
ref = uni0308;
}
);
width = 556;
},
{
anchors = (
{
name = bottom;
pos = (268,0);
},
{
name = top;
pos = (268,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (74,0);
ref = uni0308;
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (271,0);
},
{
name = top;
pos = (271,724);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (93,0);
ref = uni0308;
}
);
width = 542;
}
);
note = ydieresis;
unicode = 255;
},
{
glyphname = ygrave;
kernLeft = y;
kernRight = y;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (273,0);
},
{
name = top;
pos = (273,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (164,0);
ref = gravecomb;
}
);
width = 546;
},
{
anchors = (
{
name = bottom;
pos = (278,0);
},
{
name = top;
pos = (278,747);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (173,0);
ref = gravecomb;
}
);
width = 556;
},
{
anchors = (
{
name = bottom;
pos = (268,0);
},
{
name = top;
pos = (268,751);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (155,0);
ref = gravecomb;
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (271,0);
},
{
name = top;
pos = (271,750);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (161,0);
ref = gravecomb;
}
);
width = 542;
}
);
note = ygrave;
unicode = 7923;
},
{
glyphname = uni1EF9;
kernLeft = y;
kernRight = y;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (273,0);
},
{
name = top;
pos = (273,705);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (110,0);
ref = tildecomb;
}
);
width = 546;
},
{
anchors = (
{
name = bottom;
pos = (278,0);
},
{
name = top;
pos = (278,705);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (127,0);
ref = tildecomb;
}
);
width = 556;
},
{
anchors = (
{
name = bottom;
pos = (268,0);
},
{
name = top;
pos = (268,704);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (92,0);
ref = tildecomb;
}
);
width = 535;
},
{
anchors = (
{
name = bottom;
pos = (271,0);
},
{
name = top;
pos = (271,704);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = y;
},
{
alignment = -1;
pos = (104,0);
ref = tildecomb;
}
);
width = 542;
}
);
note = uni1EF9;
unicode = 7929;
},
{
glyphname = z;
kernLeft = z;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (217,0);
},
{
name = top;
pos = (217,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(401,0,l),
(401,88,l),
(148,88,l),
(397,411,l),
(397,496,l),
(32,496,l),
(32,409,l),
(277,409,l),
(29,86,l),
(29,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 0 1 0 1 3 2 2 76 0 0 0 1 95 0 1 1 36 77 0 2 2 3 95 0 3 3 34 3 78 17 18 17 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 433;
},
{
anchors = (
{
name = bottom;
pos = (226,0);
},
{
name = top;
pos = (226,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(410,0,l),
(410,70,l),
(129,70,l),
(405,427,l),
(405,496,l),
(40,496,l),
(40,426,l),
(311,426,l),
(35,69,l),
(35,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 0 1 0 1 3 2 2 76 0 0 0 1 95 0 1 1 36 77 0 2 2 3 95 0 3 3 34 3 78 17 18 17 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 452;
},
{
anchors = (
{
name = bottom;
pos = (207,0);
},
{
name = top;
pos = (207,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(391,0,l),
(391,105,l),
(167,105,l),
(388,394,l),
(388,496,l),
(23,496,l),
(23,392,l),
(242,392,l),
(22,103,l),
(22,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 0 1 0 1 3 2 2 76 0 0 0 1 95 0 1 1 36 77 0 2 2 3 95 0 3 3 34 3 78 17 18 17 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 413;
},
{
anchors = (
{
name = bottom;
pos = (213,0);
},
{
name = top;
pos = (213,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(397,0,l),
(397,93,l),
(154,93,l),
(394,405,l),
(394,496,l),
(29,496,l),
(29,403,l),
(265,403,l),
(26,92,l),
(26,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 0 1 0 1 3 2 2 76 0 0 0 1 95 0 1 1 36 77 0 2 2 3 95 0 3 3 34 3 78 17 18 17 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 426;
}
);
note = z;
unicode = 122;
},
{
glyphname = zacute;
kernLeft = z;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (217,0);
},
{
name = top;
pos = (217,749);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (108,0);
ref = acutecomb;
}
);
width = 433;
},
{
anchors = (
{
name = bottom;
pos = (226,0);
},
{
name = top;
pos = (226,747);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (121,0);
ref = acutecomb;
}
);
width = 452;
},
{
anchors = (
{
name = bottom;
pos = (207,0);
},
{
name = top;
pos = (207,751);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (94,0);
ref = acutecomb;
}
);
width = 413;
},
{
anchors = (
{
name = bottom;
pos = (213,0);
},
{
name = top;
pos = (213,750);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (103,0);
ref = acutecomb;
}
);
width = 426;
}
);
note = zacute;
unicode = 378;
},
{
glyphname = zcaron;
kernLeft = z;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (217,0);
},
{
name = top;
pos = (217,730);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (75,0);
ref = uni030C;
}
);
width = 433;
},
{
anchors = (
{
name = bottom;
pos = (226,0);
},
{
name = top;
pos = (226,733);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (89,0);
ref = uni030C;
}
);
width = 452;
},
{
anchors = (
{
name = bottom;
pos = (207,0);
},
{
name = top;
pos = (207,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (61,0);
ref = uni030C;
}
);
width = 413;
},
{
anchors = (
{
name = bottom;
pos = (213,0);
},
{
name = top;
pos = (213,728);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (70,0);
ref = uni030C;
}
);
width = 426;
}
);
note = zcaron;
unicode = 382;
},
{
glyphname = zdotaccent;
kernLeft = z;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (217,0);
},
{
name = top;
pos = (217,723);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (146,0);
ref = uni0307;
}
);
width = 433;
},
{
anchors = (
{
name = bottom;
pos = (226,0);
},
{
name = top;
pos = (226,720);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (168,0);
ref = uni0307;
}
);
width = 452;
},
{
anchors = (
{
name = bottom;
pos = (207,0);
},
{
name = top;
pos = (207,726);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (124,0);
ref = uni0307;
}
);
width = 413;
},
{
anchors = (
{
name = bottom;
pos = (213,0);
},
{
name = top;
pos = (213,724);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = z;
},
{
alignment = -1;
pos = (139,0);
ref = uni0307;
}
);
width = 426;
}
);
note = zdotaccent;
unicode = 380;
},
{
glyphname = uniA78C;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(159,335,l),
(177,700,l),
(63,700,l),
(80,335,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 239;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(141,339,l),
(156,700,l),
(65,700,l),
(80,339,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 221;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(177,330,l),
(197,700,l),
(60,700,l),
(79,330,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 257;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(165,333,l),
(183,700,l),
(62,700,l),
(79,333,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 245;
}
);
note = uniA78C;
unicode = 42892;
},
{
glyphname = fi;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = caret_1;
pos = (275,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(183,0,l),
(183,407,l),
(289,407,l),
(289,496,l),
(183,496,l),
(183,547,ls),
(183,581,o),
(213,610,o),
(249,610,qs),
(278,610,l),
(278,700,l),
(232,700,ls),
(156,700,o),
(77,627,o),
(77,548,qs),
(77,496,l),
(11,496,l),
(11,407,l),
(77,407,l),
(77,0,l)
);
},
{
closed = 1;
nodes = (
(486,0,l),
(486,496,l),
(380,496,l),
(380,0,l)
);
},
{
closed = 1;
nodes = (
(464,576,o),
(504,617,o),
(504,646,qs),
(504,675,o),
(464,716,o),
(434,716,qs),
(405,716,o),
(363,675,o),
(363,646,qs),
(363,617,o),
(405,576,o),
(434,576,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 3 2 97 9 1 2 2 33 77 11 1 10 10 2 97 9 1 2 2 33 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 3 3 2 97 0 2 2 33 77 11 1 10 10 9 97 0 9 9 39 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
24 24 24 35 24 34 30 28 17 17 17 17 19 33 35 17 16 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 551;
},
{
anchors = (
{
name = caret_1;
pos = (284,0);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(180,0,l),
(180,425,l),
(302,425,l),
(302,496,l),
(180,496,l),
(180,560,ls),
(180,597,o),
(212,628,o),
(250,628,qs),
(287,628,l),
(287,700,l),
(237,700,ls),
(167,700,o),
(96,633,o),
(96,562,qs),
(96,496,l),
(21,496,l),
(21,425,l),
(96,425,l),
(96,0,l)
);
},
{
closed = 1;
nodes = (
(488,0,l),
(488,496,l),
(404,496,l),
(404,0,l)
);
},
{
closed = 1;
nodes = (
(472,591,o),
(505,624,o),
(505,649,qs),
(505,673,o),
(472,705,o),
(447,705,qs),
(423,705,o),
(389,673,o),
(389,649,qs),
(389,624,o),
(423,591,o),
(447,591,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 3 2 97 9 1 2 2 33 77 11 1 10 10 2 97 9 1 2 2 33 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 3 3 2 97 0 2 2 33 77 11 1 10 10 9 97 0 9 9 33 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
24 24 24 35 24 34 30 28 17 17 17 17 19 33 35 17 16 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 567;
},
{
anchors = (
{
name = caret_1;
pos = (267,0);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(186,0,l),
(186,389,l),
(275,389,l),
(275,496,l),
(186,496,l),
(186,534,ls),
(186,565,o),
(214,591,o),
(247,591,qs),
(269,591,l),
(269,700,l),
(227,700,ls),
(58,700,o),
(58,534,qs),
(58,496,l),
(0,496,l),
(0,389,l),
(58,389,l),
(58,0,l)
);
},
{
closed = 1;
nodes = (
(484,0,l),
(484,496,l),
(356,496,l),
(356,0,l)
);
},
{
closed = 1;
nodes = (
(455,560,o),
(503,608,o),
(503,643,qs),
(503,678,o),
(455,726,o),
(420,726,qs),
(386,726,o),
(337,678,o),
(337,643,qs),
(337,609,o),
(386,560,o),
(420,560,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 3 2 97 0 2 2 33 77 11 1 10 10 9 97 0 9 9 41 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 3 2 97 0 2 2 33 77 11 1 10 10 9 97 0 9 9 39 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 9 11 1 10 1 9 10 105 0 3 3 2 97 0 2 2 33 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
23 23 23 34 23 33 29 27 17 17 17 17 19 33 34 17 16 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 534;
},
{
anchors = (
{
name = caret_1;
pos = (273,0);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(184,0,l),
(184,401,l),
(284,401,l),
(284,496,l),
(184,496,l),
(184,543,ls),
(184,575,o),
(214,603,o),
(248,603,qs),
(275,603,l),
(275,700,l),
(230,700,ls),
(152,700,o),
(71,625,o),
(71,543,qs),
(71,496,l),
(7,496,l),
(7,401,l),
(71,401,l),
(71,0,l)
);
},
{
closed = 1;
nodes = (
(485,0,l),
(485,496,l),
(372,496,l),
(372,0,l)
);
},
{
closed = 1;
nodes = (
(461,570,o),
(504,614,o),
(504,645,qs),
(504,676,o),
(460,719,o),
(429,719,qs),
(398,719,o),
(354,676,o),
(354,645,qs),
(354,614,o),
(398,570,o),
(429,570,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 3 2 97 9 1 2 2 33 77 11 1 10 10 2 97 9 1 2 2 33 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 3 2 97 0 2 2 33 77 11 1 10 10 9 97 0 9 9 41 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 3 3 2 97 0 2 2 33 77 11 1 10 10 9 97 0 9 9 39 77 5 1 0 0 1 95 7 4 2 1 1 36 77 8 1 6 6 34 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
24 24 24 35 24 34 30 28 17 17 17 17 19 33 35 17 16 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 545;
}
);
note = fi;
unicode = 64257;
},
{
glyphname = fl;
kernRight = fl;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = caret_1;
pos = (271,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(183,0,l),
(183,407,l),
(289,407,l),
(289,496,l),
(183,496,l),
(183,547,ls),
(183,581,o),
(213,610,o),
(249,610,qs),
(278,610,l),
(278,700,l),
(232,700,ls),
(156,700,o),
(77,627,o),
(77,548,qs),
(77,496,l),
(11,496,l),
(11,407,l),
(77,407,l),
(77,0,l)
);
},
{
closed = 1;
nodes = (
(484,0,l),
(484,700,l),
(378,700,l),
(378,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 2 97 7 1 2 2 33 77 5 1 0 0 1 95 4 1 1 1 36 77 8 1 6 6 34 6 78 17 17 17 17 19 33 35 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 541;
},
{
anchors = (
{
name = caret_1;
pos = (278,0);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(180,0,l),
(180,425,l),
(302,425,l),
(302,496,l),
(180,496,l),
(180,560,ls),
(180,597,o),
(212,628,o),
(250,628,qs),
(287,628,l),
(287,700,l),
(237,700,ls),
(167,700,o),
(96,633,o),
(96,562,qs),
(96,496,l),
(21,496,l),
(21,425,l),
(96,425,l),
(96,0,l)
);
},
{
closed = 1;
nodes = (
(486,0,l),
(486,700,l),
(402,700,l),
(402,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 2 97 7 1 2 2 33 77 5 1 0 0 1 95 4 1 1 1 36 77 8 1 6 6 34 6 78 17 17 17 17 19 33 35 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 555;
},
{
anchors = (
{
name = caret_1;
pos = (264,0);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(186,0,l),
(186,389,l),
(275,389,l),
(275,496,l),
(186,496,l),
(186,534,ls),
(186,565,o),
(214,591,o),
(247,591,qs),
(269,591,l),
(269,700,l),
(227,700,ls),
(58,700,o),
(58,534,qs),
(58,496,l),
(0,496,l),
(0,389,l),
(58,389,l),
(58,0,l)
);
},
{
closed = 1;
nodes = (
(481,0,l),
(481,700,l),
(353,700,l),
(353,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 2 97 7 1 2 2 33 77 5 1 0 0 1 95 4 1 1 1 36 77 8 1 6 6 34 6 78 17 17 17 17 19 33 34 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 527;
},
{
anchors = (
{
name = caret_1;
pos = (268,0);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(184,0,l),
(184,401,l),
(284,401,l),
(284,496,l),
(184,496,l),
(184,543,ls),
(184,575,o),
(214,603,o),
(248,603,qs),
(275,603,l),
(275,700,l),
(230,700,ls),
(152,700,o),
(71,625,o),
(71,543,qs),
(71,496,l),
(7,496,l),
(7,401,l),
(71,401,l),
(71,0,l)
);
},
{
closed = 1;
nodes = (
(483,0,l),
(483,700,l),
(369,700,l),
(369,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 2 97 7 1 2 2 33 77 5 1 0 0 1 95 4 1 1 1 36 77 8 1 6 6 34 6 78 17 17 17 17 19 33 35 17 16 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 536;
}
);
note = fl;
unicode = 64258;
},
{
glyphname = ordfeminine;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(196,347,o),
(258,381,o),
(277,412,q),
(287,383,o),
(335,354,o),
(369,354,qs),
(381,354,l),
(381,418,l),
(344,418,o),
(344,455,qs),
(344,564,ls),
(344,633,o),
(263,710,o),
(194,710,qs),
(135,710,o),
(50,647,o),
(42,591,q),
(116,591,l),
(123,618,o),
(164,648,o),
(193,648,qs),
(228,648,o),
(268,604,o),
(269,563,q),
(181,563,ls),
(116,563,o),
(33,508,o),
(33,452,qs),
(33,403,o),
(104,347,o),
(156,347,qs)
);
},
{
closed = 1;
nodes = (
(145,407,o),
(109,433,o),
(109,458,qs),
(109,486,o),
(153,511,o),
(187,511,qs),
(269,511,l),
(269,468,o),
(215,407,o),
(173,407,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 5 4 1 76
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 8 4 1 76
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 5 4 1 76
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 8 4 1 76
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 10 8 2 4 4 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 9 6 2 5 5 58 77 10 1 8 8 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 10 8 2 4 4 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 9 6 2 5 5 58 77 10 1 8 8 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 0 5 5 58 77 10 1 8 8 6 97 9 1 6 6 58 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
31 31 0 0 31 40 31 39 35 33 0 30 0 29 33 20 34 18 34 36 11 10 28
CALL[ ]	/* CallFunction */";
};
width = 406;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(206,347,o),
(268,385,o),
(286,417,q),
(294,385,o),
(339,354,o),
(371,354,qs),
(378,354,l),
(378,406,l),
(340,406,o),
(340,445,qs),
(340,568,ls),
(340,632,o),
(268,710,o),
(194,710,qs),
(136,710,o),
(48,647,o),
(44,593,q),
(104,593,l),
(111,625,o),
(159,660,o),
(194,660,qs),
(234,660,o),
(281,614,o),
(281,564,q),
(188,564,ls),
(122,564,o),
(37,510,o),
(37,454,qs),
(37,403,o),
(109,347,o),
(165,347,qs)
);
},
{
closed = 1;
nodes = (
(141,396,o),
(98,426,o),
(98,456,qs),
(98,518,o),
(193,518,qs),
(281,518,l),
(281,469,o),
(224,396,o),
(174,396,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 4 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 10 8 2 4 4 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 9 6 2 5 5 58 77 10 1 8 8 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 10 8 2 4 4 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 9 6 2 5 5 58 77 10 1 8 8 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 10 8 2 4 4 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 9 6 2 5 5 58 77 10 1 8 8 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 0 5 5 58 77 10 1 8 8 6 97 9 1 6 6 58 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
31 31 0 0 31 39 31 38 35 33 0 30 0 29 33 20 34 18 34 36 11 10 28
CALL[ ]	/* CallFunction */";
};
width = 407;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(226,347,o),
(267,406,q),
(280,380,o),
(331,354,o),
(367,354,qs),
(384,354,l),
(384,429,l),
(367,429,o),
(347,447,o),
(347,464,qs),
(347,559,ls),
(347,633,o),
(260,710,o),
(194,710,qs),
(133,710,o),
(51,646,o),
(39,588,q),
(128,588,l),
(134,610,o),
(168,635,o),
(191,635,qs),
(222,635,o),
(255,595,o),
(257,561,q),
(174,561,ls),
(110,561,o),
(29,507,o),
(29,450,qs),
(29,403,o),
(100,347,o),
(146,347,qs)
);
},
{
closed = 1;
nodes = (
(149,418,o),
(120,439,o),
(120,460,qs),
(120,482,o),
(155,504,o),
(180,504,qs),
(257,504,l),
(257,466,o),
(207,418,o),
(172,418,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
28 1 5 4 1 76
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
28 1 5 8 1 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 10 8 2 4 4 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 9 6 2 5 5 58 77 10 1 8 8 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 0 5 5 58 77 10 1 8 8 6 97 9 1 6 6 58 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
31 31 0 0 31 40 31 39 35 33 0 30 0 29 33 21 34 18 34 36 11 10 28
CALL[ ]	/* CallFunction */";
};
width = 404;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(234,347,o),
(273,410,q),
(284,382,o),
(333,354,o),
(368,354,qs),
(382,354,l),
(382,421,l),
(345,421,o),
(345,458,qs),
(345,562,ls),
(345,633,o),
(262,710,o),
(194,710,qs),
(134,710,o),
(50,646,o),
(41,590,q),
(120,590,l),
(126,615,o),
(165,643,o),
(192,643,qs),
(226,643,o),
(264,601,o),
(265,562,q),
(179,562,ls),
(114,562,o),
(32,508,o),
(32,451,qs),
(32,402,o),
(102,347,o),
(152,347,qs)
);
},
{
closed = 1;
nodes = (
(146,411,o),
(113,435,o),
(113,459,qs),
(113,485,o),
(154,509,o),
(184,509,qs),
(265,509,l),
(265,467,o),
(213,411,o),
(173,411,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 5 4 1 76
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 5 8 1 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 10 8 2 4 4 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 9 6 2 5 5 58 77 10 1 8 8 5 97 9 6 2 5 5 58 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 1 0 1 2 0 128 0 0 0 7 4 0 7 103 0 1 1 3 97 0 3 3 59 77 0 4 4 5 97 0 5 5 58 77 10 1 8 8 6 97 9 1 6 6 58 6 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
30 30 0 0 30 39 30 38 34 32 0 29 0 28 33 20 34 18 34 36 11 10 28
CALL[ ]	/* CallFunction */";
};
width = 405;
}
);
note = ordfeminine;
unicode = 170;
},
{
glyphname = ordmasculine;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(265,349,o),
(348,395,o),
(395,478,o),
(395,531,qs),
(395,587,o),
(347,669,o),
(265,712,o),
(214,712,qs),
(162,712,o),
(79,667,o),
(32,585,o),
(32,531,qs),
(32,476,o),
(80,393,o),
(162,349,o),
(212,349,qs)
);
},
{
closed = 1;
nodes = (
(167,415,o),
(111,478,o),
(111,531,qs),
(111,583,o),
(168,647,o),
(213,647,qs),
(259,647,o),
(315,584,o),
(315,531,qs),
(315,479,o),
(257,415,o),
(212,415,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 59 77 5 1 3 3 1 97 4 1 1 1 58 1 78 16 16 0 0 16 27 16 26 22 20 0 15 0 14 38 6 10 23
CALL[ ]	/* CallFunction */";
};
width = 426;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(267,349,o),
(351,394,o),
(399,477,o),
(399,531,qs),
(399,617,o),
(295,712,o),
(217,712,qs),
(163,712,o),
(80,666,o),
(35,583,o),
(35,531,qs),
(35,474,o),
(84,392,o),
(167,349,o),
(216,349,qs)
);
},
{
closed = 1;
nodes = (
(167,404,o),
(103,471,o),
(103,531,qs),
(103,591,o),
(168,659,o),
(216,659,qs),
(265,659,o),
(331,591,o),
(331,531,qs),
(331,471,o),
(264,404,o),
(216,404,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 59 77 5 1 3 3 1 97 4 1 1 1 58 1 78 15 15 0 0 15 26 15 25 21 19 0 14 0 13 38 6 10 23
CALL[ ]	/* CallFunction */";
};
width = 433;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(261,349,o),
(345,397,o),
(390,480,o),
(390,531,qs),
(390,585,o),
(343,667,o),
(260,712,o),
(210,712,qs),
(160,712,o),
(78,669,o),
(29,587,o),
(29,531,qs),
(29,477,o),
(75,394,o),
(156,349,o),
(207,349,qs)
);
},
{
closed = 1;
nodes = (
(167,426,o),
(119,486,o),
(119,531,qs),
(119,576,o),
(167,635,o),
(209,635,qs),
(252,635,o),
(299,577,o),
(299,531,qs),
(299,486,o),
(250,426,o),
(207,426,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 59 77 5 1 3 3 1 97 4 1 1 1 58 1 78 16 16 0 0 16 27 16 26 22 20 0 15 0 14 38 6 10 23
CALL[ ]	/* CallFunction */";
};
width = 419;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(263,349,o),
(347,396,o),
(393,479,o),
(393,531,qs),
(393,586,o),
(345,668,o),
(263,712,o),
(212,712,qs),
(161,712,o),
(78,668,o),
(31,586,o),
(31,531,qs),
(31,476,o),
(78,393,o),
(160,349,o),
(210,349,qs)
);
},
{
closed = 1;
nodes = (
(167,419,o),
(114,481,o),
(114,531,qs),
(114,581,o),
(167,643,o),
(211,643,qs),
(256,643,o),
(310,582,o),
(310,531,qs),
(310,481,o),
(255,419,o),
(210,419,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 59 77 5 1 3 3 1 97 4 1 1 1 58 1 78 16 16 0 0 16 27 16 26 22 20 0 15 0 14 38 6 10 23
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = ordmasculine;
unicode = 186;
},
{
glyphname = uni042F;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(29,0,l),
(156,0,l),
(332,303,l),
(429,303,l),
(429,0,l),
(535,0,l),
(535,700,l),
(310,700,ls),
(199,700,o),
(73,598,o),
(73,502,qs),
(73,353,o),
(227,321,q)
);
},
{
closed = 1;
nodes = (
(240,393,o),
(181,447,o),
(181,502,qs),
(181,556,o),
(241,611,o),
(313,611,qs),
(429,611,l),
(429,393,l),
(313,393,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
12 1 2 5 1 76 3 1 1 2 1 134 0 0 0 4 5 0 4 103 6 1 5 2 2 5 87 6 1 5 5 2 95 0 2 5 2 79 13 13 13 21 13 20 35 17 17 17 35 7 6 27
CALL[ ]	/* CallFunction */";
};
width = 604;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(35,0,l),
(139,0,l),
(319,310,l),
(435,310,l),
(435,0,l),
(519,0,l),
(519,700,l),
(312,700,ls),
(200,700,o),
(78,602,o),
(78,505,qs),
(78,354,o),
(236,326,q)
);
},
{
closed = 1;
nodes = (
(232,381,o),
(164,441,o),
(164,505,qs),
(164,570,o),
(232,630,o),
(314,630,qs),
(435,630,l),
(435,381,l),
(314,381,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
12 1 2 5 1 76 3 1 1 2 1 134 0 0 0 4 5 0 4 103 6 1 5 2 2 5 87 6 1 5 5 2 95 0 2 5 2 79 13 13 13 21 13 20 35 17 17 17 35 7 6 27
CALL[ ]	/* CallFunction */";
};
width = 593;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(22,0,l),
(173,0,l),
(345,295,l),
(423,295,l),
(423,0,l),
(551,0,l),
(551,700,l),
(308,700,ls),
(198,700,o),
(68,594,o),
(68,498,qs),
(68,425,o),
(146,333,o),
(217,316,q)
);
},
{
closed = 1;
nodes = (
(248,404,o),
(198,453,o),
(198,498,qs),
(198,542,o),
(249,591,o),
(311,591,qs),
(423,591,l),
(423,404,l),
(311,404,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
13 1 2 5 1 76 3 1 1 2 1 134 0 0 0 4 5 0 4 103 6 1 5 2 2 5 87 6 1 5 5 2 95 0 2 5 2 79 14 14 14 22 14 21 35 17 17 17 36 7 6 27
CALL[ ]	/* CallFunction */";
};
width = 615;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(26,0,l),
(162,0,l),
(336,300,l),
(427,300,l),
(427,0,l),
(540,0,l),
(540,700,l),
(309,700,ls),
(198,700,o),
(71,596,o),
(71,500,qs),
(71,425,o),
(151,335,o),
(223,319,q)
);
},
{
closed = 1;
nodes = (
(243,396,o),
(187,449,o),
(187,500,qs),
(187,551,o),
(243,604,o),
(312,604,qs),
(427,604,l),
(427,396,l),
(312,396,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
13 1 2 5 1 76 3 1 1 2 1 134 0 0 0 4 5 0 4 103 6 1 5 2 2 5 87 6 1 5 5 2 95 0 2 5 2 79 14 14 14 22 14 21 35 17 17 17 36 7 6 27
CALL[ ]	/* CallFunction */";
};
width = 608;
}
);
note = uni042F;
unicode = (1071,1103);
},
{
glyphname = uni0394;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(677,0,l),
(677,82,l),
(395,700,l),
(308,700,l),
(27,82,l),
(27,0,l)
);
},
{
closed = 1;
nodes = (
(351,580,l),
(569,82,l),
(135,82,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
7 1 2 0 1 76 3 0 2 2 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 23 77 3 1 2 2 1 95 0 1 1 24 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 0 2 0 133 3 1 2 2 1 95 0 1 1 24 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
6 6 6 8 6 8 18 17 4 7 24
CALL[ ]	/* CallFunction */";
};
width = 703;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(665,0,l),
(665,65,l),
(382,700,l),
(312,700,l),
(30,65,l),
(30,0,l)
);
},
{
closed = 1;
nodes = (
(347,604,l),
(580,65,l),
(115,65,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
7 1 2 0 1 76 3 0 2 2 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 23 77 3 1 2 2 1 95 0 1 1 24 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 0 2 0 133 3 1 2 2 1 95 0 1 1 24 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
6 6 6 8 6 8 18 17 4 7 24
CALL[ ]	/* CallFunction */";
};
width = 695;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(688,0,l),
(688,98,l),
(408,700,l),
(303,700,l),
(23,98,l),
(23,0,l)
);
},
{
closed = 1;
nodes = (
(355,555,l),
(557,98,l),
(154,98,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
7 1 2 0 1 76 3 0 2 2 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 23 77 3 1 2 2 1 95 0 1 1 24 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 0 2 0 133 3 1 2 2 1 95 0 1 1 24 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
6 6 6 8 6 8 18 17 4 7 24
CALL[ ]	/* CallFunction */";
};
width = 711;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(680,0,l),
(680,87,l),
(399,700,l),
(306,700,l),
(25,87,l),
(25,0,l)
);
},
{
closed = 1;
nodes = (
(352,571,l),
(565,87,l),
(141,87,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
7 1 2 0 1 76 3 0 2 2 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 23 77 3 1 2 2 1 95 0 1 1 24 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 0 2 0 133 3 1 2 2 1 95 0 1 1 24 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
6 6 6 8 6 8 18 17 4 7 24
CALL[ ]	/* CallFunction */";
};
width = 706;
}
);
note = uni0394;
unicode = 916;
},
{
glyphname = Pi;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(222,0,l),
(222,414,l),
(424,414,l),
(424,0,l),
(530,0,l),
(530,414,l),
(607,414,l),
(607,496,l),
(40,496,l),
(40,414,l),
(116,414,l),
(116,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
0 1 4 2 2 0 3 1 0 103 5 1 3 3 24 3 78 17 17 17 17 17 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 647;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(209,0,l),
(209,430,l),
(437,430,l),
(437,0,l),
(521,0,l),
(521,430,l),
(600,430,l),
(600,496,l),
(46,496,l),
(46,430,l),
(125,430,l),
(125,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
0 1 4 2 2 0 3 1 0 103 5 1 3 3 24 3 78 17 17 17 17 17 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 646;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(235,0,l),
(235,398,l),
(411,398,l),
(411,0,l),
(539,0,l),
(539,398,l),
(614,398,l),
(614,496,l),
(33,496,l),
(33,398,l),
(107,398,l),
(107,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
0 1 4 2 2 0 3 1 0 103 5 1 3 3 24 3 78 17 17 17 17 17 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 647;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(226,0,l),
(226,409,l),
(420,409,l),
(420,0,l),
(533,0,l),
(533,409,l),
(609,409,l),
(609,496,l),
(37,496,l),
(37,409,l),
(113,409,l),
(113,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
0 1 4 2 2 0 3 1 0 103 5 1 3 3 24 3 78 17 17 17 17 17 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 647;
}
);
note = Pi;
unicode = 928;
},
{
glyphname = uni03A9;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,0,l),
(326,86,l),
(245,113,o),
(148,255,o),
(148,351,qs),
(148,419,o),
(202,540,o),
(313,616,o),
(394,616,qs),
(462,616,o),
(574,555,o),
(641,435,o),
(641,351,qs),
(641,256,o),
(546,113,o),
(463,86,q),
(463,0,l),
(736,0,l),
(736,82,l),
(607,82,l),
(677,125,o),
(749,271,o),
(749,360,qs),
(749,463,o),
(656,623,o),
(494,712,o),
(394,712,qs),
(295,712,o),
(134,623,o),
(41,462,o),
(41,360,qs),
(41,271,o),
(113,125,o),
(182,82,q),
(52,82,l),
(52,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
33 19 2 0 4 1 76 0 4 4 1 97 0 1 1 23 77 2 1 0 0 3 95 5 1 3 3 24 3 78 23 39 17 22 38 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 789;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(331,0,l),
(331,69,l),
(238,93,o),
(127,247,o),
(127,352,qs),
(127,424,o),
(186,554,o),
(307,636,o),
(394,636,qs),
(463,636,o),
(585,572,o),
(662,444,o),
(662,352,qs),
(662,250,o),
(555,94,o),
(458,69,q),
(458,0,l),
(732,0,l),
(732,66,l),
(590,66,l),
(666,107,o),
(747,263,o),
(747,357,qs),
(747,459,o),
(655,621,o),
(494,712,o),
(394,712,qs),
(295,712,o),
(135,621,o),
(43,459,o),
(43,357,qs),
(43,262,o),
(124,107,o),
(199,66,q),
(56,66,l),
(56,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
33 19 2 0 4 1 76 0 4 4 1 97 0 1 1 23 77 2 1 0 0 3 95 5 1 3 3 24 3 78 23 39 17 22 38 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 789;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(320,0,l),
(320,102,l),
(252,132,o),
(169,262,o),
(169,350,qs),
(169,414,o),
(218,526,o),
(319,595,o),
(394,595,qs),
(460,595,o),
(563,536,o),
(620,426,o),
(620,350,qs),
(620,262,o),
(537,132,o),
(468,102,q),
(468,0,l),
(740,0,l),
(740,98,l),
(623,98,l),
(687,142,o),
(750,279,o),
(750,363,qs),
(750,466,o),
(657,625,o),
(495,712,o),
(394,712,qs),
(294,712,o),
(132,624,o),
(39,465,o),
(39,363,qs),
(39,279,o),
(102,142,o),
(165,98,q),
(48,98,l),
(48,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
33 19 2 0 4 1 76 0 4 4 1 97 0 1 1 23 77 2 1 0 0 3 95 5 1 3 3 24 3 78 23 39 17 22 38 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 788;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(324,0,l),
(324,91,l),
(247,119,o),
(155,257,o),
(155,351,qs),
(155,417,o),
(207,535,o),
(315,609,o),
(394,609,qs),
(461,609,o),
(570,549,o),
(634,432,o),
(634,351,qs),
(634,258,o),
(543,119,o),
(465,91,q),
(465,0,l),
(737,0,l),
(737,87,l),
(612,87,l),
(680,131,o),
(749,274,o),
(749,361,qs),
(749,464,o),
(656,623,o),
(494,712,o),
(394,712,qs),
(294,712,o),
(133,623,o),
(40,463,o),
(40,361,qs),
(40,274,o),
(109,131,o),
(176,87,q),
(51,87,l),
(51,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
33 19 2 0 4 1 76 0 4 4 1 97 0 1 1 23 77 2 1 0 0 3 95 5 1 3 3 24 3 78 23 39 17 22 38 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = uni03A9;
unicode = 937;
},
{
glyphname = uni03BC;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,-220,l),
(173,12,l),
(208,-12,o),
(261,-12,qs),
(318,-12,o),
(407,40,o),
(431,86,q),
(439,0,l),
(533,0,l),
(533,496,l),
(427,496,l),
(427,240,ls),
(427,164,o),
(352,78,o),
(291,78,qs),
(232,78,o),
(173,151,o),
(173,222,qs),
(173,496,l),
(67,496,l),
(67,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
13 1 1 0 18 1 3 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
2 1 0 1 0 133 0 3 3 24 77 0 1 1 4 97 0 4 4 24 77 0 5 5 25 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 0 1 0 133 0 1 0 4 5 1 4 105 0 3 3 24 77 0 5 5 25 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 35 17 19 35 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(153,-220,l),
(153,20,l),
(196,-12,o),
(261,-12,qs),
(317,-12,o),
(409,42,o),
(433,88,q),
(438,0,l),
(514,0,l),
(514,496,l),
(430,496,l),
(430,239,ls),
(430,155,o),
(347,60,o),
(281,60,qs),
(153,60,o),
(153,215,qs),
(153,496,l),
(69,496,l),
(69,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 1 0 17 1 3 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
2 1 0 1 0 133 0 3 3 24 77 0 1 1 4 97 0 4 4 24 77 0 5 5 25 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 0 1 0 133 0 1 0 4 5 1 4 105 0 3 3 24 77 0 5 5 25 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 35 17 19 34 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 583;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(193,-220,l),
(193,4,l),
(219,-12,o),
(260,-12,qs),
(318,-12,o),
(404,39,o),
(429,84,q),
(439,0,l),
(551,0,l),
(551,496,l),
(423,496,l),
(423,240,ls),
(423,173,o),
(356,96,o),
(301,96,qs),
(247,96,o),
(193,163,o),
(193,228,qs),
(193,496,l),
(65,496,l),
(65,-220,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 13 2 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
2 1 0 1 0 133 0 3 3 24 77 0 1 1 4 97 0 4 4 24 77 0 5 5 25 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 0 1 0 133 0 1 0 4 5 1 4 105 0 3 3 24 77 0 5 5 25 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 35 17 19 35 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 617;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(180,-220,l),
(180,9,l),
(212,-12,o),
(260,-12,qs),
(317,-12,o),
(405,40,o),
(430,85,q),
(439,0,l),
(539,0,l),
(539,496,l),
(425,496,l),
(425,240,ls),
(425,167,o),
(353,84,o),
(294,84,qs),
(180,84,o),
(180,224,qs),
(180,496,l),
(66,496,l),
(66,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 1 0 17 1 3 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
42
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
2 1 0 1 0 133 0 3 3 24 77 0 1 1 4 97 0 4 4 24 77 0 5 5 25 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
2 1 0 1 0 133 0 1 0 4 5 1 4 105 0 3 3 24 77 0 5 5 25 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 35 17 19 34 16 6 7 28
CALL[ ]	/* CallFunction */";
};
width = 606;
}
);
note = uni03BC;
unicode = 956;
},
{
glyphname = zero;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(433,-12,o),
(559,183,o),
(559,350,qs),
(559,517,o),
(433,712,o),
(296,712,qs),
(160,712,o),
(32,514,o),
(32,350,qs),
(32,186,o),
(160,-12,o),
(296,-12,qs)
);
},
{
closed = 1;
nodes = (
(218,83,o),
(140,223,o),
(140,350,qs),
(140,477,o),
(218,618,o),
(296,618,qs),
(374,618,o),
(451,478,o),
(451,350,qs),
(451,223,o),
(374,83,o),
(296,83,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 39 77 5 1 3 3 1 97 4 1 1 1 40 1 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(438,-12,o),
(564,183,o),
(564,350,qs),
(564,517,o),
(438,712,o),
(301,712,qs),
(165,712,o),
(37,514,o),
(37,350,qs),
(37,186,o),
(165,-12,o),
(301,-12,qs)
);
},
{
closed = 1;
nodes = (
(212,63,o),
(123,214,o),
(123,350,qs),
(123,486,o),
(212,637,o),
(301,637,qs),
(390,637,o),
(478,487,o),
(478,350,qs),
(478,213,o),
(390,63,o),
(301,63,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 39 77 5 1 3 3 1 97 4 1 1 1 40 1 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(428,-12,o),
(554,183,o),
(554,350,qs),
(554,517,o),
(428,712,o),
(291,712,qs),
(155,712,o),
(27,514,o),
(27,350,qs),
(27,186,o),
(155,-12,o),
(291,-12,qs)
);
},
{
closed = 1;
nodes = (
(224,102,o),
(157,232,o),
(157,350,qs),
(157,468,o),
(224,598,o),
(291,598,qs),
(358,598,o),
(424,468,o),
(424,350,qs),
(424,232,o),
(358,102,o),
(291,102,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 39 77 5 1 3 3 1 97 4 1 1 1 40 1 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(431,-12,o),
(557,183,o),
(557,350,qs),
(557,517,o),
(431,712,o),
(294,712,qs),
(158,712,o),
(30,514,o),
(30,350,qs),
(30,186,o),
(158,-12,o),
(294,-12,qs)
);
},
{
closed = 1;
nodes = (
(219,89,o),
(146,226,o),
(146,350,qs),
(146,474,o),
(219,611,o),
(294,611,qs),
(369,611,o),
(442,474,o),
(442,350,qs),
(442,226,o),
(369,89,o),
(294,89,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 39 77 5 1 3 3 1 97 4 1 1 1 40 1 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 587;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(558,0,l),
(558,89,l),
(387,89,l),
(387,700,l),
(331,700,l),
(89,611,l),
(89,522,l),
(286,588,l),
(286,89,l),
(84,89,l),
(84,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 3 2 3 0 1 1 76 0 1 1 33 77 2 1 0 0 3 96 0 3 3 34 3 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(563,0,l),
(563,69,l),
(385,69,l),
(385,700,l),
(341,700,l),
(92,608,l),
(92,536,l),
(304,610,l),
(304,69,l),
(89,69,l),
(89,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 3 2 3 0 1 1 76 0 1 1 33 77 2 1 0 0 3 96 0 3 3 34 3 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(553,0,l),
(553,109,l),
(388,109,l),
(388,700,l),
(321,700,l),
(85,614,l),
(85,508,l),
(267,566,l),
(267,109,l),
(79,109,l),
(79,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 3 2 3 0 1 1 76 0 1 1 33 77 2 1 0 0 3 96 0 3 3 34 3 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(556,0,l),
(556,96,l),
(387,96,l),
(387,700,l),
(328,700,l),
(87,612,l),
(87,517,l),
(279,581,l),
(279,96,l),
(82,96,l),
(82,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 3 2 3 0 1 1 76 0 1 1 33 77 2 1 0 0 3 96 0 3 3 34 3 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 587;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(63,0,l),
(535,0,l),
(535,90,l),
(198,90,l),
(366,262,ls),
(421,318,o),
(474,377,o),
(515,458,o),
(515,503,qs),
(515,599,o),
(401,712,o),
(296,712,qs),
(192,712,o),
(67,592,o),
(66,487,q),
(169,487,l),
(169,546,o),
(235,622,o),
(294,622,qs),
(350,622,o),
(410,556,o),
(410,500,qs),
(410,461,o),
(352,383,o),
(285,314,qs),
(262,290,l),
(63,83,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
26 1 4 3 1 76 0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 39 77 0 3 3 4 95 0 4 4 34 4 78 17 23 34 18 38 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(73,0,l),
(535,0,l),
(535,70,l),
(172,70,l),
(374,278,ls),
(423,328,o),
(469,380,o),
(511,459,o),
(511,503,qs),
(511,604,o),
(398,712,o),
(299,712,qs),
(233,712,o),
(133,658,o),
(78,558,o),
(78,492,q),
(159,492,l),
(159,557,o),
(234,640,o),
(298,640,qs),
(363,640,o),
(427,565,o),
(427,500,qs),
(427,470,o),
(394,410,o),
(346,356,o),
(295,303,qs),
(73,73,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
27 1 3 1 1 76 0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 39 77 0 3 3 4 95 0 4 4 34 4 78 17 23 35 18 38 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(53,0,l),
(535,0,l),
(535,109,l),
(223,109,l),
(357,245,ls),
(419,307,o),
(478,374,o),
(518,456,o),
(518,502,qs),
(518,594,o),
(403,712,o),
(292,712,qs),
(185,712,o),
(57,592,o),
(54,481,q),
(178,481,l),
(178,534,o),
(235,604,o),
(289,604,qs),
(336,604,o),
(393,547,o),
(393,500,qs),
(393,462,o),
(334,384,o),
(266,314,qs),
(229,276,l),
(53,92,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
26 1 4 3 1 76 0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 39 77 0 3 3 4 95 0 4 4 34 4 78 17 23 34 18 38 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(60,0,l),
(535,0,l),
(535,96,l),
(206,96,l),
(220,110,o),
(305,198,o),
(363,256,qs),
(420,314,o),
(475,376,o),
(516,457,o),
(516,502,qs),
(516,597,o),
(401,712,o),
(294,712,qs),
(190,712,o),
(64,592,o),
(62,485,q),
(172,485,l),
(172,542,o),
(235,616,o),
(292,616,qs),
(345,616,o),
(404,553,o),
(404,500,qs),
(404,462,o),
(346,384,o),
(279,314,qs),
(251,285,l),
(60,86,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
28 1 4 3 1 76 0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 39 77 0 3 3 4 95 0 4 4 34 4 78 17 25 34 18 38 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 587;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(371,-12,o),
(481,43,o),
(543,146,o),
(543,217,qs),
(543,279,o),
(486,374,o),
(386,426,o),
(322,426,q),
(520,614,l),
(520,700,l),
(73,700,l),
(73,611,l),
(390,611,l),
(163,397,l),
(224,327,l),
(259,347,o),
(299,347,qs),
(364,347,o),
(441,278,o),
(441,216,qs),
(441,153,o),
(365,79,o),
(298,79,qs),
(235,79,o),
(158,148,o),
(151,203,q),
(48,203,l),
(55,102,o),
(190,-12,o),
(298,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
20 1 3 4 15 1 2 5 14 1 0 2 3 76 0 0 2 1 2 0 1 128 0 5 0 2 0 5 2 105 0 3 3 4 95 0 4 4 33 77 0 1 1 6 97 7 1 6 6 40 6 78 0 0 0 29 0 28 18 17 19 36 34 18 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(412,-12,o),
(544,108,o),
(544,213,qs),
(544,278,o),
(484,372,o),
(386,420,o),
(329,420,qs),
(312,420,o),
(303,419,q),
(521,634,l),
(521,700,l),
(85,700,l),
(85,631,l),
(418,631,l),
(177,395,l),
(229,336,l),
(265,357,o),
(304,357,qs),
(377,357,o),
(463,281,o),
(463,212,qs),
(463,144,o),
(378,60,o),
(303,60,qs),
(235,60,o),
(150,131,o),
(137,190,q),
(56,190,l),
(66,96,o),
(199,-12,o),
(303,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
20 1 3 4 15 1 2 5 14 1 0 2 3 76 0 0 2 1 2 0 1 128 0 5 0 2 0 5 2 105 0 3 3 4 95 0 4 4 33 77 0 1 1 6 97 7 1 6 6 40 6 78 0 0 0 30 0 29 35 17 19 36 34 18 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(366,-12,o),
(478,44,o),
(541,149,o),
(541,221,qs),
(541,306,o),
(437,425,o),
(341,433,q),
(519,594,l),
(519,700,l),
(61,700,l),
(61,591,l),
(361,591,l),
(148,399,l),
(219,317,l),
(254,337,o),
(293,337,qs),
(349,337,o),
(418,275,o),
(418,220,qs),
(418,161,o),
(350,97,o),
(292,97,qs),
(234,97,o),
(165,164,o),
(164,216,q),
(40,216,l),
(42,107,o),
(179,-12,o),
(292,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
20 1 3 4 21 15 2 2 3 14 1 0 2 3 76 0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 33 77 0 1 1 5 97 6 1 5 5 40 5 78 0 0 0 28 0 27 17 19 36 34 18 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(369,-12,o),
(480,43,o),
(542,147,o),
(542,218,qs),
(542,278,o),
(489,372,o),
(392,427,o),
(328,428,q),
(520,607,l),
(520,700,l),
(69,700,l),
(69,604,l),
(380,604,l),
(158,398,l),
(222,323,l),
(258,344,o),
(297,344,qs),
(358,344,o),
(433,277,o),
(433,217,qs),
(433,155,o),
(359,85,o),
(296,85,qs),
(234,85,o),
(160,153,o),
(155,207,q),
(45,207,l),
(50,103,o),
(186,-12,o),
(296,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
20 1 3 4 15 1 2 5 14 1 0 2 3 76 0 0 2 1 2 0 1 128 0 5 0 2 0 5 2 105 0 3 3 4 95 0 4 4 33 77 0 1 1 6 97 7 1 6 6 40 6 78 0 0 0 29 0 28 18 17 19 36 34 18 8 8 28
CALL[ ]	/* CallFunction */";
};
width = 587;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(475,0,l),
(475,140,l),
(566,140,l),
(566,233,l),
(475,233,l),
(475,423,l),
(375,423,l),
(375,233,l),
(149,233,l),
(381,700,l),
(276,700,l),
(37,224,l),
(37,140,l),
(369,140,l),
(369,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
2 1 0 2 1 76 0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 33 77 0 6 6 34 6 78 17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(469,0,l),
(469,150,l),
(571,150,l),
(571,224,l),
(469,224,l),
(469,423,l),
(390,423,l),
(390,224,l),
(131,224,l),
(368,700,l),
(285,700,l),
(42,215,l),
(42,150,l),
(386,150,l),
(386,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
2 1 0 2 1 76 0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 33 77 0 6 6 34 6 78 17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(480,0,l),
(480,130,l),
(561,130,l),
(561,241,l),
(480,241,l),
(480,423,l),
(360,423,l),
(360,241,l),
(167,241,l),
(393,700,l),
(267,700,l),
(32,232,l),
(32,130,l),
(352,130,l),
(352,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
2 1 0 2 1 76 0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 33 77 0 6 6 34 6 78 17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(476,0,l),
(476,137,l),
(564,137,l),
(564,235,l),
(476,235,l),
(476,423,l),
(370,423,l),
(370,235,l),
(155,235,l),
(385,700,l),
(273,700,l),
(35,226,l),
(35,137,l),
(363,137,l),
(363,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
2 1 0 2 1 76 0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 33 77 0 6 6 34 6 78 17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 587;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(374,-12,o),
(486,53,o),
(548,167,o),
(548,239,qs),
(548,303,o),
(520,361,qs),
(491,417,o),
(389,481,o),
(319,481,qs),
(269,481,o),
(188,448,o),
(165,420,q),
(201,608,l),
(498,608,l),
(498,700,l),
(121,700,l),
(61,308,l),
(162,308,l),
(179,347,o),
(254,394,o),
(304,394,qs),
(367,394,o),
(446,308,o),
(446,238,qs),
(446,169,o),
(366,79,o),
(302,79,qs),
(244,79,o),
(164,142,o),
(153,193,q),
(49,193,l),
(59,100,o),
(196,-12,o),
(301,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 5 5 4 95 0 4 4 33 77 0 2 2 6 97 0 6 6 36 77 0 1 1 7 97 8 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 33 77 0 1 1 7 97 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 0 32 35 17 17 18 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(378,-12,o),
(488,51,o),
(549,165,o),
(549,237,qs),
(549,306,o),
(520,362,qs),
(490,418,o),
(387,481,o),
(319,481,qs),
(266,481,o),
(180,444,o),
(155,414,q),
(196,627,l),
(498,627,l),
(498,700,l),
(131,700,l),
(71,316,l),
(151,316,l),
(170,359,o),
(254,410,o),
(310,410,qs),
(380,410,o),
(468,314,o),
(468,236,qs),
(468,159,o),
(380,60,o),
(307,60,qs),
(241,60,o),
(152,130,o),
(140,189,q),
(58,189,l),
(70,97,o),
(205,-12,o),
(306,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 5 5 4 95 0 4 4 33 77 0 2 2 6 97 0 6 6 36 77 0 1 1 7 97 8 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 33 77 0 1 1 7 97 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 0 32 35 17 17 18 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(370,-12,o),
(484,54,o),
(546,169,o),
(546,241,qs),
(546,303,o),
(520,360,qs),
(493,417,o),
(391,481,o),
(319,481,qs),
(273,481,o),
(196,451,o),
(174,426,q),
(206,588,l),
(498,588,l),
(498,700,l),
(110,700,l),
(50,300,l),
(173,300,l),
(188,334,o),
(254,377,o),
(298,377,qs),
(353,377,o),
(423,302,o),
(423,240,qs),
(423,179,o),
(352,97,o),
(296,97,qs),
(245,97,o),
(174,153,o),
(165,197,q),
(40,197,l),
(45,134,o),
(112,39,o),
(224,-12,o),
(296,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
22 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 5 5 4 95 0 4 4 33 77 0 2 2 6 97 0 6 6 36 77 0 1 1 7 97 8 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 33 77 0 1 1 7 97 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 34 0 33 35 17 17 18 36 34 19 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(373,-12,o),
(485,53,o),
(547,168,o),
(547,240,qs),
(547,306,o),
(520,361,qs),
(492,417,o),
(390,481,o),
(319,481,qs),
(271,481,o),
(191,449,o),
(168,422,q),
(203,601,l),
(498,601,l),
(498,700,l),
(117,700,l),
(57,305,l),
(166,305,l),
(182,342,o),
(254,388,o),
(302,388,qs),
(362,388,o),
(438,306,o),
(438,239,qs),
(438,172,o),
(362,85,o),
(300,85,qs),
(244,85,o),
(167,146,o),
(157,194,q),
(46,194,l),
(55,100,o),
(193,-12,o),
(299,-12,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 5 5 4 95 0 4 4 33 77 0 2 2 6 97 0 6 6 36 77 0 1 1 7 97 8 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 33 77 0 1 1 7 97 8 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 0 32 35 17 17 18 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 587;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(386,-12,o),
(436,22,qs),
(488,55,o),
(545,162,o),
(545,224,qs),
(545,294,o),
(515,343,qs),
(484,394,o),
(387,450,o),
(330,450,qs),
(271,450,o),
(177,394,o),
(154,349,q),
(157,486,o),
(241,623,o),
(311,623,qs),
(360,623,o),
(421,567,o),
(431,515,q),
(528,515,l),
(522,569,o),
(497,613,qs),
(469,659,o),
(376,712,o),
(312,712,qs),
(228,712,o),
(172,663,qs),
(114,615,o),
(52,441,o),
(52,325,qs),
(52,188,o),
(110,94,qs),
(178,-12,o),
(315,-12,qs)
);
},
{
closed = 1;
nodes = (
(250,80,o),
(174,160,o),
(174,220,qs),
(174,258,o),
(209,322,o),
(270,360,o),
(308,360,qs),
(366,360,o),
(441,283,o),
(441,220,qs),
(441,160,o),
(368,80,o),
(309,80,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
20 1 6 5 1 76 0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 39 77 8 1 6 6 4 97 7 1 4 4 40 4 78 34 34 0 0 34 46 34 45 40 38 0 33 0 32 36 34 20 39 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(389,-12,o),
(439,22,qs),
(490,55,o),
(546,163,o),
(546,223,qs),
(546,290,o),
(515,341,qs),
(484,392,o),
(385,448,o),
(328,448,qs),
(261,448,o),
(164,390,o),
(141,341,q),
(144,491,o),
(240,639,o),
(316,639,qs),
(368,639,o),
(439,577,o),
(449,520,q),
(526,520,l),
(518,575,o),
(494,616,qs),
(467,661,o),
(377,712,o),
(317,712,qs),
(236,712,o),
(180,662,qs),
(122,613,o),
(62,438,o),
(62,322,qs),
(62,257,o),
(90,140,o),
(118,93,qs),
(184,-12,o),
(318,-12,qs)
);
},
{
closed = 1;
nodes = (
(247,62,o),
(164,151,o),
(164,218,qs),
(164,260,o),
(202,332,o),
(270,375,o),
(313,375,qs),
(377,375,o),
(461,289,o),
(461,219,qs),
(461,153,o),
(381,62,o),
(313,62,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
21 1 6 5 1 76 0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 39 77 8 1 6 6 4 97 7 1 4 4 40 4 78 35 35 0 0 35 47 35 46 41 39 0 34 0 33 36 34 20 40 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(381,-12,o),
(433,21,qs),
(485,54,o),
(544,162,o),
(544,225,qs),
(544,294,o),
(514,345,qs),
(485,395,o),
(387,452,o),
(332,452,qs),
(280,452,o),
(190,399,o),
(167,357,q),
(169,481,o),
(241,606,o),
(306,606,qs),
(394,606,o),
(413,510,q),
(530,510,l),
(525,564,o),
(499,609,qs),
(471,657,o),
(373,712,o),
(307,712,qs),
(223,712,o),
(164,664,qs),
(105,617,o),
(42,444,o),
(42,327,qs),
(42,262,o),
(71,142,o),
(101,95,qs),
(170,-12,o),
(311,-12,qs)
);
},
{
closed = 1;
nodes = (
(252,98,o),
(184,168,o),
(184,222,qs),
(184,273,o),
(253,344,o),
(302,344,qs),
(354,344,o),
(421,276,o),
(421,220,qs),
(421,167,o),
(355,98,o),
(304,98,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
20 1 5 3 1 76 0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 39 77 8 1 6 6 4 97 7 1 4 4 40 4 78 34 34 0 0 34 45 34 44 40 38 0 33 0 32 36 33 20 40 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(383,-12,o),
(435,21,qs),
(487,55,o),
(545,162,o),
(545,224,qs),
(545,291,o),
(514,344,qs),
(484,395,o),
(387,451,o),
(331,451,qs),
(274,451,o),
(181,396,o),
(158,352,q),
(161,485,o),
(241,617,o),
(309,617,qs),
(356,617,o),
(415,563,o),
(425,513,q),
(529,513,l),
(523,568,o),
(497,611,qs),
(470,658,o),
(374,712,o),
(310,712,qs),
(227,712,o),
(169,663,qs),
(110,615,o),
(49,442,o),
(49,325,qs),
(49,186,o),
(107,94,qs),
(139,44,o),
(242,-12,o),
(313,-12,qs)
);
},
{
closed = 1;
nodes = (
(250,86,o),
(177,162,o),
(177,221,qs),
(177,276,o),
(251,354,o),
(306,354,qs),
(362,354,o),
(434,280,o),
(434,220,qs),
(434,162,o),
(363,86,o),
(307,86,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
21 1 6 5 1 76 0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 39 77 8 1 6 6 4 97 7 1 4 4 40 4 78 35 35 0 0 35 46 35 45 41 39 0 34 0 33 36 34 20 40 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 587;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,0,l),
(547,623,l),
(547,700,l),
(45,700,l),
(45,610,l),
(437,610,l),
(149,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 0 0 1 95 0 1 1 33 77 0 2 2 34 2 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(253,0,l),
(547,637,l),
(547,700,l),
(55,700,l),
(55,628,l),
(461,628,l),
(164,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 0 0 1 95 0 1 1 33 77 0 2 2 34 2 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(267,0,l),
(547,609,l),
(547,700,l),
(35,700,l),
(35,591,l),
(412,591,l),
(134,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 0 0 1 95 0 1 1 33 77 0 2 2 34 2 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(262,0,l),
(547,618,l),
(547,700,l),
(42,700,l),
(42,603,l),
(428,603,l),
(144,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 0 0 1 95 0 1 1 33 77 0 2 2 34 2 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 587;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(361,-12,o),
(470,38,o),
(535,131,o),
(535,193,qs),
(535,256,o),
(469,356,o),
(411,375,q),
(460,393,o),
(518,476,o),
(518,526,qs),
(518,582,o),
(459,667,o),
(358,712,o),
(296,712,qs),
(235,712,o),
(133,668,o),
(73,584,o),
(73,526,qs),
(73,476,o),
(130,395,o),
(180,375,q),
(122,355,o),
(56,256,o),
(56,193,qs),
(56,132,o),
(120,39,o),
(230,-12,o),
(296,-12,qs)
);
},
{
closed = 1;
nodes = (
(232,79,o),
(161,145,o),
(161,201,qs),
(161,261,o),
(235,326,o),
(296,326,qs),
(357,326,o),
(431,261,o),
(431,201,qs),
(431,144,o),
(358,79,o),
(296,79,qs)
);
},
{
closed = 1;
nodes = (
(244,409,o),
(179,467,o),
(179,516,qs),
(179,568,o),
(243,624,o),
(296,624,qs),
(348,624,o),
(413,567,o),
(413,516,qs),
(413,467,o),
(347,409,o),
(296,409,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
20 6 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 39 77 7 1 3 3 1 97 6 1 1 1 40 1 78 40 40 28 28 0 0 40 51 40 50 46 44 28 39 28 38 34 32 0 27 0 26 44 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(365,-12,o),
(472,39,o),
(535,130,o),
(535,190,qs),
(535,254,o),
(462,356,o),
(402,373,q),
(456,391,o),
(518,476,o),
(518,526,qs),
(518,581,o),
(461,665,o),
(361,712,o),
(300,712,qs),
(240,712,o),
(141,668,o),
(83,583,o),
(83,526,qs),
(83,475,o),
(144,391,o),
(198,373,q),
(138,356,o),
(65,254,o),
(65,190,qs),
(65,130,o),
(128,39,o),
(235,-12,o),
(300,-12,qs)
);
},
{
closed = 1;
nodes = (
(230,62,o),
(149,134,o),
(149,195,qs),
(149,261,o),
(234,333,o),
(300,333,qs),
(366,333,o),
(451,261,o),
(451,195,qs),
(451,134,o),
(370,62,o),
(300,62,qs)
);
},
{
closed = 1;
nodes = (
(243,403,o),
(168,468,o),
(168,521,qs),
(168,578,o),
(243,640,o),
(300,640,qs),
(358,640,o),
(433,578,o),
(433,521,qs),
(433,469,o),
(357,403,o),
(300,403,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
20 6 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 39 77 7 1 3 3 1 97 6 1 1 1 40 1 78 40 40 28 28 0 0 40 51 40 50 46 44 28 39 28 38 34 32 0 27 0 26 44 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(356,-12,o),
(467,37,o),
(535,131,o),
(535,195,qs),
(535,257,o),
(475,355,o),
(419,376,q),
(464,396,o),
(518,476,o),
(518,525,qs),
(518,583,o),
(457,668,o),
(354,712,o),
(291,712,qs),
(228,712,o),
(124,668,o),
(63,583,o),
(63,525,qs),
(63,476,o),
(115,398,o),
(162,376,q),
(106,354,o),
(46,258,o),
(46,195,qs),
(46,133,o),
(112,39,o),
(224,-12,o),
(291,-12,qs)
);
},
{
closed = 1;
nodes = (
(234,95,o),
(172,156,o),
(172,206,qs),
(172,260,o),
(236,319,o),
(292,319,qs),
(347,319,o),
(410,260,o),
(410,206,qs),
(410,154,o),
(346,95,o),
(292,95,qs)
);
},
{
closed = 1;
nodes = (
(245,414,o),
(190,466,o),
(190,510,qs),
(190,557,o),
(243,608,o),
(291,608,qs),
(338,608,o),
(392,556,o),
(392,510,qs),
(392,466,o),
(337,414,o),
(291,414,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
20 6 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 39 77 7 1 3 3 1 97 6 1 1 1 40 1 78 40 40 28 28 0 0 40 51 40 50 46 44 28 39 28 38 34 32 0 27 0 26 44 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(359,-12,o),
(469,37,o),
(535,130,o),
(535,193,qs),
(535,256,o),
(471,355,o),
(413,375,q),
(461,394,o),
(518,476,o),
(518,525,qs),
(518,582,o),
(459,667,o),
(357,712,o),
(294,712,qs),
(232,712,o),
(130,668,o),
(70,583,o),
(70,525,qs),
(70,476,o),
(125,396,o),
(174,375,q),
(116,354,o),
(52,256,o),
(52,193,qs),
(52,132,o),
(117,39,o),
(227,-12,o),
(294,-12,qs)
);
},
{
closed = 1;
nodes = (
(233,84,o),
(164,148,o),
(164,202,qs),
(164,260,o),
(236,324,o),
(295,324,qs),
(354,324,o),
(424,260,o),
(424,202,qs),
(424,147,o),
(354,84,o),
(295,84,qs)
);
},
{
closed = 1;
nodes = (
(245,410,o),
(183,467,o),
(183,514,qs),
(183,564,o),
(243,619,o),
(294,619,qs),
(345,619,o),
(406,563,o),
(406,514,qs),
(406,467,o),
(343,410,o),
(294,410,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
20 6 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 39 77 7 1 3 3 1 97 6 1 1 1 40 1 78 40 40 28 28 0 0 40 51 40 50 46 44 28 39 28 38 34 32 0 27 0 26 44 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 587;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(361,-12,o),
(421,37,qs),
(479,86,o),
(541,260,o),
(541,376,qs),
(541,440,o),
(512,559,o),
(483,606,qs),
(416,712,o),
(278,712,qs),
(209,712,o),
(156,679,qs),
(105,646,o),
(48,538,o),
(48,476,qs),
(48,408,o),
(78,357,qs),
(108,306,o),
(206,250,o),
(262,250,qs),
(322,250,o),
(416,305,o),
(439,351,q),
(436,214,o),
(352,78,o),
(282,78,qs),
(234,78,o),
(172,134,o),
(162,185,q),
(65,185,l),
(69,135,o),
(96,88,qs),
(123,41,o),
(217,-12,o),
(281,-12,qs)
);
},
{
closed = 1;
nodes = (
(227,341,o),
(152,418,o),
(152,481,qs),
(152,541,o),
(225,620,o),
(284,620,qs),
(342,620,o),
(419,541,o),
(419,480,qs),
(419,443,o),
(384,379,o),
(323,341,o),
(285,341,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
11 1 6 5 1 76 0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 39 77 0 1 1 4 97 7 1 4 4 40 4 78 35 35 0 0 35 47 35 46 42 40 0 34 0 33 40 36 34 20 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(366,-12,o),
(424,38,qs),
(481,88,o),
(542,262,o),
(542,378,qs),
(542,516,o),
(485,607,qs),
(455,657,o),
(355,712,o),
(286,712,qs),
(214,712,o),
(164,678,qs),
(113,645,o),
(58,538,o),
(58,477,qs),
(58,408,o),
(89,359,qs),
(120,308,o),
(218,252,o),
(275,252,qs),
(343,252,o),
(440,310,o),
(463,359,q),
(459,208,o),
(363,61,o),
(288,61,qs),
(235,61,o),
(165,123,o),
(155,180,q),
(78,180,l),
(84,129,o),
(110,84,qs),
(136,39,o),
(227,-12,o),
(287,-12,qs)
);
},
{
closed = 1;
nodes = (
(226,325,o),
(143,411,o),
(143,481,qs),
(143,548,o),
(224,638,o),
(291,638,qs),
(333,638,o),
(401,598,o),
(440,527,o),
(440,482,qs),
(440,441,o),
(402,369,o),
(334,325,o),
(291,325,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
11 1 6 5 1 76 0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 39 77 0 1 1 4 97 7 1 4 4 40 4 78 35 35 0 0 35 48 35 47 43 41 0 34 0 33 40 36 34 20 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(359,-12,o),
(417,36,qs),
(476,83,o),
(539,256,o),
(539,373,qs),
(539,438,o),
(510,558,o),
(480,605,qs),
(411,712,o),
(270,712,qs),
(201,712,o),
(148,679,qs),
(96,646,o),
(37,538,o),
(37,475,qs),
(37,406,o),
(67,355,qs),
(96,305,o),
(194,248,o),
(249,248,qs),
(301,248,o),
(391,301,o),
(414,343,q),
(412,219,o),
(340,94,o),
(275,94,qs),
(187,94,o),
(168,190,q),
(51,190,l),
(56,136,o),
(82,91,qs),
(110,43,o),
(208,-12,o),
(274,-12,qs)
);
},
{
closed = 1;
nodes = (
(227,356,o),
(160,424,o),
(160,480,qs),
(160,533,o),
(226,602,o),
(277,602,qs),
(329,602,o),
(397,532,o),
(397,478,qs),
(397,427,o),
(328,356,o),
(279,356,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
10 1 2 6 1 76 0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 39 77 0 1 1 4 97 7 1 4 4 40 4 78 34 34 0 0 34 45 34 44 40 38 0 33 0 32 40 36 33 20 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 580;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(363,-12,o),
(419,37,qs),
(478,85,o),
(540,258,o),
(540,375,qs),
(540,439,o),
(511,559,o),
(482,606,qs),
(450,656,o),
(347,712,o),
(275,712,qs),
(206,712,o),
(153,679,qs),
(101,645,o),
(44,538,o),
(44,476,qs),
(44,407,o),
(74,356,qs),
(104,305,o),
(202,249,o),
(258,249,qs),
(315,249,o),
(407,304,o),
(430,348,q),
(428,216,o),
(347,83,o),
(279,83,qs),
(232,83,o),
(173,137,o),
(164,187,q),
(60,187,l),
(64,136,o),
(91,89,qs),
(119,42,o),
(214,-12,o),
(278,-12,qs)
);
},
{
closed = 1;
nodes = (
(227,346,o),
(154,420,o),
(154,480,qs),
(154,538,o),
(225,614,o),
(282,614,qs),
(338,614,o),
(411,538,o),
(411,479,qs),
(411,443,o),
(378,382,o),
(319,346,o),
(283,346,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
11 1 6 5 1 76 0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 39 77 0 1 1 4 97 7 1 4 4 40 4 78 36 36 0 0 36 48 36 47 43 41 0 35 0 34 40 36 34 20 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 587;
}
);
note = nine;
unicode = 57;
},
{
glyphname = uni24EA;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,51,o),
(170,130,o),
(91,267,o),
(91,350,qs),
(91,433,o),
(170,570,o),
(307,649,o),
(389,649,qs),
(472,649,o),
(609,570,o),
(688,433,o),
(688,350,qs),
(688,267,o),
(609,130,o),
(472,51,o),
(389,51,qs)
);
},
{
closed = 1;
nodes = (
(460,165,o),
(492,215,qs),
(524,265,o),
(524,350,qs),
(524,435,o),
(492,485,qs),
(460,535,o),
(390,535,qs),
(320,535,o),
(288,484,qs),
(255,435,o),
(255,350,qs),
(255,266,o),
(288,216,qs),
(320,165,o),
(390,165,qs)
);
},
{
closed = 1;
nodes = (
(359,230,o),
(344,261,qs),
(329,294,o),
(329,350,qs),
(329,408,o),
(344,439,qs),
(359,470,o),
(390,470,qs),
(421,470,o),
(436,439,qs),
(451,404,o),
(451,350,qs),
(451,298,o),
(436,261,qs),
(421,230,o),
(390,230,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
0 4 0 6 7 4 6 105 11 1 7 10 1 5 3 7 5 105 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78 48 48 32 32 16 16 0 0 48 63 48 62 56 54 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,46,o),
(168,128,o),
(86,267,o),
(86,350,qs),
(86,433,o),
(168,572,o),
(307,654,o),
(389,654,qs),
(472,654,o),
(611,572,o),
(693,433,o),
(693,350,qs),
(693,267,o),
(611,128,o),
(472,46,o),
(389,46,qs)
);
},
{
closed = 1;
nodes = (
(460,165,o),
(492,215,qs),
(524,265,o),
(524,350,qs),
(524,435,o),
(492,485,qs),
(460,535,o),
(390,535,qs),
(320,535,o),
(288,484,qs),
(255,435,o),
(255,350,qs),
(255,266,o),
(288,216,qs),
(320,165,o),
(390,165,qs)
);
},
{
closed = 1;
nodes = (
(356,223,o),
(338,256,qs),
(321,292,o),
(321,350,qs),
(321,408,o),
(338,444,qs),
(356,477,o),
(390,477,qs),
(425,477,o),
(441,444,qs),
(458,408,o),
(458,350,qs),
(458,292,o),
(441,256,qs),
(425,223,o),
(390,223,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
0 4 0 6 7 4 6 105 11 1 7 10 1 5 3 7 5 105 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78 48 48 32 32 16 16 0 0 48 63 48 62 56 54 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,56,o),
(173,133,o),
(96,267,o),
(96,350,qs),
(96,433,o),
(173,567,o),
(307,644,o),
(389,644,qs),
(472,644,o),
(606,567,o),
(683,433,o),
(683,350,qs),
(683,267,o),
(606,133,o),
(472,56,o),
(389,56,qs)
);
},
{
closed = 1;
nodes = (
(459,165,o),
(492,215,qs),
(524,265,o),
(524,350,qs),
(524,435,o),
(492,485,qs),
(459,535,o),
(390,535,qs),
(320,535,o),
(287,484,qs),
(255,436,o),
(255,350,qs),
(255,264,o),
(287,216,qs),
(320,165,o),
(390,165,qs)
);
},
{
closed = 1;
nodes = (
(363,236,o),
(349,266,qs),
(336,295,o),
(336,350,qs),
(336,405,o),
(349,434,qs),
(362,463,o),
(390,463,qs),
(417,463,o),
(430,434,qs),
(443,402,o),
(443,350,qs),
(443,299,o),
(430,266,qs),
(417,236,o),
(390,236,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
0 4 0 6 7 4 6 105 11 1 7 10 1 5 3 7 5 105 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78 48 48 32 32 16 16 0 0 48 63 48 62 56 54 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,53,o),
(171,131,o),
(93,267,o),
(93,350,qs),
(93,433,o),
(171,569,o),
(307,647,o),
(389,647,qs),
(472,647,o),
(608,569,o),
(686,433,o),
(686,350,qs),
(686,267,o),
(608,131,o),
(472,53,o),
(389,53,qs)
);
},
{
closed = 1;
nodes = (
(459,165,o),
(492,215,qs),
(524,265,o),
(524,350,qs),
(524,435,o),
(492,485,qs),
(459,535,o),
(390,535,qs),
(320,535,o),
(287,484,qs),
(255,436,o),
(255,350,qs),
(255,264,o),
(287,216,qs),
(320,165,o),
(390,165,qs)
);
},
{
closed = 1;
nodes = (
(360,232,o),
(345,263,qs),
(331,296,o),
(331,350,qs),
(331,404,o),
(345,437,qs),
(360,468,o),
(390,468,qs),
(419,468,o),
(434,437,qs),
(448,404,o),
(448,350,qs),
(448,296,o),
(434,263,qs),
(419,232,o),
(390,232,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
0 4 0 6 7 4 6 105 11 1 7 10 1 5 3 7 5 105 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78 48 48 32 32 16 16 0 0 48 63 48 62 56 54 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni24EA;
unicode = 9450;
},
{
glyphname = uni2780;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,51,o),
(170,130,o),
(91,267,o),
(91,350,qs),
(91,433,o),
(170,570,o),
(307,649,o),
(389,649,qs),
(472,649,o),
(609,570,o),
(688,433,o),
(688,350,qs),
(688,267,o),
(609,130,o),
(472,51,o),
(389,51,qs)
);
},
{
closed = 1;
nodes = (
(517,176,l),
(517,239,l),
(437,239,l),
(437,533,l),
(398,533,l),
(280,491,l),
(280,434,l),
(368,452,l),
(368,239,l),
(277,239,l),
(277,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
36 35 34 3 4 5 1 76 0 5 2 4 2 5 4 128 6 1 4 0 7 3 4 7 104 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78 16 16 0 0 42 41 40 39 38 37 33 32 16 31 16 30 24 22 0 15 0 14 38 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,46,o),
(168,128,o),
(86,267,o),
(86,350,qs),
(86,433,o),
(168,572,o),
(307,654,o),
(389,654,qs),
(472,654,o),
(611,572,o),
(693,433,o),
(693,350,qs),
(693,267,o),
(611,128,o),
(472,46,o),
(389,46,qs)
);
},
{
closed = 1;
nodes = (
(515,176,l),
(515,231,l),
(434,231,l),
(434,533,l),
(399,533,l),
(279,489,l),
(279,439,l),
(372,460,l),
(372,231,l),
(276,231,l),
(276,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
36 35 34 3 4 5 1 76 0 5 2 4 2 5 4 128 6 1 4 0 7 3 4 7 104 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78 16 16 0 0 42 41 40 39 38 37 33 32 16 31 16 30 24 22 0 15 0 14 38 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,56,o),
(173,133,o),
(96,267,o),
(96,350,qs),
(96,433,o),
(173,567,o),
(307,644,o),
(389,644,qs),
(472,644,o),
(606,567,o),
(683,433,o),
(683,350,qs),
(683,267,o),
(606,133,o),
(472,56,o),
(389,56,qs)
);
},
{
closed = 1;
nodes = (
(519,176,l),
(519,246,l),
(439,246,l),
(439,533,l),
(397,533,l),
(281,492,l),
(281,429,l),
(364,444,l),
(364,246,l),
(277,246,l),
(277,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
36 35 34 3 4 5 1 76 0 5 2 4 2 5 4 128 6 1 4 0 7 3 4 7 104 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78 16 16 0 0 42 41 40 39 38 37 33 32 16 31 16 30 24 22 0 15 0 14 38 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,53,o),
(171,131,o),
(93,267,o),
(93,350,qs),
(93,433,o),
(171,569,o),
(307,647,o),
(389,647,qs),
(472,647,o),
(608,569,o),
(686,433,o),
(686,350,qs),
(686,267,o),
(608,131,o),
(472,53,o),
(389,53,qs)
);
},
{
closed = 1;
nodes = (
(518,176,l),
(518,241,l),
(437,241,l),
(437,533,l),
(398,533,l),
(280,491,l),
(280,432,l),
(367,449,l),
(367,241,l),
(277,241,l),
(277,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
36 35 34 3 4 5 1 76 0 5 2 4 2 5 4 128 6 1 4 0 7 3 4 7 104 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78 16 16 0 0 42 41 40 39 38 37 33 32 16 31 16 30 24 22 0 15 0 14 38 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2780;
unicode = 10112;
},
{
glyphname = uni2781;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(306,51,o),
(170,131,o),
(91,268,o),
(91,350,qs),
(91,432,o),
(170,569,o),
(306,649,o),
(389,649,qs),
(472,649,o),
(609,570,o),
(688,433,o),
(688,350,qs),
(688,267,o),
(609,130,o),
(472,51,o),
(389,51,qs)
);
},
{
closed = 1;
nodes = (
(516,176,l),
(516,239,l),
(366,239,l),
(426,300,ls),
(465,337,o),
(509,397,o),
(509,432,qs),
(509,480,o),
(446,540,o),
(391,540,qs),
(336,540,o),
(267,479,o),
(266,420,q),
(337,420,l),
(337,445,o),
(363,478,o),
(389,478,qs),
(412,478,o),
(438,453,o),
(438,430,qs),
(438,415,o),
(417,382,o),
(385,349,o),
(372,336,qs),
(266,227,l),
(266,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
32 1 8 7 1 76 0 5 4 7 4 5 7 128 0 6 0 4 5 6 4 105 0 7 0 8 3 7 8 103 0 2 2 0 97 0 0 0 39 77 10 1 3 3 1 97 9 1 1 1 40 1 78 16 16 0 0 57 56 55 54 48 46 44 43 41 39 16 31 16 30 24 22 0 15 0 14 38 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(653,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(653,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(306,46,o),
(166,128,o),
(85,268,o),
(85,350,qs),
(85,432,o),
(166,572,o),
(306,654,o),
(389,654,qs),
(471,654,o),
(610,572,o),
(692,433,o),
(692,350,qs),
(692,267,o),
(610,128,o),
(471,46,o),
(389,46,qs)
);
},
{
closed = 1;
nodes = (
(514,176,l),
(514,231,l),
(355,231,l),
(431,309,ls),
(465,341,o),
(506,399,o),
(506,432,qs),
(506,478,o),
(447,540,o),
(390,540,qs),
(335,540,o),
(269,477,o),
(268,421,q),
(332,421,l),
(332,449,o),
(361,484,o),
(389,484,qs),
(413,484,o),
(442,455,o),
(442,431,qs),
(442,416,o),
(421,382,o),
(390,349,o),
(377,336,qs),
(268,223,l),
(268,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
32 1 8 7 1 76 0 5 4 7 4 5 7 128 0 6 0 4 5 6 4 105 0 7 0 8 3 7 8 103 0 2 2 0 97 0 0 0 39 77 10 1 3 3 1 97 9 1 1 1 40 1 78 16 16 0 0 57 56 55 54 48 46 44 43 41 39 16 31 16 30 24 22 0 15 0 14 38 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,56,o),
(173,133,o),
(96,267,o),
(96,350,qs),
(96,433,o),
(173,567,o),
(307,644,o),
(389,644,qs),
(472,644,o),
(606,567,o),
(683,433,o),
(683,350,qs),
(683,267,o),
(606,133,o),
(472,56,o),
(389,56,qs)
);
},
{
closed = 1;
nodes = (
(518,176,l),
(518,246,l),
(376,246,l),
(421,290,ls),
(452,320,o),
(485,356,o),
(511,405,o),
(511,432,qs),
(511,482,o),
(445,540,o),
(391,540,qs),
(335,540,o),
(265,480,o),
(264,418,q),
(341,418,l),
(341,441,o),
(365,472,o),
(389,472,qs),
(411,472,o),
(433,449,o),
(433,428,qs),
(433,409,o),
(400,369,o),
(367,336,qs),
(264,230,l),
(264,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
32 1 8 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 4 7 4 5 114 0 6 0 4 5 6 4 105 0 7 0 8 3 7 8 103 0 2 2 0 97 0 0 0 39 77 10 1 3 3 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 5 4 7 4 5 7 128 0 6 0 4 5 6 4 105 0 7 0 8 3 7 8 103 0 2 2 0 97 0 0 0 39 77 10 1 3 3 1 97 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
16 16 0 0 57 56 55 54 47 45 43 42 40 38 16 31 16 30 24 22 0 15 0 14 38 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(306,53,o),
(170,132,o),
(92,268,o),
(92,350,qs),
(92,432,o),
(170,568,o),
(306,647,o),
(389,647,qs),
(472,647,o),
(608,569,o),
(686,433,o),
(686,350,qs),
(686,267,o),
(608,131,o),
(472,53,o),
(389,53,qs)
);
},
{
closed = 1;
nodes = (
(517,176,l),
(517,241,l),
(369,241,l),
(424,296,ls),
(465,336,o),
(509,396,o),
(509,432,qs),
(509,481,o),
(445,540,o),
(391,540,qs),
(335,540,o),
(266,479,o),
(265,419,q),
(338,419,l),
(338,443,o),
(364,476,o),
(389,476,qs),
(411,476,o),
(436,451,o),
(436,429,qs),
(436,409,o),
(402,368,o),
(370,336,qs),
(265,228,l),
(265,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
32 1 8 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 4 7 4 5 114 0 6 0 4 5 6 4 105 0 7 0 8 3 7 8 103 0 2 2 0 97 0 0 0 39 77 10 1 3 3 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 5 4 7 4 5 7 128 0 6 0 4 5 6 4 105 0 7 0 8 3 7 8 103 0 2 2 0 97 0 0 0 39 77 10 1 3 3 1 97 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
16 16 0 0 56 55 54 53 47 45 43 42 40 38 16 31 16 30 24 22 0 15 0 14 38 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2781;
unicode = 10113;
},
{
glyphname = uni2782;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,51,o),
(170,130,o),
(91,267,o),
(91,350,qs),
(91,433,o),
(170,570,o),
(307,649,o),
(389,649,qs),
(472,649,o),
(609,570,o),
(688,433,o),
(688,350,qs),
(688,267,o),
(609,130,o),
(472,51,o),
(389,51,qs)
);
},
{
closed = 1;
nodes = (
(448,158,o),
(519,225,o),
(519,279,qs),
(519,321,o),
(472,382,o),
(423,388,q),
(508,461,l),
(508,522,l),
(270,522,l),
(270,460,l),
(417,460,l),
(314,369,l),
(353,323,l),
(372,334,o),
(391,334,qs),
(415,334,o),
(449,305,o),
(449,278,qs),
(449,250,o),
(419,221,o),
(390,221,qs),
(365,221,o),
(331,251,o),
(331,279,q),
(260,279,l),
(261,220,o),
(332,158,o),
(390,158,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
52 1 7 8 53 47 2 6 7 46 1 4 6 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 6 7 4 7 6 114 0 4 5 7 4 5 126 0 8 0 7 6 8 7 103 0 5 12 1 9 3 5 9 105 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 98 10 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 4 7 6 4 128 0 4 5 7 4 5 126 0 8 0 7 6 8 7 103 0 5 12 1 9 3 5 9 105 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 98 10 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
32 32 16 16 0 0 32 59 32 58 51 50 49 48 45 43 39 37 35 34 16 31 16 30 24 22 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(306,46,o),
(167,128,o),
(85,267,o),
(85,350,qs),
(85,433,o),
(167,572,o),
(306,654,o),
(389,654,qs),
(471,654,o),
(610,572,o),
(692,433,o),
(692,350,qs),
(692,267,o),
(610,128,o),
(471,46,o),
(389,46,qs)
);
},
{
closed = 1;
nodes = (
(450,158,o),
(518,227,o),
(518,277,qs),
(518,320,o),
(466,382,o),
(415,386,q),
(506,468,l),
(506,522,l),
(272,522,l),
(272,467,l),
(425,467,l),
(317,368,l),
(353,326,l),
(372,337,o),
(391,337,qs),
(418,337,o),
(455,306,o),
(455,277,qs),
(455,249,o),
(422,214,o),
(390,214,qs),
(362,214,o),
(325,248,o),
(325,275,q),
(261,275,l),
(263,218,o),
(334,158,o),
(390,158,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
52 1 7 8 53 47 2 6 7 46 1 4 6 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 6 7 4 7 6 114 0 4 5 7 4 5 126 0 8 0 7 6 8 7 103 0 5 12 1 9 3 5 9 105 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 98 10 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 4 7 6 4 128 0 4 5 7 4 5 126 0 8 0 7 6 8 7 103 0 5 12 1 9 3 5 9 105 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 98 10 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
32 32 16 16 0 0 32 59 32 58 51 50 49 48 45 43 39 37 35 34 16 31 16 30 24 22 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,56,o),
(173,133,o),
(96,267,o),
(96,350,qs),
(96,433,o),
(173,567,o),
(307,644,o),
(389,644,qs),
(472,644,o),
(606,567,o),
(683,433,o),
(683,350,qs),
(683,267,o),
(606,133,o),
(472,56,o),
(389,56,qs)
);
},
{
closed = 1;
nodes = (
(447,158,o),
(520,223,o),
(520,280,qs),
(520,322,o),
(478,382,o),
(431,390,q),
(509,454,l),
(509,522,l),
(267,522,l),
(267,453,l),
(409,453,l),
(310,370,l),
(353,320,l),
(370,330,o),
(390,330,qs),
(411,330,o),
(443,304,o),
(443,279,qs),
(443,252,o),
(414,227,o),
(390,227,qs),
(367,227,o),
(336,254,o),
(336,283,q),
(259,283,l),
(258,222,o),
(329,158,o),
(390,158,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
52 1 7 8 53 47 2 6 7 46 1 4 6 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 7 4 7 6 114 0 4 5 5 4 112 0 8 0 7 6 8 7 103 0 5 12 1 9 3 5 9 106 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 97 10 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 6 7 4 7 6 4 128 0 4 5 5 4 112 0 8 0 7 6 8 7 103 0 5 12 1 9 3 5 9 106 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 97 10 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 4 7 6 4 128 0 4 5 7 4 5 126 0 8 0 7 6 8 7 103 0 5 12 1 9 3 5 9 106 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 97 10 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
32 32 16 16 0 0 32 59 32 58 51 50 49 48 45 43 39 37 35 34 16 31 16 30 24 22 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,53,o),
(171,131,o),
(92,267,o),
(92,350,qs),
(92,433,o),
(171,569,o),
(307,647,o),
(389,647,qs),
(472,647,o),
(608,569,o),
(686,433,o),
(686,350,qs),
(686,267,o),
(608,131,o),
(472,53,o),
(389,53,qs)
);
},
{
closed = 1;
nodes = (
(448,158,o),
(519,224,o),
(519,279,qs),
(519,322,o),
(474,382,o),
(426,389,q),
(508,459,l),
(508,522,l),
(269,522,l),
(269,458,l),
(414,458,l),
(312,369,l),
(353,322,l),
(370,332,o),
(390,332,qs),
(414,332,o),
(447,304,o),
(447,278,qs),
(447,251,o),
(417,223,o),
(390,223,qs),
(365,223,o),
(332,252,o),
(332,280,q),
(260,280,l),
(259,221,o),
(331,158,o),
(390,158,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
52 1 7 8 53 47 2 6 7 46 1 4 6 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 6 7 4 7 6 114 0 4 5 7 4 5 126 0 8 0 7 6 8 7 103 0 5 12 1 9 3 5 9 105 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 98 10 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 6 7 4 7 6 4 128 0 4 5 7 4 5 126 0 8 0 7 6 8 7 103 0 5 12 1 9 3 5 9 105 0 2 2 0 97 0 0 0 39 77 11 1 3 3 1 98 10 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
32 32 16 16 0 0 32 59 32 58 51 50 49 48 45 43 39 37 35 34 16 31 16 30 24 22 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2782;
unicode = 10114;
},
{
glyphname = uni2783;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(476,176,l),
(476,239,l),
(514,239,l),
(514,302,l),
(476,302,l),
(476,392,l),
(408,392,l),
(408,302,l),
(316,302,l),
(430,533,l),
(359,533,l),
(239,298,l),
(239,239,l),
(403,239,l),
(403,176,l)
);
},
{
closed = 1;
nodes = (
(307,51,o),
(170,130,o),
(91,267,o),
(91,350,qs),
(91,433,o),
(170,570,o),
(307,649,o),
(389,649,qs),
(472,649,o),
(609,570,o),
(688,433,o),
(688,350,qs),
(688,267,o),
(609,130,o),
(472,51,o),
(389,51,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
18 1 2 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 3 9 5 9 3 5 128 0 5 4 4 5 112 0 8 2 10 2 8 114 6 1 4 7 1 2 8 4 2 104 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 9 5 9 3 5 128 0 5 4 9 5 4 126 0 8 2 10 2 8 114 6 1 4 7 1 2 8 4 2 104 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 3 9 5 9 3 5 128 0 5 4 9 5 4 126 0 8 2 10 2 8 10 128 6 1 4 7 1 2 8 4 2 104 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
31 31 0 0 31 46 31 45 39 37 30 29 28 27 26 25 24 23 22 21 20 19 17 16 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(470,176,l),
(470,242,l),
(512,242,l),
(512,299,l),
(470,299,l),
(470,392,l),
(409,392,l),
(409,299,l),
(310,299,l),
(426,533,l),
(362,533,l),
(241,294,l),
(241,242,l),
(405,242,l),
(405,176,l)
);
},
{
closed = 1;
nodes = (
(306,46,o),
(167,128,o),
(85,267,o),
(85,350,qs),
(85,433,o),
(167,572,o),
(306,654,o),
(389,654,qs),
(471,654,o),
(610,572,o),
(692,433,o),
(692,350,qs),
(692,267,o),
(610,128,o),
(471,46,o),
(389,46,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
18 1 2 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 3 9 5 9 3 5 128 0 5 4 4 5 112 0 8 2 10 2 8 114 6 1 4 7 1 2 8 4 2 104 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 9 5 9 3 5 128 0 5 4 9 5 4 126 0 8 2 10 2 8 114 6 1 4 7 1 2 8 4 2 104 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 3 9 5 9 3 5 128 0 5 4 9 5 4 126 0 8 2 10 2 8 10 128 6 1 4 7 1 2 8 4 2 104 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
31 31 0 0 31 46 31 45 39 37 30 29 28 27 26 25 24 23 22 21 20 19 17 16 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(482,176,l),
(482,236,l),
(516,236,l),
(516,305,l),
(482,305,l),
(482,392,l),
(407,392,l),
(407,305,l),
(322,305,l),
(433,533,l),
(355,533,l),
(237,301,l),
(237,236,l),
(401,236,l),
(401,176,l)
);
},
{
closed = 1;
nodes = (
(307,56,o),
(173,133,o),
(96,267,o),
(96,350,qs),
(96,433,o),
(173,567,o),
(307,644,o),
(389,644,qs),
(472,644,o),
(606,567,o),
(683,433,o),
(683,350,qs),
(683,267,o),
(606,133,o),
(472,56,o),
(389,56,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
18 1 2 4 1 76 0 3 9 5 9 3 5 128 6 1 4 7 1 2 8 4 2 104 0 5 0 8 10 5 8 103 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78 31 31 0 0 31 46 31 45 39 37 30 29 28 27 26 25 24 23 22 21 20 19 17 16 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(478,176,l),
(478,238,l),
(515,238,l),
(515,303,l),
(478,303,l),
(478,392,l),
(408,392,l),
(408,303,l),
(318,303,l),
(431,533,l),
(357,533,l),
(238,299,l),
(238,238,l),
(402,238,l),
(402,176,l)
);
},
{
closed = 1;
nodes = (
(307,53,o),
(171,131,o),
(92,267,o),
(92,350,qs),
(92,433,o),
(171,569,o),
(307,647,o),
(389,647,qs),
(472,647,o),
(608,569,o),
(686,433,o),
(686,350,qs),
(686,267,o),
(608,131,o),
(472,53,o),
(389,53,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
18 1 2 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 3 9 5 9 3 5 128 0 5 4 4 5 112 0 8 2 10 2 8 114 6 1 4 7 1 2 8 4 2 104 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 9 5 9 3 5 128 0 5 4 9 5 4 126 0 8 2 10 2 8 114 6 1 4 7 1 2 8 4 2 104 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 3 9 5 9 3 5 128 0 5 4 9 5 4 126 0 8 2 10 2 8 10 128 6 1 4 7 1 2 8 4 2 104 0 9 9 0 97 0 0 0 39 77 12 1 10 10 1 97 11 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
31 31 0 0 31 46 31 45 39 37 30 29 28 27 26 25 24 23 22 21 20 19 17 16 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2783;
unicode = 10115;
},
{
glyphname = uni2784;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,51,o),
(170,130,o),
(91,267,o),
(91,350,qs),
(91,433,o),
(170,570,o),
(307,649,o),
(389,649,qs),
(472,649,o),
(609,570,o),
(688,433,o),
(688,350,qs),
(688,267,o),
(609,130,o),
(472,51,o),
(389,51,qs)
);
},
{
closed = 1;
nodes = (
(449,160,o),
(521,233,o),
(521,291,qs),
(521,343,o),
(462,413,o),
(406,413,qs),
(385,413,o),
(347,400,o),
(335,386,q),
(350,461,l),
(498,461,l),
(498,524,l),
(295,524,l),
(265,317,l),
(335,317,l),
(342,334,o),
(374,354,o),
(394,354,qs),
(420,354,o),
(451,318,o),
(451,290,qs),
(451,262,o),
(419,223,o),
(393,223,qs),
(370,223,o),
(337,247,o),
(332,269,q),
(261,269,l),
(263,220,o),
(337,160,o),
(393,160,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 6 10 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 7 6 4 9 7 114 0 4 5 6 4 5 126 0 8 0 9 10 8 9 103 0 10 0 6 7 10 6 105 0 5 14 1 11 3 5 11 105 0 2 2 0 97 0 0 0 39 77 13 1 3 3 1 98 12 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 7 6 4 6 7 4 128 0 4 5 6 4 5 126 0 8 0 9 10 8 9 103 0 10 0 6 7 10 6 105 0 5 14 1 11 3 5 11 105 0 2 2 0 97 0 0 0 39 77 13 1 3 3 1 98 12 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
32 32 16 16 0 0 32 62 32 61 57 55 52 51 50 49 48 47 45 43 39 37 35 34 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(306,46,o),
(167,128,o),
(85,267,o),
(85,350,qs),
(85,433,o),
(167,572,o),
(306,654,o),
(389,654,qs),
(472,654,o),
(611,572,o),
(693,433,o),
(693,350,qs),
(693,267,o),
(611,128,o),
(472,46,o),
(389,46,qs)
);
},
{
closed = 1;
nodes = (
(449,160,o),
(520,232,o),
(520,290,qs),
(520,343,o),
(459,413,o),
(404,413,qs),
(383,413,o),
(343,398,o),
(330,384,q),
(347,467,l),
(496,467,l),
(496,524,l),
(297,524,l),
(267,320,l),
(330,320,l),
(338,338,o),
(373,359,o),
(394,359,qs),
(423,359,o),
(457,320,o),
(457,289,qs),
(457,259,o),
(421,216,o),
(393,216,qs),
(367,216,o),
(331,243,o),
(326,267,q),
(262,267,l),
(264,220,o),
(338,160,o),
(393,160,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 6 10 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 7 6 4 9 7 114 0 4 5 6 4 5 126 0 8 0 9 10 8 9 103 0 10 0 6 7 10 6 105 0 5 14 1 11 3 5 11 105 0 2 2 0 97 0 0 0 39 77 13 1 3 3 1 98 12 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 7 6 4 6 7 4 128 0 4 5 6 4 5 126 0 8 0 9 10 8 9 103 0 10 0 6 7 10 6 105 0 5 14 1 11 3 5 11 105 0 2 2 0 97 0 0 0 39 77 13 1 3 3 1 98 12 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
32 32 16 16 0 0 32 62 32 61 57 55 52 51 50 49 48 47 45 43 39 37 35 34 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,56,o),
(173,133,o),
(96,267,o),
(96,350,qs),
(96,433,o),
(173,567,o),
(307,644,o),
(389,644,qs),
(472,644,o),
(606,567,o),
(683,433,o),
(683,350,qs),
(683,267,o),
(606,133,o),
(472,56,o),
(389,56,qs)
);
},
{
closed = 1;
nodes = (
(449,160,o),
(522,234,o),
(522,291,qs),
(522,341,o),
(463,413,o),
(407,413,qs),
(388,413,o),
(351,400,o),
(339,388,q),
(353,454,l),
(499,454,l),
(499,524,l),
(293,524,l),
(263,314,l),
(340,314,l),
(346,329,o),
(376,348,o),
(393,348,qs),
(417,348,o),
(445,316,o),
(445,291,qs),
(445,265,o),
(415,229,o),
(392,229,qs),
(372,229,o),
(342,251,o),
(337,270,q),
(259,270,l),
(261,218,o),
(336,160,o),
(392,160,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 6 10 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 7 6 4 9 7 114 0 4 5 6 4 5 126 0 8 0 9 10 8 9 103 0 10 0 6 7 10 6 105 0 5 14 1 11 3 5 11 105 0 2 2 0 97 0 0 0 39 77 13 1 3 3 1 98 12 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 7 6 4 6 7 4 128 0 4 5 6 4 5 126 0 8 0 9 10 8 9 103 0 10 0 6 7 10 6 105 0 5 14 1 11 3 5 11 105 0 2 2 0 97 0 0 0 39 77 13 1 3 3 1 98 12 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
32 32 16 16 0 0 32 62 32 61 57 55 52 51 50 49 48 47 45 43 39 37 35 34 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,53,o),
(171,131,o),
(92,267,o),
(92,350,qs),
(92,433,o),
(171,569,o),
(307,647,o),
(389,647,qs),
(472,647,o),
(608,569,o),
(686,433,o),
(686,350,qs),
(686,267,o),
(608,131,o),
(472,53,o),
(389,53,qs)
);
},
{
closed = 1;
nodes = (
(449,160,o),
(521,233,o),
(521,291,qs),
(521,342,o),
(462,413,o),
(406,413,qs),
(386,413,o),
(348,400,o),
(336,387,q),
(351,458,l),
(498,458,l),
(498,524,l),
(294,524,l),
(264,316,l),
(337,316,l),
(344,332,o),
(375,352,o),
(393,352,qs),
(419,352,o),
(449,317,o),
(449,290,qs),
(449,263,o),
(418,225,o),
(392,225,qs),
(371,225,o),
(338,248,o),
(333,269,q),
(260,269,l),
(262,219,o),
(336,160,o),
(392,160,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 6 10 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 7 6 4 9 7 114 0 4 5 6 4 5 126 0 8 0 9 10 8 9 103 0 10 0 6 7 10 6 105 0 5 14 1 11 3 5 11 105 0 2 2 0 97 0 0 0 39 77 13 1 3 3 1 98 12 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 7 6 4 6 7 4 128 0 4 5 6 4 5 126 0 8 0 9 10 8 9 103 0 10 0 6 7 10 6 105 0 5 14 1 11 3 5 11 105 0 2 2 0 97 0 0 0 39 77 13 1 3 3 1 98 12 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
32 32 16 16 0 0 32 62 32 61 57 55 52 51 50 49 48 47 45 43 39 37 35 34 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2784;
unicode = 10116;
},
{
glyphname = uni2785;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,51,o),
(170,130,o),
(91,267,o),
(91,350,qs),
(91,433,o),
(170,570,o),
(307,649,o),
(389,649,qs),
(472,649,o),
(609,570,o),
(688,433,o),
(688,350,qs),
(688,267,o),
(609,130,o),
(472,51,o),
(389,51,qs)
);
},
{
closed = 1;
nodes = (
(367,227,o),
(336,260,o),
(336,286,qs),
(336,310,o),
(368,342,o),
(391,342,qs),
(415,342,o),
(447,311,o),
(447,284,qs),
(447,257,o),
(414,227,o),
(392,227,qs)
);
},
{
closed = 1;
nodes = (
(450,165,o),
(516,237,o),
(516,287,qs),
(516,334,o),
(457,403,o),
(410,403,qs),
(383,403,o),
(339,377,o),
(328,357,q),
(330,476,o),
(393,476,qs),
(414,476,o),
(439,452,o),
(443,430,q),
(510,430,l),
(508,473,o),
(444,535,o),
(393,535,qs),
(323,535,o),
(256,421,o),
(256,339,qs),
(256,265,o),
(325,165,o),
(396,165,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
58 1 4 9 1 76 0 7 8 9 8 7 9 128 0 6 0 8 7 6 8 105 0 9 0 4 5 9 4 105 13 1 5 14 1 10 3 5 10 105 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 97 11 1 1 1 40 1 78 44 44 32 32 16 16 0 0 44 67 44 66 62 60 57 55 53 52 50 48 32 43 32 42 38 36 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,46,o),
(168,128,o),
(86,267,o),
(86,350,qs),
(86,433,o),
(168,572,o),
(307,654,o),
(389,654,qs),
(472,654,o),
(611,572,o),
(693,433,o),
(693,350,qs),
(693,267,o),
(611,128,o),
(472,46,o),
(389,46,qs)
);
},
{
closed = 1;
nodes = (
(365,221,o),
(330,258,o),
(330,285,qs),
(330,311,o),
(366,347,o),
(391,347,qs),
(418,347,o),
(452,311,o),
(452,284,qs),
(452,256,o),
(416,221,o),
(392,221,qs)
);
},
{
closed = 1;
nodes = (
(448,165,o),
(514,237,o),
(514,286,qs),
(514,335,o),
(453,402,o),
(406,402,qs),
(379,402,o),
(333,375,o),
(322,354,q),
(322,406,o),
(354,481,o),
(393,481,qs),
(438,481,o),
(447,432,q),
(507,432,l),
(505,473,o),
(444,535,o),
(393,535,qs),
(324,535,o),
(258,420,o),
(258,338,qs),
(258,265,o),
(324,165,o),
(395,165,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
58 1 4 9 1 76 0 7 8 9 8 7 9 128 0 6 0 8 7 6 8 105 0 9 0 4 5 9 4 105 13 1 5 14 1 10 3 5 10 105 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 97 11 1 1 1 40 1 78 44 44 32 32 16 16 0 0 44 67 44 66 62 60 56 54 53 52 50 48 32 43 32 42 38 36 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,56,o),
(173,133,o),
(96,267,o),
(96,350,qs),
(96,433,o),
(173,567,o),
(307,644,o),
(389,644,qs),
(472,644,o),
(606,567,o),
(683,433,o),
(683,350,qs),
(683,267,o),
(606,133,o),
(472,56,o),
(389,56,qs)
);
},
{
closed = 1;
nodes = (
(369,233,o),
(341,263,o),
(341,286,qs),
(341,308,o),
(369,336,o),
(390,336,qs),
(411,336,o),
(441,310,o),
(441,284,qs),
(441,259,o),
(411,233,o),
(392,233,qs)
);
},
{
closed = 1;
nodes = (
(451,165,o),
(517,237,o),
(517,287,qs),
(517,333,o),
(459,404,o),
(413,404,qs),
(387,404,o),
(345,378,o),
(334,359,q),
(335,407,o),
(359,470,o),
(393,470,qs),
(412,470,o),
(435,448,o),
(439,428,q),
(512,428,l),
(510,474,o),
(444,535,o),
(393,535,qs),
(323,535,o),
(254,422,o),
(254,340,qs),
(254,264,o),
(325,165,o),
(396,165,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
59 1 4 9 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 7 8 9 8 7 114 0 6 0 8 7 6 8 105 0 9 0 4 5 9 4 105 13 1 5 14 1 10 3 5 10 105 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 97 11 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 7 8 9 8 7 9 128 0 6 0 8 7 6 8 105 0 9 0 4 5 9 4 105 13 1 5 14 1 10 3 5 10 105 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 97 11 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
44 44 32 32 16 16 0 0 44 68 44 67 63 61 57 55 53 52 50 48 32 43 32 42 38 36 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,53,o),
(171,131,o),
(93,267,o),
(93,350,qs),
(93,433,o),
(171,569,o),
(307,647,o),
(389,647,qs),
(472,647,o),
(608,569,o),
(686,433,o),
(686,350,qs),
(686,267,o),
(608,131,o),
(472,53,o),
(389,53,qs)
);
},
{
closed = 1;
nodes = (
(367,229,o),
(337,261,o),
(337,286,qs),
(337,309,o),
(368,340,o),
(390,340,qs),
(413,340,o),
(445,310,o),
(445,284,qs),
(445,258,o),
(412,229,o),
(392,229,qs)
);
},
{
closed = 1;
nodes = (
(450,165,o),
(516,237,o),
(516,287,qs),
(516,334,o),
(457,403,o),
(411,403,qs),
(384,403,o),
(340,376,o),
(330,357,q),
(332,474,o),
(393,474,qs),
(432,474,o),
(442,429,q),
(510,429,l),
(508,473,o),
(444,535,o),
(393,535,qs),
(323,535,o),
(255,421,o),
(255,339,qs),
(255,264,o),
(324,165,o),
(396,165,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
57 1 4 9 1 76 0 7 8 9 8 7 9 128 0 6 0 8 7 6 8 105 0 9 0 4 5 9 4 105 13 1 5 14 1 10 3 5 10 105 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 97 11 1 1 1 40 1 78 44 44 32 32 16 16 0 0 44 66 44 65 61 59 56 54 53 52 50 48 32 43 32 42 38 36 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2785;
unicode = 10117;
},
{
glyphname = uni2786;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(384,167,l),
(525,473,l),
(525,524,l),
(259,524,l),
(259,463,l),
(447,463,l),
(309,167,l)
);
},
{
closed = 1;
nodes = (
(307,51,o),
(170,130,o),
(91,267,o),
(91,350,qs),
(91,433,o),
(170,570,o),
(307,649,o),
(389,649,qs),
(472,649,o),
(609,570,o),
(688,433,o),
(688,350,qs),
(688,267,o),
(609,130,o),
(472,51,o),
(389,51,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
20 1 2 3 1 76 0 4 2 6 2 4 6 128 0 3 0 2 4 3 2 103 0 5 5 0 97 0 0 0 39 77 8 1 6 6 1 97 7 1 1 1 40 1 78 23 23 0 0 23 38 23 37 31 29 22 21 19 18 17 16 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(380,167,l),
(523,478,l),
(523,524,l),
(261,524,l),
(261,469,l),
(454,469,l),
(312,167,l)
);
},
{
closed = 1;
nodes = (
(307,46,o),
(168,128,o),
(86,267,o),
(86,350,qs),
(86,433,o),
(168,572,o),
(307,654,o),
(389,654,qs),
(472,654,o),
(611,572,o),
(693,433,o),
(693,350,qs),
(693,267,o),
(611,128,o),
(472,46,o),
(389,46,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
20 1 2 3 1 76 0 4 2 6 2 4 6 128 0 3 0 2 4 3 2 103 0 5 5 0 97 0 0 0 39 77 8 1 6 6 1 97 7 1 1 1 40 1 78 23 23 0 0 23 38 23 37 31 29 22 21 19 18 17 16 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(388,167,l),
(526,468,l),
(526,524,l),
(257,524,l),
(257,456,l),
(440,456,l),
(305,167,l)
);
},
{
closed = 1;
nodes = (
(307,56,o),
(173,133,o),
(96,267,o),
(96,350,qs),
(96,433,o),
(173,567,o),
(307,644,o),
(389,644,qs),
(472,644,o),
(606,567,o),
(683,433,o),
(683,350,qs),
(683,267,o),
(606,133,o),
(472,56,o),
(389,56,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
20 1 2 3 1 76 0 4 2 6 2 4 6 128 0 3 0 2 4 3 2 103 0 5 5 0 97 0 0 0 39 77 8 1 6 6 1 97 7 1 1 1 40 1 78 23 23 0 0 23 38 23 37 31 29 22 21 19 18 17 16 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(385,167,l),
(525,471,l),
(525,524,l),
(258,524,l),
(258,460,l),
(445,460,l),
(307,167,l)
);
},
{
closed = 1;
nodes = (
(307,53,o),
(171,131,o),
(93,267,o),
(93,350,qs),
(93,433,o),
(171,569,o),
(307,647,o),
(389,647,qs),
(472,647,o),
(608,569,o),
(686,433,o),
(686,350,qs),
(686,267,o),
(608,131,o),
(472,53,o),
(389,53,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
20 1 2 3 1 76 0 4 2 6 2 4 6 128 0 3 0 2 4 3 2 103 0 5 5 0 97 0 0 0 39 77 8 1 6 6 1 97 7 1 1 1 40 1 78 23 23 0 0 23 38 23 37 31 29 22 21 19 18 17 16 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2786;
unicode = 10118;
},
{
glyphname = uni2787;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(125,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(125,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(335,226,o),
(335,278,qs),
(335,305,o),
(366,332,o),
(391,332,qs),
(416,332,o),
(445,304,o),
(445,278,qs),
(445,253,o),
(416,226,o),
(391,226,qs)
);
},
{
closed = 1;
nodes = (
(307,51,o),
(170,131,o),
(91,268,o),
(91,350,qs),
(91,433,o),
(170,570,o),
(307,649,o),
(389,649,qs),
(472,649,o),
(609,569,o),
(688,432,o),
(688,350,qs),
(688,268,o),
(609,131,o),
(472,51,o),
(389,51,qs)
);
},
{
closed = 1;
nodes = (
(443,165,o),
(516,221,o),
(516,272,qs),
(516,304,o),
(488,352,o),
(460,364,q),
(482,374,o),
(508,415,o),
(508,439,qs),
(508,485,o),
(440,535,o),
(390,535,qs),
(337,535,o),
(271,484,o),
(271,439,qs),
(271,389,o),
(320,364,q),
(292,352,o),
(263,303,o),
(263,272,qs),
(263,223,o),
(338,165,o),
(390,165,qs)
);
},
{
closed = 1;
nodes = (
(369,385,o),
(344,410,o),
(344,430,qs),
(344,477,o),
(390,477,qs),
(412,477,o),
(436,452,o),
(436,430,qs),
(436,409,o),
(412,385,o),
(390,385,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
59 48 2 2 9 1 76 0 6 0 8 9 6 8 105 14 1 9 0 2 3 9 2 105 11 1 3 13 1 7 5 3 7 105 0 4 4 0 97 0 0 0 39 77 12 1 5 5 1 97 10 1 1 1 40 1 78 66 66 43 43 27 27 16 16 0 0 66 76 66 75 72 70 43 65 43 64 54 52 27 42 27 41 35 33 16 26 16 25 22 20 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(125,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(125,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(360,220,o),
(329,249,o),
(329,276,qs),
(329,306,o),
(363,334,o),
(390,334,qs),
(417,334,o),
(450,305,o),
(450,276,qs),
(450,249,o),
(417,220,o),
(390,220,qs)
);
},
{
closed = 1;
nodes = (
(307,46,o),
(168,128,o),
(86,268,o),
(86,350,qs),
(86,432,o),
(168,572,o),
(307,654,o),
(389,654,qs),
(472,654,o),
(612,572,o),
(693,432,o),
(693,350,qs),
(693,268,o),
(612,128,o),
(472,46,o),
(389,46,qs)
);
},
{
closed = 1;
nodes = (
(441,165,o),
(514,221,o),
(514,271,qs),
(514,303,o),
(483,353,o),
(455,363,q),
(481,375,o),
(506,417,o),
(506,439,qs),
(506,482,o),
(440,535,o),
(389,535,qs),
(337,535,o),
(273,483,o),
(273,439,qs),
(273,387,o),
(324,363,q),
(296,354,o),
(264,302,o),
(264,271,qs),
(264,222,o),
(338,165,o),
(389,165,qs)
);
},
{
closed = 1;
nodes = (
(365,383,o),
(338,410,o),
(338,432,qs),
(338,482,o),
(389,482,qs),
(413,482,o),
(441,456,o),
(441,432,qs),
(441,411,o),
(416,383,o),
(389,383,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
60 49 2 2 9 1 76 0 6 0 8 9 6 8 105 14 1 9 0 2 3 9 2 105 11 1 3 13 1 7 5 3 7 105 0 4 4 0 97 0 0 0 39 77 12 1 5 5 1 97 10 1 1 1 40 1 78 67 67 44 44 28 28 16 16 0 0 67 77 67 76 73 71 44 66 44 65 55 53 28 43 28 42 36 34 16 27 16 26 22 20 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(340,231,o),
(340,280,qs),
(340,305,o),
(368,330,o),
(391,330,qs),
(414,330,o),
(440,303,o),
(440,280,qs),
(440,257,o),
(414,231,o),
(391,231,qs)
);
},
{
closed = 1;
nodes = (
(307,56,o),
(173,133,o),
(96,267,o),
(96,350,qs),
(96,433,o),
(173,567,o),
(307,644,o),
(389,644,qs),
(472,644,o),
(606,567,o),
(683,433,o),
(683,350,qs),
(683,267,o),
(606,133,o),
(472,56,o),
(389,56,qs)
);
},
{
closed = 1;
nodes = (
(444,165,o),
(518,222,o),
(518,272,qs),
(518,340,o),
(464,364,q),
(483,374,o),
(509,413,o),
(509,439,qs),
(509,487,o),
(438,535,o),
(390,535,qs),
(337,535,o),
(269,484,o),
(269,439,qs),
(269,393,o),
(315,364,q),
(261,337,o),
(261,272,qs),
(261,224,o),
(337,165,o),
(390,165,qs)
);
},
{
closed = 1;
nodes = (
(371,386,o),
(349,408,o),
(349,428,qs),
(349,471,o),
(390,471,qs),
(430,471,o),
(430,428,qs),
(430,386,o),
(390,386,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
58 47 2 2 9 1 76 0 6 0 8 9 6 8 105 14 1 9 0 2 3 9 2 105 11 1 3 13 1 7 5 3 7 105 0 4 4 0 97 0 0 0 39 77 12 1 5 5 1 97 10 1 1 1 40 1 78 64 64 43 43 27 27 16 16 0 0 64 72 64 71 68 66 43 63 43 62 53 51 27 42 27 41 35 33 16 26 16 25 22 20 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(336,227,o),
(336,279,qs),
(336,305,o),
(366,331,o),
(391,331,qs),
(415,331,o),
(443,304,o),
(443,279,qs),
(443,254,o),
(415,227,o),
(391,227,qs)
);
},
{
closed = 1;
nodes = (
(307,53,o),
(171,131,o),
(93,267,o),
(93,350,qs),
(93,433,o),
(171,569,o),
(307,647,o),
(389,647,qs),
(472,647,o),
(608,568,o),
(686,432,o),
(686,350,qs),
(686,268,o),
(608,132,o),
(472,53,o),
(389,53,qs)
);
},
{
closed = 1;
nodes = (
(443,165,o),
(517,221,o),
(517,272,qs),
(517,304,o),
(489,352,o),
(461,364,q),
(482,374,o),
(508,414,o),
(508,439,qs),
(508,485,o),
(439,535,o),
(390,535,qs),
(337,535,o),
(270,484,o),
(270,439,qs),
(270,391,o),
(318,364,q),
(290,352,o),
(262,303,o),
(262,272,qs),
(262,223,o),
(338,165,o),
(390,165,qs)
);
},
{
closed = 1;
nodes = (
(369,385,o),
(345,409,o),
(345,429,qs),
(345,475,o),
(390,475,qs),
(411,475,o),
(434,451,o),
(434,429,qs),
(434,408,o),
(411,385,o),
(390,385,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
59 48 2 2 9 1 76 0 6 0 8 9 6 8 105 14 1 9 0 2 3 9 2 105 11 1 3 13 1 7 5 3 7 105 0 4 4 0 97 0 0 0 39 77 12 1 5 5 1 97 10 1 1 1 40 1 78 66 66 43 43 27 27 16 16 0 0 66 76 66 75 72 70 43 65 43 64 54 52 27 42 27 41 35 33 16 26 16 25 22 20 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2787;
unicode = 10119;
},
{
glyphname = uni2788;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,51,o),
(170,130,o),
(91,267,o),
(91,350,qs),
(91,433,o),
(170,570,o),
(307,649,o),
(389,649,qs),
(472,649,o),
(609,570,o),
(688,433,o),
(688,350,qs),
(688,267,o),
(609,130,o),
(472,51,o),
(389,51,qs)
);
},
{
closed = 1;
nodes = (
(454,165,o),
(522,277,o),
(522,361,qs),
(522,434,o),
(455,535,o),
(382,535,qs),
(330,535,o),
(263,464,o),
(263,414,qs),
(263,378,o),
(294,325,o),
(343,297,o),
(369,297,qs),
(396,297,o),
(438,324,o),
(451,344,q),
(450,296,o),
(421,225,o),
(386,225,qs),
(346,225,o),
(335,270,q),
(269,270,l),
(271,226,o),
(333,165,o),
(385,165,qs)
);
},
{
closed = 1;
nodes = (
(363,359,o),
(332,391,o),
(332,416,qs),
(332,441,o),
(363,473,o),
(386,473,qs),
(411,473,o),
(443,440,o),
(443,415,qs),
(443,391,o),
(411,359,o),
(388,359,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
40 1 6 10 1 76 0 4 6 5 6 4 5 128 0 7 0 9 10 7 9 105 14 1 10 0 6 4 10 6 105 0 5 13 1 8 3 5 8 105 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 98 11 1 1 1 40 1 78 57 57 32 32 16 16 0 0 57 68 57 67 63 61 32 56 32 55 51 49 44 42 38 36 35 34 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(306,46,o),
(167,128,o),
(85,267,o),
(85,350,qs),
(85,433,o),
(167,572,o),
(306,654,o),
(389,654,qs),
(471,654,o),
(610,572,o),
(692,433,o),
(692,350,qs),
(692,267,o),
(610,128,o),
(471,46,o),
(389,46,qs)
);
},
{
closed = 1;
nodes = (
(454,165,o),
(521,279,o),
(521,362,qs),
(521,432,o),
(456,535,o),
(383,535,qs),
(331,535,o),
(264,463,o),
(264,414,qs),
(264,364,o),
(327,298,o),
(372,298,qs),
(401,298,o),
(445,326,o),
(457,346,q),
(456,294,o),
(424,219,o),
(386,219,qs),
(341,219,o),
(331,268,q),
(271,268,l),
(276,222,o),
(336,165,o),
(385,165,qs)
);
},
{
closed = 1;
nodes = (
(360,353,o),
(327,388,o),
(327,416,qs),
(327,443,o),
(360,479,o),
(387,479,qs),
(414,479,o),
(448,443,o),
(448,415,qs),
(448,389,o),
(414,353,o),
(388,353,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
40 1 6 10 1 76 0 4 6 5 6 4 5 128 0 7 0 9 10 7 9 105 14 1 10 0 6 4 10 6 105 0 5 13 1 8 3 5 8 105 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 98 11 1 1 1 40 1 78 56 56 32 32 16 16 0 0 56 67 56 66 62 60 32 55 32 54 50 48 44 42 38 36 35 34 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,56,o),
(173,133,o),
(96,267,o),
(96,350,qs),
(96,433,o),
(173,567,o),
(307,644,o),
(389,644,qs),
(472,644,o),
(606,567,o),
(683,433,o),
(683,350,qs),
(683,267,o),
(606,133,o),
(472,56,o),
(389,56,qs)
);
},
{
closed = 1;
nodes = (
(453,165,o),
(523,274,o),
(523,360,qs),
(523,435,o),
(455,535,o),
(381,535,qs),
(327,535,o),
(261,464,o),
(261,413,qs),
(261,374,o),
(294,321,o),
(342,296,o),
(365,296,qs),
(391,296,o),
(431,322,o),
(444,341,q),
(441,230,o),
(385,230,qs),
(349,230,o),
(339,272,q),
(266,272,l),
(266,246,o),
(294,196,o),
(348,165,o),
(384,165,qs)
);
},
{
closed = 1;
nodes = (
(365,364,o),
(336,393,o),
(336,416,qs),
(336,438,o),
(365,467,o),
(385,467,qs),
(407,467,o),
(437,437,o),
(437,414,qs),
(437,393,o),
(408,364,o),
(387,364,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
40 1 6 10 1 76 0 4 6 5 6 4 5 128 0 7 0 9 10 7 9 105 14 1 10 0 6 4 10 6 105 0 5 13 1 8 3 5 8 105 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 98 11 1 1 1 40 1 78 57 57 32 32 16 16 0 0 57 68 57 67 63 61 32 56 32 55 51 49 44 42 39 37 36 35 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(307,53,o),
(171,131,o),
(92,267,o),
(92,350,qs),
(92,433,o),
(171,569,o),
(307,647,o),
(389,647,qs),
(472,647,o),
(608,569,o),
(686,433,o),
(686,350,qs),
(686,267,o),
(608,131,o),
(472,53,o),
(389,53,qs)
);
},
{
closed = 1;
nodes = (
(453,165,o),
(522,276,o),
(522,361,qs),
(522,434,o),
(455,535,o),
(382,535,qs),
(329,535,o),
(262,463,o),
(262,413,qs),
(262,376,o),
(294,324,o),
(342,297,o),
(367,297,qs),
(394,297,o),
(436,323,o),
(448,343,q),
(446,226,o),
(385,226,qs),
(365,226,o),
(341,248,o),
(336,271,q),
(268,271,l),
(270,228,o),
(332,165,o),
(384,165,qs)
);
},
{
closed = 1;
nodes = (
(363,360,o),
(333,392,o),
(333,416,qs),
(333,440,o),
(364,471,o),
(386,471,qs),
(410,471,o),
(441,439,o),
(441,414,qs),
(441,391,o),
(410,360,o),
(387,360,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 6 10 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 4 6 5 5 4 114 0 7 0 9 10 7 9 105 14 1 10 0 6 4 10 6 105 0 5 13 1 8 3 5 8 106 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 97 11 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 4 6 5 6 4 5 128 0 7 0 9 10 7 9 105 14 1 10 0 6 4 10 6 105 0 5 13 1 8 3 5 8 106 0 2 2 0 97 0 0 0 39 77 12 1 3 3 1 97 11 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
57 57 32 32 16 16 0 0 57 68 57 67 63 61 32 56 32 55 51 49 44 42 39 37 35 34 16 31 16 30 24 22 0 15 0 14 38 15 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2788;
unicode = 10120;
},
{
glyphname = uni278A;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(276,239,l),
(368,239,l),
(368,452,l),
(280,434,l),
(280,491,l),
(398,533,l),
(436,533,l),
(436,239,l),
(517,239,l),
(517,176,l),
(276,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
23 22 21 3 2 3 1 76 4 1 2 3 5 3 2 5 128 0 3 3 0 97 0 0 0 39 77 7 1 5 5 1 97 6 1 1 1 40 1 78 16 16 0 0 16 26 16 26 25 24 20 19 18 17 0 15 0 14 38 8 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(275,231,l),
(371,231,l),
(371,460,l),
(278,439,l),
(278,489,l),
(399,533,l),
(433,533,l),
(433,231,l),
(515,231,l),
(515,176,l),
(275,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
23 22 21 3 2 3 1 76 4 1 2 3 5 3 2 5 128 0 3 3 0 97 0 0 0 39 77 7 1 5 5 1 97 6 1 1 1 40 1 78 16 16 0 0 16 26 16 26 25 24 20 19 18 17 0 15 0 14 38 8 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(277,246,l),
(364,246,l),
(364,444,l),
(281,429,l),
(281,492,l),
(397,533,l),
(439,533,l),
(439,246,l),
(519,246,l),
(519,176,l),
(277,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
23 22 21 3 2 3 1 76 4 1 2 3 5 3 2 5 128 0 3 3 0 97 0 0 0 39 77 7 1 5 5 1 97 6 1 1 1 40 1 78 16 16 0 0 16 26 16 26 25 24 20 19 18 17 0 15 0 14 38 8 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(276,241,l),
(366,241,l),
(366,449,l),
(280,432,l),
(280,491,l),
(398,533,l),
(437,533,l),
(437,241,l),
(518,241,l),
(518,176,l),
(276,176,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
23 22 21 3 2 3 1 76 4 1 2 3 5 3 2 5 128 0 3 3 0 97 0 0 0 39 77 7 1 5 5 1 97 6 1 1 1 40 1 78 16 16 0 0 16 26 16 26 25 24 20 19 18 17 0 15 0 14 38 8 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni278A;
unicode = 10122;
},
{
glyphname = uni278B;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(266,227,l),
(372,336,ls),
(385,349,o),
(417,382,o),
(438,415,o),
(438,430,qs),
(438,453,o),
(412,478,o),
(389,478,qs),
(363,478,o),
(337,445,o),
(337,420,q),
(266,420,l),
(267,479,o),
(336,540,o),
(391,540,qs),
(446,540,o),
(509,480,o),
(509,432,qs),
(509,397,o),
(465,337,o),
(426,300,qs),
(366,239,l),
(516,239,l),
(516,176,l),
(266,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 6 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 5 2 5 4 2 128 0 3 3 0 97 0 0 0 39 77 0 2 2 5 97 0 5 5 36 77 8 1 6 6 1 98 7 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 2 5 4 2 128 0 5 0 2 6 5 2 103 0 3 3 0 97 0 0 0 39 77 8 1 6 6 1 98 7 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
16 16 0 0 16 41 16 41 33 31 29 28 26 24 18 17 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(268,223,l),
(377,336,ls),
(390,349,o),
(421,382,o),
(442,416,o),
(442,431,qs),
(442,455,o),
(413,484,o),
(389,484,qs),
(361,484,o),
(332,449,o),
(332,421,q),
(268,421,l),
(269,477,o),
(335,540,o),
(390,540,qs),
(447,540,o),
(506,478,o),
(506,432,qs),
(506,399,o),
(465,341,o),
(431,309,qs),
(355,231,l),
(514,231,l),
(514,176,l),
(268,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 6 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 5 2 5 4 2 128 0 3 3 0 97 0 0 0 39 77 0 2 2 5 97 0 5 5 36 77 8 1 6 6 1 98 7 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 2 5 4 2 128 0 5 0 2 6 5 2 103 0 3 3 0 97 0 0 0 39 77 8 1 6 6 1 98 7 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
16 16 0 0 16 41 16 41 33 31 29 28 26 24 18 17 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(264,230,l),
(367,336,ls),
(400,369,o),
(433,409,o),
(433,428,qs),
(433,449,o),
(411,472,o),
(389,472,qs),
(365,472,o),
(341,441,o),
(341,418,q),
(264,418,l),
(265,480,o),
(335,540,o),
(391,540,qs),
(445,540,o),
(511,482,o),
(511,432,qs),
(511,405,o),
(485,356,o),
(452,320,o),
(421,290,qs),
(376,246,l),
(518,246,l),
(518,176,l),
(264,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 6 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 5 2 5 4 2 128 0 3 3 0 97 0 0 0 39 77 0 2 2 5 97 0 5 5 36 77 8 1 6 6 1 98 7 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 2 5 4 2 128 0 5 0 2 6 5 2 103 0 3 3 0 97 0 0 0 39 77 8 1 6 6 1 98 7 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
16 16 0 0 16 41 16 41 34 32 30 29 27 25 18 17 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(265,228,l),
(370,336,ls),
(402,368,o),
(436,409,o),
(436,429,qs),
(436,451,o),
(411,476,o),
(389,476,qs),
(364,476,o),
(338,443,o),
(338,419,q),
(265,419,l),
(266,479,o),
(335,540,o),
(391,540,qs),
(445,540,o),
(509,481,o),
(509,432,qs),
(509,396,o),
(465,336,o),
(424,296,qs),
(369,241,l),
(517,241,l),
(517,176,l),
(265,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 6 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 5 2 5 4 2 128 0 3 3 0 97 0 0 0 39 77 0 2 2 5 97 0 5 5 36 77 8 1 6 6 1 98 7 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 2 5 4 2 128 0 5 0 2 6 5 2 103 0 3 3 0 97 0 0 0 39 77 8 1 6 6 1 98 7 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
16 16 0 0 16 40 16 40 33 31 29 28 26 24 18 17 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni278B;
unicode = 10123;
},
{
glyphname = uni278C;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(332,158,o),
(261,220,o),
(260,279,q),
(331,279,l),
(331,251,o),
(365,221,o),
(390,221,qs),
(419,221,o),
(449,250,o),
(449,278,qs),
(449,305,o),
(415,334,o),
(391,334,qs),
(372,334,o),
(353,323,q),
(314,369,l),
(417,460,l),
(270,460,l),
(270,522,l),
(508,522,l),
(508,461,l),
(423,388,l),
(472,382,o),
(519,321,o),
(519,279,qs),
(519,225,o),
(448,158,o),
(390,158,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
22 1 3 2 27 21 2 4 3 28 1 6 4 3 76 0 3 0 6 5 3 6 103 0 4 0 5 7 4 5 105 0 2 2 0 97 0 0 0 39 77 9 1 7 7 1 97 8 1 1 1 40 1 78 16 16 0 0 16 43 16 42 40 39 37 35 31 29 26 25 24 23 0 15 0 14 38 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(334,158,o),
(263,218,o),
(261,275,q),
(325,275,l),
(325,248,o),
(362,214,o),
(390,214,qs),
(422,214,o),
(455,249,o),
(455,277,qs),
(455,306,o),
(418,337,o),
(391,337,qs),
(372,337,o),
(353,326,q),
(317,368,l),
(425,467,l),
(272,467,l),
(272,522,l),
(506,522,l),
(506,468,l),
(415,386,l),
(466,382,o),
(518,320,o),
(518,277,qs),
(518,227,o),
(450,158,o),
(390,158,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
22 1 3 2 27 21 2 4 3 28 1 6 4 3 76 0 3 0 6 5 3 6 103 0 4 0 5 7 4 5 105 0 2 2 0 97 0 0 0 39 77 9 1 7 7 1 97 8 1 1 1 40 1 78 16 16 0 0 16 43 16 42 40 39 37 35 31 29 26 25 24 23 0 15 0 14 38 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(329,158,o),
(258,222,o),
(259,283,q),
(336,283,l),
(336,254,o),
(367,227,o),
(390,227,qs),
(414,227,o),
(443,252,o),
(443,279,qs),
(443,304,o),
(411,330,o),
(390,330,qs),
(370,330,o),
(353,320,q),
(310,370,l),
(409,453,l),
(267,453,l),
(267,522,l),
(509,522,l),
(509,454,l),
(431,390,l),
(478,382,o),
(520,322,o),
(520,280,qs),
(520,223,o),
(447,158,o),
(390,158,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
22 1 3 2 27 21 2 4 3 28 1 6 4 3 76 0 3 0 6 5 3 6 103 0 4 0 5 7 4 5 105 0 2 2 0 97 0 0 0 39 77 9 1 7 7 1 97 8 1 1 1 40 1 78 16 16 0 0 16 43 16 42 40 39 37 35 31 29 26 25 24 23 0 15 0 14 38 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(331,158,o),
(259,221,o),
(260,280,q),
(332,280,l),
(332,252,o),
(365,223,o),
(390,223,qs),
(417,223,o),
(447,251,o),
(447,278,qs),
(447,304,o),
(414,332,o),
(390,332,qs),
(370,332,o),
(353,322,q),
(312,369,l),
(414,458,l),
(269,458,l),
(269,522,l),
(508,522,l),
(508,459,l),
(426,389,l),
(474,382,o),
(519,322,o),
(519,279,qs),
(519,224,o),
(448,158,o),
(390,158,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
22 1 3 2 27 21 2 4 3 28 1 6 4 3 76 0 3 0 6 5 3 6 103 0 4 0 5 7 4 5 105 0 2 2 0 97 0 0 0 39 77 9 1 7 7 1 97 8 1 1 1 40 1 78 16 16 0 0 16 43 16 42 40 39 37 35 31 29 26 25 24 23 0 15 0 14 38 10 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni278C;
unicode = 10124;
},
{
glyphname = uni278D;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(403,239,l),
(240,239,l),
(240,298,l),
(359,533,l),
(430,533,l),
(317,302,l),
(409,302,l),
(409,392,l),
(477,392,l),
(477,302,l),
(514,302,l),
(514,239,l),
(477,239,l),
(477,176,l),
(403,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 2 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 6 3 6 4 114 5 1 3 2 6 3 2 126 7 1 2 8 8 2 112 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 4 6 3 6 4 3 128 5 1 3 2 6 3 2 126 7 1 2 8 8 2 112 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 4 6 3 6 4 3 128 5 1 3 2 6 3 2 126 7 1 2 8 6 2 8 126 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
16 16 0 0 16 30 16 30 29 28 26 25 24 23 22 21 20 19 18 17 0 15 0 14 38 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(405,242,l),
(242,242,l),
(242,294,l),
(362,533,l),
(426,533,l),
(311,299,l),
(410,299,l),
(410,392,l),
(471,392,l),
(471,299,l),
(512,299,l),
(512,242,l),
(471,242,l),
(471,176,l),
(405,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 2 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 6 3 6 4 114 5 1 3 2 6 3 2 126 7 1 2 8 8 2 112 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 4 6 3 6 4 3 128 5 1 3 2 6 3 2 126 7 1 2 8 8 2 112 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 4 6 3 6 4 3 128 5 1 3 2 6 3 2 126 7 1 2 8 6 2 8 126 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
16 16 0 0 16 30 16 30 29 28 26 25 24 23 22 21 20 19 18 17 0 15 0 14 38 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(401,236,l),
(237,236,l),
(237,301,l),
(355,533,l),
(433,533,l),
(322,305,l),
(407,305,l),
(407,392,l),
(482,392,l),
(482,305,l),
(516,305,l),
(516,236,l),
(482,236,l),
(482,176,l),
(401,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 2 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 6 3 6 4 114 5 1 3 2 6 3 2 126 7 1 2 8 8 2 112 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 4 6 3 6 4 3 128 5 1 3 2 6 3 2 126 7 1 2 8 8 2 112 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 4 6 3 6 4 3 128 5 1 3 2 6 3 2 126 7 1 2 8 6 2 8 126 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
16 16 0 0 16 30 16 30 29 28 26 25 24 23 22 21 20 19 18 17 0 15 0 14 38 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(402,238,l),
(239,238,l),
(239,299,l),
(357,533,l),
(431,533,l),
(318,303,l),
(408,303,l),
(408,392,l),
(478,392,l),
(478,303,l),
(515,303,l),
(515,238,l),
(478,238,l),
(478,176,l),
(402,176,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 2 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 6 3 6 4 114 5 1 3 2 6 3 2 126 7 1 2 8 8 2 112 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 4 6 3 6 4 3 128 5 1 3 2 6 3 2 126 7 1 2 8 8 2 112 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 4 6 3 6 4 3 128 5 1 3 2 6 3 2 126 7 1 2 8 6 2 8 126 0 6 6 0 97 0 0 0 39 77 10 1 8 8 1 98 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
16 16 0 0 16 30 16 30 29 28 26 25 24 23 22 21 20 19 18 17 0 15 0 14 38 11 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni278D;
unicode = 10125;
},
{
glyphname = uni278E;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(125,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(125,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(337,160,o),
(263,220,o),
(261,269,q),
(332,269,l),
(337,247,o),
(370,223,o),
(393,223,qs),
(419,223,o),
(451,262,o),
(451,290,qs),
(451,318,o),
(420,354,o),
(394,354,qs),
(374,354,o),
(342,334,o),
(335,317,q),
(265,317,l),
(295,524,l),
(498,524,l),
(498,461,l),
(350,461,l),
(335,386,l),
(347,400,o),
(385,413,o),
(406,413,qs),
(462,413,o),
(521,343,o),
(521,291,qs),
(521,233,o),
(449,160,o),
(393,160,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
24 1 6 2 1 76 0 3 0 2 6 3 2 105 0 5 0 8 7 5 8 103 0 6 0 7 9 6 7 105 0 4 4 0 97 0 0 0 39 77 11 1 9 9 1 97 10 1 1 1 40 1 78 16 16 0 0 16 46 16 45 43 42 40 38 34 32 30 29 28 27 26 25 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(125,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(125,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(338,160,o),
(264,220,o),
(262,267,q),
(326,267,l),
(331,243,o),
(367,216,o),
(393,216,qs),
(421,216,o),
(457,259,o),
(457,289,qs),
(457,320,o),
(423,359,o),
(394,359,qs),
(373,359,o),
(338,338,o),
(330,320,q),
(267,320,l),
(297,524,l),
(496,524,l),
(496,467,l),
(347,467,l),
(330,384,l),
(343,398,o),
(383,413,o),
(404,413,qs),
(459,413,o),
(520,343,o),
(520,290,qs),
(520,232,o),
(449,160,o),
(393,160,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
24 1 6 2 1 76 0 3 0 2 6 3 2 105 0 5 0 8 7 5 8 103 0 6 0 7 9 6 7 105 0 4 4 0 97 0 0 0 39 77 11 1 9 9 1 97 10 1 1 1 40 1 78 16 16 0 0 16 46 16 45 43 42 40 38 34 32 30 29 28 27 26 25 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(336,160,o),
(261,218,o),
(259,270,q),
(337,270,l),
(342,251,o),
(372,229,o),
(392,229,qs),
(415,229,o),
(445,265,o),
(445,291,qs),
(445,316,o),
(417,348,o),
(393,348,qs),
(376,348,o),
(346,329,o),
(340,314,q),
(263,314,l),
(293,524,l),
(499,524,l),
(499,454,l),
(353,454,l),
(339,388,l),
(351,400,o),
(388,413,o),
(407,413,qs),
(463,413,o),
(522,341,o),
(522,291,qs),
(522,234,o),
(449,160,o),
(392,160,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
24 1 6 2 1 76 0 3 0 2 6 3 2 105 0 5 0 8 7 5 8 103 0 6 0 7 9 6 7 105 0 4 4 0 97 0 0 0 39 77 11 1 9 9 1 97 10 1 1 1 40 1 78 16 16 0 0 16 46 16 45 43 42 40 38 34 32 30 29 28 27 26 25 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(336,160,o),
(262,219,o),
(260,269,q),
(333,269,l),
(338,248,o),
(371,225,o),
(392,225,qs),
(418,225,o),
(449,263,o),
(449,290,qs),
(449,317,o),
(419,352,o),
(393,352,qs),
(375,352,o),
(344,332,o),
(337,316,q),
(264,316,l),
(294,524,l),
(498,524,l),
(498,458,l),
(351,458,l),
(336,387,l),
(348,400,o),
(386,413,o),
(406,413,qs),
(462,413,o),
(521,342,o),
(521,291,qs),
(521,233,o),
(449,160,o),
(392,160,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
24 1 6 2 1 76 0 3 0 2 6 3 2 105 0 5 0 8 7 5 8 103 0 6 0 7 9 6 7 105 0 4 4 0 97 0 0 0 39 77 11 1 9 9 1 97 10 1 1 1 40 1 78 16 16 0 0 16 46 16 45 43 42 40 38 34 32 30 29 28 27 26 25 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni278E;
unicode = 10126;
},
{
glyphname = uni278F;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(414,227,o),
(447,257,o),
(447,284,qs),
(447,311,o),
(415,342,o),
(391,342,qs),
(368,342,o),
(336,310,o),
(336,286,qs),
(336,260,o),
(367,227,o),
(392,227,qs)
);
},
{
closed = 1;
nodes = (
(325,165,o),
(256,265,o),
(256,339,qs),
(256,421,o),
(323,535,o),
(393,535,qs),
(444,535,o),
(508,473,o),
(510,430,q),
(443,430,l),
(439,452,o),
(414,476,o),
(393,476,qs),
(330,476,o),
(328,357,q),
(339,377,o),
(383,403,o),
(410,403,qs),
(457,403,o),
(516,334,o),
(516,287,qs),
(516,237,o),
(450,165,o),
(396,165,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 2 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 5 4 5 6 114 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 0 4 4 5 97 0 5 5 36 77 11 1 8 8 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 5 4 5 6 114 0 5 0 4 2 5 4 105 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 11 1 8 8 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 6 5 4 5 6 4 128 0 5 0 4 2 5 4 105 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 11 1 8 8 1 97 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
28 28 16 16 0 0 28 51 28 50 46 44 42 41 39 37 34 32 16 27 16 26 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(416,221,o),
(452,256,o),
(452,284,qs),
(452,311,o),
(418,347,o),
(391,347,qs),
(366,347,o),
(330,311,o),
(330,285,qs),
(330,258,o),
(365,221,o),
(392,221,qs)
);
},
{
closed = 1;
nodes = (
(324,165,o),
(258,265,o),
(258,338,qs),
(258,420,o),
(324,535,o),
(393,535,qs),
(444,535,o),
(505,473,o),
(507,432,q),
(447,432,l),
(438,481,o),
(393,481,qs),
(354,481,o),
(322,406,o),
(322,354,q),
(333,375,o),
(379,402,o),
(406,402,qs),
(453,402,o),
(514,335,o),
(514,286,qs),
(514,237,o),
(448,165,o),
(395,165,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 2 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 5 4 5 6 114 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 0 4 4 5 97 0 5 5 36 77 11 1 8 8 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 6 5 4 5 6 4 128 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 0 4 4 5 97 0 5 5 36 77 11 1 8 8 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 6 5 4 5 6 4 128 0 5 0 4 2 5 4 105 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 11 1 8 8 1 97 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
28 28 16 16 0 0 28 51 28 50 46 44 42 41 40 38 34 32 16 27 16 26 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(411,233,o),
(441,259,o),
(441,284,qs),
(441,310,o),
(411,336,o),
(390,336,qs),
(369,336,o),
(341,308,o),
(341,286,qs),
(341,263,o),
(369,233,o),
(392,233,qs)
);
},
{
closed = 1;
nodes = (
(325,165,o),
(254,264,o),
(254,340,qs),
(254,422,o),
(323,535,o),
(393,535,qs),
(444,535,o),
(510,474,o),
(512,428,q),
(439,428,l),
(435,448,o),
(412,470,o),
(393,470,qs),
(359,470,o),
(335,407,o),
(334,359,q),
(345,378,o),
(387,404,o),
(413,404,qs),
(459,404,o),
(517,333,o),
(517,287,qs),
(517,237,o),
(451,165,o),
(396,165,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 2 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 5 4 5 6 114 0 5 0 4 2 5 4 105 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 11 1 8 8 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 6 5 4 5 6 4 128 0 5 0 4 2 5 4 105 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 11 1 8 8 1 97 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
28 28 16 16 0 0 28 52 28 51 47 45 43 42 40 38 34 32 16 27 16 26 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(412,229,o),
(445,258,o),
(445,284,qs),
(445,310,o),
(413,340,o),
(390,340,qs),
(368,340,o),
(337,309,o),
(337,286,qs),
(337,261,o),
(367,229,o),
(392,229,qs)
);
},
{
closed = 1;
nodes = (
(324,165,o),
(255,264,o),
(255,339,qs),
(255,421,o),
(323,535,o),
(393,535,qs),
(444,535,o),
(508,473,o),
(510,429,q),
(442,429,l),
(432,474,o),
(393,474,qs),
(332,474,o),
(330,357,q),
(340,376,o),
(384,403,o),
(411,403,qs),
(457,403,o),
(516,334,o),
(516,287,qs),
(516,237,o),
(450,165,o),
(396,165,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 2 4 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 5 4 5 6 114 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 0 4 4 5 97 0 5 5 36 77 11 1 8 8 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 5 4 5 6 114 0 5 0 4 2 5 4 105 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 11 1 8 8 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 6 5 4 5 6 4 128 0 5 0 4 2 5 4 105 0 2 10 1 3 8 2 3 105 0 7 7 0 97 0 0 0 39 77 11 1 8 8 1 97 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
28 28 16 16 0 0 28 50 28 49 45 43 41 40 39 37 34 32 16 27 16 26 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni278F;
unicode = 10127;
},
{
glyphname = uni2790;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(447,463,l),
(259,463,l),
(259,524,l),
(524,524,l),
(524,473,l),
(384,167,l),
(308,167,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
17 1 3 2 1 76 0 3 2 4 2 3 4 128 0 2 2 0 97 0 0 0 39 77 6 1 4 4 1 98 5 1 1 1 40 1 78 16 16 0 0 16 22 16 22 21 20 19 18 0 15 0 14 38 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(453,469,l),
(261,469,l),
(261,524,l),
(522,524,l),
(522,478,l),
(379,167,l),
(311,167,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
17 1 3 2 1 76 0 3 2 4 2 3 4 128 0 2 2 0 97 0 0 0 39 77 6 1 4 4 1 98 5 1 1 1 40 1 78 16 16 0 0 16 22 16 22 21 20 19 18 0 15 0 14 38 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(440,456,l),
(257,456,l),
(257,524,l),
(526,524,l),
(526,468,l),
(388,167,l),
(305,167,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
17 1 3 2 1 76 0 3 2 4 2 3 4 128 0 2 2 0 97 0 0 0 39 77 6 1 4 4 1 98 5 1 1 1 40 1 78 16 16 0 0 16 22 16 22 21 20 19 18 0 15 0 14 38 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(444,460,l),
(258,460,l),
(258,524,l),
(525,524,l),
(525,471,l),
(385,167,l),
(307,167,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
17 1 3 2 1 76 0 3 2 4 2 3 4 128 0 2 2 0 97 0 0 0 39 77 6 1 4 4 1 98 5 1 1 1 40 1 78 16 16 0 0 16 22 16 22 21 20 19 18 0 15 0 14 38 7 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2790;
unicode = 10128;
},
{
glyphname = uni2791;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(338,165,o),
(263,223,o),
(263,272,qs),
(263,303,o),
(292,352,o),
(320,364,q),
(271,389,o),
(271,439,qs),
(271,484,o),
(337,535,o),
(390,535,qs),
(440,535,o),
(508,485,o),
(508,439,qs),
(508,415,o),
(482,374,o),
(460,364,q),
(488,352,o),
(516,304,o),
(516,272,qs),
(516,221,o),
(443,165,o),
(390,165,qs)
);
},
{
closed = 1;
nodes = (
(416,226,o),
(445,253,o),
(445,278,qs),
(445,304,o),
(416,332,o),
(391,332,qs),
(366,332,o),
(335,305,o),
(335,278,qs),
(335,226,o),
(391,226,qs)
);
},
{
closed = 1;
nodes = (
(412,385,o),
(436,409,o),
(436,430,qs),
(436,452,o),
(412,477,o),
(390,477,qs),
(344,477,o),
(344,430,qs),
(344,410,o),
(369,385,o),
(390,385,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
32 21 2 4 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 10 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 11 1 7 7 6 97 0 6 6 36 77 9 1 3 3 1 97 8 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 6 11 1 7 4 6 7 105 0 4 10 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
50 50 39 39 16 16 0 0 50 60 50 59 55 53 39 49 39 48 44 42 16 38 16 37 28 26 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(338,165,o),
(264,222,o),
(264,271,qs),
(264,302,o),
(296,354,o),
(324,363,q),
(273,387,o),
(273,439,qs),
(273,483,o),
(337,535,o),
(389,535,qs),
(440,535,o),
(506,482,o),
(506,439,qs),
(506,417,o),
(481,375,o),
(455,363,q),
(483,353,o),
(514,303,o),
(514,271,qs),
(514,221,o),
(441,165,o),
(389,165,qs)
);
},
{
closed = 1;
nodes = (
(417,220,o),
(450,249,o),
(450,276,qs),
(450,305,o),
(417,334,o),
(390,334,qs),
(363,334,o),
(329,306,o),
(329,276,qs),
(329,249,o),
(360,220,o),
(390,220,qs)
);
},
{
closed = 1;
nodes = (
(416,383,o),
(441,411,o),
(441,432,qs),
(441,456,o),
(413,482,o),
(389,482,qs),
(338,482,o),
(338,432,qs),
(338,410,o),
(365,383,o),
(389,383,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
32 21 2 4 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 10 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 11 1 7 7 6 97 0 6 6 36 77 9 1 3 3 1 97 8 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 6 11 1 7 4 6 7 105 0 4 10 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
51 51 39 39 16 16 0 0 51 61 51 60 56 54 39 50 39 49 45 43 16 38 16 37 28 26 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(337,165,o),
(261,224,o),
(261,272,qs),
(261,337,o),
(315,364,q),
(269,393,o),
(269,439,qs),
(269,484,o),
(337,535,o),
(390,535,qs),
(438,535,o),
(509,487,o),
(509,439,qs),
(509,413,o),
(483,374,o),
(464,364,q),
(518,340,o),
(518,272,qs),
(518,222,o),
(444,165,o),
(390,165,qs)
);
},
{
closed = 1;
nodes = (
(414,231,o),
(440,257,o),
(440,280,qs),
(440,303,o),
(414,330,o),
(391,330,qs),
(368,330,o),
(340,305,o),
(340,280,qs),
(340,231,o),
(391,231,qs)
);
},
{
closed = 1;
nodes = (
(430,386,o),
(430,428,qs),
(430,471,o),
(390,471,qs),
(349,471,o),
(349,428,qs),
(349,408,o),
(371,386,o),
(390,386,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
31 20 2 4 7 1 76 0 6 11 1 7 4 6 7 105 0 4 10 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78 48 48 37 37 16 16 0 0 48 56 48 55 53 51 37 47 37 46 42 40 16 36 16 35 27 25 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(338,165,o),
(262,223,o),
(262,272,qs),
(262,303,o),
(290,352,o),
(318,364,q),
(270,391,o),
(270,439,qs),
(270,484,o),
(337,535,o),
(390,535,qs),
(439,535,o),
(508,485,o),
(508,439,qs),
(508,414,o),
(482,374,o),
(461,364,q),
(489,352,o),
(517,304,o),
(517,272,qs),
(517,221,o),
(443,165,o),
(390,165,qs)
);
},
{
closed = 1;
nodes = (
(415,227,o),
(443,254,o),
(443,279,qs),
(443,304,o),
(415,331,o),
(391,331,qs),
(366,331,o),
(336,305,o),
(336,279,qs),
(336,227,o),
(391,227,qs)
);
},
{
closed = 1;
nodes = (
(411,385,o),
(434,408,o),
(434,429,qs),
(434,451,o),
(411,475,o),
(390,475,qs),
(345,475,o),
(345,429,qs),
(345,409,o),
(369,385,o),
(390,385,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
32 21 2 4 7 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 10 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 11 1 7 7 6 97 0 6 6 36 77 9 1 3 3 1 97 8 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 6 11 1 7 4 6 7 105 0 4 10 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 9 1 3 3 1 97 8 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
50 50 39 39 16 16 0 0 50 60 50 59 55 53 39 49 39 48 44 42 16 38 16 37 28 26 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2791;
unicode = 10129;
},
{
glyphname = uni2792;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(333,165,o),
(271,226,o),
(269,270,q),
(335,270,l),
(346,225,o),
(386,225,qs),
(421,225,o),
(450,296,o),
(451,344,q),
(438,324,o),
(396,297,o),
(369,297,qs),
(343,297,o),
(294,325,o),
(263,378,o),
(263,414,qs),
(263,464,o),
(330,535,o),
(382,535,qs),
(455,535,o),
(522,434,o),
(522,361,qs),
(522,277,o),
(454,165,o),
(385,165,qs)
);
},
{
closed = 1;
nodes = (
(411,359,o),
(443,391,o),
(443,415,qs),
(443,440,o),
(411,473,o),
(386,473,qs),
(363,473,o),
(332,441,o),
(332,416,qs),
(332,391,o),
(363,359,o),
(388,359,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 3 8 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 5 3 4 3 5 4 128 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 39 77 11 1 8 8 7 97 0 7 7 36 77 10 1 6 6 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 3 4 3 5 4 128 0 7 11 1 8 3 7 8 105 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 39 77 10 1 6 6 1 97 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
41 41 16 16 0 0 41 52 41 51 47 45 16 40 16 39 37 36 35 33 29 27 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(336,165,o),
(276,222,o),
(271,268,q),
(331,268,l),
(341,219,o),
(386,219,qs),
(424,219,o),
(456,294,o),
(457,346,q),
(445,326,o),
(401,298,o),
(372,298,qs),
(327,298,o),
(264,364,o),
(264,414,qs),
(264,463,o),
(331,535,o),
(383,535,qs),
(456,535,o),
(521,432,o),
(521,362,qs),
(521,279,o),
(454,165,o),
(385,165,qs)
);
},
{
closed = 1;
nodes = (
(414,353,o),
(448,389,o),
(448,415,qs),
(448,443,o),
(414,479,o),
(387,479,qs),
(360,479,o),
(327,443,o),
(327,416,qs),
(327,388,o),
(360,353,o),
(388,353,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 3 8 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 5 3 4 4 5 114 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 39 77 11 1 8 8 7 97 0 7 7 36 77 10 1 6 6 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 5 3 4 3 5 4 128 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 39 77 11 1 8 8 7 97 0 7 7 36 77 10 1 6 6 1 97 9 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 3 4 3 5 4 128 0 7 11 1 8 3 7 8 105 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 39 77 10 1 6 6 1 97 9 1 1 1 40 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
40 40 16 16 0 0 40 51 40 50 46 44 16 39 16 38 36 35 34 32 28 26 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(348,165,o),
(294,196,o),
(266,246,o),
(266,272,q),
(339,272,l),
(349,230,o),
(385,230,qs),
(441,230,o),
(444,341,q),
(431,322,o),
(391,296,o),
(365,296,qs),
(342,296,o),
(294,321,o),
(261,374,o),
(261,413,qs),
(261,464,o),
(327,535,o),
(381,535,qs),
(455,535,o),
(523,435,o),
(523,360,qs),
(523,274,o),
(453,165,o),
(384,165,qs)
);
},
{
closed = 1;
nodes = (
(408,364,o),
(437,393,o),
(437,414,qs),
(437,437,o),
(407,467,o),
(385,467,qs),
(365,467,o),
(336,438,o),
(336,416,qs),
(336,393,o),
(365,364,o),
(387,364,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
31 1 3 8 1 76 0 5 3 4 3 5 4 128 0 7 11 1 8 3 7 8 105 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 39 77 10 1 6 6 1 97 9 1 1 1 40 1 78 41 41 16 16 0 0 41 52 41 51 47 45 16 40 16 39 36 35 34 32 29 27 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(332,165,o),
(270,228,o),
(268,271,q),
(336,271,l),
(341,248,o),
(365,226,o),
(385,226,qs),
(446,226,o),
(448,343,q),
(436,323,o),
(394,297,o),
(367,297,qs),
(342,297,o),
(294,324,o),
(262,376,o),
(262,413,qs),
(262,463,o),
(329,535,o),
(382,535,qs),
(455,535,o),
(522,434,o),
(522,361,qs),
(522,276,o),
(453,165,o),
(384,165,qs)
);
},
{
closed = 1;
nodes = (
(410,360,o),
(441,391,o),
(441,414,qs),
(441,439,o),
(410,471,o),
(386,471,qs),
(364,471,o),
(333,440,o),
(333,416,qs),
(333,392,o),
(363,360,o),
(387,360,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
31 1 3 8 1 76 0 5 3 4 3 5 4 128 0 7 11 1 8 3 7 8 105 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 39 77 10 1 6 6 1 97 9 1 1 1 40 1 78 41 41 16 16 0 0 41 52 41 51 47 45 16 40 16 39 37 36 34 32 29 27 22 20 0 15 0 14 38 12 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2792;
unicode = 10130;
},
{
glyphname = uni24EA.solid;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(320,165,o),
(287,216,qs),
(255,264,o),
(255,350,qs),
(255,436,o),
(287,484,qs),
(320,535,o),
(390,535,qs),
(459,535,o),
(492,485,qs),
(524,435,o),
(524,350,qs),
(524,265,o),
(492,215,qs),
(459,165,o),
(390,165,qs)
);
},
{
closed = 1;
nodes = (
(420,230,o),
(435,261,qs),
(450,294,o),
(450,350,qs),
(450,408,o),
(435,439,qs),
(420,470,o),
(390,470,qs),
(359,470,o),
(344,439,qs),
(329,410,o),
(329,350,qs),
(329,291,o),
(344,261,qs),
(359,230,o),
(390,230,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
0 4 8 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 7 1 3 3 1 97 6 1 1 1 40 1 78 32 32 16 16 0 0 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(320,165,o),
(287,216,qs),
(254,266,o),
(254,350,qs),
(254,435,o),
(287,484,qs),
(320,535,o),
(389,535,qs),
(459,535,o),
(491,485,qs),
(524,436,o),
(524,350,qs),
(524,265,o),
(491,215,qs),
(459,165,o),
(389,165,qs)
);
},
{
closed = 1;
nodes = (
(424,223,o),
(440,256,qs),
(457,289,o),
(457,350,qs),
(457,411,o),
(440,444,qs),
(424,477,o),
(389,477,qs),
(355,477,o),
(338,444,qs),
(321,411,o),
(321,350,qs),
(321,289,o),
(338,256,qs),
(355,223,o),
(389,223,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 2 0 97 0 0 0 39 77 8 1 5 5 4 97 0 4 4 36 77 7 1 3 3 1 97 6 1 1 1 40 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 8 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 7 1 3 3 1 97 6 1 1 1 40 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
32 32 16 16 0 0 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(320,165,o),
(287,216,qs),
(255,264,o),
(255,350,qs),
(255,436,o),
(287,484,qs),
(320,535,o),
(390,535,qs),
(459,535,o),
(492,485,qs),
(524,435,o),
(524,350,qs),
(524,265,o),
(492,215,qs),
(459,165,o),
(390,165,qs)
);
},
{
closed = 1;
nodes = (
(417,236,o),
(430,266,qs),
(443,299,o),
(443,350,qs),
(443,402,o),
(430,434,qs),
(417,463,o),
(390,463,qs),
(362,463,o),
(349,434,qs),
(336,405,o),
(336,350,qs),
(336,295,o),
(349,266,qs),
(363,236,o),
(390,236,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
0 4 8 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 7 1 3 3 1 97 6 1 1 1 40 1 78 32 32 16 16 0 0 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,-12,o),
(654,85,o),
(751,252,o),
(751,350,qs),
(751,448,o),
(654,615,o),
(487,712,o),
(389,712,qs),
(291,712,o),
(124,615,o),
(27,448,o),
(27,350,qs),
(27,252,o),
(124,85,o),
(291,-12,o),
(389,-12,qs)
);
},
{
closed = 1;
nodes = (
(320,165,o),
(287,216,qs),
(255,264,o),
(255,350,qs),
(255,436,o),
(287,484,qs),
(320,535,o),
(390,535,qs),
(459,535,o),
(492,485,qs),
(524,435,o),
(524,350,qs),
(524,265,o),
(492,215,qs),
(459,165,o),
(390,165,qs)
);
},
{
closed = 1;
nodes = (
(420,232,o),
(433,263,qs),
(448,295,o),
(448,350,qs),
(448,406,o),
(433,437,qs),
(420,468,o),
(390,468,qs),
(360,468,o),
(345,437,qs),
(331,408,o),
(331,350,qs),
(331,292,o),
(345,263,qs),
(360,232,o),
(390,232,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
0 4 8 1 5 3 4 5 105 0 2 2 0 97 0 0 0 39 77 7 1 3 3 1 97 6 1 1 1 40 1 78 32 32 16 16 0 0 32 47 32 46 40 38 16 31 16 30 24 22 0 15 0 14 38 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni24EA.solid;
},
{
glyphname = zero.dnom;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,-5,o),
(295,94,o),
(295,177,qs),
(295,260,o),
(231,358,o),
(162,358,qs),
(93,358,o),
(29,258,o),
(29,177,qs),
(29,96,o),
(93,-5,o),
(162,-5,qs)
);
},
{
closed = 1;
nodes = (
(133,59,o),
(100,116,o),
(100,177,qs),
(100,237,o),
(133,295,o),
(162,295,qs),
(195,295,o),
(224,229,o),
(224,177,qs),
(224,125,o),
(195,59,o),
(162,59,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 0 0 2 3 0 2 105 5 1 3 3 1 97 4 1 1 1 34 1 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 324;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(231,-5,o),
(294,93,o),
(294,177,qs),
(294,260,o),
(230,358,o),
(162,358,qs),
(94,358,o),
(30,259,o),
(30,177,qs),
(30,95,o),
(94,-5,o),
(162,-5,qs)
);
},
{
closed = 1;
nodes = (
(128,52,o),
(95,118,o),
(95,177,qs),
(95,236,o),
(128,301,o),
(162,301,qs),
(196,301,o),
(229,236,o),
(229,177,qs),
(229,118,o),
(196,52,o),
(162,52,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 0 0 2 3 0 2 105 5 1 3 3 1 97 4 1 1 1 34 1 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 324;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(232,-5,o),
(296,95,o),
(296,177,qs),
(296,258,o),
(232,358,o),
(162,358,qs),
(93,358,o),
(28,257,o),
(28,177,qs),
(28,96,o),
(92,-5,o),
(162,-5,qs)
);
},
{
closed = 1;
nodes = (
(138,65,o),
(105,114,o),
(105,177,qs),
(105,239,o),
(138,288,o),
(162,288,qs),
(218,288,o),
(218,177,qs),
(218,65,o),
(162,65,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 0 0 2 3 0 2 105 5 1 3 3 1 97 4 1 1 1 34 1 78 12 12 0 0 12 21 12 20 16 14 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 324;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(231,-5,o),
(295,94,o),
(295,177,qs),
(295,259,o),
(231,358,o),
(162,358,qs),
(93,358,o),
(29,258,o),
(29,177,qs),
(29,95,o),
(93,-5,o),
(162,-5,qs)
);
},
{
closed = 1;
nodes = (
(102,61,o),
(102,177,qs),
(102,238,o),
(135,292,o),
(162,292,qs),
(194,292,o),
(222,227,o),
(222,177,qs),
(222,127,o),
(194,61,o),
(162,61,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 0 0 2 3 0 2 105 5 1 3 3 1 97 4 1 1 1 34 1 78 12 12 0 0 12 22 12 21 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 324;
}
);
note = zero.dnom;
},
{
glyphname = one.dnom;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(283,0,l),
(283,62,l),
(201,62,l),
(201,353,l),
(164,353,l),
(44,309,l),
(44,254,l),
(134,274,l),
(134,62,l),
(41,62,l),
(41,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 3 2 3 0 1 1 76 0 1 0 1 133 2 1 0 0 3 96 0 3 3 34 3 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(281,0,l),
(281,55,l),
(198,55,l),
(198,353,l),
(164,353,l),
(45,309,l),
(45,260,l),
(137,281,l),
(137,55,l),
(42,55,l),
(42,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 3 2 3 0 1 1 76 0 1 0 1 133 2 1 0 0 3 96 0 3 3 34 3 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(284,0,l),
(284,68,l),
(204,68,l),
(204,353,l),
(163,353,l),
(43,309,l),
(43,247,l),
(130,267,l),
(130,68,l),
(40,68,l),
(40,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 3 2 3 0 1 1 76 0 1 0 1 133 2 1 0 0 3 96 0 3 3 34 3 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(283,0,l),
(283,64,l),
(202,64,l),
(202,353,l),
(163,353,l),
(44,309,l),
(44,251,l),
(132,272,l),
(132,64,l),
(41,64,l),
(41,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 3 2 3 0 1 1 76 0 1 0 1 133 2 1 0 0 3 96 0 3 3 34 3 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 316;
}
);
note = one.dnom;
},
{
glyphname = two.dnom;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,0,l),
(277,0,l),
(277,62,l),
(128,62,l),
(192,126,ls),
(233,168,o),
(268,218,o),
(268,251,qs),
(268,300,o),
(208,358,o),
(153,358,qs),
(99,358,o),
(33,297,o),
(32,241,q),
(101,241,l),
(101,265,o),
(127,298,o),
(152,298,qs),
(174,298,o),
(199,272,o),
(199,250,qs),
(199,231,o),
(168,194,o),
(128,152,qs),
(32,51,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
24 1 4 3 1 76 0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 4 95 0 4 4 34 4 78 17 22 34 18 37 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 311;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(33,0,l),
(275,0,l),
(275,55,l),
(118,55,l),
(186,123,ls),
(220,158,o),
(246,189,o),
(267,230,o),
(267,253,qs),
(267,299,o),
(209,358,o),
(153,358,qs),
(99,358,o),
(34,298,o),
(33,242,q),
(96,242,l),
(96,268,o),
(125,304,o),
(151,304,qs),
(175,304,o),
(204,275,o),
(204,252,qs),
(204,232,o),
(172,191,o),
(136,155,qs),
(121,139,l),
(33,47,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
26 1 4 3 1 76 0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 4 95 0 4 4 34 4 78 17 23 34 18 38 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 310;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(30,0,l),
(278,0,l),
(278,68,l),
(138,68,l),
(197,128,ls),
(235,166,o),
(269,217,o),
(269,249,qs),
(269,301,o),
(206,358,o),
(153,358,qs),
(98,358,o),
(32,295,o),
(31,239,q),
(106,239,l),
(106,260,o),
(128,291,o),
(152,291,qs),
(171,291,o),
(194,268,o),
(194,248,qs),
(194,232,o),
(166,196,o),
(135,164,qs),
(30,55,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
24 1 4 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 0 3 0 1 114 0 2 0 0 1 2 0 105 0 3 3 4 95 0 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 4 95 0 4 4 34 4 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
17 22 34 18 37 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 311;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(31,0,l),
(277,0,l),
(277,64,l),
(131,64,l),
(193,126,ls),
(233,167,o),
(268,218,o),
(268,250,qs),
(268,300,o),
(207,358,o),
(153,358,qs),
(99,358,o),
(33,296,o),
(32,240,q),
(103,240,l),
(103,263,o),
(127,295,o),
(152,295,qs),
(173,295,o),
(197,270,o),
(197,249,qs),
(197,232,o),
(167,194,o),
(130,156,qs),
(97,121,l),
(31,52,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
25 1 4 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 0 3 0 1 114 0 2 0 0 1 2 0 105 0 3 3 4 95 0 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 4 95 0 4 4 34 4 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
17 22 34 18 38 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 311;
}
);
note = two.dnom;
},
{
glyphname = three.dnom;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(286,59,o),
(286,114,qs),
(286,156,o),
(237,214,o),
(193,221,q),
(275,296,l),
(275,353,l),
(43,353,l),
(43,292,l),
(184,292,l),
(84,202,l),
(123,156,l),
(143,167,o),
(160,167,qs),
(186,167,o),
(218,139,o),
(218,113,qs),
(218,86,o),
(187,57,o),
(160,57,qs),
(133,57,o),
(101,87,o),
(101,111,q),
(32,111,l),
(33,56,o),
(103,-5,o),
(160,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 3 4 21 15 2 2 3 14 1 0 2 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 0 3 2 114 0 0 1 3 0 1 126 0 4 0 3 2 4 3 103 0 1 1 5 97 6 1 5 5 34 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 4 0 3 2 4 3 103 0 1 1 5 97 6 1 5 5 34 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 26 17 19 36 34 18 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(286,57,o),
(286,112,qs),
(286,155,o),
(234,215,o),
(186,219,q),
(275,300,l),
(275,353,l),
(45,353,l),
(45,298,l),
(196,298,l),
(88,202,l),
(124,160,l),
(142,170,o),
(161,170,qs),
(190,170,o),
(224,140,o),
(224,112,qs),
(224,82,o),
(190,50,o),
(161,50,qs),
(131,50,o),
(97,83,o),
(97,110,q),
(34,110,l),
(36,55,o),
(104,-5,o),
(161,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 3 4 21 15 2 2 3 14 1 0 2 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 0 3 2 114 0 0 1 3 0 1 126 0 4 0 3 2 4 3 103 0 1 1 5 97 6 1 5 5 34 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 4 0 3 2 4 3 103 0 1 1 5 97 6 1 5 5 34 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 26 17 19 36 34 18 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 320;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(286,60,o),
(286,115,qs),
(286,156,o),
(239,214,o),
(199,222,q),
(275,291,l),
(275,353,l),
(40,353,l),
(40,285,l),
(172,285,l),
(79,201,l),
(122,151,l),
(142,163,o),
(159,163,qs),
(182,163,o),
(212,137,o),
(212,114,qs),
(212,89,o),
(184,63,o),
(159,63,qs),
(134,63,o),
(105,90,o),
(105,112,q),
(30,112,l),
(30,56,o),
(101,-5,o),
(159,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 3 4 21 15 2 2 3 14 1 0 2 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 4 0 3 2 4 3 103 0 1 1 5 98 6 1 5 5 34 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 4 0 3 2 4 3 103 0 1 1 5 98 6 1 5 5 34 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 4 0 3 2 4 3 103 0 1 1 5 98 6 1 5 5 34 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 26 17 19 36 34 18 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(286,59,o),
(286,114,qs),
(286,155,o),
(237,214,o),
(195,221,q),
(275,294,l),
(275,353,l),
(42,353,l),
(42,289,l),
(180,289,l),
(82,201,l),
(123,154,l),
(141,165,o),
(160,165,qs),
(184,165,o),
(216,138,o),
(216,113,qs),
(216,87,o),
(186,59,o),
(160,59,qs),
(133,59,o),
(102,88,o),
(102,111,q),
(31,111,l),
(32,56,o),
(102,-5,o),
(160,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 3 4 21 15 2 2 3 14 1 0 2 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 0 3 2 114 0 0 1 3 0 1 126 0 4 0 3 2 4 3 103 0 1 1 5 97 6 1 5 5 34 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 4 0 3 2 4 3 103 0 1 1 5 97 6 1 5 5 34 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 26 17 19 36 34 18 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 317;
}
);
note = three.dnom;
},
{
glyphname = four.dnom;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,0,l),
(249,65,l),
(289,65,l),
(289,127,l),
(249,127,l),
(249,217,l),
(182,217,l),
(182,127,l),
(97,127,l),
(209,353,l),
(138,353,l),
(20,120,l),
(20,65,l),
(178,65,l),
(178,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
2 1 0 2 1 76 0 1 3 1 133 4 1 2 5 1 0 6 2 0 104 0 3 3 6 95 0 6 6 34 6 78 17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(247,0,l),
(247,66,l),
(288,66,l),
(288,122,l),
(247,122,l),
(247,213,l),
(187,213,l),
(187,122,l),
(90,122,l),
(204,353,l),
(140,353,l),
(21,117,l),
(21,66,l),
(183,66,l),
(183,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 0 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 3 1 133 0 3 2 2 3 112 4 1 2 5 1 0 6 2 0 104 0 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 1 3 1 133 0 3 2 3 133 4 1 2 5 1 0 6 2 0 104 0 6 6 34 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(250,0,l),
(250,63,l),
(289,63,l),
(289,132,l),
(250,132,l),
(250,220,l),
(177,220,l),
(177,132,l),
(104,132,l),
(213,353,l),
(135,353,l),
(19,122,l),
(19,63,l),
(173,63,l),
(173,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
2 1 0 2 1 76 0 1 3 1 133 4 1 2 5 1 0 6 2 0 104 0 3 3 6 95 0 6 6 34 6 78 17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(249,0,l),
(249,64,l),
(289,64,l),
(289,129,l),
(249,129,l),
(249,218,l),
(180,218,l),
(180,129,l),
(99,129,l),
(210,353,l),
(137,353,l),
(20,120,l),
(20,64,l),
(176,64,l),
(176,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
2 1 0 2 1 76 0 1 3 1 133 4 1 2 5 1 0 6 2 0 104 0 3 3 6 95 0 6 6 34 6 78 17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 304;
}
);
note = four.dnom;
},
{
glyphname = five.dnom;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,-5,o),
(283,67,o),
(283,123,qs),
(283,175,o),
(221,245,o),
(168,245,qs),
(128,245,o),
(102,224,q),
(115,291,l),
(260,291,l),
(260,353,l),
(62,353,l),
(31,149,l),
(99,149,l),
(107,167,o),
(137,187,o),
(157,187,qs),
(183,187,o),
(215,152,o),
(215,123,qs),
(215,94,o),
(182,57,o),
(156,57,qs),
(133,57,o),
(101,82,o),
(96,103,q),
(27,103,l),
(30,55,o),
(99,-5,o),
(156,-5,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 0 5 3 114 0 0 1 2 0 1 126 0 4 0 5 6 4 5 103 0 6 0 2 3 6 2 105 0 1 1 7 97 8 1 7 7 34 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 4 0 5 6 4 5 103 0 6 0 2 3 6 2 105 0 1 1 7 97 8 1 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 29 0 28 34 17 17 18 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(211,-5,o),
(282,66,o),
(282,122,qs),
(282,173,o),
(221,243,o),
(168,243,qs),
(145,243,o),
(107,228,o),
(95,215,q),
(111,297,l),
(258,297,l),
(258,353,l),
(63,353,l),
(33,152,l),
(95,152,l),
(102,169,o),
(135,191,o),
(157,191,qs),
(185,191,o),
(220,153,o),
(220,122,qs),
(220,91,o),
(184,50,o),
(156,50,qs),
(131,50,o),
(96,78,o),
(91,100,q),
(28,100,l),
(30,57,o),
(98,-5,o),
(156,-5,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 0 5 3 114 0 0 1 2 0 1 126 0 4 0 5 6 4 5 103 0 6 0 2 3 6 2 105 0 1 1 7 97 8 1 7 7 34 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 4 0 5 6 4 5 103 0 6 0 2 3 6 2 105 0 1 1 7 97 8 1 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 30 0 29 35 17 17 18 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(212,-5,o),
(284,68,o),
(284,124,qs),
(284,177,o),
(222,247,o),
(167,247,qs),
(133,247,o),
(109,232,q),
(119,284,l),
(261,284,l),
(261,353,l),
(60,353,l),
(29,145,l),
(102,145,l),
(118,182,o),
(157,182,qs),
(180,182,o),
(210,150,o),
(210,124,qs),
(210,97,o),
(179,63,o),
(156,63,qs),
(135,63,o),
(105,86,o),
(101,105,q),
(25,105,l),
(29,53,o),
(99,-5,o),
(156,-5,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 0 5 3 114 0 0 1 2 0 1 126 0 4 0 5 6 4 5 103 0 6 0 2 3 6 2 105 0 1 1 7 97 8 1 7 7 34 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 4 0 5 6 4 5 103 0 6 0 2 3 6 2 105 0 1 1 7 97 8 1 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 28 0 27 34 17 17 17 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(212,-5,o),
(283,67,o),
(283,123,qs),
(283,176,o),
(221,246,o),
(167,246,qs),
(131,246,o),
(104,226,q),
(116,288,l),
(260,288,l),
(260,353,l),
(61,353,l),
(30,147,l),
(100,147,l),
(108,165,o),
(137,185,o),
(157,185,qs),
(182,185,o),
(213,151,o),
(213,123,qs),
(213,95,o),
(181,59,o),
(156,59,qs),
(134,59,o),
(102,83,o),
(98,103,q),
(26,103,l),
(30,54,o),
(99,-5,o),
(156,-5,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 0 5 3 114 0 0 1 2 0 1 126 0 4 0 5 6 4 5 103 0 6 0 2 3 6 2 105 0 1 1 7 97 8 1 7 7 34 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 4 0 5 6 4 5 103 0 6 0 2 3 6 2 105 0 1 1 7 97 8 1 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 29 0 28 34 17 17 18 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 312;
}
);
note = five.dnom;
},
{
glyphname = six.dnom;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(283,66,o),
(283,115,qs),
(283,166,o),
(220,231,o),
(176,231,qs),
(153,231,o),
(112,210,o),
(99,192,q),
(101,242,o),
(133,299,o),
(163,299,qs),
(203,299,o),
(211,256,q),
(277,256,l),
(272,302,o),
(211,358,o),
(163,358,qs),
(95,358,o),
(29,245,o),
(29,165,qs),
(29,91,o),
(98,-5,o),
(165,-5,qs)
);
},
{
closed = 1;
nodes = (
(138,57,o),
(107,89,o),
(107,114,qs),
(107,137,o),
(138,170,o),
(161,170,qs),
(185,170,o),
(215,138,o),
(215,113,qs),
(215,88,o),
(185,57,o),
(162,57,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
14 1 5 3 1 76 0 1 2 3 2 1 3 128 0 0 0 2 1 0 2 105 0 3 0 5 6 3 5 105 8 1 6 6 4 97 7 1 4 4 34 4 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 33 18 36 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(216,-5,o),
(282,66,o),
(282,114,qs),
(282,160,o),
(222,228,o),
(176,228,qs),
(149,228,o),
(104,201,o),
(93,180,q),
(94,242,o),
(130,305,o),
(162,305,qs),
(206,305,o),
(216,257,q),
(275,257,l),
(270,302,o),
(209,358,o),
(163,358,qs),
(95,358,o),
(30,246,o),
(30,165,qs),
(30,91,o),
(98,-5,o),
(165,-5,qs)
);
},
{
closed = 1;
nodes = (
(135,50,o),
(101,85,o),
(101,112,qs),
(101,138,o),
(135,173,o),
(160,173,qs),
(187,173,o),
(220,139,o),
(220,111,qs),
(220,85,o),
(187,50,o),
(161,50,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
14 1 5 3 1 76 0 1 2 3 2 1 3 128 0 0 0 2 1 0 2 105 0 3 0 5 6 3 5 105 8 1 6 6 4 97 7 1 4 4 34 4 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 33 18 36 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(218,-5,o),
(284,66,o),
(284,116,qs),
(284,171,o),
(218,233,o),
(175,233,qs),
(156,233,o),
(119,218,o),
(105,204,q),
(113,292,o),
(163,292,qs),
(198,292,o),
(206,254,q),
(278,254,l),
(273,301,o),
(212,358,o),
(163,358,qs),
(94,358,o),
(28,244,o),
(28,165,qs),
(28,92,o),
(97,-5,o),
(165,-5,qs)
);
},
{
closed = 1;
nodes = (
(140,63,o),
(112,92,o),
(112,115,qs),
(112,137,o),
(140,166,o),
(161,166,qs),
(183,166,o),
(210,137,o),
(210,114,qs),
(210,92,o),
(183,63,o),
(162,63,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
13 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 3 2 1 114 0 0 0 2 1 0 2 105 0 3 0 5 6 3 5 105 8 1 6 6 4 97 7 1 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 1 2 3 2 1 3 128 0 0 0 2 1 0 2 105 0 3 0 5 6 3 5 105 8 1 6 6 4 97 7 1 4 4 34 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
23 23 0 0 23 34 23 33 29 27 0 22 0 21 35 33 18 36 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(283,66,o),
(283,115,qs),
(283,168,o),
(219,231,o),
(175,231,qs),
(154,231,o),
(114,212,o),
(101,196,q),
(103,242,o),
(134,296,o),
(163,296,qs),
(201,296,o),
(209,255,q),
(277,255,l),
(272,301,o),
(211,358,o),
(163,358,qs),
(95,358,o),
(29,245,o),
(29,165,qs),
(29,91,o),
(97,-5,o),
(165,-5,qs)
);
},
{
closed = 1;
nodes = (
(139,59,o),
(108,90,o),
(108,114,qs),
(108,137,o),
(138,168,o),
(161,168,qs),
(184,168,o),
(213,138,o),
(213,113,qs),
(213,89,o),
(185,59,o),
(162,59,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
14 1 5 3 1 76 0 1 2 3 2 1 3 128 0 0 0 2 1 0 2 105 0 3 0 5 6 3 5 105 8 1 6 6 4 97 7 1 4 4 34 4 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 33 18 36 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 312;
}
);
note = six.dnom;
},
{
glyphname = seven.dnom;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,0,l),
(289,303,l),
(289,353,l),
(29,353,l),
(29,291,l),
(213,291,l),
(76,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
4 1 0 1 1 76 0 1 0 0 2 1 0 103 0 2 2 34 2 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(147,0,l),
(288,307,l),
(288,353,l),
(30,353,l),
(30,298,l),
(220,298,l),
(80,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
4 1 0 1 1 76 0 1 0 0 2 1 0 103 0 2 2 34 2 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(152,-1,l),
(290,299,l),
(290,352,l),
(28,352,l),
(28,284,l),
(205,284,l),
(71,-1,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
4 1 0 1 1 76 0 1 0 0 2 1 0 103 0 2 2 34 2 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(150,-1,l),
(289,302,l),
(289,352,l),
(29,352,l),
(29,289,l),
(210,289,l),
(74,-1,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
4 1 0 1 1 76 0 1 0 0 2 1 0 103 0 2 2 34 2 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = seven.dnom;
},
{
glyphname = eight.dnom;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,-5,o),
(276,52,o),
(276,101,qs),
(276,131,o),
(249,178,o),
(224,190,q),
(244,201,o),
(268,240,o),
(268,263,qs),
(268,307,o),
(202,358,o),
(153,358,qs),
(104,358,o),
(37,307,o),
(37,263,qs),
(37,240,o),
(60,201,o),
(81,190,q),
(56,177,o),
(29,131,o),
(29,101,qs),
(29,54,o),
(100,-5,o),
(153,-5,qs)
);
},
{
closed = 1;
nodes = (
(126,56,o),
(98,82,o),
(98,106,qs),
(98,131,o),
(127,158,o),
(153,158,qs),
(179,158,o),
(207,131,o),
(207,106,qs),
(207,82,o),
(178,56,o),
(153,56,qs)
);
},
{
closed = 1;
nodes = (
(132,212,o),
(107,235,o),
(107,255,qs),
(107,277,o),
(131,300,o),
(153,300,qs),
(174,300,o),
(199,276,o),
(199,255,qs),
(199,236,o),
(173,212,o),
(153,212,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
17 5 2 2 5 1 76 0 0 0 4 5 0 4 105 8 1 5 0 2 3 5 2 105 7 1 3 3 1 97 6 1 1 1 34 1 78 36 36 24 24 0 0 36 47 36 46 42 40 24 35 24 34 30 28 0 23 0 22 42 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 305;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(203,-5,o),
(275,51,o),
(275,99,qs),
(275,130,o),
(245,179,o),
(217,190,q),
(240,200,o),
(267,240,o),
(267,264,qs),
(267,307,o),
(201,358,o),
(153,358,qs),
(105,358,o),
(39,307,o),
(39,264,qs),
(39,240,o),
(65,200,o),
(88,190,q),
(60,178,o),
(30,130,o),
(30,99,qs),
(30,52,o),
(101,-5,o),
(153,-5,qs)
);
},
{
closed = 1;
nodes = (
(124,49,o),
(93,79,o),
(93,104,qs),
(93,131,o),
(126,161,o),
(154,161,qs),
(181,161,o),
(213,131,o),
(213,104,qs),
(213,78,o),
(181,49,o),
(154,49,qs)
);
},
{
closed = 1;
nodes = (
(130,209,o),
(102,235,o),
(102,257,qs),
(102,280,o),
(129,306,o),
(153,306,qs),
(176,306,o),
(204,280,o),
(204,257,qs),
(204,235,o),
(176,209,o),
(153,209,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
17 5 2 2 5 1 76 0 0 0 4 5 0 4 105 8 1 5 0 2 3 5 2 105 7 1 3 3 1 97 6 1 1 1 34 1 78 36 36 24 24 0 0 36 47 36 46 42 40 24 35 24 34 30 28 0 23 0 22 42 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 305;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(204,-5,o),
(277,53,o),
(277,102,qs),
(277,130,o),
(253,177,o),
(230,189,q),
(248,201,o),
(269,239,o),
(269,261,qs),
(269,306,o),
(202,358,o),
(152,358,qs),
(102,358,o),
(35,306,o),
(35,261,qs),
(35,216,o),
(74,189,q),
(52,176,o),
(27,131,o),
(27,102,qs),
(27,55,o),
(97,-5,o),
(152,-5,qs)
);
},
{
closed = 1;
nodes = (
(129,62,o),
(103,85,o),
(103,107,qs),
(103,129,o),
(129,154,o),
(152,154,qs),
(176,154,o),
(201,130,o),
(201,107,qs),
(201,85,o),
(174,62,o),
(152,62,qs)
);
},
{
closed = 1;
nodes = (
(133,215,o),
(111,236,o),
(111,253,qs),
(111,272,o),
(132,293,o),
(152,293,qs),
(171,293,o),
(193,272,o),
(193,253,qs),
(193,236,o),
(171,215,o),
(152,215,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
16 5 2 2 5 1 76 0 0 0 4 5 0 4 105 8 1 5 0 2 3 5 2 105 7 1 3 3 1 97 6 1 1 1 34 1 78 35 35 23 23 0 0 35 46 35 45 41 39 23 34 23 33 29 27 0 22 0 21 41 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(203,-5,o),
(276,52,o),
(276,101,qs),
(276,130,o),
(251,177,o),
(226,189,q),
(245,200,o),
(268,239,o),
(268,262,qs),
(268,307,o),
(201,358,o),
(152,358,qs),
(103,358,o),
(36,307,o),
(36,262,qs),
(36,239,o),
(59,201,o),
(79,189,q),
(55,177,o),
(28,131,o),
(28,101,qs),
(28,54,o),
(98,-5,o),
(152,-5,qs)
);
},
{
closed = 1;
nodes = (
(127,58,o),
(100,83,o),
(100,106,qs),
(100,130,o),
(128,156,o),
(153,156,qs),
(178,156,o),
(205,130,o),
(205,106,qs),
(205,83,o),
(177,58,o),
(153,58,qs)
);
},
{
closed = 1;
nodes = (
(132,213,o),
(108,235,o),
(108,254,qs),
(108,275,o),
(131,297,o),
(152,297,qs),
(173,297,o),
(197,274,o),
(197,254,qs),
(197,235,o),
(172,213,o),
(152,213,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
17 5 2 2 5 1 76 0 0 0 4 5 0 4 105 8 1 5 0 2 3 5 2 105 7 1 3 3 1 97 6 1 1 1 34 1 78 36 36 24 24 0 0 36 47 36 46 42 40 24 35 24 34 30 28 0 23 0 22 42 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 304;
}
);
note = eight.dnom;
},
{
glyphname = nine.dnom;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(284,108,o),
(284,188,qs),
(284,262,o),
(215,358,o),
(148,358,qs),
(96,358,o),
(29,287,o),
(29,238,qs),
(29,191,o),
(91,123,o),
(137,123,qs),
(160,123,o),
(201,144,o),
(214,161,q),
(212,111,o),
(180,55,o),
(150,55,qs),
(110,55,o),
(102,99,q),
(36,99,l),
(41,52,o),
(102,-5,o),
(150,-5,qs)
);
},
{
closed = 1;
nodes = (
(128,184,o),
(98,215,o),
(98,241,qs),
(98,265,o),
(128,297,o),
(151,297,qs),
(175,297,o),
(206,265,o),
(206,240,qs),
(206,216,o),
(175,184,o),
(152,184,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
8 1 2 6 1 76 0 0 2 1 2 0 1 128 0 3 0 5 6 3 5 105 8 1 6 0 2 0 6 2 105 0 1 1 4 97 7 1 4 4 34 4 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 36 33 18 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 313;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(282,107,o),
(282,188,qs),
(282,262,o),
(214,358,o),
(147,358,qs),
(96,358,o),
(30,287,o),
(30,239,qs),
(30,193,o),
(90,125,o),
(136,125,qs),
(163,125,o),
(208,152,o),
(219,173,q),
(218,111,o),
(182,48,o),
(150,48,qs),
(106,48,o),
(96,96,q),
(37,96,l),
(42,51,o),
(103,-5,o),
(149,-5,qs)
);
},
{
closed = 1;
nodes = (
(125,180,o),
(92,214,o),
(92,242,qs),
(92,268,o),
(125,303,o),
(151,303,qs),
(177,303,o),
(211,268,o),
(211,241,qs),
(211,215,o),
(177,180,o),
(152,180,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
8 1 2 6 1 76 0 0 2 1 2 0 1 128 0 3 0 5 6 3 5 105 8 1 6 0 2 0 6 2 105 0 1 1 4 97 7 1 4 4 34 4 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 36 33 18 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(285,108,o),
(285,188,qs),
(285,261,o),
(216,358,o),
(148,358,qs),
(95,358,o),
(28,287,o),
(28,237,qs),
(28,188,o),
(91,120,o),
(138,120,qs),
(157,120,o),
(194,135,o),
(208,149,q),
(200,61,o),
(150,61,qs),
(114,61,o),
(107,101,q),
(35,101,l),
(40,53,o),
(100,-5,o),
(150,-5,qs)
);
},
{
closed = 1;
nodes = (
(130,187,o),
(103,216,o),
(103,239,qs),
(103,261,o),
(130,290,o),
(151,290,qs),
(173,290,o),
(201,261,o),
(201,238,qs),
(201,216,o),
(173,187,o),
(152,187,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 2 1 1 0 114 0 3 0 5 6 3 5 105 8 1 6 0 2 0 6 2 105 0 1 1 4 98 7 1 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 2 1 2 0 1 128 0 3 0 5 6 3 5 105 8 1 6 0 2 0 6 2 105 0 1 1 4 98 7 1 4 4 34 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
23 23 0 0 23 34 23 33 29 27 0 22 0 21 36 35 33 18 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 313;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(284,108,o),
(284,188,qs),
(284,262,o),
(215,358,o),
(148,358,qs),
(96,358,o),
(29,287,o),
(29,238,qs),
(29,190,o),
(90,122,o),
(137,122,qs),
(159,122,o),
(199,141,o),
(212,157,q),
(210,111,o),
(179,57,o),
(150,57,qs),
(112,57,o),
(103,99,q),
(36,99,l),
(41,52,o),
(101,-5,o),
(150,-5,qs)
);
},
{
closed = 1;
nodes = (
(129,185,o),
(99,215,o),
(99,240,qs),
(99,264,o),
(128,294,o),
(151,294,qs),
(174,294,o),
(204,263,o),
(204,239,qs),
(204,216,o),
(174,185,o),
(152,185,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
8 1 2 6 1 76 0 0 2 1 2 0 1 128 0 3 0 5 6 3 5 105 8 1 6 0 2 0 6 2 105 0 1 1 4 97 7 1 4 4 34 4 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 36 33 18 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = nine.dnom;
},
{
glyphname = zero.numr;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,342,o),
(295,441,o),
(295,524,qs),
(295,607,o),
(231,705,o),
(162,705,qs),
(93,705,o),
(29,605,o),
(29,524,qs),
(29,443,o),
(93,342,o),
(162,342,qs)
);
},
{
closed = 1;
nodes = (
(133,406,o),
(100,463,o),
(100,524,qs),
(100,584,o),
(133,642,o),
(162,642,qs),
(195,642,o),
(224,576,o),
(224,524,qs),
(224,472,o),
(195,406,o),
(162,406,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 3 4 1 1 3 1 101 0 2 2 0 97 0 0 0 33 2 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 324;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(231,342,o),
(294,440,o),
(294,524,qs),
(294,607,o),
(230,705,o),
(162,705,qs),
(94,705,o),
(30,606,o),
(30,524,qs),
(30,442,o),
(94,342,o),
(162,342,qs)
);
},
{
closed = 1;
nodes = (
(128,399,o),
(95,465,o),
(95,524,qs),
(95,583,o),
(128,648,o),
(162,648,qs),
(196,648,o),
(229,583,o),
(229,524,qs),
(229,465,o),
(196,399,o),
(162,399,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 3 4 1 1 3 1 101 0 2 2 0 97 0 0 0 33 2 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 324;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(232,342,o),
(296,442,o),
(296,524,qs),
(296,605,o),
(232,705,o),
(162,705,qs),
(93,705,o),
(28,604,o),
(28,524,qs),
(28,443,o),
(92,342,o),
(162,342,qs)
);
},
{
closed = 1;
nodes = (
(138,412,o),
(105,461,o),
(105,524,qs),
(105,586,o),
(138,635,o),
(162,635,qs),
(218,635,o),
(218,524,qs),
(218,412,o),
(162,412,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 3 4 1 1 3 1 101 0 2 2 0 97 0 0 0 33 2 78 12 12 0 0 12 21 12 20 16 14 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 324;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(231,342,o),
(295,441,o),
(295,524,qs),
(295,606,o),
(231,705,o),
(162,705,qs),
(93,705,o),
(29,605,o),
(29,524,qs),
(29,442,o),
(93,342,o),
(162,342,qs)
);
},
{
closed = 1;
nodes = (
(102,408,o),
(102,524,qs),
(102,585,o),
(135,639,o),
(162,639,qs),
(194,639,o),
(222,574,o),
(222,524,qs),
(222,474,o),
(194,408,o),
(162,408,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 3 4 1 1 3 1 101 0 2 2 0 97 0 0 0 33 2 78 12 12 0 0 12 22 12 21 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 324;
}
);
note = zero.numr;
},
{
glyphname = one.numr;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(283,347,l),
(283,409,l),
(201,409,l),
(201,700,l),
(164,700,l),
(44,656,l),
(44,601,l),
(134,621,l),
(134,409,l),
(41,409,l),
(41,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
4 3 2 3 0 1 1 76 2 1 0 0 3 0 3 100 0 1 1 33 1 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(281,347,l),
(281,402,l),
(198,402,l),
(198,700,l),
(164,700,l),
(45,656,l),
(45,607,l),
(137,628,l),
(137,402,l),
(42,402,l),
(42,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
4 3 2 3 0 1 1 76 2 1 0 0 3 0 3 100 0 1 1 33 1 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(284,347,l),
(284,415,l),
(204,415,l),
(204,700,l),
(163,700,l),
(43,656,l),
(43,594,l),
(130,614,l),
(130,415,l),
(40,415,l),
(40,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
4 3 2 3 0 1 1 76 2 1 0 0 3 0 3 100 0 1 1 33 1 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(283,347,l),
(283,411,l),
(202,411,l),
(202,700,l),
(163,700,l),
(44,656,l),
(44,598,l),
(132,619,l),
(132,411,l),
(41,411,l),
(41,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
4 3 2 3 0 1 1 76 2 1 0 0 3 0 3 100 0 1 1 33 1 78 17 17 20 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 316;
}
);
note = one.numr;
},
{
glyphname = two.numr;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,347,l),
(277,347,l),
(277,409,l),
(128,409,l),
(192,473,ls),
(233,515,o),
(268,565,o),
(268,598,qs),
(268,647,o),
(208,705,o),
(153,705,qs),
(99,705,o),
(33,644,o),
(32,588,q),
(101,588,l),
(101,612,o),
(127,645,o),
(152,645,qs),
(174,645,o),
(199,619,o),
(199,597,qs),
(199,578,o),
(168,541,o),
(128,499,qs),
(32,398,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
24 1 4 3 1 76 0 1 0 3 0 1 3 128 0 3 0 4 3 4 99 0 0 0 2 97 0 2 2 33 0 78 17 22 34 18 37 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 311;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(33,347,l),
(275,347,l),
(275,402,l),
(118,402,l),
(186,470,ls),
(220,505,o),
(246,536,o),
(267,577,o),
(267,600,qs),
(267,646,o),
(209,705,o),
(153,705,qs),
(99,705,o),
(34,645,o),
(33,589,q),
(96,589,l),
(96,615,o),
(125,651,o),
(151,651,qs),
(175,651,o),
(204,622,o),
(204,599,qs),
(204,579,o),
(172,538,o),
(136,502,qs),
(121,486,l),
(33,394,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
26 1 4 3 1 76 0 1 0 3 0 1 3 128 0 3 0 4 3 4 99 0 0 0 2 97 0 2 2 33 0 78 17 23 34 18 38 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 310;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(30,347,l),
(278,347,l),
(278,415,l),
(138,415,l),
(197,475,ls),
(235,513,o),
(269,564,o),
(269,596,qs),
(269,648,o),
(206,705,o),
(153,705,qs),
(98,705,o),
(32,642,o),
(31,586,q),
(106,586,l),
(106,607,o),
(128,638,o),
(152,638,qs),
(171,638,o),
(194,615,o),
(194,595,qs),
(194,579,o),
(166,543,o),
(135,511,qs),
(30,402,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
24 1 4 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 1 0 3 0 1 114 0 3 0 4 3 4 99 0 0 0 2 97 0 2 2 33 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 1 0 3 0 1 3 128 0 3 0 4 3 4 99 0 0 0 2 97 0 2 2 33 0 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
17 22 34 18 37 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 311;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(31,347,l),
(277,347,l),
(277,411,l),
(131,411,l),
(193,473,ls),
(233,514,o),
(268,565,o),
(268,597,qs),
(268,647,o),
(207,705,o),
(153,705,qs),
(99,705,o),
(33,643,o),
(32,587,q),
(103,587,l),
(103,610,o),
(127,642,o),
(152,642,qs),
(173,642,o),
(197,617,o),
(197,596,qs),
(197,579,o),
(167,541,o),
(130,503,qs),
(97,468,l),
(31,399,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
25 1 4 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 1 0 3 0 1 114 0 3 0 4 3 4 99 0 0 0 2 97 0 2 2 33 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 1 0 3 0 1 3 128 0 3 0 4 3 4 99 0 0 0 2 97 0 2 2 33 0 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
17 22 34 18 38 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 311;
}
);
note = two.numr;
},
{
glyphname = three.numr;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(286,406,o),
(286,461,qs),
(286,503,o),
(237,561,o),
(193,568,q),
(275,643,l),
(275,700,l),
(43,700,l),
(43,639,l),
(184,639,l),
(84,549,l),
(123,503,l),
(143,514,o),
(160,514,qs),
(186,514,o),
(218,486,o),
(218,460,qs),
(218,433,o),
(187,404,o),
(160,404,qs),
(133,404,o),
(101,434,o),
(101,458,q),
(32,458,l),
(33,403,o),
(103,342,o),
(160,342,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 3 4 21 15 2 2 3 14 1 0 2 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 3 0 3 2 114 0 0 1 3 0 1 126 0 1 6 1 5 1 5 101 0 3 3 4 95 0 4 4 33 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 1 6 1 5 1 5 101 0 3 3 4 95 0 4 4 33 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 26 17 19 36 34 18 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(286,404,o),
(286,459,qs),
(286,502,o),
(234,562,o),
(186,566,q),
(275,647,l),
(275,700,l),
(45,700,l),
(45,645,l),
(196,645,l),
(88,549,l),
(124,507,l),
(142,517,o),
(161,517,qs),
(190,517,o),
(224,487,o),
(224,459,qs),
(224,429,o),
(190,397,o),
(161,397,qs),
(131,397,o),
(97,430,o),
(97,457,q),
(34,457,l),
(36,402,o),
(104,342,o),
(161,342,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 3 4 21 15 2 2 3 14 1 0 2 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 3 0 3 2 114 0 0 1 3 0 1 126 0 1 6 1 5 1 5 101 0 3 3 4 95 0 4 4 33 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 1 6 1 5 1 5 101 0 3 3 4 95 0 4 4 33 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 26 17 19 36 34 18 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 320;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(286,407,o),
(286,462,qs),
(286,503,o),
(239,561,o),
(199,569,q),
(275,638,l),
(275,700,l),
(40,700,l),
(40,632,l),
(172,632,l),
(79,548,l),
(122,498,l),
(142,510,o),
(159,510,qs),
(182,510,o),
(212,484,o),
(212,461,qs),
(212,436,o),
(184,410,o),
(159,410,qs),
(134,410,o),
(105,437,o),
(105,459,q),
(30,459,l),
(30,403,o),
(101,342,o),
(159,342,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 3 4 21 15 2 2 3 14 1 0 2 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 1 6 1 5 1 5 102 0 3 3 4 95 0 4 4 33 3 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 1 6 1 5 1 5 102 0 3 3 4 95 0 4 4 33 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 1 6 1 5 1 5 102 0 3 3 4 95 0 4 4 33 3 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 26 17 19 36 34 18 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(286,406,o),
(286,461,qs),
(286,502,o),
(237,561,o),
(195,568,q),
(275,641,l),
(275,700,l),
(42,700,l),
(42,636,l),
(180,636,l),
(82,548,l),
(123,501,l),
(141,512,o),
(160,512,qs),
(184,512,o),
(216,485,o),
(216,460,qs),
(216,434,o),
(186,406,o),
(160,406,qs),
(133,406,o),
(102,435,o),
(102,458,q),
(31,458,l),
(32,403,o),
(102,342,o),
(160,342,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 3 4 21 15 2 2 3 14 1 0 2 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 3 0 3 2 114 0 0 1 3 0 1 126 0 1 6 1 5 1 5 101 0 3 3 4 95 0 4 4 33 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 1 6 1 5 1 5 101 0 3 3 4 95 0 4 4 33 3 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 26 17 19 36 34 18 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 317;
}
);
note = three.numr;
},
{
glyphname = four.numr;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,347,l),
(249,412,l),
(289,412,l),
(289,474,l),
(249,474,l),
(249,564,l),
(182,564,l),
(182,474,l),
(97,474,l),
(209,700,l),
(138,700,l),
(20,467,l),
(20,412,l),
(178,412,l),
(178,347,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 0 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 6 3 6 99 0 1 1 33 77 5 1 0 0 2 95 4 1 2 2 36 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
4 1 2 5 1 0 6 2 0 104 0 3 0 6 3 6 99 0 1 1 33 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(247,347,l),
(247,413,l),
(288,413,l),
(288,469,l),
(247,469,l),
(247,560,l),
(187,560,l),
(187,469,l),
(90,469,l),
(204,700,l),
(140,700,l),
(21,464,l),
(21,413,l),
(183,413,l),
(183,347,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 0 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 2 3 114 0 6 0 0 6 113 4 1 2 5 1 0 6 2 0 104 0 1 1 33 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 3 1 2 1 3 2 128 0 6 0 0 6 113 4 1 2 5 1 0 6 2 0 104 0 1 1 33 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 0 6 0 6 134 4 1 2 5 1 0 6 2 0 104 0 1 1 33 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(250,347,l),
(250,410,l),
(289,410,l),
(289,479,l),
(250,479,l),
(250,567,l),
(177,567,l),
(177,479,l),
(104,479,l),
(213,700,l),
(135,700,l),
(19,469,l),
(19,410,l),
(173,410,l),
(173,347,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 0 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 6 3 6 99 0 1 1 33 77 5 1 0 0 2 95 4 1 2 2 36 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
4 1 2 5 1 0 6 2 0 104 0 3 0 6 3 6 99 0 1 1 33 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(249,347,l),
(249,411,l),
(289,411,l),
(289,476,l),
(249,476,l),
(249,565,l),
(180,565,l),
(180,476,l),
(99,476,l),
(210,700,l),
(137,700,l),
(20,467,l),
(20,411,l),
(176,411,l),
(176,347,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 0 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 6 3 6 99 0 1 1 33 77 5 1 0 0 2 95 4 1 2 2 36 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
4 1 2 5 1 0 6 2 0 104 0 3 0 6 3 6 99 0 1 1 33 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 8 29
CALL[ ]	/* CallFunction */";
};
width = 304;
}
);
note = four.numr;
},
{
glyphname = five.numr;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,342,o),
(283,414,o),
(283,470,qs),
(283,522,o),
(221,592,o),
(168,592,qs),
(128,592,o),
(102,571,q),
(115,638,l),
(260,638,l),
(260,700,l),
(62,700,l),
(31,496,l),
(99,496,l),
(107,514,o),
(137,534,o),
(157,534,qs),
(183,534,o),
(215,499,o),
(215,470,qs),
(215,441,o),
(182,404,o),
(156,404,qs),
(133,404,o),
(101,429,o),
(96,450,q),
(27,450,l),
(30,402,o),
(99,342,o),
(156,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 2 0 5 3 114 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 1 8 1 7 1 7 101 0 5 5 4 95 0 4 4 33 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 1 8 1 7 1 7 101 0 5 5 4 95 0 4 4 33 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 29 0 28 34 17 17 18 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(211,342,o),
(282,413,o),
(282,469,qs),
(282,520,o),
(221,590,o),
(168,590,qs),
(145,590,o),
(107,575,o),
(95,562,q),
(111,644,l),
(258,644,l),
(258,700,l),
(63,700,l),
(33,499,l),
(95,499,l),
(102,516,o),
(135,538,o),
(157,538,qs),
(185,538,o),
(220,500,o),
(220,469,qs),
(220,438,o),
(184,397,o),
(156,397,qs),
(131,397,o),
(96,425,o),
(91,447,q),
(28,447,l),
(30,404,o),
(98,342,o),
(156,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 2 0 5 3 114 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 1 8 1 7 1 7 101 0 5 5 4 95 0 4 4 33 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 1 8 1 7 1 7 101 0 5 5 4 95 0 4 4 33 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 30 0 29 35 17 17 18 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(212,342,o),
(284,415,o),
(284,471,qs),
(284,524,o),
(222,594,o),
(167,594,qs),
(133,594,o),
(109,579,q),
(119,631,l),
(261,631,l),
(261,700,l),
(60,700,l),
(29,492,l),
(102,492,l),
(118,529,o),
(157,529,qs),
(180,529,o),
(210,497,o),
(210,471,qs),
(210,444,o),
(179,410,o),
(156,410,qs),
(135,410,o),
(105,433,o),
(101,452,q),
(25,452,l),
(29,400,o),
(99,342,o),
(156,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 2 0 5 3 114 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 1 8 1 7 1 7 101 0 5 5 4 95 0 4 4 33 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 1 8 1 7 1 7 101 0 5 5 4 95 0 4 4 33 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 28 0 27 34 17 17 17 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(212,342,o),
(283,414,o),
(283,470,qs),
(283,523,o),
(221,593,o),
(167,593,qs),
(131,593,o),
(104,573,q),
(116,635,l),
(260,635,l),
(260,700,l),
(61,700,l),
(30,494,l),
(100,494,l),
(108,512,o),
(137,532,o),
(157,532,qs),
(182,532,o),
(213,498,o),
(213,470,qs),
(213,442,o),
(181,406,o),
(156,406,qs),
(134,406,o),
(102,430,o),
(98,450,q),
(26,450,l),
(30,401,o),
(99,342,o),
(156,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 2 0 5 3 114 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 1 8 1 7 1 7 101 0 5 5 4 95 0 4 4 33 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 1 8 1 7 1 7 101 0 5 5 4 95 0 4 4 33 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 29 0 28 34 17 17 18 36 34 18 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 312;
}
);
note = five.numr;
},
{
glyphname = six.numr;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(283,413,o),
(283,462,qs),
(283,513,o),
(220,578,o),
(176,578,qs),
(153,578,o),
(112,557,o),
(99,539,q),
(101,589,o),
(133,646,o),
(163,646,qs),
(203,646,o),
(211,603,q),
(277,603,l),
(272,649,o),
(211,705,o),
(163,705,qs),
(95,705,o),
(29,592,o),
(29,512,qs),
(29,438,o),
(98,342,o),
(165,342,qs)
);
},
{
closed = 1;
nodes = (
(138,404,o),
(107,436,o),
(107,461,qs),
(107,484,o),
(138,517,o),
(161,517,qs),
(185,517,o),
(215,485,o),
(215,460,qs),
(215,435,o),
(185,404,o),
(162,404,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
14 1 5 3 1 76 0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 8 1 6 7 1 4 6 4 101 0 2 2 0 97 0 0 0 33 2 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 33 18 36 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(216,342,o),
(282,413,o),
(282,461,qs),
(282,507,o),
(222,575,o),
(176,575,qs),
(149,575,o),
(104,548,o),
(93,527,q),
(94,589,o),
(130,652,o),
(162,652,qs),
(206,652,o),
(216,604,q),
(275,604,l),
(270,649,o),
(209,705,o),
(163,705,qs),
(95,705,o),
(30,593,o),
(30,512,qs),
(30,438,o),
(98,342,o),
(165,342,qs)
);
},
{
closed = 1;
nodes = (
(135,397,o),
(101,432,o),
(101,459,qs),
(101,485,o),
(135,520,o),
(160,520,qs),
(187,520,o),
(220,486,o),
(220,458,qs),
(220,432,o),
(187,397,o),
(161,397,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
14 1 5 3 1 76 0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 8 1 6 7 1 4 6 4 101 0 2 2 0 97 0 0 0 33 2 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 33 18 36 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(218,342,o),
(284,413,o),
(284,463,qs),
(284,518,o),
(218,580,o),
(175,580,qs),
(156,580,o),
(119,565,o),
(105,551,q),
(113,639,o),
(163,639,qs),
(198,639,o),
(206,601,q),
(278,601,l),
(273,648,o),
(212,705,o),
(163,705,qs),
(94,705,o),
(28,591,o),
(28,512,qs),
(28,439,o),
(97,342,o),
(165,342,qs)
);
},
{
closed = 1;
nodes = (
(140,410,o),
(112,439,o),
(112,462,qs),
(112,484,o),
(140,513,o),
(161,513,qs),
(183,513,o),
(210,484,o),
(210,461,qs),
(210,439,o),
(183,410,o),
(162,410,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
13 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 3 2 1 114 0 3 0 5 6 3 5 105 8 1 6 7 1 4 6 4 101 0 2 2 0 97 0 0 0 33 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 8 1 6 7 1 4 6 4 101 0 2 2 0 97 0 0 0 33 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
23 23 0 0 23 34 23 33 29 27 0 22 0 21 35 33 18 36 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(283,413,o),
(283,462,qs),
(283,515,o),
(219,578,o),
(175,578,qs),
(154,578,o),
(114,559,o),
(101,543,q),
(103,589,o),
(134,643,o),
(163,643,qs),
(201,643,o),
(209,602,q),
(277,602,l),
(272,648,o),
(211,705,o),
(163,705,qs),
(95,705,o),
(29,592,o),
(29,512,qs),
(29,438,o),
(97,342,o),
(165,342,qs)
);
},
{
closed = 1;
nodes = (
(139,406,o),
(108,437,o),
(108,461,qs),
(108,484,o),
(138,515,o),
(161,515,qs),
(184,515,o),
(213,485,o),
(213,460,qs),
(213,436,o),
(185,406,o),
(162,406,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
14 1 5 3 1 76 0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 8 1 6 7 1 4 6 4 101 0 2 2 0 97 0 0 0 33 2 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 33 18 36 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 312;
}
);
note = six.numr;
},
{
glyphname = seven.numr;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,347,l),
(289,650,l),
(289,700,l),
(29,700,l),
(29,638,l),
(213,638,l),
(76,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 2 0 2 134 0 0 0 1 95 0 1 1 33 0 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(147,347,l),
(288,654,l),
(288,700,l),
(30,700,l),
(30,645,l),
(220,645,l),
(80,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 2 0 2 134 0 0 0 1 95 0 1 1 33 0 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(152,346,l),
(290,646,l),
(290,699,l),
(28,699,l),
(28,631,l),
(205,631,l),
(71,346,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 2 0 2 134 0 0 0 1 95 0 1 1 33 0 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(150,346,l),
(289,649,l),
(289,699,l),
(29,699,l),
(29,636,l),
(210,636,l),
(74,346,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 2 0 2 134 0 0 0 1 95 0 1 1 33 0 78 18 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = seven.numr;
},
{
glyphname = eight.numr;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,342,o),
(276,399,o),
(276,448,qs),
(276,478,o),
(249,525,o),
(224,537,q),
(244,548,o),
(268,587,o),
(268,610,qs),
(268,654,o),
(202,705,o),
(153,705,qs),
(104,705,o),
(37,654,o),
(37,610,qs),
(37,587,o),
(60,548,o),
(81,537,q),
(56,524,o),
(29,478,o),
(29,448,qs),
(29,401,o),
(100,342,o),
(153,342,qs)
);
},
{
closed = 1;
nodes = (
(126,403,o),
(98,429,o),
(98,453,qs),
(98,478,o),
(127,505,o),
(153,505,qs),
(179,505,o),
(207,478,o),
(207,453,qs),
(207,429,o),
(178,403,o),
(153,403,qs)
);
},
{
closed = 1;
nodes = (
(132,559,o),
(107,582,o),
(107,602,qs),
(107,624,o),
(131,647,o),
(153,647,qs),
(174,647,o),
(199,623,o),
(199,602,qs),
(199,583,o),
(173,559,o),
(153,559,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
17 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 7 1 3 6 1 1 3 1 101 0 4 4 0 97 0 0 0 33 4 78 36 36 24 24 0 0 36 47 36 46 42 40 24 35 24 34 30 28 0 23 0 22 42 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 305;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(203,342,o),
(275,398,o),
(275,446,qs),
(275,477,o),
(245,526,o),
(217,537,q),
(240,547,o),
(267,587,o),
(267,611,qs),
(267,654,o),
(201,705,o),
(153,705,qs),
(105,705,o),
(39,654,o),
(39,611,qs),
(39,587,o),
(65,547,o),
(88,537,q),
(60,525,o),
(30,477,o),
(30,446,qs),
(30,399,o),
(101,342,o),
(153,342,qs)
);
},
{
closed = 1;
nodes = (
(124,396,o),
(93,426,o),
(93,451,qs),
(93,478,o),
(126,508,o),
(154,508,qs),
(181,508,o),
(213,478,o),
(213,451,qs),
(213,425,o),
(181,396,o),
(154,396,qs)
);
},
{
closed = 1;
nodes = (
(130,556,o),
(102,582,o),
(102,604,qs),
(102,627,o),
(129,653,o),
(153,653,qs),
(176,653,o),
(204,627,o),
(204,604,qs),
(204,582,o),
(176,556,o),
(153,556,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
17 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 7 1 3 6 1 1 3 1 101 0 4 4 0 97 0 0 0 33 4 78 36 36 24 24 0 0 36 47 36 46 42 40 24 35 24 34 30 28 0 23 0 22 42 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 305;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(204,342,o),
(277,400,o),
(277,449,qs),
(277,477,o),
(253,524,o),
(230,536,q),
(248,548,o),
(269,586,o),
(269,608,qs),
(269,653,o),
(202,705,o),
(152,705,qs),
(102,705,o),
(35,653,o),
(35,608,qs),
(35,563,o),
(74,536,q),
(52,523,o),
(27,478,o),
(27,449,qs),
(27,402,o),
(97,342,o),
(152,342,qs)
);
},
{
closed = 1;
nodes = (
(129,409,o),
(103,432,o),
(103,454,qs),
(103,476,o),
(129,501,o),
(152,501,qs),
(176,501,o),
(201,477,o),
(201,454,qs),
(201,432,o),
(174,409,o),
(152,409,qs)
);
},
{
closed = 1;
nodes = (
(133,562,o),
(111,583,o),
(111,600,qs),
(111,619,o),
(132,640,o),
(152,640,qs),
(171,640,o),
(193,619,o),
(193,600,qs),
(193,583,o),
(171,562,o),
(152,562,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
16 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 7 1 3 6 1 1 3 1 101 0 4 4 0 97 0 0 0 33 4 78 35 35 23 23 0 0 35 46 35 45 41 39 23 34 23 33 29 27 0 22 0 21 41 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(203,342,o),
(276,399,o),
(276,448,qs),
(276,477,o),
(251,524,o),
(226,536,q),
(245,547,o),
(268,586,o),
(268,609,qs),
(268,654,o),
(201,705,o),
(152,705,qs),
(103,705,o),
(36,654,o),
(36,609,qs),
(36,586,o),
(59,548,o),
(79,536,q),
(55,524,o),
(28,478,o),
(28,448,qs),
(28,401,o),
(98,342,o),
(152,342,qs)
);
},
{
closed = 1;
nodes = (
(127,405,o),
(100,430,o),
(100,453,qs),
(100,477,o),
(128,503,o),
(153,503,qs),
(178,503,o),
(205,477,o),
(205,453,qs),
(205,430,o),
(177,405,o),
(153,405,qs)
);
},
{
closed = 1;
nodes = (
(132,560,o),
(108,582,o),
(108,601,qs),
(108,622,o),
(131,644,o),
(152,644,qs),
(173,644,o),
(197,621,o),
(197,601,qs),
(197,582,o),
(172,560,o),
(152,560,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
17 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 7 1 3 6 1 1 3 1 101 0 4 4 0 97 0 0 0 33 4 78 36 36 24 24 0 0 36 47 36 46 42 40 24 35 24 34 30 28 0 23 0 22 42 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 304;
}
);
note = eight.numr;
},
{
glyphname = nine.numr;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(284,455,o),
(284,535,qs),
(284,609,o),
(215,705,o),
(148,705,qs),
(96,705,o),
(29,634,o),
(29,585,qs),
(29,538,o),
(91,470,o),
(137,470,qs),
(160,470,o),
(201,491,o),
(214,508,q),
(212,458,o),
(180,402,o),
(150,402,qs),
(110,402,o),
(102,446,q),
(36,446,l),
(41,399,o),
(102,342,o),
(150,342,qs)
);
},
{
closed = 1;
nodes = (
(128,531,o),
(98,562,o),
(98,588,qs),
(98,612,o),
(128,644,o),
(151,644,qs),
(175,644,o),
(206,612,o),
(206,587,qs),
(206,563,o),
(175,531,o),
(152,531,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 2 1 2 0 1 128 0 1 7 1 4 1 4 101 0 5 5 3 97 0 3 3 33 77 0 2 2 6 97 8 1 6 6 42 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 1 7 1 4 1 4 101 0 5 5 3 97 0 3 3 33 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 36 33 18 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 313;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(282,454,o),
(282,535,qs),
(282,609,o),
(214,705,o),
(147,705,qs),
(96,705,o),
(30,634,o),
(30,586,qs),
(30,540,o),
(90,472,o),
(136,472,qs),
(163,472,o),
(208,499,o),
(219,520,q),
(218,458,o),
(182,395,o),
(150,395,qs),
(106,395,o),
(96,443,q),
(37,443,l),
(42,398,o),
(103,342,o),
(149,342,qs)
);
},
{
closed = 1;
nodes = (
(125,527,o),
(92,561,o),
(92,589,qs),
(92,615,o),
(125,650,o),
(151,650,qs),
(177,650,o),
(211,615,o),
(211,588,qs),
(211,562,o),
(177,527,o),
(152,527,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 2 1 2 0 1 128 0 1 7 1 4 1 4 101 0 5 5 3 97 0 3 3 33 77 0 2 2 6 97 8 1 6 6 42 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 1 7 1 4 1 4 101 0 5 5 3 97 0 3 3 33 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 36 33 18 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(285,455,o),
(285,535,qs),
(285,608,o),
(216,705,o),
(148,705,qs),
(95,705,o),
(28,634,o),
(28,584,qs),
(28,535,o),
(91,467,o),
(138,467,qs),
(157,467,o),
(194,482,o),
(208,496,q),
(200,408,o),
(150,408,qs),
(114,408,o),
(107,448,q),
(35,448,l),
(40,400,o),
(100,342,o),
(150,342,qs)
);
},
{
closed = 1;
nodes = (
(130,534,o),
(103,563,o),
(103,586,qs),
(103,608,o),
(130,637,o),
(151,637,qs),
(173,637,o),
(201,608,o),
(201,585,qs),
(201,563,o),
(173,534,o),
(152,534,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 1 1 0 114 8 1 6 0 2 0 6 2 105 0 1 7 1 4 1 4 102 0 5 5 3 97 0 3 3 33 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 1 7 1 4 1 4 102 0 5 5 3 97 0 3 3 33 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
23 23 0 0 23 34 23 33 29 27 0 22 0 21 36 35 33 18 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 313;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(284,455,o),
(284,535,qs),
(284,609,o),
(215,705,o),
(148,705,qs),
(96,705,o),
(29,634,o),
(29,585,qs),
(29,537,o),
(90,469,o),
(137,469,qs),
(159,469,o),
(199,488,o),
(212,504,q),
(210,458,o),
(179,404,o),
(150,404,qs),
(112,404,o),
(103,446,q),
(36,446,l),
(41,399,o),
(101,342,o),
(150,342,qs)
);
},
{
closed = 1;
nodes = (
(129,532,o),
(99,562,o),
(99,587,qs),
(99,611,o),
(128,641,o),
(151,641,qs),
(174,641,o),
(204,610,o),
(204,586,qs),
(204,563,o),
(174,532,o),
(152,532,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 2 1 2 0 1 128 0 1 7 1 4 1 4 101 0 5 5 3 97 0 3 3 33 77 0 2 2 6 97 8 1 6 6 42 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 1 7 1 4 1 4 101 0 5 5 3 97 0 3 3 33 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 36 33 18 9 8 26
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = nine.numr;
},
{
glyphname = fraction;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,0,l),
(597,700,l),
(513,700,l),
(-7,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(63,0,l),
(583,700,l),
(512,700,l),
(-7,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 571;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(91,0,l),
(611,700,l),
(513,700,l),
(-7,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 599;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(82,0,l),
(602,700,l),
(513,700,l),
(-7,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 33 77 0 1 1 34 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 590;
}
);
note = fraction;
unicode = 8260;
},
{
glyphname = onehalf;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,347,l),
(279,409,l),
(198,409,l),
(198,700,l),
(160,700,l),
(41,657,l),
(41,601,l),
(130,621,l),
(130,409,l),
(38,409,l),
(38,347,l)
);
},
{
closed = 1;
nodes = (
(176,0,l),
(696,700,l),
(612,700,l),
(92,0,l)
);
},
{
closed = 1;
nodes = (
(723,0,l),
(723,62,l),
(574,62,l),
(638,126,ls),
(679,168,o),
(714,218,o),
(714,251,qs),
(714,300,o),
(654,358,o),
(599,358,qs),
(545,358,o),
(479,296,o),
(478,241,q),
(547,241,l),
(547,265,o),
(573,298,o),
(598,298,qs),
(620,298,o),
(645,272,o),
(645,250,qs),
(645,231,o),
(614,194,o),
(574,152,qs),
(478,51,l),
(478,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 76 values pushed */
4 3 2 3 0 1 15 1 5 9 2 76 4 1 1 0 1 133 0 7 6 9 6 7 9 128 2 1 0 0 3 6 0 3 104 0 8 0 6 7 8 6 105 0 9 5 5 9 87 0 9 9 5 95 10 1 5 9 5 79 39 38 37 36 34 18 39 17 17 17 17 20 16 11 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 768;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(279,347,l),
(279,402,l),
(196,402,l),
(196,700,l),
(162,700,l),
(43,657,l),
(43,607,l),
(135,628,l),
(135,402,l),
(40,402,l),
(40,347,l)
);
},
{
closed = 1;
nodes = (
(168,0,l),
(688,700,l),
(617,700,l),
(98,0,l)
);
},
{
closed = 1;
nodes = (
(720,0,l),
(720,55,l),
(563,55,l),
(631,123,ls),
(665,159,o),
(691,189,o),
(712,229,o),
(712,252,qs),
(712,298,o),
(654,358,o),
(598,358,qs),
(544,358,o),
(479,297,o),
(478,242,q),
(541,242,l),
(541,268,o),
(570,304,o),
(596,304,qs),
(620,304,o),
(649,275,o),
(649,251,qs),
(649,233,o),
(619,193,o),
(586,159,qs),
(566,139,l),
(478,46,l),
(478,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 76 values pushed */
4 3 2 3 0 1 15 1 5 9 2 76 4 1 1 0 1 133 0 7 6 9 6 7 9 128 2 1 0 0 3 6 0 3 104 0 8 0 6 7 8 6 105 0 9 5 5 9 87 0 9 9 5 95 10 1 5 9 5 79 41 40 39 38 34 18 40 17 17 17 17 20 16 11 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 765;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(279,347,l),
(279,415,l),
(199,415,l),
(199,700,l),
(158,700,l),
(38,656,l),
(38,594,l),
(125,614,l),
(125,415,l),
(35,415,l),
(35,347,l)
);
},
{
closed = 1;
nodes = (
(184,0,l),
(704,700,l),
(606,700,l),
(86,0,l)
);
},
{
closed = 1;
nodes = (
(725,0,l),
(725,68,l),
(585,68,l),
(644,128,ls),
(682,166,o),
(716,217,o),
(716,249,qs),
(716,301,o),
(653,358,o),
(600,358,qs),
(545,358,o),
(479,295,o),
(478,239,q),
(553,239,l),
(553,260,o),
(575,291,o),
(599,291,qs),
(618,291,o),
(641,268,o),
(641,248,qs),
(641,232,o),
(613,196,o),
(582,164,qs),
(477,55,l),
(477,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 12 values pushed */
4 3 2 3 0 1 15 1 5 9 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
4 1 1 0 1 133 0 7 6 9 6 7 114 2 1 0 0 3 6 0 3 104 0 8 0 6 7 8 6 105 0 9 5 5 9 87 0 9 9 5 95 10 1 5 9 5 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
4 1 1 0 1 133 0 7 6 9 6 7 9 128 2 1 0 0 3 6 0 3 104 0 8 0 6 7 8 6 105 0 9 5 5 9 87 0 9 9 5 95 10 1 5 9 5 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
39 38 37 36 34 18 39 17 17 17 17 20 16 11 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 770;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(279,347,l),
(279,411,l),
(198,411,l),
(198,700,l),
(159,700,l),
(40,656,l),
(40,598,l),
(128,619,l),
(128,411,l),
(37,411,l),
(37,347,l)
);
},
{
closed = 1;
nodes = (
(179,0,l),
(699,700,l),
(610,700,l),
(90,0,l)
);
},
{
closed = 1;
nodes = (
(723,0,l),
(723,64,l),
(578,64,l),
(640,126,ls),
(680,167,o),
(715,218,o),
(715,250,qs),
(715,300,o),
(653,358,o),
(599,358,qs),
(545,358,o),
(479,296,o),
(478,240,q),
(549,240,l),
(549,263,o),
(573,295,o),
(598,295,qs),
(619,295,o),
(644,270,o),
(644,249,qs),
(644,232,o),
(617,198,o),
(577,156,qs),
(477,52,l),
(477,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 12 values pushed */
4 3 2 3 0 1 15 1 5 9 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
4 1 1 0 1 133 0 7 6 9 6 7 114 2 1 0 0 3 6 0 3 104 0 8 0 6 7 8 6 105 0 9 5 5 9 87 0 9 9 5 95 10 1 5 9 5 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
4 1 1 0 1 133 0 7 6 9 6 7 9 128 2 1 0 0 3 6 0 3 104 0 8 0 6 7 8 6 105 0 9 5 5 9 87 0 9 9 5 95 10 1 5 9 5 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
39 38 37 36 34 18 39 17 17 17 17 20 16 11 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 768;
}
);
note = onehalf;
unicode = 189;
},
{
glyphname = onequarter;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,0,l),
(693,700,l),
(609,700,l),
(89,0,l)
);
},
{
closed = 1;
nodes = (
(279,347,l),
(279,409,l),
(198,409,l),
(198,700,l),
(160,700,l),
(41,657,l),
(41,601,l),
(130,621,l),
(130,409,l),
(38,409,l),
(38,347,l)
);
},
{
closed = 1;
nodes = (
(682,0,l),
(682,65,l),
(722,65,l),
(722,127,l),
(682,127,l),
(682,217,l),
(615,217,l),
(615,127,l),
(525,127,l),
(637,353,l),
(566,353,l),
(448,120,l),
(448,65,l),
(611,65,l),
(611,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 82 values pushed */
8 7 6 3 2 0 17 1 6 8 2 76 3 1 0 2 0 133 0 7 2 5 2 7 5 128 4 1 2 0 5 9 2 5 104 0 9 8 1 9 87 10 1 8 11 1 6 1 8 6 104 0 9 9 1 95 12 1 1 9 1 79 29 28 27 26 25 24 23 22 17 18 17 17 17 20 17 17 16 13 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 762;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(168,0,l),
(688,700,l),
(617,700,l),
(98,0,l)
);
},
{
closed = 1;
nodes = (
(279,347,l),
(279,402,l),
(196,402,l),
(196,700,l),
(162,700,l),
(43,657,l),
(43,607,l),
(135,628,l),
(135,402,l),
(40,402,l),
(40,347,l)
);
},
{
closed = 1;
nodes = (
(678,0,l),
(678,66,l),
(719,66,l),
(719,122,l),
(678,122,l),
(678,213,l),
(618,213,l),
(618,122,l),
(521,122,l),
(635,353,l),
(571,353,l),
(452,117,l),
(452,66,l),
(614,66,l),
(614,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 12 values pushed */
8 7 6 3 2 0 17 1 6 8 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
3 1 0 2 0 133 0 7 2 5 2 7 5 128 0 9 5 8 8 9 114 12 1 1 6 6 1 113 4 1 2 0 5 9 2 5 104 10 1 8 6 6 8 87 10 1 8 8 6 96 11 1 6 8 6 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
3 1 0 2 0 133 0 7 2 5 2 7 5 128 0 9 5 8 5 9 8 128 12 1 1 6 6 1 113 4 1 2 0 5 9 2 5 104 10 1 8 6 6 8 87 10 1 8 8 6 96 11 1 6 8 6 80
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
3 1 0 2 0 133 0 7 2 5 2 7 5 128 0 9 5 8 5 9 8 128 12 1 1 6 1 134 4 1 2 0 5 9 2 5 104 10 1 8 6 6 8 87 10 1 8 8 6 96 11 1 6 8 6 80
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
29 28 27 26 25 24 23 22 17 18 17 17 17 20 17 17 16 13 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 759;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(178,0,l),
(698,700,l),
(600,700,l),
(80,0,l)
);
},
{
closed = 1;
nodes = (
(279,347,l),
(279,415,l),
(199,415,l),
(199,700,l),
(158,700,l),
(38,656,l),
(38,594,l),
(125,614,l),
(125,415,l),
(35,415,l),
(35,347,l)
);
},
{
closed = 1;
nodes = (
(685,0,l),
(685,63,l),
(724,63,l),
(724,132,l),
(685,132,l),
(685,220,l),
(612,220,l),
(612,132,l),
(529,132,l),
(638,353,l),
(560,353,l),
(444,122,l),
(444,63,l),
(608,63,l),
(608,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 82 values pushed */
8 7 6 3 2 0 17 1 6 8 2 76 3 1 0 2 0 133 0 7 2 5 2 7 5 128 4 1 2 0 5 9 2 5 104 0 9 8 1 9 87 10 1 8 11 1 6 1 8 6 104 0 9 9 1 95 12 1 1 9 1 79 29 28 27 26 25 24 23 22 17 18 17 17 17 20 17 17 16 13 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 765;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(175,0,l),
(695,700,l),
(606,700,l),
(86,0,l)
);
},
{
closed = 1;
nodes = (
(279,347,l),
(279,411,l),
(198,411,l),
(198,700,l),
(159,700,l),
(40,656,l),
(40,598,l),
(128,619,l),
(128,411,l),
(37,411,l),
(37,347,l)
);
},
{
closed = 1;
nodes = (
(683,0,l),
(683,64,l),
(722,64,l),
(722,129,l),
(683,129,l),
(683,218,l),
(614,218,l),
(614,129,l),
(526,129,l),
(637,353,l),
(564,353,l),
(447,120,l),
(447,64,l),
(610,64,l),
(610,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 82 values pushed */
8 7 6 3 2 0 17 1 6 8 2 76 3 1 0 2 0 133 0 7 2 5 2 7 5 128 4 1 2 0 5 9 2 5 104 0 9 8 1 9 87 10 1 8 11 1 6 1 8 6 104 0 9 9 1 95 12 1 1 9 1 79 29 28 27 26 25 24 23 22 17 18 17 17 17 20 17 17 16 13 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 763;
}
);
note = onequarter;
unicode = 188;
},
{
glyphname = threequarters;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(178,0,l),
(698,700,l),
(613,700,l),
(94,0,l)
);
},
{
closed = 1;
nodes = (
(686,0,l),
(686,65,l),
(726,65,l),
(726,127,l),
(686,127,l),
(686,217,l),
(620,217,l),
(620,127,l),
(530,127,l),
(641,353,l),
(570,353,l),
(453,120,l),
(453,65,l),
(616,65,l),
(616,0,l)
);
},
{
closed = 1;
nodes = (
(225,342,o),
(294,406,o),
(294,461,qs),
(294,503,o),
(245,561,o),
(201,568,q),
(283,643,l),
(283,700,l),
(51,700,l),
(51,639,l),
(192,639,l),
(92,549,l),
(131,503,l),
(151,514,o),
(168,514,qs),
(194,514,o),
(226,486,o),
(226,460,qs),
(226,433,o),
(195,404,o),
(168,404,qs),
(141,404,o),
(109,434,o),
(109,458,q),
(40,458,l),
(41,403,o),
(111,342,o),
(168,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 19 values pushed */
39 1 12 0 40 34 2 11 12 33 1 9 11 6 1 2 4 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 11 12 9 12 11 114 0 9 10 12 9 10 126 0 3 10 14 10 3 14 128 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 105 0 5 4 1 5 87 6 1 4 7 1 2 1 4 2 104 0 5 5 1 95 8 1 1 5 1 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 11 12 9 12 11 9 128 0 9 10 12 9 10 126 0 3 10 14 10 3 14 128 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 105 0 5 4 1 5 87 6 1 4 7 1 2 1 4 2 104 0 5 5 1 95 8 1 1 5 1 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
19 19 19 46 19 45 38 37 36 35 32 30 26 24 22 21 17 17 17 17 17 18 17 17 16 16 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 767;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(167,0,l),
(687,700,l),
(616,700,l),
(97,0,l)
);
},
{
closed = 1;
nodes = (
(677,0,l),
(677,66,l),
(718,66,l),
(718,122,l),
(677,122,l),
(677,213,l),
(617,213,l),
(617,122,l),
(520,122,l),
(634,353,l),
(570,353,l),
(451,117,l),
(451,66,l),
(613,66,l),
(613,0,l)
);
},
{
closed = 1;
nodes = (
(223,342,o),
(292,404,o),
(292,459,qs),
(292,502,o),
(240,562,o),
(192,566,q),
(281,647,l),
(281,700,l),
(51,700,l),
(51,645,l),
(202,645,l),
(94,549,l),
(130,507,l),
(148,517,o),
(167,517,qs),
(196,517,o),
(230,487,o),
(230,459,qs),
(230,429,o),
(196,397,o),
(167,397,qs),
(137,397,o),
(103,430,o),
(103,457,q),
(40,457,l),
(42,402,o),
(110,342,o),
(167,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 19 values pushed */
39 1 12 0 40 34 2 11 12 33 1 9 11 6 1 2 4 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 11 12 9 12 11 114 0 9 10 12 9 10 126 0 3 10 14 10 3 14 128 0 5 14 4 4 5 114 8 1 1 2 2 1 113 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 105 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 11 12 9 12 11 9 128 0 9 10 12 9 10 126 0 3 10 14 10 3 14 128 0 5 14 4 4 5 114 8 1 1 2 2 1 113 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 105 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 11 12 9 12 11 9 128 0 9 10 12 9 10 126 0 3 10 14 10 3 14 128 0 5 14 4 14 5 4 128 8 1 1 2 2 1 113 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 105 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 11 12 9 12 11 9 128 0 9 10 12 9 10 126 0 3 10 14 10 3 14 128 0 5 14 4 14 5 4 128 8 1 1 2 1 134 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 105 6 1 4 2 2 4 87 6 1 4 4 2 96 7 1 2 4 2 80
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
19 19 19 46 19 45 38 37 36 35 32 30 26 24 22 21 17 17 17 17 17 18 17 17 16 16 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 758;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(188,0,l),
(708,700,l),
(610,700,l),
(90,0,l)
);
},
{
closed = 1;
nodes = (
(695,0,l),
(695,63,l),
(734,63,l),
(734,132,l),
(695,132,l),
(695,220,l),
(622,220,l),
(622,132,l),
(539,132,l),
(648,353,l),
(570,353,l),
(454,122,l),
(454,63,l),
(618,63,l),
(618,0,l)
);
},
{
closed = 1;
nodes = (
(227,342,o),
(296,407,o),
(296,462,qs),
(296,503,o),
(249,561,o),
(209,569,q),
(285,638,l),
(285,700,l),
(50,700,l),
(50,632,l),
(182,632,l),
(89,548,l),
(132,498,l),
(152,510,o),
(169,510,qs),
(192,510,o),
(222,484,o),
(222,461,qs),
(222,436,o),
(194,410,o),
(169,410,qs),
(144,410,o),
(115,437,o),
(115,459,q),
(40,459,l),
(40,403,o),
(111,342,o),
(169,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 19 values pushed */
39 1 12 0 40 34 2 11 12 33 1 9 11 6 1 2 4 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 11 12 9 12 11 114 0 9 10 10 9 112 0 3 10 14 10 3 14 128 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 0 5 4 1 5 87 6 1 4 7 1 2 1 4 2 104 0 5 5 1 95 8 1 1 5 1 79
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 11 12 9 12 11 9 128 0 9 10 10 9 112 0 3 10 14 10 3 14 128 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 0 5 4 1 5 87 6 1 4 7 1 2 1 4 2 104 0 5 5 1 95 8 1 1 5 1 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 11 12 9 12 11 9 128 0 9 10 12 9 10 126 0 3 10 14 10 3 14 128 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 106 0 5 4 1 5 87 6 1 4 7 1 2 1 4 2 104 0 5 5 1 95 8 1 1 5 1 79
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
19 19 19 46 19 45 38 37 36 35 32 30 26 24 22 21 17 17 17 17 17 18 17 17 16 16 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 775;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(181,0,l),
(701,700,l),
(612,700,l),
(92,0,l)
);
},
{
closed = 1;
nodes = (
(689,0,l),
(689,64,l),
(729,64,l),
(729,129,l),
(689,129,l),
(689,218,l),
(620,218,l),
(620,129,l),
(533,129,l),
(643,353,l),
(570,353,l),
(453,120,l),
(453,64,l),
(616,64,l),
(616,0,l)
);
},
{
closed = 1;
nodes = (
(225,342,o),
(295,407,o),
(295,461,qs),
(295,502,o),
(246,561,o),
(203,568,q),
(284,641,l),
(284,700,l),
(50,700,l),
(50,636,l),
(189,636,l),
(91,548,l),
(131,501,l),
(150,512,o),
(168,512,qs),
(193,512,o),
(225,485,o),
(225,460,qs),
(225,434,o),
(195,406,o),
(168,406,qs),
(142,406,o),
(111,435,o),
(111,458,q),
(40,458,l),
(41,403,o),
(111,342,o),
(168,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 19 values pushed */
39 1 12 0 40 34 2 11 12 33 1 9 11 6 1 2 4 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 11 12 9 12 11 114 0 9 10 12 9 10 126 0 3 10 14 10 3 14 128 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 105 0 5 4 1 5 87 6 1 4 7 1 2 1 4 2 104 0 5 5 1 95 8 1 1 5 1 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 11 12 9 12 11 9 128 0 9 10 12 9 10 126 0 3 10 14 10 3 14 128 13 1 0 0 12 11 0 12 103 0 10 15 1 14 5 10 14 105 0 5 4 1 5 87 6 1 4 7 1 2 1 4 2 104 0 5 5 1 95 8 1 1 5 1 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
19 19 19 46 19 45 38 37 36 35 32 30 26 24 22 21 17 17 17 17 17 18 17 17 16 16 8 31
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 769;
}
);
note = threequarters;
unicode = 190;
},
{
glyphname = oneeighth;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(174,0,l),
(694,700,l),
(609,700,l),
(90,0,l)
);
},
{
closed = 1;
nodes = (
(279,347,l),
(279,409,l),
(198,409,l),
(198,700,l),
(160,700,l),
(41,657,l),
(41,601,l),
(130,621,l),
(130,409,l),
(38,409,l),
(38,347,l)
);
},
{
closed = 1;
nodes = (
(568,56,o),
(540,82,o),
(540,106,qs),
(540,131,o),
(569,158,o),
(595,158,qs),
(621,158,o),
(649,131,o),
(649,106,qs),
(649,82,o),
(620,56,o),
(595,56,qs)
);
},
{
closed = 1;
nodes = (
(645,-5,o),
(718,52,o),
(718,101,qs),
(718,130,o),
(691,178,o),
(665,190,q),
(685,201,o),
(710,240,o),
(710,263,qs),
(710,307,o),
(643,358,o),
(594,358,qs),
(545,358,o),
(479,307,o),
(479,263,qs),
(479,240,o),
(502,201,o),
(523,190,q),
(498,177,o),
(470,130,o),
(470,101,qs),
(470,54,o),
(541,-5,o),
(594,-5,qs)
);
},
{
closed = 1;
nodes = (
(574,212,o),
(548,236,o),
(548,255,qs),
(548,277,o),
(572,300,o),
(594,300,qs),
(616,300,o),
(640,276,o),
(640,255,qs),
(640,235,o),
(615,212,o),
(594,212,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
8 7 6 3 2 0 44 32 2 6 11 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
4 1 2 0 5 10 2 5 104 0 8 0 10 11 8 10 106 14 1 11 0 6 7 11 6 105 3 1 0 0 33 77 12 1 7 7 1 97 13 9 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
4 1 2 0 5 10 2 5 104 0 8 0 10 11 8 10 106 14 1 11 0 6 7 11 6 105 3 1 0 0 33 77 0 1 1 34 77 12 1 7 7 9 97 13 1 9 9 34 9 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
51 51 27 27 15 15 51 62 51 61 57 55 27 50 27 49 39 37 15 26 15 25 37 17 17 20 17 17 16 15 8 29
CALL[ ]	/* CallFunction */";
};
width = 764;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(168,0,l),
(688,700,l),
(617,700,l),
(98,0,l)
);
},
{
closed = 1;
nodes = (
(279,347,l),
(279,402,l),
(196,402,l),
(196,700,l),
(162,700,l),
(43,657,l),
(43,607,l),
(135,628,l),
(135,402,l),
(40,402,l),
(40,347,l)
);
},
{
closed = 1;
nodes = (
(565,49,o),
(534,79,o),
(534,104,qs),
(534,131,o),
(567,161,o),
(595,161,qs),
(622,161,o),
(654,131,o),
(654,104,qs),
(654,78,o),
(622,49,o),
(595,49,qs)
);
},
{
closed = 1;
nodes = (
(644,-5,o),
(716,51,o),
(716,99,qs),
(716,130,o),
(686,179,o),
(658,190,q),
(681,200,o),
(708,240,o),
(708,264,qs),
(708,307,o),
(642,358,o),
(594,358,qs),
(546,358,o),
(480,307,o),
(480,264,qs),
(480,240,o),
(506,200,o),
(529,190,q),
(501,178,o),
(471,130,o),
(471,99,qs),
(471,52,o),
(542,-5,o),
(594,-5,qs)
);
},
{
closed = 1;
nodes = (
(571,209,o),
(543,235,o),
(543,257,qs),
(543,280,o),
(570,306,o),
(594,306,qs),
(617,306,o),
(645,280,o),
(645,257,qs),
(645,235,o),
(617,209,o),
(594,209,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
8 7 6 3 2 0 44 32 2 6 11 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
4 1 2 0 5 10 2 5 104 0 8 0 10 11 8 10 105 14 1 11 0 6 7 11 6 106 3 1 0 0 33 77 12 1 7 7 1 97 13 9 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
4 1 2 0 5 10 2 5 104 0 8 0 10 11 8 10 105 14 1 11 0 6 7 11 6 106 3 1 0 0 33 77 0 1 1 34 77 12 1 7 7 9 97 13 1 9 9 34 9 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
51 51 27 27 15 15 51 62 51 61 57 55 27 50 27 49 39 37 15 26 15 25 37 17 17 20 17 17 16 15 8 29
CALL[ ]	/* CallFunction */";
};
width = 762;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(179,-1,l),
(699,699,l),
(601,699,l),
(81,-1,l)
);
},
{
closed = 1;
nodes = (
(279,347,l),
(279,415,l),
(199,415,l),
(199,700,l),
(158,700,l),
(38,656,l),
(38,594,l),
(125,614,l),
(125,415,l),
(35,415,l),
(35,347,l)
);
},
{
closed = 1;
nodes = (
(571,62,o),
(545,85,o),
(545,107,qs),
(545,129,o),
(571,154,o),
(594,154,qs),
(618,154,o),
(643,130,o),
(643,107,qs),
(643,85,o),
(616,62,o),
(594,62,qs)
);
},
{
closed = 1;
nodes = (
(646,-5,o),
(719,53,o),
(719,102,qs),
(719,130,o),
(695,177,o),
(672,189,q),
(690,201,o),
(711,239,o),
(711,261,qs),
(711,306,o),
(644,358,o),
(594,358,qs),
(544,358,o),
(477,306,o),
(477,261,qs),
(477,216,o),
(516,189,q),
(494,176,o),
(469,131,o),
(469,102,qs),
(469,55,o),
(539,-5,o),
(594,-5,qs)
);
},
{
closed = 1;
nodes = (
(575,215,o),
(553,236,o),
(553,253,qs),
(553,272,o),
(574,293,o),
(594,293,qs),
(613,293,o),
(635,272,o),
(635,253,qs),
(635,236,o),
(613,215,o),
(594,215,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
8 7 6 3 2 0 43 32 2 6 11 2 76 4 1 2 0 5 10 2 5 104 0 8 0 10 11 8 10 106 14 1 11 0 6 7 11 6 105 3 1 0 0 33 77 12 1 7 7 1 97 13 9 2 1 1 34 1 78 50 50 27 27 15 15 50 61 50 60 56 54 27 49 27 48 38 36 15 26 15 25 37 17 17 20 17 17 16 15 8 29
CALL[ ]	/* CallFunction */";
};
width = 765;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(175,-1,l),
(695,699,l),
(606,699,l),
(87,-1,l)
);
},
{
closed = 1;
nodes = (
(279,347,l),
(279,411,l),
(198,411,l),
(198,700,l),
(159,700,l),
(40,656,l),
(40,598,l),
(128,619,l),
(128,411,l),
(37,411,l),
(37,347,l)
);
},
{
closed = 1;
nodes = (
(569,58,o),
(541,83,o),
(541,106,qs),
(541,130,o),
(569,156,o),
(594,156,qs),
(619,156,o),
(647,130,o),
(647,106,qs),
(647,83,o),
(618,58,o),
(594,58,qs)
);
},
{
closed = 1;
nodes = (
(645,-5,o),
(718,52,o),
(718,101,qs),
(718,130,o),
(692,177,o),
(667,189,q),
(687,200,o),
(710,240,o),
(710,262,qs),
(710,307,o),
(643,358,o),
(594,358,qs),
(545,358,o),
(478,307,o),
(478,262,qs),
(478,239,o),
(500,201,o),
(520,189,q),
(496,177,o),
(470,130,o),
(470,101,qs),
(470,54,o),
(540,-5,o),
(594,-5,qs)
);
},
{
closed = 1;
nodes = (
(574,213,o),
(550,235,o),
(550,254,qs),
(550,275,o),
(573,297,o),
(594,297,qs),
(615,297,o),
(638,274,o),
(638,254,qs),
(638,235,o),
(614,213,o),
(594,213,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
8 7 6 3 2 0 44 32 2 6 11 2 76 4 1 2 0 5 10 2 5 104 0 8 0 10 11 8 10 106 14 1 11 0 6 7 11 6 105 3 1 0 0 33 77 12 1 7 7 1 97 13 9 2 1 1 34 1 78 51 51 27 27 15 15 51 62 51 61 57 55 27 50 27 49 39 37 15 26 15 25 37 17 17 20 17 17 16 15 8 29
CALL[ ]	/* CallFunction */";
};
width = 764;
}
);
note = oneeighth;
unicode = 8539;
},
{
glyphname = threeeighths;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,0,l),
(693,700,l),
(608,700,l),
(89,0,l)
);
},
{
closed = 1;
nodes = (
(225,342,o),
(294,406,o),
(294,461,qs),
(294,502,o),
(244,561,o),
(200,568,q),
(283,643,l),
(283,700,l),
(50,700,l),
(50,639,l),
(192,639,l),
(91,549,l),
(131,503,l),
(151,514,o),
(168,514,qs),
(194,514,o),
(226,486,o),
(226,460,qs),
(226,433,o),
(195,404,o),
(168,404,qs),
(141,404,o),
(109,434,o),
(109,458,q),
(40,458,l),
(41,403,o),
(110,342,o),
(168,342,qs)
);
},
{
closed = 1;
nodes = (
(568,56,o),
(540,82,o),
(540,106,qs),
(540,131,o),
(569,158,o),
(595,158,qs),
(621,158,o),
(649,131,o),
(649,106,qs),
(649,82,o),
(620,56,o),
(595,56,qs)
);
},
{
closed = 1;
nodes = (
(645,-5,o),
(718,52,o),
(718,101,qs),
(718,130,o),
(691,178,o),
(665,190,q),
(685,201,o),
(710,240,o),
(710,263,qs),
(710,307,o),
(643,358,o),
(594,358,qs),
(545,358,o),
(479,307,o),
(479,263,qs),
(479,240,o),
(502,201,o),
(523,190,q),
(498,177,o),
(470,130,o),
(470,101,qs),
(470,54,o),
(541,-5,o),
(594,-5,qs)
);
},
{
closed = 1;
nodes = (
(574,212,o),
(548,236,o),
(548,255,qs),
(548,277,o),
(572,300,o),
(594,300,qs),
(616,300,o),
(640,276,o),
(640,255,qs),
(640,235,o),
(615,212,o),
(594,212,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
24 1 5 0 25 19 2 4 5 18 1 2 4 61 49 2 8 13 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 4 5 2 5 4 114 0 2 3 5 2 3 126 0 3 14 1 7 12 3 7 105 0 10 0 12 13 10 12 106 17 1 13 0 8 9 13 8 105 0 5 5 0 95 6 1 0 0 33 77 15 1 9 9 1 97 16 11 2 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 4 5 2 5 4 2 128 0 2 3 5 2 3 126 0 3 14 1 7 12 3 7 105 0 10 0 12 13 10 12 106 17 1 13 0 8 9 13 8 105 0 5 5 0 95 6 1 0 0 33 77 15 1 9 9 1 97 16 11 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 4 5 2 5 4 2 128 0 2 3 5 2 3 126 0 3 14 1 7 12 3 7 105 0 10 0 12 13 10 12 106 17 1 13 0 8 9 13 8 105 0 5 5 0 95 6 1 0 0 33 77 0 1 1 34 77 15 1 9 9 11 97 16 1 11 11 34 11 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
68 68 44 44 32 32 4 4 68 79 68 78 74 72 44 67 44 66 56 54 32 43 32 42 38 36 4 31 4 30 17 19 36 34 19 17 16 18 8 29
CALL[ ]	/* CallFunction */";
};
width = 761;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(168,0,l),
(688,700,l),
(617,700,l),
(98,0,l)
);
},
{
closed = 1;
nodes = (
(222,342,o),
(291,404,o),
(291,459,qs),
(291,502,o),
(239,562,o),
(191,566,q),
(280,647,l),
(280,700,l),
(50,700,l),
(50,645,l),
(201,645,l),
(93,549,l),
(129,507,l),
(147,517,o),
(166,517,qs),
(195,517,o),
(229,487,o),
(229,459,qs),
(229,429,o),
(195,397,o),
(166,397,qs),
(136,397,o),
(102,430,o),
(102,457,q),
(39,457,l),
(41,402,o),
(109,342,o),
(166,342,qs)
);
},
{
closed = 1;
nodes = (
(565,49,o),
(534,79,o),
(534,104,qs),
(534,131,o),
(567,161,o),
(595,161,qs),
(622,161,o),
(654,131,o),
(654,104,qs),
(654,78,o),
(622,49,o),
(595,49,qs)
);
},
{
closed = 1;
nodes = (
(644,-5,o),
(716,51,o),
(716,99,qs),
(716,130,o),
(686,179,o),
(658,190,q),
(681,200,o),
(708,240,o),
(708,264,qs),
(708,307,o),
(642,358,o),
(594,358,qs),
(546,358,o),
(480,307,o),
(480,264,qs),
(480,240,o),
(506,200,o),
(529,190,q),
(501,178,o),
(471,130,o),
(471,99,qs),
(471,52,o),
(542,-5,o),
(594,-5,qs)
);
},
{
closed = 1;
nodes = (
(571,209,o),
(543,235,o),
(543,257,qs),
(543,280,o),
(570,306,o),
(594,306,qs),
(617,306,o),
(645,280,o),
(645,257,qs),
(645,235,o),
(617,209,o),
(594,209,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
24 1 5 0 25 19 2 4 5 18 1 2 4 61 49 2 8 13 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 4 5 2 5 4 114 0 2 3 5 2 3 126 0 3 14 1 7 12 3 7 105 0 10 0 12 13 10 12 105 17 1 13 0 8 9 13 8 106 0 5 5 0 95 6 1 0 0 33 77 15 1 9 9 1 97 16 11 2 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 4 5 2 5 4 2 128 0 2 3 5 2 3 126 0 3 14 1 7 12 3 7 105 0 10 0 12 13 10 12 105 17 1 13 0 8 9 13 8 106 0 5 5 0 95 6 1 0 0 33 77 15 1 9 9 1 97 16 11 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 4 5 2 5 4 2 128 0 2 3 5 2 3 126 0 3 14 1 7 12 3 7 105 0 10 0 12 13 10 12 105 17 1 13 0 8 9 13 8 106 0 5 5 0 95 6 1 0 0 33 77 0 1 1 34 77 15 1 9 9 11 97 16 1 11 11 34 11 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
68 68 44 44 32 32 4 4 68 79 68 78 74 72 44 67 44 66 56 54 32 43 32 42 38 36 4 31 4 30 17 19 36 34 19 17 16 18 8 29
CALL[ ]	/* CallFunction */";
};
width = 762;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(177,-1,l),
(697,699,l),
(599,699,l),
(79,-1,l)
);
},
{
closed = 1;
nodes = (
(227,342,o),
(296,407,o),
(296,462,qs),
(296,503,o),
(249,561,o),
(209,569,q),
(285,638,l),
(285,700,l),
(50,700,l),
(50,632,l),
(182,632,l),
(89,548,l),
(132,498,l),
(152,510,o),
(169,510,qs),
(192,510,o),
(222,484,o),
(222,461,qs),
(222,436,o),
(194,410,o),
(169,410,qs),
(144,410,o),
(115,437,o),
(115,459,q),
(40,459,l),
(40,403,o),
(111,342,o),
(169,342,qs)
);
},
{
closed = 1;
nodes = (
(571,62,o),
(545,85,o),
(545,107,qs),
(545,129,o),
(571,154,o),
(594,154,qs),
(618,154,o),
(643,130,o),
(643,107,qs),
(643,85,o),
(616,62,o),
(594,62,qs)
);
},
{
closed = 1;
nodes = (
(646,-5,o),
(719,53,o),
(719,102,qs),
(719,130,o),
(695,177,o),
(672,189,q),
(690,201,o),
(711,239,o),
(711,261,qs),
(711,306,o),
(644,358,o),
(594,358,qs),
(544,358,o),
(477,306,o),
(477,261,qs),
(477,216,o),
(516,189,q),
(494,176,o),
(469,131,o),
(469,102,qs),
(469,55,o),
(539,-5,o),
(594,-5,qs)
);
},
{
closed = 1;
nodes = (
(575,215,o),
(553,236,o),
(553,253,qs),
(553,272,o),
(574,293,o),
(594,293,qs),
(613,293,o),
(635,272,o),
(635,253,qs),
(635,236,o),
(613,215,o),
(594,215,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
24 1 5 0 25 19 2 4 5 18 1 2 4 60 49 2 8 13 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 4 5 2 5 4 114 0 2 3 3 2 112 0 3 14 1 7 12 3 7 106 0 10 0 12 13 10 12 106 17 1 13 0 8 9 13 8 105 0 5 5 0 95 6 1 0 0 33 77 15 1 9 9 1 97 16 11 2 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 4 5 2 5 4 2 128 0 2 3 3 2 112 0 3 14 1 7 12 3 7 106 0 10 0 12 13 10 12 106 17 1 13 0 8 9 13 8 105 0 5 5 0 95 6 1 0 0 33 77 15 1 9 9 1 97 16 11 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 4 5 2 5 4 2 128 0 2 3 5 2 3 126 0 3 14 1 7 12 3 7 106 0 10 0 12 13 10 12 106 17 1 13 0 8 9 13 8 105 0 5 5 0 95 6 1 0 0 33 77 15 1 9 9 1 97 16 11 2 1 1 34 1 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
67 67 44 44 32 32 4 4 67 78 67 77 73 71 44 66 44 65 55 53 32 43 32 42 38 36 4 31 4 30 17 19 36 34 19 17 16 18 8 29
CALL[ ]	/* CallFunction */";
};
width = 760;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(174,-1,l),
(694,699,l),
(605,699,l),
(85,-1,l)
);
},
{
closed = 1;
nodes = (
(225,342,o),
(294,406,o),
(294,461,qs),
(294,502,o),
(246,561,o),
(203,568,q),
(283,641,l),
(283,700,l),
(50,700,l),
(50,636,l),
(188,636,l),
(90,548,l),
(131,501,l),
(150,512,o),
(168,512,qs),
(193,512,o),
(224,485,o),
(224,460,qs),
(224,434,o),
(194,406,o),
(168,406,qs),
(142,406,o),
(111,435,o),
(111,458,q),
(40,458,l),
(41,403,o),
(110,342,o),
(168,342,qs)
);
},
{
closed = 1;
nodes = (
(569,58,o),
(541,83,o),
(541,106,qs),
(541,130,o),
(569,156,o),
(594,156,qs),
(619,156,o),
(647,130,o),
(647,106,qs),
(647,83,o),
(618,58,o),
(594,58,qs)
);
},
{
closed = 1;
nodes = (
(645,-5,o),
(718,52,o),
(718,101,qs),
(718,130,o),
(692,177,o),
(667,189,q),
(687,200,o),
(710,240,o),
(710,262,qs),
(710,307,o),
(643,358,o),
(594,358,qs),
(545,358,o),
(478,307,o),
(478,262,qs),
(478,239,o),
(500,201,o),
(520,189,q),
(496,177,o),
(470,130,o),
(470,101,qs),
(470,54,o),
(540,-5,o),
(594,-5,qs)
);
},
{
closed = 1;
nodes = (
(574,213,o),
(550,235,o),
(550,254,qs),
(550,275,o),
(573,297,o),
(594,297,qs),
(615,297,o),
(638,274,o),
(638,254,qs),
(638,235,o),
(614,213,o),
(594,213,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
24 1 5 0 25 19 2 4 5 18 1 2 4 61 49 2 8 13 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 4 5 2 5 4 114 0 2 3 5 2 3 126 0 3 14 1 7 12 3 7 105 0 10 0 12 13 10 12 106 17 1 13 0 8 9 13 8 105 0 5 5 0 95 6 1 0 0 33 77 15 1 9 9 1 97 16 11 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 4 5 2 5 4 2 128 0 2 3 5 2 3 126 0 3 14 1 7 12 3 7 105 0 10 0 12 13 10 12 106 17 1 13 0 8 9 13 8 105 0 5 5 0 95 6 1 0 0 33 77 15 1 9 9 1 97 16 11 2 1 1 34 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
68 68 44 44 32 32 4 4 68 79 68 78 74 72 44 67 44 66 56 54 32 43 32 42 38 36 4 31 4 30 17 19 36 34 19 17 16 18 8 29
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = threeeighths;
unicode = 8540;
},
{
glyphname = fiveeighths;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,0,l),
(697,700,l),
(612,700,l),
(92,0,l)
);
},
{
closed = 1;
nodes = (
(227,342,o),
(298,414,o),
(298,470,qs),
(298,522,o),
(236,592,o),
(183,592,qs),
(143,592,o),
(117,571,q),
(130,638,l),
(275,638,l),
(275,700,l),
(77,700,l),
(46,496,l),
(114,496,l),
(122,514,o),
(152,534,o),
(172,534,qs),
(198,534,o),
(230,499,o),
(230,470,qs),
(230,441,o),
(197,404,o),
(171,404,qs),
(148,404,o),
(116,429,o),
(111,450,q),
(42,450,l),
(45,402,o),
(114,342,o),
(171,342,qs)
);
},
{
closed = 1;
nodes = (
(572,56,o),
(544,82,o),
(544,106,qs),
(544,131,o),
(573,158,o),
(599,158,qs),
(625,158,o),
(653,131,o),
(653,106,qs),
(653,82,o),
(624,56,o),
(599,56,qs)
);
},
{
closed = 1;
nodes = (
(649,-5,o),
(722,53,o),
(722,101,qs),
(722,130,o),
(695,178,o),
(669,190,q),
(689,201,o),
(714,240,o),
(714,263,qs),
(714,307,o),
(647,358,o),
(598,358,qs),
(549,358,o),
(483,307,o),
(483,263,qs),
(483,240,o),
(506,201,o),
(527,190,q),
(502,177,o),
(474,130,o),
(474,101,qs),
(474,54,o),
(545,-5,o),
(598,-5,qs)
);
},
{
closed = 1;
nodes = (
(578,212,o),
(552,236,o),
(552,255,qs),
(552,277,o),
(576,300,o),
(598,300,qs),
(620,300,o),
(644,276,o),
(644,255,qs),
(644,235,o),
(619,212,o),
(598,212,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
25 1 4 8 63 51 2 10 15 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 5 4 2 7 5 114 0 2 3 4 2 3 126 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 105 0 12 0 14 15 12 14 106 19 1 15 0 10 11 15 10 105 0 7 7 0 95 6 1 0 0 33 77 17 1 11 11 1 97 18 13 2 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 105 0 12 0 14 15 12 14 106 19 1 15 0 10 11 15 10 105 0 7 7 0 95 6 1 0 0 33 77 17 1 11 11 1 97 18 13 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 105 0 12 0 14 15 12 14 106 19 1 15 0 10 11 15 10 105 0 7 7 0 95 6 1 0 0 33 77 0 1 1 34 77 17 1 11 11 13 97 18 1 13 13 34 13 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
70 70 46 46 34 34 4 4 70 81 70 80 76 74 46 69 46 68 58 56 34 45 34 44 40 38 4 33 4 32 34 17 17 18 36 34 19 17 16 20 8 31
CALL[ ]	/* CallFunction */";
};
width = 765;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(172,0,l),
(692,700,l),
(621,700,l),
(102,0,l)
);
},
{
closed = 1;
nodes = (
(227,342,o),
(298,413,o),
(298,469,qs),
(298,520,o),
(237,590,o),
(184,590,qs),
(161,590,o),
(123,575,o),
(111,562,q),
(127,644,l),
(274,644,l),
(274,700,l),
(79,700,l),
(49,499,l),
(111,499,l),
(118,516,o),
(151,538,o),
(173,538,qs),
(201,538,o),
(236,500,o),
(236,469,qs),
(236,438,o),
(200,397,o),
(172,397,qs),
(147,397,o),
(112,425,o),
(107,447,q),
(44,447,l),
(46,404,o),
(114,342,o),
(172,342,qs)
);
},
{
closed = 1;
nodes = (
(569,49,o),
(538,79,o),
(538,104,qs),
(538,131,o),
(571,161,o),
(599,161,qs),
(626,161,o),
(658,131,o),
(658,104,qs),
(658,78,o),
(626,49,o),
(599,49,qs)
);
},
{
closed = 1;
nodes = (
(648,-5,o),
(720,52,o),
(720,100,qs),
(720,131,o),
(690,179,o),
(662,190,q),
(685,200,o),
(712,240,o),
(712,264,qs),
(712,307,o),
(646,358,o),
(598,358,qs),
(550,358,o),
(484,307,o),
(484,264,qs),
(484,240,o),
(510,200,o),
(533,190,q),
(505,178,o),
(475,130,o),
(475,99,qs),
(475,52,o),
(546,-5,o),
(598,-5,qs)
);
},
{
closed = 1;
nodes = (
(575,209,o),
(547,235,o),
(547,257,qs),
(547,280,o),
(574,306,o),
(598,306,qs),
(621,306,o),
(649,280,o),
(649,257,qs),
(649,235,o),
(621,209,o),
(598,209,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
25 1 4 8 64 52 2 10 15 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 5 4 2 7 5 114 0 2 3 4 2 3 126 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 105 0 12 0 14 15 12 14 105 19 1 15 0 10 11 15 10 106 0 7 7 0 95 6 1 0 0 33 77 17 1 11 11 1 97 18 13 2 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 105 0 12 0 14 15 12 14 105 19 1 15 0 10 11 15 10 106 0 7 7 0 95 6 1 0 0 33 77 17 1 11 11 1 97 18 13 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 105 0 12 0 14 15 12 14 105 19 1 15 0 10 11 15 10 106 0 7 7 0 95 6 1 0 0 33 77 0 1 1 34 77 17 1 11 11 13 97 18 1 13 13 34 13 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
71 71 47 47 35 35 4 4 71 82 71 81 77 75 47 70 47 69 59 57 35 46 35 45 41 39 4 34 4 33 35 17 17 18 36 34 19 17 16 20 8 31
CALL[ ]	/* CallFunction */";
};
width = 766;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(181,-1,l),
(701,699,l),
(602,699,l),
(82,-1,l)
);
},
{
closed = 1;
nodes = (
(226,342,o),
(298,415,o),
(298,471,qs),
(298,524,o),
(236,594,o),
(181,594,qs),
(147,594,o),
(123,579,q),
(133,631,l),
(275,631,l),
(275,700,l),
(74,700,l),
(43,492,l),
(116,492,l),
(132,529,o),
(171,529,qs),
(194,529,o),
(224,497,o),
(224,471,qs),
(224,444,o),
(193,410,o),
(170,410,qs),
(149,410,o),
(119,433,o),
(115,452,q),
(39,452,l),
(43,400,o),
(113,342,o),
(170,342,qs)
);
},
{
closed = 1;
nodes = (
(575,62,o),
(549,85,o),
(549,107,qs),
(549,129,o),
(575,154,o),
(598,154,qs),
(622,154,o),
(647,130,o),
(647,107,qs),
(647,85,o),
(620,62,o),
(598,62,qs)
);
},
{
closed = 1;
nodes = (
(650,-5,o),
(723,53,o),
(723,102,qs),
(723,130,o),
(699,177,o),
(676,189,q),
(694,201,o),
(715,239,o),
(715,261,qs),
(715,306,o),
(648,358,o),
(598,358,qs),
(548,358,o),
(481,306,o),
(481,261,qs),
(481,216,o),
(520,189,q),
(498,176,o),
(473,131,o),
(473,102,qs),
(473,55,o),
(543,-5,o),
(598,-5,qs)
);
},
{
closed = 1;
nodes = (
(579,215,o),
(557,236,o),
(557,253,qs),
(557,272,o),
(578,293,o),
(598,293,qs),
(617,293,o),
(639,272,o),
(639,253,qs),
(639,236,o),
(617,215,o),
(598,215,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
24 1 4 8 61 50 2 10 15 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 5 4 2 7 5 114 0 2 3 4 2 3 126 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 105 0 12 0 14 15 12 14 106 19 1 15 0 10 11 15 10 105 0 7 7 0 95 6 1 0 0 33 77 17 1 11 11 1 97 18 13 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 105 0 12 0 14 15 12 14 106 19 1 15 0 10 11 15 10 105 0 7 7 0 95 6 1 0 0 33 77 17 1 11 11 1 97 18 13 2 1 1 34 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
68 68 45 45 33 33 4 4 68 79 68 78 74 72 45 67 45 66 56 54 33 44 33 43 39 37 4 32 4 31 34 17 17 17 36 34 19 17 16 20 8 31
CALL[ ]	/* CallFunction */";
};
width = 764;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(178,-1,l),
(698,699,l),
(608,699,l),
(89,-1,l)
);
},
{
closed = 1;
nodes = (
(227,342,o),
(298,414,o),
(298,470,qs),
(298,523,o),
(236,593,o),
(182,593,qs),
(146,593,o),
(119,573,q),
(131,635,l),
(275,635,l),
(275,700,l),
(76,700,l),
(45,494,l),
(114,494,l),
(131,532,o),
(172,532,qs),
(197,532,o),
(228,498,o),
(228,470,qs),
(228,442,o),
(196,406,o),
(171,406,qs),
(149,406,o),
(117,430,o),
(112,450,q),
(41,450,l),
(45,401,o),
(114,342,o),
(171,342,qs)
);
},
{
closed = 1;
nodes = (
(573,58,o),
(545,83,o),
(545,106,qs),
(545,130,o),
(573,156,o),
(598,156,qs),
(623,156,o),
(651,130,o),
(651,106,qs),
(651,83,o),
(622,58,o),
(598,58,qs)
);
},
{
closed = 1;
nodes = (
(649,-5,o),
(722,53,o),
(722,101,qs),
(722,130,o),
(696,177,o),
(671,189,q),
(691,200,o),
(714,240,o),
(714,262,qs),
(714,307,o),
(647,358,o),
(598,358,qs),
(549,358,o),
(482,307,o),
(482,262,qs),
(482,239,o),
(504,201,o),
(524,189,q),
(500,177,o),
(474,130,o),
(474,101,qs),
(474,54,o),
(544,-5,o),
(598,-5,qs)
);
},
{
closed = 1;
nodes = (
(578,213,o),
(554,235,o),
(554,254,qs),
(554,275,o),
(577,297,o),
(598,297,qs),
(619,297,o),
(642,274,o),
(642,254,qs),
(642,235,o),
(618,213,o),
(598,213,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
24 1 4 8 62 50 2 10 15 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 5 4 2 7 5 114 0 2 3 4 2 3 126 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 105 0 12 0 14 15 12 14 106 19 1 15 0 10 11 15 10 105 0 7 7 0 95 6 1 0 0 33 77 17 1 11 11 1 97 18 13 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 0 8 0 4 5 8 4 105 0 3 16 1 9 14 3 9 105 0 12 0 14 15 12 14 106 19 1 15 0 10 11 15 10 105 0 7 7 0 95 6 1 0 0 33 77 17 1 11 11 1 97 18 13 2 1 1 34 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
69 69 45 45 33 33 4 4 69 80 69 79 75 73 45 68 45 67 57 55 33 44 33 43 39 37 4 32 4 31 34 17 17 17 36 34 19 17 16 20 8 31
CALL[ ]	/* CallFunction */";
};
width = 765;
}
);
note = fiveeighths;
unicode = 8541;
},
{
glyphname = seveneighths;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(144,0,l),
(664,700,l),
(579,700,l),
(59,0,l)
);
},
{
closed = 1;
nodes = (
(550,56,o),
(522,82,o),
(522,106,qs),
(522,131,o),
(551,158,o),
(577,158,qs),
(603,158,o),
(631,131,o),
(631,106,qs),
(631,82,o),
(602,56,o),
(577,56,qs)
);
},
{
closed = 1;
nodes = (
(176,347,l),
(315,650,l),
(315,700,l),
(55,700,l),
(55,638,l),
(239,638,l),
(102,347,l)
);
},
{
closed = 1;
nodes = (
(627,-5,o),
(700,52,o),
(700,101,qs),
(700,130,o),
(673,178,o),
(647,190,q),
(667,201,o),
(692,240,o),
(692,263,qs),
(692,307,o),
(625,358,o),
(576,358,qs),
(527,358,o),
(461,307,o),
(461,263,qs),
(461,240,o),
(484,201,o),
(505,190,q),
(480,177,o),
(452,130,o),
(452,101,qs),
(452,54,o),
(523,-5,o),
(576,-5,qs)
);
},
{
closed = 1;
nodes = (
(556,212,o),
(530,236,o),
(530,255,qs),
(530,277,o),
(554,300,o),
(576,300,qs),
(598,300,o),
(622,276,o),
(622,255,qs),
(622,235,o),
(597,212,o),
(576,212,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
20 1 4 0 40 28 2 2 10 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 6 7 9 7 6 9 128 0 7 0 9 10 7 9 106 13 1 10 0 2 3 10 2 105 0 4 4 0 95 5 1 0 0 33 77 11 1 3 3 1 97 12 8 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 6 7 9 7 6 9 128 0 7 0 9 10 7 9 106 13 1 10 0 2 3 10 2 105 0 4 4 0 95 5 1 0 0 33 77 0 1 1 34 77 11 1 3 3 8 97 12 1 8 8 34 8 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
47 47 23 23 4 4 47 58 47 57 53 51 23 46 23 45 35 33 22 21 19 18 17 16 4 15 4 14 37 17 16 14 8 25
CALL[ ]	/* CallFunction */";
};
width = 741;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(138,0,l),
(658,700,l),
(587,700,l),
(68,0,l)
);
},
{
closed = 1;
nodes = (
(545,49,o),
(514,79,o),
(514,104,qs),
(514,131,o),
(547,161,o),
(575,161,qs),
(602,161,o),
(634,131,o),
(634,104,qs),
(634,78,o),
(602,49,o),
(575,49,qs)
);
},
{
closed = 1;
nodes = (
(176,347,l),
(317,654,l),
(317,700,l),
(59,700,l),
(59,645,l),
(249,645,l),
(109,347,l)
);
},
{
closed = 1;
nodes = (
(624,-5,o),
(696,51,o),
(696,99,qs),
(696,130,o),
(666,179,o),
(638,190,q),
(661,200,o),
(688,240,o),
(688,264,qs),
(688,307,o),
(622,358,o),
(574,358,qs),
(526,358,o),
(460,307,o),
(460,264,qs),
(460,240,o),
(486,200,o),
(509,190,q),
(481,178,o),
(451,130,o),
(451,99,qs),
(451,52,o),
(522,-5,o),
(574,-5,qs)
);
},
{
closed = 1;
nodes = (
(551,209,o),
(523,235,o),
(523,257,qs),
(523,280,o),
(550,306,o),
(574,306,qs),
(597,306,o),
(625,280,o),
(625,257,qs),
(625,235,o),
(597,209,o),
(574,209,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
20 1 4 0 40 28 2 2 10 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 6 7 9 7 6 9 128 0 7 0 9 10 7 9 106 13 1 10 0 2 3 10 2 105 0 4 4 0 95 5 1 0 0 33 77 11 1 3 3 1 97 12 8 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 6 7 9 7 6 9 128 0 7 0 9 10 7 9 106 13 1 10 0 2 3 10 2 105 0 4 4 0 95 5 1 0 0 33 77 0 1 1 34 77 11 1 3 3 8 97 12 1 8 8 34 8 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
47 47 23 23 4 4 47 58 47 57 53 51 23 46 23 45 35 33 22 21 19 18 17 16 4 15 4 14 37 17 16 14 8 25
CALL[ ]	/* CallFunction */";
};
width = 742;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(149,-1,l),
(669,699,l),
(570,699,l),
(50,-1,l)
);
},
{
closed = 1;
nodes = (
(555,62,o),
(529,85,o),
(529,107,qs),
(529,129,o),
(555,154,o),
(578,154,qs),
(602,154,o),
(627,130,o),
(627,107,qs),
(627,85,o),
(600,62,o),
(578,62,qs)
);
},
{
closed = 1;
nodes = (
(175,346,l),
(313,646,l),
(313,699,l),
(51,699,l),
(51,631,l),
(228,631,l),
(94,346,l)
);
},
{
closed = 1;
nodes = (
(630,-5,o),
(703,53,o),
(703,102,qs),
(703,130,o),
(679,177,o),
(656,189,q),
(674,201,o),
(695,239,o),
(695,261,qs),
(695,306,o),
(628,358,o),
(578,358,qs),
(528,358,o),
(461,306,o),
(461,261,qs),
(461,216,o),
(500,189,q),
(478,176,o),
(453,131,o),
(453,102,qs),
(453,55,o),
(523,-5,o),
(578,-5,qs)
);
},
{
closed = 1;
nodes = (
(559,215,o),
(537,236,o),
(537,253,qs),
(537,272,o),
(558,293,o),
(578,293,qs),
(597,293,o),
(619,272,o),
(619,253,qs),
(619,236,o),
(597,215,o),
(578,215,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
20 1 4 0 39 28 2 2 10 2 76 0 6 7 9 7 6 9 128 0 7 0 9 10 7 9 106 13 1 10 0 2 3 10 2 105 0 4 4 0 95 5 1 0 0 33 77 11 1 3 3 1 97 12 8 2 1 1 34 1 78 46 46 23 23 4 4 46 57 46 56 52 50 23 45 23 44 34 32 22 21 19 18 17 16 4 15 4 14 37 17 16 14 8 25
CALL[ ]	/* CallFunction */";
};
width = 740;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(145,-1,l),
(665,699,l),
(576,699,l),
(56,-1,l)
);
},
{
closed = 1;
nodes = (
(552,58,o),
(524,83,o),
(524,106,qs),
(524,130,o),
(552,156,o),
(577,156,qs),
(602,156,o),
(629,130,o),
(629,106,qs),
(629,83,o),
(601,58,o),
(577,58,qs)
);
},
{
closed = 1;
nodes = (
(175,346,l),
(314,649,l),
(314,699,l),
(54,699,l),
(54,636,l),
(235,636,l),
(99,346,l)
);
},
{
closed = 1;
nodes = (
(628,-5,o),
(701,52,o),
(701,101,qs),
(701,130,o),
(675,177,o),
(650,189,q),
(670,200,o),
(693,240,o),
(693,262,qs),
(693,307,o),
(626,358,o),
(577,358,qs),
(528,358,o),
(461,307,o),
(461,262,qs),
(461,239,o),
(483,201,o),
(503,189,q),
(479,177,o),
(452,131,o),
(452,101,qs),
(452,54,o),
(523,-5,o),
(577,-5,qs)
);
},
{
closed = 1;
nodes = (
(557,213,o),
(532,235,o),
(532,254,qs),
(532,275,o),
(556,297,o),
(577,297,qs),
(597,297,o),
(621,274,o),
(621,254,qs),
(621,235,o),
(597,213,o),
(577,213,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
20 1 4 0 40 28 2 2 10 2 76 0 6 7 9 7 6 9 128 0 7 0 9 10 7 9 106 13 1 10 0 2 3 10 2 105 0 4 4 0 95 5 1 0 0 33 77 11 1 3 3 1 97 12 8 2 1 1 34 1 78 47 47 23 23 4 4 47 58 47 57 53 51 23 46 23 45 35 33 22 21 19 18 17 16 4 15 4 14 37 17 16 14 8 25
CALL[ ]	/* CallFunction */";
};
width = 741;
}
);
note = seveneighths;
unicode = 8542;
},
{
glyphname = uni2080;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,-5,o),
(295,94,o),
(295,177,qs),
(295,260,o),
(231,358,o),
(162,358,qs),
(93,358,o),
(29,258,o),
(29,177,qs),
(29,96,o),
(93,-5,o),
(162,-5,qs)
);
},
{
closed = 1;
nodes = (
(133,59,o),
(100,116,o),
(100,177,qs),
(100,237,o),
(133,295,o),
(162,295,qs),
(195,295,o),
(224,229,o),
(224,177,qs),
(224,125,o),
(195,59,o),
(162,59,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 51 77 5 1 3 3 1 97 4 1 1 1 52 1 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 9 23
CALL[ ]	/* CallFunction */";
};
width = 324;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(231,-5,o),
(294,93,o),
(294,177,qs),
(294,260,o),
(230,358,o),
(162,358,qs),
(94,358,o),
(30,259,o),
(30,177,qs),
(30,95,o),
(94,-5,o),
(162,-5,qs)
);
},
{
closed = 1;
nodes = (
(128,52,o),
(95,118,o),
(95,177,qs),
(95,236,o),
(128,301,o),
(162,301,qs),
(196,301,o),
(229,236,o),
(229,177,qs),
(229,118,o),
(196,52,o),
(162,52,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 51 77 5 1 3 3 1 97 4 1 1 1 52 1 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 9 23
CALL[ ]	/* CallFunction */";
};
width = 324;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(232,-5,o),
(296,95,o),
(296,177,qs),
(296,258,o),
(232,358,o),
(162,358,qs),
(93,358,o),
(28,257,o),
(28,177,qs),
(28,96,o),
(92,-5,o),
(162,-5,qs)
);
},
{
closed = 1;
nodes = (
(138,65,o),
(105,114,o),
(105,177,qs),
(105,239,o),
(138,288,o),
(162,288,qs),
(218,288,o),
(218,177,qs),
(218,65,o),
(162,65,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 51 77 5 1 3 3 1 97 4 1 1 1 52 1 78 12 12 0 0 12 21 12 20 16 14 0 11 0 10 36 6 9 23
CALL[ ]	/* CallFunction */";
};
width = 324;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(231,-5,o),
(295,94,o),
(295,177,qs),
(295,259,o),
(231,358,o),
(162,358,qs),
(93,358,o),
(29,258,o),
(29,177,qs),
(29,95,o),
(93,-5,o),
(162,-5,qs)
);
},
{
closed = 1;
nodes = (
(102,61,o),
(102,177,qs),
(102,238,o),
(135,292,o),
(162,292,qs),
(194,292,o),
(222,227,o),
(222,177,qs),
(222,127,o),
(194,61,o),
(162,61,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 51 77 5 1 3 3 1 97 4 1 1 1 52 1 78 12 12 0 0 12 22 12 21 18 16 0 11 0 10 36 6 9 23
CALL[ ]	/* CallFunction */";
};
width = 324;
}
);
note = uni2080;
unicode = 8320;
},
{
glyphname = uni2081;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(283,0,l),
(283,62,l),
(201,62,l),
(201,353,l),
(164,353,l),
(44,309,l),
(44,254,l),
(134,274,l),
(134,62,l),
(41,62,l),
(41,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 3 2 3 0 1 1 76 0 1 1 49 77 2 1 0 0 3 96 0 3 3 50 3 78 17 17 20 16 4 9 26
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(281,0,l),
(281,55,l),
(198,55,l),
(198,353,l),
(164,353,l),
(45,309,l),
(45,260,l),
(137,281,l),
(137,55,l),
(42,55,l),
(42,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 3 2 3 0 1 1 76 0 1 1 49 77 2 1 0 0 3 96 0 3 3 50 3 78 17 17 20 16 4 9 26
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(284,0,l),
(284,68,l),
(204,68,l),
(204,353,l),
(163,353,l),
(43,309,l),
(43,247,l),
(130,267,l),
(130,68,l),
(40,68,l),
(40,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 3 2 3 0 1 1 76 0 1 1 49 77 2 1 0 0 3 96 0 3 3 50 3 78 17 17 20 16 4 9 26
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(283,0,l),
(283,64,l),
(202,64,l),
(202,353,l),
(163,353,l),
(44,309,l),
(44,251,l),
(132,272,l),
(132,64,l),
(41,64,l),
(41,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 3 2 3 0 1 1 76 0 1 1 49 77 2 1 0 0 3 96 0 3 3 50 3 78 17 17 20 16 4 9 26
CALL[ ]	/* CallFunction */";
};
width = 316;
}
);
note = uni2081;
unicode = 8321;
},
{
glyphname = uni2082;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,0,l),
(277,0,l),
(277,62,l),
(128,62,l),
(192,126,ls),
(233,168,o),
(268,218,o),
(268,251,qs),
(268,300,o),
(208,358,o),
(153,358,qs),
(99,358,o),
(33,297,o),
(32,241,q),
(101,241,l),
(101,265,o),
(127,298,o),
(152,298,qs),
(174,298,o),
(199,272,o),
(199,250,qs),
(199,231,o),
(168,194,o),
(128,152,qs),
(32,51,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
24 1 4 3 1 76 0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 51 77 0 3 3 4 95 0 4 4 50 4 78 17 22 34 18 37 5 9 27
CALL[ ]	/* CallFunction */";
};
width = 311;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(33,0,l),
(275,0,l),
(275,55,l),
(118,55,l),
(186,123,ls),
(220,158,o),
(246,189,o),
(267,230,o),
(267,253,qs),
(267,299,o),
(209,358,o),
(153,358,qs),
(99,358,o),
(34,298,o),
(33,242,q),
(96,242,l),
(96,268,o),
(125,304,o),
(151,304,qs),
(175,304,o),
(204,275,o),
(204,252,qs),
(204,232,o),
(172,191,o),
(136,155,qs),
(121,139,l),
(33,47,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
26 1 4 3 1 76 0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 51 77 0 3 3 4 95 0 4 4 50 4 78 17 23 34 18 38 5 9 27
CALL[ ]	/* CallFunction */";
};
width = 310;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(30,0,l),
(278,0,l),
(278,68,l),
(138,68,l),
(197,128,ls),
(235,166,o),
(269,217,o),
(269,249,qs),
(269,301,o),
(206,358,o),
(153,358,qs),
(98,358,o),
(32,295,o),
(31,239,q),
(106,239,l),
(106,260,o),
(128,291,o),
(152,291,qs),
(171,291,o),
(194,268,o),
(194,248,qs),
(194,232,o),
(166,196,o),
(135,164,qs),
(30,55,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
24 1 4 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 3 0 1 114 0 0 0 2 97 0 2 2 51 77 0 3 3 4 95 0 4 4 50 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 51 77 0 3 3 4 95 0 4 4 50 4 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
17 22 34 18 37 5 9 27
CALL[ ]	/* CallFunction */";
};
width = 311;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(31,0,l),
(277,0,l),
(277,64,l),
(131,64,l),
(193,126,ls),
(233,167,o),
(268,218,o),
(268,250,qs),
(268,300,o),
(207,358,o),
(153,358,qs),
(99,358,o),
(33,296,o),
(32,240,q),
(103,240,l),
(103,263,o),
(127,295,o),
(152,295,qs),
(173,295,o),
(197,270,o),
(197,249,qs),
(197,232,o),
(167,194,o),
(130,156,qs),
(97,121,l),
(31,52,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
25 1 4 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 3 0 1 114 0 0 0 2 97 0 2 2 51 77 0 3 3 4 95 0 4 4 50 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 51 77 0 3 3 4 95 0 4 4 50 4 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
17 22 34 18 38 5 9 27
CALL[ ]	/* CallFunction */";
};
width = 311;
}
);
note = uni2082;
unicode = 8322;
},
{
glyphname = uni2083;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(286,59,o),
(286,114,qs),
(286,156,o),
(237,214,o),
(193,221,q),
(275,296,l),
(275,353,l),
(43,353,l),
(43,292,l),
(184,292,l),
(84,202,l),
(123,156,l),
(143,167,o),
(160,167,qs),
(186,167,o),
(218,139,o),
(218,113,qs),
(218,86,o),
(187,57,o),
(160,57,qs),
(133,57,o),
(101,87,o),
(101,111,q),
(32,111,l),
(33,56,o),
(103,-5,o),
(160,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 3 4 21 15 2 2 3 14 1 0 2 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 0 3 2 114 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 49 77 0 1 1 5 97 6 1 5 5 52 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 49 77 0 1 1 5 97 6 1 5 5 52 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 26 17 19 36 34 18 7 9 27
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(286,57,o),
(286,112,qs),
(286,155,o),
(234,215,o),
(186,219,q),
(275,300,l),
(275,353,l),
(45,353,l),
(45,298,l),
(196,298,l),
(88,202,l),
(124,160,l),
(142,170,o),
(161,170,qs),
(190,170,o),
(224,140,o),
(224,112,qs),
(224,82,o),
(190,50,o),
(161,50,qs),
(131,50,o),
(97,83,o),
(97,110,q),
(34,110,l),
(36,55,o),
(104,-5,o),
(161,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 3 4 21 15 2 2 3 14 1 0 2 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 0 3 2 114 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 49 77 0 1 1 5 97 6 1 5 5 52 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 49 77 0 1 1 5 97 6 1 5 5 52 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 26 17 19 36 34 18 7 9 27
CALL[ ]	/* CallFunction */";
};
width = 320;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(286,60,o),
(286,115,qs),
(286,156,o),
(239,214,o),
(199,222,q),
(275,291,l),
(275,353,l),
(40,353,l),
(40,285,l),
(172,285,l),
(79,201,l),
(122,151,l),
(142,163,o),
(159,163,qs),
(182,163,o),
(212,137,o),
(212,114,qs),
(212,89,o),
(184,63,o),
(159,63,qs),
(134,63,o),
(105,90,o),
(105,112,q),
(30,112,l),
(30,56,o),
(101,-5,o),
(159,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 3 4 21 15 2 2 3 14 1 0 2 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 3 3 4 95 0 4 4 49 77 0 1 1 5 98 6 1 5 5 52 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 3 3 4 95 0 4 4 49 77 0 1 1 5 98 6 1 5 5 52 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 49 77 0 1 1 5 98 6 1 5 5 52 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 26 17 19 36 34 18 7 9 27
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(286,59,o),
(286,114,qs),
(286,155,o),
(237,214,o),
(195,221,q),
(275,294,l),
(275,353,l),
(42,353,l),
(42,289,l),
(180,289,l),
(82,201,l),
(123,154,l),
(141,165,o),
(160,165,qs),
(184,165,o),
(216,138,o),
(216,113,qs),
(216,87,o),
(186,59,o),
(160,59,qs),
(133,59,o),
(102,88,o),
(102,111,q),
(31,111,l),
(32,56,o),
(102,-5,o),
(160,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 3 4 21 15 2 2 3 14 1 0 2 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 0 3 2 114 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 49 77 0 1 1 5 97 6 1 5 5 52 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 49 77 0 1 1 5 97 6 1 5 5 52 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 26 17 19 36 34 18 7 9 27
CALL[ ]	/* CallFunction */";
};
width = 317;
}
);
note = uni2083;
unicode = 8323;
},
{
glyphname = uni2084;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,0,l),
(249,65,l),
(289,65,l),
(289,127,l),
(249,127,l),
(249,217,l),
(182,217,l),
(182,127,l),
(97,127,l),
(209,353,l),
(138,353,l),
(20,120,l),
(20,65,l),
(178,65,l),
(178,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 0 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 2 2 3 114 4 1 2 5 1 0 6 2 0 104 0 1 1 49 77 0 6 6 50 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 49 77 0 6 6 50 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 9 29
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(247,0,l),
(247,66,l),
(288,66,l),
(288,122,l),
(247,122,l),
(247,213,l),
(187,213,l),
(187,122,l),
(90,122,l),
(204,353,l),
(140,353,l),
(21,117,l),
(21,66,l),
(183,66,l),
(183,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 0 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 2 2 3 114 4 1 2 5 1 0 6 2 0 104 0 1 1 49 77 0 6 6 50 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 49 77 0 6 6 50 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 9 29
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(250,0,l),
(250,63,l),
(289,63,l),
(289,132,l),
(250,132,l),
(250,220,l),
(177,220,l),
(177,132,l),
(104,132,l),
(213,353,l),
(135,353,l),
(19,122,l),
(19,63,l),
(173,63,l),
(173,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 0 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 2 2 3 114 4 1 2 5 1 0 6 2 0 104 0 1 1 49 77 0 6 6 50 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 49 77 0 6 6 50 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 9 29
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(249,0,l),
(249,64,l),
(289,64,l),
(289,129,l),
(249,129,l),
(249,218,l),
(180,218,l),
(180,129,l),
(99,129,l),
(210,353,l),
(137,353,l),
(20,120,l),
(20,64,l),
(176,64,l),
(176,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 0 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 2 2 3 114 4 1 2 5 1 0 6 2 0 104 0 1 1 49 77 0 6 6 50 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 49 77 0 6 6 50 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 9 29
CALL[ ]	/* CallFunction */";
};
width = 304;
}
);
note = uni2084;
unicode = 8324;
},
{
glyphname = uni2085;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,-5,o),
(283,67,o),
(283,123,qs),
(283,175,o),
(221,245,o),
(168,245,qs),
(128,245,o),
(102,224,q),
(115,291,l),
(260,291,l),
(260,353,l),
(62,353,l),
(31,149,l),
(99,149,l),
(107,167,o),
(137,187,o),
(157,187,qs),
(183,187,o),
(215,152,o),
(215,123,qs),
(215,94,o),
(182,57,o),
(156,57,qs),
(133,57,o),
(101,82,o),
(96,103,q),
(27,103,l),
(30,55,o),
(99,-5,o),
(156,-5,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 0 5 3 114 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 49 77 0 1 1 7 97 8 1 7 7 52 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 49 77 0 1 1 7 97 8 1 7 7 52 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 29 0 28 34 17 17 18 36 34 18 9 9 29
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(211,-5,o),
(282,66,o),
(282,122,qs),
(282,173,o),
(221,243,o),
(168,243,qs),
(145,243,o),
(107,228,o),
(95,215,q),
(111,297,l),
(258,297,l),
(258,353,l),
(63,353,l),
(33,152,l),
(95,152,l),
(102,169,o),
(135,191,o),
(157,191,qs),
(185,191,o),
(220,153,o),
(220,122,qs),
(220,91,o),
(184,50,o),
(156,50,qs),
(131,50,o),
(96,78,o),
(91,100,q),
(28,100,l),
(30,57,o),
(98,-5,o),
(156,-5,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 0 5 3 114 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 49 77 0 1 1 7 97 8 1 7 7 52 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 49 77 0 1 1 7 97 8 1 7 7 52 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 30 0 29 35 17 17 18 36 34 18 9 9 29
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(212,-5,o),
(284,68,o),
(284,124,qs),
(284,177,o),
(222,247,o),
(167,247,qs),
(133,247,o),
(109,232,q),
(119,284,l),
(261,284,l),
(261,353,l),
(60,353,l),
(29,145,l),
(102,145,l),
(118,182,o),
(157,182,qs),
(180,182,o),
(210,150,o),
(210,124,qs),
(210,97,o),
(179,63,o),
(156,63,qs),
(135,63,o),
(105,86,o),
(101,105,q),
(25,105,l),
(29,53,o),
(99,-5,o),
(156,-5,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 0 5 3 114 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 49 77 0 1 1 7 97 8 1 7 7 52 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 49 77 0 1 1 7 97 8 1 7 7 52 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 28 0 27 34 17 17 17 36 34 18 9 9 29
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(212,-5,o),
(283,67,o),
(283,123,qs),
(283,176,o),
(221,246,o),
(167,246,qs),
(131,246,o),
(104,226,q),
(116,288,l),
(260,288,l),
(260,353,l),
(61,353,l),
(30,147,l),
(100,147,l),
(108,165,o),
(137,185,o),
(157,185,qs),
(182,185,o),
(213,151,o),
(213,123,qs),
(213,95,o),
(181,59,o),
(156,59,qs),
(134,59,o),
(102,83,o),
(98,103,q),
(26,103,l),
(30,54,o),
(99,-5,o),
(156,-5,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 0 5 3 114 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 49 77 0 1 1 7 97 8 1 7 7 52 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 49 77 0 1 1 7 97 8 1 7 7 52 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 29 0 28 34 17 17 18 36 34 18 9 9 29
CALL[ ]	/* CallFunction */";
};
width = 312;
}
);
note = uni2085;
unicode = 8325;
},
{
glyphname = uni2086;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(283,66,o),
(283,115,qs),
(283,166,o),
(220,231,o),
(176,231,qs),
(153,231,o),
(112,210,o),
(99,192,q),
(101,242,o),
(133,299,o),
(163,299,qs),
(203,299,o),
(211,256,q),
(277,256,l),
(272,302,o),
(211,358,o),
(163,358,qs),
(95,358,o),
(29,245,o),
(29,165,qs),
(29,91,o),
(98,-5,o),
(165,-5,qs)
);
},
{
closed = 1;
nodes = (
(138,57,o),
(107,89,o),
(107,114,qs),
(107,137,o),
(138,170,o),
(161,170,qs),
(185,170,o),
(215,138,o),
(215,113,qs),
(215,88,o),
(185,57,o),
(162,57,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
14 1 5 3 1 76 0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 51 77 8 1 6 6 4 97 7 1 4 4 52 4 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 33 18 36 9 9 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(216,-5,o),
(282,66,o),
(282,114,qs),
(282,160,o),
(222,228,o),
(176,228,qs),
(149,228,o),
(104,201,o),
(93,180,q),
(94,242,o),
(130,305,o),
(162,305,qs),
(206,305,o),
(216,257,q),
(275,257,l),
(270,302,o),
(209,358,o),
(163,358,qs),
(95,358,o),
(30,246,o),
(30,165,qs),
(30,91,o),
(98,-5,o),
(165,-5,qs)
);
},
{
closed = 1;
nodes = (
(135,50,o),
(101,85,o),
(101,112,qs),
(101,138,o),
(135,173,o),
(160,173,qs),
(187,173,o),
(220,139,o),
(220,111,qs),
(220,85,o),
(187,50,o),
(161,50,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
14 1 5 3 1 76 0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 51 77 8 1 6 6 4 97 7 1 4 4 52 4 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 33 18 36 9 9 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(218,-5,o),
(284,66,o),
(284,116,qs),
(284,171,o),
(218,233,o),
(175,233,qs),
(156,233,o),
(119,218,o),
(105,204,q),
(113,292,o),
(163,292,qs),
(198,292,o),
(206,254,q),
(278,254,l),
(273,301,o),
(212,358,o),
(163,358,qs),
(94,358,o),
(28,244,o),
(28,165,qs),
(28,92,o),
(97,-5,o),
(165,-5,qs)
);
},
{
closed = 1;
nodes = (
(140,63,o),
(112,92,o),
(112,115,qs),
(112,137,o),
(140,166,o),
(161,166,qs),
(183,166,o),
(210,137,o),
(210,114,qs),
(210,92,o),
(183,63,o),
(162,63,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
13 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 3 2 1 114 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 51 77 8 1 6 6 4 97 7 1 4 4 52 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 51 77 8 1 6 6 4 97 7 1 4 4 52 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
23 23 0 0 23 34 23 33 29 27 0 22 0 21 35 33 18 36 9 9 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(283,66,o),
(283,115,qs),
(283,168,o),
(219,231,o),
(175,231,qs),
(154,231,o),
(114,212,o),
(101,196,q),
(103,242,o),
(134,296,o),
(163,296,qs),
(201,296,o),
(209,255,q),
(277,255,l),
(272,301,o),
(211,358,o),
(163,358,qs),
(95,358,o),
(29,245,o),
(29,165,qs),
(29,91,o),
(97,-5,o),
(165,-5,qs)
);
},
{
closed = 1;
nodes = (
(139,59,o),
(108,90,o),
(108,114,qs),
(108,137,o),
(138,168,o),
(161,168,qs),
(184,168,o),
(213,138,o),
(213,113,qs),
(213,89,o),
(185,59,o),
(162,59,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
14 1 5 3 1 76 0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 51 77 8 1 6 6 4 97 7 1 4 4 52 4 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 33 18 36 9 9 26
CALL[ ]	/* CallFunction */";
};
width = 312;
}
);
note = uni2086;
unicode = 8326;
},
{
glyphname = uni2087;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,0,l),
(289,303,l),
(289,353,l),
(29,353,l),
(29,291,l),
(213,291,l),
(76,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 0 0 1 95 0 1 1 49 77 0 2 2 50 2 78 18 17 16 3 9 25
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(147,0,l),
(288,307,l),
(288,353,l),
(30,353,l),
(30,298,l),
(220,298,l),
(80,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 0 0 1 95 0 1 1 49 77 0 2 2 50 2 78 18 17 16 3 9 25
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(152,-1,l),
(290,299,l),
(290,352,l),
(28,352,l),
(28,284,l),
(205,284,l),
(71,-1,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 0 0 1 95 0 1 1 49 77 0 2 2 50 2 78 18 17 16 3 9 25
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(150,-1,l),
(289,302,l),
(289,352,l),
(29,352,l),
(29,289,l),
(210,289,l),
(74,-1,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 0 0 1 95 0 1 1 49 77 0 2 2 50 2 78 18 17 16 3 9 25
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = uni2087;
unicode = 8327;
},
{
glyphname = uni2088;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,-5,o),
(276,52,o),
(276,101,qs),
(276,131,o),
(249,178,o),
(224,190,q),
(244,201,o),
(268,240,o),
(268,263,qs),
(268,307,o),
(202,358,o),
(153,358,qs),
(104,358,o),
(37,307,o),
(37,263,qs),
(37,240,o),
(60,201,o),
(81,190,q),
(56,177,o),
(29,131,o),
(29,101,qs),
(29,54,o),
(100,-5,o),
(153,-5,qs)
);
},
{
closed = 1;
nodes = (
(126,56,o),
(98,82,o),
(98,106,qs),
(98,131,o),
(127,158,o),
(153,158,qs),
(179,158,o),
(207,131,o),
(207,106,qs),
(207,82,o),
(178,56,o),
(153,56,qs)
);
},
{
closed = 1;
nodes = (
(132,212,o),
(107,235,o),
(107,255,qs),
(107,277,o),
(131,300,o),
(153,300,qs),
(174,300,o),
(199,276,o),
(199,255,qs),
(199,236,o),
(173,212,o),
(153,212,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
17 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 51 77 7 1 3 3 1 97 6 1 1 1 52 1 78 36 36 24 24 0 0 36 47 36 46 42 40 24 35 24 34 30 28 0 23 0 22 42 9 9 23
CALL[ ]	/* CallFunction */";
};
width = 305;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(203,-5,o),
(275,51,o),
(275,99,qs),
(275,130,o),
(245,179,o),
(217,190,q),
(240,200,o),
(267,240,o),
(267,264,qs),
(267,307,o),
(201,358,o),
(153,358,qs),
(105,358,o),
(39,307,o),
(39,264,qs),
(39,240,o),
(65,200,o),
(88,190,q),
(60,178,o),
(30,130,o),
(30,99,qs),
(30,52,o),
(101,-5,o),
(153,-5,qs)
);
},
{
closed = 1;
nodes = (
(124,49,o),
(93,79,o),
(93,104,qs),
(93,131,o),
(126,161,o),
(154,161,qs),
(181,161,o),
(213,131,o),
(213,104,qs),
(213,78,o),
(181,49,o),
(154,49,qs)
);
},
{
closed = 1;
nodes = (
(130,209,o),
(102,235,o),
(102,257,qs),
(102,280,o),
(129,306,o),
(153,306,qs),
(176,306,o),
(204,280,o),
(204,257,qs),
(204,235,o),
(176,209,o),
(153,209,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
17 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 51 77 7 1 3 3 1 97 6 1 1 1 52 1 78 36 36 24 24 0 0 36 47 36 46 42 40 24 35 24 34 30 28 0 23 0 22 42 9 9 23
CALL[ ]	/* CallFunction */";
};
width = 305;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(204,-5,o),
(277,53,o),
(277,102,qs),
(277,130,o),
(253,177,o),
(230,189,q),
(248,201,o),
(269,239,o),
(269,261,qs),
(269,306,o),
(202,358,o),
(152,358,qs),
(102,358,o),
(35,306,o),
(35,261,qs),
(35,216,o),
(74,189,q),
(52,176,o),
(27,131,o),
(27,102,qs),
(27,55,o),
(97,-5,o),
(152,-5,qs)
);
},
{
closed = 1;
nodes = (
(129,62,o),
(103,85,o),
(103,107,qs),
(103,129,o),
(129,154,o),
(152,154,qs),
(176,154,o),
(201,130,o),
(201,107,qs),
(201,85,o),
(174,62,o),
(152,62,qs)
);
},
{
closed = 1;
nodes = (
(133,215,o),
(111,236,o),
(111,253,qs),
(111,272,o),
(132,293,o),
(152,293,qs),
(171,293,o),
(193,272,o),
(193,253,qs),
(193,236,o),
(171,215,o),
(152,215,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
16 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 51 77 7 1 3 3 1 97 6 1 1 1 52 1 78 35 35 23 23 0 0 35 46 35 45 41 39 23 34 23 33 29 27 0 22 0 21 41 9 9 23
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(203,-5,o),
(276,52,o),
(276,101,qs),
(276,130,o),
(251,177,o),
(226,189,q),
(245,200,o),
(268,239,o),
(268,262,qs),
(268,307,o),
(201,358,o),
(152,358,qs),
(103,358,o),
(36,307,o),
(36,262,qs),
(36,239,o),
(59,201,o),
(79,189,q),
(55,177,o),
(28,131,o),
(28,101,qs),
(28,54,o),
(98,-5,o),
(152,-5,qs)
);
},
{
closed = 1;
nodes = (
(127,58,o),
(100,83,o),
(100,106,qs),
(100,130,o),
(128,156,o),
(153,156,qs),
(178,156,o),
(205,130,o),
(205,106,qs),
(205,83,o),
(177,58,o),
(153,58,qs)
);
},
{
closed = 1;
nodes = (
(132,213,o),
(108,235,o),
(108,254,qs),
(108,275,o),
(131,297,o),
(152,297,qs),
(173,297,o),
(197,274,o),
(197,254,qs),
(197,235,o),
(172,213,o),
(152,213,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
17 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 51 77 7 1 3 3 1 97 6 1 1 1 52 1 78 36 36 24 24 0 0 36 47 36 46 42 40 24 35 24 34 30 28 0 23 0 22 42 9 9 23
CALL[ ]	/* CallFunction */";
};
width = 304;
}
);
note = uni2088;
unicode = 8328;
},
{
glyphname = uni2089;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(284,108,o),
(284,188,qs),
(284,262,o),
(215,358,o),
(148,358,qs),
(96,358,o),
(29,287,o),
(29,238,qs),
(29,191,o),
(91,123,o),
(137,123,qs),
(160,123,o),
(201,144,o),
(214,161,q),
(212,111,o),
(180,55,o),
(150,55,qs),
(110,55,o),
(102,99,q),
(36,99,l),
(41,52,o),
(102,-5,o),
(150,-5,qs)
);
},
{
closed = 1;
nodes = (
(128,184,o),
(98,215,o),
(98,241,qs),
(98,265,o),
(128,297,o),
(151,297,qs),
(175,297,o),
(206,265,o),
(206,240,qs),
(206,216,o),
(175,184,o),
(152,184,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
8 1 2 6 1 76 0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 51 77 0 1 1 4 97 7 1 4 4 52 4 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 36 33 18 9 9 26
CALL[ ]	/* CallFunction */";
};
width = 313;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(282,107,o),
(282,188,qs),
(282,262,o),
(214,358,o),
(147,358,qs),
(96,358,o),
(30,287,o),
(30,239,qs),
(30,193,o),
(90,125,o),
(136,125,qs),
(163,125,o),
(208,152,o),
(219,173,q),
(218,111,o),
(182,48,o),
(150,48,qs),
(106,48,o),
(96,96,q),
(37,96,l),
(42,51,o),
(103,-5,o),
(149,-5,qs)
);
},
{
closed = 1;
nodes = (
(125,180,o),
(92,214,o),
(92,242,qs),
(92,268,o),
(125,303,o),
(151,303,qs),
(177,303,o),
(211,268,o),
(211,241,qs),
(211,215,o),
(177,180,o),
(152,180,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
8 1 2 6 1 76 0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 51 77 0 1 1 4 97 7 1 4 4 52 4 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 36 33 18 9 9 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(285,108,o),
(285,188,qs),
(285,261,o),
(216,358,o),
(148,358,qs),
(95,358,o),
(28,287,o),
(28,237,qs),
(28,188,o),
(91,120,o),
(138,120,qs),
(157,120,o),
(194,135,o),
(208,149,q),
(200,61,o),
(150,61,qs),
(114,61,o),
(107,101,q),
(35,101,l),
(40,53,o),
(100,-5,o),
(150,-5,qs)
);
},
{
closed = 1;
nodes = (
(130,187,o),
(103,216,o),
(103,239,qs),
(103,261,o),
(130,290,o),
(151,290,qs),
(173,290,o),
(201,261,o),
(201,238,qs),
(201,216,o),
(173,187,o),
(152,187,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 2 1 1 0 114 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 51 77 0 1 1 4 98 7 1 4 4 52 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 51 77 0 1 1 4 98 7 1 4 4 52 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
23 23 0 0 23 34 23 33 29 27 0 22 0 21 36 35 33 18 9 9 26
CALL[ ]	/* CallFunction */";
};
width = 313;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(217,-5,o),
(284,108,o),
(284,188,qs),
(284,262,o),
(215,358,o),
(148,358,qs),
(96,358,o),
(29,287,o),
(29,238,qs),
(29,190,o),
(90,122,o),
(137,122,qs),
(159,122,o),
(199,141,o),
(212,157,q),
(210,111,o),
(179,57,o),
(150,57,qs),
(112,57,o),
(103,99,q),
(36,99,l),
(41,52,o),
(101,-5,o),
(150,-5,qs)
);
},
{
closed = 1;
nodes = (
(129,185,o),
(99,215,o),
(99,240,qs),
(99,264,o),
(128,294,o),
(151,294,qs),
(174,294,o),
(204,263,o),
(204,239,qs),
(204,216,o),
(174,185,o),
(152,185,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
8 1 2 6 1 76 0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 51 77 0 1 1 4 97 7 1 4 4 52 4 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 36 33 18 9 9 26
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = uni2089;
unicode = 8329;
},
{
glyphname = uni2070;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,342,o),
(295,441,o),
(295,524,qs),
(295,607,o),
(231,705,o),
(162,705,qs),
(93,705,o),
(29,605,o),
(29,524,qs),
(29,443,o),
(93,342,o),
(162,342,qs)
);
},
{
closed = 1;
nodes = (
(133,406,o),
(100,463,o),
(100,524,qs),
(100,584,o),
(133,642,o),
(162,642,qs),
(195,642,o),
(224,576,o),
(224,524,qs),
(224,472,o),
(195,406,o),
(162,406,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 59 77 5 1 3 3 1 97 4 1 1 1 60 1 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 10 23
CALL[ ]	/* CallFunction */";
};
width = 324;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(231,342,o),
(294,440,o),
(294,524,qs),
(294,607,o),
(230,705,o),
(162,705,qs),
(94,705,o),
(30,606,o),
(30,524,qs),
(30,442,o),
(94,342,o),
(162,342,qs)
);
},
{
closed = 1;
nodes = (
(128,399,o),
(95,465,o),
(95,524,qs),
(95,583,o),
(128,648,o),
(162,648,qs),
(196,648,o),
(229,583,o),
(229,524,qs),
(229,465,o),
(196,399,o),
(162,399,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 59 77 5 1 3 3 1 97 4 1 1 1 60 1 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 10 23
CALL[ ]	/* CallFunction */";
};
width = 324;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(232,342,o),
(296,442,o),
(296,524,qs),
(296,605,o),
(232,705,o),
(162,705,qs),
(93,705,o),
(28,604,o),
(28,524,qs),
(28,443,o),
(92,342,o),
(162,342,qs)
);
},
{
closed = 1;
nodes = (
(138,412,o),
(105,461,o),
(105,524,qs),
(105,586,o),
(138,635,o),
(162,635,qs),
(218,635,o),
(218,524,qs),
(218,412,o),
(162,412,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 59 77 5 1 3 3 1 97 4 1 1 1 60 1 78 12 12 0 0 12 21 12 20 16 14 0 11 0 10 36 6 10 23
CALL[ ]	/* CallFunction */";
};
width = 324;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(231,342,o),
(295,441,o),
(295,524,qs),
(295,606,o),
(231,705,o),
(162,705,qs),
(93,705,o),
(29,605,o),
(29,524,qs),
(29,442,o),
(93,342,o),
(162,342,qs)
);
},
{
closed = 1;
nodes = (
(102,408,o),
(102,524,qs),
(102,585,o),
(135,639,o),
(162,639,qs),
(194,639,o),
(222,574,o),
(222,524,qs),
(222,474,o),
(194,408,o),
(162,408,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 97 0 0 0 59 77 5 1 3 3 1 97 4 1 1 1 60 1 78 12 12 0 0 12 22 12 21 18 16 0 11 0 10 36 6 10 23
CALL[ ]	/* CallFunction */";
};
width = 324;
}
);
note = uni2070;
unicode = 8304;
},
{
glyphname = uni00B9;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(283,347,l),
(283,409,l),
(201,409,l),
(201,700,l),
(164,700,l),
(44,656,l),
(44,601,l),
(134,621,l),
(134,409,l),
(41,409,l),
(41,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 3 2 3 0 1 1 76 0 1 1 57 77 2 1 0 0 3 96 0 3 3 58 3 78 17 17 20 16 4 10 26
CALL[ ]	/* CallFunction */";
};
width = 311;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(281,347,l),
(281,402,l),
(198,402,l),
(198,700,l),
(164,700,l),
(45,656,l),
(45,607,l),
(137,628,l),
(137,402,l),
(42,402,l),
(42,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 3 2 3 0 1 1 76 0 1 1 57 77 2 1 0 0 3 96 0 3 3 58 3 78 17 17 20 16 4 10 26
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(284,347,l),
(284,415,l),
(204,415,l),
(204,700,l),
(163,700,l),
(43,656,l),
(43,594,l),
(130,614,l),
(130,415,l),
(40,415,l),
(40,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 3 2 3 0 1 1 76 0 1 1 57 77 2 1 0 0 3 96 0 3 3 58 3 78 17 17 20 16 4 10 26
CALL[ ]	/* CallFunction */";
};
width = 306;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(283,347,l),
(283,411,l),
(202,411,l),
(202,700,l),
(163,700,l),
(44,656,l),
(44,598,l),
(132,619,l),
(132,411,l),
(41,411,l),
(41,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 3 2 3 0 1 1 76 0 1 1 57 77 2 1 0 0 3 96 0 3 3 58 3 78 17 17 20 16 4 10 26
CALL[ ]	/* CallFunction */";
};
width = 309;
}
);
note = uni00B9;
unicode = 185;
},
{
glyphname = uni00B2;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,347,l),
(277,347,l),
(277,409,l),
(128,409,l),
(192,473,ls),
(233,515,o),
(268,565,o),
(268,598,qs),
(268,647,o),
(208,705,o),
(153,705,qs),
(99,705,o),
(33,644,o),
(32,588,q),
(101,588,l),
(101,612,o),
(127,645,o),
(152,645,qs),
(174,645,o),
(199,619,o),
(199,597,qs),
(199,578,o),
(168,541,o),
(128,499,qs),
(32,398,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
24 1 4 3 1 76 0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 59 77 0 3 3 4 95 0 4 4 58 4 78 17 22 34 18 37 5 10 27
CALL[ ]	/* CallFunction */";
};
width = 311;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(33,347,l),
(275,347,l),
(275,402,l),
(118,402,l),
(186,470,ls),
(220,505,o),
(246,536,o),
(267,577,o),
(267,600,qs),
(267,646,o),
(209,705,o),
(153,705,qs),
(99,705,o),
(34,645,o),
(33,589,q),
(96,589,l),
(96,615,o),
(125,651,o),
(151,651,qs),
(175,651,o),
(204,622,o),
(204,599,qs),
(204,579,o),
(172,538,o),
(136,502,qs),
(121,486,l),
(33,394,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
26 1 4 3 1 76 0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 59 77 0 3 3 4 95 0 4 4 58 4 78 17 23 34 18 38 5 10 27
CALL[ ]	/* CallFunction */";
};
width = 310;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(30,347,l),
(278,347,l),
(278,415,l),
(138,415,l),
(197,475,ls),
(235,513,o),
(269,564,o),
(269,596,qs),
(269,648,o),
(206,705,o),
(153,705,qs),
(98,705,o),
(32,642,o),
(31,586,q),
(106,586,l),
(106,607,o),
(128,638,o),
(152,638,qs),
(171,638,o),
(194,615,o),
(194,595,qs),
(194,579,o),
(166,543,o),
(135,511,qs),
(30,402,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
24 1 4 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 3 0 1 114 0 0 0 2 97 0 2 2 59 77 0 3 3 4 95 0 4 4 58 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 59 77 0 3 3 4 95 0 4 4 58 4 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
17 22 34 18 37 5 10 27
CALL[ ]	/* CallFunction */";
};
width = 311;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(31,347,l),
(277,347,l),
(277,411,l),
(131,411,l),
(193,473,ls),
(233,514,o),
(268,565,o),
(268,597,qs),
(268,647,o),
(207,705,o),
(153,705,qs),
(99,705,o),
(33,643,o),
(32,587,q),
(103,587,l),
(103,610,o),
(127,642,o),
(152,642,qs),
(173,642,o),
(197,617,o),
(197,596,qs),
(197,579,o),
(167,541,o),
(130,503,qs),
(97,468,l),
(31,399,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
25 1 4 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 3 0 1 114 0 0 0 2 97 0 2 2 59 77 0 3 3 4 95 0 4 4 58 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 59 77 0 3 3 4 95 0 4 4 58 4 78
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
17 22 34 18 38 5 10 27
CALL[ ]	/* CallFunction */";
};
width = 311;
}
);
note = uni00B2;
unicode = 178;
},
{
glyphname = uni00B3;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(286,406,o),
(286,461,qs),
(286,503,o),
(237,561,o),
(193,568,q),
(275,643,l),
(275,700,l),
(43,700,l),
(43,639,l),
(184,639,l),
(84,549,l),
(123,503,l),
(143,514,o),
(160,514,qs),
(186,514,o),
(218,486,o),
(218,460,qs),
(218,433,o),
(187,404,o),
(160,404,qs),
(133,404,o),
(101,434,o),
(101,458,q),
(32,458,l),
(33,403,o),
(103,342,o),
(160,342,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 3 4 21 15 2 2 3 14 1 0 2 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 0 3 2 114 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 57 77 0 1 1 5 97 6 1 5 5 60 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 57 77 0 1 1 5 97 6 1 5 5 60 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 26 17 19 36 34 18 7 10 27
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(286,404,o),
(286,459,qs),
(286,502,o),
(234,562,o),
(186,566,q),
(275,647,l),
(275,700,l),
(45,700,l),
(45,645,l),
(196,645,l),
(88,549,l),
(124,507,l),
(142,517,o),
(161,517,qs),
(190,517,o),
(224,487,o),
(224,459,qs),
(224,429,o),
(190,397,o),
(161,397,qs),
(131,397,o),
(97,430,o),
(97,457,q),
(34,457,l),
(36,402,o),
(104,342,o),
(161,342,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 3 4 21 15 2 2 3 14 1 0 2 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 0 3 2 114 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 57 77 0 1 1 5 97 6 1 5 5 60 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 57 77 0 1 1 5 97 6 1 5 5 60 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 26 17 19 36 34 18 7 10 27
CALL[ ]	/* CallFunction */";
};
width = 320;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(286,407,o),
(286,462,qs),
(286,503,o),
(239,561,o),
(199,569,q),
(275,638,l),
(275,700,l),
(40,700,l),
(40,632,l),
(172,632,l),
(79,548,l),
(122,498,l),
(142,510,o),
(159,510,qs),
(182,510,o),
(212,484,o),
(212,461,qs),
(212,436,o),
(184,410,o),
(159,410,qs),
(134,410,o),
(105,437,o),
(105,459,q),
(30,459,l),
(30,403,o),
(101,342,o),
(159,342,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 3 4 21 15 2 2 3 14 1 0 2 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 114 0 0 1 1 0 112 0 3 3 4 95 0 4 4 57 77 0 1 1 5 98 6 1 5 5 60 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 0 3 2 0 128 0 0 1 1 0 112 0 3 3 4 95 0 4 4 57 77 0 1 1 5 98 6 1 5 5 60 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 57 77 0 1 1 5 98 6 1 5 5 60 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 26 17 19 36 34 18 7 10 27
CALL[ ]	/* CallFunction */";
};
width = 316;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(286,406,o),
(286,461,qs),
(286,502,o),
(237,561,o),
(195,568,q),
(275,641,l),
(275,700,l),
(42,700,l),
(42,636,l),
(180,636,l),
(82,548,l),
(123,501,l),
(141,512,o),
(160,512,qs),
(184,512,o),
(216,485,o),
(216,460,qs),
(216,434,o),
(186,406,o),
(160,406,qs),
(133,406,o),
(102,435,o),
(102,458,q),
(31,458,l),
(32,403,o),
(102,342,o),
(160,342,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
20 1 3 4 21 15 2 2 3 14 1 0 2 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 0 3 2 114 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 57 77 0 1 1 5 97 6 1 5 5 60 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 1 3 0 1 126 0 3 3 4 95 0 4 4 57 77 0 1 1 5 97 6 1 5 5 60 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 26 17 19 36 34 18 7 10 27
CALL[ ]	/* CallFunction */";
};
width = 317;
}
);
note = uni00B3;
unicode = 179;
},
{
glyphname = uni2074;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(248,347,l),
(248,412,l),
(289,412,l),
(289,474,l),
(248,474,l),
(248,563,l),
(183,563,l),
(183,474,l),
(96,474,l),
(208,700,l),
(138,700,l),
(20,466,l),
(20,412,l),
(179,412,l),
(179,347,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 0 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 2 2 3 114 4 1 2 5 1 0 6 2 0 104 0 1 1 57 77 0 6 6 58 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 57 77 0 6 6 58 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 10 29
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(247,347,l),
(247,413,l),
(288,413,l),
(288,469,l),
(247,469,l),
(247,560,l),
(187,560,l),
(187,469,l),
(90,469,l),
(204,700,l),
(140,700,l),
(21,464,l),
(21,413,l),
(183,413,l),
(183,347,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 0 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 2 2 3 114 4 1 2 5 1 0 6 2 0 104 0 1 1 57 77 0 6 6 58 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 57 77 0 6 6 58 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 10 29
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(249,347,l),
(249,410,l),
(289,410,l),
(289,478,l),
(249,478,l),
(249,566,l),
(178,566,l),
(178,478,l),
(102,478,l),
(211,700,l),
(135,700,l),
(19,468,l),
(19,410,l),
(174,410,l),
(174,347,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 0 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 2 2 3 114 4 1 2 5 1 0 6 2 0 104 0 1 1 57 77 0 6 6 58 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 57 77 0 6 6 58 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 10 29
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(248,347,l),
(248,411,l),
(289,411,l),
(289,475,l),
(248,475,l),
(248,564,l),
(181,564,l),
(181,475,l),
(98,475,l),
(209,700,l),
(137,700,l),
(20,467,l),
(20,411,l),
(177,411,l),
(177,347,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 0 2 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 2 2 3 114 4 1 2 5 1 0 6 2 0 104 0 1 1 57 77 0 6 6 58 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 1 2 1 3 2 128 4 1 2 5 1 0 6 2 0 104 0 1 1 57 77 0 6 6 58 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
17 17 17 17 17 18 16 7 10 29
CALL[ ]	/* CallFunction */";
};
width = 304;
}
);
note = uni2074;
unicode = 8308;
},
{
glyphname = uni2075;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,342,o),
(283,414,o),
(283,470,qs),
(283,522,o),
(221,592,o),
(168,592,qs),
(128,592,o),
(102,571,q),
(115,638,l),
(260,638,l),
(260,700,l),
(62,700,l),
(31,496,l),
(99,496,l),
(107,514,o),
(137,534,o),
(157,534,qs),
(183,534,o),
(215,499,o),
(215,470,qs),
(215,441,o),
(182,404,o),
(156,404,qs),
(133,404,o),
(101,429,o),
(96,450,q),
(27,450,l),
(30,402,o),
(99,342,o),
(156,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 0 5 3 114 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 57 77 0 1 1 7 97 8 1 7 7 60 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 57 77 0 1 1 7 97 8 1 7 7 60 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 29 0 28 34 17 17 18 36 34 18 9 10 29
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(211,342,o),
(282,413,o),
(282,469,qs),
(282,520,o),
(221,590,o),
(168,590,qs),
(145,590,o),
(107,575,o),
(95,562,q),
(111,644,l),
(258,644,l),
(258,700,l),
(63,700,l),
(33,499,l),
(95,499,l),
(102,516,o),
(135,538,o),
(157,538,qs),
(185,538,o),
(220,500,o),
(220,469,qs),
(220,438,o),
(184,397,o),
(156,397,qs),
(131,397,o),
(96,425,o),
(91,447,q),
(28,447,l),
(30,404,o),
(98,342,o),
(156,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 0 5 3 114 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 57 77 0 1 1 7 97 8 1 7 7 60 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 57 77 0 1 1 7 97 8 1 7 7 60 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 30 0 29 35 17 17 18 36 34 18 9 10 29
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(212,342,o),
(284,415,o),
(284,471,qs),
(284,524,o),
(222,594,o),
(167,594,qs),
(133,594,o),
(109,579,q),
(119,631,l),
(261,631,l),
(261,700,l),
(60,700,l),
(29,492,l),
(102,492,l),
(118,529,o),
(157,529,qs),
(180,529,o),
(210,497,o),
(210,471,qs),
(210,444,o),
(179,410,o),
(156,410,qs),
(135,410,o),
(105,433,o),
(101,452,q),
(25,452,l),
(29,400,o),
(99,342,o),
(156,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 0 5 3 114 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 57 77 0 1 1 7 97 8 1 7 7 60 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 57 77 0 1 1 7 97 8 1 7 7 60 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 28 0 27 34 17 17 17 36 34 18 9 10 29
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(212,342,o),
(283,414,o),
(283,470,qs),
(283,523,o),
(221,593,o),
(167,593,qs),
(131,593,o),
(104,573,q),
(116,635,l),
(260,635,l),
(260,700,l),
(61,700,l),
(30,494,l),
(100,494,l),
(108,512,o),
(137,532,o),
(157,532,qs),
(182,532,o),
(213,498,o),
(213,470,qs),
(213,442,o),
(181,406,o),
(156,406,qs),
(134,406,o),
(102,430,o),
(98,450,q),
(26,450,l),
(30,401,o),
(99,342,o),
(156,342,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 0 5 3 114 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 57 77 0 1 1 7 97 8 1 7 7 60 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 6 0 2 3 6 2 105 0 5 5 4 95 0 4 4 57 77 0 1 1 7 97 8 1 7 7 60 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 29 0 28 34 17 17 18 36 34 18 9 10 29
CALL[ ]	/* CallFunction */";
};
width = 312;
}
);
note = uni2075;
unicode = 8309;
},
{
glyphname = uni2076;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(283,413,o),
(283,462,qs),
(283,513,o),
(220,578,o),
(176,578,qs),
(153,578,o),
(112,557,o),
(99,539,q),
(101,589,o),
(133,646,o),
(163,646,qs),
(203,646,o),
(211,603,q),
(277,603,l),
(272,649,o),
(211,705,o),
(163,705,qs),
(95,705,o),
(29,592,o),
(29,512,qs),
(29,438,o),
(98,342,o),
(165,342,qs)
);
},
{
closed = 1;
nodes = (
(138,404,o),
(107,436,o),
(107,461,qs),
(107,484,o),
(138,517,o),
(161,517,qs),
(185,517,o),
(215,485,o),
(215,460,qs),
(215,435,o),
(185,404,o),
(162,404,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
14 1 5 3 1 76 0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 59 77 8 1 6 6 4 97 7 1 4 4 60 4 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 33 18 36 9 10 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(216,342,o),
(282,413,o),
(282,461,qs),
(282,507,o),
(222,575,o),
(176,575,qs),
(149,575,o),
(104,548,o),
(93,527,q),
(94,589,o),
(130,652,o),
(162,652,qs),
(206,652,o),
(216,604,q),
(275,604,l),
(270,649,o),
(209,705,o),
(163,705,qs),
(95,705,o),
(30,593,o),
(30,512,qs),
(30,438,o),
(98,342,o),
(165,342,qs)
);
},
{
closed = 1;
nodes = (
(135,397,o),
(101,432,o),
(101,459,qs),
(101,485,o),
(135,520,o),
(160,520,qs),
(187,520,o),
(220,486,o),
(220,458,qs),
(220,432,o),
(187,397,o),
(161,397,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
14 1 5 3 1 76 0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 59 77 8 1 6 6 4 97 7 1 4 4 60 4 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 33 18 36 9 10 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(218,342,o),
(284,413,o),
(284,463,qs),
(284,518,o),
(218,580,o),
(175,580,qs),
(156,580,o),
(119,565,o),
(105,551,q),
(113,639,o),
(163,639,qs),
(198,639,o),
(206,601,q),
(278,601,l),
(273,648,o),
(212,705,o),
(163,705,qs),
(94,705,o),
(28,591,o),
(28,512,qs),
(28,439,o),
(97,342,o),
(165,342,qs)
);
},
{
closed = 1;
nodes = (
(140,410,o),
(112,439,o),
(112,462,qs),
(112,484,o),
(140,513,o),
(161,513,qs),
(183,513,o),
(210,484,o),
(210,461,qs),
(210,439,o),
(183,410,o),
(162,410,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
13 1 5 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 3 2 1 114 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 59 77 8 1 6 6 4 97 7 1 4 4 60 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 59 77 8 1 6 6 4 97 7 1 4 4 60 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
23 23 0 0 23 34 23 33 29 27 0 22 0 21 35 33 18 36 9 10 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(283,413,o),
(283,462,qs),
(283,515,o),
(219,578,o),
(175,578,qs),
(154,578,o),
(114,559,o),
(101,543,q),
(103,589,o),
(134,643,o),
(163,643,qs),
(201,643,o),
(209,602,q),
(277,602,l),
(272,648,o),
(211,705,o),
(163,705,qs),
(95,705,o),
(29,592,o),
(29,512,qs),
(29,438,o),
(97,342,o),
(165,342,qs)
);
},
{
closed = 1;
nodes = (
(139,406,o),
(108,437,o),
(108,461,qs),
(108,484,o),
(138,515,o),
(161,515,qs),
(184,515,o),
(213,485,o),
(213,460,qs),
(213,436,o),
(185,406,o),
(162,406,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
14 1 5 3 1 76 0 1 2 3 2 1 3 128 0 3 0 5 6 3 5 105 0 2 2 0 97 0 0 0 59 77 8 1 6 6 4 97 7 1 4 4 60 4 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 33 18 36 9 10 26
CALL[ ]	/* CallFunction */";
};
width = 312;
}
);
note = uni2076;
unicode = 8310;
},
{
glyphname = uni2077;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,347,l),
(289,650,l),
(289,700,l),
(29,700,l),
(29,638,l),
(213,638,l),
(76,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 0 0 1 95 0 1 1 57 77 0 2 2 58 2 78 18 17 16 3 10 25
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(147,347,l),
(288,654,l),
(288,700,l),
(30,700,l),
(30,645,l),
(220,645,l),
(80,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 0 0 1 95 0 1 1 57 77 0 2 2 58 2 78 18 17 16 3 10 25
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(152,346,l),
(290,646,l),
(290,699,l),
(28,699,l),
(28,631,l),
(205,631,l),
(71,346,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 0 0 1 95 0 1 1 57 77 0 2 2 58 2 78 18 17 16 3 10 25
CALL[ ]	/* CallFunction */";
};
width = 318;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(150,346,l),
(289,649,l),
(289,699,l),
(29,699,l),
(29,636,l),
(210,636,l),
(74,346,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 0 0 1 95 0 1 1 57 77 0 2 2 58 2 78 18 17 16 3 10 25
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = uni2077;
unicode = 8311;
},
{
glyphname = uni2078;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,342,o),
(276,399,o),
(276,448,qs),
(276,478,o),
(249,525,o),
(224,537,q),
(244,548,o),
(268,587,o),
(268,610,qs),
(268,654,o),
(202,705,o),
(153,705,qs),
(104,705,o),
(37,654,o),
(37,610,qs),
(37,587,o),
(60,548,o),
(81,537,q),
(56,524,o),
(29,478,o),
(29,448,qs),
(29,401,o),
(100,342,o),
(153,342,qs)
);
},
{
closed = 1;
nodes = (
(126,403,o),
(98,429,o),
(98,453,qs),
(98,478,o),
(127,505,o),
(153,505,qs),
(179,505,o),
(207,478,o),
(207,453,qs),
(207,429,o),
(178,403,o),
(153,403,qs)
);
},
{
closed = 1;
nodes = (
(132,559,o),
(107,582,o),
(107,602,qs),
(107,624,o),
(131,647,o),
(153,647,qs),
(174,647,o),
(199,623,o),
(199,602,qs),
(199,583,o),
(173,559,o),
(153,559,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
17 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 59 77 7 1 3 3 1 97 6 1 1 1 60 1 78 36 36 24 24 0 0 36 47 36 46 42 40 24 35 24 34 30 28 0 23 0 22 42 9 10 23
CALL[ ]	/* CallFunction */";
};
width = 305;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(203,342,o),
(275,398,o),
(275,446,qs),
(275,477,o),
(245,526,o),
(217,537,q),
(240,547,o),
(267,587,o),
(267,611,qs),
(267,654,o),
(201,705,o),
(153,705,qs),
(105,705,o),
(39,654,o),
(39,611,qs),
(39,587,o),
(65,547,o),
(88,537,q),
(60,525,o),
(30,477,o),
(30,446,qs),
(30,399,o),
(101,342,o),
(153,342,qs)
);
},
{
closed = 1;
nodes = (
(124,396,o),
(93,426,o),
(93,451,qs),
(93,478,o),
(126,508,o),
(154,508,qs),
(181,508,o),
(213,478,o),
(213,451,qs),
(213,425,o),
(181,396,o),
(154,396,qs)
);
},
{
closed = 1;
nodes = (
(130,556,o),
(102,582,o),
(102,604,qs),
(102,627,o),
(129,653,o),
(153,653,qs),
(176,653,o),
(204,627,o),
(204,604,qs),
(204,582,o),
(176,556,o),
(153,556,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
17 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 59 77 7 1 3 3 1 97 6 1 1 1 60 1 78 36 36 24 24 0 0 36 47 36 46 42 40 24 35 24 34 30 28 0 23 0 22 42 9 10 23
CALL[ ]	/* CallFunction */";
};
width = 305;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(204,342,o),
(277,400,o),
(277,449,qs),
(277,477,o),
(253,524,o),
(230,536,q),
(248,548,o),
(269,586,o),
(269,608,qs),
(269,653,o),
(202,705,o),
(152,705,qs),
(102,705,o),
(35,653,o),
(35,608,qs),
(35,563,o),
(74,536,q),
(52,523,o),
(27,478,o),
(27,449,qs),
(27,402,o),
(97,342,o),
(152,342,qs)
);
},
{
closed = 1;
nodes = (
(129,409,o),
(103,432,o),
(103,454,qs),
(103,476,o),
(129,501,o),
(152,501,qs),
(176,501,o),
(201,477,o),
(201,454,qs),
(201,432,o),
(174,409,o),
(152,409,qs)
);
},
{
closed = 1;
nodes = (
(133,562,o),
(111,583,o),
(111,600,qs),
(111,619,o),
(132,640,o),
(152,640,qs),
(171,640,o),
(193,619,o),
(193,600,qs),
(193,583,o),
(171,562,o),
(152,562,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
16 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 59 77 7 1 3 3 1 97 6 1 1 1 60 1 78 35 35 23 23 0 0 35 46 35 45 41 39 23 34 23 33 29 27 0 22 0 21 41 9 10 23
CALL[ ]	/* CallFunction */";
};
width = 304;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(203,342,o),
(276,399,o),
(276,448,qs),
(276,477,o),
(251,524,o),
(226,536,q),
(245,547,o),
(268,586,o),
(268,609,qs),
(268,654,o),
(201,705,o),
(152,705,qs),
(103,705,o),
(36,654,o),
(36,609,qs),
(36,586,o),
(59,548,o),
(79,536,q),
(55,524,o),
(28,478,o),
(28,448,qs),
(28,401,o),
(98,342,o),
(152,342,qs)
);
},
{
closed = 1;
nodes = (
(127,405,o),
(100,430,o),
(100,453,qs),
(100,477,o),
(128,503,o),
(153,503,qs),
(178,503,o),
(205,477,o),
(205,453,qs),
(205,430,o),
(177,405,o),
(153,405,qs)
);
},
{
closed = 1;
nodes = (
(132,560,o),
(108,582,o),
(108,601,qs),
(108,622,o),
(131,644,o),
(152,644,qs),
(173,644,o),
(197,621,o),
(197,601,qs),
(197,582,o),
(172,560,o),
(152,560,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
17 5 2 2 5 1 76 8 1 5 0 2 3 5 2 105 0 4 4 0 97 0 0 0 59 77 7 1 3 3 1 97 6 1 1 1 60 1 78 36 36 24 24 0 0 36 47 36 46 42 40 24 35 24 34 30 28 0 23 0 22 42 9 10 23
CALL[ ]	/* CallFunction */";
};
width = 304;
}
);
note = uni2078;
unicode = 8312;
},
{
glyphname = uni2079;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(284,455,o),
(284,535,qs),
(284,609,o),
(215,705,o),
(148,705,qs),
(96,705,o),
(29,634,o),
(29,585,qs),
(29,538,o),
(91,470,o),
(137,470,qs),
(160,470,o),
(201,491,o),
(214,508,q),
(212,458,o),
(180,402,o),
(150,402,qs),
(110,402,o),
(102,446,q),
(36,446,l),
(41,399,o),
(102,342,o),
(150,342,qs)
);
},
{
closed = 1;
nodes = (
(128,531,o),
(98,562,o),
(98,588,qs),
(98,612,o),
(128,644,o),
(151,644,qs),
(175,644,o),
(206,612,o),
(206,587,qs),
(206,563,o),
(175,531,o),
(152,531,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
8 1 2 6 1 76 0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 59 77 0 1 1 4 97 7 1 4 4 60 4 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 36 33 18 9 10 26
CALL[ ]	/* CallFunction */";
};
width = 313;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(282,454,o),
(282,535,qs),
(282,609,o),
(214,705,o),
(147,705,qs),
(96,705,o),
(30,634,o),
(30,586,qs),
(30,540,o),
(90,472,o),
(136,472,qs),
(163,472,o),
(208,499,o),
(219,520,q),
(218,458,o),
(182,395,o),
(150,395,qs),
(106,395,o),
(96,443,q),
(37,443,l),
(42,398,o),
(103,342,o),
(149,342,qs)
);
},
{
closed = 1;
nodes = (
(125,527,o),
(92,561,o),
(92,589,qs),
(92,615,o),
(125,650,o),
(151,650,qs),
(177,650,o),
(211,615,o),
(211,588,qs),
(211,562,o),
(177,527,o),
(152,527,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
8 1 2 6 1 76 0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 59 77 0 1 1 4 97 7 1 4 4 60 4 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 36 33 18 9 10 26
CALL[ ]	/* CallFunction */";
};
width = 312;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(285,455,o),
(285,535,qs),
(285,608,o),
(216,705,o),
(148,705,qs),
(95,705,o),
(28,634,o),
(28,584,qs),
(28,535,o),
(91,467,o),
(138,467,qs),
(157,467,o),
(194,482,o),
(208,496,q),
(200,408,o),
(150,408,qs),
(114,408,o),
(107,448,q),
(35,448,l),
(40,400,o),
(100,342,o),
(150,342,qs)
);
},
{
closed = 1;
nodes = (
(130,534,o),
(103,563,o),
(103,586,qs),
(103,608,o),
(130,637,o),
(151,637,qs),
(173,637,o),
(201,608,o),
(201,585,qs),
(201,563,o),
(173,534,o),
(152,534,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 1 2 6 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 2 1 1 0 114 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 59 77 0 1 1 4 98 7 1 4 4 60 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 59 77 0 1 1 4 98 7 1 4 4 60 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
23 23 0 0 23 34 23 33 29 27 0 22 0 21 36 35 33 18 9 10 26
CALL[ ]	/* CallFunction */";
};
width = 313;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(217,342,o),
(284,455,o),
(284,535,qs),
(284,609,o),
(215,705,o),
(148,705,qs),
(96,705,o),
(29,634,o),
(29,585,qs),
(29,537,o),
(90,469,o),
(137,469,qs),
(159,469,o),
(199,488,o),
(212,504,q),
(210,458,o),
(179,404,o),
(150,404,qs),
(112,404,o),
(103,446,q),
(36,446,l),
(41,399,o),
(101,342,o),
(150,342,qs)
);
},
{
closed = 1;
nodes = (
(129,532,o),
(99,562,o),
(99,587,qs),
(99,611,o),
(128,641,o),
(151,641,qs),
(174,641,o),
(204,610,o),
(204,586,qs),
(204,563,o),
(174,532,o),
(152,532,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
8 1 2 6 1 76 0 0 2 1 2 0 1 128 8 1 6 0 2 0 6 2 105 0 5 5 3 97 0 3 3 59 77 0 1 1 4 97 7 1 4 4 60 4 78 24 24 0 0 24 35 24 34 30 28 0 23 0 22 36 36 33 18 9 10 26
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = uni2079;
unicode = 8313;
},
{
glyphname = uni00A0;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
width = 252;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
width = 265;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
width = 238;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
width = 247;
}
);
note = uni00A0;
unicode = 160;
},
{
glyphname = period;
kernLeft = period;
kernRight = period;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(135,-8,o),
(176,33,o),
(176,62,qs),
(176,91,o),
(135,132,o),
(106,132,qs),
(76,132,o),
(35,91,o),
(35,62,qs),
(35,33,o),
(76,-8,o),
(106,-8,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 97 2 1 1 1 40 1 78 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 211;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(122,-5,o),
(155,28,o),
(155,52,qs),
(155,76,o),
(122,109,o),
(98,109,qs),
(73,109,o),
(40,76,o),
(40,52,qs),
(40,28,o),
(73,-5,o),
(98,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 97 2 1 1 1 34 1 78 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 195;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(148,-12,o),
(196,37,o),
(196,71,qs),
(196,106,o),
(148,154,o),
(113,154,qs),
(78,154,o),
(30,106,o),
(30,71,qs),
(30,36,o),
(78,-12,o),
(113,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 97 2 1 1 1 40 1 78 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 226;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(139,-10,o),
(182,34,o),
(182,65,qs),
(182,96,o),
(139,139,o),
(108,139,qs),
(77,139,o),
(33,96,o),
(33,65,qs),
(33,34,o),
(77,-10,o),
(108,-10,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 97 2 1 1 1 40 1 78 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 216;
}
);
note = period;
unicode = 46;
},
{
glyphname = comma;
kernLeft = comma;
kernRight = comma;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(79,-117,l),
(171,118,l),
(66,118,l),
(8,-117,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 204;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(60,-119,l),
(147,102,l),
(60,102,l),
(2,-119,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 178;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(98,-116,l),
(195,133,l),
(71,133,l),
(14,-116,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 230;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(85,-117,l),
(179,123,l),
(67,123,l),
(10,-117,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 213;
}
);
note = comma;
unicode = 44;
},
{
glyphname = colon;
kernLeft = colon;
kernRight = colon;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(138,370,o),
(179,411,o),
(179,440,qs),
(179,469,o),
(138,510,o),
(109,510,qs),
(79,510,o),
(39,469,o),
(39,440,qs),
(39,411,o),
(79,370,o),
(109,370,qs)
);
},
{
closed = 1;
nodes = (
(138,-8,o),
(179,33,o),
(179,62,qs),
(179,91,o),
(138,132,o),
(109,132,qs),
(79,132,o),
(39,91,o),
(39,62,qs),
(39,33,o),
(79,-8,o),
(109,-8,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
4 1 1 1 0 97 0 0 0 42 77 0 2 2 3 97 5 1 3 3 40 3 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 221;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(122,394,o),
(155,427,o),
(155,451,qs),
(155,475,o),
(122,508,o),
(98,508,qs),
(73,508,o),
(40,475,o),
(40,451,qs),
(40,427,o),
(73,394,o),
(98,394,qs)
);
},
{
closed = 1;
nodes = (
(122,-5,o),
(155,28,o),
(155,52,qs),
(155,76,o),
(122,109,o),
(98,109,qs),
(73,109,o),
(40,76,o),
(40,52,qs),
(40,28,o),
(73,-5,o),
(98,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
4 1 1 1 0 97 0 0 0 42 77 0 2 2 3 97 5 1 3 3 34 3 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 199;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(155,346,o),
(203,395,o),
(203,429,qs),
(203,464,o),
(155,512,o),
(120,512,qs),
(85,512,o),
(37,464,o),
(37,429,qs),
(37,394,o),
(85,346,o),
(120,346,qs)
);
},
{
closed = 1;
nodes = (
(155,-12,o),
(203,37,o),
(203,71,qs),
(203,106,o),
(155,154,o),
(120,154,qs),
(85,154,o),
(37,106,o),
(37,71,qs),
(37,36,o),
(85,-12,o),
(120,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
4 1 1 1 0 97 0 0 0 42 77 0 2 2 3 97 5 1 3 3 40 3 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 242;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(144,362,o),
(187,405,o),
(187,436,qs),
(187,467,o),
(144,511,o),
(113,511,qs),
(81,511,o),
(38,468,o),
(38,436,qs),
(38,405,o),
(81,362,o),
(113,362,qs)
);
},
{
closed = 1;
nodes = (
(144,-10,o),
(187,34,o),
(187,65,qs),
(187,96,o),
(144,139,o),
(113,139,qs),
(81,139,o),
(38,96,o),
(38,65,qs),
(38,33,o),
(81,-10,o),
(113,-10,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
4 1 1 1 0 97 0 0 0 42 77 0 2 2 3 97 5 1 3 3 40 3 78 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 228;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
kernLeft = semicolon;
kernRight = semicolon;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,-117,l),
(187,118,l),
(81,118,l),
(24,-117,l)
);
},
{
closed = 1;
nodes = (
(163,370,o),
(204,411,o),
(204,440,qs),
(204,469,o),
(163,510,o),
(134,510,qs),
(104,510,o),
(63,469,o),
(63,440,qs),
(63,411,o),
(104,370,o),
(134,370,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 0 1 99 4 1 3 3 2 97 0 2 2 42 3 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 245;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(81,-119,l),
(168,102,l),
(81,102,l),
(23,-119,l)
);
},
{
closed = 1;
nodes = (
(147,394,o),
(180,427,o),
(180,451,qs),
(180,475,o),
(147,508,o),
(123,508,qs),
(98,508,o),
(65,475,o),
(65,451,qs),
(65,427,o),
(98,394,o),
(123,394,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 0 3 1 3 0 1 128 0 1 1 132 4 1 3 3 2 97 0 2 2 42 3 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 223;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(108,-116,l),
(205,133,l),
(81,133,l),
(24,-116,l)
);
},
{
closed = 1;
nodes = (
(179,346,o),
(227,395,o),
(227,429,qs),
(227,464,o),
(179,512,o),
(144,512,qs),
(109,512,o),
(61,464,o),
(61,429,qs),
(61,394,o),
(109,346,o),
(144,346,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 0 1 99 4 1 3 3 2 97 0 2 2 42 3 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 266;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(99,-117,l),
(193,123,l),
(81,123,l),
(24,-117,l)
);
},
{
closed = 1;
nodes = (
(168,362,o),
(211,405,o),
(211,436,qs),
(211,467,o),
(168,511,o),
(137,511,qs),
(106,511,o),
(62,468,o),
(62,436,qs),
(62,405,o),
(106,362,o),
(137,362,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 0 1 99 4 1 3 3 2 97 0 2 2 42 3 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 252;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = ellipsis;
kernLeft = period;
kernRight = period;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(545,-8,o),
(586,33,o),
(586,62,qs),
(586,91,o),
(545,132,o),
(516,132,qs),
(486,132,o),
(445,91,o),
(445,62,qs),
(445,33,o),
(486,-8,o),
(516,-8,qs)
);
},
{
closed = 1;
nodes = (
(140,-8,o),
(181,33,o),
(181,62,qs),
(181,91,o),
(140,132,o),
(111,132,qs),
(81,132,o),
(40,91,o),
(40,62,qs),
(40,33,o),
(81,-8,o),
(111,-8,qs)
);
},
{
closed = 1;
nodes = (
(342,-8,o),
(383,33,o),
(383,62,qs),
(383,91,o),
(342,132,o),
(313,132,qs),
(283,132,o),
(243,91,o),
(243,62,qs),
(243,33,o),
(283,-8,o),
(313,-8,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
4 2 2 0 0 1 97 8 5 7 3 6 5 1 1 40 1 78 24 24 12 12 0 0 24 35 24 34 30 28 12 23 12 22 18 16 0 11 0 10 36 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 625;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(490,-5,o),
(523,28,o),
(523,52,qs),
(523,76,o),
(490,109,o),
(466,109,qs),
(441,109,o),
(408,76,o),
(408,52,qs),
(408,28,o),
(441,-5,o),
(466,-5,qs)
);
},
{
closed = 1;
nodes = (
(122,-5,o),
(155,28,o),
(155,52,qs),
(155,76,o),
(122,109,o),
(98,109,qs),
(73,109,o),
(40,76,o),
(40,52,qs),
(40,28,o),
(73,-5,o),
(98,-5,qs)
);
},
{
closed = 1;
nodes = (
(306,-5,o),
(339,28,o),
(339,52,qs),
(339,76,o),
(306,109,o),
(282,109,qs),
(257,109,o),
(224,76,o),
(224,52,qs),
(224,28,o),
(257,-5,o),
(282,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
4 2 2 0 0 1 97 8 5 7 3 6 5 1 1 34 1 78 24 24 12 12 0 0 24 35 24 34 30 28 12 23 12 22 18 16 0 11 0 10 36 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 563;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(600,-12,o),
(648,37,o),
(648,71,qs),
(648,106,o),
(600,154,o),
(565,154,qs),
(530,154,o),
(482,106,o),
(482,71,qs),
(482,36,o),
(530,-12,o),
(565,-12,qs)
);
},
{
closed = 1;
nodes = (
(158,-12,o),
(206,37,o),
(206,71,qs),
(206,106,o),
(158,154,o),
(123,154,qs),
(88,154,o),
(40,106,o),
(40,71,qs),
(40,36,o),
(88,-12,o),
(123,-12,qs)
);
},
{
closed = 1;
nodes = (
(379,-12,o),
(427,37,o),
(427,71,qs),
(427,106,o),
(379,154,o),
(344,154,qs),
(309,154,o),
(261,106,o),
(261,71,qs),
(261,36,o),
(309,-12,o),
(344,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
4 2 2 0 0 1 97 8 5 7 3 6 5 1 1 40 1 78 24 24 12 12 0 0 24 35 24 34 30 28 12 23 12 22 18 16 0 11 0 10 36 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 687;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(563,-10,o),
(606,34,o),
(606,65,qs),
(606,96,o),
(563,139,o),
(532,139,qs),
(501,139,o),
(457,96,o),
(457,65,qs),
(457,34,o),
(501,-10,o),
(532,-10,qs)
);
},
{
closed = 1;
nodes = (
(146,-10,o),
(189,34,o),
(189,65,qs),
(189,96,o),
(146,139,o),
(115,139,qs),
(83,139,o),
(40,96,o),
(40,65,qs),
(40,33,o),
(83,-10,o),
(115,-10,qs)
);
},
{
closed = 1;
nodes = (
(355,-10,o),
(398,34,o),
(398,65,qs),
(398,96,o),
(354,139,o),
(323,139,qs),
(292,139,o),
(249,96,o),
(249,65,qs),
(249,33,o),
(292,-10,o),
(323,-10,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
4 2 2 0 0 1 97 8 5 7 3 6 5 1 1 40 1 78 24 24 12 12 0 0 24 35 24 34 30 28 12 23 12 22 18 16 0 11 0 10 36 9 8 23
CALL[ ]	/* CallFunction */";
};
width = 646;
}
);
note = ellipsis;
unicode = 8230;
},
{
glyphname = exclam;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,208,l),
(189,700,l),
(75,700,l),
(87,208,l)
);
},
{
closed = 1;
nodes = (
(163,-8,o),
(204,33,o),
(204,62,qs),
(204,91,o),
(163,132,o),
(134,132,qs),
(104,132,o),
(64,91,o),
(64,62,qs),
(64,33,o),
(104,-8,o),
(134,-8,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 95 0 0 0 33 77 0 2 2 3 97 4 1 3 3 40 3 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 267;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(158,194,l),
(168,700,l),
(77,700,l),
(87,194,l)
);
},
{
closed = 1;
nodes = (
(149,-5,o),
(182,28,o),
(182,52,qs),
(182,76,o),
(149,109,o),
(125,109,qs),
(100,109,o),
(67,76,o),
(67,52,qs),
(67,28,o),
(100,-5,o),
(125,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 95 0 0 0 33 77 0 2 2 3 97 4 1 3 3 34 3 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 248;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(195,221,l),
(210,700,l),
(73,700,l),
(87,221,l)
);
},
{
closed = 1;
nodes = (
(178,-12,o),
(226,37,o),
(226,71,qs),
(226,106,o),
(178,154,o),
(143,154,qs),
(108,154,o),
(60,106,o),
(60,71,qs),
(60,36,o),
(108,-12,o),
(143,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 95 0 0 0 33 77 0 2 2 3 97 4 1 3 3 40 3 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 286;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(183,212,l),
(196,700,l),
(74,700,l),
(87,212,l)
);
},
{
closed = 1;
nodes = (
(168,-10,o),
(211,34,o),
(211,65,qs),
(211,96,o),
(168,139,o),
(137,139,qs),
(106,139,o),
(62,96,o),
(62,65,qs),
(62,34,o),
(106,-10,o),
(137,-10,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 95 0 0 0 33 77 0 2 2 3 97 4 1 3 3 40 3 78 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 273;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = exclamdown;
kernLeft = exclamdown;
kernRight = exclamdown;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(192,-141,l),
(179,352,l),
(90,352,l),
(78,-141,l)
);
},
{
closed = 1;
nodes = (
(166,428,o),
(207,469,o),
(207,498,qs),
(207,527,o),
(166,568,o),
(137,568,qs),
(107,568,o),
(66,527,o),
(66,498,qs),
(66,469,o),
(107,428,o),
(137,428,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 2 4 1 3 0 2 3 105 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 272;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(168,-143,l),
(158,363,l),
(87,363,l),
(77,-143,l)
);
},
{
closed = 1;
nodes = (
(149,448,o),
(182,481,o),
(182,505,qs),
(182,529,o),
(149,562,o),
(125,562,qs),
(100,562,o),
(67,529,o),
(67,505,qs),
(67,481,o),
(100,448,o),
(125,448,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 2 4 1 3 0 2 3 105 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 248;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(215,-139,l),
(200,340,l),
(92,340,l),
(78,-139,l)
);
},
{
closed = 1;
nodes = (
(183,407,o),
(231,456,o),
(231,490,qs),
(231,525,o),
(183,573,o),
(148,573,qs),
(113,573,o),
(65,525,o),
(65,490,qs),
(65,455,o),
(113,407,o),
(148,407,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 2 4 1 3 0 2 3 105 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 296;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(199,-140,l),
(186,348,l),
(90,348,l),
(78,-140,l)
);
},
{
closed = 1;
nodes = (
(171,421,o),
(215,464,o),
(215,495,qs),
(215,526,o),
(171,569,o),
(140,569,qs),
(109,569,o),
(66,526,o),
(66,495,qs),
(66,464,o),
(109,421,o),
(140,421,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 2 4 1 3 0 2 3 105 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 4 4 4 15 4 14 37 17 16 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 280;
}
);
note = exclamdown;
unicode = 161;
},
{
glyphname = question;
kernLeft = question;
kernRight = question;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,207,l),
(240,299,l),
(312,299,o),
(365,321,qs),
(420,343,o),
(480,435,o),
(480,505,qs),
(480,570,o),
(452,616,qs),
(423,662,o),
(321,712,o),
(255,712,qs),
(185,712,o),
(137,686,qs),
(87,660,o),
(32,568,o),
(32,508,q),
(133,508,l),
(133,561,o),
(198,624,o),
(255,624,qs),
(311,624,o),
(378,560,o),
(378,505,qs),
(378,447,o),
(350,419,qs),
(325,392,o),
(238,370,o),
(179,370,qs),
(140,370,l),
(144,207,l)
);
},
{
closed = 1;
nodes = (
(220,-8,o),
(261,33,o),
(261,62,qs),
(261,91,o),
(220,132,o),
(191,132,qs),
(161,132,o),
(120,91,o),
(120,62,qs),
(120,33,o),
(161,-8,o),
(191,-8,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
0 2 1 0 1 2 0 128 0 4 0 5 0 4 5 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 39 77 0 6 6 7 97 8 1 7 7 40 7 78 31 31 31 42 31 41 37 17 24 36 18 38 32 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 522;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(224,196,l),
(227,299,l),
(299,299,o),
(354,320,qs),
(472,365,o),
(472,507,qs),
(472,570,o),
(444,616,qs),
(416,662,o),
(316,712,o),
(251,712,qs),
(186,712,o),
(137,687,qs),
(88,662,o),
(33,571,o),
(33,512,q),
(113,512,l),
(113,571,o),
(187,641,o),
(251,641,qs),
(314,641,o),
(391,569,o),
(391,507,qs),
(391,443,o),
(361,411,qs),
(333,381,o),
(241,357,o),
(178,357,qs),
(147,357,l),
(151,196,l)
);
},
{
closed = 1;
nodes = (
(212,-5,o),
(244,28,o),
(244,52,qs),
(244,76,o),
(212,109,o),
(187,109,qs),
(162,109,o),
(129,76,o),
(129,52,qs),
(129,28,o),
(162,-5,o),
(187,-5,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 0 1 2 0 128 0 5 4 6 4 5 114 0 0 0 4 5 0 4 105 0 1 1 3 97 0 3 3 39 77 0 6 6 7 97 8 1 7 7 34 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 0 1 2 0 128 0 5 4 6 4 5 6 128 0 0 0 4 5 0 4 105 0 1 1 3 97 0 3 3 39 77 0 6 6 7 97 8 1 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
30 30 30 41 30 40 37 17 23 36 18 38 32 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 516;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(250,218,l),
(253,298,l),
(325,300,o),
(375,321,qs),
(429,343,o),
(488,435,o),
(488,502,qs),
(488,569,o),
(459,616,qs),
(429,662,o),
(326,712,o),
(259,712,qs),
(187,712,o),
(136,685,qs),
(84,658,o),
(30,564,o),
(31,504,q),
(152,504,l),
(152,552,o),
(208,606,o),
(258,606,qs),
(306,606,o),
(364,551,o),
(364,503,qs),
(364,452,o),
(339,427,qs),
(316,402,o),
(235,383,o),
(179,383,qs),
(133,383,l),
(137,218,l)
);
},
{
closed = 1;
nodes = (
(229,-12,o),
(277,37,o),
(277,71,qs),
(277,106,o),
(229,154,o),
(194,154,qs),
(159,154,o),
(111,106,o),
(111,71,qs),
(111,36,o),
(159,-12,o),
(194,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
0 2 1 0 1 2 0 128 0 4 0 5 0 4 5 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 39 77 0 6 6 7 97 8 1 7 7 40 7 78 31 31 31 42 31 41 37 17 24 36 18 38 32 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 527;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(241,211,l),
(244,298,l),
(317,300,o),
(368,321,qs),
(423,343,o),
(483,435,o),
(483,504,qs),
(483,569,o),
(454,616,qs),
(425,663,o),
(323,712,o),
(256,712,qs),
(188,712,o),
(136,686,qs),
(86,660,o),
(31,567,o),
(32,507,q),
(139,507,l),
(139,558,o),
(201,618,o),
(256,618,qs),
(309,618,o),
(373,557,o),
(373,504,qs),
(373,449,o),
(346,422,qs),
(321,395,o),
(237,374,o),
(179,374,qs),
(138,374,l),
(142,211,l)
);
},
{
closed = 1;
nodes = (
(223,-10,o),
(266,34,o),
(266,65,qs),
(266,96,o),
(223,139,o),
(192,139,qs),
(160,139,o),
(117,96,o),
(117,65,qs),
(117,33,o),
(160,-10,o),
(192,-10,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
0 2 1 0 1 2 0 128 0 4 0 5 0 4 5 128 0 0 0 5 6 0 5 103 0 1 1 3 97 0 3 3 39 77 0 6 6 7 97 8 1 7 7 40 7 78 31 31 31 42 31 41 37 17 24 36 18 38 32 9 8 29
CALL[ ]	/* CallFunction */";
};
width = 523;
}
);
note = question;
unicode = 63;
},
{
glyphname = questiondown;
kernLeft = questiondown;
kernRight = questiondown;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(335,-160,o),
(385,-134,qs),
(435,-108,o),
(490,-16,o),
(490,44,q),
(389,44,l),
(389,-9,o),
(324,-71,o),
(267,-71,qs),
(211,-71,o),
(144,-7,o),
(144,47,qs),
(144,105,o),
(172,133,qs),
(197,160,o),
(284,182,o),
(343,182,qs),
(382,182,l),
(378,345,l),
(285,345,l),
(282,254,l),
(210,252,o),
(157,232,qs),
(102,210,o),
(42,118,o),
(42,48,qs),
(42,-17,o),
(70,-64,qs),
(99,-110,o),
(201,-160,o),
(267,-160,qs)
);
},
{
closed = 1;
nodes = (
(361,421,o),
(402,462,o),
(402,491,qs),
(402,520,o),
(361,561,o),
(331,561,qs),
(302,561,o),
(261,520,o),
(261,491,qs),
(261,462,o),
(302,421,o),
(331,421,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
0 0 1 2 1 0 2 128 0 4 2 3 2 4 3 128 0 6 9 1 7 1 6 7 105 0 1 0 2 4 1 2 105 0 3 5 5 3 89 0 3 3 5 98 8 1 5 3 5 82 31 31 0 0 31 42 31 41 37 35 0 30 0 29 18 38 33 17 24 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 522;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(330,-164,o),
(379,-139,qs),
(428,-114,o),
(483,-23,o),
(483,36,q),
(403,36,l),
(403,-23,o),
(329,-93,o),
(265,-93,qs),
(202,-93,o),
(125,-21,o),
(125,41,qs),
(125,106,o),
(155,137,qs),
(183,167,o),
(275,191,o),
(338,191,qs),
(369,191,l),
(365,352,l),
(292,352,l),
(289,249,l),
(218,249,o),
(162,228,qs),
(44,183,o),
(44,41,qs),
(44,-22,o),
(72,-68,qs),
(100,-114,o),
(200,-164,o),
(265,-164,qs)
);
},
{
closed = 1;
nodes = (
(354,439,o),
(387,472,o),
(387,496,qs),
(387,520,o),
(354,553,o),
(329,553,qs),
(304,553,o),
(272,520,o),
(272,496,qs),
(272,472,o),
(304,439,o),
(329,439,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 7 0 0 1 114 0 4 2 3 2 4 3 128 0 6 9 1 7 1 6 7 105 0 0 0 2 4 0 2 106 0 3 5 5 3 89 0 3 3 5 97 8 1 5 3 5 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 1 7 0 7 1 0 128 0 4 2 3 2 4 3 128 0 6 9 1 7 1 6 7 105 0 0 0 2 4 0 2 106 0 3 5 5 3 89 0 3 3 5 97 8 1 5 3 5 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
30 30 0 0 30 41 30 40 36 34 0 29 0 28 18 38 33 17 23 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 516;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(340,-156,o),
(391,-129,qs),
(443,-102,o),
(497,-8,o),
(496,52,q),
(375,52,l),
(375,4,o),
(319,-50,o),
(269,-50,qs),
(221,-50,o),
(163,5,o),
(163,53,qs),
(163,104,o),
(188,129,qs),
(211,154,o),
(292,173,o),
(348,173,qs),
(394,173,l),
(390,338,l),
(277,338,l),
(274,258,l),
(202,256,o),
(152,235,qs),
(98,213,o),
(39,121,o),
(39,54,qs),
(39,-11,o),
(68,-60,qs),
(98,-106,o),
(201,-156,o),
(268,-156,qs)
);
},
{
closed = 1;
nodes = (
(368,402,o),
(416,450,o),
(416,485,qs),
(416,520,o),
(368,568,o),
(333,568,qs),
(299,568,o),
(250,520,o),
(250,485,qs),
(250,451,o),
(299,402,o),
(333,402,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
0 0 1 2 1 0 2 128 0 4 2 3 2 4 3 128 0 6 9 1 7 1 6 7 105 0 1 0 2 4 1 2 105 0 3 5 5 3 89 0 3 3 5 98 8 1 5 3 5 82 31 31 0 0 31 42 31 41 37 35 0 30 0 29 18 38 33 17 24 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 527;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(336,-159,o),
(387,-132,qs),
(438,-106,o),
(492,-13,o),
(492,47,q),
(384,47,l),
(384,-5,o),
(323,-64,o),
(268,-64,qs),
(214,-64,o),
(150,-3,o),
(150,49,qs),
(150,104,o),
(177,132,qs),
(202,158,o),
(286,179,o),
(345,179,qs),
(386,179,l),
(382,343,l),
(282,343,l),
(279,255,l),
(208,253,o),
(155,233,qs),
(100,211,o),
(41,119,o),
(41,50,qs),
(41,-16,o),
(69,-63,qs),
(98,-109,o),
(201,-159,o),
(267,-159,qs)
);
},
{
closed = 1;
nodes = (
(363,414,o),
(406,457,o),
(406,489,qs),
(406,520,o),
(363,563,o),
(332,563,qs),
(301,563,o),
(257,520,o),
(257,489,qs),
(257,458,o),
(301,414,o),
(332,414,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
0 0 1 2 1 0 2 128 0 4 2 3 2 4 3 128 0 6 9 1 7 1 6 7 105 0 1 0 2 4 1 2 105 0 3 5 5 3 89 0 3 3 5 98 8 1 5 3 5 82 31 31 0 0 31 42 31 41 37 35 0 30 0 29 18 38 33 17 24 10 8 27
CALL[ ]	/* CallFunction */";
};
width = 523;
}
);
note = questiondown;
unicode = 191;
},
{
glyphname = periodcentered;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(138,270,o),
(179,311,o),
(179,340,qs),
(179,370,o),
(138,410,o),
(109,410,qs),
(79,410,o),
(39,370,o),
(39,340,qs),
(39,311,o),
(79,270,o),
(109,270,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 218;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(122,285,o),
(155,318,o),
(155,342,qs),
(155,367,o),
(122,399,o),
(98,399,qs),
(73,399,o),
(40,367,o),
(40,342,qs),
(40,318,o),
(73,285,o),
(98,285,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 195;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(155,255,o),
(203,304,o),
(203,338,qs),
(203,373,o),
(155,421,o),
(120,421,qs),
(85,421,o),
(37,373,o),
(37,338,qs),
(37,303,o),
(85,255,o),
(120,255,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 240;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(144,265,o),
(187,308,o),
(187,339,qs),
(187,370,o),
(144,414,o),
(113,414,qs),
(81,414,o),
(38,371,o),
(38,339,qs),
(38,308,o),
(81,265,o),
(113,265,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 225;
}
);
note = periodcentered;
unicode = 183;
},
{
glyphname = bullet;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,206,o),
(312,280,o),
(312,333,qs),
(312,387,o),
(238,462,o),
(184,462,qs),
(150,462,o),
(91,428,o),
(57,368,o),
(57,333,qs),
(57,280,o),
(131,206,o),
(184,206,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 12 0 11 37 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 369;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(229,213,o),
(299,283,o),
(299,333,qs),
(299,384,o),
(229,454,o),
(178,454,qs),
(128,454,o),
(59,384,o),
(59,333,qs),
(59,283,o),
(128,213,o),
(178,213,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 358;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(247,198,o),
(325,276,o),
(325,333,qs),
(325,370,o),
(289,433,o),
(227,469,o),
(189,469,qs),
(153,469,o),
(90,433,o),
(54,370,o),
(54,333,qs),
(54,296,o),
(91,234,o),
(153,198,o),
(189,198,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 14 0 13 38 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 380;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(240,203,o),
(316,278,o),
(316,333,qs),
(316,388,o),
(240,464,o),
(185,464,qs),
(150,464,o),
(91,429,o),
(56,369,o),
(56,333,qs),
(56,298,o),
(91,238,o),
(150,203,o),
(185,203,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 13 0 12 38 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 373;
}
);
note = bullet;
unicode = 8226;
},
{
glyphname = asterisk;
kernLeft = asterisk;
kernRight = asterisk;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(280,358,l),
(280,487,l),
(392,423,l),
(427,483,l),
(315,547,l),
(427,611,l),
(392,671,l),
(280,607,l),
(280,735,l),
(211,735,l),
(211,607,l),
(100,671,l),
(66,611,l),
(176,547,l),
(66,483,l),
(100,423,l),
(211,487,l),
(211,358,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
15 14 13 12 11 10 9 6 5 4 3 2 1 0 14 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 24 23 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 489;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(270,356,l),
(270,493,l),
(390,425,l),
(419,476,l),
(300,545,l),
(419,613,l),
(390,664,l),
(270,596,l),
(270,733,l),
(211,733,l),
(211,596,l),
(93,664,l),
(63,613,l),
(181,545,l),
(63,476,l),
(93,425,l),
(211,493,l),
(211,356,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
15 14 13 12 11 10 9 6 5 4 3 2 1 0 14 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 24 23 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 478;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(290,360,l),
(290,480,l),
(394,420,l),
(434,489,l),
(330,549,l),
(434,608,l),
(394,677,l),
(290,617,l),
(290,737,l),
(211,737,l),
(211,617,l),
(107,677,l),
(68,608,l),
(171,549,l),
(68,489,l),
(107,420,l),
(211,480,l),
(211,360,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
15 14 13 12 11 10 9 6 5 4 3 2 1 0 14 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 24 23 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 499;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(283,359,l),
(283,484,l),
(393,422,l),
(429,485,l),
(320,548,l),
(429,610,l),
(393,673,l),
(283,610,l),
(283,736,l),
(211,736,l),
(211,610,l),
(102,673,l),
(66,610,l),
(174,548,l),
(66,485,l),
(102,422,l),
(211,484,l),
(211,359,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
15 14 13 12 11 10 9 6 5 4 3 2 1 0 14 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 24 23 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = numbersign;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(243,0,l),
(283,186,l),
(485,186,l),
(445,0,l),
(545,0,l),
(585,186,l),
(745,186,l),
(745,281,l),
(606,281,l),
(638,436,l),
(793,436,l),
(793,530,l),
(659,530,l),
(698,715,l),
(598,715,l),
(559,530,l),
(356,530,l),
(396,715,l),
(296,715,l),
(256,530,l),
(87,530,l),
(87,436,l),
(236,436,l),
(203,281,l),
(40,281,l),
(40,186,l),
(183,186,l),
(143,0,l)
);
},
{
closed = 1;
nodes = (
(336,436,l),
(539,436,l),
(505,281,l),
(303,281,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
7 5 2 3 14 8 2 2 1 3 2 104 16 15 9 3 1 12 10 2 0 11 1 0 103 6 1 4 4 33 77 13 1 11 11 34 11 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 3 4 133 7 5 2 3 14 8 2 2 1 3 2 104 16 15 9 3 1 12 10 2 0 11 1 0 103 13 1 11 11 34 11 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
28 28 28 31 28 31 30 29 27 26 25 24 23 22 21 20 19 18 17 17 17 17 17 17 17 17 16 17 8 31
CALL[ ]	/* CallFunction */";
};
width = 837;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(225,0,l),
(267,197,l),
(482,197,l),
(439,0,l),
(519,0,l),
(562,197,l),
(723,197,l),
(723,272,l),
(578,272,l),
(612,435,l),
(767,435,l),
(767,509,l),
(628,509,l),
(670,706,l),
(591,706,l),
(549,509,l),
(334,509,l),
(376,706,l),
(296,706,l),
(254,509,l),
(88,509,l),
(88,435,l),
(238,435,l),
(204,272,l),
(46,272,l),
(46,197,l),
(188,197,l),
(145,0,l)
);
},
{
closed = 1;
nodes = (
(318,435,l),
(533,435,l),
(498,272,l),
(283,272,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
16 15 9 3 1 12 10 2 0 11 1 0 103 6 1 4 4 33 77 14 8 2 2 2 3 95 7 5 2 3 3 36 77 13 1 11 11 34 11 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
7 5 2 3 14 8 2 2 1 3 2 104 16 15 9 3 1 12 10 2 0 11 1 0 103 6 1 4 4 33 77 13 1 11 11 34 11 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
28 28 28 31 28 31 30 29 27 26 25 24 23 22 21 20 19 18 17 17 17 17 17 17 17 17 16 17 8 31
CALL[ ]	/* CallFunction */";
};
width = 814;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(261,0,l),
(298,175,l),
(488,175,l),
(450,0,l),
(571,0,l),
(608,175,l),
(766,175,l),
(766,290,l),
(633,290,l),
(664,436,l),
(819,436,l),
(819,551,l),
(689,551,l),
(725,723,l),
(605,723,l),
(568,551,l),
(378,551,l),
(415,723,l),
(295,723,l),
(258,551,l),
(86,551,l),
(86,436,l),
(233,436,l),
(202,290,l),
(33,290,l),
(33,175,l),
(177,175,l),
(140,0,l)
);
},
{
closed = 1;
nodes = (
(354,436,l),
(544,436,l),
(512,290,l),
(322,290,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
7 5 2 3 14 8 2 2 1 3 2 104 16 15 9 3 1 12 10 2 0 11 1 0 103 6 1 4 4 33 77 13 1 11 11 34 11 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 3 4 133 7 5 2 3 14 8 2 2 1 3 2 104 16 15 9 3 1 12 10 2 0 11 1 0 103 13 1 11 11 34 11 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
28 28 28 31 28 31 30 29 27 26 25 24 23 22 21 20 19 18 17 17 17 17 17 17 17 17 16 17 8 31
CALL[ ]	/* CallFunction */";
};
width = 860;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(249,0,l),
(288,182,l),
(486,182,l),
(446,0,l),
(554,0,l),
(593,182,l),
(752,182,l),
(752,284,l),
(615,284,l),
(647,436,l),
(802,436,l),
(802,537,l),
(669,537,l),
(707,717,l),
(600,717,l),
(562,537,l),
(363,537,l),
(402,717,l),
(295,717,l),
(257,537,l),
(87,537,l),
(87,436,l),
(235,436,l),
(203,284,l),
(37,284,l),
(37,182,l),
(181,182,l),
(142,0,l)
);
},
{
closed = 1;
nodes = (
(342,436,l),
(540,436,l),
(507,284,l),
(309,284,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
7 5 2 3 14 8 2 2 1 3 2 104 16 15 9 3 1 12 10 2 0 11 1 0 103 6 1 4 4 33 77 13 1 11 11 34 11 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 1 4 3 4 133 7 5 2 3 14 8 2 2 1 3 2 104 16 15 9 3 1 12 10 2 0 11 1 0 103 13 1 11 11 34 11 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
28 28 28 31 28 31 30 29 27 26 25 24 23 22 21 20 19 18 17 17 17 17 17 17 17 17 16 17 8 31
CALL[ ]	/* CallFunction */";
};
width = 845;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = slash;
kernLeft = slash;
kernRight = slash;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,-103,l),
(380,771,l),
(276,771,l),
(26,-103,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 406;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(111,-95,l),
(362,764,l),
(279,764,l),
(28,-95,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 391;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(147,-111,l),
(398,777,l),
(273,777,l),
(23,-111,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 421;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(135,-106,l),
(386,773,l),
(275,773,l),
(25,-106,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 411;
}
);
note = slash;
unicode = 47;
},
{
glyphname = backslash;
kernLeft = backslash;
kernRight = backslash;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(380,-103,l),
(130,771,l),
(26,771,l),
(277,-103,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 406;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(362,-95,l),
(112,764,l),
(28,764,l),
(280,-95,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 391;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(398,-111,l),
(148,777,l),
(23,777,l),
(273,-111,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 421;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(386,-106,l),
(136,773,l),
(25,773,l),
(275,-106,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 411;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = periodcentered.loclCAT;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(100,270,o),
(141,311,o),
(141,340,qs),
(141,370,o),
(100,410,o),
(71,410,qs),
(41,410,o),
(0,370,o),
(0,340,qs),
(0,311,o),
(41,270,o),
(71,270,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 141;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(82,285,o),
(115,318,o),
(115,342,qs),
(115,367,o),
(82,399,o),
(58,399,qs),
(33,399,o),
(0,367,o),
(0,342,qs),
(0,318,o),
(33,285,o),
(58,285,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 115;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(118,255,o),
(166,304,o),
(166,338,qs),
(166,373,o),
(118,421,o),
(83,421,qs),
(48,421,o),
(0,373,o),
(0,338,qs),
(0,303,o),
(48,255,o),
(83,255,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 166;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(106,265,o),
(149,308,o),
(149,339,qs),
(149,370,o),
(106,414,o),
(75,414,qs),
(43,414,o),
(0,371,o),
(0,339,qs),
(0,308,o),
(43,265,o),
(75,265,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 149;
}
);
note = periodcentered.loclCAT;
},
{
glyphname = periodcentered.loclCAT.case;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-110,280,o),
(-69,321,o),
(-69,350,qs),
(-69,380,o),
(-110,420,o),
(-139,420,qs),
(-169,420,o),
(-210,380,o),
(-210,350,qs),
(-210,321,o),
(-169,280,o),
(-139,280,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(-118,293,o),
(-85,326,o),
(-85,350,qs),
(-85,375,o),
(-118,407,o),
(-142,407,qs),
(-167,407,o),
(-200,375,o),
(-200,350,qs),
(-200,326,o),
(-167,293,o),
(-142,293,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(-103,267,o),
(-54,316,o),
(-54,350,qs),
(-54,385,o),
(-103,433,o),
(-137,433,qs),
(-172,433,o),
(-220,385,o),
(-220,350,qs),
(-220,315,o),
(-172,267,o),
(-137,267,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(-108,276,o),
(-64,319,o),
(-64,350,qs),
(-64,381,o),
(-107,424,o),
(-139,424,qs),
(-171,424,o),
(-213,382,o),
(-213,350,qs),
(-213,319,o),
(-170,276,o),
(-139,276,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = periodcentered.loclCAT.case;
},
{
glyphname = hyphen;
kernLeft = hyphen;
kernRight = hyphen;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(417,246,l),
(417,335,l),
(57,335,l),
(57,246,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 473;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(455,255,l),
(455,326,l),
(59,326,l),
(59,255,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 513;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(379,236,l),
(379,343,l),
(54,343,l),
(54,236,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 433;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(404,242,l),
(404,337,l),
(56,337,l),
(56,242,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = endash;
kernLeft = hyphen;
kernRight = hyphen;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,246,l),
(589,335,l),
(57,335,l),
(57,246,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 645;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(583,255,l),
(583,326,l),
(59,326,l),
(59,255,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 641;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(594,236,l),
(594,343,l),
(54,343,l),
(54,236,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 648;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(590,242,l),
(590,337,l),
(56,337,l),
(56,242,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 646;
}
);
note = endash;
unicode = 8211;
},
{
glyphname = emdash;
kernLeft = hyphen;
kernRight = hyphen;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(801,246,l),
(801,335,l),
(57,335,l),
(57,246,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 857;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(787,255,l),
(787,326,l),
(59,326,l),
(59,255,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 846;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(814,236,l),
(814,343,l),
(54,343,l),
(54,236,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 868;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(805,242,l),
(805,337,l),
(56,337,l),
(56,242,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 861;
}
);
note = emdash;
unicode = 8212;
},
{
glyphname = underscore;
kernLeft = underscore;
kernRight = underscore;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(605,-137,l),
(605,-37,l),
(57,-37,l),
(57,-137,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 662;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(583,-115,l),
(583,-36,l),
(59,-36,l),
(59,-115,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 642;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(627,-160,l),
(627,-38,l),
(54,-38,l),
(54,-160,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 681;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(612,-145,l),
(612,-37,l),
(56,-37,l),
(56,-145,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 668;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = parenleft;
kernRight = parenleft;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(351,-145,l),
(351,-135,l),
(257,-39,o),
(151,202,o),
(151,333,qs),
(151,465,o),
(257,706,o),
(351,801,q),
(351,811,l),
(244,811,l),
(190,758,o),
(144,685,qs),
(46,524,o),
(46,333,qs),
(46,232,o),
(73,143,qs),
(99,57,o),
(187,-89,o),
(244,-145,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
16 10 2 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 24 24 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 386;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(334,-145,l),
(334,-137,l),
(240,-43,o),
(131,199,o),
(131,333,qs),
(131,468,o),
(239,710,o),
(334,803,q),
(334,811,l),
(248,811,l),
(195,760,o),
(148,688,qs),
(100,613,o),
(47,434,o),
(47,333,qs),
(47,227,o),
(75,140,qs),
(101,54,o),
(191,-90,o),
(248,-145,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
19 17 2 0 73 0 0 0 118 25 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 372;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(367,-145,l),
(367,-133,l),
(274,-35,o),
(171,204,o),
(171,333,qs),
(171,462,o),
(274,701,o),
(367,799,q),
(367,811,l),
(239,811,l),
(184,756,o),
(140,682,qs),
(95,606,o),
(45,429,o),
(45,333,qs),
(45,236,o),
(71,146,qs),
(121,-27,o),
(239,-145,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
16 10 2 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 24 24 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 399;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(356,-145,l),
(356,-134,l),
(263,-38,o),
(158,202,o),
(158,333,qs),
(158,464,o),
(263,704,o),
(356,800,q),
(356,811,l),
(242,811,l),
(188,758,o),
(143,684,qs),
(97,608,o),
(46,430,o),
(46,333,qs),
(46,234,o),
(72,144,qs),
(98,58,o),
(185,-89,o),
(242,-145,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
17 11 2 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 24 25 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 390;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
kernLeft = parenright;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,-145,l),
(142,-145,l),
(199,-89,o),
(288,57,o),
(314,143,qs),
(340,233,o),
(340,333,qs),
(340,527,o),
(242,685,qs),
(196,758,o),
(142,811,q),
(35,811,l),
(35,801,l),
(129,706,o),
(235,465,o),
(235,333,qs),
(235,202,o),
(129,-39,o),
(35,-135,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
18 5 2 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 25 22 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 386;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(38,-145,l),
(124,-145,l),
(181,-90,o),
(271,54,o),
(298,140,qs),
(325,229,o),
(325,333,qs),
(325,434,o),
(272,613,o),
(224,688,qs),
(177,760,o),
(124,811,q),
(38,811,l),
(38,803,l),
(133,710,o),
(241,468,o),
(241,333,qs),
(241,199,o),
(132,-43,o),
(38,-137,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
5 1 0 74 0 0 0 118 18 17 1 8 22
CALL[ ]	/* CallFunction */";
};
width = 372;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(32,-145,l),
(160,-145,l),
(217,-88,o),
(304,60,o),
(329,146,qs),
(354,233,o),
(354,333,qs),
(354,429,o),
(305,606,o),
(260,682,qs),
(218,753,o),
(160,811,q),
(32,811,l),
(32,799,l),
(125,701,o),
(228,462,o),
(228,333,qs),
(228,204,o),
(125,-35,o),
(32,-133,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
19 5 2 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 26 22 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 399;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(34,-145,l),
(148,-145,l),
(205,-88,o),
(293,58,o),
(319,144,qs),
(344,231,o),
(344,333,qs),
(344,431,o),
(294,609,o),
(248,684,qs),
(201,760,o),
(148,811,q),
(34,811,l),
(34,800,l),
(127,704,o),
(232,464,o),
(232,333,qs),
(232,202,o),
(127,-38,o),
(34,-134,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
19 5 2 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 26 22 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 390;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = braceleft;
kernLeft = braceleft;
kernRight = braceleft;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(387,-162,l),
(387,-73,l),
(349,-73,ls),
(270,-73,o),
(270,5,qs),
(270,40,o),
(281,91,qs),
(290,138,o),
(290,182,qs),
(290,237,o),
(236,311,o),
(180,324,q),
(180,326,l),
(236,338,o),
(290,412,o),
(290,467,qs),
(290,511,o),
(281,560,q),
(270,602,o),
(270,644,qs),
(270,722,o),
(349,722,qs),
(387,722,l),
(387,811,l),
(329,811,ls),
(254,811,o),
(168,730,o),
(168,654,qs),
(168,617,o),
(178,563,qs),
(189,514,o),
(189,471,qs),
(189,385,o),
(88,368,q),
(88,282,l),
(189,265,o),
(189,179,qs),
(189,137,o),
(178,86,qs),
(168,32,o),
(168,-4,qs),
(168,-81,o),
(254,-162,o),
(329,-162,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
30 9 8 3 2 1 1 76 0 0 0 1 2 0 1 105 0 2 3 3 2 89 0 2 2 3 97 4 1 3 2 3 81 0 0 0 43 0 42 41 39 22 20 19 17 5 8 22
CALL[ ]	/* CallFunction */";
};
width = 444;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(373,-152,l),
(373,-80,l),
(335,-80,ls),
(292,-80,o),
(250,-39,o),
(250,5,qs),
(250,30,o),
(257,77,o),
(261,98,qs),
(271,150,o),
(271,186,qs),
(271,241,o),
(216,315,o),
(160,329,q),
(160,331,l),
(216,343,o),
(271,418,o),
(271,473,qs),
(271,510,o),
(261,564,qs),
(250,615,o),
(250,654,qs),
(250,699,o),
(292,739,o),
(335,739,qs),
(373,739,l),
(373,811,l),
(320,811,ls),
(250,811,o),
(168,735,o),
(168,661,qs),
(168,635,o),
(175,588,o),
(179,568,qs),
(190,520,o),
(190,476,qs),
(190,386,o),
(87,364,q),
(87,296,l),
(190,274,o),
(190,184,qs),
(190,140,o),
(179,92,qs),
(175,72,o),
(168,25,o),
(168,-2,qs),
(168,-75,o),
(250,-152,o),
(320,-152,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
33 10 9 3 2 1 1 76 0 0 0 1 2 0 1 105 0 2 3 3 2 89 0 2 2 3 97 4 1 3 2 3 81 0 0 0 48 0 47 46 44 24 22 21 19 5 8 22
CALL[ ]	/* CallFunction */";
};
width = 425;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(401,-173,l),
(401,-67,l),
(362,-67,ls),
(290,-67,o),
(290,4,qs),
(290,44,o),
(300,83,qs),
(309,122,o),
(309,178,qs),
(309,233,o),
(255,306,o),
(200,318,q),
(200,320,l),
(255,332,o),
(309,405,o),
(309,460,qs),
(309,516,o),
(300,556,qs),
(290,593,o),
(290,634,qs),
(290,705,o),
(362,705,qs),
(401,705,l),
(401,811,l),
(338,811,ls),
(259,811,o),
(167,725,o),
(167,646,qs),
(167,612,o),
(177,558,qs),
(188,509,o),
(188,465,qs),
(188,383,o),
(89,371,q),
(89,268,l),
(142,262,o),
(188,211,o),
(188,174,qs),
(188,132,o),
(177,79,qs),
(167,25,o),
(167,-7,qs),
(167,-87,o),
(259,-173,o),
(338,-173,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
31 10 9 3 2 1 1 76 0 0 0 1 2 0 1 105 0 2 3 3 2 89 0 2 2 3 97 4 1 3 2 3 81 0 0 0 44 0 43 42 40 23 21 20 18 5 8 22
CALL[ ]	/* CallFunction */";
};
width = 462;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(392,-166,l),
(392,-71,l),
(353,-71,ls),
(277,-71,o),
(277,4,qs),
(277,43,o),
(287,88,qs),
(296,127,o),
(296,181,qs),
(296,236,o),
(242,310,o),
(187,322,q),
(187,324,l),
(242,336,o),
(296,409,o),
(296,464,qs),
(296,519,o),
(287,559,qs),
(277,596,o),
(277,641,qs),
(277,716,o),
(353,716,qs),
(392,716,l),
(392,811,l),
(332,811,ls),
(256,811,o),
(167,729,o),
(167,651,qs),
(167,611,o),
(178,561,qs),
(182,541,o),
(189,494,o),
(189,469,qs),
(189,383,o),
(88,369,q),
(88,277,l),
(142,269,o),
(189,215,o),
(189,177,qs),
(189,152,o),
(182,104,o),
(178,83,qs),
(167,34,o),
(167,-5,qs),
(167,-83,o),
(256,-166,o),
(332,-166,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
33 11 10 3 2 1 1 76 0 0 0 1 2 0 1 105 0 2 3 3 2 89 0 2 2 3 97 4 1 3 2 3 81 0 0 0 46 0 45 44 42 25 23 22 20 5 8 22
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = braceright;
kernLeft = braceright;
kernRight = braceright;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,-162,ls),
(190,-162,o),
(276,-81,o),
(276,-4,qs),
(276,32,o),
(266,86,qs),
(255,137,o),
(255,179,qs),
(255,265,o),
(356,282,q),
(356,368,l),
(255,385,o),
(255,471,qs),
(255,514,o),
(266,563,qs),
(276,617,o),
(276,654,qs),
(276,730,o),
(190,811,o),
(115,811,qs),
(57,811,l),
(57,722,l),
(95,722,ls),
(174,722,o),
(174,644,qs),
(174,609,o),
(165,564,qs),
(154,520,o),
(154,467,qs),
(154,412,o),
(208,338,o),
(264,326,q),
(264,324,l),
(208,311,o),
(154,237,o),
(154,182,qs),
(154,129,o),
(166,78,qs),
(174,41,o),
(174,5,qs),
(174,-73,o),
(95,-73,qs),
(57,-73,l),
(57,-162,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
33 32 10 3 0 1 1 76 0 2 0 1 0 2 1 105 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 43 41 24 22 21 19 32 4 8 23
CALL[ ]	/* CallFunction */";
};
width = 444;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(105,-152,ls),
(175,-152,o),
(257,-75,o),
(257,-2,qs),
(257,25,o),
(250,72,o),
(246,92,qs),
(235,140,o),
(235,184,qs),
(235,274,o),
(338,296,q),
(338,364,l),
(235,386,o),
(235,476,qs),
(235,520,o),
(246,568,qs),
(250,588,o),
(257,635,o),
(257,661,qs),
(257,735,o),
(175,811,o),
(105,811,qs),
(52,811,l),
(52,739,l),
(90,739,ls),
(133,739,o),
(175,699,o),
(175,654,qs),
(175,633,o),
(169,590,o),
(166,571,qs),
(160,542,o),
(154,500,o),
(154,473,qs),
(154,418,o),
(209,343,o),
(265,331,q),
(265,329,l),
(209,315,o),
(154,241,o),
(154,186,qs),
(154,155,o),
(161,114,o),
(169,73,qs),
(175,33,o),
(175,5,qs),
(175,-39,o),
(133,-80,o),
(90,-80,qs),
(52,-80,l),
(52,-152,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
39 38 12 3 0 1 1 76 0 2 0 1 0 2 1 105 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 50 48 29 27 26 24 32 4 8 23
CALL[ ]	/* CallFunction */";
};
width = 425;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(124,-173,ls),
(203,-173,o),
(295,-87,o),
(295,-7,qs),
(295,25,o),
(285,79,qs),
(274,132,o),
(274,174,qs),
(274,211,o),
(320,262,o),
(373,268,q),
(373,371,l),
(274,383,o),
(274,465,qs),
(274,509,o),
(285,558,qs),
(295,612,o),
(295,646,qs),
(295,725,o),
(203,811,o),
(124,811,qs),
(61,811,l),
(61,705,l),
(100,705,ls),
(172,705,o),
(172,634,qs),
(172,595,o),
(163,556,qs),
(153,517,o),
(153,460,qs),
(153,405,o),
(207,332,o),
(262,320,q),
(262,318,l),
(207,306,o),
(153,233,o),
(153,178,qs),
(153,120,o),
(163,83,qs),
(172,43,o),
(172,4,qs),
(172,-67,o),
(100,-67,qs),
(61,-67,l),
(61,-173,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
33 32 10 3 0 1 1 76 0 2 0 1 0 2 1 105 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 44 42 24 22 21 19 32 4 8 23
CALL[ ]	/* CallFunction */";
};
width = 462;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(118,-166,ls),
(194,-166,o),
(282,-83,o),
(282,-5,qs),
(282,29,o),
(272,83,qs),
(261,134,o),
(261,177,qs),
(261,216,o),
(307,269,o),
(361,277,q),
(361,369,l),
(261,383,o),
(261,469,qs),
(261,512,o),
(272,561,qs),
(282,615,o),
(282,651,qs),
(282,729,o),
(194,811,o),
(118,811,qs),
(58,811,l),
(58,716,l),
(97,716,ls),
(173,716,o),
(173,641,qs),
(173,608,o),
(164,561,qs),
(153,517,o),
(153,464,qs),
(153,409,o),
(208,336,o),
(263,324,q),
(263,322,l),
(208,310,o),
(153,236,o),
(153,181,qs),
(153,128,o),
(165,80,qs),
(173,40,o),
(173,4,qs),
(173,-71,o),
(97,-71,qs),
(58,-71,l),
(58,-166,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
33 32 10 3 0 1 1 76 0 2 0 1 0 2 1 105 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 44 42 24 22 21 19 32 4 8 23
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = bracketleft;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,-160,l),
(277,-73,l),
(171,-73,l),
(171,725,l),
(277,725,l),
(277,811,l),
(71,811,l),
(71,-160,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 334;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(248,-151,l),
(248,-81,l),
(153,-81,l),
(153,742,l),
(248,742,l),
(248,811,l),
(74,811,l),
(74,-151,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 307;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(306,-170,l),
(306,-65,l),
(188,-65,l),
(188,707,l),
(306,707,l),
(306,811,l),
(68,811,l),
(68,-170,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 360;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(287,-164,l),
(287,-70,l),
(176,-70,l),
(176,719,l),
(287,719,l),
(287,811,l),
(70,811,l),
(70,-164,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 342;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = bracketright;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(263,-160,l),
(263,811,l),
(57,811,l),
(57,725,l),
(163,725,l),
(163,-73,l),
(57,-73,l),
(57,-160,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 2 0 1 0 2 1 103 0 0 3 3 0 87 0 0 0 3 95 0 3 0 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 334;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(233,-151,l),
(233,811,l),
(59,811,l),
(59,742,l),
(154,742,l),
(154,-81,l),
(59,-81,l),
(59,-151,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 2 0 1 0 2 1 103 0 0 3 3 0 87 0 0 0 3 95 0 3 0 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 307;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(292,-170,l),
(292,811,l),
(54,811,l),
(54,707,l),
(172,707,l),
(172,-65,l),
(54,-65,l),
(54,-170,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 2 0 1 0 2 1 103 0 0 3 3 0 87 0 0 0 3 95 0 3 0 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 360;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(272,-164,l),
(272,811,l),
(56,811,l),
(56,719,l),
(166,719,l),
(166,-70,l),
(56,-70,l),
(56,-164,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 2 0 1 0 2 1 103 0 0 3 3 0 87 0 0 0 3 95 0 3 0 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 342;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = quotesinglbase;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,-117,l),
(179,118,l),
(64,118,l),
(8,-117,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 212;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(62,-121,l),
(153,102,l),
(59,102,l),
(2,-121,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 184;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(102,-113,l),
(204,133,l),
(69,133,l),
(14,-113,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 240;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(89,-116,l),
(187,123,l),
(66,123,l),
(10,-116,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = quotesinglbase;
unicode = 8218;
},
{
glyphname = quotedblbase;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,-117,l),
(179,118,l),
(64,118,l),
(8,-117,l)
);
},
{
closed = 1;
nodes = (
(258,-117,l),
(354,118,l),
(240,118,l),
(184,-117,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 387;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(62,-121,l),
(153,102,l),
(59,102,l),
(2,-121,l)
);
},
{
closed = 1;
nodes = (
(221,-121,l),
(311,102,l),
(217,102,l),
(161,-121,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 342;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(102,-113,l),
(204,133,l),
(69,133,l),
(14,-113,l)
);
},
{
closed = 1;
nodes = (
(295,-113,l),
(396,133,l),
(262,133,l),
(207,-113,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 432;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(89,-116,l),
(187,123,l),
(66,123,l),
(10,-116,l)
);
},
{
closed = 1;
nodes = (
(270,-116,l),
(368,123,l),
(247,123,l),
(192,-116,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 402;
}
);
note = quotedblbase;
unicode = 8222;
},
{
glyphname = quotedblleft;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(320,466,l),
(376,700,l),
(302,700,l),
(206,466,l)
);
},
{
closed = 1;
nodes = (
(146,466,l),
(201,700,l),
(127,700,l),
(31,466,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 413;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(279,477,l),
(336,700,l),
(276,700,l),
(185,477,l)
);
},
{
closed = 1;
nodes = (
(123,477,l),
(179,700,l),
(119,700,l),
(29,477,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 370;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(360,454,l),
(415,700,l),
(328,700,l),
(226,454,l)
);
},
{
closed = 1;
nodes = (
(168,454,l),
(222,700,l),
(135,700,l),
(33,454,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 456;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(333,462,l),
(389,700,l),
(311,700,l),
(212,462,l)
);
},
{
closed = 1;
nodes = (
(153,462,l),
(208,700,l),
(130,700,l),
(32,462,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = quotedblleft;
unicode = 8220;
},
{
glyphname = quotedblright;
kernRight = quotedblright;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286,466,l),
(382,701,l),
(268,701,l),
(212,466,l)
);
},
{
closed = 1;
nodes = (
(111,466,l),
(208,701,l),
(94,701,l),
(37,466,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 413;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(250,477,l),
(341,700,l),
(247,700,l),
(190,477,l)
);
},
{
closed = 1;
nodes = (
(93,477,l),
(185,700,l),
(91,700,l),
(33,477,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 370;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(321,455,l),
(423,701,l),
(288,701,l),
(233,455,l)
);
},
{
closed = 1;
nodes = (
(129,455,l),
(231,701,l),
(96,701,l),
(41,455,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 456;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(297,462,l),
(396,701,l),
(274,701,l),
(219,462,l)
);
},
{
closed = 1;
nodes = (
(117,462,l),
(216,701,l),
(94,701,l),
(38,462,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = quotedblright;
unicode = 8221;
},
{
glyphname = quoteleft;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,466,l),
(201,700,l),
(127,700,l),
(31,466,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 238;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(123,477,l),
(179,700,l),
(119,700,l),
(29,477,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 212;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(168,454,l),
(222,700,l),
(135,700,l),
(33,454,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 264;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(153,462,l),
(208,700,l),
(130,700,l),
(32,462,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
kernRight = quotedblright;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,466,l),
(208,700,l),
(94,700,l),
(37,466,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 239;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(93,477,l),
(185,700,l),
(91,700,l),
(33,477,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 213;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(129,454,l),
(231,700,l),
(96,700,l),
(41,454,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 264;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(117,462,l),
(216,700,l),
(94,700,l),
(38,462,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = quoteright;
unicode = 8217;
},
{
glyphname = guillemotleft;
kernLeft = guillemotleft;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,120,l),
(332,295,l),
(429,470,l),
(327,470,l),
(233,295,l),
(327,120,l)
);
},
{
closed = 1;
nodes = (
(239,120,l),
(142,295,l),
(239,470,l),
(137,470,l),
(43,295,l),
(137,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
9 3 2 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 479;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(402,120,l),
(302,295,l),
(402,470,l),
(319,470,l),
(222,295,l),
(319,120,l)
);
},
{
closed = 1;
nodes = (
(224,120,l),
(124,295,l),
(224,470,l),
(141,470,l),
(44,295,l),
(141,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
9 3 2 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 452;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(455,120,l),
(362,295,l),
(455,470,l),
(334,470,l),
(244,295,l),
(334,120,l)
);
},
{
closed = 1;
nodes = (
(253,120,l),
(160,295,l),
(253,470,l),
(133,470,l),
(42,295,l),
(133,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
9 3 2 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 505;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(437,120,l),
(342,295,l),
(437,470,l),
(329,470,l),
(237,295,l),
(329,120,l)
);
},
{
closed = 1;
nodes = (
(243,120,l),
(148,295,l),
(243,470,l),
(136,470,l),
(43,295,l),
(136,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
9 3 2 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = guillemotright;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(342,120,l),
(436,295,l),
(342,470,l),
(240,470,l),
(337,295,l),
(240,120,l)
);
},
{
closed = 1;
nodes = (
(152,120,l),
(246,295,l),
(152,470,l),
(50,470,l),
(147,295,l),
(50,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
9 3 2 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 479;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(311,120,l),
(408,295,l),
(311,470,l),
(228,470,l),
(328,295,l),
(228,120,l)
);
},
{
closed = 1;
nodes = (
(133,120,l),
(230,295,l),
(133,470,l),
(50,470,l),
(150,295,l),
(50,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
9 3 2 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 452;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(373,120,l),
(463,295,l),
(373,470,l),
(252,470,l),
(345,295,l),
(252,120,l)
);
},
{
closed = 1;
nodes = (
(171,120,l),
(261,295,l),
(171,470,l),
(50,470,l),
(143,295,l),
(50,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
9 3 2 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 505;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(352,120,l),
(445,295,l),
(352,470,l),
(244,470,l),
(339,295,l),
(244,120,l)
);
},
{
closed = 1;
nodes = (
(158,120,l),
(251,295,l),
(158,470,l),
(50,470,l),
(145,295,l),
(50,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
9 3 2 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 18 18 18 17 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = guilsinglleft;
kernLeft = guillemotleft;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(239,120,l),
(142,295,l),
(239,470,l),
(137,470,l),
(43,295,l),
(137,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 289;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(224,120,l),
(124,295,l),
(224,470,l),
(141,470,l),
(44,295,l),
(141,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 274;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(253,120,l),
(160,295,l),
(253,470,l),
(133,470,l),
(42,295,l),
(133,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(243,120,l),
(148,295,l),
(243,470,l),
(136,470,l),
(43,295,l),
(136,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 293;
}
);
note = guilsinglleft;
unicode = 8249;
},
{
glyphname = guilsinglright;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(152,120,l),
(246,295,l),
(152,470,l),
(50,470,l),
(147,295,l),
(50,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 289;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(133,120,l),
(230,295,l),
(133,470,l),
(50,470,l),
(150,295,l),
(50,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 274;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(171,120,l),
(261,295,l),
(171,470,l),
(50,470,l),
(143,295,l),
(50,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 303;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(158,120,l),
(251,295,l),
(158,470,l),
(50,470,l),
(145,295,l),
(50,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 293;
}
);
note = guilsinglright;
unicode = 8250;
},
{
glyphname = quotedbl;
kernRight = quotedblright;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286,466,l),
(382,701,l),
(268,701,l),
(212,466,l)
);
},
{
closed = 1;
nodes = (
(111,466,l),
(208,701,l),
(94,701,l),
(37,466,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 413;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(250,477,l),
(341,700,l),
(247,700,l),
(190,477,l)
);
},
{
closed = 1;
nodes = (
(93,477,l),
(185,700,l),
(91,700,l),
(33,477,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 370;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(321,455,l),
(423,701,l),
(288,701,l),
(233,455,l)
);
},
{
closed = 1;
nodes = (
(129,455,l),
(231,701,l),
(96,701,l),
(41,455,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 456;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(297,462,l),
(396,701,l),
(274,701,l),
(219,462,l)
);
},
{
closed = 1;
nodes = (
(117,462,l),
(216,701,l),
(94,701,l),
(38,462,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 95 2 1 0 0 33 1 78 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = quotesingle;
kernLeft = quotesingle;
kernRight = quotedblright;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,466,l),
(203,700,l),
(89,700,l),
(32,466,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 227;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(93,477,l),
(185,700,l),
(91,700,l),
(33,477,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 33 0 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 213;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(119,454,l),
(221,700,l),
(86,700,l),
(31,454,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 241;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(110,462,l),
(209,700,l),
(88,700,l),
(32,462,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 232;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = florin;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-23,-210,ls),
(54,-210,o),
(138,-140,o),
(147,-61,qs),
(202,463,l),
(313,463,l),
(321,551,l),
(212,551,l),
(216,592,ls),
(220,640,o),
(274,681,o),
(328,681,q),
(337,770,l),
(230,770,o),
(119,684,o),
(110,592,qs),
(106,551,l),
(37,551,l),
(29,463,l),
(96,463,l),
(41,-61,ls),
(37,-94,o),
(10,-121,o),
(-17,-121,qs),
(-40,-121,l),
(-49,-210,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 4 2 3 4 105 5 1 2 6 1 1 0 2 1 103 0 0 0 7 97 0 7 7 38 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 4 2 3 4 105 5 1 2 6 1 1 0 2 1 103 0 0 7 7 0 89 0 0 0 7 97 0 7 0 7 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
35 17 19 17 19 17 19 32 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 334;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(-19,-191,ls),
(51,-191,o),
(125,-126,o),
(133,-54,qs),
(189,478,l),
(311,478,l),
(317,548,l),
(197,548,l),
(202,596,ls),
(207,649,o),
(266,695,o),
(326,695,q),
(332,766,l),
(232,766,o),
(127,684,o),
(118,596,qs),
(113,548,l),
(39,548,l),
(33,478,l),
(105,478,l),
(49,-54,ls),
(44,-92,o),
(15,-121,o),
(-16,-121,qs),
(-38,-121,l),
(-44,-191,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 3 0 4 2 3 4 105 5 1 2 6 1 1 0 2 1 103 0 0 7 7 0 89 0 0 0 7 97 0 7 0 7 81 35 17 19 17 19 17 19 32 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 333;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(-27,-229,ls),
(55,-229,o),
(151,-154,o),
(160,-68,qs),
(214,447,l),
(315,447,l),
(325,553,l),
(226,553,l),
(229,588,ls),
(233,630,o),
(281,666,o),
(330,666,q),
(341,774,l),
(228,774,o),
(111,684,o),
(101,588,qs),
(98,553,l),
(34,553,l),
(24,447,l),
(86,447,l),
(32,-68,ls),
(28,-97,o),
(5,-121,o),
(-19,-121,qs),
(-43,-121,l),
(-54,-229,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 3 0 4 2 3 4 105 5 1 2 6 1 1 0 2 1 103 0 0 0 7 97 0 7 7 38 7 78 35 17 19 17 19 17 19 32 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 334;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(-24,-216,ls),
(54,-216,o),
(142,-145,o),
(151,-63,qs),
(206,457,l),
(314,457,l),
(322,551,l),
(216,551,l),
(220,591,ls),
(224,636,o),
(276,676,o),
(329,676,q),
(338,771,l),
(230,771,o),
(116,684,o),
(107,591,qs),
(103,551,l),
(36,551,l),
(27,457,l),
(92,457,l),
(38,-63,ls),
(34,-95,o),
(8,-121,o),
(-18,-121,qs),
(-41,-121,l),
(-51,-216,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 3 0 4 2 3 4 105 5 1 2 6 1 1 0 2 1 103 0 0 0 7 97 0 7 7 38 7 78 35 17 19 17 19 17 19 32 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 334;
}
);
note = florin;
unicode = 402;
},
{
glyphname = at;
kernLeft = at;
kernRight = at;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(576,-212,o),
(633,-200,qs),
(687,-188,o),
(726,-170,q),
(701,-97,l),
(620,-136,o),
(518,-136,qs),
(413,-136,o),
(247,-45,o),
(153,116,o),
(153,218,qs),
(153,322,o),
(250,487,o),
(419,579,o),
(522,579,qs),
(626,579,o),
(790,498,o),
(882,347,o),
(882,246,qs),
(882,181,o),
(836,83,o),
(786,83,qs),
(758,83,o),
(727,118,o),
(727,149,qs),
(727,429,l),
(634,429,l),
(634,372,l),
(609,406,o),
(536,439,o),
(492,439,qs),
(431,439,o),
(336,382,o),
(284,281,o),
(284,219,qs),
(284,157,o),
(336,56,o),
(430,-3,o),
(491,-3,qs),
(586,-3,o),
(645,80,q),
(662,41,o),
(727,-1,o),
(772,-1,qs),
(863,-1,o),
(963,140,o),
(963,248,qs),
(963,368,o),
(847,553,o),
(645,654,o),
(522,654,qs),
(395,654,o),
(189,544,o),
(71,345,o),
(71,218,qs),
(71,94,o),
(183,-101,o),
(387,-212,o),
(518,-212,qs)
);
},
{
closed = 1;
nodes = (
(451,81,o),
(380,158,o),
(380,219,qs),
(380,279,o),
(452,356,o),
(509,356,qs),
(567,356,o),
(638,278,o),
(638,218,qs),
(638,159,o),
(568,81,o),
(509,81,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
30 1 9 3 17 1 1 5 53 1 7 1 54 1 8 7 4 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
30 1 9 4 17 1 1 5 53 1 7 1 54 1 8 7 4 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 0 0 6 3 0 6 105 4 1 3 0 9 5 3 9 105 12 10 2 5 5 1 97 2 1 1 1 34 77 0 7 7 8 97 11 1 8 8 38 8 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 3 9 3 4 9 128 0 0 0 6 3 0 6 105 0 3 0 9 5 3 9 105 12 10 2 5 5 1 97 2 1 1 1 34 77 0 7 7 8 97 11 1 8 8 38 8 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
59 59 0 0 59 70 59 69 65 63 0 58 0 57 38 37 35 19 38 35 37 38 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1028;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(577,-212,o),
(634,-200,qs),
(684,-190,o),
(721,-173,q),
(701,-113,l),
(621,-150,o),
(519,-150,qs),
(414,-150,o),
(241,-59,o),
(140,109,o),
(140,218,qs),
(140,325,o),
(240,496,o),
(415,593,o),
(523,593,qs),
(632,593,o),
(802,508,o),
(897,350,o),
(897,246,qs),
(897,176,o),
(846,73,o),
(791,73,qs),
(759,73,o),
(724,114,o),
(724,147,qs),
(724,425,l),
(644,425,l),
(644,370,l),
(591,435,o),
(499,435,qs),
(437,435,o),
(341,380,o),
(288,281,o),
(288,219,qs),
(288,156,o),
(341,57,o),
(436,0,o),
(498,0,qs),
(551,0,o),
(625,44,o),
(655,80,q),
(671,42,o),
(734,2,o),
(777,2,qs),
(838,2,o),
(922,69,o),
(964,180,o),
(964,248,qs),
(964,370,o),
(846,554,o),
(645,654,o),
(523,654,qs),
(396,654,o),
(191,545,o),
(72,346,o),
(72,218,qs),
(72,91,o),
(187,-104,o),
(390,-212,o),
(519,-212,qs)
);
},
{
closed = 1;
nodes = (
(449,72,o),
(371,152,o),
(371,218,qs),
(371,282,o),
(447,364,o),
(510,364,qs),
(574,364,o),
(650,283,o),
(650,218,qs),
(650,155,o),
(575,72,o),
(510,72,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
31 1 9 3 18 1 5 9 54 1 7 1 55 1 8 7 4 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
31 1 9 4 18 1 5 9 54 1 7 1 55 1 8 7 4 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 0 0 6 3 0 6 105 4 1 3 0 9 5 3 9 105 12 10 2 5 5 1 97 2 1 1 1 34 77 0 7 7 8 97 11 1 8 8 38 8 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 3 9 3 4 9 128 0 0 0 6 3 0 6 105 0 3 0 9 5 3 9 105 12 10 2 5 5 1 97 2 1 1 1 34 77 0 7 7 8 97 11 1 8 8 38 8 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
60 60 0 0 60 71 60 70 66 64 0 59 0 58 38 37 35 18 38 36 38 38 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1034;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(574,-212,o),
(631,-200,qs),
(690,-188,o),
(730,-167,q),
(701,-81,l),
(620,-122,o),
(517,-122,qs),
(411,-122,o),
(252,-32,o),
(166,124,o),
(166,218,qs),
(166,319,o),
(260,477,o),
(422,565,o),
(521,565,qs),
(620,565,o),
(777,487,o),
(867,342,o),
(867,245,qs),
(867,186,o),
(826,93,o),
(780,93,qs),
(730,93,o),
(730,150,qs),
(730,433,l),
(623,433,l),
(623,374,l),
(600,409,o),
(527,443,o),
(484,443,qs),
(425,443,o),
(331,383,o),
(279,281,o),
(279,219,qs),
(279,158,o),
(330,54,o),
(423,-7,o),
(484,-7,qs),
(582,-7,o),
(635,79,q),
(652,38,o),
(719,-5,o),
(766,-5,qs),
(858,-5,o),
(962,136,o),
(962,247,qs),
(962,366,o),
(847,551,o),
(646,654,o),
(521,654,qs),
(393,654,o),
(187,543,o),
(70,344,o),
(70,218,qs),
(70,97,o),
(180,-99,o),
(383,-212,o),
(517,-212,qs)
);
},
{
closed = 1;
nodes = (
(454,90,o),
(388,163,o),
(388,219,qs),
(388,276,o),
(455,347,o),
(507,347,qs),
(559,347,o),
(625,273,o),
(625,218,qs),
(625,163,o),
(561,90,o),
(507,90,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
30 1 9 3 17 1 1 5 52 1 7 1 53 1 8 7 4 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
30 1 9 4 17 1 1 5 52 1 7 1 53 1 8 7 4 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 0 0 6 3 0 6 105 4 1 3 0 9 5 3 9 105 12 10 2 5 5 1 98 2 1 1 1 34 77 0 7 7 8 97 11 1 8 8 38 8 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 3 9 3 4 9 128 0 0 0 6 3 0 6 105 0 3 0 9 5 3 9 105 12 10 2 5 5 1 98 2 1 1 1 34 77 0 7 7 8 97 11 1 8 8 38 8 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
58 58 0 0 58 69 58 68 64 62 0 57 0 56 38 37 34 19 38 35 37 38 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1022;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(575,-212,o),
(632,-200,qs),
(690,-187,o),
(727,-169,q),
(701,-92,l),
(622,-131,o),
(518,-131,qs),
(412,-131,o),
(248,-40,o),
(157,119,o),
(157,218,qs),
(157,321,o),
(253,483,o),
(420,574,o),
(522,574,qs),
(624,574,o),
(785,494,o),
(877,345,o),
(877,245,qs),
(877,183,o),
(833,86,o),
(784,86,qs),
(757,86,o),
(728,119,o),
(728,149,qs),
(728,430,l),
(630,430,l),
(630,373,l),
(606,407,o),
(533,440,o),
(489,440,qs),
(429,440,o),
(334,382,o),
(282,281,o),
(282,219,qs),
(282,157,o),
(333,55,o),
(428,-5,o),
(489,-5,qs),
(584,-5,o),
(642,79,q),
(658,40,o),
(724,-3,o),
(770,-3,qs),
(831,-3,o),
(918,63,o),
(963,176,o),
(963,247,qs),
(963,367,o),
(847,552,o),
(646,654,o),
(522,654,qs),
(394,654,o),
(189,543,o),
(71,345,o),
(71,218,qs),
(71,95,o),
(182,-101,o),
(385,-212,o),
(518,-212,qs)
);
},
{
closed = 1;
nodes = (
(452,84,o),
(382,160,o),
(382,219,qs),
(382,278,o),
(452,353,o),
(508,353,qs),
(563,353,o),
(633,276,o),
(633,218,qs),
(633,160,o),
(565,84,o),
(508,84,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
31 1 9 3 18 1 1 5 54 1 7 1 55 1 8 7 4 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
31 1 9 4 18 1 1 5 54 1 7 1 55 1 8 7 4 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 0 0 6 3 0 6 105 4 1 3 0 9 5 3 9 105 12 10 2 5 5 1 98 2 1 1 1 34 77 0 7 7 8 97 11 1 8 8 38 8 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 3 9 3 4 9 128 0 0 0 6 3 0 6 105 0 3 0 9 5 3 9 105 12 10 2 5 5 1 98 2 1 1 1 34 77 0 7 7 8 97 11 1 8 8 38 8 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
60 60 0 0 60 71 60 70 66 64 0 59 0 58 38 37 35 19 38 35 38 38 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1026;
}
);
note = at;
unicode = 64;
},
{
glyphname = ampersand;
kernLeft = ampersand;
kernRight = ampersand;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(379,-12,o),
(456,73,qs),
(463,82,l),
(545,0,l),
(678,0,l),
(519,158,l),
(667,405,l),
(555,405,l),
(451,226,l),
(318,358,ls),
(257,418,o),
(205,488,o),
(205,526,qs),
(205,565,o),
(257,619,o),
(303,619,qs),
(352,619,o),
(406,562,o),
(406,516,q),
(510,516,l),
(510,606,o),
(397,712,o),
(304,712,qs),
(244,712,o),
(151,664,o),
(100,580,o),
(100,527,qs),
(100,461,o),
(149,398,qs),
(156,388,l),
(149,382,ls),
(102,347,o),
(44,251,o),
(44,195,qs),
(44,136,o),
(102,41,o),
(204,-12,o),
(268,-12,qs)
);
},
{
closed = 1;
nodes = (
(220,83,o),
(149,153,o),
(149,202,qs),
(149,270,o),
(221,321,q),
(398,147,l),
(368,114,o),
(310,83,o),
(274,83,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
41 40 31 28 7 5 6 3 34 1 4 6 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 0 0 0 39 77 0 3 3 4 97 7 5 2 4 4 34 77 8 1 6 6 4 97 7 5 2 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 0 0 0 39 77 0 3 3 4 95 0 4 4 34 77 8 1 6 6 5 97 7 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
38 38 0 0 38 46 38 45 0 37 0 36 18 23 34 18 45 9 8 27
CALL[ ]	/* CallFunction */";
};
width = 702;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(321,-12,o),
(417,40,o),
(457,87,q),
(462,95,l),
(558,0,l),
(662,0,l),
(506,154,l),
(648,404,l),
(561,404,l),
(452,207,l),
(307,350,ls),
(261,395,o),
(214,447,o),
(184,504,o),
(184,534,qs),
(184,581,o),
(244,640,o),
(295,640,qs),
(349,640,o),
(411,579,o),
(411,522,q),
(493,522,l),
(493,609,o),
(386,712,o),
(296,712,qs),
(238,712,o),
(150,665,o),
(102,585,o),
(102,535,qs),
(102,464,o),
(161,394,qs),
(167,387,l),
(161,382,ls),
(111,347,o),
(45,248,o),
(45,188,qs),
(45,134,o),
(96,42,o),
(193,-12,o),
(258,-12,qs)
);
},
{
closed = 1;
nodes = (
(221,61,o),
(159,97,o),
(126,157,o),
(126,191,qs),
(126,273,o),
(219,333,q),
(411,145,l),
(378,102,o),
(307,61,o),
(262,61,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
43 42 35 32 29 7 6 6 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 0 0 0 39 77 0 3 3 4 97 7 5 2 4 4 34 77 8 1 6 6 4 97 7 5 2 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 0 0 0 39 77 0 3 3 4 95 0 4 4 34 77 8 1 6 6 5 97 7 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
40 40 0 0 40 49 40 48 0 39 0 38 18 24 34 18 45 9 8 27
CALL[ ]	/* CallFunction */";
};
width = 691;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(329,-12,o),
(419,23,o),
(454,58,qs),
(464,68,l),
(532,0,l),
(693,0,l),
(532,161,l),
(685,405,l),
(549,405,l),
(449,244,l),
(328,365,ls),
(271,422,o),
(225,485,o),
(225,518,qs),
(225,550,o),
(269,597,o),
(310,597,qs),
(355,597,o),
(400,545,o),
(400,510,q),
(527,510,l),
(527,571,o),
(472,663,o),
(375,712,o),
(312,712,qs),
(250,712,o),
(152,663,o),
(97,575,o),
(97,518,qs),
(97,457,o),
(136,402,qs),
(145,389,l),
(136,382,ls),
(91,347,o),
(43,254,o),
(43,202,qs),
(43,138,o),
(107,40,o),
(214,-12,o),
(278,-12,qs)
);
},
{
closed = 1;
nodes = (
(240,105,o),
(171,168,o),
(171,212,qs),
(171,268,o),
(223,308,q),
(384,148,l),
(358,125,o),
(312,105,o),
(286,105,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
43 42 32 29 7 5 6 3 35 1 4 6 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 0 0 0 39 77 0 3 3 4 97 7 5 2 4 4 34 77 8 1 6 6 4 97 7 5 2 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 0 0 0 39 77 0 3 3 4 95 0 4 4 34 77 8 1 6 6 5 97 7 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
40 40 0 0 40 48 40 47 0 39 0 38 18 23 34 19 45 9 8 27
CALL[ ]	/* CallFunction */";
};
width = 713;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(380,-12,o),
(455,68,qs),
(463,77,l),
(541,0,l),
(683,0,l),
(523,159,l),
(673,405,l),
(553,405,l),
(450,232,l),
(321,360,ls),
(260,421,o),
(211,486,o),
(211,523,qs),
(211,560,o),
(261,611,o),
(305,611,qs),
(353,611,o),
(404,557,o),
(404,514,q),
(516,514,l),
(516,605,o),
(401,712,o),
(307,712,qs),
(246,712,o),
(152,664,o),
(99,578,o),
(99,524,qs),
(99,459,o),
(144,399,qs),
(152,388,l),
(144,382,ls),
(98,347,o),
(44,251,o),
(44,197,qs),
(44,136,o),
(103,41,o),
(207,-12,o),
(271,-12,qs)
);
},
{
closed = 1;
nodes = (
(227,90,o),
(156,158,o),
(156,205,qs),
(156,270,o),
(222,316,q),
(393,147,l),
(364,117,o),
(310,90,o),
(278,90,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
41 40 31 28 7 5 6 3 34 1 4 6 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 0 0 0 39 77 0 3 3 4 97 7 5 2 4 4 34 77 8 1 6 6 4 97 7 5 2 4 4 34 4 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 2 3 2 1 3 128 0 2 2 0 97 0 0 0 39 77 0 3 3 4 95 0 4 4 34 77 8 1 6 6 5 97 7 1 5 5 40 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
38 38 0 0 38 46 38 45 0 37 0 36 18 23 34 18 45 9 8 27
CALL[ ]	/* CallFunction */";
};
width = 706;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = paragraph;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(375,-100,l),
(375,618,l),
(452,618,l),
(452,-100,l),
(543,-100,l),
(543,700,l),
(270,700,ls),
(189,700,o),
(137,672,qs),
(86,645,o),
(34,553,o),
(34,494,qs),
(34,436,o),
(59,392,qs),
(85,343,o),
(190,289,o),
(270,289,qs),
(284,289,l),
(284,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 0 3 2 3 0 2 128 4 1 2 2 132 0 3 3 1 95 0 1 1 33 3 78 17 17 17 40 32 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 614;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(356,-100,l),
(356,634,l),
(438,634,l),
(438,-100,l),
(512,-100,l),
(512,700,l),
(272,700,ls),
(192,700,o),
(139,673,qs),
(88,646,o),
(36,555,o),
(36,497,qs),
(36,439,o),
(61,395,qs),
(87,348,o),
(193,295,o),
(272,295,qs),
(282,295,l),
(282,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 0 3 2 3 0 2 128 4 1 2 2 132 0 3 3 1 95 0 1 1 33 3 78 17 17 17 40 32 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 586;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(393,-100,l),
(393,602,l),
(465,602,l),
(465,-100,l),
(573,-100,l),
(573,700,l),
(268,700,ls),
(187,700,o),
(134,671,qs),
(83,642,o),
(31,549,o),
(31,491,qs),
(31,434,o),
(56,388,qs),
(82,338,o),
(187,283,o),
(268,283,qs),
(285,283,l),
(285,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 0 3 2 3 0 2 128 4 1 2 2 132 0 3 3 1 95 0 1 1 33 3 78 17 17 17 40 32 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 641;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(381,-100,l),
(381,613,l),
(456,613,l),
(456,-100,l),
(553,-100,l),
(553,700,l),
(269,700,ls),
(190,700,o),
(136,672,qs),
(85,644,o),
(33,551,o),
(33,493,qs),
(33,436,o),
(58,390,qs),
(84,341,o),
(189,287,o),
(269,287,qs),
(284,287,l),
(284,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 0 3 2 3 0 2 128 4 1 2 2 132 0 3 3 1 95 0 1 1 33 3 78 17 17 17 40 32 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = paragraph;
unicode = 182;
},
{
glyphname = section;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(359,-232,o),
(463,-186,o),
(523,-98,o),
(523,-38,qs),
(523,19,o),
(496,58,q),
(524,85,o),
(538,120,qs),
(552,152,o),
(552,193,qs),
(552,251,o),
(528,290,qs),
(503,331,o),
(462,354,qs),
(422,379,o),
(370,396,qs),
(273,429,ls),
(230,443,o),
(208,464,qs),
(184,485,o),
(184,525,qs),
(184,572,o),
(248,624,o),
(298,622,qs),
(354,622,o),
(418,560,o),
(419,514,q),
(532,514,l),
(531,572,o),
(473,662,o),
(369,712,o),
(301,712,qs),
(236,712,o),
(132,666,o),
(73,579,o),
(73,520,qs),
(73,460,o),
(100,423,q),
(44,367,o),
(44,288,qs),
(44,207,o),
(139,115,o),
(226,84,qs),
(323,53,ls),
(368,38,o),
(412,-4,o),
(412,-44,qs),
(412,-92,o),
(348,-142,o),
(298,-142,qs),
(240,-142,o),
(178,-75,o),
(177,-34,q),
(64,-34,l),
(65,-93,o),
(126,-183,o),
(230,-232,o),
(295,-232,qs)
);
},
{
closed = 1;
nodes = (
(395,132,o),
(262,179,qs),
(212,197,o),
(155,249,o),
(155,295,qs),
(155,335,o),
(181,361,q),
(211,346,ls),
(218,342,o),
(273,323,o),
(300,314,qs),
(334,302,ls),
(386,283,o),
(441,232,o),
(441,186,qs),
(441,147,o),
(415,119,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
74 67 51 19 4 0 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 39 77 0 1 1 5 97 6 1 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 1 6 1 5 1 5 101 0 4 4 2 97 0 2 2 39 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 57 0 56 34 32 30 29 26 24 34 19 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 597;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(351,-232,o),
(451,-186,o),
(509,-102,o),
(509,-45,qs),
(509,14,o),
(482,52,q),
(511,78,o),
(525,114,qs),
(539,146,o),
(539,185,qs),
(539,245,o),
(516,281,qs),
(494,320,o),
(454,344,qs),
(413,369,o),
(364,385,qs),
(258,421,ls),
(212,436,o),
(187,460,qs),
(161,484,o),
(161,528,qs),
(161,581,o),
(235,642,o),
(291,640,qs),
(350,640,o),
(428,574,o),
(428,518,q),
(516,518,l),
(516,571,o),
(463,660,o),
(363,712,o),
(294,712,qs),
(230,712,o),
(130,666,o),
(73,579,o),
(73,520,qs),
(73,466,o),
(100,428,q),
(44,372,o),
(44,295,qs),
(44,214,o),
(132,127,o),
(219,95,qs),
(325,60,ls),
(374,44,o),
(422,-3,o),
(422,-48,qs),
(422,-102,o),
(351,-160,o),
(292,-160,qs),
(246,-160,o),
(184,-122,o),
(155,-66,o),
(155,-38,q),
(67,-38,l),
(68,-96,o),
(126,-184,o),
(225,-232,o),
(289,-232,qs)
);
},
{
closed = 1;
nodes = (
(384,127,o),
(264,166,qs),
(201,187,o),
(131,243,o),
(131,300,qs),
(131,346,o),
(161,376,q),
(196,358,ls),
(204,354,o),
(291,324,o),
(320,315,qs),
(384,295,o),
(452,235,o),
(452,180,qs),
(452,134,o),
(422,104,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
74 67 52 20 4 0 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 39 77 0 1 1 5 97 6 1 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 1 6 1 5 1 5 101 0 4 4 2 97 0 2 2 39 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 58 0 57 35 33 31 30 27 25 35 19 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 584;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(367,-232,o),
(473,-185,o),
(536,-95,o),
(536,-32,qs),
(536,24,o),
(509,63,q),
(538,90,o),
(551,126,qs),
(565,162,o),
(565,200,qs),
(565,258,o),
(539,299,qs),
(513,339,o),
(470,364,qs),
(427,389,o),
(375,407,qs),
(288,436,ls),
(250,448,o),
(228,467,qs),
(206,486,o),
(206,521,qs),
(206,561,o),
(262,606,o),
(305,604,qs),
(357,604,o),
(408,547,o),
(410,510,q),
(547,510,l),
(546,572,o),
(483,664,o),
(375,712,o),
(307,712,qs),
(241,712,o),
(134,665,o),
(72,576,o),
(72,517,qs),
(72,455,o),
(99,417,q),
(43,361,o),
(43,280,qs),
(43,198,o),
(146,103,o),
(233,73,qs),
(320,45,ls),
(361,30,o),
(401,-7,o),
(401,-41,qs),
(401,-83,o),
(344,-124,o),
(303,-124,qs),
(255,-124,o),
(200,-68,o),
(198,-30,q),
(61,-30,l),
(62,-92,o),
(126,-183,o),
(234,-232,o),
(301,-232,qs)
);
},
{
closed = 1;
nodes = (
(260,192,ls),
(222,207,o),
(179,253,o),
(179,289,qs),
(179,324,o),
(200,346,q),
(226,334,ls),
(234,330,o),
(279,314,qs),
(340,291,o),
(347,288,qs),
(387,271,o),
(429,228,o),
(429,191,qs),
(429,157,o),
(408,134,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
73 67 51 19 4 0 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 39 77 0 1 1 5 97 6 1 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 1 6 1 5 1 5 101 0 4 4 2 97 0 2 2 39 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 57 0 56 34 32 30 29 26 24 34 19 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 609;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(361,-232,o),
(466,-186,o),
(527,-98,o),
(527,-37,qs),
(527,20,o),
(500,59,q),
(529,86,o),
(542,122,qs),
(556,154,o),
(556,195,qs),
(556,255,o),
(531,293,qs),
(506,334,o),
(465,357,qs),
(424,382,o),
(371,400,qs),
(278,431,ls),
(237,445,o),
(214,465,qs),
(191,486,o),
(191,523,qs),
(191,568,o),
(253,618,o),
(300,616,qs),
(355,616,o),
(415,555,o),
(416,513,q),
(537,513,l),
(536,572,o),
(476,662,o),
(371,712,o),
(303,712,qs),
(237,712,o),
(132,665,o),
(72,578,o),
(72,519,qs),
(72,458,o),
(99,421,q),
(43,363,o),
(43,285,qs),
(43,204,o),
(141,111,o),
(228,80,qs),
(322,50,ls),
(365,35,o),
(408,-5,o),
(408,-43,qs),
(408,-89,o),
(346,-136,o),
(299,-136,qs),
(245,-136,o),
(185,-73,o),
(184,-33,q),
(63,-33,l),
(64,-93,o),
(126,-183,o),
(231,-232,o),
(297,-232,qs)
);
},
{
closed = 1;
nodes = (
(398,133,o),
(261,183,qs),
(215,201,o),
(163,250,o),
(163,293,qs),
(163,331,o),
(187,356,q),
(216,342,ls),
(228,336,o),
(277,319,qs),
(338,297,ls),
(386,279,o),
(437,230,o),
(437,187,qs),
(437,150,o),
(413,124,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
73 66 51 19 4 0 3 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 4 4 2 97 0 2 2 39 77 0 1 1 5 97 6 1 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 4 0 4 3 0 128 0 0 1 4 0 1 126 0 1 6 1 5 1 5 101 0 4 4 2 97 0 2 2 39 4 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 57 0 56 34 32 30 29 26 24 34 19 7 8 24
CALL[ ]	/* CallFunction */";
};
width = 601;
}
);
note = section;
unicode = 167;
},
{
glyphname = copyright;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(500,-5,o),
(577,41,qs),
(656,87,o),
(743,248,o),
(743,351,qs),
(743,454,o),
(699,536,qs),
(655,617,o),
(498,706,o),
(395,706,qs),
(292,706,o),
(214,661,qs),
(135,616,o),
(48,454,o),
(48,351,qs),
(48,247,o),
(92,167,qs),
(137,86,o),
(294,-5,o),
(395,-5,qs)
);
},
{
closed = 1;
nodes = (
(472,121,o),
(584,205,o),
(602,276,q),
(507,276,l),
(479,195,o),
(394,195,qs),
(339,195,o),
(268,277,o),
(268,351,qs),
(268,426,o),
(339,507,o),
(394,507,qs),
(435,507,o),
(494,465,o),
(507,426,q),
(602,426,l),
(584,500,o),
(473,582,o),
(396,582,qs),
(335,582,o),
(285,555,qs),
(234,527,o),
(178,423,o),
(178,352,qs),
(178,281,o),
(207,228,qs),
(236,176,o),
(334,121,o),
(396,121,qs)
);
},
{
closed = 1;
nodes = (
(302,37,o),
(234,77,qs),
(166,116,o),
(92,258,o),
(92,351,qs),
(92,445,o),
(130,516,qs),
(167,587,o),
(303,665,o),
(395,665,qs),
(488,665,o),
(557,626,qs),
(625,587,o),
(699,445,o),
(699,351,qs),
(699,258,o),
(662,187,qs),
(625,116,o),
(488,37,o),
(395,37,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 93 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 0 0 8 2 0 8 105 0 2 0 4 3 2 4 105 0 5 11 1 7 9 5 7 105 12 1 9 1 1 9 89 12 1 9 9 1 97 10 1 1 9 1 81 49 49 20 20 0 0 49 68 49 67 59 57 20 48 20 47 45 44 43 41 37 35 33 32 30 28 0 19 0 18 40 13 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 790;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(501,-4,o),
(578,42,qs),
(656,87,o),
(743,248,o),
(743,350,qs),
(743,455,o),
(700,534,qs),
(656,615,o),
(499,704,o),
(397,704,qs),
(294,704,o),
(216,659,qs),
(137,614,o),
(51,453,o),
(51,350,qs),
(51,247,o),
(95,167,qs),
(139,86,o),
(295,-4,o),
(397,-4,qs)
);
},
{
closed = 1;
nodes = (
(472,119,o),
(583,201,o),
(602,270,q),
(525,270,l),
(494,179,o),
(396,179,qs),
(335,179,o),
(254,269,o),
(254,350,qs),
(254,433,o),
(335,522,o),
(396,522,qs),
(442,522,o),
(511,474,o),
(525,430,q),
(602,430,l),
(584,503,o),
(473,583,o),
(397,583,qs),
(338,583,o),
(288,556,qs),
(238,527,o),
(180,422,o),
(180,351,qs),
(180,279,o),
(210,226,qs),
(239,174,o),
(336,119,o),
(397,119,qs)
);
},
{
closed = 1;
nodes = (
(302,33,o),
(234,73,qs),
(165,113,o),
(90,257,o),
(90,350,qs),
(90,444,o),
(128,517,qs),
(166,589,o),
(304,668,o),
(397,668,qs),
(492,668,o),
(560,628,qs),
(629,588,o),
(704,445,o),
(704,350,qs),
(704,256,o),
(667,185,qs),
(629,112,o),
(490,33,o),
(397,33,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 93 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 0 0 8 2 0 8 105 0 2 0 4 3 2 4 105 0 5 11 1 7 9 5 7 105 12 1 9 1 1 9 89 12 1 9 9 1 97 10 1 1 9 1 81 49 49 20 20 0 0 49 68 49 67 59 57 20 48 20 47 45 44 43 41 37 35 33 32 30 28 0 19 0 18 40 13 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 794;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(497,-6,o),
(576,40,qs),
(655,86,o),
(742,248,o),
(742,352,qs),
(742,455,o),
(698,537,qs),
(653,618,o),
(496,708,o),
(393,708,qs),
(290,708,o),
(212,663,qs),
(132,617,o),
(44,455,o),
(44,352,qs),
(44,247,o),
(89,167,qs),
(134,85,o),
(291,-6,o),
(393,-6,qs)
);
},
{
closed = 1;
nodes = (
(471,123,o),
(584,209,o),
(601,281,q),
(489,281,l),
(463,211,o),
(391,211,qs),
(342,211,o),
(281,284,o),
(281,352,qs),
(281,420,o),
(342,492,o),
(391,492,qs),
(427,492,o),
(478,455,o),
(489,422,q),
(601,422,l),
(584,496,o),
(472,581,o),
(394,581,qs),
(331,581,o),
(282,553,qs),
(231,525,o),
(175,422,o),
(175,352,qs),
(175,282,o),
(204,230,qs),
(232,178,o),
(331,123,o),
(394,123,qs)
);
},
{
closed = 1;
nodes = (
(302,41,o),
(234,80,qs),
(167,119,o),
(94,260,o),
(94,352,qs),
(94,445,o),
(131,515,qs),
(167,586,o),
(302,662,o),
(393,662,qs),
(485,662,o),
(553,624,qs),
(620,585,o),
(693,444,o),
(693,352,qs),
(693,260,o),
(657,189,qs),
(620,118,o),
(485,41,o),
(393,41,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 93 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 0 0 8 2 0 8 105 0 2 0 4 3 2 4 105 0 5 11 1 7 9 5 7 105 12 1 9 1 1 9 89 12 1 9 9 1 98 10 1 1 9 1 82 49 49 20 20 0 0 49 68 49 67 59 57 20 48 20 47 45 44 43 41 37 35 33 32 30 28 0 19 0 18 40 13 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 786;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(498,-5,o),
(577,41,qs),
(656,86,o),
(742,247,o),
(742,351,qs),
(742,456,o),
(699,536,qs),
(654,617,o),
(497,707,o),
(394,707,qs),
(291,707,o),
(213,662,qs),
(134,616,o),
(46,454,o),
(46,351,qs),
(46,247,o),
(91,167,qs),
(136,85,o),
(292,-5,o),
(394,-5,qs)
);
},
{
closed = 1;
nodes = (
(472,122,o),
(584,206,o),
(601,277,q),
(501,277,l),
(473,200,o),
(393,200,qs),
(340,200,o),
(272,279,o),
(272,351,qs),
(272,424,o),
(340,502,o),
(393,502,qs),
(432,502,o),
(489,462,o),
(501,425,q),
(601,425,l),
(584,498,o),
(472,582,o),
(395,582,qs),
(333,582,o),
(284,554,qs),
(233,526,o),
(177,422,o),
(177,352,qs),
(177,281,o),
(206,229,qs),
(234,177,o),
(333,122,o),
(395,122,qs)
);
},
{
closed = 1;
nodes = (
(301,38,o),
(234,78,qs),
(166,117,o),
(93,258,o),
(93,351,qs),
(93,445,o),
(130,516,qs),
(167,587,o),
(303,664,o),
(394,664,qs),
(488,664,o),
(555,625,qs),
(623,586,o),
(697,444,o),
(697,351,qs),
(697,258,o),
(660,188,qs),
(623,116,o),
(486,38,o),
(394,38,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 93 values pushed */
0 3 4 6 4 3 6 128 0 6 5 4 6 5 126 0 0 0 8 2 0 8 105 0 2 0 4 3 2 4 105 0 5 11 1 7 9 5 7 105 12 1 9 1 1 9 89 12 1 9 9 1 97 10 1 1 9 1 81 49 49 20 20 0 0 49 68 49 67 59 57 20 48 20 47 45 44 43 41 37 35 33 32 30 28 0 19 0 18 40 13 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 789;
}
);
note = copyright;
unicode = 169;
},
{
glyphname = registered;
kernLeft = registered;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(226,425,o),
(292,463,o),
(330,529,o),
(330,568,qs),
(330,607,o),
(292,673,o),
(226,712,o),
(187,712,qs),
(148,712,o),
(82,673,o),
(43,607,o),
(43,568,qs),
(43,529,o),
(82,463,o),
(148,425,o),
(187,425,qs)
);
},
{
closed = 1;
nodes = (
(138,448,o),
(67,519,o),
(67,568,qs),
(67,618,o),
(138,688,o),
(187,688,qs),
(237,688,o),
(307,618,o),
(307,568,qs),
(307,519,o),
(237,448,o),
(187,448,qs)
);
},
{
closed = 1;
nodes = (
(166,496,l),
(166,561,l),
(184,561,l),
(219,496,l),
(252,496,l),
(211,568,l),
(240,578,o),
(240,607,qs),
(240,625,o),
(218,651,o),
(192,651,qs),
(138,651,l),
(138,496,l)
);
},
{
closed = 1;
nodes = (
(166,585,l),
(166,628,l),
(188,628,ls),
(200,628,o),
(213,617,o),
(213,607,qs),
(213,596,o),
(198,585,o),
(185,585,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
34 1 6 9 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 4 2 8 0 4 114 0 8 9 2 8 112 12 1 9 6 2 9 6 126 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 4 2 8 2 4 8 128 0 8 9 2 8 9 126 12 1 9 6 2 9 6 126 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
41 41 16 16 0 0 41 49 41 48 47 45 40 39 38 37 36 35 30 28 16 27 16 26 22 20 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 372;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(228,425,o),
(294,463,o),
(332,529,o),
(332,568,qs),
(332,607,o),
(294,673,o),
(228,712,o),
(189,712,qs),
(150,712,o),
(84,673,o),
(45,607,o),
(45,568,qs),
(45,529,o),
(84,463,o),
(150,425,o),
(189,425,qs)
);
},
{
closed = 1;
nodes = (
(140,448,o),
(69,519,o),
(69,568,qs),
(69,618,o),
(140,688,o),
(189,688,qs),
(239,688,o),
(309,618,o),
(309,568,qs),
(309,519,o),
(239,448,o),
(189,448,qs)
);
},
{
closed = 1;
nodes = (
(168,496,l),
(168,561,l),
(186,561,l),
(221,496,l),
(254,496,l),
(213,568,l),
(242,578,o),
(242,607,qs),
(242,625,o),
(220,651,o),
(194,651,qs),
(140,651,l),
(140,496,l)
);
},
{
closed = 1;
nodes = (
(168,585,l),
(168,628,l),
(190,628,ls),
(202,628,o),
(215,617,o),
(215,607,qs),
(215,596,o),
(200,585,o),
(187,585,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
34 1 6 9 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
7 1 5 6 3 8 5 114 0 0 0 2 4 0 2 105 0 4 0 8 9 4 8 105 12 1 9 0 6 5 9 6 103 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
7 1 5 6 3 6 5 3 128 0 0 0 2 4 0 2 105 0 4 0 8 9 4 8 105 12 1 9 0 6 5 9 6 103 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
41 41 16 16 0 0 41 49 41 48 47 45 40 39 38 37 36 35 30 28 16 27 16 26 22 20 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 377;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(223,425,o),
(289,463,o),
(327,529,o),
(327,568,qs),
(327,607,o),
(289,673,o),
(223,712,o),
(184,712,qs),
(145,712,o),
(79,673,o),
(40,607,o),
(40,568,qs),
(40,529,o),
(79,463,o),
(145,425,o),
(184,425,qs)
);
},
{
closed = 1;
nodes = (
(135,448,o),
(64,519,o),
(64,568,qs),
(64,618,o),
(135,688,o),
(184,688,qs),
(234,688,o),
(304,618,o),
(304,568,qs),
(304,519,o),
(234,448,o),
(184,448,qs)
);
},
{
closed = 1;
nodes = (
(163,496,l),
(163,561,l),
(181,561,l),
(216,496,l),
(249,496,l),
(208,568,l),
(237,578,o),
(237,607,qs),
(237,625,o),
(215,651,o),
(189,651,qs),
(135,651,l),
(135,496,l)
);
},
{
closed = 1;
nodes = (
(163,585,l),
(163,628,l),
(185,628,ls),
(197,628,o),
(210,617,o),
(210,607,qs),
(210,596,o),
(195,585,o),
(182,585,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
34 1 6 9 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 4 2 8 0 4 114 0 8 9 2 8 112 12 1 9 6 3 9 112 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 98 10 1 1 3 1 82
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 4 2 8 0 4 114 0 8 9 2 8 112 12 1 9 6 2 9 6 126 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 98 10 1 1 3 1 82
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 4 2 8 2 4 8 128 0 8 9 2 8 9 126 12 1 9 6 2 9 6 126 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 98 10 1 1 3 1 82
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
41 41 16 16 0 0 41 49 41 48 47 45 40 39 38 37 36 35 30 28 16 27 16 26 22 20 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 367;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(225,425,o),
(291,463,o),
(329,529,o),
(329,568,qs),
(329,607,o),
(291,673,o),
(225,712,o),
(186,712,qs),
(147,712,o),
(81,673,o),
(42,607,o),
(42,568,qs),
(42,529,o),
(81,463,o),
(147,425,o),
(186,425,qs)
);
},
{
closed = 1;
nodes = (
(137,448,o),
(66,519,o),
(66,568,qs),
(66,618,o),
(137,688,o),
(186,688,qs),
(236,688,o),
(306,618,o),
(306,568,qs),
(306,519,o),
(236,448,o),
(186,448,qs)
);
},
{
closed = 1;
nodes = (
(165,496,l),
(165,561,l),
(183,561,l),
(218,496,l),
(251,496,l),
(210,568,l),
(239,578,o),
(239,607,qs),
(239,625,o),
(217,651,o),
(191,651,qs),
(137,651,l),
(137,496,l)
);
},
{
closed = 1;
nodes = (
(165,585,l),
(165,628,l),
(187,628,ls),
(199,628,o),
(212,617,o),
(212,607,qs),
(212,596,o),
(197,585,o),
(184,585,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
34 1 6 9 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 4 2 8 0 4 114 0 8 9 2 8 112 12 1 9 6 2 9 6 126 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 4 2 8 2 4 8 128 0 8 9 2 8 9 126 12 1 9 6 2 9 6 126 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
41 41 16 16 0 0 41 49 41 48 47 45 40 39 38 37 36 35 30 28 16 27 16 26 22 20 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 370;
}
);
note = registered;
unicode = 174;
},
{
glyphname = trademark;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,350,l),
(407,581,l),
(488,395,l),
(541,395,l),
(623,579,l),
(623,350,l),
(693,350,l),
(693,700,l),
(610,700,l),
(516,484,l),
(424,700,l),
(339,700,l),
(339,350,l)
);
},
{
closed = 1;
nodes = (
(192,350,l),
(192,641,l),
(286,641,l),
(286,700,l),
(27,700,l),
(27,641,l),
(121,641,l),
(121,350,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
10 7 2 3 3 5 1 76 0 3 5 2 5 3 2 128 8 4 2 2 2 132 6 1 2 0 5 5 0 87 6 1 2 0 0 5 95 7 1 5 0 5 79 17 17 17 17 18 18 17 18 16 9 6 31
CALL[ ]	/* CallFunction */";
};
width = 741;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(386,350,l),
(386,610,l),
(478,396,l),
(526,396,l),
(619,606,l),
(619,350,l),
(682,350,l),
(682,700,l),
(602,700,l),
(504,475,l),
(411,700,l),
(326,700,l),
(326,350,l)
);
},
{
closed = 1;
nodes = (
(182,350,l),
(182,647,l),
(272,647,l),
(272,700,l),
(27,700,l),
(27,647,l),
(117,647,l),
(117,350,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
10 7 2 3 3 5 1 76 0 3 5 2 5 3 2 128 8 4 2 2 2 132 6 1 2 0 5 5 0 87 6 1 2 0 0 5 95 7 1 5 0 5 79 17 17 17 17 18 18 17 18 16 9 6 31
CALL[ ]	/* CallFunction */";
};
width = 732;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(428,350,l),
(428,552,l),
(498,393,l),
(556,393,l),
(627,552,l),
(627,350,l),
(703,350,l),
(703,700,l),
(618,700,l),
(528,492,l),
(437,700,l),
(352,700,l),
(352,350,l)
);
},
{
closed = 1;
nodes = (
(201,350,l),
(201,634,l),
(300,634,l),
(300,700,l),
(27,700,l),
(27,634,l),
(125,634,l),
(125,350,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
10 7 2 3 3 5 1 76 0 3 5 2 5 3 2 128 8 4 2 2 2 132 6 1 2 0 5 5 0 87 6 1 2 0 0 5 95 7 1 5 0 5 79 17 17 17 17 18 18 17 18 16 9 6 31
CALL[ ]	/* CallFunction */";
};
width = 750;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(414,350,l),
(414,571,l),
(491,394,l),
(546,394,l),
(624,570,l),
(624,350,l),
(696,350,l),
(696,700,l),
(613,700,l),
(520,486,l),
(428,700,l),
(343,700,l),
(343,350,l)
);
},
{
closed = 1;
nodes = (
(195,350,l),
(195,638,l),
(291,638,l),
(291,700,l),
(27,700,l),
(27,638,l),
(122,638,l),
(122,350,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
10 7 2 3 3 5 1 76 0 3 5 2 5 3 2 128 8 4 2 2 2 132 6 1 2 0 5 5 0 87 6 1 2 0 0 5 95 7 1 5 0 5 79 17 17 17 17 18 18 17 18 16 9 6 31
CALL[ ]	/* CallFunction */";
};
width = 744;
}
);
note = trademark;
unicode = 8482;
},
{
glyphname = degree;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(235,435,o),
(314,512,o),
(314,573,qs),
(314,636,o),
(235,712,o),
(176,712,qs),
(118,712,o),
(38,635,o),
(38,573,qs),
(38,512,o),
(118,435,o),
(176,435,qs)
);
},
{
closed = 1;
nodes = (
(150,507,o),
(114,544,o),
(114,574,qs),
(114,604,o),
(151,640,o),
(176,640,qs),
(202,640,o),
(239,604,o),
(239,574,qs),
(239,544,o),
(201,507,o),
(176,507,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 352;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(227,444,o),
(303,519,o),
(303,577,qs),
(303,638,o),
(227,712,o),
(172,712,qs),
(116,712,o),
(39,636,o),
(39,577,qs),
(39,518,o),
(115,444,o),
(171,444,qs)
);
},
{
closed = 1;
nodes = (
(144,506,o),
(105,544,o),
(105,578,qs),
(105,612,o),
(145,650,o),
(172,650,qs),
(198,650,o),
(238,612,o),
(238,578,qs),
(238,544,o),
(197,506,o),
(171,506,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 343;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(243,426,o),
(325,504,o),
(325,569,qs),
(325,634,o),
(243,712,o),
(180,712,qs),
(120,712,o),
(36,633,o),
(36,569,qs),
(36,505,o),
(120,426,o),
(180,426,qs)
);
},
{
closed = 1;
nodes = (
(156,508,o),
(122,542,o),
(122,569,qs),
(122,596,o),
(155,630,o),
(180,630,qs),
(205,630,o),
(240,596,o),
(240,569,qs),
(240,542,o),
(205,508,o),
(180,508,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 360;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(237,432,o),
(318,509,o),
(318,572,qs),
(318,635,o),
(238,712,o),
(177,712,qs),
(118,712,o),
(37,634,o),
(37,572,qs),
(37,509,o),
(118,432,o),
(177,432,qs)
);
},
{
closed = 1;
nodes = (
(152,507,o),
(116,543,o),
(116,572,qs),
(116,602,o),
(152,637,o),
(177,637,qs),
(203,637,o),
(239,602,o),
(239,572,qs),
(239,543,o),
(203,507,o),
(177,507,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 354;
}
);
note = degree;
unicode = 176;
},
{
glyphname = bar;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,-100,l),
(177,720,l),
(71,720,l),
(71,-100,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 95 0 0 0 33 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 248;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(158,-100,l),
(158,720,l),
(74,720,l),
(74,-100,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 134 0 0 0 33 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 0 1 0 133 0 1 1 118
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 232;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(196,-100,l),
(196,720,l),
(68,720,l),
(68,-100,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 95 0 0 0 33 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 264;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(183,-100,l),
(183,720,l),
(70,720,l),
(70,-100,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 95 0 0 0 33 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 253;
}
);
note = bar;
unicode = 124;
},
{
glyphname = brokenbar;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,391,l),
(177,720,l),
(71,720,l),
(71,391,l)
);
},
{
closed = 1;
nodes = (
(177,-100,l),
(177,230,l),
(71,230,l),
(71,-100,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 0 3 2 3 99 0 1 1 0 95 0 0 0 33 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 248;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(158,387,l),
(158,720,l),
(74,720,l),
(74,387,l)
);
},
{
closed = 1;
nodes = (
(158,-100,l),
(158,233,l),
(74,233,l),
(74,-100,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 0 3 2 3 99 0 1 1 0 95 0 0 0 33 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 232;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(196,394,l),
(196,720,l),
(68,720,l),
(68,394,l)
);
},
{
closed = 1;
nodes = (
(196,-100,l),
(196,226,l),
(68,226,l),
(68,-100,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 0 3 2 3 99 0 1 1 0 95 0 0 0 33 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 264;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(183,392,l),
(183,720,l),
(70,720,l),
(70,392,l)
);
},
{
closed = 1;
nodes = (
(183,-100,l),
(183,228,l),
(70,228,l),
(70,-100,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 0 3 2 3 99 0 1 1 0 95 0 0 0 33 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 253;
}
);
note = brokenbar;
unicode = 166;
},
{
glyphname = dagger;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(334,-261,l),
(323,476,l),
(518,468,l),
(518,551,l),
(323,541,l),
(334,783,l),
(228,783,l),
(239,541,l),
(44,551,l),
(44,468,l),
(239,476,l),
(228,-261,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 1 2 133 0 5 0 5 134 3 1 1 0 0 1 87 3 1 1 1 0 96 4 1 0 1 0 80 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 562;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(307,-259,l),
(299,488,l),
(489,481,l),
(489,548,l),
(299,540,l),
(307,780,l),
(224,780,l),
(232,540,l),
(41,548,l),
(41,481,l),
(232,488,l),
(224,-259,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 1 2 133 0 5 0 5 134 3 1 1 0 0 1 87 3 1 1 1 0 96 4 1 0 1 0 80 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 531;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(360,-263,l),
(347,464,l),
(547,454,l),
(547,553,l),
(347,542,l),
(360,785,l),
(232,785,l),
(245,542,l),
(46,553,l),
(46,454,l),
(245,464,l),
(232,-263,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 1 2 133 0 5 0 5 134 3 1 1 0 0 1 87 3 1 1 1 0 96 4 1 0 1 0 80 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 593;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(342,-262,l),
(331,472,l),
(528,463,l),
(528,551,l),
(331,541,l),
(342,783,l),
(229,783,l),
(241,541,l),
(44,551,l),
(44,463,l),
(241,472,l),
(229,-262,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 2 1 2 133 0 5 0 5 134 3 1 1 0 0 1 87 3 1 1 1 0 96 4 1 0 1 0 80 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 572;
}
);
note = dagger;
unicode = 8224;
},
{
glyphname = uni2113;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,-100,l),
(177,720,l),
(71,720,l),
(71,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 248;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(158,-100,l),
(158,720,l),
(74,720,l),
(74,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 232;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(196,-100,l),
(196,720,l),
(68,720,l),
(68,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 264;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(183,-100,l),
(183,720,l),
(70,720,l),
(70,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 253;
}
);
note = uni2113;
unicode = 8467;
},
{
glyphname = daggerdbl;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(334,-261,l),
(324,-19,l),
(519,-28,l),
(519,55,l),
(324,46,l),
(324,476,l),
(519,468,l),
(519,551,l),
(324,541,l),
(334,783,l),
(228,783,l),
(240,541,l),
(44,551,l),
(44,468,l),
(240,476,l),
(240,46,l),
(44,55,l),
(44,-28,l),
(240,-19,l),
(228,-261,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 1 0 95 8 1 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 18 17 17 17 17 17 17 17 17 16 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 563;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(307,-259,l),
(299,-19,l),
(490,-26,l),
(490,41,l),
(299,33,l),
(299,488,l),
(490,481,l),
(490,548,l),
(299,540,l),
(307,780,l),
(224,780,l),
(233,540,l),
(42,548,l),
(42,481,l),
(233,488,l),
(233,33,l),
(42,41,l),
(42,-26,l),
(233,-19,l),
(224,-259,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 1 0 95 8 1 0 0 34 0 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 18 17 17 17 17 17 17 17 17 16 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 532;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(360,-263,l),
(348,-20,l),
(548,-31,l),
(548,68,l),
(348,58,l),
(348,464,l),
(548,454,l),
(548,553,l),
(348,542,l),
(360,785,l),
(232,785,l),
(246,542,l),
(46,553,l),
(46,454,l),
(246,464,l),
(246,58,l),
(46,68,l),
(46,-31,l),
(246,-20,l),
(232,-263,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79 19 18 17 17 17 17 17 17 17 17 16 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 594;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(342,-262,l),
(332,-20,l),
(529,-29,l),
(529,59,l),
(332,50,l),
(332,472,l),
(529,463,l),
(529,551,l),
(332,541,l),
(342,783,l),
(229,783,l),
(242,541,l),
(45,551,l),
(45,463,l),
(242,472,l),
(242,50,l),
(45,59,l),
(45,-29,l),
(242,-20,l),
(229,-262,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79 19 18 17 17 17 17 17 17 17 17 16 10 8 31
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = daggerdbl;
unicode = 8225;
},
{
glyphname = estimated;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(556,-12,o),
(692,134,q),
(647,184,l),
(583,120,o),
(462,57,o),
(388,57,qs),
(323,57,o),
(225,101,o),
(186,145,q),
(186,317,l),
(720,317,l),
(720,380,ls),
(720,445,o),
(675,564,o),
(633,610,qs),
(588,659,o),
(460,712,o),
(379,712,qs),
(268,712,o),
(193,662,qs),
(118,612,o),
(38,441,o),
(38,334,qs),
(38,221,o),
(85,146,qs),
(130,69,o),
(287,-12,o),
(388,-12,qs)
);
},
{
closed = 1;
nodes = (
(186,555,l),
(254,644,o),
(379,644,qs),
(439,644,o),
(533,603,o),
(565,565,q),
(565,387,l),
(186,387,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
34 29 2 5 4 25 24 18 3 2 1 2 76 0 0 0 4 5 0 4 105 7 1 5 0 1 2 5 1 103 0 2 3 3 2 89 0 2 2 3 97 6 1 3 2 3 81 28 28 0 0 28 35 28 35 33 31 0 27 0 26 35 22 40 8 6 25
CALL[ ]	/* CallFunction */";
};
width = 759;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(557,-12,o),
(694,136,q),
(654,179,l),
(587,112,o),
(464,46,o),
(390,46,qs),
(318,46,o),
(214,96,o),
(173,147,q),
(173,317,l),
(722,317,l),
(722,380,ls),
(722,445,o),
(677,564,o),
(634,610,qs),
(589,659,o),
(461,712,o),
(381,712,qs),
(270,712,o),
(195,662,qs),
(119,612,o),
(40,440,o),
(40,334,qs),
(40,222,o),
(86,146,qs),
(131,69,o),
(288,-12,o),
(390,-12,qs)
);
},
{
closed = 1;
nodes = (
(173,551,l),
(208,603,o),
(315,654,o),
(381,654,qs),
(445,654,o),
(547,606,o),
(579,562,q),
(579,381,l),
(173,381,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
35 29 2 5 4 25 24 18 3 2 1 2 76 0 0 0 4 5 0 4 105 7 1 5 0 1 2 5 1 103 0 2 3 3 2 89 0 2 2 3 97 6 1 3 2 3 81 28 28 0 0 28 36 28 36 33 31 0 27 0 26 35 22 40 8 6 25
CALL[ ]	/* CallFunction */";
};
width = 762;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(552,-12,o),
(690,132,q),
(640,189,l),
(579,128,o),
(459,67,o),
(386,67,qs),
(328,67,o),
(237,105,o),
(199,143,q),
(199,317,l),
(718,317,l),
(718,380,ls),
(718,444,o),
(673,564,o),
(631,610,qs),
(586,659,o),
(458,712,o),
(377,712,qs),
(266,712,o),
(191,662,qs),
(116,612,o),
(36,440,o),
(36,333,qs),
(36,221,o),
(83,145,qs),
(128,69,o),
(286,-12,o),
(386,-12,qs)
);
},
{
closed = 1;
nodes = (
(199,559,l),
(265,634,o),
(377,634,qs),
(487,634,o),
(550,568,q),
(550,393,l),
(199,393,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
33 29 2 5 4 25 24 18 3 2 1 2 76 0 0 0 4 5 0 4 105 7 1 5 0 1 2 5 1 103 0 2 3 3 2 89 0 2 2 3 97 6 1 3 2 3 81 28 28 0 0 28 34 28 34 32 30 0 27 0 26 35 22 40 8 6 25
CALL[ ]	/* CallFunction */";
};
width = 755;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(554,-12,o),
(691,133,q),
(645,186,l),
(582,123,o),
(461,60,o),
(387,60,qs),
(324,60,o),
(230,102,o),
(190,144,q),
(190,317,l),
(719,317,l),
(719,380,ls),
(719,444,o),
(674,564,o),
(632,610,qs),
(587,659,o),
(459,712,o),
(378,712,qs),
(267,712,o),
(192,662,qs),
(117,612,o),
(37,440,o),
(37,333,qs),
(37,221,o),
(84,145,qs),
(129,69,o),
(287,-12,o),
(387,-12,qs)
);
},
{
closed = 1;
nodes = (
(190,556,l),
(257,641,o),
(378,641,qs),
(436,641,o),
(528,602,o),
(560,566,q),
(560,389,l),
(190,389,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
34 29 2 5 4 25 24 18 3 2 1 2 76 0 0 0 4 5 0 4 105 7 1 5 0 1 2 5 1 103 0 2 3 3 2 89 0 2 2 3 97 6 1 3 2 3 81 28 28 0 0 28 35 28 35 33 31 0 27 0 26 35 22 40 8 6 25
CALL[ ]	/* CallFunction */";
};
width = 757;
}
);
note = estimated;
unicode = 8494;
},
{
glyphname = at.case;
kernRight = at.case;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(576,-84,o),
(633,-72,qs),
(687,-60,o),
(726,-42,q),
(701,31,l),
(620,-8,o),
(518,-8,qs),
(413,-8,o),
(247,83,o),
(153,244,o),
(153,346,qs),
(153,450,o),
(250,615,o),
(419,707,o),
(522,707,qs),
(626,707,o),
(790,626,o),
(882,475,o),
(882,374,qs),
(882,309,o),
(836,211,o),
(786,211,qs),
(758,211,o),
(727,246,o),
(727,277,qs),
(727,557,l),
(634,557,l),
(634,500,l),
(609,534,o),
(536,567,o),
(492,567,qs),
(431,567,o),
(336,510,o),
(284,409,o),
(284,347,qs),
(284,285,o),
(336,184,o),
(430,125,o),
(491,125,qs),
(586,125,o),
(645,208,q),
(662,169,o),
(727,127,o),
(772,127,qs),
(863,127,o),
(963,268,o),
(963,376,qs),
(963,496,o),
(847,681,o),
(645,782,o),
(522,782,qs),
(395,782,o),
(189,672,o),
(71,473,o),
(71,346,qs),
(71,222,o),
(183,27,o),
(387,-84,o),
(518,-84,qs)
);
},
{
closed = 1;
nodes = (
(451,209,o),
(380,286,o),
(380,347,qs),
(380,407,o),
(452,484,o),
(509,484,qs),
(567,484,o),
(638,406,o),
(638,346,qs),
(638,287,o),
(568,209,o),
(509,209,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
30 1 9 3 17 1 1 5 53 1 7 1 54 1 8 7 4 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
30 1 9 4 17 1 1 5 53 1 7 1 54 1 8 7 4 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 6 3 0 6 105 4 1 3 0 9 5 3 9 105 12 10 2 5 2 1 1 7 5 1 105 0 7 8 8 7 89 0 7 7 8 97 11 1 8 7 8 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 4 3 9 3 4 9 128 0 0 0 6 3 0 6 105 0 3 0 9 5 3 9 105 12 10 2 5 2 1 1 7 5 1 105 0 7 8 8 7 89 0 7 7 8 97 11 1 8 7 8 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
59 59 0 0 59 70 59 69 65 63 0 58 0 57 38 37 35 19 38 35 37 38 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1025;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(577,-84,o),
(634,-72,qs),
(684,-62,o),
(721,-45,q),
(701,15,l),
(621,-22,o),
(519,-22,qs),
(414,-22,o),
(241,69,o),
(140,237,o),
(140,346,qs),
(140,453,o),
(240,624,o),
(415,721,o),
(523,721,qs),
(632,721,o),
(802,636,o),
(897,478,o),
(897,374,qs),
(897,304,o),
(846,201,o),
(791,201,qs),
(759,201,o),
(724,242,o),
(724,275,qs),
(724,553,l),
(644,553,l),
(644,498,l),
(591,563,o),
(499,563,qs),
(437,563,o),
(341,508,o),
(288,409,o),
(288,347,qs),
(288,284,o),
(341,185,o),
(436,128,o),
(498,128,qs),
(551,128,o),
(625,172,o),
(655,208,q),
(671,170,o),
(734,130,o),
(777,130,qs),
(838,130,o),
(922,197,o),
(964,308,o),
(964,376,qs),
(964,498,o),
(846,682,o),
(645,782,o),
(523,782,qs),
(396,782,o),
(191,673,o),
(72,474,o),
(72,346,qs),
(72,219,o),
(187,24,o),
(390,-84,o),
(519,-84,qs)
);
},
{
closed = 1;
nodes = (
(449,200,o),
(371,280,o),
(371,346,qs),
(371,410,o),
(447,492,o),
(510,492,qs),
(574,492,o),
(650,411,o),
(650,346,qs),
(650,283,o),
(575,200,o),
(510,200,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
31 1 9 3 18 1 5 9 54 1 7 1 55 1 8 7 4 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
31 1 9 4 18 1 5 9 54 1 7 1 55 1 8 7 4 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 6 3 0 6 105 4 1 3 0 9 5 3 9 105 12 10 2 5 2 1 1 7 5 1 105 0 7 8 8 7 89 0 7 7 8 97 11 1 8 7 8 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 4 3 9 3 4 9 128 0 0 0 6 3 0 6 105 0 3 0 9 5 3 9 105 12 10 2 5 2 1 1 7 5 1 105 0 7 8 8 7 89 0 7 7 8 97 11 1 8 7 8 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
60 60 0 0 60 71 60 70 66 64 0 59 0 58 38 37 35 18 38 36 38 38 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1028;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(574,-84,o),
(631,-72,qs),
(690,-60,o),
(730,-39,q),
(701,47,l),
(620,6,o),
(517,6,qs),
(411,6,o),
(252,96,o),
(166,252,o),
(166,346,qs),
(166,447,o),
(260,605,o),
(422,693,o),
(521,693,qs),
(620,693,o),
(777,615,o),
(867,470,o),
(867,373,qs),
(867,314,o),
(826,221,o),
(780,221,qs),
(730,221,o),
(730,278,qs),
(730,561,l),
(623,561,l),
(623,502,l),
(600,537,o),
(527,571,o),
(484,571,qs),
(425,571,o),
(331,511,o),
(279,409,o),
(279,347,qs),
(279,286,o),
(330,182,o),
(423,121,o),
(484,121,qs),
(582,121,o),
(635,207,q),
(652,166,o),
(719,123,o),
(766,123,qs),
(858,123,o),
(962,264,o),
(962,375,qs),
(962,494,o),
(847,679,o),
(646,782,o),
(521,782,qs),
(393,782,o),
(187,671,o),
(70,472,o),
(70,346,qs),
(70,225,o),
(180,29,o),
(383,-84,o),
(517,-84,qs)
);
},
{
closed = 1;
nodes = (
(454,218,o),
(388,291,o),
(388,347,qs),
(388,404,o),
(455,475,o),
(507,475,qs),
(559,475,o),
(625,401,o),
(625,346,qs),
(625,291,o),
(561,218,o),
(507,218,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
30 1 9 3 17 1 1 5 52 1 7 1 53 1 8 7 4 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
30 1 9 4 17 1 1 5 52 1 7 1 53 1 8 7 4 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 6 3 0 6 105 4 1 3 0 9 5 3 9 105 12 10 2 5 2 1 1 7 5 1 106 0 7 8 8 7 89 0 7 7 8 97 11 1 8 7 8 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 4 3 9 3 4 9 128 0 0 0 6 3 0 6 105 0 3 0 9 5 3 9 105 12 10 2 5 2 1 1 7 5 1 106 0 7 8 8 7 89 0 7 7 8 97 11 1 8 7 8 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
58 58 0 0 58 69 58 68 64 62 0 57 0 56 38 37 34 19 38 35 37 38 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1022;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(575,-84,o),
(632,-72,qs),
(690,-59,o),
(727,-41,q),
(701,36,l),
(622,-3,o),
(518,-3,qs),
(412,-3,o),
(248,88,o),
(157,247,o),
(157,346,qs),
(157,449,o),
(253,611,o),
(420,702,o),
(522,702,qs),
(624,702,o),
(785,622,o),
(877,473,o),
(877,373,qs),
(877,311,o),
(833,214,o),
(784,214,qs),
(757,214,o),
(728,247,o),
(728,277,qs),
(728,558,l),
(630,558,l),
(630,501,l),
(606,535,o),
(533,568,o),
(489,568,qs),
(429,568,o),
(334,510,o),
(282,409,o),
(282,347,qs),
(282,285,o),
(333,183,o),
(428,123,o),
(489,123,qs),
(584,123,o),
(642,207,q),
(658,168,o),
(724,125,o),
(770,125,qs),
(831,125,o),
(918,191,o),
(963,304,o),
(963,375,qs),
(963,495,o),
(847,680,o),
(646,782,o),
(522,782,qs),
(394,782,o),
(189,671,o),
(71,473,o),
(71,346,qs),
(71,223,o),
(182,27,o),
(385,-84,o),
(518,-84,qs)
);
},
{
closed = 1;
nodes = (
(452,212,o),
(382,288,o),
(382,347,qs),
(382,406,o),
(452,481,o),
(508,481,qs),
(563,481,o),
(633,404,o),
(633,346,qs),
(633,288,o),
(565,212,o),
(508,212,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
31 1 9 3 18 1 1 5 54 1 7 1 55 1 8 7 4 76
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
31 1 9 4 18 1 1 5 54 1 7 1 55 1 8 7 4 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 6 3 0 6 105 4 1 3 0 9 5 3 9 105 12 10 2 5 2 1 1 7 5 1 106 0 7 8 8 7 89 0 7 7 8 97 11 1 8 7 8 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 4 3 9 3 4 9 128 0 0 0 6 3 0 6 105 0 3 0 9 5 3 9 105 12 10 2 5 2 1 1 7 5 1 106 0 7 8 8 7 89 0 7 7 8 97 11 1 8 7 8 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
60 60 0 0 60 71 60 70 66 64 0 59 0 58 38 37 35 19 38 35 38 38 13 8 30
CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = at.case;
},
{
glyphname = registered.case;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(228,629,o),
(294,667,o),
(332,733,o),
(332,772,qs),
(332,811,o),
(294,877,o),
(228,916,o),
(189,916,qs),
(150,916,o),
(84,877,o),
(45,811,o),
(45,772,qs),
(45,733,o),
(84,667,o),
(150,629,o),
(189,629,qs)
);
},
{
closed = 1;
nodes = (
(140,652,o),
(69,723,o),
(69,772,qs),
(69,822,o),
(140,892,o),
(189,892,qs),
(239,892,o),
(309,822,o),
(309,772,qs),
(309,723,o),
(239,652,o),
(189,652,qs)
);
},
{
closed = 1;
nodes = (
(168,700,l),
(168,765,l),
(186,765,l),
(221,700,l),
(254,700,l),
(213,772,l),
(242,782,o),
(242,811,qs),
(242,829,o),
(220,855,o),
(194,855,qs),
(140,855,l),
(140,700,l)
);
},
{
closed = 1;
nodes = (
(168,789,l),
(168,832,l),
(190,832,ls),
(202,832,o),
(215,821,o),
(215,811,qs),
(215,800,o),
(200,789,o),
(187,789,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 6 9 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 4 2 8 0 4 114 0 8 9 2 8 112 12 1 9 6 2 9 6 126 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 4 2 8 2 4 8 128 0 8 9 2 8 9 126 12 1 9 6 2 9 6 126 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
41 41 16 16 0 0 41 49 41 48 47 45 40 39 38 37 36 35 30 28 16 27 16 26 22 20 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 377;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(228,629,o),
(294,667,o),
(332,733,o),
(332,772,qs),
(332,811,o),
(294,877,o),
(228,916,o),
(189,916,qs),
(150,916,o),
(84,877,o),
(45,811,o),
(45,772,qs),
(45,733,o),
(84,667,o),
(150,629,o),
(189,629,qs)
);
},
{
closed = 1;
nodes = (
(140,652,o),
(69,723,o),
(69,772,qs),
(69,822,o),
(140,892,o),
(189,892,qs),
(239,892,o),
(309,822,o),
(309,772,qs),
(309,723,o),
(239,652,o),
(189,652,qs)
);
},
{
closed = 1;
nodes = (
(168,700,l),
(168,765,l),
(186,765,l),
(221,700,l),
(254,700,l),
(213,772,l),
(242,782,o),
(242,811,qs),
(242,829,o),
(220,855,o),
(194,855,qs),
(140,855,l),
(140,700,l)
);
},
{
closed = 1;
nodes = (
(168,789,l),
(168,832,l),
(190,832,ls),
(202,832,o),
(215,821,o),
(215,811,qs),
(215,800,o),
(200,789,o),
(187,789,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 6 9 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
7 1 5 6 3 8 5 114 0 0 0 2 4 0 2 105 0 4 0 8 9 4 8 105 12 1 9 0 6 5 9 6 103 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
7 1 5 6 3 6 5 3 128 0 0 0 2 4 0 2 105 0 4 0 8 9 4 8 105 12 1 9 0 6 5 9 6 103 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
41 41 16 16 0 0 41 49 41 48 47 45 40 39 38 37 36 35 30 28 16 27 16 26 22 20 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 377;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(228,629,o),
(294,667,o),
(332,733,o),
(332,772,qs),
(332,811,o),
(294,877,o),
(228,916,o),
(189,916,qs),
(150,916,o),
(84,877,o),
(45,811,o),
(45,772,qs),
(45,733,o),
(84,667,o),
(150,629,o),
(189,629,qs)
);
},
{
closed = 1;
nodes = (
(140,652,o),
(69,723,o),
(69,772,qs),
(69,822,o),
(140,892,o),
(189,892,qs),
(239,892,o),
(309,822,o),
(309,772,qs),
(309,723,o),
(239,652,o),
(189,652,qs)
);
},
{
closed = 1;
nodes = (
(168,700,l),
(168,765,l),
(186,765,l),
(221,700,l),
(254,700,l),
(213,772,l),
(242,782,o),
(242,811,qs),
(242,829,o),
(220,855,o),
(194,855,qs),
(140,855,l),
(140,700,l)
);
},
{
closed = 1;
nodes = (
(168,789,l),
(168,832,l),
(190,832,ls),
(202,832,o),
(215,821,o),
(215,811,qs),
(215,800,o),
(200,789,o),
(187,789,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 6 9 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 4 2 8 0 4 114 0 8 9 2 8 112 12 1 9 6 3 9 112 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 98 10 1 1 3 1 82
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 4 2 8 0 4 114 0 8 9 2 8 112 12 1 9 6 2 9 6 126 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 98 10 1 1 3 1 82
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 4 2 8 2 4 8 128 0 8 9 2 8 9 126 12 1 9 6 2 9 6 126 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 98 10 1 1 3 1 82
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
41 41 16 16 0 0 41 49 41 48 47 45 40 39 38 37 36 35 30 28 16 27 16 26 22 20 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 377;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(228,629,o),
(294,667,o),
(332,733,o),
(332,772,qs),
(332,811,o),
(294,877,o),
(228,916,o),
(189,916,qs),
(150,916,o),
(84,877,o),
(45,811,o),
(45,772,qs),
(45,733,o),
(84,667,o),
(150,629,o),
(189,629,qs)
);
},
{
closed = 1;
nodes = (
(140,652,o),
(69,723,o),
(69,772,qs),
(69,822,o),
(140,892,o),
(189,892,qs),
(239,892,o),
(309,822,o),
(309,772,qs),
(309,723,o),
(239,652,o),
(189,652,qs)
);
},
{
closed = 1;
nodes = (
(168,700,l),
(168,765,l),
(186,765,l),
(221,700,l),
(254,700,l),
(213,772,l),
(242,782,o),
(242,811,qs),
(242,829,o),
(220,855,o),
(194,855,qs),
(140,855,l),
(140,700,l)
);
},
{
closed = 1;
nodes = (
(168,789,l),
(168,832,l),
(190,832,ls),
(202,832,o),
(215,821,o),
(215,811,qs),
(215,800,o),
(200,789,o),
(187,789,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 6 9 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 4 2 8 0 4 114 0 8 9 2 8 112 12 1 9 6 2 9 6 126 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 4 2 8 2 4 8 128 0 8 9 2 8 9 126 12 1 9 6 2 9 6 126 0 6 5 2 6 5 126 7 1 5 3 2 5 3 126 0 0 0 2 4 0 2 105 11 1 3 1 1 3 89 11 1 3 3 1 97 10 1 1 3 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
41 41 16 16 0 0 41 49 41 48 47 45 40 39 38 37 36 35 30 28 16 27 16 26 22 20 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 377;
}
);
note = registered.case;
},
{
glyphname = uni20BF;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(188,0,l),
(188,-86,l),
(257,-86,l),
(257,0,l),
(321,0,l),
(321,-86,l),
(390,-86,l),
(390,3,l),
(478,13,o),
(573,119,o),
(573,198,qs),
(573,260,o),
(500,355,o),
(438,376,q),
(484,393,o),
(541,471,o),
(541,527,qs),
(541,591,o),
(462,679,o),
(390,694,q),
(390,791,l),
(321,791,l),
(321,700,l),
(257,700,l),
(257,791,l),
(188,791,l),
(188,700,l),
(69,700,l),
(69,0,l)
);
},
{
closed = 1;
nodes = (
(175,90,l),
(175,325,l),
(326,325,ls),
(392,325,o),
(466,266,o),
(466,207,qs),
(466,148,o),
(396,90,o),
(328,90,qs)
);
},
{
closed = 1;
nodes = (
(175,413,l),
(175,611,l),
(311,611,ls),
(433,611,o),
(433,512,qs),
(433,464,o),
(373,413,o),
(314,413,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
8 1 10 0 14 1 8 11 20 1 5 9 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
3 1 1 0 0 1 112 6 1 4 5 5 4 113 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
3 1 1 0 1 133 6 1 4 5 5 4 113 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 0 1 133 6 1 4 5 4 134 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
38 38 29 29 38 45 38 44 43 41 29 37 29 36 37 17 17 17 30 17 17 17 16 14 8 31
CALL[ ]	/* CallFunction */";
};
width = 613;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(186,0,l),
(186,-86,l),
(255,-86,l),
(255,0,l),
(319,0,l),
(319,-86,l),
(388,-86,l),
(388,3,l),
(474,15,o),
(561,120,o),
(561,199,qs),
(561,263,o),
(489,355,o),
(421,377,q),
(468,391,o),
(529,473,o),
(529,529,qs),
(529,590,o),
(455,676,o),
(388,692,q),
(388,791,l),
(319,791,l),
(319,700,l),
(315,700,l),
(255,700,l),
(255,791,l),
(186,791,l),
(186,700,l),
(74,700,l),
(74,0,l)
);
},
{
closed = 1;
nodes = (
(158,70,l),
(158,339,l),
(310,339,ls),
(386,339,o),
(476,272,o),
(476,204,qs),
(476,136,o),
(391,70,o),
(312,70,qs)
);
},
{
closed = 1;
nodes = (
(158,406,l),
(158,630,l),
(306,630,ls),
(373,630,o),
(444,571,o),
(444,518,qs),
(444,466,o),
(373,406,o),
(309,406,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
9 1 10 0 15 1 8 11 21 1 5 9 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
3 1 1 0 0 1 112 6 1 4 5 5 4 113 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
3 1 1 0 1 133 6 1 4 5 5 4 113 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 0 1 133 6 1 4 5 4 134 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
39 39 30 30 39 47 39 46 45 43 30 38 30 37 37 17 17 17 30 18 17 17 16 14 8 31
CALL[ ]	/* CallFunction */";
};
width = 602;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(189,0,l),
(189,-86,l),
(258,-86,l),
(258,0,l),
(322,0,l),
(322,-86,l),
(391,-86,l),
(391,2,l),
(482,12,o),
(585,119,o),
(585,197,qs),
(585,257,o),
(510,355,o),
(455,375,q),
(500,394,o),
(553,469,o),
(553,524,qs),
(553,591,o),
(469,682,o),
(391,695,q),
(391,791,l),
(322,791,l),
(322,700,l),
(258,700,l),
(258,791,l),
(189,791,l),
(189,700,l),
(64,700,l),
(64,0,l)
);
},
{
closed = 1;
nodes = (
(192,109,l),
(192,311,l),
(341,311,ls),
(397,311,o),
(455,259,o),
(455,210,qs),
(455,109,o),
(343,109,qs)
);
},
{
closed = 1;
nodes = (
(192,420,l),
(192,591,l),
(316,591,ls),
(372,591,o),
(422,548,o),
(422,506,qs),
(422,462,o),
(372,420,o),
(318,420,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
8 1 10 0 14 1 8 11 20 1 5 9 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
3 1 1 0 0 1 112 6 1 4 5 5 4 113 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
3 1 1 0 1 133 6 1 4 5 5 4 113 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 0 1 133 6 1 4 5 4 134 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
37 37 29 29 37 45 37 44 43 41 29 36 29 35 36 17 17 17 30 17 17 17 16 14 8 31
CALL[ ]	/* CallFunction */";
};
width = 623;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(188,0,l),
(188,-86,l),
(257,-86,l),
(257,0,l),
(321,0,l),
(321,-86,l),
(390,-86,l),
(390,2,l),
(479,13,o),
(577,119,o),
(577,198,qs),
(577,259,o),
(503,355,o),
(444,376,q),
(489,394,o),
(545,470,o),
(545,526,qs),
(545,591,o),
(464,680,o),
(390,694,q),
(390,791,l),
(321,791,l),
(321,700,l),
(257,700,l),
(257,791,l),
(188,791,l),
(188,700,l),
(67,700,l),
(67,0,l)
);
},
{
closed = 1;
nodes = (
(181,96,l),
(181,320,l),
(331,320,ls),
(394,320,o),
(462,263,o),
(462,208,qs),
(462,96,o),
(333,96,qs)
);
},
{
closed = 1;
nodes = (
(181,415,l),
(181,604,l),
(313,604,ls),
(429,604,o),
(429,510,qs),
(429,464,o),
(372,415,o),
(315,415,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
8 1 10 0 14 1 8 11 20 1 5 9 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
3 1 1 0 0 1 112 6 1 4 5 5 4 113 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
3 1 1 0 1 133 6 1 4 5 5 4 113 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
3 1 1 0 1 133 6 1 4 5 4 134 13 1 11 0 8 9 11 8 103 0 10 10 0 95 2 1 0 0 33 77 12 1 9 9 5 95 7 1 5 5 34 5 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
37 37 29 29 37 44 37 43 42 40 29 36 29 35 36 17 17 17 30 17 17 17 16 14 8 31
CALL[ ]	/* CallFunction */";
};
width = 616;
}
);
note = uni20BF;
unicode = 8383;
},
{
glyphname = cent;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (380,6);
},
{
name = top;
pos = (379,694);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(381,-86,l),
(395,-6,l),
(509,-2,o),
(655,113,o),
(675,213,q),
(560,213,l),
(547,161,o),
(472,97,o),
(412,90,q),
(498,580,l),
(545,545,o),
(560,482,q),
(675,482,l),
(662,554,o),
(580,656,o),
(516,682,q),
(535,791,l),
(466,791,l),
(450,700,l),
(431,704,o),
(390,706,q),
(405,791,l),
(336,791,l),
(320,702,l),
(234,689,o),
(112,592,o),
(49,442,o),
(49,350,qs),
(49,247,o),
(129,84,o),
(204,39,q),
(182,-86,l),
(251,-86,l),
(268,11,l),
(297,1,o),
(327,-3,q),
(312,-86,l)
);
},
{
closed = 1;
nodes = (
(156,445,o),
(232,577,o),
(303,601,q),
(223,150,l),
(190,185,o),
(156,287,o),
(156,350,qs)
);
},
{
closed = 1;
nodes = (
(374,613,l),
(379,613,ls),
(409,613,o),
(434,607,q),
(343,90,l),
(314,94,o),
(285,107,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
20 17 2 8 2 46 40 26 3 4 8 50 39 27 5 2 5 6 5 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
3 1 1 2 2 1 112 0 4 8 5 8 4 5 128 0 5 6 8 5 6 126 7 1 0 6 0 134 0 8 8 2 97 0 2 2 33 77 0 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 2 1 133 0 4 8 5 8 4 5 128 0 5 6 8 5 6 126 7 1 0 6 0 134 0 8 8 2 97 0 2 2 33 77 0 6 6 34 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
27 17 18 22 20 18 17 25 19 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 724;
},
{
anchors = (
{
name = bottom;
pos = (375,7);
},
{
name = top;
pos = (375,693);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(377,-86,l),
(391,-5,l),
(501,-1,o),
(642,110,o),
(662,206,q),
(570,206,l),
(556,148,o),
(472,76,o),
(404,69,q),
(497,600,l),
(553,563,o),
(570,491,q),
(662,491,l),
(648,558,o),
(571,654,o),
(511,680,q),
(531,791,l),
(462,791,l),
(446,699,l),
(416,704,o),
(384,705,q),
(399,791,l),
(330,791,l),
(314,700,l),
(230,687,o),
(110,590,o),
(48,440,o),
(48,350,qs),
(48,248,o),
(126,87,o),
(198,42,q),
(176,-86,l),
(245,-86,l),
(262,12,l),
(294,2,o),
(323,-2,q),
(308,-86,l)
);
},
{
closed = 1;
nodes = (
(132,452,o),
(218,599,o),
(300,622,q),
(213,127,l),
(173,165,o),
(132,280,o),
(132,350,qs)
);
},
{
closed = 1;
nodes = (
(371,632,l),
(375,632,ls),
(406,632,o),
(433,626,q),
(336,71,l),
(302,76,o),
(275,87,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
20 17 2 8 2 46 40 26 3 4 8 50 39 27 5 2 5 6 5 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
3 1 1 2 2 1 112 0 4 8 5 8 4 5 128 0 5 6 8 5 6 126 7 1 0 6 0 134 0 8 8 2 97 0 2 2 33 77 0 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 2 1 133 0 4 8 5 8 4 5 128 0 5 6 8 5 6 126 7 1 0 6 0 134 0 8 8 2 97 0 2 2 33 77 0 6 6 34 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
27 17 18 22 20 18 17 25 19 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 710;
},
{
anchors = (
{
name = bottom;
pos = (385,5);
},
{
name = top;
pos = (383,696);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(384,-86,l),
(398,-7,l),
(517,-4,o),
(668,116,o),
(688,220,q),
(549,220,l),
(538,174,o),
(471,116,o),
(418,109,q),
(497,559,l),
(537,527,o),
(549,473,q),
(688,473,l),
(674,551,o),
(587,659,o),
(519,685,q),
(538,791,l),
(469,791,l),
(453,703,l),
(434,706,o),
(395,708,q),
(410,791,l),
(341,791,l),
(326,704,l),
(238,691,o),
(113,594,o),
(49,442,o),
(49,349,qs),
(49,244,o),
(132,81,o),
(209,37,q),
(187,-86,l),
(256,-86,l),
(273,9,l),
(300,0,o),
(330,-3,q),
(315,-86,l)
);
},
{
closed = 1;
nodes = (
(179,436,o),
(244,555,o),
(304,579,q),
(232,173,l),
(179,237,o),
(179,349,qs)
);
},
{
closed = 1;
nodes = (
(375,593,l),
(383,593,ls),
(408,593,o),
(433,588,q),
(349,109,l),
(320,113,o),
(293,126,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
20 1 8 2 45 39 26 3 4 8 49 38 27 5 2 5 6 5 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
3 1 1 2 2 1 112 0 4 8 5 8 4 5 128 0 5 6 8 5 6 126 7 1 0 6 0 134 0 8 8 2 97 0 2 2 39 77 0 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 2 1 133 0 4 8 5 8 4 5 128 0 5 6 8 5 6 126 7 1 0 6 0 134 0 8 8 2 97 0 2 2 39 77 0 6 6 34 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
26 17 18 22 20 18 17 25 19 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 737;
},
{
anchors = (
{
name = bottom;
pos = (382,6);
},
{
name = top;
pos = (380,695);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(382,-86,l),
(396,-6,l),
(511,-2,o),
(660,114,o),
(679,215,q),
(556,215,l),
(544,165,o),
(471,102,o),
(414,95,q),
(498,572,l),
(542,538,o),
(556,479,q),
(679,479,l),
(666,553,o),
(582,657,o),
(517,683,q),
(536,791,l),
(467,791,l),
(451,701,l),
(432,705,o),
(391,707,q),
(406,791,l),
(337,791,l),
(321,703,l),
(235,690,o),
(112,592,o),
(49,441,o),
(49,349,qs),
(49,245,o),
(130,83,o),
(205,39,q),
(183,-86,l),
(252,-86,l),
(269,10,l),
(304,0,o),
(328,-2,q),
(313,-86,l)
);
},
{
closed = 1;
nodes = (
(163,441,o),
(235,569,o),
(302,593,q),
(226,157,l),
(163,226,o),
(163,349,qs)
);
},
{
closed = 1;
nodes = (
(373,606,l),
(381,606,ls),
(406,606,o),
(434,601,q),
(345,95,l),
(314,99,o),
(287,112,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
20 17 2 8 2 45 39 26 3 4 8 49 38 27 5 2 5 6 5 3 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
3 1 1 2 2 1 112 0 4 8 5 8 4 5 128 0 5 6 8 5 6 126 7 1 0 6 0 134 0 8 8 2 97 0 2 2 33 77 0 6 6 34 6 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
3 1 1 2 1 133 0 4 8 5 8 4 5 128 0 5 6 8 5 6 126 7 1 0 6 0 134 0 8 8 2 97 0 2 2 33 77 0 6 6 34 6 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
26 17 18 22 20 18 17 25 19 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 728;
}
);
note = cent;
unicode = 162;
},
{
glyphname = currency;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(169,147,l),
(213,120,o),
(272,120,qs),
(330,120,o),
(375,147,q),
(435,87,l),
(480,132,l),
(422,190,l),
(456,235,o),
(456,298,qs),
(456,360,o),
(421,406,q),
(480,465,l),
(435,510,l),
(374,448,l),
(332,474,o),
(273,474,qs),
(213,474,o),
(171,448,q),
(109,510,l),
(64,465,l),
(124,406,l),
(90,361,o),
(90,298,qs),
(90,236,o),
(122,190,q),
(64,132,l),
(109,87,l)
);
},
{
closed = 1;
nodes = (
(234,194,o),
(183,246,o),
(183,297,qs),
(183,349,o),
(234,402,o),
(272,402,qs),
(309,402,o),
(363,349,o),
(363,297,qs),
(363,247,o),
(310,194,o),
(272,194,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
15 14 12 8 6 5 6 2 0 26 22 20 19 1 5 1 3 2 76 13 7 2 0 74 27 21 2 1 73
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
4 1 3 0 1 3 1 101 0 2 2 0 97 0 0 0 36 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 2 3 0 2 105 4 1 3 1 1 3 89 4 1 3 3 1 97 0 1 3 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
28 28 28 39 28 38 39 44 41 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 544;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(162,152,l),
(205,121,o),
(266,121,qs),
(326,121,o),
(370,152,q),
(429,92,l),
(467,130,l),
(408,189,l),
(441,235,o),
(441,297,qs),
(441,361,o),
(407,406,q),
(467,466,l),
(429,504,l),
(369,443,l),
(326,473,o),
(267,473,qs),
(208,473,o),
(164,443,q),
(103,504,l),
(65,466,l),
(126,406,l),
(92,361,o),
(92,297,qs),
(92,235,o),
(124,189,q),
(65,130,l),
(103,92,l)
);
},
{
closed = 1;
nodes = (
(226,186,o),
(171,241,o),
(171,297,qs),
(171,353,o),
(226,409,o),
(266,409,qs),
(305,409,o),
(362,352,o),
(362,297,qs),
(362,244,o),
(308,186,o),
(266,186,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
14 12 8 6 4 2 0 19 15 5 1 4 3 2 26 22 20 3 1 3 3 76 13 7 2 0 74 27 21 2 1 73
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
4 1 3 0 1 3 1 101 0 2 2 0 97 0 0 0 36 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 2 3 0 2 105 4 1 3 1 1 3 89 4 1 3 3 1 97 0 1 3 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
28 28 28 39 28 38 39 44 41 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 532;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(176,142,l),
(220,119,o),
(278,119,qs),
(333,119,o),
(379,142,q),
(440,81,l),
(492,134,l),
(436,190,l),
(470,234,o),
(470,298,qs),
(470,360,o),
(435,406,q),
(492,464,l),
(440,516,l),
(378,453,l),
(335,475,o),
(279,475,qs),
(221,475,o),
(178,453,q),
(115,516,l),
(63,464,l),
(121,405,l),
(87,361,o),
(87,298,qs),
(87,235,o),
(120,191,q),
(63,134,l),
(115,81,l)
);
},
{
closed = 1;
nodes = (
(242,201,o),
(194,249,o),
(194,297,qs),
(194,345,o),
(242,394,o),
(278,394,qs),
(313,394,o),
(363,345,o),
(363,297,qs),
(363,250,o),
(312,201,o),
(278,201,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
15 14 12 8 6 5 6 2 0 26 22 20 19 1 5 1 3 2 76 13 7 2 0 74 27 21 2 1 73
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
4 1 3 0 1 3 1 101 0 2 2 0 97 0 0 0 36 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 2 3 0 2 105 4 1 3 1 1 3 89 4 1 3 3 1 97 0 1 3 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
28 28 28 39 28 38 39 44 41 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 555;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(171,145,l),
(214,120,o),
(274,120,qs),
(332,120,o),
(376,145,q),
(436,85,l),
(484,133,l),
(427,190,l),
(460,234,o),
(460,298,qs),
(460,361,o),
(426,406,q),
(484,465,l),
(436,512,l),
(375,450,l),
(332,474,o),
(275,474,qs),
(217,474,o),
(173,450,q),
(111,512,l),
(64,465,l),
(123,405,l),
(89,362,o),
(89,298,qs),
(89,236,o),
(121,190,q),
(64,133,l),
(111,85,l)
);
},
{
closed = 1;
nodes = (
(236,196,o),
(186,246,o),
(186,297,qs),
(186,348,o),
(236,399,o),
(274,399,qs),
(311,399,o),
(363,347,o),
(363,297,qs),
(363,248,o),
(311,196,o),
(274,196,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
15 14 12 8 6 5 6 2 0 26 22 20 19 1 5 1 3 2 76 13 7 2 0 74 27 21 2 1 73
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
4 1 3 0 1 3 1 101 0 2 2 0 97 0 0 0 36 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 2 3 0 2 105 4 1 3 1 1 3 89 4 1 3 3 1 97 0 1 3 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
28 28 28 39 28 38 39 44 41 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = currency;
unicode = 164;
},
{
glyphname = dollar;
kernLeft = S;
kernRight = S;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,-86,l),
(324,-86,l),
(324,-11,l),
(419,-5,o),
(541,102,o),
(541,189,qs),
(541,250,o),
(487,331,o),
(404,377,o),
(344,397,qs),
(324,404,l),
(324,618,l),
(363,608,o),
(408,551,o),
(408,514,q),
(521,514,l),
(519,598,o),
(410,701,o),
(324,710,q),
(324,791,l),
(255,791,l),
(255,710,l),
(169,701,o),
(62,601,o),
(62,518,qs),
(62,449,o),
(146,357,o),
(237,326,qs),
(255,320,l),
(255,83,l),
(208,95,o),
(154,163,o),
(153,211,q),
(42,211,l),
(43,117,o),
(160,3,o),
(255,-9,q)
);
},
{
closed = 1;
nodes = (
(324,296,l),
(384,274,o),
(430,227,o),
(430,182,qs),
(430,139,o),
(372,84,o),
(324,79,q)
);
},
{
closed = 1;
nodes = (
(255,431,l),
(210,450,o),
(173,491,o),
(173,525,qs),
(173,564,o),
(218,613,o),
(255,619,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
50 24 17 14 4 2 1 49 42 25 7 4 0 2 43 6 2 3 0 36 1 4 3 4 76 0 2 1 0 1 2 0 128 0 0 3 1 0 3 126 0 1 0 4 1 4 99 0 3 3 40 3 78 17 27 20 28 18 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 584;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(254,-86,l),
(323,-86,l),
(323,-11,l),
(414,-4,o),
(533,99,o),
(533,183,qs),
(533,243,o),
(486,320,o),
(400,369,o),
(329,393,qs),
(323,395,l),
(323,636,l),
(368,625,o),
(422,561,o),
(422,518,q),
(510,518,l),
(508,600,o),
(405,701,o),
(323,710,q),
(323,791,l),
(254,791,l),
(254,710,l),
(171,701,o),
(66,601,o),
(68,520,qs),
(68,452,o),
(147,370,o),
(227,342,qs),
(254,333,l),
(254,63,l),
(198,74,o),
(132,152,o),
(132,210,q),
(44,210,l),
(44,117,o),
(160,2,o),
(254,-9,q)
);
},
{
closed = 1;
nodes = (
(323,310,l),
(369,294,o),
(420,263,o),
(446,216,o),
(446,178,qs),
(446,128,o),
(379,66,o),
(323,60,q)
);
},
{
closed = 1;
nodes = (
(254,419,l),
(196,441,o),
(155,485,o),
(155,528,qs),
(155,574,o),
(210,632,o),
(254,638,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
51 24 17 14 4 2 1 50 43 25 7 4 0 2 44 36 33 6 4 3 0 3 76 0 1 2 1 133 0 2 0 2 133 0 0 3 0 133 0 3 3 118 29 20 28 18 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 578;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(255,-86,l),
(324,-86,l),
(324,-11,l),
(423,-6,o),
(549,105,o),
(549,194,qs),
(549,257,o),
(488,341,o),
(409,384,o),
(359,401,qs),
(324,413,l),
(324,599,l),
(356,589,o),
(393,541,o),
(394,510,q),
(531,510,l),
(529,597,o),
(414,701,o),
(324,710,q),
(324,791,l),
(255,791,l),
(255,710,l),
(166,701,o),
(56,598,o),
(56,512,qs),
(56,443,o),
(145,343,o),
(246,310,qs),
(255,307,l),
(255,103,l),
(218,115,o),
(176,172,o),
(174,211,q),
(39,211,l),
(41,116,o),
(160,3,o),
(255,-9,q)
);
},
{
closed = 1;
nodes = (
(324,282,l),
(377,261,o),
(413,219,o),
(413,185,qs),
(413,149,o),
(366,102,o),
(324,97,q)
);
},
{
closed = 1;
nodes = (
(255,442,l),
(223,458,o),
(190,495,o),
(190,521,qs),
(190,552,o),
(225,593,o),
(255,600,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
50 24 17 14 4 2 1 49 42 25 7 4 0 2 43 6 2 3 0 3 76 36 1 3 1 75 0 2 1 0 1 2 0 128 0 0 3 1 0 3 126 0 1 0 4 1 4 99 0 3 3 40 3 78 17 27 20 28 18 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(255,-86,l),
(324,-86,l),
(324,-11,l),
(420,-5,o),
(544,103,o),
(544,190,qs),
(544,252,o),
(488,334,o),
(406,379,o),
(349,398,qs),
(324,407,l),
(324,611,l),
(360,601,o),
(403,548,o),
(403,513,q),
(524,513,l),
(522,598,o),
(411,701,o),
(324,710,q),
(324,791,l),
(255,791,l),
(255,710,l),
(168,701,o),
(60,600,o),
(60,517,qs),
(60,447,o),
(146,352,o),
(240,321,qs),
(255,316,l),
(255,90,l),
(211,101,o),
(161,165,o),
(160,211,q),
(41,211,l),
(42,117,o),
(160,3,o),
(255,-9,q)
);
},
{
closed = 1;
nodes = (
(324,291,l),
(382,269,o),
(424,224,o),
(424,183,qs),
(424,142,o),
(370,90,o),
(324,85,q)
);
},
{
closed = 1;
nodes = (
(255,434,l),
(214,452,o),
(178,492,o),
(178,523,qs),
(178,559,o),
(220,606,o),
(255,613,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
50 24 17 14 4 2 1 49 42 25 7 4 0 2 43 6 2 3 0 36 1 4 3 4 76 0 2 1 0 1 2 0 128 0 0 3 1 0 3 126 0 1 0 4 1 4 99 0 3 3 40 3 78 17 27 20 28 18 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = Euro;
kernRight = C;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(559,-12,o),
(715,105,o),
(736,211,q),
(619,211,l),
(604,150,o),
(511,83,o),
(436,83,qs),
(357,83,o),
(246,165,o),
(223,240,q),
(454,240,l),
(454,309,l),
(210,309,l),
(208,335,o),
(208,350,qs),
(208,365,o),
(210,391,q),
(454,391,l),
(454,461,l),
(224,461,l),
(247,536,o),
(357,617,o),
(436,617,qs),
(511,617,o),
(604,547,o),
(619,484,q),
(736,484,l),
(715,593,o),
(559,712,o),
(436,712,qs),
(310,712,o),
(140,577,o),
(113,461,q),
(22,461,l),
(22,391,l),
(102,391,l),
(100,365,o),
(100,350,qs),
(100,337,o),
(102,309,q),
(22,309,l),
(22,240,l),
(112,240,l),
(139,123,o),
(310,-12,o),
(436,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
0 5 6 3 6 5 3 128 0 12 0 11 0 12 11 128 7 1 3 8 1 2 1 3 2 103 9 1 1 10 1 0 12 1 0 103 0 6 6 4 97 0 4 4 39 77 0 11 11 13 97 14 1 13 13 40 13 78 0 0 0 45 0 44 42 41 39 37 35 34 33 32 17 18 34 18 34 17 20 17 18 15 8 31
CALL[ ]	/* CallFunction */";
};
width = 783;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(555,-12,o),
(706,101,o),
(727,203,q),
(634,203,l),
(618,137,o),
(517,62,o),
(435,62,qs),
(348,62,o),
(225,157,o),
(201,242,q),
(455,242,l),
(455,305,l),
(190,305,l),
(188,333,o),
(188,350,qs),
(188,366,o),
(190,396,q),
(455,396,l),
(455,458,l),
(202,458,l),
(225,544,o),
(347,638,o),
(435,638,qs),
(517,638,o),
(618,562,o),
(634,494,q),
(727,494,l),
(706,598,o),
(555,712,o),
(435,712,qs),
(310,712,o),
(141,576,o),
(114,458,q),
(23,458,l),
(23,396,l),
(104,396,l),
(102,350,l),
(104,305,l),
(23,305,l),
(23,242,l),
(113,242,l),
(140,124,o),
(310,-12,o),
(435,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
0 5 6 3 6 5 3 128 0 12 0 11 0 12 11 128 7 1 3 8 1 2 1 3 2 103 9 1 1 10 1 0 12 1 0 103 0 6 6 4 97 0 4 4 39 77 0 11 11 13 97 14 1 13 13 40 13 78 0 0 0 43 0 42 40 39 37 35 33 32 31 30 17 18 34 18 34 17 18 17 18 15 8 31
CALL[ ]	/* CallFunction */";
};
width = 775;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(562,-12,o),
(724,110,o),
(744,218,q),
(603,218,l),
(590,163,o),
(504,103,o),
(436,103,qs),
(365,103,o),
(267,173,o),
(245,237,q),
(453,237,l),
(453,313,l),
(229,313,l),
(228,324,o),
(228,349,qs),
(228,374,o),
(229,386,q),
(453,386,l),
(453,463,l),
(245,463,l),
(269,527,o),
(366,596,o),
(436,596,qs),
(504,596,o),
(590,532,o),
(603,474,q),
(744,474,l),
(724,587,o),
(563,712,o),
(437,712,qs),
(310,712,o),
(139,578,o),
(111,463,q),
(21,463,l),
(21,386,l),
(99,386,l),
(97,362,o),
(97,349,qs),
(97,337,o),
(99,313,q),
(21,313,l),
(21,237,l),
(110,237,l),
(138,121,o),
(310,-12,o),
(437,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
0 5 6 3 6 5 3 128 0 12 0 11 0 12 11 128 7 1 3 8 1 2 1 3 2 103 9 1 1 10 1 0 12 1 0 103 0 6 6 4 97 0 4 4 39 77 0 11 11 13 97 14 1 13 13 40 13 78 0 0 0 45 0 44 42 41 39 37 35 34 33 32 17 18 34 18 34 17 20 17 18 15 8 31
CALL[ ]	/* CallFunction */";
};
width = 790;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(560,-12,o),
(718,107,o),
(738,213,q),
(613,213,l),
(599,155,o),
(509,89,o),
(436,89,qs),
(359,89,o),
(253,167,o),
(230,239,q),
(454,239,l),
(454,310,l),
(216,310,l),
(215,322,o),
(215,349,qs),
(215,376,o),
(216,389,q),
(454,389,l),
(454,461,l),
(231,461,l),
(254,533,o),
(359,610,o),
(436,610,qs),
(509,610,o),
(599,542,o),
(613,481,q),
(738,481,l),
(718,591,o),
(560,712,o),
(436,712,qs),
(310,712,o),
(140,577,o),
(112,461,q),
(22,461,l),
(22,389,l),
(101,389,l),
(99,363,o),
(99,349,qs),
(99,336,o),
(101,310,q),
(22,310,l),
(22,239,l),
(111,239,l),
(139,123,o),
(310,-12,o),
(436,-12,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
0 5 6 3 6 5 3 128 0 12 0 11 0 12 11 128 7 1 3 8 1 2 1 3 2 103 9 1 1 10 1 0 12 1 0 103 0 6 6 4 97 0 4 4 39 77 0 11 11 13 97 14 1 13 13 40 13 78 0 0 0 45 0 44 42 41 39 37 35 34 33 32 17 18 34 18 34 17 20 17 18 15 8 31
CALL[ ]	/* CallFunction */";
};
width = 785;
}
);
note = Euro;
unicode = 8364;
},
{
glyphname = uni20BD;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,0,l),
(229,114,l),
(435,114,l),
(435,202,l),
(229,202,l),
(229,287,l),
(363,287,ls),
(473,287,o),
(606,394,o),
(606,493,qs),
(606,591,o),
(474,700,o),
(363,700,qs),
(123,700,l),
(123,376,l),
(35,376,l),
(35,287,l),
(123,287,l),
(123,202,l),
(35,202,l),
(35,114,l),
(123,114,l),
(123,0,l)
);
},
{
closed = 1;
nodes = (
(229,376,l),
(229,612,l),
(361,612,ls),
(499,612,o),
(499,493,qs),
(499,376,o),
(361,376,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
11 10 2 3 5 1 2 1 3 2 103 6 1 1 7 1 0 8 1 0 103 0 9 9 4 95 0 4 4 33 77 0 8 8 34 8 78 23 23 23 29 23 28 27 25 17 17 17 36 33 17 17 17 16 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 639;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(211,0,l),
(211,126,l),
(434,126,l),
(434,193,l),
(211,193,l),
(211,294,l),
(347,294,ls),
(456,294,o),
(586,397,o),
(586,496,qs),
(586,593,o),
(459,699,o),
(347,699,qs),
(127,699,l),
(127,363,l),
(40,363,l),
(40,294,l),
(127,294,l),
(127,193,l),
(40,193,l),
(40,126,l),
(127,126,l),
(127,0,l)
);
},
{
closed = 1;
nodes = (
(211,363,l),
(211,633,l),
(346,633,ls),
(501,633,o),
(501,496,qs),
(501,433,o),
(426,363,o),
(346,363,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
11 10 2 3 5 1 2 1 3 2 103 6 1 1 7 1 0 8 1 0 103 0 9 9 4 95 0 4 4 33 77 0 8 8 34 8 78 23 23 23 30 23 29 28 26 17 17 17 36 33 17 17 17 16 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(247,0,l),
(247,102,l),
(436,102,l),
(436,211,l),
(247,211,l),
(247,279,l),
(378,279,ls),
(489,279,o),
(626,391,o),
(626,490,qs),
(626,589,o),
(489,700,o),
(378,700,qs),
(119,700,l),
(119,388,l),
(29,388,l),
(29,279,l),
(119,279,l),
(119,211,l),
(29,211,l),
(29,102,l),
(119,102,l),
(119,0,l)
);
},
{
closed = 1;
nodes = (
(247,388,l),
(247,591,l),
(375,591,ls),
(496,591,o),
(496,490,qs),
(496,388,o),
(375,388,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
11 10 2 3 5 1 2 1 3 2 103 6 1 1 7 1 0 8 1 0 103 0 9 9 4 95 0 4 4 33 77 0 8 8 34 8 78 23 23 23 29 23 28 27 25 17 17 17 36 33 17 17 17 16 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 657;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(235,0,l),
(235,110,l),
(435,110,l),
(435,205,l),
(235,205,l),
(235,284,l),
(368,284,ls),
(478,284,o),
(613,393,o),
(613,492,qs),
(613,590,o),
(479,700,o),
(368,700,qs),
(122,700,l),
(122,380,l),
(33,380,l),
(33,284,l),
(122,284,l),
(122,205,l),
(33,205,l),
(33,110,l),
(122,110,l),
(122,0,l)
);
},
{
closed = 1;
nodes = (
(235,380,l),
(235,605,l),
(365,605,ls),
(498,605,o),
(498,492,qs),
(498,380,o),
(365,380,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
11 10 2 3 5 1 2 1 3 2 103 6 1 1 7 1 0 8 1 0 103 0 9 9 4 95 0 4 4 33 77 0 8 8 34 8 78 23 23 23 29 23 28 27 25 17 17 17 36 33 17 17 17 16 12 8 31
CALL[ ]	/* CallFunction */";
};
width = 645;
}
);
note = uni20BD;
unicode = 8381;
},
{
glyphname = uni20A8;
kernRight = s;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = bottom;
pos = (826,0);
},
{
name = top;
pos = (819,496);
}
);
layerId = m01;
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (576,0);
ref = s;
}
);
width = 1063;
},
{
anchors = (
{
name = bottom;
pos = (831,0);
},
{
name = top;
pos = (826,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (576,0);
ref = s;
}
);
width = 1076;
},
{
anchors = (
{
name = bottom;
pos = (821,0);
},
{
name = top;
pos = (812,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (575,0);
ref = s;
}
);
width = 1049;
},
{
anchors = (
{
name = bottom;
pos = (824,0);
},
{
name = top;
pos = (817,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = R;
},
{
alignment = -1;
pos = (575,0);
ref = s;
}
);
width = 1058;
}
);
note = uni20A8;
unicode = 8360;
},
{
glyphname = sterling;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,0,l),
(553,0,l),
(553,86,l),
(193,86,l),
(264,157,o),
(264,253,qs),
(264,276,o),
(257,304,q),
(425,304,l),
(425,378,l),
(236,378,l),
(222,418,o),
(207,472,o),
(207,499,qs),
(207,563,o),
(277,624,o),
(328,624,qs),
(387,624,o),
(451,556,o),
(453,502,q),
(551,502,l),
(546,597,o),
(430,712,o),
(327,712,qs),
(263,712,o),
(164,663,o),
(107,568,o),
(107,503,qs),
(107,471,o),
(120,413,o),
(132,378,q),
(43,378,l),
(43,304,l),
(157,304,l),
(164,271,o),
(164,252,qs),
(164,192,o),
(125,111,o),
(82,65,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
38 1 8 7 1 76 0 3 4 1 4 3 1 128 5 1 1 6 1 0 7 1 0 103 0 4 4 2 97 0 2 2 39 77 0 7 7 8 95 0 8 8 34 8 78 17 20 17 21 34 18 38 17 20 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 611;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(87,0,l),
(541,0,l),
(541,69,l),
(176,69,l),
(249,145,o),
(249,242,qs),
(249,262,o),
(245,289,o),
(239,310,q),
(412,310,l),
(412,369,l),
(220,369,l),
(206,408,o),
(189,471,o),
(189,503,qs),
(189,575,o),
(268,642,o),
(322,642,qs),
(388,642,o),
(459,566,o),
(462,507,q),
(539,507,l),
(534,603,o),
(418,712,o),
(322,712,qs),
(261,712,o),
(164,663,o),
(109,570,o),
(109,507,qs),
(109,470,o),
(123,411,o),
(138,369,q),
(45,369,l),
(45,310,l),
(159,310,l),
(165,288,o),
(170,259,o),
(170,240,qs),
(170,183,o),
(132,105,o),
(87,54,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
40 1 8 7 1 76 0 3 4 1 4 3 1 128 5 1 1 6 1 0 7 1 0 103 0 4 4 2 97 0 2 2 39 77 0 7 7 8 95 0 8 8 34 8 78 17 21 17 21 34 18 38 17 21 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(76,0,l),
(565,0,l),
(565,102,l),
(209,102,l),
(244,137,o),
(278,220,o),
(278,263,qs),
(278,280,o),
(275,298,q),
(438,298,l),
(438,386,l),
(251,386,l),
(238,423,o),
(225,472,o),
(225,495,qs),
(225,549,o),
(286,606,o),
(333,606,qs),
(384,606,o),
(442,545,o),
(444,496,q),
(562,496,l),
(557,590,o),
(441,712,o),
(331,712,qs),
(230,712,o),
(104,600,o),
(104,499,qs),
(104,450,o),
(126,386,q),
(40,386,l),
(40,298,l),
(154,298,l),
(157,280,o),
(157,263,qs),
(157,201,o),
(118,117,o),
(76,75,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
37 1 8 7 1 76 0 3 4 1 4 3 1 128 5 1 1 6 1 0 7 1 0 103 0 4 4 2 97 0 2 2 39 77 0 7 7 8 95 0 8 8 34 8 78 17 21 17 21 34 18 36 17 20 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(80,0,l),
(557,0,l),
(557,91,l),
(198,91,l),
(268,161,o),
(268,256,qs),
(268,281,o),
(263,302,q),
(429,302,l),
(429,380,l),
(241,380,l),
(228,415,o),
(213,471,o),
(213,498,qs),
(213,558,o),
(280,618,o),
(329,618,qs),
(386,618,o),
(448,552,o),
(450,500,q),
(554,500,l),
(549,594,o),
(433,712,o),
(328,712,qs),
(264,712,o),
(163,663,o),
(106,568,o),
(106,502,qs),
(106,471,o),
(118,416,o),
(130,380,q),
(42,380,l),
(42,302,l),
(156,302,l),
(161,274,o),
(161,255,qs),
(161,194,o),
(123,113,o),
(80,68,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
38 1 8 7 1 76 0 3 4 1 4 3 1 128 5 1 1 6 1 0 7 1 0 103 0 4 4 2 97 0 2 2 39 77 0 7 7 8 95 0 8 8 34 8 78 17 20 17 21 34 18 38 17 20 9 8 31
CALL[ ]	/* CallFunction */";
};
width = 614;
}
);
note = sterling;
unicode = 163;
},
{
glyphname = yen;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(364,0,l),
(364,159,l),
(564,159,l),
(564,233,l),
(364,233,l),
(364,258,l),
(395,316,l),
(564,316,l),
(564,391,l),
(434,391,l),
(595,700,l),
(476,700,l),
(311,355,l),
(146,700,l),
(26,700,l),
(189,391,l),
(58,391,l),
(58,316,l),
(228,316,l),
(258,258,l),
(258,233,l),
(58,233,l),
(58,159,l),
(258,159,l),
(258,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
11 1 2 3 18 4 2 1 2 2 76 6 1 3 7 1 2 1 3 2 104 8 1 1 9 1 0 10 1 0 103 5 1 4 4 33 77 0 10 10 34 10 78 24 23 22 21 18 17 17 18 17 17 18 17 16 11 8 31
CALL[ ]	/* CallFunction */";
};
width = 621;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(343,0,l),
(343,167,l),
(543,167,l),
(543,228,l),
(343,228,l),
(343,266,l),
(370,318,l),
(543,318,l),
(543,379,l),
(402,379,l),
(570,700,l),
(475,700,l),
(301,343,l),
(126,700,l),
(31,700,l),
(200,379,l),
(59,379,l),
(59,318,l),
(232,318,l),
(259,266,l),
(259,228,l),
(59,228,l),
(59,167,l),
(259,167,l),
(259,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
11 1 2 3 18 4 2 1 2 2 76 6 1 3 7 1 2 1 3 2 104 8 1 1 9 1 0 10 1 0 103 5 1 4 4 33 77 0 10 10 34 10 78 24 23 22 21 18 17 17 18 17 17 18 17 16 11 8 31
CALL[ ]	/* CallFunction */";
};
width = 601;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(385,0,l),
(385,150,l),
(585,150,l),
(585,238,l),
(385,238,l),
(385,249,l),
(419,313,l),
(585,313,l),
(585,402,l),
(465,402,l),
(620,700,l),
(476,700,l),
(321,366,l),
(166,700,l),
(21,700,l),
(177,402,l),
(57,402,l),
(57,314,l),
(223,314,l),
(257,249,l),
(257,238,l),
(57,238,l),
(57,150,l),
(257,150,l),
(257,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
11 1 2 3 18 4 2 1 2 2 76 6 1 3 7 1 2 1 3 2 104 8 1 1 9 1 0 10 1 0 103 5 1 4 4 33 77 0 10 10 34 10 78 24 23 22 21 18 17 17 18 17 17 18 17 16 11 8 31
CALL[ ]	/* CallFunction */";
};
width = 641;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(371,0,l),
(371,156,l),
(571,156,l),
(571,235,l),
(371,235,l),
(371,255,l),
(403,315,l),
(571,315,l),
(571,394,l),
(444,394,l),
(603,700,l),
(476,700,l),
(314,358,l),
(153,700,l),
(24,700,l),
(185,394,l),
(58,394,l),
(58,315,l),
(226,315,l),
(258,255,l),
(258,235,l),
(58,235,l),
(58,156,l),
(258,156,l),
(258,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
11 1 2 3 18 4 2 1 2 2 76 6 1 3 7 1 2 1 3 2 104 8 1 1 9 1 0 10 1 0 103 5 1 4 4 33 77 0 10 10 34 10 78 24 23 22 21 18 17 17 18 17 17 18 17 16 11 8 31
CALL[ ]	/* CallFunction */";
};
width = 628;
}
);
note = yen;
unicode = 165;
},
{
glyphname = cent.001;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251,-104,l),
(351,-104,l),
(351,-8,l),
(424,4,o),
(522,96,o),
(537,166,q),
(426,166,l),
(416,125,o),
(349,78,o),
(302,78,qs),
(263,78,o),
(197,117,o),
(157,194,o),
(157,248,qs),
(157,323,o),
(236,418,o),
(302,418,qs),
(348,418,o),
(416,371,o),
(426,331,q),
(537,331,l),
(522,401,o),
(424,493,o),
(351,504,q),
(351,600,l),
(251,600,l),
(251,504,l),
(190,492,o),
(146,458,qs),
(100,423,o),
(49,315,o),
(49,248,qs),
(49,179,o),
(75,127,qs),
(101,73,o),
(192,3,o),
(251,-7,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
12 9 2 2 0 36 33 2 5 3 2 76 0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 0 0 2 1 0 2 105 0 3 5 5 3 89 0 3 3 5 95 0 5 3 5 79 20 18 37 34 20 26 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 585;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(255,-104,l),
(336,-104,l),
(336,-9,l),
(409,1,o),
(508,90,o),
(522,157,q),
(436,157,l),
(426,111,o),
(349,59,o),
(296,59,qs),
(255,59,o),
(181,101,o),
(134,187,o),
(134,248,qs),
(134,299,o),
(172,385,o),
(245,436,o),
(296,436,qs),
(349,436,o),
(426,384,o),
(436,339,q),
(522,339,l),
(508,407,o),
(409,496,o),
(336,505,q),
(336,600,l),
(255,600,l),
(255,505,l),
(194,496,o),
(148,462,qs),
(101,427,o),
(48,317,o),
(48,248,qs),
(48,178,o),
(75,124,qs),
(101,69,o),
(194,0,o),
(255,-9,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
12 9 2 2 0 37 34 2 5 3 2 76 0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 0 0 2 1 0 2 105 0 3 5 5 3 89 0 3 3 5 95 0 5 3 5 79 20 18 38 34 20 26 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 570;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(247,-104,l),
(365,-104,l),
(365,-7,l),
(438,7,o),
(536,103,o),
(551,174,q),
(416,174,l),
(406,138,o),
(347,97,o),
(307,97,qs),
(252,97,o),
(180,179,o),
(180,248,qs),
(180,317,o),
(252,399,o),
(307,399,qs),
(347,399,o),
(406,358,o),
(416,322,q),
(551,322,l),
(536,394,o),
(438,489,o),
(365,503,q),
(365,600,l),
(247,600,l),
(247,502,l),
(187,488,o),
(144,454,qs),
(98,418,o),
(49,313,o),
(49,248,qs),
(49,181,o),
(74,130,qs),
(99,77,o),
(188,7,o),
(247,-6,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
12 9 2 2 0 35 32 2 5 3 2 76 0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 0 0 2 1 0 2 105 0 3 5 5 3 89 0 3 3 5 95 0 5 3 5 79 20 18 36 34 20 26 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(250,-104,l),
(355,-104,l),
(355,-8,l),
(428,5,o),
(527,99,o),
(541,168,q),
(423,168,l),
(413,129,o),
(348,84,o),
(303,84,qs),
(266,84,o),
(203,123,o),
(165,197,o),
(165,248,qs),
(165,321,o),
(241,411,o),
(303,411,qs),
(348,411,o),
(413,367,o),
(423,328,q),
(541,328,l),
(527,399,o),
(428,491,o),
(355,504,q),
(355,600,l),
(250,600,l),
(250,503,l),
(189,491,o),
(145,457,qs),
(99,421,o),
(49,314,o),
(49,248,qs),
(49,179,o),
(74,128,qs),
(100,74,o),
(190,4,o),
(250,-7,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
12 9 2 2 0 36 33 2 5 3 2 76 0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 0 0 2 1 0 2 105 0 3 5 5 3 89 0 3 3 5 95 0 5 3 5 79 20 18 37 34 20 26 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 590;
}
);
note = cent.001;
},
{
glyphname = uni2215;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,-103,l),
(380,771,l),
(276,771,l),
(26,-103,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 406;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(111,-95,l),
(362,764,l),
(279,764,l),
(28,-95,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 391;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(147,-111,l),
(398,777,l),
(273,777,l),
(23,-111,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 421;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(135,-106,l),
(386,773,l),
(275,773,l),
(25,-106,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 411;
}
);
note = uni2215;
unicode = 8725;
},
{
glyphname = plus;
kernLeft = plus;
kernRight = plus;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(347,63,l),
(347,246,l),
(536,246,l),
(536,335,l),
(347,335,l),
(347,517,l),
(255,517,l),
(255,335,l),
(65,335,l),
(65,246,l),
(255,246,l),
(255,63,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
3 1 1 4 1 0 5 1 0 103 0 5 5 2 95 0 2 2 36 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 2 1 5 2 87 3 1 1 4 1 0 5 1 0 103 0 2 2 5 95 0 5 2 5 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(338,72,l),
(338,255,l),
(529,255,l),
(529,326,l),
(338,326,l),
(338,508,l),
(263,508,l),
(263,326,l),
(72,326,l),
(72,255,l),
(263,255,l),
(263,72,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
3 1 1 4 1 0 5 1 0 103 0 5 5 2 95 0 2 2 36 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 2 1 5 2 87 3 1 1 4 1 0 5 1 0 103 0 2 2 5 95 0 5 2 5 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(355,53,l),
(355,236,l),
(542,236,l),
(542,343,l),
(355,343,l),
(355,526,l),
(246,526,l),
(246,343,l),
(58,343,l),
(58,236,l),
(246,236,l),
(246,53,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 2 1 5 2 87 3 1 1 4 1 0 5 1 0 103 0 2 2 5 95 0 5 2 5 79 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(349,59,l),
(349,242,l),
(538,242,l),
(538,337,l),
(349,337,l),
(349,520,l),
(252,520,l),
(252,337,l),
(63,337,l),
(63,242,l),
(252,242,l),
(252,59,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
3 1 1 4 1 0 5 1 0 103 0 5 5 2 95 0 2 2 36 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 2 1 5 2 87 3 1 1 4 1 0 5 1 0 103 0 2 2 5 95 0 5 2 5 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = plus;
unicode = 43;
},
{
glyphname = minus;
kernLeft = hyphen;
kernRight = hyphen;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(504,246,l),
(504,335,l),
(97,335,l),
(97,246,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(498,255,l),
(498,326,l),
(102,326,l),
(102,255,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(510,236,l),
(510,343,l),
(91,343,l),
(91,236,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(506,242,l),
(506,337,l),
(95,337,l),
(95,242,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = minus;
unicode = 8722;
},
{
glyphname = multiply;
kernLeft = multiply;
kernRight = multiply;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(301,228,l),
(426,102,l),
(490,165,l),
(364,291,l),
(493,421,l),
(431,484,l),
(301,353,l),
(176,479,l),
(112,416,l),
(238,291,l),
(108,160,l),
(171,98,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
11 5 1 50
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(300,241,l),
(429,112,l),
(480,162,l),
(351,291,l),
(485,426,l),
(435,476,l),
(301,341,l),
(172,470,l),
(121,420,l),
(250,291,l),
(116,156,l),
(166,106,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
11 5 1 50
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(301,215,l),
(423,92,l),
(499,167,l),
(376,290,l),
(501,415,l),
(426,491,l),
(301,365,l),
(179,488,l),
(103,412,l),
(225,290,l),
(100,164,l),
(176,89,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
11 5 1 50
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(301,224,l),
(425,99,l),
(493,165,l),
(368,290,l),
(496,419,l),
(429,486,l),
(301,357,l),
(177,482,l),
(109,415,l),
(233,290,l),
(105,161,l),
(173,95,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
11 5 1 50
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = multiply;
unicode = 215;
},
{
glyphname = divide;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(512,246,l),
(512,335,l),
(88,335,l),
(88,246,l)
);
},
{
closed = 1;
nodes = (
(330,56,o),
(370,96,o),
(370,125,qs),
(370,155,o),
(330,196,o),
(300,196,qs),
(270,196,o),
(230,155,o),
(230,125,qs),
(230,96,o),
(270,56,o),
(300,56,qs)
);
},
{
closed = 1;
nodes = (
(330,385,o),
(370,426,o),
(370,456,qs),
(370,486,o),
(331,526,o),
(300,526,qs),
(269,526,o),
(230,486,o),
(230,456,qs),
(230,426,o),
(270,385,o),
(300,385,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 0 0 1 2 0 1 103 0 2 6 1 3 2 3 101 7 1 5 5 4 97 0 4 4 42 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 7 1 5 0 4 5 105 0 0 0 1 2 0 1 103 0 2 3 3 2 89 0 2 2 3 97 6 1 3 2 3 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
16 16 4 4 16 27 16 26 22 20 4 15 4 14 37 17 16 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(499,255,l),
(499,326,l),
(101,326,l),
(101,255,l)
);
},
{
closed = 1;
nodes = (
(324,89,o),
(357,122,o),
(357,146,qs),
(357,170,o),
(324,203,o),
(300,203,qs),
(275,203,o),
(242,170,o),
(242,146,qs),
(242,122,o),
(275,89,o),
(300,89,qs)
);
},
{
closed = 1;
nodes = (
(324,378,o),
(357,412,o),
(357,436,qs),
(357,460,o),
(324,493,o),
(300,493,qs),
(275,493,o),
(242,460,o),
(242,436,qs),
(242,412,o),
(275,378,o),
(300,378,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 0 0 1 2 0 1 103 0 2 6 1 3 2 3 101 7 1 5 5 4 97 0 4 4 36 5 78 16 16 4 4 16 27 16 26 22 20 4 15 4 14 37 17 16 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(525,236,l),
(525,343,l),
(75,343,l),
(75,236,l)
);
},
{
closed = 1;
nodes = (
(336,22,o),
(383,70,o),
(383,104,qs),
(383,140,o),
(336,188,o),
(300,188,qs),
(264,188,o),
(217,140,o),
(217,104,qs),
(217,70,o),
(264,22,o),
(300,22,qs)
);
},
{
closed = 1;
nodes = (
(336,392,o),
(383,441,o),
(383,475,qs),
(383,511,o),
(337,558,o),
(300,558,qs),
(263,558,o),
(217,511,o),
(217,475,qs),
(217,441,o),
(264,392,o),
(300,392,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 7 1 5 0 4 5 105 0 0 0 1 2 0 1 103 0 2 2 3 97 6 1 3 3 34 3 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 7 1 5 0 4 5 105 0 0 0 1 2 0 1 103 0 2 3 3 2 89 0 2 2 3 97 6 1 3 2 3 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
16 16 4 4 16 27 16 26 22 20 4 15 4 14 37 17 16 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(516,242,l),
(516,337,l),
(84,337,l),
(84,242,l)
);
},
{
closed = 1;
nodes = (
(332,44,o),
(374,87,o),
(374,118,qs),
(374,150,o),
(332,193,o),
(300,193,qs),
(267,193,o),
(225,150,o),
(225,118,qs),
(225,87,o),
(267,44,o),
(300,44,qs)
);
},
{
closed = 1;
nodes = (
(332,387,o),
(374,431,o),
(374,462,qs),
(374,494,o),
(332,536,o),
(300,536,qs),
(267,536,o),
(225,494,o),
(225,462,qs),
(225,431,o),
(268,387,o),
(300,387,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
0 4 7 1 5 0 4 5 105 0 0 0 1 2 0 1 103 0 2 3 3 2 89 0 2 2 3 97 6 1 3 2 3 81 16 16 4 4 16 27 16 26 22 20 4 15 4 14 37 17 16 8 8 25
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = divide;
unicode = 247;
},
{
glyphname = equal;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(506,352,l),
(506,444,l),
(95,444,l),
(95,352,l)
);
},
{
closed = 1;
nodes = (
(506,137,l),
(506,229,l),
(95,229,l),
(95,137,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(500,359,l),
(500,431,l),
(101,431,l),
(101,359,l)
);
},
{
closed = 1;
nodes = (
(500,151,l),
(500,223,l),
(101,223,l),
(101,151,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(512,345,l),
(512,457,l),
(88,457,l),
(88,345,l)
);
},
{
closed = 1;
nodes = (
(512,123,l),
(512,235,l),
(88,235,l),
(88,123,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(508,350,l),
(508,448,l),
(92,448,l),
(92,350,l)
);
},
{
closed = 1;
nodes = (
(508,132,l),
(508,231,l),
(92,231,l),
(92,132,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = equal;
unicode = 61;
},
{
glyphname = notequal;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(228,70,l),
(264,137,l),
(506,137,l),
(506,229,l),
(312,229,l),
(377,351,l),
(506,351,l),
(506,444,l),
(426,444,l),
(461,510,l),
(373,510,l),
(337,444,l),
(95,444,l),
(95,351,l),
(289,351,l),
(224,229,l),
(95,229,l),
(95,137,l),
(176,137,l),
(140,70,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 3 4 112 0 9 0 0 9 113 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 18 17 17 17 17 17 17 17 17 16 10 6 31
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(228,84,l),
(264,151,l),
(500,151,l),
(500,223,l),
(302,223,l),
(374,358,l),
(500,358,l),
(500,431,l),
(413,431,l),
(448,497,l),
(372,497,l),
(337,431,l),
(101,431,l),
(101,358,l),
(299,358,l),
(227,223,l),
(101,223,l),
(101,151,l),
(189,151,l),
(153,84,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 3 4 112 0 9 0 0 9 113 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 18 17 17 17 17 17 17 17 17 16 10 6 31
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(227,56,l),
(263,123,l),
(512,123,l),
(512,235,l),
(321,235,l),
(379,344,l),
(512,344,l),
(512,456,l),
(438,456,l),
(473,523,l),
(373,523,l),
(337,456,l),
(88,456,l),
(88,344,l),
(278,344,l),
(221,235,l),
(88,235,l),
(88,123,l),
(162,123,l),
(126,56,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 3 4 112 0 9 0 0 9 113 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 18 17 17 17 17 17 17 17 17 16 10 6 31
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(227,65,l),
(263,132,l),
(508,132,l),
(508,231,l),
(315,231,l),
(377,349,l),
(508,349,l),
(508,448,l),
(430,448,l),
(465,514,l),
(373,514,l),
(337,448,l),
(92,448,l),
(92,349,l),
(285,349,l),
(223,231,l),
(92,231,l),
(92,132,l),
(171,132,l),
(135,65,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 3 4 112 0 9 0 0 9 113 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
19 18 17 17 17 17 17 17 17 17 16 10 6 31
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = notequal;
unicode = 8800;
},
{
glyphname = greater;
kernRight = greater;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251,135,l),
(485,363,l),
(251,591,l),
(117,591,l),
(351,363,l),
(117,135,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(232,137,l),
(476,367,l),
(232,598,l),
(125,598,l),
(370,367,l),
(125,137,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(269,133,l),
(493,359,l),
(269,584,l),
(108,584,l),
(332,359,l),
(108,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(257,134,l),
(487,362,l),
(257,589,l),
(114,589,l),
(345,362,l),
(114,134,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = greater;
unicode = 62;
},
{
glyphname = less;
kernLeft = less;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(485,135,l),
(250,363,l),
(485,591,l),
(350,591,l),
(117,363,l),
(350,135,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(476,137,l),
(231,367,l),
(476,598,l),
(369,598,l),
(125,367,l),
(369,137,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(493,133,l),
(268,359,l),
(493,584,l),
(331,584,l),
(108,359,l),
(331,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(487,134,l),
(256,362,l),
(487,589,l),
(344,589,l),
(114,362,l),
(344,134,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 18 17 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = less;
unicode = 60;
},
{
glyphname = greaterequal;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251,210,l),
(486,400,l),
(251,591,l),
(115,591,l),
(347,401,l),
(115,210,l)
);
},
{
closed = 1;
nodes = (
(477,67,l),
(477,148,l),
(115,148,l),
(115,67,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
3 1 1 0 1 76 0 0 1 0 133 0 1 2 1 133 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 18 17 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(232,213,l),
(478,405,l),
(232,598,l),
(123,598,l),
(365,405,l),
(123,213,l)
);
},
{
closed = 1;
nodes = (
(471,89,l),
(471,153,l),
(122,153,l),
(122,89,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
3 1 1 0 1 76 0 0 1 0 133 0 1 2 1 133 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 18 17 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(269,207,l),
(494,395,l),
(269,584,l),
(107,584,l),
(329,396,l),
(107,207,l)
);
},
{
closed = 1;
nodes = (
(482,44,l),
(482,142,l),
(108,142,l),
(108,44,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
3 1 1 0 1 76 0 0 1 0 133 0 1 2 1 133 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 18 17 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(257,209,l),
(489,398,l),
(257,589,l),
(112,589,l),
(341,399,l),
(112,209,l)
);
},
{
closed = 1;
nodes = (
(478,59,l),
(478,146,l),
(113,146,l),
(113,59,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
3 1 1 0 1 76 0 0 1 0 133 0 1 2 1 133 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 18 17 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = greaterequal;
unicode = 8805;
},
{
glyphname = lessequal;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(486,210,l),
(253,401,l),
(486,591,l),
(350,591,l),
(115,400,l),
(350,210,l)
);
},
{
closed = 1;
nodes = (
(485,67,l),
(485,148,l),
(124,148,l),
(124,67,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
3 1 1 0 1 76 0 0 1 0 133 0 1 2 1 133 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 18 17 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(478,213,l),
(235,405,l),
(478,598,l),
(368,598,l),
(123,405,l),
(368,213,l)
);
},
{
closed = 1;
nodes = (
(478,89,l),
(478,153,l),
(129,153,l),
(129,89,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
3 1 1 0 1 76 0 0 1 0 133 0 1 2 1 133 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 18 17 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(494,207,l),
(271,396,l),
(494,584,l),
(331,584,l),
(107,395,l),
(331,207,l)
);
},
{
closed = 1;
nodes = (
(492,44,l),
(492,142,l),
(118,142,l),
(118,44,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
3 1 1 0 1 76 0 0 1 0 133 0 1 2 1 133 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 18 17 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(489,209,l),
(259,399,l),
(489,589,l),
(343,589,l),
(112,398,l),
(343,209,l)
);
},
{
closed = 1;
nodes = (
(487,59,l),
(487,146,l),
(122,146,l),
(122,59,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
3 1 1 0 1 76 0 0 1 0 133 0 1 2 1 133 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 17 18 17 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = lessequal;
unicode = 8804;
},
{
glyphname = plusminus;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(347,140,l),
(347,274,l),
(543,274,l),
(543,363,l),
(347,363,l),
(347,497,l),
(255,497,l),
(255,363,l),
(59,363,l),
(59,274,l),
(255,274,l),
(255,140,l)
);
},
{
closed = 1;
nodes = (
(543,0,l),
(543,93,l),
(59,93,l),
(59,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
3 1 1 4 1 0 5 1 0 103 0 5 5 2 95 0 2 2 36 77 0 6 6 7 95 0 7 7 34 7 78 17 17 17 17 17 17 17 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(338,125,l),
(338,266,l),
(538,266,l),
(538,337,l),
(338,337,l),
(338,478,l),
(263,478,l),
(263,337,l),
(63,337,l),
(63,266,l),
(263,266,l),
(263,125,l)
);
},
{
closed = 1;
nodes = (
(538,0,l),
(538,73,l),
(63,73,l),
(63,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
3 1 1 4 1 0 5 1 0 103 0 5 5 2 95 0 2 2 36 77 0 6 6 7 95 0 7 7 34 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
3 1 1 4 1 0 5 1 0 103 0 2 0 5 6 2 5 103 0 6 6 7 95 0 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
17 17 17 17 17 17 17 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(355,154,l),
(355,282,l),
(547,282,l),
(547,389,l),
(355,389,l),
(355,516,l),
(246,516,l),
(246,389,l),
(54,389,l),
(54,282,l),
(246,282,l),
(246,154,l)
);
},
{
closed = 1;
nodes = (
(547,0,l),
(547,112,l),
(54,112,l),
(54,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
3 1 1 4 1 0 5 1 0 103 0 5 5 2 95 0 2 2 36 77 0 6 6 7 95 0 7 7 34 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
3 1 1 4 1 0 5 1 0 103 0 2 0 5 6 2 5 103 0 6 6 7 95 0 7 7 34 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
17 17 17 17 17 17 17 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(349,144,l),
(349,277,l),
(544,277,l),
(544,372,l),
(349,372,l),
(349,503,l),
(252,503,l),
(252,372,l),
(57,372,l),
(57,277,l),
(252,277,l),
(252,144,l)
);
},
{
closed = 1;
nodes = (
(544,0,l),
(544,99,l),
(57,99,l),
(57,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
3 1 1 4 1 0 5 1 0 103 0 5 5 2 95 0 2 2 36 77 0 6 6 7 95 0 7 7 34 7 78 17 17 17 17 17 17 17 16 8 8 30
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = plusminus;
unicode = 177;
},
{
glyphname = approxequal;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(446,317,o),
(523,397,o),
(536,478,q),
(457,478,l),
(453,447,o),
(418,412,o),
(392,412,qs),
(373,412,o),
(340,427,o),
(314,442,qs),
(286,460,o),
(242,478,o),
(215,478,qs),
(156,478,o),
(78,399,o),
(65,318,q),
(144,318,l),
(149,350,o),
(182,384,o),
(209,384,qs),
(229,384,o),
(264,369,o),
(288,353,qs),
(316,335,o),
(358,317,o),
(385,317,qs)
);
},
{
closed = 1;
nodes = (
(511,100,o),
(536,261,q),
(457,261,l),
(453,230,o),
(419,195,o),
(392,195,qs),
(373,195,o),
(340,210,o),
(314,225,qs),
(286,243,o),
(242,261,o),
(215,261,qs),
(156,261,o),
(78,182,o),
(65,101,q),
(144,101,l),
(149,132,o),
(182,167,o),
(209,167,qs),
(229,167,o),
(264,152,o),
(288,136,qs),
(316,118,o),
(358,100,o),
(385,100,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
4 1 2 0 0 1 2 0 105 0 3 12 5 2 1 8 3 1 105 0 9 6 7 9 89 10 1 8 0 6 7 8 6 105 0 9 9 7 98 13 11 2 7 9 7 82 26 26 0 0 26 50 26 49 48 47 45 43 39 37 35 34 32 30 0 25 0 24 18 36 34 18 36 14 6 27
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(438,319,o),
(506,390,o),
(517,461,q),
(454,461,l),
(450,431,o),
(415,395,o),
(388,395,qs),
(369,395,o),
(336,410,o),
(312,425,qs),
(286,442,o),
(243,461,o),
(217,461,qs),
(107,461,o),
(83,320,q),
(146,320,l),
(150,350,o),
(185,386,o),
(212,386,qs),
(232,386,o),
(265,371,o),
(290,355,qs),
(315,338,o),
(357,319,o),
(383,319,qs)
);
},
{
closed = 1;
nodes = (
(438,112,o),
(506,183,o),
(517,254,q),
(454,254,l),
(450,224,o),
(415,188,o),
(388,188,qs),
(369,188,o),
(336,203,o),
(312,218,qs),
(286,235,o),
(243,254,o),
(217,254,qs),
(107,254,o),
(83,113,q),
(146,113,l),
(150,143,o),
(185,179,o),
(212,179,qs),
(232,179,o),
(265,164,o),
(290,148,qs),
(315,131,o),
(357,112,o),
(383,112,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
4 1 2 0 0 1 2 0 105 0 3 12 5 2 1 8 3 1 105 0 9 6 7 9 89 10 1 8 0 6 7 8 6 105 0 9 9 7 97 13 11 2 7 9 7 81 25 25 0 0 25 49 25 48 46 45 43 41 37 35 34 33 31 29 0 24 0 23 18 36 33 18 36 14 6 27
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(454,315,o),
(540,404,o),
(555,495,q),
(459,495,l),
(455,463,o),
(422,429,o),
(395,429,qs),
(376,429,o),
(344,443,o),
(316,459,qs),
(284,477,o),
(240,495,o),
(213,495,qs),
(148,495,o),
(61,407,o),
(46,316,q),
(141,316,l),
(152,382,o),
(206,382,qs),
(225,382,o),
(261,367,o),
(286,351,qs),
(319,332,o),
(360,315,o),
(387,315,qs)
);
},
{
closed = 1;
nodes = (
(454,87,o),
(540,176,o),
(555,267,q),
(459,267,l),
(455,235,o),
(422,201,o),
(395,201,qs),
(376,201,o),
(344,215,o),
(316,231,qs),
(284,249,o),
(240,267,o),
(213,267,qs),
(148,267,o),
(61,179,o),
(46,88,q),
(141,88,l),
(152,154,o),
(206,154,qs),
(225,154,o),
(261,139,o),
(286,123,qs),
(319,104,o),
(360,87,o),
(387,87,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
4 1 2 0 0 1 2 0 105 0 3 12 5 2 1 8 3 1 105 0 9 6 7 9 89 10 1 8 0 6 7 8 6 105 0 9 9 7 97 13 11 2 7 9 7 81 25 25 0 0 25 49 25 48 46 45 43 41 37 35 33 32 31 29 0 24 0 23 18 36 34 17 36 14 6 27
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(449,316,o),
(529,399,o),
(542,484,q),
(457,484,l),
(453,453,o),
(419,418,o),
(393,418,qs),
(374,418,o),
(342,432,o),
(314,448,qs),
(286,466,o),
(241,484,o),
(214,484,qs),
(153,484,o),
(73,402,o),
(58,317,q),
(143,317,l),
(152,383,o),
(208,383,qs),
(228,383,o),
(263,367,o),
(287,352,qs),
(317,334,o),
(359,316,o),
(386,316,qs)
);
},
{
closed = 1;
nodes = (
(449,95,o),
(529,178,o),
(542,263,q),
(457,263,l),
(453,232,o),
(419,197,o),
(393,197,qs),
(374,197,o),
(342,211,o),
(314,227,qs),
(286,245,o),
(241,263,o),
(214,263,qs),
(153,263,o),
(73,181,o),
(58,96,q),
(143,96,l),
(152,162,o),
(208,162,qs),
(228,162,o),
(263,146,o),
(287,131,qs),
(317,113,o),
(359,95,o),
(386,95,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
4 1 2 0 0 1 2 0 105 0 3 12 5 2 1 8 3 1 105 0 9 6 7 9 89 10 1 8 0 6 7 8 6 105 0 9 9 7 97 13 11 2 7 9 7 81 25 25 0 0 25 49 25 48 46 45 43 41 37 35 33 32 31 29 0 24 0 23 18 36 34 17 36 14 6 27
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = approxequal;
unicode = 8776;
},
{
glyphname = asciitilde;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,239,o),
(536,400,q),
(457,400,l),
(453,369,o),
(419,334,o),
(392,334,qs),
(373,334,o),
(340,349,o),
(314,364,qs),
(286,382,o),
(242,400,o),
(215,400,qs),
(156,400,o),
(78,321,o),
(65,240,q),
(144,240,l),
(149,271,o),
(182,306,o),
(209,306,qs),
(229,306,o),
(264,291,o),
(288,275,qs),
(316,257,o),
(358,239,o),
(385,239,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 98 6 5 2 1 3 1 82 0 0 0 24 0 23 18 36 34 18 36 7 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 600;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(438,249,o),
(506,320,o),
(517,391,q),
(454,391,l),
(450,361,o),
(415,325,o),
(388,325,qs),
(369,325,o),
(336,340,o),
(312,355,qs),
(286,372,o),
(243,391,o),
(217,391,qs),
(107,391,o),
(83,250,q),
(146,250,l),
(150,280,o),
(185,316,o),
(212,316,qs),
(232,316,o),
(265,301,o),
(290,285,qs),
(315,268,o),
(357,249,o),
(383,249,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 24 0 23 18 36 33 18 36 7 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(454,228,o),
(540,317,o),
(555,408,q),
(459,408,l),
(455,376,o),
(422,342,o),
(395,342,qs),
(376,342,o),
(344,356,o),
(316,372,qs),
(284,390,o),
(240,408,o),
(213,408,qs),
(148,408,o),
(61,320,o),
(46,229,q),
(141,229,l),
(152,295,o),
(206,295,qs),
(225,295,o),
(261,280,o),
(286,264,qs),
(319,245,o),
(360,228,o),
(387,228,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 24 0 23 18 36 34 17 36 7 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 600;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(449,235,o),
(529,317,o),
(542,402,q),
(457,402,l),
(453,371,o),
(419,336,o),
(393,336,qs),
(374,336,o),
(342,350,o),
(314,366,qs),
(286,384,o),
(241,402,o),
(214,402,qs),
(153,402,o),
(73,320,o),
(58,236,q),
(143,236,l),
(148,268,o),
(181,302,o),
(208,302,qs),
(228,302,o),
(263,286,o),
(287,271,qs),
(317,253,o),
(359,235,o),
(386,235,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 25 0 24 18 36 34 18 36 7 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 600;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = logicalnot;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(551,212,l),
(551,435,l),
(45,435,l),
(45,352,l),
(445,352,l),
(445,212,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 0 0 2 113 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 0 2 134 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
17 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(545,223,l),
(545,432,l),
(45,432,l),
(45,365,l),
(461,365,l),
(461,223,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 0 0 2 113 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 0 2 134 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
17 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(557,201,l),
(557,437,l),
(44,437,l),
(44,338,l),
(429,338,l),
(429,201,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 0 0 2 113 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 0 2 134 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
17 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(553,208,l),
(553,435,l),
(44,435,l),
(44,347,l),
(440,347,l),
(440,208,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 0 0 2 113 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 0 2 134 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
17 17 16 3 8 25
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = logicalnot;
unicode = 172;
},
{
glyphname = asciicircum;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(143,174,l),
(322,573,l),
(500,174,l),
(608,174,l),
(372,700,l),
(272,700,l),
(35,174,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 22 values pushed */
4 1 1 0 1 76 0 0 1 0 133 2 1 1 1 118 18 17 16 3 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 643;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(123,178,l),
(311,597,l),
(498,178,l),
(584,178,l),
(349,700,l),
(272,700,l),
(37,178,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 22 values pushed */
4 1 1 0 1 76 0 0 1 0 133 2 1 1 1 118 18 17 16 3 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 620;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(163,170,l),
(333,549,l),
(502,170,l),
(632,170,l),
(394,700,l),
(272,700,l),
(33,170,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 22 values pushed */
4 1 1 0 1 76 0 0 1 0 133 2 1 1 1 118 18 17 16 3 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 665;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(150,173,l),
(326,565,l),
(501,173,l),
(616,173,l),
(379,700,l),
(272,700,l),
(34,173,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 22 values pushed */
4 1 1 0 1 76 0 0 1 0 133 2 1 1 1 118 18 17 16 3 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 650;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = infinity;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(246,135,o),
(328,187,o),
(356,230,q),
(393,186,o),
(473,135,o),
(526,135,qs),
(595,135,o),
(687,218,o),
(687,290,qs),
(687,360,o),
(599,441,o),
(531,441,qs),
(476,441,o),
(391,386,o),
(364,341,q),
(327,388,o),
(248,441,o),
(193,441,qs),
(125,441,o),
(35,357,o),
(35,286,qs),
(35,215,o),
(124,135,o),
(194,135,qs)
);
},
{
closed = 1;
nodes = (
(163,209,o),
(122,251,o),
(122,287,qs),
(122,323,o),
(164,367,o),
(197,367,qs),
(229,367,o),
(281,326,o),
(314,284,q),
(292,249,o),
(232,209,o),
(198,209,qs)
);
},
{
closed = 1;
nodes = (
(487,208,o),
(435,248,o),
(405,286,q),
(426,323,o),
(489,366,o),
(524,366,qs),
(558,366,o),
(600,324,o),
(600,288,qs),
(600,252,o),
(557,208,o),
(520,208,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
44 26 20 8 4 5 4 1 76 1 1 0 6 1 4 5 0 4 105 10 7 9 3 5 2 2 5 89 10 7 9 3 5 5 2 97 8 3 2 2 5 2 81 36 36 24 24 0 0 36 47 36 46 42 40 24 35 24 34 30 28 0 23 0 22 36 36 36 11 6 25
CALL[ ]	/* CallFunction */";
};
width = 722;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(240,141,o),
(321,196,o),
(347,240,q),
(384,194,o),
(461,141,o),
(513,141,qs),
(579,141,o),
(666,221,o),
(666,289,qs),
(666,357,o),
(581,434,o),
(515,434,qs),
(462,434,o),
(379,377,o),
(354,331,q),
(316,380,o),
(240,434,o),
(186,434,qs),
(122,434,o),
(37,354,o),
(37,286,qs),
(37,218,o),
(121,141,o),
(187,141,qs)
);
},
{
closed = 1;
nodes = (
(152,202,o),
(107,247,o),
(107,286,qs),
(107,325,o),
(153,374,o),
(189,374,qs),
(224,374,o),
(280,329,o),
(313,285,q),
(291,247,o),
(227,202,o),
(190,202,qs)
);
},
{
closed = 1;
nodes = (
(473,201,o),
(419,244,o),
(388,286,q),
(410,326,o),
(475,373,o),
(513,373,qs),
(550,373,o),
(596,327,o),
(596,288,qs),
(596,249,o),
(549,201,o),
(509,201,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
44 26 20 8 4 5 4 1 76 1 1 0 6 1 4 5 0 4 105 10 7 9 3 5 2 2 5 89 10 7 9 3 5 5 2 97 8 3 2 2 5 2 81 36 36 24 24 0 0 36 47 36 46 42 40 24 35 24 34 30 28 0 23 0 22 36 36 36 11 6 25
CALL[ ]	/* CallFunction */";
};
width = 703;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(250,128,o),
(336,178,o),
(365,220,q),
(403,177,o),
(485,128,o),
(539,128,qs),
(611,128,o),
(707,214,o),
(707,290,qs),
(707,363,o),
(616,447,o),
(544,447,qs),
(487,447,o),
(401,395,o),
(373,350,q),
(337,395,o),
(255,447,o),
(199,447,qs),
(128,447,o),
(33,359,o),
(33,285,qs),
(33,212,o),
(124,128,o),
(196,128,qs)
);
},
{
closed = 1;
nodes = (
(175,216,o),
(136,254,o),
(136,287,qs),
(136,320,o),
(174,360,o),
(204,360,qs),
(234,360,o),
(282,322,o),
(314,282,q),
(293,251,o),
(238,216,o),
(206,216,qs)
);
},
{
closed = 1;
nodes = (
(500,215,o),
(450,251,o),
(422,286,q),
(442,320,o),
(501,359,o),
(534,359,qs),
(565,359,o),
(604,321,o),
(604,288,qs),
(604,254,o),
(564,215,o),
(531,215,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
44 26 20 8 4 5 4 1 76 1 1 0 6 1 4 5 0 4 105 10 7 9 3 5 2 2 5 89 10 7 9 3 5 5 2 97 8 3 2 2 5 2 81 36 36 24 24 0 0 36 47 36 46 42 40 24 35 24 34 30 28 0 23 0 22 36 36 36 11 6 25
CALL[ ]	/* CallFunction */";
};
width = 740;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(246,132,o),
(331,184,o),
(359,227,q),
(396,183,o),
(477,132,o),
(530,132,qs),
(601,132,o),
(693,216,o),
(693,290,qs),
(693,360,o),
(604,443,o),
(535,443,qs),
(479,443,o),
(393,389,o),
(367,344,q),
(331,390,o),
(250,443,o),
(195,443,qs),
(126,443,o),
(34,357,o),
(34,285,qs),
(34,215,o),
(123,132,o),
(192,132,qs)
);
},
{
closed = 1;
nodes = (
(167,211,o),
(126,251,o),
(126,287,qs),
(126,322,o),
(167,365,o),
(199,365,qs),
(231,365,o),
(281,325,o),
(314,283,q),
(292,249,o),
(234,211,o),
(201,211,qs)
);
},
{
closed = 1;
nodes = (
(491,210,o),
(440,248,o),
(411,286,q),
(432,322,o),
(492,364,o),
(527,364,qs),
(560,364,o),
(601,323,o),
(601,288,qs),
(601,253,o),
(559,210,o),
(524,210,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
44 26 20 8 4 5 4 1 76 1 1 0 6 1 4 5 0 4 105 10 7 9 3 5 2 2 5 89 10 7 9 3 5 5 2 97 8 3 2 2 5 2 81 36 36 24 24 0 0 36 47 36 46 42 40 24 35 24 34 30 28 0 23 0 22 36 36 36 11 6 25
CALL[ ]	/* CallFunction */";
};
width = 728;
}
);
note = infinity;
unicode = 8734;
},
{
glyphname = integral;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-19,-210,ls),
(55,-210,o),
(135,-140,o),
(144,-61,qs),
(236,776,ls),
(239,807,o),
(264,832,o),
(287,832,qs),
(306,832,l),
(315,922,l),
(294,922,ls),
(221,922,o),
(138,854,o),
(130,776,qs),
(38,-61,ls),
(35,-95,o),
(13,-121,o),
(-12,-121,qs),
(-32,-121,l),
(-41,-210,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 1 0 2 0 1 2 105 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 37 33 37 32 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 267;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(-14,-191,ls),
(52,-191,o),
(121,-126,o),
(129,-54,qs),
(222,782,ls),
(226,817,o),
(253,844,o),
(279,844,qs),
(298,844,l),
(305,915,l),
(283,915,ls),
(218,915,o),
(146,852,o),
(138,782,qs),
(45,-54,ls),
(41,-92,o),
(18,-121,o),
(-10,-121,qs),
(-31,-121,l),
(-38,-191,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 1 0 2 0 1 2 105 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 37 33 37 32 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 258;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(-24,-229,ls),
(57,-229,o),
(150,-154,o),
(159,-68,qs),
(249,770,ls),
(252,797,o),
(274,820,o),
(295,820,qs),
(313,820,l),
(324,929,l),
(304,929,ls),
(224,929,o),
(130,856,o),
(121,770,qs),
(31,-68,ls),
(28,-97,o),
(8,-121,o),
(-14,-121,qs),
(-33,-121,l),
(-44,-229,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 1 0 2 0 1 2 105 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 37 33 37 32 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 275;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(-21,-216,ls),
(56,-216,o),
(140,-145,o),
(149,-63,qs),
(240,774,ls),
(243,803,o),
(267,828,o),
(290,828,qs),
(308,828,l),
(318,924,l),
(297,924,ls),
(222,924,o),
(135,854,o),
(127,774,qs),
(36,-63,ls),
(32,-95,o),
(11,-121,o),
(-13,-121,qs),
(-32,-121,l),
(-42,-216,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 1 0 2 0 1 2 105 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 37 33 37 32 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 269;
}
);
note = integral;
unicode = 8747;
},
{
glyphname = uni2126;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,0,l),
(326,86,l),
(245,113,o),
(148,255,o),
(148,351,qs),
(148,419,o),
(202,540,o),
(313,616,o),
(394,616,qs),
(462,616,o),
(574,555,o),
(641,435,o),
(641,351,qs),
(641,256,o),
(546,113,o),
(463,86,q),
(463,0,l),
(736,0,l),
(736,82,l),
(607,82,l),
(677,125,o),
(749,271,o),
(749,360,qs),
(749,463,o),
(656,623,o),
(494,712,o),
(394,712,qs),
(295,712,o),
(134,623,o),
(41,462,o),
(41,360,qs),
(41,271,o),
(113,125,o),
(182,82,q),
(52,82,l),
(52,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
33 19 2 0 4 1 76 0 1 0 4 0 1 4 105 2 1 0 3 3 0 87 2 1 0 0 3 95 5 1 3 0 3 79 23 39 17 22 38 16 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 789;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(331,0,l),
(331,69,l),
(238,93,o),
(127,247,o),
(127,352,qs),
(127,424,o),
(186,554,o),
(307,636,o),
(394,636,qs),
(463,636,o),
(585,572,o),
(662,444,o),
(662,352,qs),
(662,250,o),
(555,94,o),
(458,69,q),
(458,0,l),
(732,0,l),
(732,66,l),
(590,66,l),
(666,107,o),
(747,263,o),
(747,357,qs),
(747,459,o),
(655,621,o),
(494,712,o),
(394,712,qs),
(295,712,o),
(135,621,o),
(43,459,o),
(43,357,qs),
(43,262,o),
(124,107,o),
(199,66,q),
(56,66,l),
(56,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
33 19 2 0 4 1 76 0 1 0 4 0 1 4 105 2 1 0 3 3 0 87 2 1 0 0 3 95 5 1 3 0 3 79 23 39 17 22 38 16 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 789;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(320,0,l),
(320,102,l),
(252,132,o),
(169,262,o),
(169,350,qs),
(169,414,o),
(218,526,o),
(319,595,o),
(394,595,qs),
(460,595,o),
(563,536,o),
(620,426,o),
(620,350,qs),
(620,262,o),
(537,132,o),
(468,102,q),
(468,0,l),
(740,0,l),
(740,98,l),
(623,98,l),
(687,142,o),
(750,279,o),
(750,363,qs),
(750,466,o),
(657,625,o),
(495,712,o),
(394,712,qs),
(294,712,o),
(132,624,o),
(39,465,o),
(39,363,qs),
(39,279,o),
(102,142,o),
(165,98,q),
(48,98,l),
(48,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
33 19 2 0 4 1 76 0 1 0 4 0 1 4 105 2 1 0 3 3 0 87 2 1 0 0 3 95 5 1 3 0 3 79 23 39 17 22 38 16 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 788;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(324,0,l),
(324,91,l),
(247,119,o),
(155,257,o),
(155,351,qs),
(155,417,o),
(207,535,o),
(315,609,o),
(394,609,qs),
(461,609,o),
(570,549,o),
(634,432,o),
(634,351,qs),
(634,258,o),
(543,119,o),
(465,91,q),
(465,0,l),
(737,0,l),
(737,87,l),
(612,87,l),
(680,131,o),
(749,274,o),
(749,361,qs),
(749,464,o),
(656,623,o),
(494,712,o),
(394,712,qs),
(294,712,o),
(133,623,o),
(40,463,o),
(40,361,qs),
(40,274,o),
(109,131,o),
(176,87,q),
(51,87,l),
(51,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
33 19 2 0 4 1 76 0 1 0 4 0 1 4 105 2 1 0 3 3 0 87 2 1 0 0 3 95 5 1 3 0 3 79 23 39 17 22 38 16 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = uni2126;
unicode = 8486;
},
{
glyphname = uni2206;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(677,0,l),
(677,82,l),
(395,700,l),
(308,700,l),
(27,82,l),
(27,0,l)
);
},
{
closed = 1;
nodes = (
(351,580,l),
(569,82,l),
(135,82,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
7 1 2 0 1 76 3 0 2 2 1 75 0 0 2 0 133 3 1 2 1 1 2 87 3 1 2 2 1 95 0 1 2 1 79 6 6 6 8 6 8 18 17 4 6 24
CALL[ ]	/* CallFunction */";
};
width = 703;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(665,0,l),
(665,65,l),
(382,700,l),
(312,700,l),
(30,65,l),
(30,0,l)
);
},
{
closed = 1;
nodes = (
(347,604,l),
(580,65,l),
(115,65,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
7 1 2 0 1 76 3 0 2 2 1 75 0 0 2 0 133 3 1 2 1 1 2 87 3 1 2 2 1 95 0 1 2 1 79 6 6 6 8 6 8 18 17 4 6 24
CALL[ ]	/* CallFunction */";
};
width = 695;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(688,0,l),
(688,98,l),
(408,700,l),
(303,700,l),
(23,98,l),
(23,0,l)
);
},
{
closed = 1;
nodes = (
(355,555,l),
(557,98,l),
(154,98,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
7 1 2 0 1 76 3 0 2 2 1 75 0 0 2 0 133 3 1 2 1 1 2 87 3 1 2 2 1 95 0 1 2 1 79 6 6 6 8 6 8 18 17 4 6 24
CALL[ ]	/* CallFunction */";
};
width = 711;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(680,0,l),
(680,87,l),
(399,700,l),
(306,700,l),
(25,87,l),
(25,0,l)
);
},
{
closed = 1;
nodes = (
(352,571,l),
(565,87,l),
(141,87,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
7 1 2 0 1 76 3 0 2 2 1 75 0 0 2 0 133 3 1 2 1 1 2 87 3 1 2 2 1 95 0 1 2 1 79 6 6 6 8 6 8 18 17 4 6 24
CALL[ ]	/* CallFunction */";
};
width = 706;
}
);
note = uni2206;
unicode = 8710;
},
{
glyphname = product;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,0,l),
(216,618,l),
(515,618,l),
(515,0,l),
(621,0,l),
(621,618,l),
(698,618,l),
(698,700,l),
(33,700,l),
(33,618,l),
(110,618,l),
(110,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
5 1 3 0 3 134 0 1 0 0 1 87 0 1 1 0 95 4 2 2 0 1 0 79 17 17 17 17 17 16 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 731;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(201,0,l),
(201,634,l),
(525,634,l),
(525,0,l),
(609,0,l),
(609,634,l),
(688,634,l),
(688,700,l),
(37,700,l),
(37,634,l),
(117,634,l),
(117,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
5 1 3 0 3 134 0 1 0 0 1 87 0 1 1 0 95 4 2 2 0 1 0 79 17 17 17 17 17 16 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 725;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(231,0,l),
(231,602,l),
(505,602,l),
(505,0,l),
(633,0,l),
(633,602,l),
(708,602,l),
(708,700,l),
(29,700,l),
(29,602,l),
(103,602,l),
(103,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
5 1 3 0 3 134 0 1 0 0 1 87 0 1 1 0 95 4 2 2 0 1 0 79 17 17 17 17 17 16 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 736;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(221,0,l),
(221,613,l),
(512,613,l),
(512,0,l),
(625,0,l),
(625,613,l),
(701,613,l),
(701,700,l),
(32,700,l),
(32,613,l),
(108,613,l),
(108,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
5 1 3 0 3 134 0 1 0 0 1 87 0 1 1 0 95 4 2 2 0 1 0 79 17 17 17 17 17 16 6 6 28
CALL[ ]	/* CallFunction */";
};
width = 732;
}
);
note = product;
unicode = 8719;
},
{
glyphname = summation;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(449,-49,l),
(449,32,l),
(132,32,l),
(396,290,l),
(396,369,l),
(128,619,l),
(450,619,l),
(450,700,l),
(43,700,l),
(43,578,l),
(298,328,l),
(42,73,l),
(42,-49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
8 7 2 1 0 5 2 1 1 76 0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 19 17 19 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 472;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(431,-49,l),
(431,16,l),
(111,16,l),
(379,295,l),
(379,360,l),
(109,635,l),
(431,635,l),
(431,700,l),
(41,700,l),
(41,604,l),
(303,326,l),
(41,47,l),
(41,-49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
8 7 2 1 0 5 2 1 1 76 0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 19 17 19 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 450;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(467,-50,l),
(467,48,l),
(152,48,l),
(412,284,l),
(412,377,l),
(147,602,l),
(468,602,l),
(468,700,l),
(44,700,l),
(44,552,l),
(292,330,l),
(43,99,l),
(43,-50,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
8 7 2 1 0 5 2 1 1 76 0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 19 17 19 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 493;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(455,-50,l),
(455,37,l),
(138,37,l),
(401,288,l),
(401,371,l),
(134,613,l),
(456,613,l),
(456,700,l),
(43,700,l),
(43,569,l),
(296,329,l),
(42,82,l),
(42,-50,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
8 7 2 1 0 5 2 1 1 76 0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 17 19 17 19 4 6 26
CALL[ ]	/* CallFunction */";
};
width = 479;
}
);
note = summation;
unicode = 8721;
},
{
glyphname = radical;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(299,-43,l),
(797,875,l),
(726,875,l),
(297,82,l),
(179,292,l),
(19,199,l),
(50,146,l),
(119,185,l),
(248,-43,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
4 3 2 1 4 1 0 1 76 0 0 1 0 133 0 1 1 118 17 21 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 747;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(271,-44,l),
(758,865,l),
(698,865,l),
(267,58,l),
(154,258,l),
(18,179,l),
(44,135,l),
(108,171,l),
(230,-44,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
4 3 2 1 4 1 0 1 76 0 0 1 0 133 0 1 1 118 17 21 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 712;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(327,-42,l),
(835,885,l),
(753,885,l),
(327,106,l),
(203,326,l),
(19,218,l),
(56,156,l),
(129,198,l),
(265,-42,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
4 3 2 1 4 1 0 1 76 0 0 1 0 133 0 1 1 118 17 21 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 782;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(308,-43,l),
(809,878,l),
(735,878,l),
(307,90,l),
(187,303,l),
(19,205,l),
(52,149,l),
(122,189,l),
(253,-43,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
4 3 2 1 4 1 0 1 76 0 0 1 0 133 0 1 1 118 17 21 2 6 24
CALL[ ]	/* CallFunction */";
};
width = 759;
}
);
note = radical;
unicode = 8730;
},
{
glyphname = uni00B5;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,-220,l),
(173,12,l),
(208,-12,o),
(261,-12,qs),
(318,-12,o),
(407,40,o),
(431,86,q),
(439,0,l),
(533,0,l),
(533,496,l),
(427,496,l),
(427,240,ls),
(427,164,o),
(352,78,o),
(291,78,qs),
(232,78,o),
(173,151,o),
(173,222,qs),
(173,496,l),
(67,496,l),
(67,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
13 1 1 0 18 1 3 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 36 77 0 1 1 3 97 4 1 3 3 34 77 0 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
2 1 0 0 36 77 0 3 3 34 77 0 1 1 4 97 0 4 4 40 77 0 5 5 38 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 35 17 19 35 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 600;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(153,-220,l),
(153,20,l),
(196,-12,o),
(261,-12,qs),
(317,-12,o),
(409,42,o),
(433,88,q),
(438,0,l),
(514,0,l),
(514,496,l),
(430,496,l),
(430,239,ls),
(430,155,o),
(347,60,o),
(281,60,qs),
(153,60,o),
(153,215,qs),
(153,496,l),
(69,496,l),
(69,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 1 0 17 1 3 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 36 77 0 1 1 3 97 4 1 3 3 34 77 0 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
2 1 0 0 36 77 0 3 3 34 77 0 1 1 4 97 0 4 4 40 77 0 5 5 38 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 35 17 19 34 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 583;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(193,-220,l),
(193,4,l),
(219,-12,o),
(260,-12,qs),
(318,-12,o),
(404,39,o),
(429,84,q),
(439,0,l),
(551,0,l),
(551,496,l),
(423,496,l),
(423,240,ls),
(423,173,o),
(356,96,o),
(301,96,qs),
(247,96,o),
(193,163,o),
(193,228,qs),
(193,496,l),
(65,496,l),
(65,-220,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
18 13 2 3 1 1 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 36 77 0 1 1 3 97 4 1 3 3 34 77 0 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
2 1 0 0 36 77 0 3 3 34 77 0 1 1 4 97 0 4 4 40 77 0 5 5 38 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 35 17 19 35 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 617;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(180,-220,l),
(180,9,l),
(212,-12,o),
(260,-12,qs),
(317,-12,o),
(405,40,o),
(430,85,q),
(439,0,l),
(539,0,l),
(539,496,l),
(425,496,l),
(425,240,ls),
(425,167,o),
(353,84,o),
(294,84,qs),
(180,84,o),
(180,224,qs),
(180,496,l),
(66,496,l),
(66,-220,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 1 0 17 1 3 1 2 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 36 77 0 1 1 3 97 4 1 3 3 34 77 0 5 5 38 5 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
2 1 0 0 36 77 0 3 3 34 77 0 1 1 4 97 0 4 4 40 77 0 5 5 38 5 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
18 35 17 19 34 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 606;
}
);
note = uni00B5;
unicode = 181;
},
{
glyphname = partialdiff;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(330,-9,o),
(397,42,qs),
(466,94,o),
(542,283,o),
(542,411,qs),
(542,568,o),
(417,740,o),
(302,740,qs),
(252,740,o),
(202,726,q),
(202,666,l),
(244,678,o),
(278,678,qs),
(334,678,o),
(368,650,qs),
(430,598,o),
(437,463,q),
(407,558,o),
(306,558,qs),
(228,558,o),
(105,466,o),
(38,314,o),
(38,228,qs),
(38,149,o),
(66,95,qs),
(93,44,o),
(185,-9,o),
(243,-9,qs)
);
},
{
closed = 1;
nodes = (
(205,82,o),
(145,155,o),
(145,229,qs),
(145,297,o),
(167,351,qs),
(188,407,o),
(264,469,o),
(313,469,qs),
(364,469,o),
(423,396,o),
(423,324,qs),
(423,258,o),
(402,204,qs),
(380,147,o),
(303,82,o),
(253,82,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
17 1 1 2 16 1 0 1 10 1 5 4 3 76 0 2 0 1 0 2 1 105 0 0 0 4 5 0 4 105 7 1 5 3 3 5 89 7 1 5 5 3 97 6 1 3 5 3 81 28 28 0 0 28 43 28 42 36 34 0 27 0 26 35 36 39 8 6 25
CALL[ ]	/* CallFunction */";
};
width = 579;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(318,-10,o),
(385,42,qs),
(452,94,o),
(528,286,o),
(528,413,qs),
(528,571,o),
(407,740,o),
(296,740,qs),
(252,740,o),
(201,726,q),
(201,676,l),
(248,689,o),
(281,689,qs),
(341,689,o),
(376,657,qs),
(439,598,o),
(444,444,q),
(429,505,o),
(357,557,o),
(305,557,qs),
(226,557,o),
(105,461,o),
(39,306,o),
(39,221,qs),
(39,142,o),
(66,91,qs),
(92,41,o),
(179,-10,o),
(234,-10,qs)
);
},
{
closed = 1;
nodes = (
(190,62,o),
(124,142,o),
(124,221,qs),
(124,295,o),
(148,356,qs),
(172,417,o),
(256,486,o),
(310,486,qs),
(367,486,o),
(431,406,o),
(431,326,qs),
(431,256,o),
(407,196,qs),
(382,134,o),
(297,62,o),
(242,62,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
18 1 1 2 17 1 0 1 11 1 5 4 3 76 0 2 0 1 0 2 1 105 0 0 0 4 5 0 4 105 7 1 5 3 3 5 89 7 1 5 5 3 97 6 1 3 5 3 81 29 29 0 0 29 44 29 43 37 35 0 28 0 27 35 37 39 8 6 25
CALL[ ]	/* CallFunction */";
};
width = 567;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(339,-8,o),
(409,42,qs),
(478,93,o),
(555,281,o),
(555,409,qs),
(555,566,o),
(427,740,o),
(308,740,qs),
(255,740,o),
(202,725,q),
(202,656,l),
(241,666,o),
(275,666,qs),
(327,666,o),
(360,642,qs),
(422,597,o),
(430,481,q),
(397,559,o),
(306,559,qs),
(229,559,o),
(106,471,o),
(37,323,o),
(37,235,qs),
(37,153,o),
(66,98,qs),
(94,45,o),
(191,-8,o),
(251,-8,qs)
);
},
{
closed = 1;
nodes = (
(220,101,o),
(166,168,o),
(166,236,qs),
(166,298,o),
(185,346,qs),
(203,395,o),
(271,452,o),
(315,452,qs),
(361,452,o),
(414,386,o),
(414,321,qs),
(414,261,o),
(396,211,qs),
(377,160,o),
(308,101,o),
(264,101,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
17 1 1 2 16 1 0 1 10 1 4 0 3 76 0 2 0 1 0 2 1 105 0 0 0 4 5 0 4 105 7 1 5 3 3 5 89 7 1 5 5 3 97 6 1 3 5 3 81 28 28 0 0 28 43 28 42 36 34 0 27 0 26 35 36 39 8 6 25
CALL[ ]	/* CallFunction */";
};
width = 591;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(332,-9,o),
(401,42,qs),
(470,93,o),
(546,282,o),
(546,410,qs),
(546,568,o),
(420,740,o),
(304,740,qs),
(252,740,o),
(202,725,q),
(202,663,l),
(244,674,o),
(277,674,qs),
(332,674,o),
(365,647,qs),
(427,598,o),
(435,469,q),
(404,558,o),
(306,558,qs),
(228,558,o),
(106,468,o),
(38,317,o),
(38,230,qs),
(38,148,o),
(66,96,qs),
(94,44,o),
(187,-9,o),
(245,-9,qs)
);
},
{
closed = 1;
nodes = (
(210,88,o),
(152,159,o),
(152,231,qs),
(152,297,o),
(173,349,qs),
(193,402,o),
(266,463,o),
(313,463,qs),
(363,463,o),
(420,392,o),
(420,323,qs),
(420,260,o),
(400,206,qs),
(378,151,o),
(305,88,o),
(257,88,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
17 1 1 2 16 1 0 1 10 1 4 0 3 76 0 2 0 1 0 2 1 105 0 0 0 4 5 0 4 105 7 1 5 3 3 5 89 7 1 5 5 3 97 6 1 3 5 3 81 28 28 0 0 28 43 28 42 36 34 0 27 0 26 35 36 39 8 6 25
CALL[ ]	/* CallFunction */";
};
width = 583;
}
);
note = partialdiff;
unicode = 8706;
},
{
glyphname = percent;
kernLeft = percent;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(261,0,l),
(662,700,l),
(557,700,l),
(156,0,l)
);
},
{
closed = 1;
nodes = (
(253,366,o),
(290,387,qs),
(328,409,o),
(372,487,o),
(372,539,qs),
(372,593,o),
(350,631,qs),
(328,670,o),
(254,712,o),
(207,712,qs),
(161,712,o),
(123,691,qs),
(84,670,o),
(40,591,o),
(40,539,qs),
(40,488,o),
(62,447,qs),
(84,408,o),
(159,366,o),
(206,366,qs)
);
},
{
closed = 1;
nodes = (
(172,443,o),
(126,493,o),
(126,539,qs),
(126,585,o),
(172,636,o),
(207,636,qs),
(241,636,o),
(286,585,o),
(286,539,qs),
(286,493,o),
(240,443,o),
(206,443,qs)
);
},
{
closed = 1;
nodes = (
(665,-12,o),
(702,10,qs),
(740,31,o),
(783,109,o),
(783,161,qs),
(783,213,o),
(761,254,qs),
(738,292,o),
(664,334,o),
(618,334,qs),
(571,334,o),
(533,313,qs),
(495,291,o),
(451,213,o),
(451,161,qs),
(451,110,o),
(473,69,qs),
(496,31,o),
(571,-12,o),
(617,-12,qs)
);
},
{
closed = 1;
nodes = (
(582,65,o),
(537,116,o),
(537,161,qs),
(537,207,o),
(583,258,o),
(617,258,qs),
(652,258,o),
(697,207,o),
(697,161,qs),
(697,116,o),
(652,65,o),
(617,65,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 5 10 1 3 6 5 3 105 0 6 0 8 9 6 8 106 0 4 4 0 97 2 1 0 0 33 77 13 1 9 9 1 97 12 7 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
11 1 5 10 1 3 6 5 3 105 0 6 0 8 9 6 8 106 0 0 0 33 77 0 4 4 2 97 0 2 2 39 77 0 1 1 34 77 13 1 9 9 7 97 12 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
56 56 36 36 24 24 4 4 56 67 56 66 62 60 36 55 36 54 46 44 24 35 24 34 30 28 4 23 4 22 41 17 16 14 8 25
CALL[ ]	/* CallFunction */";
};
width = 823;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(222,0,l),
(629,700,l),
(545,700,l),
(138,0,l)
);
},
{
closed = 1;
nodes = (
(245,375,o),
(281,396,qs),
(318,417,o),
(360,492,o),
(360,543,qs),
(360,596,o),
(339,633,qs),
(318,670,o),
(246,711,o),
(201,711,qs),
(157,711,o),
(120,691,qs),
(82,669,o),
(40,594,o),
(40,543,qs),
(40,492,o),
(61,454,qs),
(82,416,o),
(155,375,o),
(200,375,qs)
);
},
{
closed = 1;
nodes = (
(163,440,o),
(111,494,o),
(111,543,qs),
(111,592,o),
(163,648,o),
(201,648,qs),
(238,648,o),
(288,593,o),
(288,543,qs),
(288,494,o),
(237,440,o),
(200,440,qs)
);
},
{
closed = 1;
nodes = (
(619,-12,o),
(655,9,qs),
(692,30,o),
(733,105,o),
(733,156,qs),
(733,209,o),
(712,246,qs),
(691,283,o),
(619,324,o),
(574,324,qs),
(530,324,o),
(493,304,qs),
(456,282,o),
(414,206,o),
(414,156,qs),
(414,105,o),
(435,67,qs),
(456,29,o),
(529,-12,o),
(574,-12,qs)
);
},
{
closed = 1;
nodes = (
(536,53,o),
(485,107,o),
(485,156,qs),
(485,205,o),
(536,260,o),
(574,260,qs),
(612,260,o),
(662,206,o),
(662,156,qs),
(662,107,o),
(611,53,o),
(573,53,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 5 10 1 3 6 5 3 105 0 6 0 8 9 6 8 106 0 4 4 0 97 2 1 0 0 33 77 13 1 9 9 1 97 12 7 2 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
11 1 5 10 1 3 6 5 3 105 0 6 0 8 9 6 8 106 0 4 4 0 97 2 1 0 0 33 77 0 1 1 34 77 13 1 9 9 7 97 12 1 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
11 1 5 10 1 3 6 5 3 105 0 6 0 8 9 6 8 106 0 0 0 33 77 0 4 4 2 97 0 2 2 39 77 0 1 1 34 77 13 1 9 9 7 97 12 1 7 7 40 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
56 56 36 36 24 24 4 4 56 67 56 66 62 60 36 55 36 54 46 44 24 35 24 34 30 28 4 23 4 22 41 17 16 14 8 25
CALL[ ]	/* CallFunction */";
};
width = 773;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(299,0,l),
(694,700,l),
(569,700,l),
(174,0,l)
);
},
{
closed = 1;
nodes = (
(261,356,o),
(299,378,qs),
(339,399,o),
(384,480,o),
(384,534,qs),
(384,588,o),
(361,629,qs),
(338,669,o),
(261,712,o),
(213,712,qs),
(164,712,o),
(125,691,qs),
(85,669,o),
(40,588,o),
(40,534,qs),
(40,480,o),
(63,439,qs),
(86,399,o),
(164,356,o),
(212,356,qs)
);
},
{
closed = 1;
nodes = (
(181,445,o),
(141,491,o),
(141,534,qs),
(141,577,o),
(181,624,o),
(212,624,qs),
(243,624,o),
(283,577,o),
(283,534,qs),
(283,491,o),
(243,445,o),
(212,445,qs)
);
},
{
closed = 1;
nodes = (
(710,-12,o),
(748,10,qs),
(787,31,o),
(832,112,o),
(832,166,qs),
(832,220,o),
(809,261,qs),
(786,300,o),
(709,343,o),
(661,343,qs),
(612,343,o),
(573,322,qs),
(533,300,o),
(488,220,o),
(488,166,qs),
(488,112,o),
(511,71,qs),
(534,31,o),
(612,-12,o),
(660,-12,qs)
);
},
{
closed = 1;
nodes = (
(629,77,o),
(589,123,o),
(589,166,qs),
(589,209,o),
(629,256,o),
(660,256,qs),
(691,256,o),
(731,209,o),
(731,166,qs),
(731,123,o),
(691,77,o),
(660,77,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 5 10 1 3 6 5 3 105 0 6 0 8 9 6 8 106 0 4 4 0 97 2 1 0 0 33 77 13 1 9 9 1 97 12 7 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
11 1 5 10 1 3 6 5 3 105 0 6 0 8 9 6 8 106 0 0 0 33 77 0 4 4 2 97 0 2 2 39 77 0 1 1 34 77 13 1 9 9 7 97 12 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
56 56 36 36 24 24 4 4 56 67 56 66 62 60 36 55 36 54 46 44 24 35 24 34 30 28 4 23 4 22 41 17 16 14 8 25
CALL[ ]	/* CallFunction */";
};
width = 872;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(273,0,l),
(672,700,l),
(561,700,l),
(162,0,l)
);
},
{
closed = 1;
nodes = (
(256,362,o),
(293,384,qs),
(332,405,o),
(376,484,o),
(376,537,qs),
(376,589,o),
(354,630,qs),
(331,669,o),
(256,712,o),
(209,712,qs),
(162,712,o),
(123,691,qs),
(84,669,o),
(40,590,o),
(40,537,qs),
(40,485,o),
(62,444,qs),
(85,405,o),
(161,362,o),
(208,362,qs)
);
},
{
closed = 1;
nodes = (
(175,443,o),
(131,492,o),
(131,537,qs),
(131,582,o),
(175,632,o),
(208,632,qs),
(242,632,o),
(285,582,o),
(285,537,qs),
(285,492,o),
(241,443,o),
(208,443,qs)
);
},
{
closed = 1;
nodes = (
(680,-12,o),
(717,10,qs),
(755,31,o),
(799,110,o),
(799,163,qs),
(799,215,o),
(777,256,qs),
(754,295,o),
(679,337,o),
(632,337,qs),
(585,337,o),
(546,316,qs),
(507,294,o),
(463,215,o),
(463,163,qs),
(463,110,o),
(486,70,qs),
(509,31,o),
(585,-12,o),
(631,-12,qs)
);
},
{
closed = 1;
nodes = (
(598,69,o),
(554,118,o),
(554,163,qs),
(554,208,o),
(598,257,o),
(631,257,qs),
(665,257,o),
(708,208,o),
(708,163,qs),
(708,118,o),
(665,69,o),
(631,69,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 5 10 1 3 6 5 3 105 0 6 0 8 9 6 8 106 0 4 4 0 97 2 1 0 0 33 77 13 1 9 9 1 97 12 7 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
11 1 5 10 1 3 6 5 3 105 0 6 0 8 9 6 8 106 0 0 0 33 77 0 4 4 2 97 0 2 2 39 77 0 1 1 34 77 13 1 9 9 7 97 12 1 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
56 56 36 36 24 24 4 4 56 67 56 66 62 60 36 55 36 54 46 44 24 35 24 34 30 28 4 23 4 22 41 17 16 14 8 25
CALL[ ]	/* CallFunction */";
};
width = 839;
}
);
note = percent;
unicode = 37;
},
{
glyphname = perthousand;
kernLeft = percent;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(261,0,l),
(662,700,l),
(557,700,l),
(156,0,l)
);
},
{
closed = 1;
nodes = (
(253,366,o),
(290,387,qs),
(328,409,o),
(372,487,o),
(372,539,qs),
(372,593,o),
(350,631,qs),
(328,670,o),
(254,712,o),
(207,712,qs),
(161,712,o),
(123,691,qs),
(84,670,o),
(40,591,o),
(40,539,qs),
(40,488,o),
(62,447,qs),
(84,408,o),
(159,366,o),
(206,366,qs)
);
},
{
closed = 1;
nodes = (
(171,441,o),
(125,493,o),
(125,539,qs),
(125,586,o),
(172,637,o),
(207,637,qs),
(241,637,o),
(287,586,o),
(287,539,qs),
(287,493,o),
(241,441,o),
(206,441,qs)
);
},
{
closed = 1;
nodes = (
(665,-12,o),
(702,10,qs),
(740,31,o),
(783,109,o),
(783,161,qs),
(783,213,o),
(761,254,qs),
(738,292,o),
(664,334,o),
(618,334,qs),
(571,334,o),
(533,313,qs),
(495,291,o),
(451,213,o),
(451,161,qs),
(451,110,o),
(473,69,qs),
(496,31,o),
(571,-12,o),
(617,-12,qs)
);
},
{
closed = 1;
nodes = (
(582,64,o),
(536,115,o),
(536,161,qs),
(536,208,o),
(583,260,o),
(617,260,qs),
(652,260,o),
(698,208,o),
(698,161,qs),
(698,115,o),
(652,64,o),
(617,64,qs)
);
},
{
closed = 1;
nodes = (
(1026,-12,o),
(1064,10,qs),
(1102,31,o),
(1145,109,o),
(1145,161,qs),
(1145,216,o),
(1123,254,qs),
(1101,292,o),
(1027,334,o),
(980,334,qs),
(934,334,o),
(896,313,qs),
(857,292,o),
(813,213,o),
(813,161,qs),
(813,107,o),
(835,69,qs),
(858,31,o),
(933,-12,o),
(979,-12,qs)
);
},
{
closed = 1;
nodes = (
(944,64,o),
(898,115,o),
(898,161,qs),
(898,208,o),
(944,260,o),
(979,260,qs),
(1014,260,o),
(1060,208,o),
(1060,161,qs),
(1060,115,o),
(1014,64,o),
(979,64,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
15 1 5 14 1 3 6 5 3 105 10 1 6 12 1 8 9 6 8 106 0 4 4 0 97 2 1 0 0 33 77 19 13 17 3 9 9 1 97 18 11 16 7 4 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
15 1 5 14 1 3 6 5 3 105 10 1 6 12 1 8 9 6 8 106 0 0 0 33 77 0 4 4 2 97 0 2 2 39 77 0 1 1 34 77 19 13 17 3 9 9 7 97 18 11 16 3 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 52 values pushed */
88 88 68 68 56 56 36 36 24 24 4 4 88 99 88 98 94 92 68 87 68 86 78 76 56 67 56 66 62 60 36 55 36 54 46 44 24 35 24 34 30 28 4 23 4 22 41 17 16 20 8 25
CALL[ ]	/* CallFunction */";
};
width = 1185;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(222,0,l),
(629,700,l),
(545,700,l),
(138,0,l)
);
},
{
closed = 1;
nodes = (
(245,375,o),
(281,396,qs),
(318,417,o),
(360,492,o),
(360,543,qs),
(360,596,o),
(339,633,qs),
(318,670,o),
(246,711,o),
(201,711,qs),
(157,711,o),
(120,691,qs),
(82,669,o),
(40,594,o),
(40,543,qs),
(40,492,o),
(61,454,qs),
(82,416,o),
(155,375,o),
(200,375,qs)
);
},
{
closed = 1;
nodes = (
(162,438,o),
(110,493,o),
(110,543,qs),
(110,594,o),
(163,649,o),
(201,649,qs),
(239,649,o),
(290,594,o),
(290,543,qs),
(290,494,o),
(238,438,o),
(200,438,qs)
);
},
{
closed = 1;
nodes = (
(619,-12,o),
(655,9,qs),
(692,30,o),
(733,105,o),
(733,156,qs),
(733,209,o),
(712,246,qs),
(691,283,o),
(619,324,o),
(574,324,qs),
(530,324,o),
(493,304,qs),
(456,282,o),
(414,206,o),
(414,156,qs),
(414,105,o),
(435,67,qs),
(456,29,o),
(529,-12,o),
(574,-12,qs)
);
},
{
closed = 1;
nodes = (
(535,51,o),
(483,107,o),
(483,156,qs),
(483,207,o),
(536,262,o),
(574,262,qs),
(612,262,o),
(664,207,o),
(664,156,qs),
(664,107,o),
(611,51,o),
(573,51,qs)
);
},
{
closed = 1;
nodes = (
(968,-12,o),
(1005,9,qs),
(1042,30,o),
(1083,105,o),
(1083,156,qs),
(1083,209,o),
(1062,246,qs),
(1041,283,o),
(969,324,o),
(924,324,qs),
(880,324,o),
(843,304,qs),
(805,282,o),
(763,207,o),
(763,156,qs),
(763,104,o),
(785,67,qs),
(806,29,o),
(878,-12,o),
(923,-12,qs)
);
},
{
closed = 1;
nodes = (
(885,51,o),
(833,106,o),
(833,156,qs),
(833,207,o),
(886,262,o),
(924,262,qs),
(962,262,o),
(1013,207,o),
(1013,156,qs),
(1013,106,o),
(961,51,o),
(923,51,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
15 1 5 14 1 3 6 5 3 105 10 1 6 12 1 8 9 6 8 106 0 4 4 0 97 2 1 0 0 33 77 19 13 17 3 9 9 1 97 18 11 16 7 4 1 1 34 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
15 1 5 14 1 3 6 5 3 105 10 1 6 12 1 8 9 6 8 106 0 4 4 0 97 2 1 0 0 33 77 0 1 1 34 77 19 13 17 3 9 9 7 97 18 11 16 3 7 7 40 7 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
15 1 5 14 1 3 6 5 3 105 10 1 6 12 1 8 9 6 8 106 0 0 0 33 77 0 4 4 2 97 0 2 2 39 77 0 1 1 34 77 19 13 17 3 9 9 7 97 18 11 16 3 7 7 40 7 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 52 values pushed */
88 88 68 68 56 56 36 36 24 24 4 4 88 99 88 98 94 92 68 87 68 86 78 76 56 67 56 66 62 60 36 55 36 54 46 44 24 35 24 34 30 28 4 23 4 22 41 17 16 20 8 25
CALL[ ]	/* CallFunction */";
};
width = 1123;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(299,0,l),
(694,700,l),
(569,700,l),
(174,0,l)
);
},
{
closed = 1;
nodes = (
(261,356,o),
(299,378,qs),
(339,399,o),
(384,480,o),
(384,534,qs),
(384,588,o),
(361,629,qs),
(338,669,o),
(261,712,o),
(213,712,qs),
(164,712,o),
(125,691,qs),
(85,669,o),
(40,588,o),
(40,534,qs),
(40,480,o),
(63,439,qs),
(86,399,o),
(164,356,o),
(212,356,qs)
);
},
{
closed = 1;
nodes = (
(180,444,o),
(140,491,o),
(140,534,qs),
(140,577,o),
(181,625,o),
(212,625,qs),
(243,625,o),
(283,577,o),
(283,534,qs),
(283,491,o),
(243,444,o),
(212,444,qs)
);
},
{
closed = 1;
nodes = (
(710,-12,o),
(748,10,qs),
(787,31,o),
(832,112,o),
(832,166,qs),
(832,220,o),
(809,261,qs),
(786,300,o),
(709,343,o),
(661,343,qs),
(612,343,o),
(573,322,qs),
(533,300,o),
(488,220,o),
(488,166,qs),
(488,112,o),
(511,71,qs),
(534,31,o),
(612,-12,o),
(660,-12,qs)
);
},
{
closed = 1;
nodes = (
(629,76,o),
(588,123,o),
(588,166,qs),
(588,209,o),
(629,257,o),
(660,257,qs),
(691,257,o),
(732,209,o),
(732,166,qs),
(732,123,o),
(691,76,o),
(660,76,qs)
);
},
{
closed = 1;
nodes = (
(1084,-12,o),
(1122,10,qs),
(1161,31,o),
(1206,112,o),
(1206,166,qs),
(1206,221,o),
(1184,261,qs),
(1162,300,o),
(1083,343,o),
(1035,343,qs),
(987,343,o),
(948,322,qs),
(907,300,o),
(862,220,o),
(862,166,qs),
(862,112,o),
(885,71,qs),
(908,31,o),
(986,-12,o),
(1034,-12,qs)
);
},
{
closed = 1;
nodes = (
(1003,76,o),
(963,123,o),
(963,166,qs),
(963,209,o),
(1003,257,o),
(1034,257,qs),
(1065,257,o),
(1106,209,o),
(1106,166,qs),
(1106,123,o),
(1065,76,o),
(1034,76,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
15 1 5 14 1 3 6 5 3 105 10 1 6 12 1 8 9 6 8 106 0 4 4 0 97 2 1 0 0 33 77 19 13 17 3 9 9 1 97 18 11 16 7 4 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
15 1 5 14 1 3 6 5 3 105 10 1 6 12 1 8 9 6 8 106 0 0 0 33 77 0 4 4 2 97 0 2 2 39 77 0 1 1 34 77 19 13 17 3 9 9 7 97 18 11 16 3 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 52 values pushed */
88 88 68 68 56 56 36 36 24 24 4 4 88 99 88 98 94 92 68 87 68 86 78 76 56 67 56 66 62 60 36 55 36 54 46 44 24 35 24 34 30 28 4 23 4 22 41 17 16 20 8 25
CALL[ ]	/* CallFunction */";
};
width = 1246;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(273,0,l),
(672,700,l),
(561,700,l),
(162,0,l)
);
},
{
closed = 1;
nodes = (
(256,362,o),
(293,384,qs),
(332,405,o),
(376,484,o),
(376,537,qs),
(376,589,o),
(354,630,qs),
(331,669,o),
(256,712,o),
(209,712,qs),
(162,712,o),
(123,691,qs),
(84,669,o),
(40,590,o),
(40,537,qs),
(40,485,o),
(62,444,qs),
(85,405,o),
(161,362,o),
(208,362,qs)
);
},
{
closed = 1;
nodes = (
(174,442,o),
(130,492,o),
(130,537,qs),
(130,583,o),
(175,633,o),
(208,633,qs),
(242,633,o),
(285,583,o),
(285,537,qs),
(285,492,o),
(241,442,o),
(208,442,qs)
);
},
{
closed = 1;
nodes = (
(680,-12,o),
(717,10,qs),
(755,31,o),
(799,110,o),
(799,163,qs),
(799,215,o),
(777,256,qs),
(754,295,o),
(679,337,o),
(632,337,qs),
(585,337,o),
(546,316,qs),
(507,294,o),
(463,215,o),
(463,163,qs),
(463,110,o),
(486,70,qs),
(509,31,o),
(585,-12,o),
(631,-12,qs)
);
},
{
closed = 1;
nodes = (
(598,68,o),
(553,118,o),
(553,163,qs),
(553,208,o),
(598,259,o),
(631,259,qs),
(665,259,o),
(709,209,o),
(709,163,qs),
(709,118,o),
(665,68,o),
(631,68,qs)
);
},
{
closed = 1;
nodes = (
(1045,-12,o),
(1083,10,qs),
(1121,31,o),
(1165,110,o),
(1165,163,qs),
(1165,218,o),
(1143,256,qs),
(1121,294,o),
(1045,337,o),
(998,337,qs),
(951,337,o),
(913,316,qs),
(873,294,o),
(829,215,o),
(829,163,qs),
(829,110,o),
(852,70,qs),
(875,31,o),
(950,-12,o),
(997,-12,qs)
);
},
{
closed = 1;
nodes = (
(963,68,o),
(920,117,o),
(920,163,qs),
(920,208,o),
(964,259,o),
(997,259,qs),
(1031,259,o),
(1075,209,o),
(1075,163,qs),
(1075,118,o),
(1031,68,o),
(997,68,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
15 1 5 14 1 3 6 5 3 105 10 1 6 12 1 8 9 6 8 106 0 4 4 0 97 2 1 0 0 33 77 19 13 17 3 9 9 1 97 18 11 16 7 4 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
15 1 5 14 1 3 6 5 3 105 10 1 6 12 1 8 9 6 8 106 0 0 0 33 77 0 4 4 2 97 0 2 2 39 77 0 1 1 34 77 19 13 17 3 9 9 7 97 18 11 16 3 7 7 40 7 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 52 values pushed */
88 88 68 68 56 56 36 36 24 24 4 4 88 99 88 98 94 92 68 87 68 86 78 76 56 67 56 66 62 60 36 55 36 54 46 44 24 35 24 34 30 28 4 23 4 22 41 17 16 20 8 25
CALL[ ]	/* CallFunction */";
};
width = 1205;
}
);
note = perthousand;
unicode = 8240;
},
{
glyphname = plus.case;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(341,116,l),
(341,299,l),
(530,299,l),
(530,388,l),
(341,388,l),
(341,570,l),
(249,570,l),
(249,388,l),
(60,388,l),
(60,299,l),
(249,299,l),
(249,116,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 2 1 5 2 87 3 1 1 4 1 0 5 1 0 103 0 2 2 5 95 0 5 2 5 79 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 590;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(329,125,l),
(329,308,l),
(520,308,l),
(520,379,l),
(329,379,l),
(329,561,l),
(254,561,l),
(254,379,l),
(63,379,l),
(63,308,l),
(254,308,l),
(254,125,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 2 1 5 2 87 3 1 1 4 1 0 5 1 0 103 0 2 2 5 95 0 5 2 5 79 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 583;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(353,106,l),
(353,289,l),
(540,289,l),
(540,396,l),
(353,396,l),
(353,579,l),
(244,579,l),
(244,396,l),
(56,396,l),
(56,289,l),
(244,289,l),
(244,106,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 2 1 5 2 87 3 1 1 4 1 0 5 1 0 103 0 2 2 5 95 0 5 2 5 79 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 597;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(345,112,l),
(345,295,l),
(533,295,l),
(533,390,l),
(345,390,l),
(345,573,l),
(247,573,l),
(247,390,l),
(58,390,l),
(58,295,l),
(247,295,l),
(247,112,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 2 1 5 2 87 3 1 1 4 1 0 5 1 0 103 0 2 2 5 95 0 5 2 5 79 17 17 17 17 17 16 6 8 28
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = plus.case;
},
{
glyphname = arrowup;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(301,0,l),
(301,549,l),
(339,504,l),
(422,420,l),
(484,483,l),
(255,712,l),
(26,483,l),
(88,420,l),
(171,504,l),
(209,549,l),
(209,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
8 6 5 4 3 2 0 7 0 74 0 0 0 34 0 78 25 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 509;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(294,-1,l),
(294,573,l),
(333,527,l),
(430,428,l),
(484,483,l),
(255,712,l),
(26,483,l),
(80,428,l),
(177,527,l),
(216,573,l),
(216,-1,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
8 6 5 4 3 2 0 7 0 74 0 0 0 34 0 78 25 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 509;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(307,0,l),
(307,524,l),
(345,480,l),
(413,412,l),
(484,483,l),
(255,712,l),
(25,483,l),
(96,412,l),
(164,480,l),
(202,524,l),
(202,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
8 6 5 4 3 2 0 7 0 74 0 0 0 34 0 78 25 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 509;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(303,0,l),
(303,540,l),
(341,496,l),
(419,417,l),
(484,483,l),
(255,712,l),
(25,483,l),
(91,417,l),
(168,496,l),
(207,540,l),
(207,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
8 6 5 4 3 2 0 7 0 74 0 0 0 34 0 78 25 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 509;
}
);
note = arrowup;
unicode = 8593;
},
{
glyphname = arrowright;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(777,350,l),
(548,580,l),
(485,517,l),
(569,435,l),
(614,396,l),
(64,396,l),
(64,305,l),
(614,305,l),
(569,266,l),
(485,184,l),
(548,121,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
9 1 0 1 1 76 8 7 2 1 74 10 1 0 73 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 17 18 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 821;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(777,350,l),
(548,579,l),
(493,525,l),
(592,428,l),
(638,389,l),
(64,389,l),
(64,311,l),
(638,311,l),
(592,272,l),
(493,175,l),
(548,121,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
9 1 0 1 1 76 8 7 2 1 74 10 1 0 73 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 17 18 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 821;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(777,350,l),
(548,580,l),
(477,509,l),
(545,441,l),
(589,403,l),
(64,403,l),
(64,298,l),
(589,298,l),
(545,259,l),
(477,192,l),
(548,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
9 1 0 1 1 76 8 7 2 1 74 10 1 0 73 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 17 18 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 821;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(777,350,l),
(548,580,l),
(482,514,l),
(561,437,l),
(605,398,l),
(64,398,l),
(64,302,l),
(605,302,l),
(561,263,l),
(482,186,l),
(548,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
9 1 0 1 1 76 8 7 2 1 74 10 1 0 73 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 17 18 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 821;
}
);
note = arrowright;
unicode = 8594;
},
{
glyphname = arrowdown;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(484,217,l),
(421,280,l),
(339,197,l),
(300,152,l),
(300,700,l),
(209,700,l),
(209,152,l),
(170,197,l),
(88,280,l),
(25,217,l),
(254,-12,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
10 9 8 6 3 1 6 0 73 0 0 0 33 0 78 20 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 509;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(483,217,l),
(429,272,l),
(332,173,l),
(293,127,l),
(293,700,l),
(215,700,l),
(215,127,l),
(176,173,l),
(79,272,l),
(25,217,l),
(254,-12,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
10 9 8 6 3 1 6 0 73 0 0 0 33 0 78 20 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 509;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(484,217,l),
(413,288,l),
(345,220,l),
(307,176,l),
(307,700,l),
(202,700,l),
(202,176,l),
(164,220,l),
(96,288,l),
(25,217,l),
(254,-12,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
10 9 8 6 3 1 6 0 73 0 0 0 33 0 78 20 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 509;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(484,217,l),
(418,283,l),
(341,204,l),
(302,160,l),
(302,700,l),
(206,700,l),
(206,160,l),
(168,204,l),
(90,283,l),
(25,217,l),
(254,-12,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
10 9 8 6 3 1 6 0 73 0 0 0 33 0 78 20 1 8 23
CALL[ ]	/* CallFunction */";
};
width = 509;
}
);
note = arrowdown;
unicode = 8595;
},
{
glyphname = arrowleft;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(336,184,l),
(253,266,l),
(208,305,l),
(757,305,l),
(757,396,l),
(208,396,l),
(253,435,l),
(336,517,l),
(273,580,l),
(44,350,l),
(273,121,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
2 1 2 0 74 10 9 2 1 73 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 20 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 821;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(328,175,l),
(229,272,l),
(183,311,l),
(757,311,l),
(757,389,l),
(183,389,l),
(229,428,l),
(328,525,l),
(273,579,l),
(44,350,l),
(273,121,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
2 1 2 0 74 10 9 2 1 73 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 20 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 821;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(344,192,l),
(276,259,l),
(232,298,l),
(757,298,l),
(757,403,l),
(232,403,l),
(276,441,l),
(344,509,l),
(273,580,l),
(44,350,l),
(273,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
2 1 2 0 74 10 9 2 1 73 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 20 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 821;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(339,186,l),
(260,263,l),
(216,302,l),
(757,302,l),
(757,398,l),
(216,398,l),
(260,437,l),
(339,514,l),
(273,580,l),
(44,350,l),
(273,120,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
2 1 2 0 74 10 9 2 1 73 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 20 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 821;
}
);
note = arrowleft;
unicode = 8592;
},
{
glyphname = lozenge;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(524,351,l),
(279,596,l),
(33,351,l),
(278,105,l)
);
},
{
closed = 1;
nodes = (
(143,351,l),
(279,488,l),
(415,351,l),
(278,213,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 5 3 1 2 50
CALL[ ]	/* CallFunction */";
};
width = 556;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(516,350,l),
(277,589,l),
(37,350,l),
(276,110,l)
);
},
{
closed = 1;
nodes = (
(127,350,l),
(277,501,l),
(427,350,l),
(276,198,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 5 3 1 2 50
CALL[ ]	/* CallFunction */";
};
width = 553;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(531,351,l),
(280,602,l),
(29,351,l),
(280,100,l)
);
},
{
closed = 1;
nodes = (
(158,351,l),
(280,474,l),
(402,351,l),
(280,228,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 5 3 1 2 50
CALL[ ]	/* CallFunction */";
};
width = 559;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(526,351,l),
(279,598,l),
(32,351,l),
(279,103,l)
);
},
{
closed = 1;
nodes = (
(148,351,l),
(279,483,l),
(410,351,l),
(279,218,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 5 3 1 2 50
CALL[ ]	/* CallFunction */";
};
width = 557;
}
);
note = lozenge;
unicode = 9674;
},
{
glyphname = uni0308;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (171,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(100,583,o),
(141,624,o),
(141,654,qs),
(141,683,o),
(100,723,o),
(71,723,qs),
(41,723,o),
(0,683,o),
(0,654,qs),
(0,624,o),
(41,583,o),
(71,583,qs)
);
},
{
closed = 1;
nodes = (
(300,583,o),
(341,624,o),
(341,654,qs),
(341,683,o),
(300,723,o),
(270,723,qs),
(240,723,o),
(200,683,o),
(200,654,qs),
(200,624,o),
(240,583,o),
(270,583,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (147,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(82,606,o),
(116,639,o),
(116,664,qs),
(116,688,o),
(82,720,o),
(58,720,qs),
(33,720,o),
(0,688,o),
(0,664,qs),
(0,639,o),
(33,606,o),
(58,606,qs)
);
},
{
closed = 1;
nodes = (
(259,606,o),
(293,639,o),
(293,664,qs),
(293,688,o),
(259,720,o),
(235,720,qs),
(210,720,o),
(177,688,o),
(177,664,qs),
(177,639,o),
(210,606,o),
(235,606,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (194,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(118,560,o),
(166,608,o),
(166,643,qs),
(166,678,o),
(118,726,o),
(83,726,qs),
(48,726,o),
(0,678,o),
(0,643,qs),
(0,608,o),
(48,560,o),
(83,560,qs)
);
},
{
closed = 1;
nodes = (
(340,560,o),
(388,608,o),
(388,643,qs),
(388,678,o),
(340,726,o),
(305,726,qs),
(270,726,o),
(222,678,o),
(222,643,qs),
(222,608,o),
(270,560,o),
(305,560,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (178,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(106,575,o),
(149,618,o),
(149,650,qs),
(149,682,o),
(107,724,o),
(75,724,qs),
(43,724,o),
(0,682,o),
(0,650,qs),
(0,618,o),
(43,575,o),
(75,575,qs)
);
},
{
closed = 1;
nodes = (
(313,575,o),
(356,618,o),
(356,650,qs),
(356,682,o),
(314,724,o),
(282,724,qs),
(250,724,o),
(207,682,o),
(207,650,qs),
(207,618,o),
(250,575,o),
(282,575,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0308;
unicode = 776;
},
{
glyphname = uni0307;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (71,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(100,583,o),
(141,624,o),
(141,654,qs),
(141,683,o),
(100,723,o),
(71,723,qs),
(41,723,o),
(0,683,o),
(0,654,qs),
(0,624,o),
(41,583,o),
(71,583,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (58,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(82,606,o),
(116,639,o),
(116,664,qs),
(116,688,o),
(82,720,o),
(58,720,qs),
(33,720,o),
(0,688,o),
(0,664,qs),
(0,639,o),
(33,606,o),
(58,606,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (83,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(118,560,o),
(166,608,o),
(166,643,qs),
(166,678,o),
(118,726,o),
(83,726,qs),
(48,726,o),
(0,678,o),
(0,643,qs),
(0,608,o),
(48,560,o),
(83,560,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (75,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(106,575,o),
(149,618,o),
(149,650,qs),
(149,682,o),
(107,724,o),
(75,724,qs),
(43,724,o),
(0,682,o),
(0,650,qs),
(0,618,o),
(43,575,o),
(75,575,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0307;
unicode = 775;
},
{
glyphname = gravecomb;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (109,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,625,l),
(0,749,l),
(0,661,l),
(218,548,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (105,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(210,620,l),
(0,747,l),
(0,674,l),
(210,557,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (113,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(226,629,l),
(0,751,l),
(0,647,l),
(226,539,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (110,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(221,626,l),
(0,750,l),
(0,656,l),
(221,545,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = gravecomb;
unicode = 768;
},
{
glyphname = acutecomb;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (109,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,659,l),
(218,749,l),
(0,625,l),
(0,546,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (105,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(210,670,l),
(210,747,l),
(0,620,l),
(0,553,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (113,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(226,647,l),
(226,751,l),
(0,629,l),
(0,539,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (110,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(221,655,l),
(221,750,l),
(0,626,l),
(0,544,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = acutecomb;
unicode = 769;
},
{
glyphname = uni030B;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (132,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(226,547,l),
(324,711,l),
(235,711,l),
(158,547,l)
);
},
{
closed = 1;
nodes = (
(69,547,l),
(157,711,l),
(69,711,l),
(0,547,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 0 133 3 1 1 1 118 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (116,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(202,549,l),
(291,698,l),
(218,698,l),
(146,549,l)
);
},
{
closed = 1;
nodes = (
(57,549,l),
(139,698,l),
(66,698,l),
(0,549,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 0 133 3 1 1 1 118 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (148,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(250,544,l),
(356,723,l),
(251,723,l),
(170,544,l)
);
},
{
closed = 1;
nodes = (
(81,544,l),
(175,723,l),
(71,723,l),
(0,544,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (137,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(234,546,l),
(334,715,l),
(240,715,l),
(162,546,l)
);
},
{
closed = 1;
nodes = (
(73,546,l),
(163,715,l),
(69,715,l),
(0,546,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni030B;
unicode = 779;
},
{
glyphname = uni030C.alt;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _topright;
pos = (0,992);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(72,546,l),
(155,700,l),
(48,700,l),
(0,546,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _topright;
pos = (0,992);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(60,546,l),
(142,700,l),
(48,700,l),
(0,546,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _topright;
pos = (0,992);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(83,546,l),
(168,700,l),
(48,700,l),
(0,546,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _topright;
pos = (0,992);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(75,546,l),
(159,700,l),
(48,700,l),
(0,546,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030C.alt;
},
{
glyphname = uni0302;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (142,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,651,l),
(283,568,l),
(283,649,l),
(142,730,l),
(0,649,l),
(0,568,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (137,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(137,666,l),
(274,582,l),
(274,652,l),
(137,733,l),
(0,652,l),
(0,582,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (146,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(146,636,l),
(292,554,l),
(292,646,l),
(146,726,l),
(0,646,l),
(0,554,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (143,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(143,646,l),
(286,563,l),
(286,648,l),
(143,728,l),
(0,648,l),
(0,563,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0302;
unicode = 770;
},
{
glyphname = uni030C;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (142,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(283,651,l),
(283,730,l),
(142,645,l),
(0,730,l),
(0,651,l),
(142,570,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (137,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(274,668,l),
(274,733,l),
(137,649,l),
(0,733,l),
(0,668,l),
(137,586,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (146,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(292,634,l),
(292,726,l),
(146,641,l),
(0,726,l),
(0,634,l),
(146,554,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (143,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(286,645,l),
(286,728,l),
(143,644,l),
(0,728,l),
(0,645,l),
(143,565,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030C;
unicode = 780;
},
{
glyphname = uni0306;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (149,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,566,o),
(296,644,o),
(296,707,qs),
(296,722,l),
(237,722,l),
(237,647,o),
(148,647,qs),
(59,647,o),
(59,722,q),
(0,722,l),
(0,707,ls),
(0,644,o),
(79,566,o),
(148,566,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
2 1 0 1 0 133 0 1 3 3 1 89 0 1 1 3 97 4 1 3 1 3 81 0 0 0 13 0 12 17 33 19 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (141,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(206,588,o),
(281,661,o),
(281,718,qs),
(281,732,l),
(230,732,l),
(230,654,o),
(140,654,qs),
(50,654,o),
(50,732,q),
(0,732,l),
(0,718,ls),
(0,661,o),
(73,588,o),
(140,588,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
2 1 0 1 0 133 0 1 3 3 1 89 0 1 1 3 97 4 1 3 1 3 81 0 0 0 13 0 12 17 33 19 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (156,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(227,544,o),
(311,626,o),
(311,695,qs),
(311,712,l),
(243,712,l),
(243,677,o),
(202,640,o),
(155,640,qs),
(109,640,o),
(68,677,o),
(68,712,q),
(0,712,l),
(0,696,ls),
(0,626,o),
(83,544,o),
(155,544,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
2 1 0 1 0 133 0 1 3 3 1 89 0 1 1 3 97 4 1 3 1 3 81 0 0 0 15 0 14 18 34 19 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (151,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(220,559,o),
(301,638,o),
(301,703,qs),
(301,719,l),
(239,719,l),
(239,682,o),
(197,645,o),
(150,645,qs),
(103,645,o),
(62,682,o),
(62,719,q),
(0,719,l),
(0,703,ls),
(0,638,o),
(80,559,o),
(150,559,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
2 1 0 1 0 133 0 1 3 3 1 89 0 1 1 3 97 4 1 3 1 3 81 0 0 0 15 0 14 18 34 19 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0306;
unicode = 774;
},
{
glyphname = uni030A;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (110,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,551,o),
(219,610,o),
(219,659,qs),
(219,708,o),
(157,766,o),
(109,766,qs),
(63,766,o),
(0,707,o),
(0,659,qs),
(0,610,o),
(63,551,o),
(109,551,qs)
);
},
{
closed = 1;
nodes = (
(86,602,o),
(55,634,o),
(55,659,qs),
(55,684,o),
(86,715,o),
(109,715,qs),
(133,715,o),
(164,684,o),
(164,659,qs),
(164,634,o),
(133,602,o),
(109,602,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (105,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(150,557,o),
(210,613,o),
(210,660,qs),
(210,707,o),
(150,763,o),
(105,763,qs),
(61,763,o),
(0,707,o),
(0,660,qs),
(0,613,o),
(61,557,o),
(105,557,qs)
);
},
{
closed = 1;
nodes = (
(81,600,o),
(48,633,o),
(48,660,qs),
(48,687,o),
(81,719,o),
(105,719,qs),
(130,719,o),
(162,687,o),
(162,660,qs),
(162,633,o),
(129,600,o),
(105,600,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (114,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(162,545,o),
(228,606,o),
(228,657,qs),
(228,708,o),
(162,769,o),
(113,769,qs),
(66,769,o),
(0,707,o),
(0,657,qs),
(0,607,o),
(66,545,o),
(113,545,qs)
);
},
{
closed = 1;
nodes = (
(92,603,o),
(62,633,o),
(62,657,qs),
(62,681,o),
(91,711,o),
(113,711,qs),
(137,711,o),
(166,682,o),
(166,657,qs),
(166,633,o),
(136,603,o),
(113,603,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (111,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(158,549,o),
(222,609,o),
(222,658,qs),
(222,707,o),
(158,767,o),
(110,767,qs),
(64,767,o),
(0,707,o),
(0,658,qs),
(0,609,o),
(64,549,o),
(110,549,qs)
);
},
{
closed = 1;
nodes = (
(88,602,o),
(57,634,o),
(57,658,qs),
(57,683,o),
(88,714,o),
(110,714,qs),
(134,714,o),
(165,683,o),
(165,658,qs),
(165,633,o),
(134,602,o),
(110,602,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni030A;
unicode = 778;
},
{
glyphname = tildecomb;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (164,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(263,591,o),
(320,648,o),
(327,703,q),
(268,703,l),
(262,660,o),
(225,660,qs),
(210,660,o),
(186,671,o),
(171,681,qs),
(153,693,o),
(125,705,o),
(106,705,qs),
(63,705,o),
(8,649,o),
(0,592,q),
(59,592,l),
(65,635,o),
(101,635,qs),
(116,635,o),
(139,625,o),
(156,614,qs),
(174,603,o),
(201,591,o),
(220,591,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 23 0 22 17 36 34 17 36 7 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (151,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(245,602,o),
(296,655,o),
(302,703,q),
(253,703,l),
(248,662,o),
(210,662,qs),
(195,662,o),
(174,672,o),
(157,682,qs),
(141,693,o),
(114,705,o),
(95,705,qs),
(56,705,o),
(7,654,o),
(0,604,q),
(49,604,l),
(52,626,o),
(72,645,o),
(91,645,qs),
(106,645,o),
(127,636,o),
(144,625,qs),
(161,614,o),
(187,602,o),
(206,602,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 24 0 23 17 36 34 18 36 7 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (176,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(281,579,o),
(342,641,o),
(351,703,q),
(283,703,l),
(277,658,o),
(240,658,qs),
(225,658,o),
(202,669,o),
(184,680,qs),
(165,692,o),
(136,704,o),
(117,704,qs),
(70,704,o),
(10,642,o),
(0,580,q),
(68,580,l),
(76,625,o),
(111,625,qs),
(126,625,o),
(149,614,o),
(167,603,qs),
(186,591,o),
(215,579,o),
(234,579,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 23 0 22 17 36 34 17 36 7 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (168,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(269,587,o),
(327,646,o),
(335,703,q),
(273,703,l),
(267,659,o),
(230,659,qs),
(215,659,o),
(190,669,o),
(174,680,qs),
(158,691,o),
(129,704,o),
(110,704,qs),
(66,704,o),
(9,646,o),
(0,588,q),
(62,588,l),
(68,632,o),
(104,632,qs),
(120,632,o),
(144,621,o),
(159,611,qs),
(179,599,o),
(206,587,o),
(225,587,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 23 0 22 17 36 34 17 36 7 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = tildecomb;
unicode = 771;
},
{
glyphname = uni0304;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (176,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(351,616,l),
(351,693,l),
(0,693,l),
(0,616,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (174,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(347,632,l),
(347,695,l),
(0,695,l),
(0,632,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (177,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(354,599,l),
(354,690,l),
(0,690,l),
(0,599,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (176,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(352,610,l),
(352,692,l),
(0,692,l),
(0,610,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0304;
unicode = 772;
},
{
glyphname = uni0312;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (58,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,804,l),
(0,804,o),
(0,680,qs),
(0,642,o),
(12,595,q),
(110,595,l),
(110,684,l),
(60,684,l),
(60,698,ls),
(60,758,o),
(108,758,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
0 2 4 1 3 0 2 3 105 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 0 0 0 10 0 10 19 17 18 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (51,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(97,783,l),
(49,783,o),
(0,728,o),
(0,669,qs),
(0,636,o),
(9,595,q),
(95,595,l),
(95,672,l),
(50,672,l),
(50,686,ls),
(50,743,o),
(97,743,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
0 2 4 1 3 0 2 3 105 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 0 0 0 11 0 11 20 17 18 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (65,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(119,824,l),
(60,824,o),
(0,755,o),
(0,691,qs),
(0,643,o),
(15,595,q),
(124,595,l),
(124,695,l),
(69,695,l),
(69,710,ls),
(69,772,o),
(119,772,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
0 2 4 1 3 0 2 3 105 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 0 0 0 11 0 11 20 17 18 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (60,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(112,810,l),
(57,810,o),
(0,746,o),
(0,684,qs),
(0,641,o),
(13,595,q),
(114,595,l),
(114,687,l),
(63,687,l),
(63,702,ls),
(63,762,o),
(112,762,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
0 2 4 1 3 0 2 3 105 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 0 0 0 11 0 11 20 17 18 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0312;
unicode = 786;
},
{
glyphname = uni0326;
kernLeft = dotlessi;
kernRight = a;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _bottom;
pos = (56,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,-256,l),
(111,-256,o),
(111,-132,qs),
(111,-94,o),
(99,-47,q),
(1,-47,l),
(1,-136,l),
(51,-136,l),
(51,-150,ls),
(51,-210,o),
(3,-210,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 0 3 1 0 103 4 1 3 2 2 3 89 4 1 3 3 2 97 0 2 3 2 81 0 0 0 10 0 10 19 17 18 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (49,0);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(0,-238,l),
(48,-238,o),
(97,-183,o),
(97,-124,qs),
(97,-91,o),
(88,-50,q),
(2,-50,l),
(2,-127,l),
(47,-127,l),
(47,-141,ls),
(47,-198,o),
(0,-198,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 0 3 1 0 103 4 1 3 2 2 3 89 4 1 3 3 2 97 0 2 3 2 81 0 0 0 11 0 11 20 17 18 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (62,0);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(5,-274,l),
(64,-274,o),
(124,-205,o),
(124,-141,qs),
(124,-93,o),
(109,-45,q),
(0,-45,l),
(0,-145,l),
(55,-145,l),
(55,-160,ls),
(55,-222,o),
(5,-222,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 0 3 1 0 103 4 1 3 2 2 3 89 4 1 3 3 2 97 0 2 3 2 81 0 0 0 11 0 11 20 17 18 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (58,0);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(3,-262,l),
(115,-262,o),
(115,-135,qs),
(115,-93,o),
(102,-47,q),
(1,-47,l),
(1,-139,l),
(52,-139,l),
(52,-154,ls),
(52,-214,o),
(3,-214,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 0 3 1 0 103 4 1 3 2 2 3 89 4 1 3 3 2 97 0 2 3 2 81 0 0 0 10 0 10 19 17 18 5 8 25
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0326;
unicode = 806;
},
{
glyphname = uni0327;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _bottom;
pos = (84,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,-261,ls),
(174,-261,o),
(245,-206,o),
(245,-157,qs),
(245,-107,o),
(172,-55,o),
(115,-56,q),
(115,17,l),
(47,17,l),
(47,-115,l),
(102,-115,ls),
(163,-115,o),
(163,-155,qs),
(163,-197,o),
(102,-197,qs),
(0,-197,l),
(0,-261,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 3 2 112 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 3 2 133 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 17 34 32 5 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (74,0);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(107,-259,ls),
(161,-259,o),
(228,-205,o),
(228,-159,qs),
(228,-112,o),
(158,-62,o),
(99,-63,q),
(99,17,l),
(43,17,l),
(43,-113,l),
(92,-113,ls),
(160,-113,o),
(160,-158,qs),
(160,-206,o),
(92,-206,qs),
(0,-206,l),
(0,-259,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 3 2 112 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 3 2 133 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 17 34 32 5 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (94,0);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(131,-263,ls),
(186,-263,o),
(261,-207,o),
(261,-155,qs),
(261,-103,o),
(187,-48,o),
(131,-50,q),
(131,17,l),
(51,17,l),
(51,-118,l),
(112,-118,ls),
(165,-118,o),
(165,-153,qs),
(165,-189,o),
(112,-189,qs),
(0,-189,l),
(0,-263,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 2 1 2 3 114 0 2 0 1 0 2 1 105 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 2 1 2 3 1 128 0 2 0 1 0 2 1 105 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 17 34 32 5 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (87,0);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(123,-262,ls),
(178,-262,o),
(250,-206,o),
(250,-156,qs),
(250,-106,o),
(177,-53,o),
(120,-54,q),
(120,17,l),
(48,17,l),
(48,-116,l),
(105,-116,ls),
(163,-116,o),
(163,-155,qs),
(163,-195,o),
(105,-195,qs),
(0,-195,l),
(0,-262,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 3 2 112 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 3 2 133 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 17 34 32 5 8 27
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0327;
unicode = 807;
},
{
glyphname = uni0328;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _ogonek;
pos = (203,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,-206,o),
(207,-193,q),
(207,-127,l),
(170,-142,o),
(139,-142,qs),
(113,-142,o),
(83,-118,o),
(83,-97,qs),
(83,-78,o),
(113,-44,o),
(148,-27,qs),
(203,0,l),
(178,52,l),
(128,30,ls),
(59,0,o),
(0,-67,o),
(0,-107,qs),
(0,-156,o),
(72,-206,o),
(126,-206,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
17 1 1 0 1 76 16 7 6 3 0 74 0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 19 0 18 45 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _ogonek;
pos = (190,0);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(157,-203,o),
(193,-190,q),
(193,-134,l),
(159,-149,o),
(128,-149,qs),
(101,-149,o),
(68,-123,o),
(68,-100,qs),
(68,-59,o),
(132,-28,qs),
(190,0,l),
(169,43,l),
(116,20,ls),
(54,-7,o),
(0,-71,o),
(0,-108,qs),
(0,-155,o),
(68,-203,o),
(118,-203,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
16 1 1 0 1 76 15 7 6 3 0 74 0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 18 0 17 44 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _ogonek;
pos = (215,0);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(176,-210,o),
(220,-196,q),
(220,-120,l),
(181,-135,o),
(149,-135,qs),
(125,-135,o),
(97,-113,o),
(97,-94,qs),
(97,-76,o),
(128,-44,o),
(163,-26,qs),
(215,0,l),
(186,60,l),
(140,40,ls),
(64,7,o),
(0,-64,o),
(0,-106,qs),
(0,-157,o),
(75,-210,o),
(133,-210,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
17 1 1 0 1 76 16 7 6 3 0 74 0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 19 0 18 45 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _ogonek;
pos = (207,0);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(167,-208,o),
(211,-194,q),
(211,-125,l),
(174,-140,o),
(142,-140,qs),
(117,-140,o),
(87,-116,o),
(87,-96,qs),
(87,-77,o),
(118,-44,o),
(153,-27,qs),
(207,0,l),
(180,54,l),
(132,33,ls),
(60,2,o),
(0,-66,o),
(0,-107,qs),
(0,-157,o),
(72,-208,o),
(128,-208,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
17 1 1 0 1 76 16 7 6 3 0 74 0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 19 0 18 45 3 8 23
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0328;
unicode = 808;
},
{
glyphname = uni0308.case;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (171,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(100,772,o),
(141,812,o),
(141,842,qs),
(141,872,o),
(100,912,o),
(71,912,qs),
(41,912,o),
(0,872,o),
(0,842,qs),
(0,812,o),
(41,772,o),
(71,772,qs)
);
},
{
closed = 1;
nodes = (
(300,772,o),
(341,812,o),
(341,842,qs),
(341,872,o),
(300,912,o),
(270,912,qs),
(240,912,o),
(200,872,o),
(200,842,qs),
(200,812,o),
(240,772,o),
(270,772,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (147,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(82,775,o),
(116,808,o),
(116,833,qs),
(116,857,o),
(82,889,o),
(58,889,qs),
(33,889,o),
(0,857,o),
(0,833,qs),
(0,808,o),
(33,775,o),
(58,775,qs)
);
},
{
closed = 1;
nodes = (
(259,775,o),
(293,808,o),
(293,833,qs),
(293,857,o),
(259,889,o),
(235,889,qs),
(210,889,o),
(177,857,o),
(177,833,qs),
(177,808,o),
(210,775,o),
(235,775,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (194,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(118,768,o),
(166,816,o),
(166,851,qs),
(166,886,o),
(118,934,o),
(83,934,qs),
(48,934,o),
(0,886,o),
(0,851,qs),
(0,816,o),
(48,768,o),
(83,768,qs)
);
},
{
closed = 1;
nodes = (
(340,768,o),
(388,816,o),
(388,851,qs),
(388,886,o),
(340,934,o),
(305,934,qs),
(270,934,o),
(222,886,o),
(222,851,qs),
(222,816,o),
(270,768,o),
(305,768,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (178,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(106,770,o),
(149,813,o),
(149,845,qs),
(149,877,o),
(107,919,o),
(75,919,qs),
(43,919,o),
(0,877,o),
(0,845,qs),
(0,813,o),
(43,770,o),
(75,770,qs)
);
},
{
closed = 1;
nodes = (
(313,770,o),
(356,813,o),
(356,845,qs),
(356,877,o),
(314,919,o),
(282,919,qs),
(250,919,o),
(207,877,o),
(207,845,qs),
(207,813,o),
(250,770,o),
(282,770,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0308.case;
},
{
glyphname = uni0307.case;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (71,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(100,772,o),
(141,812,o),
(141,842,qs),
(141,872,o),
(100,912,o),
(71,912,qs),
(41,912,o),
(0,872,o),
(0,842,qs),
(0,812,o),
(41,772,o),
(71,772,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (58,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(82,775,o),
(116,808,o),
(116,833,qs),
(116,857,o),
(82,889,o),
(58,889,qs),
(33,889,o),
(0,857,o),
(0,833,qs),
(0,808,o),
(33,775,o),
(58,775,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (83,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(118,768,o),
(166,816,o),
(166,851,qs),
(166,886,o),
(118,934,o),
(83,934,qs),
(48,934,o),
(0,886,o),
(0,851,qs),
(0,816,o),
(48,768,o),
(83,768,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (75,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(106,770,o),
(149,813,o),
(149,845,qs),
(149,877,o),
(107,919,o),
(75,919,qs),
(43,919,o),
(0,877,o),
(0,845,qs),
(0,813,o),
(43,770,o),
(75,770,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0307.case;
},
{
glyphname = gravecomb.case;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (109,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,817,l),
(0,942,l),
(0,853,l),
(218,741,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (105,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(210,804,l),
(0,931,l),
(0,858,l),
(210,741,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (113,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(226,830,l),
(0,952,l),
(0,848,l),
(226,740,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (110,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(221,821,l),
(0,945,l),
(0,851,l),
(221,740,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = gravecomb.case;
},
{
glyphname = acutecomb.case;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (109,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,853,l),
(218,942,l),
(0,817,l),
(0,741,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (105,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(210,858,l),
(210,931,l),
(0,804,l),
(0,741,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (113,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(226,848,l),
(226,952,l),
(0,830,l),
(0,740,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (110,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(221,851,l),
(221,945,l),
(0,821,l),
(0,740,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = acutecomb.case;
},
{
glyphname = uni030B.case;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (162,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(226,751,l),
(324,915,l),
(235,915,l),
(158,751,l)
);
},
{
closed = 1;
nodes = (
(69,751,l),
(157,915,l),
(69,915,l),
(0,751,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 0 133 3 1 1 1 118 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (146,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(202,753,l),
(291,902,l),
(218,902,l),
(146,753,l)
);
},
{
closed = 1;
nodes = (
(57,753,l),
(139,902,l),
(66,902,l),
(0,753,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 0 133 3 1 1 1 118 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (178,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(250,748,l),
(356,927,l),
(251,927,l),
(170,748,l)
);
},
{
closed = 1;
nodes = (
(81,748,l),
(175,927,l),
(71,927,l),
(0,748,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (167,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(234,750,l),
(334,919,l),
(240,919,l),
(162,750,l)
);
},
{
closed = 1;
nodes = (
(73,750,l),
(163,919,l),
(69,919,l),
(0,750,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030B.case;
},
{
glyphname = uni030C.alt.case;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _topright;
pos = (2,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(72,546,l),
(155,700,l),
(48,700,l),
(0,546,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _topright;
pos = (4,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(60,546,l),
(142,700,l),
(48,700,l),
(0,546,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _topright;
pos = (0,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(83,546,l),
(168,700,l),
(48,700,l),
(0,546,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _topright;
pos = (1,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(75,546,l),
(159,700,l),
(48,700,l),
(0,546,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 33 1 78 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030C.alt.case;
},
{
glyphname = uni0302.case;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (142,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,834,l),
(283,751,l),
(283,830,l),
(142,911,l),
(0,830,l),
(0,751,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (137,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(137,839,l),
(274,755,l),
(274,821,l),
(137,902,l),
(0,821,l),
(0,755,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (146,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(146,829,l),
(292,747,l),
(292,839,l),
(146,919,l),
(0,839,l),
(0,747,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (143,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(143,832,l),
(286,750,l),
(286,833,l),
(143,913,l),
(0,833,l),
(0,750,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0302.case;
},
{
glyphname = uni030C.case;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (142,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(283,831,l),
(283,910,l),
(142,825,l),
(0,910,l),
(0,831,l),
(142,750,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (137,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(274,836,l),
(274,901,l),
(137,817,l),
(0,901,l),
(0,836,l),
(137,754,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (146,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(292,826,l),
(292,918,l),
(146,833,l),
(0,918,l),
(0,826,l),
(146,746,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (143,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(286,829,l),
(286,912,l),
(143,828,l),
(0,912,l),
(0,829,l),
(143,749,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 1 1 50
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030C.case;
},
{
glyphname = uni0306.case;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (149,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,753,o),
(296,831,o),
(296,894,qs),
(296,909,l),
(237,909,l),
(237,834,o),
(148,834,qs),
(59,834,o),
(59,909,q),
(0,909,l),
(0,894,ls),
(0,831,o),
(79,753,o),
(148,753,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
2 1 0 1 0 133 0 1 3 3 1 89 0 1 1 3 97 4 1 3 1 3 81 0 0 0 13 0 12 17 33 19 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (141,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(206,757,o),
(281,830,o),
(281,887,qs),
(281,901,l),
(230,901,l),
(230,823,o),
(140,823,qs),
(50,823,o),
(50,901,q),
(0,901,l),
(0,887,ls),
(0,830,o),
(73,757,o),
(140,757,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
2 1 0 1 0 133 0 1 3 3 1 89 0 1 1 3 97 4 1 3 1 3 81 0 0 0 13 0 12 17 33 19 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (156,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(227,749,o),
(311,831,o),
(311,900,qs),
(311,917,l),
(243,917,l),
(243,882,o),
(202,845,o),
(155,845,qs),
(109,845,o),
(68,882,o),
(68,917,q),
(0,917,l),
(0,901,ls),
(0,831,o),
(83,749,o),
(155,749,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
2 1 0 1 0 133 0 1 3 3 1 89 0 1 1 3 97 4 1 3 1 3 81 0 0 0 15 0 14 18 34 19 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (151,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(220,752,o),
(301,831,o),
(301,896,qs),
(301,912,l),
(239,912,l),
(239,875,o),
(197,838,o),
(150,838,qs),
(103,838,o),
(62,875,o),
(62,912,q),
(0,912,l),
(0,896,ls),
(0,831,o),
(80,752,o),
(150,752,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
2 1 0 1 0 133 0 1 3 3 1 89 0 1 1 3 97 4 1 3 1 3 81 0 0 0 15 0 14 18 34 19 5 8 25
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0306.case;
},
{
glyphname = uni030A.case;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (110,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,756,o),
(219,815,o),
(219,864,qs),
(219,913,o),
(157,971,o),
(109,971,qs),
(63,971,o),
(0,912,o),
(0,864,qs),
(0,815,o),
(63,756,o),
(109,756,qs)
);
},
{
closed = 1;
nodes = (
(86,807,o),
(55,839,o),
(55,864,qs),
(55,889,o),
(86,920,o),
(109,920,qs),
(133,920,o),
(164,889,o),
(164,864,qs),
(164,839,o),
(133,807,o),
(109,807,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (105,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(150,761,o),
(210,817,o),
(210,864,qs),
(210,911,o),
(150,967,o),
(105,967,qs),
(61,967,o),
(0,911,o),
(0,864,qs),
(0,817,o),
(61,761,o),
(105,761,qs)
);
},
{
closed = 1;
nodes = (
(81,804,o),
(48,837,o),
(48,864,qs),
(48,891,o),
(81,923,o),
(105,923,qs),
(130,923,o),
(162,891,o),
(162,864,qs),
(162,837,o),
(129,804,o),
(105,804,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (114,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(162,751,o),
(228,812,o),
(228,863,qs),
(228,914,o),
(162,975,o),
(113,975,qs),
(66,975,o),
(0,913,o),
(0,863,qs),
(0,813,o),
(66,751,o),
(113,751,qs)
);
},
{
closed = 1;
nodes = (
(92,809,o),
(62,839,o),
(62,863,qs),
(62,887,o),
(91,917,o),
(113,917,qs),
(137,917,o),
(166,888,o),
(166,863,qs),
(166,839,o),
(136,809,o),
(113,809,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (111,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(158,754,o),
(222,814,o),
(222,863,qs),
(222,913,o),
(158,972,o),
(110,972,qs),
(64,972,o),
(0,912,o),
(0,863,qs),
(0,814,o),
(64,754,o),
(110,754,qs)
);
},
{
closed = 1;
nodes = (
(88,807,o),
(57,839,o),
(57,863,qs),
(57,888,o),
(88,919,o),
(110,919,qs),
(134,919,o),
(165,888,o),
(165,863,qs),
(165,838,o),
(134,807,o),
(110,807,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 105 5 1 3 1 1 3 89 5 1 3 3 1 97 4 1 1 3 1 81 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030A.case;
},
{
glyphname = tildecomb.case;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (164,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(263,754,o),
(320,812,o),
(327,867,q),
(268,867,l),
(265,845,o),
(242,822,o),
(225,822,qs),
(210,822,o),
(186,833,o),
(171,843,qs),
(152,856,o),
(125,868,o),
(106,868,qs),
(63,868,o),
(8,812,o),
(0,756,q),
(59,756,l),
(65,801,o),
(101,801,qs),
(116,801,o),
(138,791,o),
(156,779,qs),
(174,767,o),
(201,754,o),
(220,754,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 24 0 23 18 36 34 17 36 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (151,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(245,756,o),
(296,809,o),
(302,857,q),
(253,857,l),
(250,835,o),
(227,812,o),
(210,812,qs),
(195,812,o),
(174,823,o),
(157,834,qs),
(141,846,o),
(114,859,o),
(95,859,qs),
(56,859,o),
(7,808,o),
(0,758,q),
(49,758,l),
(55,803,o),
(91,803,qs),
(106,803,o),
(127,793,o),
(144,781,qs),
(160,769,o),
(187,756,o),
(206,756,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 24 0 23 18 36 34 17 36 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (176,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(281,752,o),
(342,814,o),
(351,876,q),
(283,876,l),
(277,831,o),
(240,831,qs),
(225,831,o),
(202,842,o),
(184,853,qs),
(165,865,o),
(136,877,o),
(117,877,qs),
(70,877,o),
(10,815,o),
(0,753,q),
(68,753,l),
(76,798,o),
(111,798,qs),
(126,798,o),
(149,787,o),
(167,776,qs),
(186,764,o),
(215,752,o),
(234,752,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 23 0 22 17 36 34 17 36 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (168,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(269,753,o),
(327,812,o),
(335,870,q),
(273,870,l),
(270,848,o),
(247,825,o),
(230,825,qs),
(215,825,o),
(192,836,o),
(174,847,qs),
(158,858,o),
(129,871,o),
(110,871,qs),
(66,871,o),
(9,813,o),
(0,755,q),
(62,755,l),
(68,800,o),
(104,800,qs),
(119,800,o),
(143,789,o),
(159,778,qs),
(180,765,o),
(206,753,o),
(225,753,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 3 0 1 3 89 4 1 2 0 0 1 2 0 105 0 3 3 1 97 6 5 2 1 3 1 81 0 0 0 24 0 23 18 36 34 17 36 7 8 27
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = tildecomb.case;
},
{
glyphname = uni0304.case;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (176,700);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(351,790,l),
(351,867,l),
(0,867,l),
(0,790,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (174,700);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(347,796,l),
(347,859,l),
(0,859,l),
(0,796,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (177,700);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(354,783,l),
(354,874,l),
(0,874,l),
(0,783,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (176,700);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(352,787,l),
(352,869,l),
(0,869,l),
(0,787,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0304.case;
},
{
glyphname = uni0327.case;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _bottom;
pos = (82,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,-261,ls),
(174,-261,o),
(245,-206,o),
(245,-157,qs),
(245,-107,o),
(172,-55,o),
(115,-56,q),
(115,17,l),
(47,17,l),
(47,-115,l),
(102,-115,ls),
(163,-115,o),
(163,-155,qs),
(163,-197,o),
(102,-197,qs),
(0,-197,l),
(0,-261,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 3 2 112 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 3 2 133 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 17 34 32 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (72,0);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(107,-259,ls),
(161,-259,o),
(228,-205,o),
(228,-159,qs),
(228,-112,o),
(158,-62,o),
(99,-63,q),
(99,17,l),
(43,17,l),
(43,-113,l),
(92,-113,ls),
(160,-113,o),
(160,-158,qs),
(160,-206,o),
(92,-206,qs),
(0,-206,l),
(0,-259,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 3 2 112 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 3 2 133 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 17 34 32 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (92,0);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(131,-263,ls),
(186,-263,o),
(261,-207,o),
(261,-155,qs),
(261,-103,o),
(187,-48,o),
(131,-50,q),
(131,17,l),
(51,17,l),
(51,-118,l),
(112,-118,ls),
(165,-118,o),
(165,-153,qs),
(165,-189,o),
(112,-189,qs),
(0,-189,l),
(0,-263,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 2 1 2 3 114 0 2 0 1 0 2 1 105 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 2 1 2 3 1 128 0 2 0 1 0 2 1 105 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 17 34 32 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (85,0);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(123,-262,ls),
(178,-262,o),
(250,-206,o),
(250,-156,qs),
(250,-106,o),
(177,-53,o),
(120,-54,q),
(120,17,l),
(48,17,l),
(48,-116,l),
(105,-116,ls),
(163,-116,o),
(163,-155,qs),
(163,-195,o),
(105,-195,qs),
(0,-195,l),
(0,-262,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 3 2 112 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 3 2 133 0 3 0 1 0 3 1 106 0 0 4 4 0 87 0 0 0 4 95 0 4 0 4 79
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 17 17 34 32 5 8 27
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0327.case;
},
{
glyphname = uni0328.case;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _ogonek;
pos = (203,0);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,-206,o),
(207,-193,q),
(207,-127,l),
(170,-142,o),
(139,-142,qs),
(113,-142,o),
(83,-118,o),
(83,-97,qs),
(83,-78,o),
(113,-44,o),
(148,-27,qs),
(203,0,l),
(178,52,l),
(128,30,ls),
(59,0,o),
(0,-67,o),
(0,-107,qs),
(0,-156,o),
(72,-206,o),
(126,-206,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
17 1 1 0 1 76 16 7 6 3 0 74
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 1 97 2 1 1 1 38 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
0 0 0 19 0 18 45 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _ogonek;
pos = (190,0);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(157,-203,o),
(193,-190,q),
(193,-134,l),
(159,-149,o),
(128,-149,qs),
(101,-149,o),
(68,-123,o),
(68,-100,qs),
(68,-59,o),
(132,-28,qs),
(190,0,l),
(169,43,l),
(116,20,ls),
(54,-7,o),
(0,-71,o),
(0,-108,qs),
(0,-155,o),
(68,-203,o),
(118,-203,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
16 1 1 0 1 76 15 7 6 3 0 74
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 1 97 2 1 1 1 38 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
0 0 0 18 0 17 44 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _ogonek;
pos = (215,0);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(176,-210,o),
(220,-196,q),
(220,-120,l),
(181,-135,o),
(149,-135,qs),
(125,-135,o),
(97,-113,o),
(97,-94,qs),
(97,-76,o),
(128,-44,o),
(163,-26,qs),
(215,0,l),
(186,60,l),
(140,40,ls),
(64,7,o),
(0,-64,o),
(0,-106,qs),
(0,-157,o),
(75,-210,o),
(133,-210,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
17 1 1 0 1 76 16 7 6 3 0 74
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 1 97 2 1 1 1 38 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
0 0 0 19 0 18 45 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _ogonek;
pos = (207,0);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(167,-208,o),
(211,-194,q),
(211,-125,l),
(174,-140,o),
(142,-140,qs),
(117,-140,o),
(87,-116,o),
(87,-96,qs),
(87,-77,o),
(118,-44,o),
(153,-27,qs),
(207,0,l),
(180,54,l),
(132,33,ls),
(60,2,o),
(0,-66,o),
(0,-107,qs),
(0,-157,o),
(72,-208,o),
(128,-208,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
17 1 1 0 1 76 16 7 6 3 0 74
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 1 97 2 1 1 1 38 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
0 0 0 19 0 18 45 3 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0328.case;
},
{
glyphname = uni0308.narrow;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
anchors = (
{
name = _top;
pos = (171,496);
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,583,o),
(151,624,o),
(151,654,qs),
(151,683,o),
(110,723,o),
(81,723,qs),
(51,723,o),
(10,683,o),
(10,654,qs),
(10,624,o),
(51,583,o),
(81,583,qs)
);
},
{
closed = 1;
nodes = (
(290,583,o),
(331,624,o),
(331,654,qs),
(331,683,o),
(290,723,o),
(260,723,qs),
(230,723,o),
(190,683,o),
(190,654,qs),
(190,624,o),
(230,583,o),
(260,583,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
5 3 4 3 1 1 0 97 2 1 0 0 41 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
5 3 4 3 1 1 0 97 2 1 0 0 39 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (147,496);
}
);
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(92,606,o),
(126,639,o),
(126,664,qs),
(126,688,o),
(92,720,o),
(68,720,qs),
(43,720,o),
(10,688,o),
(10,664,qs),
(10,639,o),
(43,606,o),
(68,606,qs)
);
},
{
closed = 1;
nodes = (
(249,606,o),
(283,639,o),
(283,664,qs),
(283,688,o),
(249,720,o),
(225,720,qs),
(200,720,o),
(167,688,o),
(167,664,qs),
(167,639,o),
(200,606,o),
(225,606,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
5 3 4 3 1 1 0 97 2 1 0 0 41 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
5 3 4 3 1 1 0 97 2 1 0 0 39 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (194,496);
}
);
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(128,560,o),
(176,608,o),
(176,643,qs),
(176,678,o),
(128,726,o),
(93,726,qs),
(58,726,o),
(10,678,o),
(10,643,qs),
(10,608,o),
(58,560,o),
(93,560,qs)
);
},
{
closed = 1;
nodes = (
(330,560,o),
(378,608,o),
(378,643,qs),
(378,678,o),
(330,726,o),
(295,726,qs),
(260,726,o),
(212,678,o),
(212,643,qs),
(212,608,o),
(260,560,o),
(295,560,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
5 3 4 3 1 1 0 97 2 1 0 0 41 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
5 3 4 3 1 1 0 97 2 1 0 0 39 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (178,496);
}
);
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(116,575,o),
(159,618,o),
(159,650,qs),
(159,682,o),
(117,724,o),
(85,724,qs),
(53,724,o),
(10,682,o),
(10,650,qs),
(10,618,o),
(53,575,o),
(85,575,qs)
);
},
{
closed = 1;
nodes = (
(303,575,o),
(346,618,o),
(346,650,qs),
(346,682,o),
(304,724,o),
(272,724,qs),
(240,724,o),
(197,682,o),
(197,650,qs),
(197,618,o),
(240,575,o),
(272,575,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
5 3 4 3 1 1 0 97 2 1 0 0 41 1 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
5 3 4 3 1 1 0 97 2 1 0 0 39 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 5 3 4 3 1 0 1 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 8 23
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0308.narrow;
},
{
glyphname = dieresis;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-35,0);
ref = uni0308;
}
);
width = 250;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
pos = (-146,0);
ref = uni0308;
}
);
width = 0;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
pos = (77,0);
ref = uni0308;
}
);
width = 500;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
pos = (3,0);
ref = uni0308;
}
);
width = 333;
}
);
note = dieresis;
unicode = 168;
},
{
glyphname = dotaccent;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (57,0);
ref = uni0307;
}
);
width = 250;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
pos = (-58,0);
ref = uni0307;
}
);
width = 0;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
pos = (171,0);
ref = uni0307;
}
);
width = 500;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
pos = (95,0);
ref = uni0307;
}
);
width = 333;
}
);
note = dotaccent;
unicode = 729;
},
{
glyphname = grave;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (8,0);
ref = gravecomb;
}
);
width = 250;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
pos = (-105,0);
ref = gravecomb;
}
);
width = 0;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
pos = (121,0);
ref = gravecomb;
}
);
width = 500;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
pos = (46,0);
ref = gravecomb;
}
);
width = 333;
}
);
note = grave;
unicode = 96;
},
{
glyphname = acute;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (16,0);
ref = acutecomb;
}
);
width = 250;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
pos = (-105,0);
ref = acutecomb;
}
);
width = 0;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
pos = (137,0);
ref = acutecomb;
}
);
width = 500;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
pos = (56,0);
ref = acutecomb;
}
);
width = 333;
}
);
note = acute;
unicode = 180;
},
{
glyphname = hungarumlaut;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-37,0);
ref = uni030B;
}
);
width = 250;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
pos = (-145,0);
ref = uni030B;
}
);
width = 0;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
pos = (72,0);
ref = uni030B;
}
);
width = 500;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = uni030B;
}
);
width = 333;
}
);
note = hungarumlaut;
unicode = 733;
},
{
glyphname = circumflex;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-17,0);
ref = uni0302;
}
);
width = 250;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
pos = (-137,0);
ref = uni0302;
}
);
width = 0;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
pos = (104,0);
ref = uni0302;
}
);
width = 500;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
pos = (24,0);
ref = uni0302;
}
);
width = 333;
}
);
note = circumflex;
unicode = 710;
},
{
glyphname = caron;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-17,0);
ref = uni030C;
}
);
width = 250;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
pos = (-137,0);
ref = uni030C;
}
);
width = 0;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
pos = (104,0);
ref = uni030C;
}
);
width = 500;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
pos = (24,0);
ref = uni030C;
}
);
width = 333;
}
);
note = caron;
unicode = 711;
},
{
glyphname = breve;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-23,0);
ref = uni0306;
}
);
width = 250;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
pos = (-140,0);
ref = uni0306;
}
);
width = 0;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
pos = (95,0);
ref = uni0306;
}
);
width = 500;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
pos = (17,0);
ref = uni0306;
}
);
width = 333;
}
);
note = breve;
unicode = 728;
},
{
glyphname = ring;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (16,0);
ref = uni030A;
}
);
width = 250;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
pos = (-105,0);
ref = uni030A;
}
);
width = 0;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
pos = (136,0);
ref = uni030A;
}
);
width = 500;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
pos = (56,0);
ref = uni030A;
}
);
width = 333;
}
);
note = ring;
unicode = 730;
},
{
glyphname = tilde;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-38,0);
ref = tildecomb;
}
);
width = 250;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
pos = (-151,0);
ref = tildecomb;
}
);
width = 0;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
pos = (75,0);
ref = tildecomb;
}
);
width = 500;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
ref = tildecomb;
}
);
width = 333;
}
);
note = tilde;
unicode = 732;
},
{
glyphname = macron;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (-50,0);
ref = uni0304;
}
);
width = 250;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
pos = (-173,0);
ref = uni0304;
}
);
width = 0;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
pos = (73,0);
ref = uni0304;
}
);
width = 500;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
pos = (-9,0);
ref = uni0304;
}
);
width = 333;
}
);
note = macron;
unicode = 175;
},
{
glyphname = cedilla;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (3,0);
ref = uni0327;
}
);
width = 250;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
pos = (-114,0);
ref = uni0327;
}
);
width = 0;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
pos = (120,0);
ref = uni0327;
}
);
width = 500;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
pos = (42,0);
ref = uni0327;
}
);
width = 333;
}
);
note = cedilla;
unicode = 184;
},
{
glyphname = ogonek;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
alignment = -1;
pos = (22,0);
ref = uni0328;
}
);
width = 250;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
alignment = -1;
pos = (-96,0);
ref = uni0328;
}
);
width = 0;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
alignment = -1;
pos = (140,0);
ref = uni0328;
}
);
width = 500;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
alignment = -1;
pos = (61,0);
ref = uni0328;
}
);
width = 333;
}
);
note = ogonek;
unicode = 731;
},
{
glyphname = uni02BA;
kernLeft = uni02BA;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(268,552,l),
(278,755,l),
(183,755,l),
(195,552,l)
);
},
{
closed = 1;
nodes = (
(122,552,l),
(133,755,l),
(38,755,l),
(49,552,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 316;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(237,558,l),
(246,755,l),
(167,755,l),
(178,558,l)
);
},
{
closed = 1;
nodes = (
(106,558,l),
(116,755,l),
(37,755,l),
(48,558,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 284;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(298,546,l),
(309,755,l),
(199,755,l),
(211,546,l)
);
},
{
closed = 1;
nodes = (
(137,546,l),
(149,755,l),
(39,755,l),
(50,546,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 348;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(278,550,l),
(288,755,l),
(188,755,l),
(200,550,l)
);
},
{
closed = 1;
nodes = (
(127,550,l),
(138,755,l),
(38,755,l),
(49,550,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 17 17 17 16 4 8 26
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 327;
}
);
note = uni02BA;
unicode = 698;
},
{
glyphname = uni02B9;
kernLeft = uni02BA;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,552,l),
(136,755,l),
(38,755,l),
(51,552,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 173;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(108,558,l),
(120,755,l),
(37,755,l),
(50,558,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 157;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(138,546,l),
(151,755,l),
(39,755,l),
(51,546,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 189;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(128,550,l),
(141,755,l),
(38,755,l),
(51,550,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 17 16 2 8 24
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 178;
}
);
note = uni02B9;
unicode = 697;
},
{
glyphname = uniE000;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(214,0,l),
(214,214,l),
(419,0,l),
(565,0,l),
(321,260,l),
(550,511,l),
(406,511,l),
(214,309,l),
(214,700,l),
(100,700,l),
(100,0,l)
);
},
{
closed = 1;
nodes = (
(886,-12,o),
(1011,57,o),
(1082,179,o),
(1082,254,qs),
(1082,329,o),
(1011,452,o),
(886,523,o),
(808,523,qs),
(730,523,o),
(606,452,o),
(535,329,o),
(535,254,qs),
(535,179,o),
(606,57,o),
(730,-12,o),
(808,-12,qs)
);
},
{
closed = 1;
nodes = (
(759,95,o),
(688,137,o),
(649,210,o),
(649,254,qs),
(649,298,o),
(688,371,o),
(759,413,o),
(806,413,qs),
(853,413,o),
(925,371,o),
(965,298,o),
(965,254,qs),
(965,210,o),
(925,137,o),
(853,95,o),
(806,95,qs)
);
},
{
closed = 1;
nodes = (
(732,566,o),
(773,607,o),
(773,637,qs),
(773,667,o),
(733,707,o),
(702,707,qs),
(672,707,o),
(631,665,o),
(631,636,qs),
(631,607,o),
(672,566,o),
(702,566,qs)
);
},
{
closed = 1;
nodes = (
(943,566,o),
(984,607,o),
(984,637,qs),
(984,667,o),
(944,707,o),
(913,707,qs),
(883,707,o),
(842,665,o),
(842,636,qs),
(842,607,o),
(883,566,o),
(913,566,qs)
);
},
{
closed = 1;
nodes = (
(1262,0,l),
(1262,700,l),
(1152,700,l),
(1152,0,l)
);
},
{
closed = 1;
nodes = (
(1577,95,o),
(1505,140,o),
(1467,213,o),
(1467,254,qs),
(1467,297,o),
(1508,370,o),
(1580,413,o),
(1626,413,qs),
(1694,413,o),
(1782,323,o),
(1782,254,qs),
(1782,209,o),
(1742,136,o),
(1671,95,o),
(1626,95,qs)
);
},
{
closed = 1;
nodes = (
(1722,-12,o),
(1836,60,o),
(1898,182,o),
(1898,254,qs),
(1898,331,o),
(1832,454,o),
(1718,523,o),
(1647,523,qs),
(1590,523,o),
(1502,478,o),
(1467,431,q),
(1467,700,l),
(1357,700,l),
(1357,0,l),
(1467,0,l),
(1467,80,l),
(1502,33,o),
(1590,-12,o),
(1647,-12,qs)
);
},
{
closed = 1;
nodes = (
(2081,0,l),
(2081,511,l),
(1968,511,l),
(1968,0,l)
);
},
{
closed = 1;
nodes = (
(2054,566,o),
(2095,607,o),
(2095,637,qs),
(2095,667,o),
(2055,707,o),
(2024,707,qs),
(1994,707,o),
(1953,665,o),
(1953,636,qs),
(1953,607,o),
(1994,566,o),
(2024,566,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 171 values pushed */
93 1 6 1 8 5 2 3 7 6 88 1 2 7 3 76 17 12 2 0 8 9 8 0 9 128 20 1 1 4 6 4 1 6 128 21 16 13 3 4 2 7 5 7 2 5 128 22 10 2 8 30 23 27 11 26 5 9 4 8 9 105 18 1 4 14 1 6 7 4 6 105 28 15 25 3 7 2 5 7 89 28 15 25 3 7 7 5 97 29 19 24 3 5 7 5 81 109 109 86 86 71 71 55 55 43 43 27 27 11 11 109 120 109 119 115 113 108 107 106 105 86 104 86 103 97 95 92 91 90 89 71 85 71 84 78 76 70 69 68 67 55 66 55 65 61 59 43 54 43 53 49 47 27 42 27 41 35 33 11 26 11 25 39 18 18 18 16 31 6 27
CALL[ ]	/* CallFunction */";
};
width = 2195;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(214,0,l),
(214,214,l),
(419,0,l),
(565,0,l),
(321,260,l),
(550,511,l),
(406,511,l),
(214,309,l),
(214,700,l),
(100,700,l),
(100,0,l)
);
},
{
closed = 1;
nodes = (
(886,-12,o),
(1011,57,o),
(1082,179,o),
(1082,254,qs),
(1082,329,o),
(1011,452,o),
(886,523,o),
(808,523,qs),
(730,523,o),
(606,452,o),
(535,329,o),
(535,254,qs),
(535,179,o),
(606,57,o),
(730,-12,o),
(808,-12,qs)
);
},
{
closed = 1;
nodes = (
(759,95,o),
(688,137,o),
(649,210,o),
(649,254,qs),
(649,298,o),
(688,371,o),
(759,413,o),
(806,413,qs),
(853,413,o),
(925,371,o),
(965,298,o),
(965,254,qs),
(965,210,o),
(925,137,o),
(853,95,o),
(806,95,qs)
);
},
{
closed = 1;
nodes = (
(732,566,o),
(773,607,o),
(773,637,qs),
(773,667,o),
(733,707,o),
(702,707,qs),
(672,707,o),
(631,665,o),
(631,636,qs),
(631,607,o),
(672,566,o),
(702,566,qs)
);
},
{
closed = 1;
nodes = (
(943,566,o),
(984,607,o),
(984,637,qs),
(984,667,o),
(944,707,o),
(913,707,qs),
(883,707,o),
(842,665,o),
(842,636,qs),
(842,607,o),
(883,566,o),
(913,566,qs)
);
},
{
closed = 1;
nodes = (
(1262,0,l),
(1262,700,l),
(1152,700,l),
(1152,0,l)
);
},
{
closed = 1;
nodes = (
(1577,95,o),
(1505,140,o),
(1467,213,o),
(1467,254,qs),
(1467,297,o),
(1508,370,o),
(1580,413,o),
(1626,413,qs),
(1694,413,o),
(1782,323,o),
(1782,254,qs),
(1782,209,o),
(1742,136,o),
(1671,95,o),
(1626,95,qs)
);
},
{
closed = 1;
nodes = (
(1722,-12,o),
(1836,60,o),
(1898,182,o),
(1898,254,qs),
(1898,331,o),
(1832,454,o),
(1718,523,o),
(1647,523,qs),
(1590,523,o),
(1502,478,o),
(1467,431,q),
(1467,700,l),
(1357,700,l),
(1357,0,l),
(1467,0,l),
(1467,80,l),
(1502,33,o),
(1590,-12,o),
(1647,-12,qs)
);
},
{
closed = 1;
nodes = (
(2081,0,l),
(2081,511,l),
(1968,511,l),
(1968,0,l)
);
},
{
closed = 1;
nodes = (
(2054,566,o),
(2095,607,o),
(2095,637,qs),
(2095,667,o),
(2055,707,o),
(2024,707,qs),
(1994,707,o),
(1953,665,o),
(1953,636,qs),
(1953,607,o),
(1994,566,o),
(2024,566,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 171 values pushed */
93 1 6 1 8 5 2 3 7 6 88 1 2 7 3 76 17 12 2 0 8 9 8 0 9 128 20 1 1 4 6 4 1 6 128 21 16 13 3 4 2 7 5 7 2 5 128 22 10 2 8 30 23 27 11 26 5 9 4 8 9 105 18 1 4 14 1 6 7 4 6 105 28 15 25 3 7 2 5 7 89 28 15 25 3 7 7 5 97 29 19 24 3 5 7 5 81 109 109 86 86 71 71 55 55 43 43 27 27 11 11 109 120 109 119 115 113 108 107 106 105 86 104 86 103 97 95 92 91 90 89 71 85 71 84 78 76 70 69 68 67 55 66 55 65 61 59 43 54 43 53 49 47 27 42 27 41 35 33 11 26 11 25 39 18 18 18 16 31 6 27
CALL[ ]	/* CallFunction */";
};
width = 2195;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(214,0,l),
(214,214,l),
(419,0,l),
(565,0,l),
(321,260,l),
(550,511,l),
(406,511,l),
(214,309,l),
(214,700,l),
(100,700,l),
(100,0,l)
);
},
{
closed = 1;
nodes = (
(886,-12,o),
(1011,57,o),
(1082,179,o),
(1082,254,qs),
(1082,329,o),
(1011,452,o),
(886,523,o),
(808,523,qs),
(730,523,o),
(606,452,o),
(535,329,o),
(535,254,qs),
(535,179,o),
(606,57,o),
(730,-12,o),
(808,-12,qs)
);
},
{
closed = 1;
nodes = (
(759,95,o),
(688,137,o),
(649,210,o),
(649,254,qs),
(649,298,o),
(688,371,o),
(759,413,o),
(806,413,qs),
(853,413,o),
(925,371,o),
(965,298,o),
(965,254,qs),
(965,210,o),
(925,137,o),
(853,95,o),
(806,95,qs)
);
},
{
closed = 1;
nodes = (
(732,566,o),
(773,607,o),
(773,637,qs),
(773,667,o),
(733,707,o),
(702,707,qs),
(672,707,o),
(631,665,o),
(631,636,qs),
(631,607,o),
(672,566,o),
(702,566,qs)
);
},
{
closed = 1;
nodes = (
(943,566,o),
(984,607,o),
(984,637,qs),
(984,667,o),
(944,707,o),
(913,707,qs),
(883,707,o),
(842,665,o),
(842,636,qs),
(842,607,o),
(883,566,o),
(913,566,qs)
);
},
{
closed = 1;
nodes = (
(1262,0,l),
(1262,700,l),
(1152,700,l),
(1152,0,l)
);
},
{
closed = 1;
nodes = (
(1577,95,o),
(1505,140,o),
(1467,213,o),
(1467,254,qs),
(1467,297,o),
(1508,370,o),
(1580,413,o),
(1626,413,qs),
(1694,413,o),
(1782,323,o),
(1782,254,qs),
(1782,209,o),
(1742,136,o),
(1671,95,o),
(1626,95,qs)
);
},
{
closed = 1;
nodes = (
(1722,-12,o),
(1836,60,o),
(1898,182,o),
(1898,254,qs),
(1898,331,o),
(1832,454,o),
(1718,523,o),
(1647,523,qs),
(1590,523,o),
(1502,478,o),
(1467,431,q),
(1467,700,l),
(1357,700,l),
(1357,0,l),
(1467,0,l),
(1467,80,l),
(1502,33,o),
(1590,-12,o),
(1647,-12,qs)
);
},
{
closed = 1;
nodes = (
(2081,0,l),
(2081,511,l),
(1968,511,l),
(1968,0,l)
);
},
{
closed = 1;
nodes = (
(2054,566,o),
(2095,607,o),
(2095,637,qs),
(2095,667,o),
(2055,707,o),
(2024,707,qs),
(1994,707,o),
(1953,665,o),
(1953,636,qs),
(1953,607,o),
(1994,566,o),
(2024,566,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 171 values pushed */
93 1 6 1 8 5 2 3 7 6 88 1 2 7 3 76 17 12 2 0 8 9 8 0 9 128 20 1 1 4 6 4 1 6 128 21 16 13 3 4 2 7 5 7 2 5 128 22 10 2 8 30 23 27 11 26 5 9 4 8 9 105 18 1 4 14 1 6 7 4 6 105 28 15 25 3 7 2 5 7 89 28 15 25 3 7 7 5 97 29 19 24 3 5 7 5 81 109 109 86 86 71 71 55 55 43 43 27 27 11 11 109 120 109 119 115 113 108 107 106 105 86 104 86 103 97 95 92 91 90 89 71 85 71 84 78 76 70 69 68 67 55 66 55 65 61 59 43 54 43 53 49 47 27 42 27 41 35 33 11 26 11 25 39 18 18 18 16 31 6 27
CALL[ ]	/* CallFunction */";
};
width = 2195;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(214,0,l),
(214,214,l),
(419,0,l),
(565,0,l),
(321,260,l),
(550,511,l),
(406,511,l),
(214,309,l),
(214,700,l),
(100,700,l),
(100,0,l)
);
},
{
closed = 1;
nodes = (
(886,-12,o),
(1011,57,o),
(1082,179,o),
(1082,254,qs),
(1082,329,o),
(1011,452,o),
(886,523,o),
(808,523,qs),
(730,523,o),
(606,452,o),
(535,329,o),
(535,254,qs),
(535,179,o),
(606,57,o),
(730,-12,o),
(808,-12,qs)
);
},
{
closed = 1;
nodes = (
(759,95,o),
(688,137,o),
(649,210,o),
(649,254,qs),
(649,298,o),
(688,371,o),
(759,413,o),
(806,413,qs),
(853,413,o),
(925,371,o),
(965,298,o),
(965,254,qs),
(965,210,o),
(925,137,o),
(853,95,o),
(806,95,qs)
);
},
{
closed = 1;
nodes = (
(732,566,o),
(773,607,o),
(773,637,qs),
(773,667,o),
(733,707,o),
(702,707,qs),
(672,707,o),
(631,665,o),
(631,636,qs),
(631,607,o),
(672,566,o),
(702,566,qs)
);
},
{
closed = 1;
nodes = (
(943,566,o),
(984,607,o),
(984,637,qs),
(984,667,o),
(944,707,o),
(913,707,qs),
(883,707,o),
(842,665,o),
(842,636,qs),
(842,607,o),
(883,566,o),
(913,566,qs)
);
},
{
closed = 1;
nodes = (
(1262,0,l),
(1262,700,l),
(1152,700,l),
(1152,0,l)
);
},
{
closed = 1;
nodes = (
(1577,95,o),
(1505,140,o),
(1467,213,o),
(1467,254,qs),
(1467,297,o),
(1508,370,o),
(1580,413,o),
(1626,413,qs),
(1694,413,o),
(1782,323,o),
(1782,254,qs),
(1782,209,o),
(1742,136,o),
(1671,95,o),
(1626,95,qs)
);
},
{
closed = 1;
nodes = (
(1722,-12,o),
(1836,60,o),
(1898,182,o),
(1898,254,qs),
(1898,331,o),
(1832,454,o),
(1718,523,o),
(1647,523,qs),
(1590,523,o),
(1502,478,o),
(1467,431,q),
(1467,700,l),
(1357,700,l),
(1357,0,l),
(1467,0,l),
(1467,80,l),
(1502,33,o),
(1590,-12,o),
(1647,-12,qs)
);
},
{
closed = 1;
nodes = (
(2081,0,l),
(2081,511,l),
(1968,511,l),
(1968,0,l)
);
},
{
closed = 1;
nodes = (
(2054,566,o),
(2095,607,o),
(2095,637,qs),
(2095,667,o),
(2055,707,o),
(2024,707,qs),
(1994,707,o),
(1953,665,o),
(1953,636,qs),
(1953,607,o),
(1994,566,o),
(2024,566,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 171 values pushed */
93 1 6 1 8 5 2 3 7 6 88 1 2 7 3 76 17 12 2 0 8 9 8 0 9 128 20 1 1 4 6 4 1 6 128 21 16 13 3 4 2 7 5 7 2 5 128 22 10 2 8 30 23 27 11 26 5 9 4 8 9 105 18 1 4 14 1 6 7 4 6 105 28 15 25 3 7 2 5 7 89 28 15 25 3 7 7 5 97 29 19 24 3 5 7 5 81 109 109 86 86 71 71 55 55 43 43 27 27 11 11 109 120 109 119 115 113 108 107 106 105 86 104 86 103 97 95 92 91 90 89 71 85 71 84 78 76 70 69 68 67 55 66 55 65 61 59 43 54 43 53 49 47 27 42 27 41 35 33 11 26 11 25 39 18 18 18 16 31 6 27
CALL[ ]	/* CallFunction */";
};
width = 2195;
}
);
note = uniE000;
unicode = 57344;
},
{
glyphname = uniE001;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(211,225,l),
(233,173,o),
(306,118,o),
(353,118,qs),
(405,118,o),
(472,177,o),
(472,227,qs),
(472,278,o),
(404,339,o),
(349,339,qs),
(278,339,o),
(227,288,q),
(133,330,l),
(174,700,l),
(581,700,l),
(581,579,l),
(288,579,l),
(271,426,l),
(288,440,o),
(349,458,o),
(384,458,qs),
(456,458,o),
(561,400,o),
(617,296,o),
(617,229,qs),
(617,160,o),
(550,52,o),
(431,-8,o),
(355,-8,qs),
(266,-8,o),
(135,82,o),
(100,166,q)
);
},
{
closed = 1;
nodes = (
(936,-8,o),
(770,88,o),
(674,253,o),
(674,352,qs),
(674,449,o),
(764,614,o),
(928,711,o),
(1033,711,qs),
(1129,711,o),
(1290,620,o),
(1339,546,q),
(1229,468,l),
(1156,581,o),
(1033,581,qs),
(933,581,o),
(818,456,o),
(818,352,qs),
(818,283,o),
(876,177,o),
(975,120,o),
(1035,120,qs),
(1118,120,o),
(1220,203,o),
(1234,265,q),
(1021,265,l),
(1021,383,l),
(1373,383,l),
(1375,369,o),
(1375,328,qs),
(1375,238,o),
(1292,84,o),
(1137,-8,o),
(1035,-8,qs)
);
},
{
closed = 1;
nodes = (
(855,949,o),
(812,904,o),
(812,873,qs),
(812,843,o),
(855,798,o),
(888,798,qs),
(921,798,o),
(964,843,o),
(964,874,qs),
(964,904,o),
(921,949,o),
(888,949,qs)
);
},
{
closed = 1;
nodes = (
(1667,107,l),
(1714,157,o),
(1763,278,o),
(1763,342,qs),
(1763,405,o),
(1716,525,o),
(1670,575,q),
(1755,663,l),
(1818,597,o),
(1884,430,o),
(1884,342,qs),
(1884,254,o),
(1818,89,o),
(1755,23,q)
);
},
{
closed = 1;
nodes = (
(1839,-59,l),
(1919,23,o),
(2001,231,o),
(2001,342,qs),
(2001,453,o),
(1919,661,o),
(1839,742,q),
(1925,831,l),
(2023,731,o),
(2125,477,o),
(2125,342,qs),
(2125,208,o),
(2023,-47,o),
(1925,-148,q)
);
},
{
closed = 1;
nodes = (
(1088,949,o),
(1045,904,o),
(1045,873,qs),
(1045,843,o),
(1088,798,o),
(1121,798,qs),
(1154,798,o),
(1197,843,o),
(1197,874,qs),
(1197,904,o),
(1154,949,o),
(1121,949,qs)
);
},
{
closed = 1;
nodes = (
(1597,248,o),
(1652,303,o),
(1652,342,qs),
(1652,381,o),
(1597,436,o),
(1558,436,qs),
(1519,436,o),
(1464,381,o),
(1464,342,qs),
(1464,303,o),
(1519,248,o),
(1558,248,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
96 1 12 13 97 1 10 12 82 1 2 3 83 53 52 3 1 2 13 1 6 16 19 18 2 7 4 31 30 2 5 17 90 89 2 0 5 8 76 104 103 2 0 73
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
20 15 19 3 13 12 13 133 14 1 12 10 10 12 112 0 16 1 6 1 16 6 128 21 1 17 7 5 7 17 5 128 0 10 3 2 10 89 0 3 9 1 2 1 3 2 105 0 1 0 4 7 1 4 105 0 6 0 7 17 6 7 103 8 1 5 0 0 5 89 8 1 5 5 0 97 18 11 2 0 5 0 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 82 values pushed */
20 15 19 3 13 12 13 133 14 1 12 10 12 133 0 16 1 6 1 16 6 128 21 1 17 7 5 7 17 5 128 0 10 3 2 10 89 0 3 9 1 2 1 3 2 105 0 1 0 4 7 1 4 105 0 6 0 7 17 6 7 103 8 1 5 0 0 5 89 8 1 5 5 0 97 18 11 2 0 5 0 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
117 117 105 105 65 65 32 32 117 128 117 127 123 121 105 116 105 115 111 109 65 76 65 75 71 69 32 64 32 63 57 55 51 49 34 17 25 36 35 17 19 38 33 22 6 31
CALL[ ]	/* CallFunction */";
};
width = 2224;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(211,225,l),
(233,173,o),
(306,118,o),
(353,118,qs),
(405,118,o),
(472,177,o),
(472,227,qs),
(472,278,o),
(404,339,o),
(349,339,qs),
(278,339,o),
(227,288,q),
(133,330,l),
(174,700,l),
(581,700,l),
(581,579,l),
(288,579,l),
(271,426,l),
(288,440,o),
(349,458,o),
(384,458,qs),
(456,458,o),
(561,400,o),
(617,296,o),
(617,229,qs),
(617,160,o),
(550,52,o),
(431,-8,o),
(355,-8,qs),
(266,-8,o),
(135,82,o),
(100,166,q)
);
},
{
closed = 1;
nodes = (
(936,-8,o),
(770,88,o),
(674,253,o),
(674,352,qs),
(674,449,o),
(764,614,o),
(928,711,o),
(1033,711,qs),
(1129,711,o),
(1290,620,o),
(1339,546,q),
(1229,468,l),
(1156,581,o),
(1033,581,qs),
(933,581,o),
(818,456,o),
(818,352,qs),
(818,283,o),
(876,177,o),
(975,120,o),
(1035,120,qs),
(1118,120,o),
(1220,203,o),
(1234,265,q),
(1021,265,l),
(1021,383,l),
(1373,383,l),
(1375,369,o),
(1375,328,qs),
(1375,238,o),
(1292,84,o),
(1137,-8,o),
(1035,-8,qs)
);
},
{
closed = 1;
nodes = (
(855,949,o),
(812,904,o),
(812,873,qs),
(812,843,o),
(855,798,o),
(888,798,qs),
(921,798,o),
(964,843,o),
(964,874,qs),
(964,904,o),
(921,949,o),
(888,949,qs)
);
},
{
closed = 1;
nodes = (
(1667,107,l),
(1714,157,o),
(1763,278,o),
(1763,342,qs),
(1763,405,o),
(1716,525,o),
(1670,575,q),
(1755,663,l),
(1818,597,o),
(1884,430,o),
(1884,342,qs),
(1884,254,o),
(1818,89,o),
(1755,23,q)
);
},
{
closed = 1;
nodes = (
(1839,-59,l),
(1919,23,o),
(2001,231,o),
(2001,342,qs),
(2001,453,o),
(1919,661,o),
(1839,742,q),
(1925,831,l),
(2023,731,o),
(2125,477,o),
(2125,342,qs),
(2125,208,o),
(2023,-47,o),
(1925,-148,q)
);
},
{
closed = 1;
nodes = (
(1088,949,o),
(1045,904,o),
(1045,873,qs),
(1045,843,o),
(1088,798,o),
(1121,798,qs),
(1154,798,o),
(1197,843,o),
(1197,874,qs),
(1197,904,o),
(1154,949,o),
(1121,949,qs)
);
},
{
closed = 1;
nodes = (
(1597,248,o),
(1652,303,o),
(1652,342,qs),
(1652,381,o),
(1597,436,o),
(1558,436,qs),
(1519,436,o),
(1464,381,o),
(1464,342,qs),
(1464,303,o),
(1519,248,o),
(1558,248,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
96 1 12 13 97 1 10 12 82 1 2 3 83 53 52 3 1 2 13 1 6 16 19 18 2 7 4 31 30 2 5 17 90 89 2 0 5 8 76 104 103 2 0 73
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
20 15 19 3 13 12 13 133 14 1 12 10 10 12 112 0 16 1 6 1 16 6 128 21 1 17 7 5 7 17 5 128 0 10 3 2 10 89 0 3 9 1 2 1 3 2 105 0 1 0 4 7 1 4 105 0 6 0 7 17 6 7 103 8 1 5 0 0 5 89 8 1 5 5 0 97 18 11 2 0 5 0 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 82 values pushed */
20 15 19 3 13 12 13 133 14 1 12 10 12 133 0 16 1 6 1 16 6 128 21 1 17 7 5 7 17 5 128 0 10 3 2 10 89 0 3 9 1 2 1 3 2 105 0 1 0 4 7 1 4 105 0 6 0 7 17 6 7 103 8 1 5 0 0 5 89 8 1 5 5 0 97 18 11 2 0 5 0 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
117 117 105 105 65 65 32 32 117 128 117 127 123 121 105 116 105 115 111 109 65 76 65 75 71 69 32 64 32 63 57 55 51 49 34 17 25 36 35 17 19 38 33 22 6 31
CALL[ ]	/* CallFunction */";
};
width = 2224;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(211,225,l),
(233,173,o),
(306,118,o),
(353,118,qs),
(405,118,o),
(472,177,o),
(472,227,qs),
(472,278,o),
(404,339,o),
(349,339,qs),
(278,339,o),
(227,288,q),
(133,330,l),
(174,700,l),
(581,700,l),
(581,579,l),
(288,579,l),
(271,426,l),
(288,440,o),
(349,458,o),
(384,458,qs),
(456,458,o),
(561,400,o),
(617,296,o),
(617,229,qs),
(617,160,o),
(550,52,o),
(431,-8,o),
(355,-8,qs),
(266,-8,o),
(135,82,o),
(100,166,q)
);
},
{
closed = 1;
nodes = (
(936,-8,o),
(770,88,o),
(674,253,o),
(674,352,qs),
(674,449,o),
(764,614,o),
(928,711,o),
(1033,711,qs),
(1129,711,o),
(1290,620,o),
(1339,546,q),
(1229,468,l),
(1156,581,o),
(1033,581,qs),
(933,581,o),
(818,456,o),
(818,352,qs),
(818,283,o),
(876,177,o),
(975,120,o),
(1035,120,qs),
(1118,120,o),
(1220,203,o),
(1234,265,q),
(1021,265,l),
(1021,383,l),
(1373,383,l),
(1375,369,o),
(1375,328,qs),
(1375,238,o),
(1292,84,o),
(1137,-8,o),
(1035,-8,qs)
);
},
{
closed = 1;
nodes = (
(855,949,o),
(812,904,o),
(812,873,qs),
(812,843,o),
(855,798,o),
(888,798,qs),
(921,798,o),
(964,843,o),
(964,874,qs),
(964,904,o),
(921,949,o),
(888,949,qs)
);
},
{
closed = 1;
nodes = (
(1667,107,l),
(1714,157,o),
(1763,278,o),
(1763,342,qs),
(1763,405,o),
(1716,525,o),
(1670,575,q),
(1755,663,l),
(1818,597,o),
(1884,430,o),
(1884,342,qs),
(1884,254,o),
(1818,89,o),
(1755,23,q)
);
},
{
closed = 1;
nodes = (
(1839,-59,l),
(1919,23,o),
(2001,231,o),
(2001,342,qs),
(2001,453,o),
(1919,661,o),
(1839,742,q),
(1925,831,l),
(2023,731,o),
(2125,477,o),
(2125,342,qs),
(2125,208,o),
(2023,-47,o),
(1925,-148,q)
);
},
{
closed = 1;
nodes = (
(1088,949,o),
(1045,904,o),
(1045,873,qs),
(1045,843,o),
(1088,798,o),
(1121,798,qs),
(1154,798,o),
(1197,843,o),
(1197,874,qs),
(1197,904,o),
(1154,949,o),
(1121,949,qs)
);
},
{
closed = 1;
nodes = (
(1597,248,o),
(1652,303,o),
(1652,342,qs),
(1652,381,o),
(1597,436,o),
(1558,436,qs),
(1519,436,o),
(1464,381,o),
(1464,342,qs),
(1464,303,o),
(1519,248,o),
(1558,248,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
96 1 12 13 97 1 10 12 82 1 2 3 83 53 52 3 1 2 13 1 6 16 19 18 2 7 4 31 30 2 5 17 90 89 2 0 5 8 76 104 103 2 0 73
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
20 15 19 3 13 12 13 133 14 1 12 10 10 12 112 0 16 1 6 1 16 6 128 21 1 17 7 5 7 17 5 128 0 10 3 2 10 89 0 3 9 1 2 1 3 2 105 0 1 0 4 7 1 4 105 0 6 0 7 17 6 7 103 8 1 5 0 0 5 89 8 1 5 5 0 97 18 11 2 0 5 0 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 82 values pushed */
20 15 19 3 13 12 13 133 14 1 12 10 12 133 0 16 1 6 1 16 6 128 21 1 17 7 5 7 17 5 128 0 10 3 2 10 89 0 3 9 1 2 1 3 2 105 0 1 0 4 7 1 4 105 0 6 0 7 17 6 7 103 8 1 5 0 0 5 89 8 1 5 5 0 97 18 11 2 0 5 0 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
117 117 105 105 65 65 32 32 117 128 117 127 123 121 105 116 105 115 111 109 65 76 65 75 71 69 32 64 32 63 57 55 51 49 34 17 25 36 35 17 19 38 33 22 6 31
CALL[ ]	/* CallFunction */";
};
width = 2224;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(211,225,l),
(233,173,o),
(306,118,o),
(353,118,qs),
(405,118,o),
(472,177,o),
(472,227,qs),
(472,278,o),
(404,339,o),
(349,339,qs),
(278,339,o),
(227,288,q),
(133,330,l),
(174,700,l),
(581,700,l),
(581,579,l),
(288,579,l),
(271,426,l),
(288,440,o),
(349,458,o),
(384,458,qs),
(456,458,o),
(561,400,o),
(617,296,o),
(617,229,qs),
(617,160,o),
(550,52,o),
(431,-8,o),
(355,-8,qs),
(266,-8,o),
(135,82,o),
(100,166,q)
);
},
{
closed = 1;
nodes = (
(936,-8,o),
(770,88,o),
(674,253,o),
(674,352,qs),
(674,449,o),
(764,614,o),
(928,711,o),
(1033,711,qs),
(1129,711,o),
(1290,620,o),
(1339,546,q),
(1229,468,l),
(1156,581,o),
(1033,581,qs),
(933,581,o),
(818,456,o),
(818,352,qs),
(818,283,o),
(876,177,o),
(975,120,o),
(1035,120,qs),
(1118,120,o),
(1220,203,o),
(1234,265,q),
(1021,265,l),
(1021,383,l),
(1373,383,l),
(1375,369,o),
(1375,328,qs),
(1375,238,o),
(1292,84,o),
(1137,-8,o),
(1035,-8,qs)
);
},
{
closed = 1;
nodes = (
(855,949,o),
(812,904,o),
(812,873,qs),
(812,843,o),
(855,798,o),
(888,798,qs),
(921,798,o),
(964,843,o),
(964,874,qs),
(964,904,o),
(921,949,o),
(888,949,qs)
);
},
{
closed = 1;
nodes = (
(1667,107,l),
(1714,157,o),
(1763,278,o),
(1763,342,qs),
(1763,405,o),
(1716,525,o),
(1670,575,q),
(1755,663,l),
(1818,597,o),
(1884,430,o),
(1884,342,qs),
(1884,254,o),
(1818,89,o),
(1755,23,q)
);
},
{
closed = 1;
nodes = (
(1839,-59,l),
(1919,23,o),
(2001,231,o),
(2001,342,qs),
(2001,453,o),
(1919,661,o),
(1839,742,q),
(1925,831,l),
(2023,731,o),
(2125,477,o),
(2125,342,qs),
(2125,208,o),
(2023,-47,o),
(1925,-148,q)
);
},
{
closed = 1;
nodes = (
(1088,949,o),
(1045,904,o),
(1045,873,qs),
(1045,843,o),
(1088,798,o),
(1121,798,qs),
(1154,798,o),
(1197,843,o),
(1197,874,qs),
(1197,904,o),
(1154,949,o),
(1121,949,qs)
);
},
{
closed = 1;
nodes = (
(1597,248,o),
(1652,303,o),
(1652,342,qs),
(1652,381,o),
(1597,436,o),
(1558,436,qs),
(1519,436,o),
(1464,381,o),
(1464,342,qs),
(1464,303,o),
(1519,248,o),
(1558,248,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
96 1 12 13 97 1 10 12 82 1 2 3 83 53 52 3 1 2 13 1 6 16 19 18 2 7 4 31 30 2 5 17 90 89 2 0 5 8 76 104 103 2 0 73
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
20 15 19 3 13 12 13 133 14 1 12 10 10 12 112 0 16 1 6 1 16 6 128 21 1 17 7 5 7 17 5 128 0 10 3 2 10 89 0 3 9 1 2 1 3 2 105 0 1 0 4 7 1 4 105 0 6 0 7 17 6 7 103 8 1 5 0 0 5 89 8 1 5 5 0 97 18 11 2 0 5 0 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 82 values pushed */
20 15 19 3 13 12 13 133 14 1 12 10 12 133 0 16 1 6 1 16 6 128 21 1 17 7 5 7 17 5 128 0 10 3 2 10 89 0 3 9 1 2 1 3 2 105 0 1 0 4 7 1 4 105 0 6 0 7 17 6 7 103 8 1 5 0 0 5 89 8 1 5 5 0 97 18 11 2 0 5 0 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
117 117 105 105 65 65 32 32 117 128 117 127 123 121 105 116 105 115 111 109 65 76 65 75 71 69 32 64 32 63 57 55 51 49 34 17 25 36 35 17 19 38 33 22 6 31
CALL[ ]	/* CallFunction */";
};
width = 2224;
}
);
note = uniE001;
unicode = 57345;
},
{
glyphname = uniE002;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(546,48,o),
(552,48,qs),
(559,48,o),
(564,53,qs),
(741,229,ls),
(800,288,o),
(800,367,qs),
(800,386,ls),
(800,393,o),
(803,399,o),
(809,401,qs),
(857,418,o),
(919,499,o),
(919,550,qs),
(919,594,o),
(877,667,o),
(805,710,o),
(760,710,qs),
(707,710,o),
(630,653,o),
(610,603,qs),
(606,592,o),
(594,584,o),
(585,584,qs),
(520,584,ls),
(509,584,o),
(497,592,o),
(493,603,qs),
(473,653,o),
(396,710,o),
(343,710,qs),
(298,710,o),
(226,667,o),
(184,594,o),
(184,550,qs),
(184,499,o),
(246,418,o),
(294,401,qs),
(300,399,o),
(303,393,o),
(303,386,qs),
(303,367,ls),
(303,294,o),
(362,229,q),
(539,53,l)
);
},
{
closed = 1;
nodes = (
(515,0,ls),
(521,0,o),
(528,7,o),
(528,12,qs),
(528,17,o),
(524,21,qs),
(321,222,ls),
(285,258,o),
(232,258,qs),
(198,258,o),
(138,227,o),
(100,168,o),
(100,130,qs),
(100,97,o),
(133,37,o),
(193,0,o),
(232,0,qs)
);
},
{
closed = 1;
nodes = (
(294,435,o),
(224,505,o),
(224,554,qs),
(224,603,o),
(294,672,o),
(343,672,qs),
(392,672,o),
(461,603,o),
(461,554,qs),
(461,505,o),
(392,435,o),
(343,435,qs)
);
},
{
closed = 1;
nodes = (
(383,456,o),
(440,514,o),
(440,554,qs),
(440,594,o),
(383,651,o),
(343,651,qs),
(303,651,o),
(245,594,o),
(245,554,qs),
(245,514,o),
(303,456,o),
(343,456,qs)
);
},
{
closed = 1;
nodes = (
(314,484,o),
(273,525,o),
(273,554,qs),
(273,583,o),
(314,623,o),
(343,623,qs),
(357,623,o),
(373,616,q),
(365,614,o),
(355,600,o),
(355,592,qs),
(355,581,o),
(370,566,o),
(381,566,qs),
(389,566,o),
(403,576,o),
(405,584,q),
(412,568,o),
(412,554,qs),
(412,525,o),
(372,484,o),
(343,484,qs)
);
},
{
closed = 1;
nodes = (
(871,0,ls),
(910,0,o),
(970,37,o),
(1003,97,o),
(1003,130,qs),
(1003,168,o),
(965,227,o),
(905,258,o),
(871,258,qs),
(818,258,o),
(782,222,qs),
(579,21,ls),
(575,17,o),
(575,12,qs),
(575,7,o),
(582,0,o),
(588,0,qs)
);
},
{
closed = 1;
nodes = (
(712,435,o),
(642,505,o),
(642,554,qs),
(642,603,o),
(712,672,o),
(761,672,qs),
(810,672,o),
(879,603,o),
(879,554,qs),
(879,505,o),
(810,435,o),
(761,435,qs)
);
},
{
closed = 1;
nodes = (
(801,456,o),
(858,514,o),
(858,554,qs),
(858,594,o),
(801,651,o),
(761,651,qs),
(721,651,o),
(663,594,o),
(663,554,qs),
(663,514,o),
(721,456,o),
(761,456,qs)
);
},
{
closed = 1;
nodes = (
(732,484,o),
(691,525,o),
(691,554,qs),
(691,583,o),
(732,623,o),
(761,623,qs),
(775,623,o),
(791,616,q),
(783,614,o),
(773,600,o),
(773,592,qs),
(773,581,o),
(788,566,o),
(799,566,qs),
(807,566,o),
(821,576,o),
(823,584,q),
(830,568,o),
(830,554,qs),
(830,525,o),
(790,484,o),
(761,484,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
162 159 99 96 4 1 11 3 1 4 7 2 76 153 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 1 11 10 11 1 10 128 19 1 10 12 11 10 112 26 16 23 3 7 9 4 9 7 4 128 13 1 4 3 9 4 3 126 0 3 5 9 3 5 126 14 22 2 5 5 132 2 1 0 15 1 6 8 0 6 105 17 1 8 20 1 11 1 8 11 105 28 21 25 3 12 9 9 12 89 28 21 25 3 12 12 9 97 27 18 24 3 9 12 9 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 93 values pushed */
0 1 11 10 11 1 10 128 19 1 10 12 11 10 12 126 26 16 23 3 7 9 4 9 7 4 128 13 1 4 3 9 4 3 126 0 3 5 9 3 5 126 14 22 2 5 5 132 2 1 0 15 1 6 8 0 6 105 17 1 8 20 1 11 1 8 11 105 28 21 25 3 12 9 9 12 89 28 21 25 3 12 12 9 97 27 18 24 3 9 12 9 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 70 values pushed */
149 149 137 137 125 125 86 86 74 74 62 62 45 45 149 170 149 169 165 163 157 155 137 148 137 147 143 141 125 136 125 135 131 129 124 122 116 114 86 107 86 106 102 100 94 92 74 85 74 84 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 29 6 27
CALL[ ]	/* CallFunction */";
};
width = 1103;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(546,48,o),
(552,48,qs),
(559,48,o),
(564,53,qs),
(741,229,ls),
(800,288,o),
(800,367,qs),
(800,386,ls),
(800,393,o),
(803,399,o),
(809,401,qs),
(857,418,o),
(919,499,o),
(919,550,qs),
(919,594,o),
(877,667,o),
(805,710,o),
(760,710,qs),
(707,710,o),
(630,653,o),
(610,603,qs),
(606,592,o),
(594,584,o),
(585,584,qs),
(520,584,ls),
(509,584,o),
(497,592,o),
(493,603,qs),
(473,653,o),
(396,710,o),
(343,710,qs),
(298,710,o),
(226,667,o),
(184,594,o),
(184,550,qs),
(184,499,o),
(246,418,o),
(294,401,qs),
(300,399,o),
(303,393,o),
(303,386,qs),
(303,367,ls),
(303,294,o),
(362,229,q),
(539,53,l)
);
},
{
closed = 1;
nodes = (
(515,0,ls),
(521,0,o),
(528,7,o),
(528,12,qs),
(528,17,o),
(524,21,qs),
(321,222,ls),
(285,258,o),
(232,258,qs),
(198,258,o),
(138,227,o),
(100,168,o),
(100,130,qs),
(100,97,o),
(133,37,o),
(193,0,o),
(232,0,qs)
);
},
{
closed = 1;
nodes = (
(294,435,o),
(224,505,o),
(224,554,qs),
(224,603,o),
(294,672,o),
(343,672,qs),
(392,672,o),
(461,603,o),
(461,554,qs),
(461,505,o),
(392,435,o),
(343,435,qs)
);
},
{
closed = 1;
nodes = (
(383,456,o),
(440,514,o),
(440,554,qs),
(440,594,o),
(383,651,o),
(343,651,qs),
(303,651,o),
(245,594,o),
(245,554,qs),
(245,514,o),
(303,456,o),
(343,456,qs)
);
},
{
closed = 1;
nodes = (
(314,484,o),
(273,525,o),
(273,554,qs),
(273,583,o),
(314,623,o),
(343,623,qs),
(357,623,o),
(373,616,q),
(365,614,o),
(355,600,o),
(355,592,qs),
(355,581,o),
(370,566,o),
(381,566,qs),
(389,566,o),
(403,576,o),
(405,584,q),
(412,568,o),
(412,554,qs),
(412,525,o),
(372,484,o),
(343,484,qs)
);
},
{
closed = 1;
nodes = (
(871,0,ls),
(910,0,o),
(970,37,o),
(1003,97,o),
(1003,130,qs),
(1003,168,o),
(965,227,o),
(905,258,o),
(871,258,qs),
(818,258,o),
(782,222,qs),
(579,21,ls),
(575,17,o),
(575,12,qs),
(575,7,o),
(582,0,o),
(588,0,qs)
);
},
{
closed = 1;
nodes = (
(712,435,o),
(642,505,o),
(642,554,qs),
(642,603,o),
(712,672,o),
(761,672,qs),
(810,672,o),
(879,603,o),
(879,554,qs),
(879,505,o),
(810,435,o),
(761,435,qs)
);
},
{
closed = 1;
nodes = (
(801,456,o),
(858,514,o),
(858,554,qs),
(858,594,o),
(801,651,o),
(761,651,qs),
(721,651,o),
(663,594,o),
(663,554,qs),
(663,514,o),
(721,456,o),
(761,456,qs)
);
},
{
closed = 1;
nodes = (
(732,484,o),
(691,525,o),
(691,554,qs),
(691,583,o),
(732,623,o),
(761,623,qs),
(775,623,o),
(791,616,q),
(783,614,o),
(773,600,o),
(773,592,qs),
(773,581,o),
(788,566,o),
(799,566,qs),
(807,566,o),
(821,576,o),
(823,584,q),
(830,568,o),
(830,554,qs),
(830,525,o),
(790,484,o),
(761,484,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
162 159 99 96 4 1 11 3 1 4 7 2 76 153 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 1 11 10 11 1 10 128 19 1 10 12 11 10 112 26 16 23 3 7 9 4 9 7 4 128 13 1 4 3 9 4 3 126 0 3 5 9 3 5 126 14 22 2 5 5 132 2 1 0 15 1 6 8 0 6 105 17 1 8 20 1 11 1 8 11 105 28 21 25 3 12 9 9 12 89 28 21 25 3 12 12 9 97 27 18 24 3 9 12 9 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 93 values pushed */
0 1 11 10 11 1 10 128 19 1 10 12 11 10 12 126 26 16 23 3 7 9 4 9 7 4 128 13 1 4 3 9 4 3 126 0 3 5 9 3 5 126 14 22 2 5 5 132 2 1 0 15 1 6 8 0 6 105 17 1 8 20 1 11 1 8 11 105 28 21 25 3 12 9 9 12 89 28 21 25 3 12 12 9 97 27 18 24 3 9 12 9 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 70 values pushed */
149 149 137 137 125 125 86 86 74 74 62 62 45 45 149 170 149 169 165 163 157 155 137 148 137 147 143 141 125 136 125 135 131 129 124 122 116 114 86 107 86 106 102 100 94 92 74 85 74 84 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 29 6 27
CALL[ ]	/* CallFunction */";
};
width = 1103;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(546,48,o),
(552,48,qs),
(559,48,o),
(564,53,qs),
(741,229,ls),
(800,288,o),
(800,367,qs),
(800,386,ls),
(800,393,o),
(803,399,o),
(809,401,qs),
(857,418,o),
(919,499,o),
(919,550,qs),
(919,594,o),
(877,667,o),
(805,710,o),
(760,710,qs),
(707,710,o),
(630,653,o),
(610,603,qs),
(606,592,o),
(594,584,o),
(585,584,qs),
(520,584,ls),
(509,584,o),
(497,592,o),
(493,603,qs),
(473,653,o),
(396,710,o),
(343,710,qs),
(298,710,o),
(226,667,o),
(184,594,o),
(184,550,qs),
(184,499,o),
(246,418,o),
(294,401,qs),
(300,399,o),
(303,393,o),
(303,386,qs),
(303,367,ls),
(303,294,o),
(362,229,q),
(539,53,l)
);
},
{
closed = 1;
nodes = (
(515,0,ls),
(521,0,o),
(528,7,o),
(528,12,qs),
(528,17,o),
(524,21,qs),
(321,222,ls),
(285,258,o),
(232,258,qs),
(198,258,o),
(138,227,o),
(100,168,o),
(100,130,qs),
(100,97,o),
(133,37,o),
(193,0,o),
(232,0,qs)
);
},
{
closed = 1;
nodes = (
(294,435,o),
(224,505,o),
(224,554,qs),
(224,603,o),
(294,672,o),
(343,672,qs),
(392,672,o),
(461,603,o),
(461,554,qs),
(461,505,o),
(392,435,o),
(343,435,qs)
);
},
{
closed = 1;
nodes = (
(383,456,o),
(440,514,o),
(440,554,qs),
(440,594,o),
(383,651,o),
(343,651,qs),
(303,651,o),
(245,594,o),
(245,554,qs),
(245,514,o),
(303,456,o),
(343,456,qs)
);
},
{
closed = 1;
nodes = (
(314,484,o),
(273,525,o),
(273,554,qs),
(273,583,o),
(314,623,o),
(343,623,qs),
(357,623,o),
(373,616,q),
(365,614,o),
(355,600,o),
(355,592,qs),
(355,581,o),
(370,566,o),
(381,566,qs),
(389,566,o),
(403,576,o),
(405,584,q),
(412,568,o),
(412,554,qs),
(412,525,o),
(372,484,o),
(343,484,qs)
);
},
{
closed = 1;
nodes = (
(871,0,ls),
(910,0,o),
(970,37,o),
(1003,97,o),
(1003,130,qs),
(1003,168,o),
(965,227,o),
(905,258,o),
(871,258,qs),
(818,258,o),
(782,222,qs),
(579,21,ls),
(575,17,o),
(575,12,qs),
(575,7,o),
(582,0,o),
(588,0,qs)
);
},
{
closed = 1;
nodes = (
(712,435,o),
(642,505,o),
(642,554,qs),
(642,603,o),
(712,672,o),
(761,672,qs),
(810,672,o),
(879,603,o),
(879,554,qs),
(879,505,o),
(810,435,o),
(761,435,qs)
);
},
{
closed = 1;
nodes = (
(801,456,o),
(858,514,o),
(858,554,qs),
(858,594,o),
(801,651,o),
(761,651,qs),
(721,651,o),
(663,594,o),
(663,554,qs),
(663,514,o),
(721,456,o),
(761,456,qs)
);
},
{
closed = 1;
nodes = (
(732,484,o),
(691,525,o),
(691,554,qs),
(691,583,o),
(732,623,o),
(761,623,qs),
(775,623,o),
(791,616,q),
(783,614,o),
(773,600,o),
(773,592,qs),
(773,581,o),
(788,566,o),
(799,566,qs),
(807,566,o),
(821,576,o),
(823,584,q),
(830,568,o),
(830,554,qs),
(830,525,o),
(790,484,o),
(761,484,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
162 159 99 96 4 1 11 3 1 4 7 2 76 153 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 1 11 10 11 1 10 128 19 1 10 12 11 10 112 26 16 23 3 7 9 4 9 7 4 128 13 1 4 3 9 4 3 126 0 3 5 9 3 5 126 14 22 2 5 5 132 2 1 0 15 1 6 8 0 6 105 17 1 8 20 1 11 1 8 11 105 28 21 25 3 12 9 9 12 89 28 21 25 3 12 12 9 97 27 18 24 3 9 12 9 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 93 values pushed */
0 1 11 10 11 1 10 128 19 1 10 12 11 10 12 126 26 16 23 3 7 9 4 9 7 4 128 13 1 4 3 9 4 3 126 0 3 5 9 3 5 126 14 22 2 5 5 132 2 1 0 15 1 6 8 0 6 105 17 1 8 20 1 11 1 8 11 105 28 21 25 3 12 9 9 12 89 28 21 25 3 12 12 9 97 27 18 24 3 9 12 9 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 70 values pushed */
149 149 137 137 125 125 86 86 74 74 62 62 45 45 149 170 149 169 165 163 157 155 137 148 137 147 143 141 125 136 125 135 131 129 124 122 116 114 86 107 86 106 102 100 94 92 74 85 74 84 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 29 6 27
CALL[ ]	/* CallFunction */";
};
width = 1103;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(546,48,o),
(552,48,qs),
(559,48,o),
(564,53,qs),
(741,229,ls),
(800,288,o),
(800,367,qs),
(800,386,ls),
(800,393,o),
(803,399,o),
(809,401,qs),
(857,418,o),
(919,499,o),
(919,550,qs),
(919,594,o),
(877,667,o),
(805,710,o),
(760,710,qs),
(707,710,o),
(630,653,o),
(610,603,qs),
(606,592,o),
(594,584,o),
(585,584,qs),
(520,584,ls),
(509,584,o),
(497,592,o),
(493,603,qs),
(473,653,o),
(396,710,o),
(343,710,qs),
(298,710,o),
(226,667,o),
(184,594,o),
(184,550,qs),
(184,499,o),
(246,418,o),
(294,401,qs),
(300,399,o),
(303,393,o),
(303,386,qs),
(303,367,ls),
(303,294,o),
(362,229,q),
(539,53,l)
);
},
{
closed = 1;
nodes = (
(515,0,ls),
(521,0,o),
(528,7,o),
(528,12,qs),
(528,17,o),
(524,21,qs),
(321,222,ls),
(285,258,o),
(232,258,qs),
(198,258,o),
(138,227,o),
(100,168,o),
(100,130,qs),
(100,97,o),
(133,37,o),
(193,0,o),
(232,0,qs)
);
},
{
closed = 1;
nodes = (
(294,435,o),
(224,505,o),
(224,554,qs),
(224,603,o),
(294,672,o),
(343,672,qs),
(392,672,o),
(461,603,o),
(461,554,qs),
(461,505,o),
(392,435,o),
(343,435,qs)
);
},
{
closed = 1;
nodes = (
(383,456,o),
(440,514,o),
(440,554,qs),
(440,594,o),
(383,651,o),
(343,651,qs),
(303,651,o),
(245,594,o),
(245,554,qs),
(245,514,o),
(303,456,o),
(343,456,qs)
);
},
{
closed = 1;
nodes = (
(314,484,o),
(273,525,o),
(273,554,qs),
(273,583,o),
(314,623,o),
(343,623,qs),
(357,623,o),
(373,616,q),
(365,614,o),
(355,600,o),
(355,592,qs),
(355,581,o),
(370,566,o),
(381,566,qs),
(389,566,o),
(403,576,o),
(405,584,q),
(412,568,o),
(412,554,qs),
(412,525,o),
(372,484,o),
(343,484,qs)
);
},
{
closed = 1;
nodes = (
(871,0,ls),
(910,0,o),
(970,37,o),
(1003,97,o),
(1003,130,qs),
(1003,168,o),
(965,227,o),
(905,258,o),
(871,258,qs),
(818,258,o),
(782,222,qs),
(579,21,ls),
(575,17,o),
(575,12,qs),
(575,7,o),
(582,0,o),
(588,0,qs)
);
},
{
closed = 1;
nodes = (
(712,435,o),
(642,505,o),
(642,554,qs),
(642,603,o),
(712,672,o),
(761,672,qs),
(810,672,o),
(879,603,o),
(879,554,qs),
(879,505,o),
(810,435,o),
(761,435,qs)
);
},
{
closed = 1;
nodes = (
(801,456,o),
(858,514,o),
(858,554,qs),
(858,594,o),
(801,651,o),
(761,651,qs),
(721,651,o),
(663,594,o),
(663,554,qs),
(663,514,o),
(721,456,o),
(761,456,qs)
);
},
{
closed = 1;
nodes = (
(732,484,o),
(691,525,o),
(691,554,qs),
(691,583,o),
(732,623,o),
(761,623,qs),
(775,623,o),
(791,616,q),
(783,614,o),
(773,600,o),
(773,592,qs),
(773,581,o),
(788,566,o),
(799,566,qs),
(807,566,o),
(821,576,o),
(823,584,q),
(830,568,o),
(830,554,qs),
(830,525,o),
(790,484,o),
(761,484,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
162 159 99 96 4 1 11 3 1 4 7 2 76 153 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 92 values pushed */
0 1 11 10 11 1 10 128 19 1 10 12 11 10 112 26 16 23 3 7 9 4 9 7 4 128 13 1 4 3 9 4 3 126 0 3 5 9 3 5 126 14 22 2 5 5 132 2 1 0 15 1 6 8 0 6 105 17 1 8 20 1 11 1 8 11 105 28 21 25 3 12 9 9 12 89 28 21 25 3 12 12 9 97 27 18 24 3 9 12 9 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 93 values pushed */
0 1 11 10 11 1 10 128 19 1 10 12 11 10 12 126 26 16 23 3 7 9 4 9 7 4 128 13 1 4 3 9 4 3 126 0 3 5 9 3 5 126 14 22 2 5 5 132 2 1 0 15 1 6 8 0 6 105 17 1 8 20 1 11 1 8 11 105 28 21 25 3 12 9 9 12 89 28 21 25 3 12 12 9 97 27 18 24 3 9 12 9 81
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 70 values pushed */
149 149 137 137 125 125 86 86 74 74 62 62 45 45 149 170 149 169 165 163 157 155 137 148 137 147 143 141 125 136 125 135 131 129 124 122 116 114 86 107 86 106 102 100 94 92 74 85 74 84 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 29 6 27
CALL[ ]	/* CallFunction */";
};
width = 1103;
}
);
note = uniE002;
unicode = 57346;
},
{
glyphname = uniE003;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(546,48,o),
(552,48,qs),
(559,48,o),
(564,53,qs),
(741,229,ls),
(800,288,o),
(800,367,qs),
(800,386,ls),
(800,393,o),
(803,399,o),
(809,401,qs),
(857,418,o),
(919,499,o),
(919,550,qs),
(919,594,o),
(877,667,o),
(805,710,o),
(760,710,qs),
(707,710,o),
(630,653,o),
(610,603,qs),
(606,592,o),
(594,584,o),
(585,584,qs),
(520,584,ls),
(509,584,o),
(497,592,o),
(493,603,qs),
(473,653,o),
(396,710,o),
(343,710,qs),
(298,710,o),
(226,667,o),
(184,594,o),
(184,550,qs),
(184,499,o),
(246,418,o),
(294,401,qs),
(300,399,o),
(303,393,o),
(303,386,qs),
(303,367,ls),
(303,294,o),
(362,229,q),
(539,53,l)
);
},
{
closed = 1;
nodes = (
(515,0,ls),
(521,0,o),
(528,7,o),
(528,12,qs),
(528,17,o),
(524,21,qs),
(321,222,ls),
(285,258,o),
(232,258,qs),
(198,258,o),
(138,227,o),
(100,168,o),
(100,130,qs),
(100,97,o),
(133,37,o),
(193,0,o),
(232,0,qs)
);
},
{
closed = 1;
nodes = (
(303,456,o),
(245,514,o),
(245,554,qs),
(245,594,o),
(303,651,o),
(343,651,qs),
(383,651,o),
(440,594,o),
(440,554,qs),
(440,514,o),
(383,456,o),
(343,456,qs)
);
},
{
closed = 1;
nodes = (
(372,484,o),
(412,525,o),
(412,554,qs),
(412,568,o),
(405,584,q),
(403,576,o),
(389,566,o),
(381,566,qs),
(370,566,o),
(355,581,o),
(355,592,qs),
(355,600,o),
(365,614,o),
(373,616,q),
(357,623,o),
(343,623,qs),
(314,623,o),
(273,583,o),
(273,554,qs),
(273,525,o),
(314,484,o),
(343,484,qs)
);
},
{
closed = 1;
nodes = (
(871,0,ls),
(910,0,o),
(970,37,o),
(1003,97,o),
(1003,130,qs),
(1003,168,o),
(965,227,o),
(905,258,o),
(871,258,qs),
(818,258,o),
(782,222,qs),
(579,21,ls),
(575,17,o),
(575,12,qs),
(575,7,o),
(582,0,o),
(588,0,qs)
);
},
{
closed = 1;
nodes = (
(721,456,o),
(663,514,o),
(663,554,qs),
(663,594,o),
(721,651,o),
(761,651,qs),
(801,651,o),
(858,594,o),
(858,554,qs),
(858,514,o),
(801,456,o),
(761,456,qs)
);
},
{
closed = 1;
nodes = (
(790,484,o),
(830,525,o),
(830,554,qs),
(830,568,o),
(823,584,q),
(821,576,o),
(807,566,o),
(799,566,qs),
(788,566,o),
(773,581,o),
(773,592,qs),
(773,600,o),
(783,614,o),
(791,616,q),
(775,623,o),
(761,623,qs),
(732,623,o),
(691,583,o),
(691,554,qs),
(691,525,o),
(732,484,o),
(761,484,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 150 values pushed */
132 81 2 1 8 3 1 4 7 2 76 141 90 2 1 1 75 0 1 8 9 8 1 9 128 16 1 9 10 8 9 10 126 21 14 19 3 7 10 4 10 7 4 128 11 1 4 3 10 4 3 126 0 3 5 10 3 5 126 12 18 2 5 5 132 2 1 0 13 1 6 8 0 6 105 15 1 8 1 10 8 89 15 1 8 8 10 97 22 17 20 3 10 8 10 81 125 125 113 113 74 74 62 62 45 45 125 146 125 145 138 137 131 129 113 124 113 123 119 117 112 110 104 102 74 95 74 94 87 86 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 23 6 27
CALL[ ]	/* CallFunction */";
};
width = 1103;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(546,48,o),
(552,48,qs),
(559,48,o),
(564,53,qs),
(741,229,ls),
(800,288,o),
(800,367,qs),
(800,386,ls),
(800,393,o),
(803,399,o),
(809,401,qs),
(857,418,o),
(919,499,o),
(919,550,qs),
(919,594,o),
(877,667,o),
(805,710,o),
(760,710,qs),
(707,710,o),
(630,653,o),
(610,603,qs),
(606,592,o),
(594,584,o),
(585,584,qs),
(520,584,ls),
(509,584,o),
(497,592,o),
(493,603,qs),
(473,653,o),
(396,710,o),
(343,710,qs),
(298,710,o),
(226,667,o),
(184,594,o),
(184,550,qs),
(184,499,o),
(246,418,o),
(294,401,qs),
(300,399,o),
(303,393,o),
(303,386,qs),
(303,367,ls),
(303,294,o),
(362,229,q),
(539,53,l)
);
},
{
closed = 1;
nodes = (
(515,0,ls),
(521,0,o),
(528,7,o),
(528,12,qs),
(528,17,o),
(524,21,qs),
(321,222,ls),
(285,258,o),
(232,258,qs),
(198,258,o),
(138,227,o),
(100,168,o),
(100,130,qs),
(100,97,o),
(133,37,o),
(193,0,o),
(232,0,qs)
);
},
{
closed = 1;
nodes = (
(303,456,o),
(245,514,o),
(245,554,qs),
(245,594,o),
(303,651,o),
(343,651,qs),
(383,651,o),
(440,594,o),
(440,554,qs),
(440,514,o),
(383,456,o),
(343,456,qs)
);
},
{
closed = 1;
nodes = (
(372,484,o),
(412,525,o),
(412,554,qs),
(412,568,o),
(405,584,q),
(403,576,o),
(389,566,o),
(381,566,qs),
(370,566,o),
(355,581,o),
(355,592,qs),
(355,600,o),
(365,614,o),
(373,616,q),
(357,623,o),
(343,623,qs),
(314,623,o),
(273,583,o),
(273,554,qs),
(273,525,o),
(314,484,o),
(343,484,qs)
);
},
{
closed = 1;
nodes = (
(871,0,ls),
(910,0,o),
(970,37,o),
(1003,97,o),
(1003,130,qs),
(1003,168,o),
(965,227,o),
(905,258,o),
(871,258,qs),
(818,258,o),
(782,222,qs),
(579,21,ls),
(575,17,o),
(575,12,qs),
(575,7,o),
(582,0,o),
(588,0,qs)
);
},
{
closed = 1;
nodes = (
(721,456,o),
(663,514,o),
(663,554,qs),
(663,594,o),
(721,651,o),
(761,651,qs),
(801,651,o),
(858,594,o),
(858,554,qs),
(858,514,o),
(801,456,o),
(761,456,qs)
);
},
{
closed = 1;
nodes = (
(790,484,o),
(830,525,o),
(830,554,qs),
(830,568,o),
(823,584,q),
(821,576,o),
(807,566,o),
(799,566,qs),
(788,566,o),
(773,581,o),
(773,592,qs),
(773,600,o),
(783,614,o),
(791,616,q),
(775,623,o),
(761,623,qs),
(732,623,o),
(691,583,o),
(691,554,qs),
(691,525,o),
(732,484,o),
(761,484,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 150 values pushed */
132 81 2 1 8 3 1 4 7 2 76 141 90 2 1 1 75 0 1 8 9 8 1 9 128 16 1 9 10 8 9 10 126 21 14 19 3 7 10 4 10 7 4 128 11 1 4 3 10 4 3 126 0 3 5 10 3 5 126 12 18 2 5 5 132 2 1 0 13 1 6 8 0 6 105 15 1 8 1 10 8 89 15 1 8 8 10 97 22 17 20 3 10 8 10 81 125 125 113 113 74 74 62 62 45 45 125 146 125 145 138 137 131 129 113 124 113 123 119 117 112 110 104 102 74 95 74 94 87 86 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 23 6 27
CALL[ ]	/* CallFunction */";
};
width = 1103;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(546,48,o),
(552,48,qs),
(559,48,o),
(564,53,qs),
(741,229,ls),
(800,288,o),
(800,367,qs),
(800,386,ls),
(800,393,o),
(803,399,o),
(809,401,qs),
(857,418,o),
(919,499,o),
(919,550,qs),
(919,594,o),
(877,667,o),
(805,710,o),
(760,710,qs),
(707,710,o),
(630,653,o),
(610,603,qs),
(606,592,o),
(594,584,o),
(585,584,qs),
(520,584,ls),
(509,584,o),
(497,592,o),
(493,603,qs),
(473,653,o),
(396,710,o),
(343,710,qs),
(298,710,o),
(226,667,o),
(184,594,o),
(184,550,qs),
(184,499,o),
(246,418,o),
(294,401,qs),
(300,399,o),
(303,393,o),
(303,386,qs),
(303,367,ls),
(303,294,o),
(362,229,q),
(539,53,l)
);
},
{
closed = 1;
nodes = (
(515,0,ls),
(521,0,o),
(528,7,o),
(528,12,qs),
(528,17,o),
(524,21,qs),
(321,222,ls),
(285,258,o),
(232,258,qs),
(198,258,o),
(138,227,o),
(100,168,o),
(100,130,qs),
(100,97,o),
(133,37,o),
(193,0,o),
(232,0,qs)
);
},
{
closed = 1;
nodes = (
(303,456,o),
(245,514,o),
(245,554,qs),
(245,594,o),
(303,651,o),
(343,651,qs),
(383,651,o),
(440,594,o),
(440,554,qs),
(440,514,o),
(383,456,o),
(343,456,qs)
);
},
{
closed = 1;
nodes = (
(372,484,o),
(412,525,o),
(412,554,qs),
(412,568,o),
(405,584,q),
(403,576,o),
(389,566,o),
(381,566,qs),
(370,566,o),
(355,581,o),
(355,592,qs),
(355,600,o),
(365,614,o),
(373,616,q),
(357,623,o),
(343,623,qs),
(314,623,o),
(273,583,o),
(273,554,qs),
(273,525,o),
(314,484,o),
(343,484,qs)
);
},
{
closed = 1;
nodes = (
(871,0,ls),
(910,0,o),
(970,37,o),
(1003,97,o),
(1003,130,qs),
(1003,168,o),
(965,227,o),
(905,258,o),
(871,258,qs),
(818,258,o),
(782,222,qs),
(579,21,ls),
(575,17,o),
(575,12,qs),
(575,7,o),
(582,0,o),
(588,0,qs)
);
},
{
closed = 1;
nodes = (
(721,456,o),
(663,514,o),
(663,554,qs),
(663,594,o),
(721,651,o),
(761,651,qs),
(801,651,o),
(858,594,o),
(858,554,qs),
(858,514,o),
(801,456,o),
(761,456,qs)
);
},
{
closed = 1;
nodes = (
(790,484,o),
(830,525,o),
(830,554,qs),
(830,568,o),
(823,584,q),
(821,576,o),
(807,566,o),
(799,566,qs),
(788,566,o),
(773,581,o),
(773,592,qs),
(773,600,o),
(783,614,o),
(791,616,q),
(775,623,o),
(761,623,qs),
(732,623,o),
(691,583,o),
(691,554,qs),
(691,525,o),
(732,484,o),
(761,484,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 150 values pushed */
132 81 2 1 8 3 1 4 7 2 76 141 90 2 1 1 75 0 1 8 9 8 1 9 128 16 1 9 10 8 9 10 126 21 14 19 3 7 10 4 10 7 4 128 11 1 4 3 10 4 3 126 0 3 5 10 3 5 126 12 18 2 5 5 132 2 1 0 13 1 6 8 0 6 105 15 1 8 1 10 8 89 15 1 8 8 10 97 22 17 20 3 10 8 10 81 125 125 113 113 74 74 62 62 45 45 125 146 125 145 138 137 131 129 113 124 113 123 119 117 112 110 104 102 74 95 74 94 87 86 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 23 6 27
CALL[ ]	/* CallFunction */";
};
width = 1103;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(546,48,o),
(552,48,qs),
(559,48,o),
(564,53,qs),
(741,229,ls),
(800,288,o),
(800,367,qs),
(800,386,ls),
(800,393,o),
(803,399,o),
(809,401,qs),
(857,418,o),
(919,499,o),
(919,550,qs),
(919,594,o),
(877,667,o),
(805,710,o),
(760,710,qs),
(707,710,o),
(630,653,o),
(610,603,qs),
(606,592,o),
(594,584,o),
(585,584,qs),
(520,584,ls),
(509,584,o),
(497,592,o),
(493,603,qs),
(473,653,o),
(396,710,o),
(343,710,qs),
(298,710,o),
(226,667,o),
(184,594,o),
(184,550,qs),
(184,499,o),
(246,418,o),
(294,401,qs),
(300,399,o),
(303,393,o),
(303,386,qs),
(303,367,ls),
(303,294,o),
(362,229,q),
(539,53,l)
);
},
{
closed = 1;
nodes = (
(515,0,ls),
(521,0,o),
(528,7,o),
(528,12,qs),
(528,17,o),
(524,21,qs),
(321,222,ls),
(285,258,o),
(232,258,qs),
(198,258,o),
(138,227,o),
(100,168,o),
(100,130,qs),
(100,97,o),
(133,37,o),
(193,0,o),
(232,0,qs)
);
},
{
closed = 1;
nodes = (
(303,456,o),
(245,514,o),
(245,554,qs),
(245,594,o),
(303,651,o),
(343,651,qs),
(383,651,o),
(440,594,o),
(440,554,qs),
(440,514,o),
(383,456,o),
(343,456,qs)
);
},
{
closed = 1;
nodes = (
(372,484,o),
(412,525,o),
(412,554,qs),
(412,568,o),
(405,584,q),
(403,576,o),
(389,566,o),
(381,566,qs),
(370,566,o),
(355,581,o),
(355,592,qs),
(355,600,o),
(365,614,o),
(373,616,q),
(357,623,o),
(343,623,qs),
(314,623,o),
(273,583,o),
(273,554,qs),
(273,525,o),
(314,484,o),
(343,484,qs)
);
},
{
closed = 1;
nodes = (
(871,0,ls),
(910,0,o),
(970,37,o),
(1003,97,o),
(1003,130,qs),
(1003,168,o),
(965,227,o),
(905,258,o),
(871,258,qs),
(818,258,o),
(782,222,qs),
(579,21,ls),
(575,17,o),
(575,12,qs),
(575,7,o),
(582,0,o),
(588,0,qs)
);
},
{
closed = 1;
nodes = (
(721,456,o),
(663,514,o),
(663,554,qs),
(663,594,o),
(721,651,o),
(761,651,qs),
(801,651,o),
(858,594,o),
(858,554,qs),
(858,514,o),
(801,456,o),
(761,456,qs)
);
},
{
closed = 1;
nodes = (
(790,484,o),
(830,525,o),
(830,554,qs),
(830,568,o),
(823,584,q),
(821,576,o),
(807,566,o),
(799,566,qs),
(788,566,o),
(773,581,o),
(773,592,qs),
(773,600,o),
(783,614,o),
(791,616,q),
(775,623,o),
(761,623,qs),
(732,623,o),
(691,583,o),
(691,554,qs),
(691,525,o),
(732,484,o),
(761,484,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 150 values pushed */
132 81 2 1 8 3 1 4 7 2 76 141 90 2 1 1 75 0 1 8 9 8 1 9 128 16 1 9 10 8 9 10 126 21 14 19 3 7 10 4 10 7 4 128 11 1 4 3 10 4 3 126 0 3 5 10 3 5 126 12 18 2 5 5 132 2 1 0 13 1 6 8 0 6 105 15 1 8 1 10 8 89 15 1 8 8 10 97 22 17 20 3 10 8 10 81 125 125 113 113 74 74 62 62 45 45 125 146 125 145 138 137 131 129 113 124 113 123 119 117 112 110 104 102 74 95 74 94 87 86 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 23 6 27
CALL[ ]	/* CallFunction */";
};
width = 1103;
}
);
note = uniE003;
unicode = 57347;
},
{
glyphname = uniE004;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(546,48,o),
(552,48,qs),
(559,48,o),
(564,53,qs),
(741,229,ls),
(800,288,o),
(800,367,qs),
(800,386,ls),
(800,393,o),
(803,399,o),
(809,401,qs),
(857,418,o),
(919,499,o),
(919,550,qs),
(919,594,o),
(877,667,o),
(805,710,o),
(760,710,qs),
(707,710,o),
(630,653,o),
(610,603,qs),
(606,592,o),
(594,584,o),
(585,584,qs),
(520,584,ls),
(509,584,o),
(497,592,o),
(493,603,qs),
(473,653,o),
(396,710,o),
(343,710,qs),
(298,710,o),
(226,667,o),
(184,594,o),
(184,550,qs),
(184,499,o),
(246,418,o),
(294,401,qs),
(300,399,o),
(303,393,o),
(303,386,qs),
(303,367,ls),
(303,294,o),
(362,229,q),
(539,53,l)
);
},
{
closed = 1;
nodes = (
(515,0,ls),
(521,0,o),
(528,7,o),
(528,12,qs),
(528,17,o),
(524,21,qs),
(321,222,ls),
(285,258,o),
(232,258,qs),
(198,258,o),
(138,227,o),
(100,168,o),
(100,130,qs),
(100,97,o),
(133,37,o),
(193,0,o),
(232,0,qs)
);
},
{
closed = 1;
nodes = (
(294,435,o),
(224,505,o),
(224,554,qs),
(224,603,o),
(294,672,o),
(343,672,qs),
(392,672,o),
(461,603,o),
(461,554,qs),
(461,505,o),
(392,435,o),
(343,435,qs)
);
},
{
closed = 1;
nodes = (
(383,456,o),
(440,514,o),
(440,554,qs),
(440,594,o),
(383,651,o),
(343,651,qs),
(303,651,o),
(245,594,o),
(245,554,qs),
(245,514,o),
(303,456,o),
(343,456,qs)
);
},
{
closed = 1;
nodes = (
(314,484,o),
(273,525,o),
(273,554,qs),
(273,583,o),
(314,623,o),
(343,623,qs),
(357,623,o),
(373,616,q),
(365,614,o),
(355,600,o),
(355,592,qs),
(355,581,o),
(370,566,o),
(381,566,qs),
(389,566,o),
(403,576,o),
(405,584,q),
(412,568,o),
(412,554,qs),
(412,525,o),
(372,484,o),
(343,484,qs)
);
},
{
closed = 1;
nodes = (
(871,0,ls),
(910,0,o),
(970,37,o),
(1003,97,o),
(1003,130,qs),
(1003,168,o),
(965,227,o),
(905,258,o),
(871,258,qs),
(818,258,o),
(782,222,qs),
(579,21,ls),
(575,17,o),
(575,12,qs),
(575,7,o),
(582,0,o),
(588,0,qs)
);
},
{
closed = 1;
nodes = (
(1255,0,l),
(1255,214,l),
(1460,0,l),
(1606,0,l),
(1362,260,l),
(1591,511,l),
(1447,511,l),
(1255,309,l),
(1255,700,l),
(1141,700,l),
(1141,0,l)
);
},
{
closed = 1;
nodes = (
(1927,-12,o),
(2052,57,o),
(2123,179,o),
(2123,254,qs),
(2123,329,o),
(2052,452,o),
(1927,523,o),
(1849,523,qs),
(1771,523,o),
(1647,452,o),
(1576,329,o),
(1576,254,qs),
(1576,179,o),
(1647,57,o),
(1771,-12,o),
(1849,-12,qs)
);
},
{
closed = 1;
nodes = (
(1800,95,o),
(1729,137,o),
(1690,210,o),
(1690,254,qs),
(1690,298,o),
(1729,371,o),
(1800,413,o),
(1847,413,qs),
(1894,413,o),
(1966,371,o),
(2006,298,o),
(2006,254,qs),
(2006,210,o),
(1966,137,o),
(1894,95,o),
(1847,95,qs)
);
},
{
closed = 1;
nodes = (
(1773,566,o),
(1814,607,o),
(1814,637,qs),
(1814,667,o),
(1774,707,o),
(1743,707,qs),
(1713,707,o),
(1672,665,o),
(1672,636,qs),
(1672,607,o),
(1713,566,o),
(1743,566,qs)
);
},
{
closed = 1;
nodes = (
(1984,566,o),
(2025,607,o),
(2025,637,qs),
(2025,667,o),
(1985,707,o),
(1954,707,qs),
(1924,707,o),
(1883,665,o),
(1883,636,qs),
(1883,607,o),
(1924,566,o),
(1954,566,qs)
);
},
{
closed = 1;
nodes = (
(2303,0,l),
(2303,700,l),
(2193,700,l),
(2193,0,l)
);
},
{
closed = 1;
nodes = (
(2618,95,o),
(2546,140,o),
(2508,213,o),
(2508,254,qs),
(2508,297,o),
(2549,370,o),
(2621,413,o),
(2667,413,qs),
(2735,413,o),
(2823,323,o),
(2823,254,qs),
(2823,209,o),
(2783,136,o),
(2712,95,o),
(2667,95,qs)
);
},
{
closed = 1;
nodes = (
(2763,-12,o),
(2877,60,o),
(2939,182,o),
(2939,254,qs),
(2939,331,o),
(2873,454,o),
(2759,523,o),
(2688,523,qs),
(2631,523,o),
(2543,478,o),
(2508,431,q),
(2508,700,l),
(2398,700,l),
(2398,0,l),
(2508,0,l),
(2508,80,l),
(2543,33,o),
(2631,-12,o),
(2688,-12,qs)
);
},
{
closed = 1;
nodes = (
(3122,0,l),
(3122,511,l),
(3009,511,l),
(3009,0,l)
);
},
{
closed = 1;
nodes = (
(3095,566,o),
(3136,607,o),
(3136,637,qs),
(3136,667,o),
(3096,707,o),
(3065,707,qs),
(3035,707,o),
(2994,665,o),
(2994,636,qs),
(2994,607,o),
(3035,566,o),
(3065,566,qs)
);
},
{
closed = 1;
nodes = (
(712,435,o),
(642,505,o),
(642,554,qs),
(642,603,o),
(712,672,o),
(761,672,qs),
(810,672,o),
(879,603,o),
(879,554,qs),
(879,505,o),
(810,435,o),
(761,435,qs)
);
},
{
closed = 1;
nodes = (
(801,456,o),
(858,514,o),
(858,554,qs),
(858,594,o),
(801,651,o),
(761,651,qs),
(721,651,o),
(663,594,o),
(663,554,qs),
(663,514,o),
(721,456,o),
(761,456,qs)
);
},
{
closed = 1;
nodes = (
(732,484,o),
(691,525,o),
(691,554,qs),
(691,583,o),
(732,623,o),
(761,623,qs),
(775,623,o),
(791,616,q),
(783,614,o),
(773,600,o),
(773,592,qs),
(773,581,o),
(788,566,o),
(799,566,qs),
(807,566,o),
(821,576,o),
(823,584,q),
(830,568,o),
(830,554,qs),
(830,525,o),
(790,484,o),
(761,484,qs)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 33 values pushed */
283 280 99 96 4 1 11 218 1 21 7 130 127 3 3 4 21 133 1 22 4 213 1 3 22 5 76 274 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 154 values pushed */
32 27 2 15 0 6 0 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 39 1 6 8 0 6 89 41 1 8 44 1 11 1 8 11 105 37 25 23 2 4 0 43 56 38 53 26 52 24 7 10 19 0 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 155 values pushed */
32 27 2 15 23 6 23 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 2 1 0 39 1 6 8 0 6 105 41 1 8 44 1 11 1 8 11 105 37 25 2 23 43 56 38 53 26 52 24 7 10 19 23 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 154 values pushed */
32 27 2 15 0 6 0 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 39 1 6 8 0 6 89 41 1 8 44 1 11 1 8 11 105 37 25 23 2 4 0 43 56 38 53 26 52 24 7 10 19 0 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 146 values pushed */
270 270 258 258 246 246 234 234 211 211 196 196 180 180 168 168 152 152 136 136 86 86 74 74 62 62 45 45 270 291 270 290 286 284 278 276 258 269 258 268 264 262 246 257 246 256 252 250 234 245 234 244 240 238 233 232 231 230 211 229 211 228 222 220 217 216 215 214 196 210 196 209 203 201 195 194 193 192 180 191 180 190 186 184 168 179 168 178 174 172 152 167 152 166 160 158 136 151 136 150 144 142 135 134 132 131 129 128 126 125 124 122 116 114 86 107 86 106 102 100 94 92 74 85 74 84 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 60 6 27
CALL[ ]	/* CallFunction */";
};
width = 3236;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(546,48,o),
(552,48,qs),
(559,48,o),
(564,53,qs),
(741,229,ls),
(800,288,o),
(800,367,qs),
(800,386,ls),
(800,393,o),
(803,399,o),
(809,401,qs),
(857,418,o),
(919,499,o),
(919,550,qs),
(919,594,o),
(877,667,o),
(805,710,o),
(760,710,qs),
(707,710,o),
(630,653,o),
(610,603,qs),
(606,592,o),
(594,584,o),
(585,584,qs),
(520,584,ls),
(509,584,o),
(497,592,o),
(493,603,qs),
(473,653,o),
(396,710,o),
(343,710,qs),
(298,710,o),
(226,667,o),
(184,594,o),
(184,550,qs),
(184,499,o),
(246,418,o),
(294,401,qs),
(300,399,o),
(303,393,o),
(303,386,qs),
(303,367,ls),
(303,294,o),
(362,229,q),
(539,53,l)
);
},
{
closed = 1;
nodes = (
(515,0,ls),
(521,0,o),
(528,7,o),
(528,12,qs),
(528,17,o),
(524,21,qs),
(321,222,ls),
(285,258,o),
(232,258,qs),
(198,258,o),
(138,227,o),
(100,168,o),
(100,130,qs),
(100,97,o),
(133,37,o),
(193,0,o),
(232,0,qs)
);
},
{
closed = 1;
nodes = (
(294,435,o),
(224,505,o),
(224,554,qs),
(224,603,o),
(294,672,o),
(343,672,qs),
(392,672,o),
(461,603,o),
(461,554,qs),
(461,505,o),
(392,435,o),
(343,435,qs)
);
},
{
closed = 1;
nodes = (
(383,456,o),
(440,514,o),
(440,554,qs),
(440,594,o),
(383,651,o),
(343,651,qs),
(303,651,o),
(245,594,o),
(245,554,qs),
(245,514,o),
(303,456,o),
(343,456,qs)
);
},
{
closed = 1;
nodes = (
(314,484,o),
(273,525,o),
(273,554,qs),
(273,583,o),
(314,623,o),
(343,623,qs),
(357,623,o),
(373,616,q),
(365,614,o),
(355,600,o),
(355,592,qs),
(355,581,o),
(370,566,o),
(381,566,qs),
(389,566,o),
(403,576,o),
(405,584,q),
(412,568,o),
(412,554,qs),
(412,525,o),
(372,484,o),
(343,484,qs)
);
},
{
closed = 1;
nodes = (
(871,0,ls),
(910,0,o),
(970,37,o),
(1003,97,o),
(1003,130,qs),
(1003,168,o),
(965,227,o),
(905,258,o),
(871,258,qs),
(818,258,o),
(782,222,qs),
(579,21,ls),
(575,17,o),
(575,12,qs),
(575,7,o),
(582,0,o),
(588,0,qs)
);
},
{
closed = 1;
nodes = (
(1255,0,l),
(1255,214,l),
(1460,0,l),
(1606,0,l),
(1362,260,l),
(1591,511,l),
(1447,511,l),
(1255,309,l),
(1255,700,l),
(1141,700,l),
(1141,0,l)
);
},
{
closed = 1;
nodes = (
(1927,-12,o),
(2052,57,o),
(2123,179,o),
(2123,254,qs),
(2123,329,o),
(2052,452,o),
(1927,523,o),
(1849,523,qs),
(1771,523,o),
(1647,452,o),
(1576,329,o),
(1576,254,qs),
(1576,179,o),
(1647,57,o),
(1771,-12,o),
(1849,-12,qs)
);
},
{
closed = 1;
nodes = (
(1800,95,o),
(1729,137,o),
(1690,210,o),
(1690,254,qs),
(1690,298,o),
(1729,371,o),
(1800,413,o),
(1847,413,qs),
(1894,413,o),
(1966,371,o),
(2006,298,o),
(2006,254,qs),
(2006,210,o),
(1966,137,o),
(1894,95,o),
(1847,95,qs)
);
},
{
closed = 1;
nodes = (
(1773,566,o),
(1814,607,o),
(1814,637,qs),
(1814,667,o),
(1774,707,o),
(1743,707,qs),
(1713,707,o),
(1672,665,o),
(1672,636,qs),
(1672,607,o),
(1713,566,o),
(1743,566,qs)
);
},
{
closed = 1;
nodes = (
(1984,566,o),
(2025,607,o),
(2025,637,qs),
(2025,667,o),
(1985,707,o),
(1954,707,qs),
(1924,707,o),
(1883,665,o),
(1883,636,qs),
(1883,607,o),
(1924,566,o),
(1954,566,qs)
);
},
{
closed = 1;
nodes = (
(2303,0,l),
(2303,700,l),
(2193,700,l),
(2193,0,l)
);
},
{
closed = 1;
nodes = (
(2618,95,o),
(2546,140,o),
(2508,213,o),
(2508,254,qs),
(2508,297,o),
(2549,370,o),
(2621,413,o),
(2667,413,qs),
(2735,413,o),
(2823,323,o),
(2823,254,qs),
(2823,209,o),
(2783,136,o),
(2712,95,o),
(2667,95,qs)
);
},
{
closed = 1;
nodes = (
(2763,-12,o),
(2877,60,o),
(2939,182,o),
(2939,254,qs),
(2939,331,o),
(2873,454,o),
(2759,523,o),
(2688,523,qs),
(2631,523,o),
(2543,478,o),
(2508,431,q),
(2508,700,l),
(2398,700,l),
(2398,0,l),
(2508,0,l),
(2508,80,l),
(2543,33,o),
(2631,-12,o),
(2688,-12,qs)
);
},
{
closed = 1;
nodes = (
(3122,0,l),
(3122,511,l),
(3009,511,l),
(3009,0,l)
);
},
{
closed = 1;
nodes = (
(3095,566,o),
(3136,607,o),
(3136,637,qs),
(3136,667,o),
(3096,707,o),
(3065,707,qs),
(3035,707,o),
(2994,665,o),
(2994,636,qs),
(2994,607,o),
(3035,566,o),
(3065,566,qs)
);
},
{
closed = 1;
nodes = (
(712,435,o),
(642,505,o),
(642,554,qs),
(642,603,o),
(712,672,o),
(761,672,qs),
(810,672,o),
(879,603,o),
(879,554,qs),
(879,505,o),
(810,435,o),
(761,435,qs)
);
},
{
closed = 1;
nodes = (
(801,456,o),
(858,514,o),
(858,554,qs),
(858,594,o),
(801,651,o),
(761,651,qs),
(721,651,o),
(663,594,o),
(663,554,qs),
(663,514,o),
(721,456,o),
(761,456,qs)
);
},
{
closed = 1;
nodes = (
(732,484,o),
(691,525,o),
(691,554,qs),
(691,583,o),
(732,623,o),
(761,623,qs),
(775,623,o),
(791,616,q),
(783,614,o),
(773,600,o),
(773,592,qs),
(773,581,o),
(788,566,o),
(799,566,qs),
(807,566,o),
(821,576,o),
(823,584,q),
(830,568,o),
(830,554,qs),
(830,525,o),
(790,484,o),
(761,484,qs)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 33 values pushed */
283 280 99 96 4 1 11 218 1 21 7 130 127 3 3 4 21 133 1 22 4 213 1 3 22 5 76 274 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 154 values pushed */
32 27 2 15 0 6 0 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 39 1 6 8 0 6 89 41 1 8 44 1 11 1 8 11 105 37 25 23 2 4 0 43 56 38 53 26 52 24 7 10 19 0 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 155 values pushed */
32 27 2 15 23 6 23 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 2 1 0 39 1 6 8 0 6 105 41 1 8 44 1 11 1 8 11 105 37 25 2 23 43 56 38 53 26 52 24 7 10 19 23 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 154 values pushed */
32 27 2 15 0 6 0 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 39 1 6 8 0 6 89 41 1 8 44 1 11 1 8 11 105 37 25 23 2 4 0 43 56 38 53 26 52 24 7 10 19 0 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 146 values pushed */
270 270 258 258 246 246 234 234 211 211 196 196 180 180 168 168 152 152 136 136 86 86 74 74 62 62 45 45 270 291 270 290 286 284 278 276 258 269 258 268 264 262 246 257 246 256 252 250 234 245 234 244 240 238 233 232 231 230 211 229 211 228 222 220 217 216 215 214 196 210 196 209 203 201 195 194 193 192 180 191 180 190 186 184 168 179 168 178 174 172 152 167 152 166 160 158 136 151 136 150 144 142 135 134 132 131 129 128 126 125 124 122 116 114 86 107 86 106 102 100 94 92 74 85 74 84 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 60 6 27
CALL[ ]	/* CallFunction */";
};
width = 3236;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(546,48,o),
(552,48,qs),
(559,48,o),
(564,53,qs),
(741,229,ls),
(800,288,o),
(800,367,qs),
(800,386,ls),
(800,393,o),
(803,399,o),
(809,401,qs),
(857,418,o),
(919,499,o),
(919,550,qs),
(919,594,o),
(877,667,o),
(805,710,o),
(760,710,qs),
(707,710,o),
(630,653,o),
(610,603,qs),
(606,592,o),
(594,584,o),
(585,584,qs),
(520,584,ls),
(509,584,o),
(497,592,o),
(493,603,qs),
(473,653,o),
(396,710,o),
(343,710,qs),
(298,710,o),
(226,667,o),
(184,594,o),
(184,550,qs),
(184,499,o),
(246,418,o),
(294,401,qs),
(300,399,o),
(303,393,o),
(303,386,qs),
(303,367,ls),
(303,294,o),
(362,229,q),
(539,53,l)
);
},
{
closed = 1;
nodes = (
(515,0,ls),
(521,0,o),
(528,7,o),
(528,12,qs),
(528,17,o),
(524,21,qs),
(321,222,ls),
(285,258,o),
(232,258,qs),
(198,258,o),
(138,227,o),
(100,168,o),
(100,130,qs),
(100,97,o),
(133,37,o),
(193,0,o),
(232,0,qs)
);
},
{
closed = 1;
nodes = (
(294,435,o),
(224,505,o),
(224,554,qs),
(224,603,o),
(294,672,o),
(343,672,qs),
(392,672,o),
(461,603,o),
(461,554,qs),
(461,505,o),
(392,435,o),
(343,435,qs)
);
},
{
closed = 1;
nodes = (
(383,456,o),
(440,514,o),
(440,554,qs),
(440,594,o),
(383,651,o),
(343,651,qs),
(303,651,o),
(245,594,o),
(245,554,qs),
(245,514,o),
(303,456,o),
(343,456,qs)
);
},
{
closed = 1;
nodes = (
(314,484,o),
(273,525,o),
(273,554,qs),
(273,583,o),
(314,623,o),
(343,623,qs),
(357,623,o),
(373,616,q),
(365,614,o),
(355,600,o),
(355,592,qs),
(355,581,o),
(370,566,o),
(381,566,qs),
(389,566,o),
(403,576,o),
(405,584,q),
(412,568,o),
(412,554,qs),
(412,525,o),
(372,484,o),
(343,484,qs)
);
},
{
closed = 1;
nodes = (
(871,0,ls),
(910,0,o),
(970,37,o),
(1003,97,o),
(1003,130,qs),
(1003,168,o),
(965,227,o),
(905,258,o),
(871,258,qs),
(818,258,o),
(782,222,qs),
(579,21,ls),
(575,17,o),
(575,12,qs),
(575,7,o),
(582,0,o),
(588,0,qs)
);
},
{
closed = 1;
nodes = (
(1255,0,l),
(1255,214,l),
(1460,0,l),
(1606,0,l),
(1362,260,l),
(1591,511,l),
(1447,511,l),
(1255,309,l),
(1255,700,l),
(1141,700,l),
(1141,0,l)
);
},
{
closed = 1;
nodes = (
(1927,-12,o),
(2052,57,o),
(2123,179,o),
(2123,254,qs),
(2123,329,o),
(2052,452,o),
(1927,523,o),
(1849,523,qs),
(1771,523,o),
(1647,452,o),
(1576,329,o),
(1576,254,qs),
(1576,179,o),
(1647,57,o),
(1771,-12,o),
(1849,-12,qs)
);
},
{
closed = 1;
nodes = (
(1800,95,o),
(1729,137,o),
(1690,210,o),
(1690,254,qs),
(1690,298,o),
(1729,371,o),
(1800,413,o),
(1847,413,qs),
(1894,413,o),
(1966,371,o),
(2006,298,o),
(2006,254,qs),
(2006,210,o),
(1966,137,o),
(1894,95,o),
(1847,95,qs)
);
},
{
closed = 1;
nodes = (
(1773,566,o),
(1814,607,o),
(1814,637,qs),
(1814,667,o),
(1774,707,o),
(1743,707,qs),
(1713,707,o),
(1672,665,o),
(1672,636,qs),
(1672,607,o),
(1713,566,o),
(1743,566,qs)
);
},
{
closed = 1;
nodes = (
(1984,566,o),
(2025,607,o),
(2025,637,qs),
(2025,667,o),
(1985,707,o),
(1954,707,qs),
(1924,707,o),
(1883,665,o),
(1883,636,qs),
(1883,607,o),
(1924,566,o),
(1954,566,qs)
);
},
{
closed = 1;
nodes = (
(2303,0,l),
(2303,700,l),
(2193,700,l),
(2193,0,l)
);
},
{
closed = 1;
nodes = (
(2618,95,o),
(2546,140,o),
(2508,213,o),
(2508,254,qs),
(2508,297,o),
(2549,370,o),
(2621,413,o),
(2667,413,qs),
(2735,413,o),
(2823,323,o),
(2823,254,qs),
(2823,209,o),
(2783,136,o),
(2712,95,o),
(2667,95,qs)
);
},
{
closed = 1;
nodes = (
(2763,-12,o),
(2877,60,o),
(2939,182,o),
(2939,254,qs),
(2939,331,o),
(2873,454,o),
(2759,523,o),
(2688,523,qs),
(2631,523,o),
(2543,478,o),
(2508,431,q),
(2508,700,l),
(2398,700,l),
(2398,0,l),
(2508,0,l),
(2508,80,l),
(2543,33,o),
(2631,-12,o),
(2688,-12,qs)
);
},
{
closed = 1;
nodes = (
(3122,0,l),
(3122,511,l),
(3009,511,l),
(3009,0,l)
);
},
{
closed = 1;
nodes = (
(3095,566,o),
(3136,607,o),
(3136,637,qs),
(3136,667,o),
(3096,707,o),
(3065,707,qs),
(3035,707,o),
(2994,665,o),
(2994,636,qs),
(2994,607,o),
(3035,566,o),
(3065,566,qs)
);
},
{
closed = 1;
nodes = (
(712,435,o),
(642,505,o),
(642,554,qs),
(642,603,o),
(712,672,o),
(761,672,qs),
(810,672,o),
(879,603,o),
(879,554,qs),
(879,505,o),
(810,435,o),
(761,435,qs)
);
},
{
closed = 1;
nodes = (
(801,456,o),
(858,514,o),
(858,554,qs),
(858,594,o),
(801,651,o),
(761,651,qs),
(721,651,o),
(663,594,o),
(663,554,qs),
(663,514,o),
(721,456,o),
(761,456,qs)
);
},
{
closed = 1;
nodes = (
(732,484,o),
(691,525,o),
(691,554,qs),
(691,583,o),
(732,623,o),
(761,623,qs),
(775,623,o),
(791,616,q),
(783,614,o),
(773,600,o),
(773,592,qs),
(773,581,o),
(788,566,o),
(799,566,qs),
(807,566,o),
(821,576,o),
(823,584,q),
(830,568,o),
(830,554,qs),
(830,525,o),
(790,484,o),
(761,484,qs)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 33 values pushed */
283 280 99 96 4 1 11 218 1 21 7 130 127 3 3 4 21 133 1 22 4 213 1 3 22 5 76 274 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 154 values pushed */
32 27 2 15 0 6 0 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 39 1 6 8 0 6 89 41 1 8 44 1 11 1 8 11 105 37 25 23 2 4 0 43 56 38 53 26 52 24 7 10 19 0 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 155 values pushed */
32 27 2 15 23 6 23 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 2 1 0 39 1 6 8 0 6 105 41 1 8 44 1 11 1 8 11 105 37 25 2 23 43 56 38 53 26 52 24 7 10 19 23 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 154 values pushed */
32 27 2 15 0 6 0 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 39 1 6 8 0 6 89 41 1 8 44 1 11 1 8 11 105 37 25 23 2 4 0 43 56 38 53 26 52 24 7 10 19 0 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 146 values pushed */
270 270 258 258 246 246 234 234 211 211 196 196 180 180 168 168 152 152 136 136 86 86 74 74 62 62 45 45 270 291 270 290 286 284 278 276 258 269 258 268 264 262 246 257 246 256 252 250 234 245 234 244 240 238 233 232 231 230 211 229 211 228 222 220 217 216 215 214 196 210 196 209 203 201 195 194 193 192 180 191 180 190 186 184 168 179 168 178 174 172 152 167 152 166 160 158 136 151 136 150 144 142 135 134 132 131 129 128 126 125 124 122 116 114 86 107 86 106 102 100 94 92 74 85 74 84 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 60 6 27
CALL[ ]	/* CallFunction */";
};
width = 3236;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(546,48,o),
(552,48,qs),
(559,48,o),
(564,53,qs),
(741,229,ls),
(800,288,o),
(800,367,qs),
(800,386,ls),
(800,393,o),
(803,399,o),
(809,401,qs),
(857,418,o),
(919,499,o),
(919,550,qs),
(919,594,o),
(877,667,o),
(805,710,o),
(760,710,qs),
(707,710,o),
(630,653,o),
(610,603,qs),
(606,592,o),
(594,584,o),
(585,584,qs),
(520,584,ls),
(509,584,o),
(497,592,o),
(493,603,qs),
(473,653,o),
(396,710,o),
(343,710,qs),
(298,710,o),
(226,667,o),
(184,594,o),
(184,550,qs),
(184,499,o),
(246,418,o),
(294,401,qs),
(300,399,o),
(303,393,o),
(303,386,qs),
(303,367,ls),
(303,294,o),
(362,229,q),
(539,53,l)
);
},
{
closed = 1;
nodes = (
(515,0,ls),
(521,0,o),
(528,7,o),
(528,12,qs),
(528,17,o),
(524,21,qs),
(321,222,ls),
(285,258,o),
(232,258,qs),
(198,258,o),
(138,227,o),
(100,168,o),
(100,130,qs),
(100,97,o),
(133,37,o),
(193,0,o),
(232,0,qs)
);
},
{
closed = 1;
nodes = (
(294,435,o),
(224,505,o),
(224,554,qs),
(224,603,o),
(294,672,o),
(343,672,qs),
(392,672,o),
(461,603,o),
(461,554,qs),
(461,505,o),
(392,435,o),
(343,435,qs)
);
},
{
closed = 1;
nodes = (
(383,456,o),
(440,514,o),
(440,554,qs),
(440,594,o),
(383,651,o),
(343,651,qs),
(303,651,o),
(245,594,o),
(245,554,qs),
(245,514,o),
(303,456,o),
(343,456,qs)
);
},
{
closed = 1;
nodes = (
(314,484,o),
(273,525,o),
(273,554,qs),
(273,583,o),
(314,623,o),
(343,623,qs),
(357,623,o),
(373,616,q),
(365,614,o),
(355,600,o),
(355,592,qs),
(355,581,o),
(370,566,o),
(381,566,qs),
(389,566,o),
(403,576,o),
(405,584,q),
(412,568,o),
(412,554,qs),
(412,525,o),
(372,484,o),
(343,484,qs)
);
},
{
closed = 1;
nodes = (
(871,0,ls),
(910,0,o),
(970,37,o),
(1003,97,o),
(1003,130,qs),
(1003,168,o),
(965,227,o),
(905,258,o),
(871,258,qs),
(818,258,o),
(782,222,qs),
(579,21,ls),
(575,17,o),
(575,12,qs),
(575,7,o),
(582,0,o),
(588,0,qs)
);
},
{
closed = 1;
nodes = (
(1255,0,l),
(1255,214,l),
(1460,0,l),
(1606,0,l),
(1362,260,l),
(1591,511,l),
(1447,511,l),
(1255,309,l),
(1255,700,l),
(1141,700,l),
(1141,0,l)
);
},
{
closed = 1;
nodes = (
(1927,-12,o),
(2052,57,o),
(2123,179,o),
(2123,254,qs),
(2123,329,o),
(2052,452,o),
(1927,523,o),
(1849,523,qs),
(1771,523,o),
(1647,452,o),
(1576,329,o),
(1576,254,qs),
(1576,179,o),
(1647,57,o),
(1771,-12,o),
(1849,-12,qs)
);
},
{
closed = 1;
nodes = (
(1800,95,o),
(1729,137,o),
(1690,210,o),
(1690,254,qs),
(1690,298,o),
(1729,371,o),
(1800,413,o),
(1847,413,qs),
(1894,413,o),
(1966,371,o),
(2006,298,o),
(2006,254,qs),
(2006,210,o),
(1966,137,o),
(1894,95,o),
(1847,95,qs)
);
},
{
closed = 1;
nodes = (
(1773,566,o),
(1814,607,o),
(1814,637,qs),
(1814,667,o),
(1774,707,o),
(1743,707,qs),
(1713,707,o),
(1672,665,o),
(1672,636,qs),
(1672,607,o),
(1713,566,o),
(1743,566,qs)
);
},
{
closed = 1;
nodes = (
(1984,566,o),
(2025,607,o),
(2025,637,qs),
(2025,667,o),
(1985,707,o),
(1954,707,qs),
(1924,707,o),
(1883,665,o),
(1883,636,qs),
(1883,607,o),
(1924,566,o),
(1954,566,qs)
);
},
{
closed = 1;
nodes = (
(2303,0,l),
(2303,700,l),
(2193,700,l),
(2193,0,l)
);
},
{
closed = 1;
nodes = (
(2618,95,o),
(2546,140,o),
(2508,213,o),
(2508,254,qs),
(2508,297,o),
(2549,370,o),
(2621,413,o),
(2667,413,qs),
(2735,413,o),
(2823,323,o),
(2823,254,qs),
(2823,209,o),
(2783,136,o),
(2712,95,o),
(2667,95,qs)
);
},
{
closed = 1;
nodes = (
(2763,-12,o),
(2877,60,o),
(2939,182,o),
(2939,254,qs),
(2939,331,o),
(2873,454,o),
(2759,523,o),
(2688,523,qs),
(2631,523,o),
(2543,478,o),
(2508,431,q),
(2508,700,l),
(2398,700,l),
(2398,0,l),
(2508,0,l),
(2508,80,l),
(2543,33,o),
(2631,-12,o),
(2688,-12,qs)
);
},
{
closed = 1;
nodes = (
(3122,0,l),
(3122,511,l),
(3009,511,l),
(3009,0,l)
);
},
{
closed = 1;
nodes = (
(3095,566,o),
(3136,607,o),
(3136,637,qs),
(3136,667,o),
(3096,707,o),
(3065,707,qs),
(3035,707,o),
(2994,665,o),
(2994,636,qs),
(2994,607,o),
(3035,566,o),
(3065,566,qs)
);
},
{
closed = 1;
nodes = (
(712,435,o),
(642,505,o),
(642,554,qs),
(642,603,o),
(712,672,o),
(761,672,qs),
(810,672,o),
(879,603,o),
(879,554,qs),
(879,505,o),
(810,435,o),
(761,435,qs)
);
},
{
closed = 1;
nodes = (
(801,456,o),
(858,514,o),
(858,554,qs),
(858,594,o),
(801,651,o),
(761,651,qs),
(721,651,o),
(663,594,o),
(663,554,qs),
(663,514,o),
(721,456,o),
(761,456,qs)
);
},
{
closed = 1;
nodes = (
(732,484,o),
(691,525,o),
(691,554,qs),
(691,583,o),
(732,623,o),
(761,623,qs),
(775,623,o),
(791,616,q),
(783,614,o),
(773,600,o),
(773,592,qs),
(773,581,o),
(788,566,o),
(799,566,qs),
(807,566,o),
(821,576,o),
(823,584,q),
(830,568,o),
(830,554,qs),
(830,525,o),
(790,484,o),
(761,484,qs)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 33 values pushed */
283 280 99 96 4 1 11 218 1 21 7 130 127 3 3 4 21 133 1 22 4 213 1 3 22 5 76 274 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 154 values pushed */
32 27 2 15 0 6 0 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 39 1 6 8 0 6 89 41 1 8 44 1 11 1 8 11 105 37 25 23 2 4 0 43 56 38 53 26 52 24 7 10 19 0 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 155 values pushed */
32 27 2 15 23 6 23 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 2 1 0 39 1 6 8 0 6 105 41 1 8 44 1 11 1 8 11 105 37 25 2 23 43 56 38 53 26 52 24 7 10 19 23 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 154 values pushed */
32 27 2 15 0 6 0 15 6 128 0 1 11 10 11 1 10 128 35 1 16 19 12 19 16 12 128 57 40 47 3 7 9 21 9 7 21 128 13 1 4 21 22 21 4 22 128 0 3 22 5 22 3 5 128 36 31 28 18 17 14 46 7 5 20 22 5 20 126 39 1 6 8 0 6 89 41 1 8 44 1 11 1 8 11 105 37 25 23 2 4 0 43 56 38 53 26 52 24 7 10 19 0 10 105 59 45 49 3 12 58 42 48 3 9 7 12 9 105 33 1 19 29 1 21 4 19 21 105 54 30 51 3 22 3 20 22 89 54 30 51 3 22 22 20 97 55 34 50 3 20 22 20 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 146 values pushed */
270 270 258 258 246 246 234 234 211 211 196 196 180 180 168 168 152 152 136 136 86 86 74 74 62 62 45 45 270 291 270 290 286 284 278 276 258 269 258 268 264 262 246 257 246 256 252 250 234 245 234 244 240 238 233 232 231 230 211 229 211 228 222 220 217 216 215 214 196 210 196 209 203 201 195 194 193 192 180 191 180 190 186 184 168 179 168 178 174 172 152 167 152 166 160 158 136 151 136 150 144 142 135 134 132 131 129 128 126 125 124 122 116 114 86 107 86 106 102 100 94 92 74 85 74 84 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 60 6 27
CALL[ ]	/* CallFunction */";
};
width = 3236;
}
);
note = uniE004;
},
{
glyphname = uniE005;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(546,48,o),
(552,48,qs),
(559,48,o),
(564,53,qs),
(741,229,ls),
(800,288,o),
(800,367,qs),
(800,386,ls),
(800,393,o),
(803,399,o),
(809,401,qs),
(857,418,o),
(919,499,o),
(919,550,qs),
(919,594,o),
(877,667,o),
(805,710,o),
(760,710,qs),
(707,710,o),
(630,653,o),
(610,603,qs),
(606,592,o),
(594,584,o),
(585,584,qs),
(520,584,ls),
(509,584,o),
(497,592,o),
(493,603,qs),
(473,653,o),
(396,710,o),
(343,710,qs),
(298,710,o),
(226,667,o),
(184,594,o),
(184,550,qs),
(184,499,o),
(246,418,o),
(294,401,qs),
(300,399,o),
(303,393,o),
(303,386,qs),
(303,367,ls),
(303,294,o),
(362,229,q),
(539,53,l)
);
},
{
closed = 1;
nodes = (
(515,0,ls),
(521,0,o),
(528,7,o),
(528,12,qs),
(528,17,o),
(524,21,qs),
(321,222,ls),
(285,258,o),
(232,258,qs),
(198,258,o),
(138,227,o),
(100,168,o),
(100,130,qs),
(100,97,o),
(133,37,o),
(193,0,o),
(232,0,qs)
);
},
{
closed = 1;
nodes = (
(303,456,o),
(245,514,o),
(245,554,qs),
(245,594,o),
(303,651,o),
(343,651,qs),
(383,651,o),
(440,594,o),
(440,554,qs),
(440,514,o),
(383,456,o),
(343,456,qs)
);
},
{
closed = 1;
nodes = (
(372,484,o),
(412,525,o),
(412,554,qs),
(412,568,o),
(405,584,q),
(403,576,o),
(389,566,o),
(381,566,qs),
(370,566,o),
(355,581,o),
(355,592,qs),
(355,600,o),
(365,614,o),
(373,616,q),
(357,623,o),
(343,623,qs),
(314,623,o),
(273,583,o),
(273,554,qs),
(273,525,o),
(314,484,o),
(343,484,qs)
);
},
{
closed = 1;
nodes = (
(871,0,ls),
(910,0,o),
(970,37,o),
(1003,97,o),
(1003,130,qs),
(1003,168,o),
(965,227,o),
(905,258,o),
(871,258,qs),
(818,258,o),
(782,222,qs),
(579,21,ls),
(575,17,o),
(575,12,qs),
(575,7,o),
(582,0,o),
(588,0,qs)
);
},
{
closed = 1;
nodes = (
(721,456,o),
(663,514,o),
(663,554,qs),
(663,594,o),
(721,651,o),
(761,651,qs),
(801,651,o),
(858,594,o),
(858,554,qs),
(858,514,o),
(801,456,o),
(761,456,qs)
);
},
{
closed = 1;
nodes = (
(790,484,o),
(830,525,o),
(830,554,qs),
(830,568,o),
(823,584,q),
(821,576,o),
(807,566,o),
(799,566,qs),
(788,566,o),
(773,581,o),
(773,592,qs),
(773,600,o),
(783,614,o),
(791,616,q),
(775,623,o),
(761,623,qs),
(732,623,o),
(691,583,o),
(691,554,qs),
(691,525,o),
(732,484,o),
(761,484,qs)
);
},
{
closed = 1;
nodes = (
(1255,0,l),
(1255,214,l),
(1460,0,l),
(1606,0,l),
(1362,260,l),
(1591,511,l),
(1447,511,l),
(1255,309,l),
(1255,700,l),
(1141,700,l),
(1141,0,l)
);
},
{
closed = 1;
nodes = (
(1927,-12,o),
(2052,57,o),
(2123,179,o),
(2123,254,qs),
(2123,329,o),
(2052,452,o),
(1927,523,o),
(1849,523,qs),
(1771,523,o),
(1647,452,o),
(1576,329,o),
(1576,254,qs),
(1576,179,o),
(1647,57,o),
(1771,-12,o),
(1849,-12,qs)
);
},
{
closed = 1;
nodes = (
(1800,95,o),
(1729,137,o),
(1690,210,o),
(1690,254,qs),
(1690,298,o),
(1729,371,o),
(1800,413,o),
(1847,413,qs),
(1894,413,o),
(1966,371,o),
(2006,298,o),
(2006,254,qs),
(2006,210,o),
(1966,137,o),
(1894,95,o),
(1847,95,qs)
);
},
{
closed = 1;
nodes = (
(1773,566,o),
(1814,607,o),
(1814,637,qs),
(1814,667,o),
(1774,707,o),
(1743,707,qs),
(1713,707,o),
(1672,665,o),
(1672,636,qs),
(1672,607,o),
(1713,566,o),
(1743,566,qs)
);
},
{
closed = 1;
nodes = (
(1984,566,o),
(2025,607,o),
(2025,637,qs),
(2025,667,o),
(1985,707,o),
(1954,707,qs),
(1924,707,o),
(1883,665,o),
(1883,636,qs),
(1883,607,o),
(1924,566,o),
(1954,566,qs)
);
},
{
closed = 1;
nodes = (
(2303,0,l),
(2303,700,l),
(2193,700,l),
(2193,0,l)
);
},
{
closed = 1;
nodes = (
(2618,95,o),
(2546,140,o),
(2508,213,o),
(2508,254,qs),
(2508,297,o),
(2549,370,o),
(2621,413,o),
(2667,413,qs),
(2735,413,o),
(2823,323,o),
(2823,254,qs),
(2823,209,o),
(2783,136,o),
(2712,95,o),
(2667,95,qs)
);
},
{
closed = 1;
nodes = (
(2763,-12,o),
(2877,60,o),
(2939,182,o),
(2939,254,qs),
(2939,331,o),
(2873,454,o),
(2759,523,o),
(2688,523,qs),
(2631,523,o),
(2543,478,o),
(2508,431,q),
(2508,700,l),
(2398,700,l),
(2398,0,l),
(2508,0,l),
(2508,80,l),
(2543,33,o),
(2631,-12,o),
(2688,-12,qs)
);
},
{
closed = 1;
nodes = (
(3122,0,l),
(3122,511,l),
(3009,511,l),
(3009,0,l)
);
},
{
closed = 1;
nodes = (
(3095,566,o),
(3136,607,o),
(3136,637,qs),
(3136,667,o),
(3096,707,o),
(3065,707,qs),
(3035,707,o),
(2994,665,o),
(2994,636,qs),
(2994,607,o),
(3035,566,o),
(3065,566,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
132 81 2 1 8 240 1 24 7 152 149 3 3 4 24 155 1 25 4 235 1 3 25 5 76 141 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 149 values pushed */
35 30 2 18 0 6 0 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 13 1 6 8 0 6 89 40 28 26 2 4 0 53 41 50 29 49 5 27 9 0 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 150 values pushed */
35 30 2 18 26 6 26 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 2 1 0 13 1 6 8 0 6 105 40 28 2 26 53 41 50 29 49 5 27 9 26 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 149 values pushed */
35 30 2 18 0 6 0 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 13 1 6 8 0 6 89 40 28 26 2 4 0 53 41 50 29 49 5 27 9 0 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 130 values pushed */
256 256 233 233 218 218 202 202 190 190 174 174 158 158 125 125 113 113 74 74 62 62 45 45 256 267 256 266 262 260 255 254 253 252 233 251 233 250 244 242 239 238 237 236 218 232 218 231 225 223 217 216 215 214 202 213 202 212 208 206 190 201 190 200 196 194 174 189 174 188 182 180 158 173 158 172 166 164 157 156 154 153 151 150 148 147 125 146 125 145 138 137 131 129 113 124 113 123 119 117 112 110 104 102 74 95 74 94 87 86 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 54 6 27
CALL[ ]	/* CallFunction */";
};
width = 3236;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(546,48,o),
(552,48,qs),
(559,48,o),
(564,53,qs),
(741,229,ls),
(800,288,o),
(800,367,qs),
(800,386,ls),
(800,393,o),
(803,399,o),
(809,401,qs),
(857,418,o),
(919,499,o),
(919,550,qs),
(919,594,o),
(877,667,o),
(805,710,o),
(760,710,qs),
(707,710,o),
(630,653,o),
(610,603,qs),
(606,592,o),
(594,584,o),
(585,584,qs),
(520,584,ls),
(509,584,o),
(497,592,o),
(493,603,qs),
(473,653,o),
(396,710,o),
(343,710,qs),
(298,710,o),
(226,667,o),
(184,594,o),
(184,550,qs),
(184,499,o),
(246,418,o),
(294,401,qs),
(300,399,o),
(303,393,o),
(303,386,qs),
(303,367,ls),
(303,294,o),
(362,229,q),
(539,53,l)
);
},
{
closed = 1;
nodes = (
(515,0,ls),
(521,0,o),
(528,7,o),
(528,12,qs),
(528,17,o),
(524,21,qs),
(321,222,ls),
(285,258,o),
(232,258,qs),
(198,258,o),
(138,227,o),
(100,168,o),
(100,130,qs),
(100,97,o),
(133,37,o),
(193,0,o),
(232,0,qs)
);
},
{
closed = 1;
nodes = (
(303,456,o),
(245,514,o),
(245,554,qs),
(245,594,o),
(303,651,o),
(343,651,qs),
(383,651,o),
(440,594,o),
(440,554,qs),
(440,514,o),
(383,456,o),
(343,456,qs)
);
},
{
closed = 1;
nodes = (
(372,484,o),
(412,525,o),
(412,554,qs),
(412,568,o),
(405,584,q),
(403,576,o),
(389,566,o),
(381,566,qs),
(370,566,o),
(355,581,o),
(355,592,qs),
(355,600,o),
(365,614,o),
(373,616,q),
(357,623,o),
(343,623,qs),
(314,623,o),
(273,583,o),
(273,554,qs),
(273,525,o),
(314,484,o),
(343,484,qs)
);
},
{
closed = 1;
nodes = (
(871,0,ls),
(910,0,o),
(970,37,o),
(1003,97,o),
(1003,130,qs),
(1003,168,o),
(965,227,o),
(905,258,o),
(871,258,qs),
(818,258,o),
(782,222,qs),
(579,21,ls),
(575,17,o),
(575,12,qs),
(575,7,o),
(582,0,o),
(588,0,qs)
);
},
{
closed = 1;
nodes = (
(721,456,o),
(663,514,o),
(663,554,qs),
(663,594,o),
(721,651,o),
(761,651,qs),
(801,651,o),
(858,594,o),
(858,554,qs),
(858,514,o),
(801,456,o),
(761,456,qs)
);
},
{
closed = 1;
nodes = (
(790,484,o),
(830,525,o),
(830,554,qs),
(830,568,o),
(823,584,q),
(821,576,o),
(807,566,o),
(799,566,qs),
(788,566,o),
(773,581,o),
(773,592,qs),
(773,600,o),
(783,614,o),
(791,616,q),
(775,623,o),
(761,623,qs),
(732,623,o),
(691,583,o),
(691,554,qs),
(691,525,o),
(732,484,o),
(761,484,qs)
);
},
{
closed = 1;
nodes = (
(1255,0,l),
(1255,214,l),
(1460,0,l),
(1606,0,l),
(1362,260,l),
(1591,511,l),
(1447,511,l),
(1255,309,l),
(1255,700,l),
(1141,700,l),
(1141,0,l)
);
},
{
closed = 1;
nodes = (
(1927,-12,o),
(2052,57,o),
(2123,179,o),
(2123,254,qs),
(2123,329,o),
(2052,452,o),
(1927,523,o),
(1849,523,qs),
(1771,523,o),
(1647,452,o),
(1576,329,o),
(1576,254,qs),
(1576,179,o),
(1647,57,o),
(1771,-12,o),
(1849,-12,qs)
);
},
{
closed = 1;
nodes = (
(1800,95,o),
(1729,137,o),
(1690,210,o),
(1690,254,qs),
(1690,298,o),
(1729,371,o),
(1800,413,o),
(1847,413,qs),
(1894,413,o),
(1966,371,o),
(2006,298,o),
(2006,254,qs),
(2006,210,o),
(1966,137,o),
(1894,95,o),
(1847,95,qs)
);
},
{
closed = 1;
nodes = (
(1773,566,o),
(1814,607,o),
(1814,637,qs),
(1814,667,o),
(1774,707,o),
(1743,707,qs),
(1713,707,o),
(1672,665,o),
(1672,636,qs),
(1672,607,o),
(1713,566,o),
(1743,566,qs)
);
},
{
closed = 1;
nodes = (
(1984,566,o),
(2025,607,o),
(2025,637,qs),
(2025,667,o),
(1985,707,o),
(1954,707,qs),
(1924,707,o),
(1883,665,o),
(1883,636,qs),
(1883,607,o),
(1924,566,o),
(1954,566,qs)
);
},
{
closed = 1;
nodes = (
(2303,0,l),
(2303,700,l),
(2193,700,l),
(2193,0,l)
);
},
{
closed = 1;
nodes = (
(2618,95,o),
(2546,140,o),
(2508,213,o),
(2508,254,qs),
(2508,297,o),
(2549,370,o),
(2621,413,o),
(2667,413,qs),
(2735,413,o),
(2823,323,o),
(2823,254,qs),
(2823,209,o),
(2783,136,o),
(2712,95,o),
(2667,95,qs)
);
},
{
closed = 1;
nodes = (
(2763,-12,o),
(2877,60,o),
(2939,182,o),
(2939,254,qs),
(2939,331,o),
(2873,454,o),
(2759,523,o),
(2688,523,qs),
(2631,523,o),
(2543,478,o),
(2508,431,q),
(2508,700,l),
(2398,700,l),
(2398,0,l),
(2508,0,l),
(2508,80,l),
(2543,33,o),
(2631,-12,o),
(2688,-12,qs)
);
},
{
closed = 1;
nodes = (
(3122,0,l),
(3122,511,l),
(3009,511,l),
(3009,0,l)
);
},
{
closed = 1;
nodes = (
(3095,566,o),
(3136,607,o),
(3136,637,qs),
(3136,667,o),
(3096,707,o),
(3065,707,qs),
(3035,707,o),
(2994,665,o),
(2994,636,qs),
(2994,607,o),
(3035,566,o),
(3065,566,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
132 81 2 1 8 240 1 24 7 152 149 3 3 4 24 155 1 25 4 235 1 3 25 5 76 141 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 149 values pushed */
35 30 2 18 0 6 0 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 13 1 6 8 0 6 89 40 28 26 2 4 0 53 41 50 29 49 5 27 9 0 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 150 values pushed */
35 30 2 18 26 6 26 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 2 1 0 13 1 6 8 0 6 105 40 28 2 26 53 41 50 29 49 5 27 9 26 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 149 values pushed */
35 30 2 18 0 6 0 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 13 1 6 8 0 6 89 40 28 26 2 4 0 53 41 50 29 49 5 27 9 0 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 130 values pushed */
256 256 233 233 218 218 202 202 190 190 174 174 158 158 125 125 113 113 74 74 62 62 45 45 256 267 256 266 262 260 255 254 253 252 233 251 233 250 244 242 239 238 237 236 218 232 218 231 225 223 217 216 215 214 202 213 202 212 208 206 190 201 190 200 196 194 174 189 174 188 182 180 158 173 158 172 166 164 157 156 154 153 151 150 148 147 125 146 125 145 138 137 131 129 113 124 113 123 119 117 112 110 104 102 74 95 74 94 87 86 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 54 6 27
CALL[ ]	/* CallFunction */";
};
width = 3236;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(546,48,o),
(552,48,qs),
(559,48,o),
(564,53,qs),
(741,229,ls),
(800,288,o),
(800,367,qs),
(800,386,ls),
(800,393,o),
(803,399,o),
(809,401,qs),
(857,418,o),
(919,499,o),
(919,550,qs),
(919,594,o),
(877,667,o),
(805,710,o),
(760,710,qs),
(707,710,o),
(630,653,o),
(610,603,qs),
(606,592,o),
(594,584,o),
(585,584,qs),
(520,584,ls),
(509,584,o),
(497,592,o),
(493,603,qs),
(473,653,o),
(396,710,o),
(343,710,qs),
(298,710,o),
(226,667,o),
(184,594,o),
(184,550,qs),
(184,499,o),
(246,418,o),
(294,401,qs),
(300,399,o),
(303,393,o),
(303,386,qs),
(303,367,ls),
(303,294,o),
(362,229,q),
(539,53,l)
);
},
{
closed = 1;
nodes = (
(515,0,ls),
(521,0,o),
(528,7,o),
(528,12,qs),
(528,17,o),
(524,21,qs),
(321,222,ls),
(285,258,o),
(232,258,qs),
(198,258,o),
(138,227,o),
(100,168,o),
(100,130,qs),
(100,97,o),
(133,37,o),
(193,0,o),
(232,0,qs)
);
},
{
closed = 1;
nodes = (
(303,456,o),
(245,514,o),
(245,554,qs),
(245,594,o),
(303,651,o),
(343,651,qs),
(383,651,o),
(440,594,o),
(440,554,qs),
(440,514,o),
(383,456,o),
(343,456,qs)
);
},
{
closed = 1;
nodes = (
(372,484,o),
(412,525,o),
(412,554,qs),
(412,568,o),
(405,584,q),
(403,576,o),
(389,566,o),
(381,566,qs),
(370,566,o),
(355,581,o),
(355,592,qs),
(355,600,o),
(365,614,o),
(373,616,q),
(357,623,o),
(343,623,qs),
(314,623,o),
(273,583,o),
(273,554,qs),
(273,525,o),
(314,484,o),
(343,484,qs)
);
},
{
closed = 1;
nodes = (
(871,0,ls),
(910,0,o),
(970,37,o),
(1003,97,o),
(1003,130,qs),
(1003,168,o),
(965,227,o),
(905,258,o),
(871,258,qs),
(818,258,o),
(782,222,qs),
(579,21,ls),
(575,17,o),
(575,12,qs),
(575,7,o),
(582,0,o),
(588,0,qs)
);
},
{
closed = 1;
nodes = (
(721,456,o),
(663,514,o),
(663,554,qs),
(663,594,o),
(721,651,o),
(761,651,qs),
(801,651,o),
(858,594,o),
(858,554,qs),
(858,514,o),
(801,456,o),
(761,456,qs)
);
},
{
closed = 1;
nodes = (
(790,484,o),
(830,525,o),
(830,554,qs),
(830,568,o),
(823,584,q),
(821,576,o),
(807,566,o),
(799,566,qs),
(788,566,o),
(773,581,o),
(773,592,qs),
(773,600,o),
(783,614,o),
(791,616,q),
(775,623,o),
(761,623,qs),
(732,623,o),
(691,583,o),
(691,554,qs),
(691,525,o),
(732,484,o),
(761,484,qs)
);
},
{
closed = 1;
nodes = (
(1255,0,l),
(1255,214,l),
(1460,0,l),
(1606,0,l),
(1362,260,l),
(1591,511,l),
(1447,511,l),
(1255,309,l),
(1255,700,l),
(1141,700,l),
(1141,0,l)
);
},
{
closed = 1;
nodes = (
(1927,-12,o),
(2052,57,o),
(2123,179,o),
(2123,254,qs),
(2123,329,o),
(2052,452,o),
(1927,523,o),
(1849,523,qs),
(1771,523,o),
(1647,452,o),
(1576,329,o),
(1576,254,qs),
(1576,179,o),
(1647,57,o),
(1771,-12,o),
(1849,-12,qs)
);
},
{
closed = 1;
nodes = (
(1800,95,o),
(1729,137,o),
(1690,210,o),
(1690,254,qs),
(1690,298,o),
(1729,371,o),
(1800,413,o),
(1847,413,qs),
(1894,413,o),
(1966,371,o),
(2006,298,o),
(2006,254,qs),
(2006,210,o),
(1966,137,o),
(1894,95,o),
(1847,95,qs)
);
},
{
closed = 1;
nodes = (
(1773,566,o),
(1814,607,o),
(1814,637,qs),
(1814,667,o),
(1774,707,o),
(1743,707,qs),
(1713,707,o),
(1672,665,o),
(1672,636,qs),
(1672,607,o),
(1713,566,o),
(1743,566,qs)
);
},
{
closed = 1;
nodes = (
(1984,566,o),
(2025,607,o),
(2025,637,qs),
(2025,667,o),
(1985,707,o),
(1954,707,qs),
(1924,707,o),
(1883,665,o),
(1883,636,qs),
(1883,607,o),
(1924,566,o),
(1954,566,qs)
);
},
{
closed = 1;
nodes = (
(2303,0,l),
(2303,700,l),
(2193,700,l),
(2193,0,l)
);
},
{
closed = 1;
nodes = (
(2618,95,o),
(2546,140,o),
(2508,213,o),
(2508,254,qs),
(2508,297,o),
(2549,370,o),
(2621,413,o),
(2667,413,qs),
(2735,413,o),
(2823,323,o),
(2823,254,qs),
(2823,209,o),
(2783,136,o),
(2712,95,o),
(2667,95,qs)
);
},
{
closed = 1;
nodes = (
(2763,-12,o),
(2877,60,o),
(2939,182,o),
(2939,254,qs),
(2939,331,o),
(2873,454,o),
(2759,523,o),
(2688,523,qs),
(2631,523,o),
(2543,478,o),
(2508,431,q),
(2508,700,l),
(2398,700,l),
(2398,0,l),
(2508,0,l),
(2508,80,l),
(2543,33,o),
(2631,-12,o),
(2688,-12,qs)
);
},
{
closed = 1;
nodes = (
(3122,0,l),
(3122,511,l),
(3009,511,l),
(3009,0,l)
);
},
{
closed = 1;
nodes = (
(3095,566,o),
(3136,607,o),
(3136,637,qs),
(3136,667,o),
(3096,707,o),
(3065,707,qs),
(3035,707,o),
(2994,665,o),
(2994,636,qs),
(2994,607,o),
(3035,566,o),
(3065,566,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
132 81 2 1 8 240 1 24 7 152 149 3 3 4 24 155 1 25 4 235 1 3 25 5 76 141 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 149 values pushed */
35 30 2 18 0 6 0 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 13 1 6 8 0 6 89 40 28 26 2 4 0 53 41 50 29 49 5 27 9 0 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 150 values pushed */
35 30 2 18 26 6 26 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 2 1 0 13 1 6 8 0 6 105 40 28 2 26 53 41 50 29 49 5 27 9 26 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 149 values pushed */
35 30 2 18 0 6 0 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 13 1 6 8 0 6 89 40 28 26 2 4 0 53 41 50 29 49 5 27 9 0 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 130 values pushed */
256 256 233 233 218 218 202 202 190 190 174 174 158 158 125 125 113 113 74 74 62 62 45 45 256 267 256 266 262 260 255 254 253 252 233 251 233 250 244 242 239 238 237 236 218 232 218 231 225 223 217 216 215 214 202 213 202 212 208 206 190 201 190 200 196 194 174 189 174 188 182 180 158 173 158 172 166 164 157 156 154 153 151 150 148 147 125 146 125 145 138 137 131 129 113 124 113 123 119 117 112 110 104 102 74 95 74 94 87 86 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 54 6 27
CALL[ ]	/* CallFunction */";
};
width = 3236;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(546,48,o),
(552,48,qs),
(559,48,o),
(564,53,qs),
(741,229,ls),
(800,288,o),
(800,367,qs),
(800,386,ls),
(800,393,o),
(803,399,o),
(809,401,qs),
(857,418,o),
(919,499,o),
(919,550,qs),
(919,594,o),
(877,667,o),
(805,710,o),
(760,710,qs),
(707,710,o),
(630,653,o),
(610,603,qs),
(606,592,o),
(594,584,o),
(585,584,qs),
(520,584,ls),
(509,584,o),
(497,592,o),
(493,603,qs),
(473,653,o),
(396,710,o),
(343,710,qs),
(298,710,o),
(226,667,o),
(184,594,o),
(184,550,qs),
(184,499,o),
(246,418,o),
(294,401,qs),
(300,399,o),
(303,393,o),
(303,386,qs),
(303,367,ls),
(303,294,o),
(362,229,q),
(539,53,l)
);
},
{
closed = 1;
nodes = (
(515,0,ls),
(521,0,o),
(528,7,o),
(528,12,qs),
(528,17,o),
(524,21,qs),
(321,222,ls),
(285,258,o),
(232,258,qs),
(198,258,o),
(138,227,o),
(100,168,o),
(100,130,qs),
(100,97,o),
(133,37,o),
(193,0,o),
(232,0,qs)
);
},
{
closed = 1;
nodes = (
(303,456,o),
(245,514,o),
(245,554,qs),
(245,594,o),
(303,651,o),
(343,651,qs),
(383,651,o),
(440,594,o),
(440,554,qs),
(440,514,o),
(383,456,o),
(343,456,qs)
);
},
{
closed = 1;
nodes = (
(372,484,o),
(412,525,o),
(412,554,qs),
(412,568,o),
(405,584,q),
(403,576,o),
(389,566,o),
(381,566,qs),
(370,566,o),
(355,581,o),
(355,592,qs),
(355,600,o),
(365,614,o),
(373,616,q),
(357,623,o),
(343,623,qs),
(314,623,o),
(273,583,o),
(273,554,qs),
(273,525,o),
(314,484,o),
(343,484,qs)
);
},
{
closed = 1;
nodes = (
(871,0,ls),
(910,0,o),
(970,37,o),
(1003,97,o),
(1003,130,qs),
(1003,168,o),
(965,227,o),
(905,258,o),
(871,258,qs),
(818,258,o),
(782,222,qs),
(579,21,ls),
(575,17,o),
(575,12,qs),
(575,7,o),
(582,0,o),
(588,0,qs)
);
},
{
closed = 1;
nodes = (
(721,456,o),
(663,514,o),
(663,554,qs),
(663,594,o),
(721,651,o),
(761,651,qs),
(801,651,o),
(858,594,o),
(858,554,qs),
(858,514,o),
(801,456,o),
(761,456,qs)
);
},
{
closed = 1;
nodes = (
(790,484,o),
(830,525,o),
(830,554,qs),
(830,568,o),
(823,584,q),
(821,576,o),
(807,566,o),
(799,566,qs),
(788,566,o),
(773,581,o),
(773,592,qs),
(773,600,o),
(783,614,o),
(791,616,q),
(775,623,o),
(761,623,qs),
(732,623,o),
(691,583,o),
(691,554,qs),
(691,525,o),
(732,484,o),
(761,484,qs)
);
},
{
closed = 1;
nodes = (
(1255,0,l),
(1255,214,l),
(1460,0,l),
(1606,0,l),
(1362,260,l),
(1591,511,l),
(1447,511,l),
(1255,309,l),
(1255,700,l),
(1141,700,l),
(1141,0,l)
);
},
{
closed = 1;
nodes = (
(1927,-12,o),
(2052,57,o),
(2123,179,o),
(2123,254,qs),
(2123,329,o),
(2052,452,o),
(1927,523,o),
(1849,523,qs),
(1771,523,o),
(1647,452,o),
(1576,329,o),
(1576,254,qs),
(1576,179,o),
(1647,57,o),
(1771,-12,o),
(1849,-12,qs)
);
},
{
closed = 1;
nodes = (
(1800,95,o),
(1729,137,o),
(1690,210,o),
(1690,254,qs),
(1690,298,o),
(1729,371,o),
(1800,413,o),
(1847,413,qs),
(1894,413,o),
(1966,371,o),
(2006,298,o),
(2006,254,qs),
(2006,210,o),
(1966,137,o),
(1894,95,o),
(1847,95,qs)
);
},
{
closed = 1;
nodes = (
(1773,566,o),
(1814,607,o),
(1814,637,qs),
(1814,667,o),
(1774,707,o),
(1743,707,qs),
(1713,707,o),
(1672,665,o),
(1672,636,qs),
(1672,607,o),
(1713,566,o),
(1743,566,qs)
);
},
{
closed = 1;
nodes = (
(1984,566,o),
(2025,607,o),
(2025,637,qs),
(2025,667,o),
(1985,707,o),
(1954,707,qs),
(1924,707,o),
(1883,665,o),
(1883,636,qs),
(1883,607,o),
(1924,566,o),
(1954,566,qs)
);
},
{
closed = 1;
nodes = (
(2303,0,l),
(2303,700,l),
(2193,700,l),
(2193,0,l)
);
},
{
closed = 1;
nodes = (
(2618,95,o),
(2546,140,o),
(2508,213,o),
(2508,254,qs),
(2508,297,o),
(2549,370,o),
(2621,413,o),
(2667,413,qs),
(2735,413,o),
(2823,323,o),
(2823,254,qs),
(2823,209,o),
(2783,136,o),
(2712,95,o),
(2667,95,qs)
);
},
{
closed = 1;
nodes = (
(2763,-12,o),
(2877,60,o),
(2939,182,o),
(2939,254,qs),
(2939,331,o),
(2873,454,o),
(2759,523,o),
(2688,523,qs),
(2631,523,o),
(2543,478,o),
(2508,431,q),
(2508,700,l),
(2398,700,l),
(2398,0,l),
(2508,0,l),
(2508,80,l),
(2543,33,o),
(2631,-12,o),
(2688,-12,qs)
);
},
{
closed = 1;
nodes = (
(3122,0,l),
(3122,511,l),
(3009,511,l),
(3009,0,l)
);
},
{
closed = 1;
nodes = (
(3095,566,o),
(3136,607,o),
(3136,637,qs),
(3136,667,o),
(3096,707,o),
(3065,707,qs),
(3035,707,o),
(2994,665,o),
(2994,636,qs),
(2994,607,o),
(3035,566,o),
(3065,566,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
132 81 2 1 8 240 1 24 7 152 149 3 3 4 24 155 1 25 4 235 1 3 25 5 76 141 90 2 1 1 75
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 149 values pushed */
35 30 2 18 0 6 0 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 13 1 6 8 0 6 89 40 28 26 2 4 0 53 41 50 29 49 5 27 9 0 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 150 values pushed */
35 30 2 18 26 6 26 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 2 1 0 13 1 6 8 0 6 105 40 28 2 26 53 41 50 29 49 5 27 9 26 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 149 values pushed */
35 30 2 18 0 6 0 18 6 128 0 1 8 27 8 1 27 128 16 1 9 27 22 27 9 22 128 38 1 19 22 10 22 19 10 128 45 14 43 3 7 10 24 10 7 24 128 11 1 4 24 25 24 4 25 128 0 3 25 5 25 3 5 128 39 34 31 21 20 12 42 7 5 23 25 5 23 126 13 1 6 8 0 6 89 40 28 26 2 4 0 53 41 50 29 49 5 27 9 0 27 105 15 1 8 46 17 44 3 10 7 8 10 105 36 1 22 32 1 24 4 22 24 105 51 33 48 3 25 3 23 25 89 51 33 48 3 25 25 23 97 52 37 47 3 23 25 23 81
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 130 values pushed */
256 256 233 233 218 218 202 202 190 190 174 174 158 158 125 125 113 113 74 74 62 62 45 45 256 267 256 266 262 260 255 254 253 252 233 251 233 250 244 242 239 238 237 236 218 232 218 231 225 223 217 216 215 214 202 213 202 212 208 206 190 201 190 200 196 194 174 189 174 188 182 180 158 173 158 172 166 164 157 156 154 153 151 150 148 147 125 146 125 145 138 137 131 129 113 124 113 123 119 117 112 110 104 102 74 95 74 94 87 86 80 78 62 73 62 72 68 66 45 61 45 59 40 46 36 52 44 54 6 27
CALL[ ]	/* CallFunction */";
};
width = 3236;
}
);
note = uniE005;
},
{
glyphname = REbackwards;
kernRight = REbackwards;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(29,0,l),
(156,0,l),
(332,303,l),
(429,303,l),
(429,0,l),
(535,0,l),
(535,700,l),
(310,700,ls),
(199,700,o),
(73,598,o),
(73,502,qs),
(73,353,o),
(227,321,q)
);
},
{
closed = 1;
nodes = (
(240,393,o),
(181,447,o),
(181,502,qs),
(181,556,o),
(241,611,o),
(313,611,qs),
(429,611,l),
(429,393,l),
(313,393,ls)
);
},
{
closed = 1;
nodes = (
(1105,0,l),
(1105,700,l),
(664,700,l),
(664,611,l),
(999,611,l),
(999,414,l),
(709,414,l),
(709,326,l),
(999,326,l),
(999,89,l),
(664,89,l),
(664,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
12 1 2 7 1 76 0 8 0 7 2 8 7 103 12 1 5 0 2 6 5 2 103 9 1 4 4 0 95 10 1 0 0 33 77 0 6 6 1 95 11 3 2 1 1 34 1 78 13 13 33 32 31 30 29 28 27 26 25 24 23 22 13 21 13 20 35 17 17 17 35 13 8 27
CALL[ ]	/* CallFunction */";
};
width = 1184;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(35,0,l),
(139,0,l),
(319,310,l),
(435,310,l),
(435,0,l),
(519,0,l),
(519,700,l),
(312,700,ls),
(200,700,o),
(78,602,o),
(78,505,qs),
(78,354,o),
(236,326,q)
);
},
{
closed = 1;
nodes = (
(232,381,o),
(164,441,o),
(164,505,qs),
(164,570,o),
(232,630,o),
(314,630,qs),
(435,630,l),
(435,381,l),
(314,381,ls)
);
},
{
closed = 1;
nodes = (
(1100,0,l),
(1100,700,l),
(667,700,l),
(667,631,l),
(1016,631,l),
(1016,404,l),
(711,404,l),
(711,336,l),
(1016,336,l),
(1016,69,l),
(667,69,l),
(667,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
12 1 2 7 1 76 0 8 0 7 2 8 7 103 12 1 5 0 2 6 5 2 103 9 1 4 4 0 95 10 1 0 0 33 77 0 6 6 1 95 11 3 2 1 1 34 1 78 13 13 33 32 31 30 29 28 27 26 25 24 23 22 13 21 13 20 35 17 17 17 35 13 8 27
CALL[ ]	/* CallFunction */";
};
width = 1193;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(22,0,l),
(173,0,l),
(345,295,l),
(423,295,l),
(423,0,l),
(551,0,l),
(551,700,l),
(308,700,ls),
(198,700,o),
(68,594,o),
(68,498,qs),
(68,425,o),
(146,333,o),
(217,316,q)
);
},
{
closed = 1;
nodes = (
(248,404,o),
(198,453,o),
(198,498,qs),
(198,542,o),
(249,591,o),
(311,591,qs),
(423,591,l),
(423,404,l),
(311,404,ls)
);
},
{
closed = 1;
nodes = (
(1109,0,l),
(1109,700,l),
(660,700,l),
(660,591,l),
(981,591,l),
(981,424,l),
(706,424,l),
(706,315,l),
(981,315,l),
(981,109,l),
(660,109,l),
(660,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
13 1 2 5 1 76
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
13 1 7 5 1 76
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
8 12 2 5 7 1 2 6 5 2 103 9 1 4 4 0 95 10 1 0 0 33 77 0 6 6 1 95 11 3 2 1 1 34 1 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 8 0 7 2 8 7 103 12 1 5 0 2 6 5 2 103 9 1 4 4 0 95 10 1 0 0 33 77 0 6 6 1 95 11 3 2 1 1 34 1 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
14 14 34 33 32 31 30 29 28 27 26 25 24 23 14 22 14 21 35 17 17 17 36 13 8 27
CALL[ ]	/* CallFunction */";
};
width = 1174;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(26,0,l),
(162,0,l),
(336,300,l),
(427,300,l),
(427,0,l),
(540,0,l),
(540,700,l),
(309,700,ls),
(198,700,o),
(71,596,o),
(71,500,qs),
(71,425,o),
(151,335,o),
(223,319,q)
);
},
{
closed = 1;
nodes = (
(243,396,o),
(187,449,o),
(187,500,qs),
(187,551,o),
(243,604,o),
(312,604,qs),
(427,604,l),
(427,396,l),
(312,396,ls)
);
},
{
closed = 1;
nodes = (
(1106,0,l),
(1106,700,l),
(662,700,l),
(662,604,l),
(993,604,l),
(993,417,l),
(708,417,l),
(708,322,l),
(993,322,l),
(993,96,l),
(662,96,l),
(662,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
13 1 2 7 1 76 0 8 0 7 2 8 7 103 12 1 5 0 2 6 5 2 103 9 1 4 4 0 95 10 1 0 0 33 77 0 6 6 1 95 11 3 2 1 1 34 1 78 14 14 34 33 32 31 30 29 28 27 26 25 24 23 14 22 14 21 35 17 17 17 36 13 8 27
CALL[ ]	/* CallFunction */";
};
width = 1180;
}
);
note = REbackwards;
},
{
glyphname = RethinkWordmark;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3258,0,l),
(3258,488,l),
(3587,0,l),
(3715,0,l),
(3715,700,l),
(3587,700,l),
(3587,211,l),
(3258,700,l),
(3130,700,l),
(3130,0,l)
);
},
{
closed = 1;
nodes = (
(22,0,l),
(173,0,l),
(345,295,l),
(423,295,l),
(423,0,l),
(551,0,l),
(551,700,l),
(308,700,ls),
(200,700,o),
(133,647,qs),
(68,594,o),
(68,498,qs),
(68,426,o),
(107,379,qs),
(146,333,o),
(217,316,q)
);
},
{
closed = 1;
nodes = (
(249,404,o),
(223,428,qs),
(198,455,o),
(198,498,qs),
(198,542,o),
(224,566,qs),
(249,591,o),
(311,591,qs),
(423,591,l),
(423,404,l),
(311,404,ls)
);
},
{
closed = 1;
nodes = (
(1185,0,l),
(1185,700,l),
(736,700,l),
(736,591,l),
(1057,591,l),
(1057,424,l),
(782,424,l),
(782,315,l),
(1057,315,l),
(1057,109,l),
(736,109,l),
(736,0,l)
);
},
{
closed = 1;
nodes = (
(1680,0,l),
(1680,591,l),
(1885,591,l),
(1885,700,l),
(1348,700,l),
(1348,591,l),
(1552,591,l),
(1552,0,l)
);
},
{
closed = 1;
nodes = (
(2170,0,l),
(2170,316,l),
(2484,316,l),
(2484,0,l),
(2612,0,l),
(2612,700,l),
(2484,700,l),
(2484,425,l),
(2170,425,l),
(2170,700,l),
(2042,700,l),
(2042,0,l)
);
},
{
closed = 1;
nodes = (
(2935,0,l),
(2935,700,l),
(2807,700,l),
(2807,0,l)
);
},
{
closed = 1;
nodes = (
(4037,0,l),
(4037,261,l),
(4108,339,l),
(4310,0,l),
(4461,0,l),
(4194,433,l),
(4438,700,l),
(4277,700,l),
(4037,431,l),
(4037,700,l),
(3909,700,l),
(3909,0,l)
);
},
{
closed = 1;
nodes = (
(4611,700,l),
(4644,700,l),
(4679,765,l),
(4697,765,l),
(4697,700,l),
(4725,700,l),
(4725,855,l),
(4671,855,ls),
(4645,855,o),
(4623,830,o),
(4623,811,qs),
(4623,783,o),
(4652,772,q)
);
},
{
closed = 1;
nodes = (
(4718,629,o),
(4783,667,o),
(4821,733,o),
(4821,772,qs),
(4821,811,o),
(4783,877,o),
(4717,916,o),
(4678,916,qs),
(4635,916,o),
(4570,874,o),
(4534,808,o),
(4534,772,qs),
(4534,734,o),
(4572,668,o),
(4638,629,o),
(4678,629,qs)
);
},
{
closed = 1;
nodes = (
(4646,652,o),
(4591,685,o),
(4558,740,o),
(4558,772,qs),
(4558,822,o),
(4629,892,o),
(4678,892,qs),
(4728,892,o),
(4798,822,o),
(4798,772,qs),
(4798,723,o),
(4728,652,o),
(4678,652,qs)
);
},
{
closed = 1;
nodes = (
(4666,789,o),
(4650,800,o),
(4650,811,qs),
(4650,832,o),
(4675,832,qs),
(4697,832,l),
(4697,789,l),
(4678,789,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
97 1 34 41 78 75 7 3 12 8 81 25 2 11 9 82 2 2 10 6 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 110 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 112 35 1 33 0 40 33 112 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 111 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 112 35 1 33 0 40 33 0 126 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 112 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 33 126 35 1 33 0 40 33 0 126 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 94 values pushed */
127 127 114 114 98 98 26 26 127 134 127 133 130 128 114 126 114 125 120 118 98 113 98 112 106 104 96 95 94 93 92 91 90 88 84 83 80 79 77 76 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 26 36 26 35 35 17 17 17 39 18 17 18 16 46 8 31
CALL[ ]	/* CallFunction */";
};
width = 4877;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(3258,0,l),
(3258,488,l),
(3587,0,l),
(3715,0,l),
(3715,700,l),
(3587,700,l),
(3587,211,l),
(3258,700,l),
(3130,700,l),
(3130,0,l)
);
},
{
closed = 1;
nodes = (
(22,0,l),
(173,0,l),
(345,295,l),
(423,295,l),
(423,0,l),
(551,0,l),
(551,700,l),
(308,700,ls),
(200,700,o),
(133,647,qs),
(68,594,o),
(68,498,qs),
(68,426,o),
(107,379,qs),
(146,333,o),
(217,316,q)
);
},
{
closed = 1;
nodes = (
(249,404,o),
(223,428,qs),
(198,455,o),
(198,498,qs),
(198,542,o),
(224,566,qs),
(249,591,o),
(311,591,qs),
(423,591,l),
(423,404,l),
(311,404,ls)
);
},
{
closed = 1;
nodes = (
(1185,0,l),
(1185,700,l),
(736,700,l),
(736,591,l),
(1057,591,l),
(1057,424,l),
(782,424,l),
(782,315,l),
(1057,315,l),
(1057,109,l),
(736,109,l),
(736,0,l)
);
},
{
closed = 1;
nodes = (
(1680,0,l),
(1680,591,l),
(1885,591,l),
(1885,700,l),
(1348,700,l),
(1348,591,l),
(1552,591,l),
(1552,0,l)
);
},
{
closed = 1;
nodes = (
(2170,0,l),
(2170,316,l),
(2484,316,l),
(2484,0,l),
(2612,0,l),
(2612,700,l),
(2484,700,l),
(2484,425,l),
(2170,425,l),
(2170,700,l),
(2042,700,l),
(2042,0,l)
);
},
{
closed = 1;
nodes = (
(2935,0,l),
(2935,700,l),
(2807,700,l),
(2807,0,l)
);
},
{
closed = 1;
nodes = (
(4037,0,l),
(4037,261,l),
(4108,339,l),
(4310,0,l),
(4461,0,l),
(4194,433,l),
(4438,700,l),
(4277,700,l),
(4037,431,l),
(4037,700,l),
(3909,700,l),
(3909,0,l)
);
},
{
closed = 1;
nodes = (
(4611,700,l),
(4644,700,l),
(4679,765,l),
(4697,765,l),
(4697,700,l),
(4725,700,l),
(4725,855,l),
(4671,855,ls),
(4645,855,o),
(4623,830,o),
(4623,811,qs),
(4623,783,o),
(4652,772,q)
);
},
{
closed = 1;
nodes = (
(4718,629,o),
(4783,667,o),
(4821,733,o),
(4821,772,qs),
(4821,811,o),
(4783,877,o),
(4717,916,o),
(4678,916,qs),
(4635,916,o),
(4570,874,o),
(4534,808,o),
(4534,772,qs),
(4534,734,o),
(4572,668,o),
(4638,629,o),
(4678,629,qs)
);
},
{
closed = 1;
nodes = (
(4646,652,o),
(4591,685,o),
(4558,740,o),
(4558,772,qs),
(4558,822,o),
(4629,892,o),
(4678,892,qs),
(4728,892,o),
(4798,822,o),
(4798,772,qs),
(4798,723,o),
(4728,652,o),
(4678,652,qs)
);
},
{
closed = 1;
nodes = (
(4666,789,o),
(4650,800,o),
(4650,811,qs),
(4650,832,o),
(4675,832,qs),
(4697,832,l),
(4697,789,l),
(4678,789,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
97 1 34 41 78 75 7 3 12 8 81 25 2 11 9 82 2 2 10 6 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 105 values pushed */
35 1 33 34 0 40 33 114 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 45 1 41 0 34 33 41 34 103 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 106 values pushed */
35 1 33 34 0 34 33 0 128 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 45 1 41 0 34 33 41 34 103 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 94 values pushed */
127 127 114 114 98 98 26 26 127 134 127 133 130 128 114 126 114 125 120 118 98 113 98 112 106 104 96 95 94 93 92 91 90 88 84 83 80 79 77 76 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 26 36 26 35 35 17 17 17 39 18 17 18 16 46 8 31
CALL[ ]	/* CallFunction */";
};
width = 4877;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(3258,0,l),
(3258,488,l),
(3587,0,l),
(3715,0,l),
(3715,700,l),
(3587,700,l),
(3587,211,l),
(3258,700,l),
(3130,700,l),
(3130,0,l)
);
},
{
closed = 1;
nodes = (
(22,0,l),
(173,0,l),
(345,295,l),
(423,295,l),
(423,0,l),
(551,0,l),
(551,700,l),
(308,700,ls),
(200,700,o),
(133,647,qs),
(68,594,o),
(68,498,qs),
(68,426,o),
(107,379,qs),
(146,333,o),
(217,316,q)
);
},
{
closed = 1;
nodes = (
(249,404,o),
(223,428,qs),
(198,455,o),
(198,498,qs),
(198,542,o),
(224,566,qs),
(249,591,o),
(311,591,qs),
(423,591,l),
(423,404,l),
(311,404,ls)
);
},
{
closed = 1;
nodes = (
(1185,0,l),
(1185,700,l),
(736,700,l),
(736,591,l),
(1057,591,l),
(1057,424,l),
(782,424,l),
(782,315,l),
(1057,315,l),
(1057,109,l),
(736,109,l),
(736,0,l)
);
},
{
closed = 1;
nodes = (
(1680,0,l),
(1680,591,l),
(1885,591,l),
(1885,700,l),
(1348,700,l),
(1348,591,l),
(1552,591,l),
(1552,0,l)
);
},
{
closed = 1;
nodes = (
(2170,0,l),
(2170,316,l),
(2484,316,l),
(2484,0,l),
(2612,0,l),
(2612,700,l),
(2484,700,l),
(2484,425,l),
(2170,425,l),
(2170,700,l),
(2042,700,l),
(2042,0,l)
);
},
{
closed = 1;
nodes = (
(2935,0,l),
(2935,700,l),
(2807,700,l),
(2807,0,l)
);
},
{
closed = 1;
nodes = (
(4037,0,l),
(4037,261,l),
(4108,339,l),
(4310,0,l),
(4461,0,l),
(4194,433,l),
(4438,700,l),
(4277,700,l),
(4037,431,l),
(4037,700,l),
(3909,700,l),
(3909,0,l)
);
},
{
closed = 1;
nodes = (
(4611,700,l),
(4644,700,l),
(4679,765,l),
(4697,765,l),
(4697,700,l),
(4725,700,l),
(4725,855,l),
(4671,855,ls),
(4645,855,o),
(4623,830,o),
(4623,811,qs),
(4623,783,o),
(4652,772,q)
);
},
{
closed = 1;
nodes = (
(4718,629,o),
(4783,667,o),
(4821,733,o),
(4821,772,qs),
(4821,811,o),
(4783,877,o),
(4717,916,o),
(4678,916,qs),
(4635,916,o),
(4570,874,o),
(4534,808,o),
(4534,772,qs),
(4534,734,o),
(4572,668,o),
(4638,629,o),
(4678,629,qs)
);
},
{
closed = 1;
nodes = (
(4646,652,o),
(4591,685,o),
(4558,740,o),
(4558,772,qs),
(4558,822,o),
(4629,892,o),
(4678,892,qs),
(4728,892,o),
(4798,822,o),
(4798,772,qs),
(4798,723,o),
(4728,652,o),
(4678,652,qs)
);
},
{
closed = 1;
nodes = (
(4666,789,o),
(4650,800,o),
(4650,811,qs),
(4650,832,o),
(4675,832,qs),
(4697,832,l),
(4697,789,l),
(4678,789,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
97 1 34 41 78 75 7 3 9 8 81 25 2 6 9 82 2 2 10 6 4 76
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
97 1 34 41 78 75 7 3 21 8 81 1 24 9 82 2 2 10 6 4 76 25 1 24 1 75
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
97 1 34 41 78 75 7 3 12 8 81 25 2 11 9 82 2 2 10 6 4 76
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 104 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 112 35 1 33 0 40 33 112 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 12 42 3 9 24 11 2 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 105 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 112 35 1 33 0 40 33 0 126 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 12 42 3 9 24 11 2 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 111 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 112 35 1 33 0 40 33 0 126 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 0 21 0 24 6 21 24 103 12 42 2 9 11 1 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 111 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 112 35 1 33 0 40 33 0 126 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 112 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 33 126 35 1 33 0 40 33 0 126 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 94 values pushed */
127 127 114 114 98 98 26 26 127 134 127 133 130 128 114 126 114 125 120 118 98 113 98 112 106 104 96 95 94 93 92 91 90 88 84 83 80 79 77 76 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 26 36 26 35 35 17 17 17 39 18 17 18 16 46 8 31
CALL[ ]	/* CallFunction */";
};
width = 4877;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(3258,0,l),
(3258,488,l),
(3587,0,l),
(3715,0,l),
(3715,700,l),
(3587,700,l),
(3587,211,l),
(3258,700,l),
(3130,700,l),
(3130,0,l)
);
},
{
closed = 1;
nodes = (
(22,0,l),
(173,0,l),
(345,295,l),
(423,295,l),
(423,0,l),
(551,0,l),
(551,700,l),
(308,700,ls),
(200,700,o),
(133,647,qs),
(68,594,o),
(68,498,qs),
(68,426,o),
(107,379,qs),
(146,333,o),
(217,316,q)
);
},
{
closed = 1;
nodes = (
(249,404,o),
(223,428,qs),
(198,455,o),
(198,498,qs),
(198,542,o),
(224,566,qs),
(249,591,o),
(311,591,qs),
(423,591,l),
(423,404,l),
(311,404,ls)
);
},
{
closed = 1;
nodes = (
(1185,0,l),
(1185,700,l),
(736,700,l),
(736,591,l),
(1057,591,l),
(1057,424,l),
(782,424,l),
(782,315,l),
(1057,315,l),
(1057,109,l),
(736,109,l),
(736,0,l)
);
},
{
closed = 1;
nodes = (
(1680,0,l),
(1680,591,l),
(1885,591,l),
(1885,700,l),
(1348,700,l),
(1348,591,l),
(1552,591,l),
(1552,0,l)
);
},
{
closed = 1;
nodes = (
(2170,0,l),
(2170,316,l),
(2484,316,l),
(2484,0,l),
(2612,0,l),
(2612,700,l),
(2484,700,l),
(2484,425,l),
(2170,425,l),
(2170,700,l),
(2042,700,l),
(2042,0,l)
);
},
{
closed = 1;
nodes = (
(2935,0,l),
(2935,700,l),
(2807,700,l),
(2807,0,l)
);
},
{
closed = 1;
nodes = (
(4037,0,l),
(4037,261,l),
(4108,339,l),
(4310,0,l),
(4461,0,l),
(4194,433,l),
(4438,700,l),
(4277,700,l),
(4037,431,l),
(4037,700,l),
(3909,700,l),
(3909,0,l)
);
},
{
closed = 1;
nodes = (
(4611,700,l),
(4644,700,l),
(4679,765,l),
(4697,765,l),
(4697,700,l),
(4725,700,l),
(4725,855,l),
(4671,855,ls),
(4645,855,o),
(4623,830,o),
(4623,811,qs),
(4623,783,o),
(4652,772,q)
);
},
{
closed = 1;
nodes = (
(4718,629,o),
(4783,667,o),
(4821,733,o),
(4821,772,qs),
(4821,811,o),
(4783,877,o),
(4717,916,o),
(4678,916,qs),
(4635,916,o),
(4570,874,o),
(4534,808,o),
(4534,772,qs),
(4534,734,o),
(4572,668,o),
(4638,629,o),
(4678,629,qs)
);
},
{
closed = 1;
nodes = (
(4646,652,o),
(4591,685,o),
(4558,740,o),
(4558,772,qs),
(4558,822,o),
(4629,892,o),
(4678,892,qs),
(4728,892,o),
(4798,822,o),
(4798,772,qs),
(4798,723,o),
(4728,652,o),
(4678,652,qs)
);
},
{
closed = 1;
nodes = (
(4666,789,o),
(4650,800,o),
(4650,811,qs),
(4650,832,o),
(4675,832,qs),
(4697,832,l),
(4697,789,l),
(4678,789,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
97 1 34 41 78 75 7 3 12 8 81 25 2 11 9 82 2 2 10 6 4 76
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 110 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 112 35 1 33 0 40 33 112 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 111 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 112 35 1 33 0 40 33 0 126 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 112 values pushed */
45 1 41 40 34 40 41 34 128 0 34 33 40 34 33 126 35 1 33 0 40 33 0 126 0 36 0 38 32 36 38 105 0 32 0 40 41 32 40 105 44 1 39 43 1 37 8 39 37 105 21 1 12 24 1 11 6 12 11 103 42 1 9 0 6 10 9 6 103 18 16 13 3 8 8 0 95 29 28 26 22 20 17 14 4 1 9 0 0 33 77 0 10 10 2 95 31 30 27 25 23 19 15 7 5 3 10 2 2 34 2 78
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 94 values pushed */
127 127 114 114 98 98 26 26 127 134 127 133 130 128 114 126 114 125 120 118 98 113 98 112 106 104 96 95 94 93 92 91 90 88 84 83 80 79 77 76 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 26 36 26 35 35 17 17 17 39 18 17 18 16 46 8 31
CALL[ ]	/* CallFunction */";
};
width = 4877;
}
);
note = RethinkWordmark;
},
{
glyphname = Rlogobig;
lastChange = "2025-07-25 13:28:04 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(501,-12,o),
(668,85,o),
(765,252,o),
(765,350,qs),
(765,448,o),
(668,615,o),
(501,712,o),
(403,712,qs),
(305,712,o),
(138,615,o),
(41,448,o),
(41,350,qs),
(41,252,o),
(138,85,o),
(305,-12,o),
(403,-12,qs)
);
},
{
closed = 1;
nodes = (
(318,168,l),
(332,196,o),
(392,308,o),
(405,333,q),
(450,333,l),
(450,168,l),
(523,168,l),
(523,559,l),
(386,559,ls),
(320,559,o),
(263,493,o),
(263,447,qs),
(263,411,o),
(303,361,o),
(337,349,q),
(234,168,l)
);
},
{
closed = 1;
nodes = (
(321,47,o),
(182,129,o),
(100,268,o),
(100,350,qs),
(100,432,o),
(182,571,o),
(321,652,o),
(403,652,qs),
(485,652,o),
(624,571,o),
(705,432,o),
(705,350,qs),
(705,268,o),
(624,129,o),
(485,47,o),
(403,47,qs)
);
},
{
closed = 1;
nodes = (
(371,392,o),
(332,420,o),
(332,447,qs),
(332,473,o),
(367,501,o),
(395,501,qs),
(450,501,l),
(450,392,l),
(404,392,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
5 1 3 4 7 4 3 7 128 0 2 0 8 9 2 8 105 12 1 9 0 4 3 9 4 103 0 6 6 0 97 0 0 0 39 77 11 1 7 7 1 97 10 1 1 1 40 1 78 48 48 32 32 0 0 48 56 48 55 51 49 32 47 32 46 40 38 31 30 27 26 25 24 23 21 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 806;
},
{
layerId = "BF20E584-FC8B-4684-8793-6BFBAEEB9F40";
shapes = (
{
closed = 1;
nodes = (
(501,-12,o),
(668,85,o),
(765,252,o),
(765,350,qs),
(765,448,o),
(668,615,o),
(501,712,o),
(403,712,qs),
(305,712,o),
(138,615,o),
(41,448,o),
(41,350,qs),
(41,252,o),
(138,85,o),
(305,-12,o),
(403,-12,qs)
);
},
{
closed = 1;
nodes = (
(318,168,l),
(332,196,o),
(392,308,o),
(405,333,q),
(450,333,l),
(450,168,l),
(523,168,l),
(523,559,l),
(386,559,ls),
(320,559,o),
(263,493,o),
(263,447,qs),
(263,411,o),
(303,361,o),
(337,349,q),
(234,168,l)
);
},
{
closed = 1;
nodes = (
(321,47,o),
(182,129,o),
(100,268,o),
(100,350,qs),
(100,432,o),
(182,571,o),
(321,652,o),
(403,652,qs),
(485,652,o),
(624,571,o),
(705,432,o),
(705,350,qs),
(705,268,o),
(624,129,o),
(485,47,o),
(403,47,qs)
);
},
{
closed = 1;
nodes = (
(371,392,o),
(332,420,o),
(332,447,qs),
(332,473,o),
(367,501,o),
(395,501,qs),
(450,501,l),
(450,392,l),
(404,392,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
5 1 3 4 7 4 3 7 128 0 2 0 8 9 2 8 105 12 1 9 0 4 3 9 4 103 0 6 6 0 97 0 0 0 39 77 11 1 7 7 1 97 10 1 1 1 40 1 78 48 48 32 32 0 0 48 56 48 55 51 49 32 47 32 46 40 38 31 30 27 26 25 24 23 21 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 806;
},
{
layerId = "59E4F189-9048-43B1-80D4-C98F20AC972F";
shapes = (
{
closed = 1;
nodes = (
(501,-12,o),
(668,85,o),
(765,252,o),
(765,350,qs),
(765,448,o),
(668,615,o),
(501,712,o),
(403,712,qs),
(305,712,o),
(138,615,o),
(41,448,o),
(41,350,qs),
(41,252,o),
(138,85,o),
(305,-12,o),
(403,-12,qs)
);
},
{
closed = 1;
nodes = (
(318,168,l),
(332,196,o),
(392,308,o),
(405,333,q),
(450,333,l),
(450,168,l),
(523,168,l),
(523,559,l),
(386,559,ls),
(320,559,o),
(263,493,o),
(263,447,qs),
(263,411,o),
(303,361,o),
(337,349,q),
(234,168,l)
);
},
{
closed = 1;
nodes = (
(321,47,o),
(182,129,o),
(100,268,o),
(100,350,qs),
(100,432,o),
(182,571,o),
(321,652,o),
(403,652,qs),
(485,652,o),
(624,571,o),
(705,432,o),
(705,350,qs),
(705,268,o),
(624,129,o),
(485,47,o),
(403,47,qs)
);
},
{
closed = 1;
nodes = (
(371,392,o),
(332,420,o),
(332,447,qs),
(332,473,o),
(367,501,o),
(395,501,qs),
(450,501,l),
(450,392,l),
(404,392,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
5 1 3 4 7 4 3 7 128 0 2 0 8 9 2 8 105 12 1 9 0 4 3 9 4 103 0 6 6 0 97 0 0 0 39 77 11 1 7 7 1 97 10 1 1 1 40 1 78 48 48 32 32 0 0 48 56 48 55 51 49 32 47 32 46 40 38 31 30 27 26 25 24 23 21 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 806;
},
{
layerId = "8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6";
shapes = (
{
closed = 1;
nodes = (
(501,-12,o),
(668,85,o),
(765,252,o),
(765,350,qs),
(765,448,o),
(668,615,o),
(501,712,o),
(403,712,qs),
(305,712,o),
(138,615,o),
(41,448,o),
(41,350,qs),
(41,252,o),
(138,85,o),
(305,-12,o),
(403,-12,qs)
);
},
{
closed = 1;
nodes = (
(318,168,l),
(332,196,o),
(392,308,o),
(405,333,q),
(450,333,l),
(450,168,l),
(523,168,l),
(523,559,l),
(386,559,ls),
(320,559,o),
(263,493,o),
(263,447,qs),
(263,411,o),
(303,361,o),
(337,349,q),
(234,168,l)
);
},
{
closed = 1;
nodes = (
(321,47,o),
(182,129,o),
(100,268,o),
(100,350,qs),
(100,432,o),
(182,571,o),
(321,652,o),
(403,652,qs),
(485,652,o),
(624,571,o),
(705,432,o),
(705,350,qs),
(705,268,o),
(624,129,o),
(485,47,o),
(403,47,qs)
);
},
{
closed = 1;
nodes = (
(371,392,o),
(332,420,o),
(332,447,qs),
(332,473,o),
(367,501,o),
(395,501,qs),
(450,501,l),
(450,392,l),
(404,392,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
5 1 3 4 7 4 3 7 128 0 2 0 8 9 2 8 105 12 1 9 0 4 3 9 4 103 0 6 6 0 97 0 0 0 39 77 11 1 7 7 1 97 10 1 1 1 40 1 78 48 48 32 32 0 0 48 56 48 55 51 49 32 47 32 46 40 38 31 30 27 26 25 24 23 21 0 15 0 14 38 13 8 23
CALL[ ]	/* CallFunction */";
};
width = 806;
}
);
note = Rlogobig;
}
);
instances = (
{
instanceInterpolations = {
"BF20E584-FC8B-4684-8793-6BFBAEEB9F40" = 1;
};
name = Medium;
properties = (
{
key = postscriptFontName;
value = "KolbiSans-Medium";
},
{
key = postscriptFullNames;
values = (
{
language = ENG;
value = "Kolbi Sans Medium";
}
);
}
);
weightClass = 500;
}
);
kerningLTR = {
"BF20E584-FC8B-4684-8793-6BFBAEEB9F40" = {
"@MMK_L_A" = {
"@MMK_R_C" = -40;
"@MMK_R_T" = -79;
"@MMK_R_U" = -30;
"@MMK_R_V" = -97;
"@MMK_R_W" = -70;
"@MMK_R_Y" = -73;
"@MMK_R_a" = -20;
"@MMK_R_ampersand" = -5;
"@MMK_R_asterisk" = -91;
"@MMK_R_at" = -17;
"@MMK_R_backslash" = -60;
"@MMK_R_braceleft" = -57;
"@MMK_R_c" = -27;
"@MMK_R_f" = -17;
"@MMK_R_g" = -10;
"@MMK_R_hyphen" = -30;
"@MMK_R_multiply" = -21;
"@MMK_R_parenright" = -34;
"@MMK_R_plus" = -37;
"@MMK_R_question" = -39;
"@MMK_R_space" = -10;
"@MMK_R_t" = -42;
"@MMK_R_u" = -11;
"@MMK_R_v" = -51;
"@MMK_R_w" = -39;
"@MMK_R_y" = -60;
};
"@MMK_L_B" = {
"@MMK_R_A" = -12;
"@MMK_R_AE" = -37;
"@MMK_R_T" = -17;
"@MMK_R_V" = -20;
"@MMK_R_W" = -20;
"@MMK_R_Y" = -30;
"@MMK_R_y" = -10;
};
"@MMK_L_C" = {
"@MMK_R_A" = -17;
"@MMK_R_AE" = -20;
"@MMK_R_T" = -17;
"@MMK_R_W" = -5;
"@MMK_R_X" = -20;
"@MMK_R_Y" = -31;
"@MMK_R_parenright" = -30;
};
"@MMK_L_D" = {
"@MMK_R_A" = -50;
"@MMK_R_AE" = -49;
"@MMK_R_T" = -36;
"@MMK_R_V" = -27;
"@MMK_R_W" = -40;
"@MMK_R_X" = -47;
"@MMK_R_Y" = -49;
"@MMK_R_ampersand" = -5;
"@MMK_R_backslash" = -26;
"@MMK_R_braceright" = -31;
"@MMK_R_comma" = -40;
"@MMK_R_g" = -10;
"@MMK_R_parenright" = -67;
"@MMK_R_period" = -30;
"@MMK_R_slash" = -41;
"@MMK_R_underscore" = -43;
};
"@MMK_L_F" = {
"@MMK_R_A" = -71;
"@MMK_R_a" = -34;
"@MMK_R_c" = -21;
"@MMK_R_period" = -60;
"@MMK_R_s" = -20;
};
"@MMK_L_G" = {
"@MMK_R_W" = -10;
"@MMK_R_Y" = -40;
};
"@MMK_L_J" = {
"@MMK_R_A" = -30;
"@MMK_R_period" = -20;
};
"@MMK_L_K" = {
"@MMK_R_C" = -41;
"@MMK_R_a" = -22;
"@MMK_R_ampersand" = -10;
"@MMK_R_c" = -33;
"@MMK_R_guillemotleft" = -40;
"@MMK_R_hyphen" = -60;
"@MMK_R_plus" = -50;
"@MMK_R_question" = -14;
"@MMK_R_s" = -10;
"@MMK_R_t" = -21;
"@MMK_R_u" = -17;
"@MMK_R_v" = -30;
"@MMK_R_w" = -30;
"@MMK_R_y" = -50;
};
"@MMK_L_L" = {
"@MMK_R_C" = -65;
"@MMK_R_S" = -30;
"@MMK_R_T" = -111;
"@MMK_R_U" = -30;
"@MMK_R_V" = -120;
"@MMK_R_W" = -70;
"@MMK_R_Y" = -100;
"@MMK_R_asterisk" = -93;
"@MMK_R_backslash" = -40;
"@MMK_R_c" = -21;
"@MMK_R_hyphen" = -69;
"@MMK_R_percent" = -46;
"@MMK_R_plus" = -57;
"@MMK_R_question" = -29;
"@MMK_R_t" = -50;
"@MMK_R_uni018F" = -30;
"@MMK_R_uni02BA" = -60;
"@MMK_R_v" = -67;
"@MMK_R_w" = -30;
"@MMK_R_y" = -61;
};
"@MMK_L_Oslash" = {
"@MMK_R_period" = -34;
};
"@MMK_L_P" = {
"@MMK_R_A" = -88;
"@MMK_R_AE" = -134;
"@MMK_R_Y" = -12;
"@MMK_R_a" = -23;
"@MMK_R_c" = -29;
"@MMK_R_g" = -25;
"@MMK_R_period" = -70;
};
"@MMK_L_Q" = {
"@MMK_R_A" = -26;
"@MMK_R_T" = -35;
"@MMK_R_V" = -27;
"@MMK_R_W" = -40;
"@MMK_R_Y" = -47;
"@MMK_R_g" = -10;
"@MMK_R_u" = 3;
"@MMK_R_w" = 3;
};
"@MMK_L_R" = {
"@MMK_R_C" = -20;
"@MMK_R_T" = -15;
"@MMK_R_V" = -30;
"@MMK_R_W" = -30;
"@MMK_R_X" = -15;
"@MMK_R_Y" = -30;
"@MMK_R_a" = -14;
"@MMK_R_c" = -30;
"@MMK_R_g" = -5;
"@MMK_R_plus" = -17;
"@MMK_R_s" = -17;
};
"@MMK_L_S" = {
"@MMK_R_T" = -17;
"@MMK_R_V" = -20;
"@MMK_R_W" = -25;
"@MMK_R_Y" = -30;
};
"@MMK_L_T" = {
"@MMK_R_A" = -79;
"@MMK_R_AE" = -99;
"@MMK_R_C" = -35;
"@MMK_R_J" = -83;
"@MMK_R_S" = -15;
"@MMK_R_a" = -75;
"@MMK_R_ampersand" = -20;
"@MMK_R_at" = -97;
"@MMK_R_backslash" = 4;
"@MMK_R_braceleft" = -30;
"@MMK_R_c" = -90;
"@MMK_R_comma" = -80;
"@MMK_R_dotlessi" = -57;
"@MMK_R_exclamdown" = -47;
"@MMK_R_g" = -90;
"@MMK_R_hyphen" = -50;
"@MMK_R_ibreve" = 35;
"@MMK_R_multiply" = -60;
"@MMK_R_p" = -50;
"@MMK_R_period" = -80;
"@MMK_R_plus" = -59;
"@MMK_R_question" = 20;
"@MMK_R_questiondown" = -97;
"@MMK_R_s" = -90;
"@MMK_R_semicolon" = -51;
"@MMK_R_slash" = -61;
"@MMK_R_t" = -34;
"@MMK_R_u" = -50;
"@MMK_R_underscore" = -60;
"@MMK_R_v" = -60;
"@MMK_R_w" = -53;
"@MMK_R_x" = -47;
"@MMK_R_y" = -60;
"@MMK_R_z" = -60;
};
"@MMK_L_Thorn" = {
"@MMK_R_A" = -49;
"@MMK_R_T" = -74;
"@MMK_R_V" = -49;
"@MMK_R_W" = -40;
"@MMK_R_Y" = -69;
"@MMK_R_period" = -57;
};
"@MMK_L_U" = {
"@MMK_R_A" = -30;
"@MMK_R_AE" = -49;
"@MMK_R_g" = -10;
"@MMK_R_period" = -20;
"@MMK_R_slash" = -30;
"@MMK_R_underscore" = -40;
};
"@MMK_L_V" = {
"@MMK_R_A" = -85;
"@MMK_R_AE" = -126;
"@MMK_R_C" = -27;
"@MMK_R_J" = -60;
"@MMK_R_S" = -30;
"@MMK_R_a" = -55;
"@MMK_R_ampersand" = -60;
"@MMK_R_at" = -91;
"@MMK_R_backslash" = 6;
"@MMK_R_c" = -75;
"@MMK_R_colon" = -30;
"@MMK_R_comma" = -71;
"@MMK_R_dotlessi" = -29;
"@MMK_R_exclamdown" = -31;
"@MMK_R_g" = -65;
"@MMK_R_hyphen" = -39;
"@MMK_R_multiply" = -69;
"@MMK_R_period" = -80;
"@MMK_R_plus" = -57;
"@MMK_R_s" = -57;
"@MMK_R_slash" = -79;
"@MMK_R_t" = -20;
"@MMK_R_u" = -12;
"@MMK_R_underscore" = -99;
"@MMK_R_v" = -17;
};
"@MMK_L_W" = {
"@MMK_R_A" = -80;
"@MMK_R_AE" = -97;
"@MMK_R_C" = -42;
"@MMK_R_J" = -40;
"@MMK_R_Oslash" = -20;
"@MMK_R_S" = -25;
"@MMK_R_a" = -65;
"@MMK_R_ampersand" = -50;
"@MMK_R_at" = -80;
"@MMK_R_braceleft" = -30;
"@MMK_R_c" = -85;
"@MMK_R_comma" = -60;
"@MMK_R_dotlessi" = -17;
"@MMK_R_exclamdown" = -30;
"@MMK_R_g" = -60;
"@MMK_R_hyphen" = -39;
"@MMK_R_i" = -20;
"@MMK_R_multiply" = -43;
"@MMK_R_period" = -70;
"@MMK_R_plus" = -57;
"@MMK_R_s" = -45;
"@MMK_R_semicolon" = -31;
"@MMK_R_slash" = -60;
"@MMK_R_u" = -35;
"@MMK_R_underscore" = -70;
"@MMK_R_v" = -17;
};
"@MMK_L_X" = {
"@MMK_R_C" = -47;
"@MMK_R_a" = -21;
"@MMK_R_c" = -31;
"@MMK_R_s" = -17;
"@MMK_R_u" = -23;
"@MMK_R_w" = -30;
"@MMK_R_y" = -40;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -70;
"@MMK_R_AE" = -129;
"@MMK_R_C" = -49;
"@MMK_R_J" = -81;
"@MMK_R_Oslash" = -49;
"@MMK_R_S" = -40;
"@MMK_R_a" = -73;
"@MMK_R_ampersand" = -30;
"@MMK_R_at" = -110;
"@MMK_R_braceleft" = -50;
"@MMK_R_c" = -87;
"@MMK_R_colon" = -31;
"@MMK_R_comma" = -64;
"@MMK_R_dotlessi" = -39;
"@MMK_R_exclamdown" = -31;
"@MMK_R_g" = -81;
"@MMK_R_hyphen" = -59;
"@MMK_R_multiply" = -60;
"@MMK_R_period" = -83;
"@MMK_R_plus" = -71;
"@MMK_R_questiondown" = -89;
"@MMK_R_s" = -70;
"@MMK_R_semicolon" = -36;
"@MMK_R_slash" = -61;
"@MMK_R_t" = -30;
"@MMK_R_u" = -27;
"@MMK_R_underscore" = -70;
"@MMK_R_uni02BA" = 39;
"@MMK_R_v" = -42;
"@MMK_R_w" = -17;
"@MMK_R_y" = -20;
"@MMK_R_z" = -20;
};
"@MMK_L_Z" = {
"@MMK_R_C" = -20;
};
"@MMK_L_a" = {
"@MMK_R_asterisk" = -23;
"@MMK_R_backslash" = -40;
"@MMK_R_registered" = -35;
"@MMK_R_uni02BA" = -50;
"@MMK_R_v" = -10;
"@MMK_R_y" = -15;
};
"@MMK_L_aacute" = {
"@MMK_R_asterisk" = -33;
"@MMK_R_backslash" = -41;
"@MMK_R_c" = -12;
"@MMK_R_registered" = -35;
"@MMK_R_t" = -14;
"@MMK_R_v" = -20;
"@MMK_R_w" = -10;
"@MMK_R_y" = -15;
"@MMK_R_z" = 8;
};
"@MMK_L_ae" = {
"@MMK_R_Y" = -80;
"@MMK_R_asterisk" = -23;
"@MMK_R_backslash" = -51;
"@MMK_R_question" = -20;
"@MMK_R_registered" = -35;
"@MMK_R_t" = -17;
"@MMK_R_uni02BA" = -43;
"@MMK_R_v" = -20;
"@MMK_R_w" = -20;
"@MMK_R_x" = -23;
"@MMK_R_y" = -20;
};
"@MMK_L_ampersand" = {
"@MMK_R_C" = -3;
"@MMK_R_T" = -43;
"@MMK_R_V" = -51;
"@MMK_R_W" = -31;
"@MMK_R_Y" = -61;
"@MMK_R_percent" = -23;
"@MMK_R_uni02BA" = -46;
"@MMK_R_w" = -3;
"@MMK_R_y" = -3;
};
"@MMK_L_asterisk" = {
"@MMK_R_A" = -91;
"@MMK_R_AE" = -113;
"@MMK_R_a" = -14;
"@MMK_R_c" = -23;
"@MMK_R_s" = -29;
};
"@MMK_L_at" = {
"@MMK_R_A" = -45;
"@MMK_R_AE" = -60;
"@MMK_R_T" = -57;
"@MMK_R_V" = -60;
"@MMK_R_W" = -41;
"@MMK_R_Y" = -89;
"@MMK_R_percent" = -40;
"@MMK_R_period" = -30;
"@MMK_R_uni02BA" = -49;
"@MMK_R_w" = -17;
"@MMK_R_y" = -20;
};
"@MMK_L_b" = {
"@MMK_R_T" = -90;
"@MMK_R_V" = -75;
"@MMK_R_asterisk" = -34;
"@MMK_R_backslash" = -79;
"@MMK_R_braceright" = -50;
"@MMK_R_g" = -5;
"@MMK_R_parenright" = -41;
"@MMK_R_question" = -30;
"@MMK_R_registered" = -35;
"@MMK_R_slash" = -11;
"@MMK_R_t" = -20;
"@MMK_R_uni02BA" = -43;
"@MMK_R_v" = -25;
"@MMK_R_w" = -19;
"@MMK_R_x" = -21;
"@MMK_R_y" = -40;
};
"@MMK_L_backslash" = {
"@MMK_R_C" = -17;
"@MMK_R_T" = -7;
"@MMK_R_V" = -60;
"@MMK_R_W" = -57;
"@MMK_R_Y" = -70;
"@MMK_R_c" = -14;
"@MMK_R_hyphen" = -30;
"@MMK_R_uni02BA" = -91;
};
"@MMK_L_braceleft" = {
"@MMK_R_C" = -31;
"@MMK_R_c" = -50;
};
"@MMK_L_braceright" = {
"@MMK_R_A" = -57;
"@MMK_R_AE" = -67;
"@MMK_R_T" = -30;
"@MMK_R_W" = -30;
"@MMK_R_Y" = -50;
"@MMK_R_period" = -50;
};
"@MMK_L_c" = {
"@MMK_R_asterisk" = -23;
"@MMK_R_backslash" = -43;
"@MMK_R_parenright" = -4;
"@MMK_R_question" = -30;
"@MMK_R_registered" = -35;
"@MMK_R_t" = -10;
"@MMK_R_v" = -16;
};
"@MMK_L_colon" = {
"@MMK_R_V" = -30;
"@MMK_R_Y" = -31;
};
"@MMK_L_comma" = {
"@MMK_R_C" = -20;
"@MMK_R_T" = -80;
"@MMK_R_V" = -71;
"@MMK_R_W" = -51;
"@MMK_R_Y" = -74;
"@MMK_R_percent" = -44;
"@MMK_R_t" = -30;
"@MMK_R_w" = -30;
"@MMK_R_y" = -51;
};
"@MMK_L_dcaron" = {
"@MMK_R_b" = 80;
};
"@MMK_L_exclamdown" = {
"@MMK_R_T" = -47;
"@MMK_R_V" = -31;
"@MMK_R_W" = -30;
"@MMK_R_Y" = -31;
};
"@MMK_L_f" = {
"@MMK_R_a" = -20;
"@MMK_R_c" = -20;
"@MMK_R_g" = -40;
"@MMK_R_period" = -30;
"@MMK_R_s" = -19;
};
"@MMK_L_g" = {
"@MMK_R_c" = -8;
"@MMK_R_f" = 15;
"@MMK_R_j" = 20;
"@MMK_R_v" = 3;
};
"@MMK_L_germandbls" = {
"@MMK_R_c" = -12;
"@MMK_R_y" = -46;
};
"@MMK_L_greater" = {
"@MMK_R_period" = -60;
};
"@MMK_L_hyphen" = {
"@MMK_R_A" = -30;
"@MMK_R_T" = -50;
"@MMK_R_V" = -35;
"@MMK_R_W" = -40;
"@MMK_R_X" = -35;
"@MMK_R_Y" = -60;
"@MMK_R_backslash" = -49;
"@MMK_R_slash" = -49;
};
"@MMK_L_iacute" = {
"@MMK_R_uni02BA" = 17;
};
"@MMK_L_ibreve" = {
"@MMK_R_T" = 35;
};
"@MMK_L_k" = {
"@MMK_R_a" = -10;
"@MMK_R_c" = -36;
"@MMK_R_g" = -20;
"@MMK_R_s" = -29;
};
"@MMK_L_lslash" = {
"@MMK_R_t" = 10;
"@MMK_R_y" = 20;
"@MMK_R_z" = 15;
};
"@MMK_L_multiply" = {
"@MMK_R_A" = -21;
"@MMK_R_AE" = -52;
"@MMK_R_T" = -60;
"@MMK_R_V" = -69;
"@MMK_R_W" = -43;
"@MMK_R_Y" = -60;
"@MMK_R_y" = -17;
};
"@MMK_L_parenleft" = {
"@MMK_R_A" = -34;
"@MMK_R_C" = -67;
"@MMK_R_a" = -41;
"@MMK_R_c" = -41;
"@MMK_R_s" = -20;
"@MMK_R_t" = -17;
};
"@MMK_L_period" = {
"@MMK_R_C" = -30;
"@MMK_R_T" = -80;
"@MMK_R_U" = -20;
"@MMK_R_V" = -80;
"@MMK_R_W" = -70;
"@MMK_R_Y" = -83;
"@MMK_R_backslash" = -60;
"@MMK_R_braceleft" = -50;
"@MMK_R_less" = -60;
"@MMK_R_question" = -39;
"@MMK_R_v" = -40;
"@MMK_R_w" = -34;
"@MMK_R_y" = -40;
};
"@MMK_L_plus" = {
"@MMK_R_A" = -37;
"@MMK_R_T" = -59;
"@MMK_R_V" = -57;
"@MMK_R_W" = -57;
"@MMK_R_Y" = -71;
};
"@MMK_L_question" = {
"@MMK_R_A" = -70;
"@MMK_R_AE" = -99;
"@MMK_R_period" = -91;
};
"@MMK_L_questiondown" = {
"@MMK_R_T" = -59;
"@MMK_R_Y" = -59;
"@MMK_R_c" = -20;
"@MMK_R_percent" = -24;
"@MMK_R_z" = 20;
};
"@MMK_L_quotedblright" = {
"@MMK_R_J" = -66;
"@MMK_R_ampersand" = -51;
"@MMK_R_at" = -100;
"@MMK_R_s" = -43;
"@MMK_R_slash" = -119;
};
"@MMK_L_r" = {
"@MMK_R_c" = -19;
"@MMK_R_colon" = 17;
"@MMK_R_comma" = -31;
"@MMK_R_g" = -5;
"@MMK_R_period" = -40;
"@MMK_R_u" = 11;
};
"@MMK_L_s" = {
"@MMK_R_asterisk" = -37;
"@MMK_R_backslash" = -50;
"@MMK_R_parenright" = -3;
"@MMK_R_question" = -29;
"@MMK_R_registered" = -35;
"@MMK_R_t" = -22;
"@MMK_R_v" = -27;
"@MMK_R_w" = -19;
"@MMK_R_y" = -21;
};
"@MMK_L_semicolon" = {
"@MMK_R_T" = -49;
"@MMK_R_Y" = -3;
};
"@MMK_L_slash" = {
"@MMK_R_C" = -30;
"@MMK_R_T" = 20;
"@MMK_R_V" = 30;
"@MMK_R_W" = 3;
"@MMK_R_Y" = 21;
"@MMK_R_a" = -51;
"@MMK_R_c" = -47;
"@MMK_R_dotlessi" = -18;
"@MMK_R_g" = -33;
"@MMK_R_hyphen" = -64;
"@MMK_R_period" = -118;
"@MMK_R_s" = -30;
};
"@MMK_L_space" = {
"@MMK_R_T" = -35;
"@MMK_R_V" = -10;
"@MMK_R_W" = -10;
};
"@MMK_L_t" = {
"@MMK_R_c" = -14;
"@MMK_R_comma" = 52;
};
"@MMK_L_underscore" = {
"@MMK_R_C" = -43;
"@MMK_R_T" = -60;
"@MMK_R_U" = -40;
"@MMK_R_V" = -99;
"@MMK_R_W" = -70;
"@MMK_R_Y" = -70;
};
"@MMK_L_v" = {
"@MMK_R_A" = -50;
"@MMK_R_a" = -25;
"@MMK_R_c" = -25;
"@MMK_R_g" = -21;
"@MMK_R_period" = -40;
"@MMK_R_s" = -26;
"@MMK_R_t" = 3;
};
"@MMK_L_w" = {
"@MMK_R_a" = -18;
"@MMK_R_at" = -40;
"@MMK_R_c" = -19;
"@MMK_R_comma" = -30;
"@MMK_R_g" = -20;
"@MMK_R_period" = -34;
"@MMK_R_questiondown" = -26;
};
"@MMK_L_x" = {
"@MMK_R_a" = -3;
"@MMK_R_c" = -21;
};
"@MMK_L_y" = {
"@MMK_R_T" = -70;
"@MMK_R_a" = -31;
"@MMK_R_ampersand" = -3;
"@MMK_R_at" = -59;
"@MMK_R_c" = -47;
"@MMK_R_comma" = -61;
"@MMK_R_g" = -31;
"@MMK_R_multiply" = -17;
"@MMK_R_period" = -71;
"@MMK_R_questiondown" = -59;
"@MMK_R_s" = -29;
"@MMK_R_slash" = -40;
};
A = {
W = -80;
Wacute = -80;
Wcircumflex = -80;
Wdieresis = -80;
Wgrave = -80;
};
AE = {
ibreve = 39;
imacron = 51;
itilde = 33;
};
AEacute = {
ibreve = 39;
imacron = 51;
itilde = 33;
};
Aacute = {
asterisk = -91;
at = -17;
backslash = -60;
braceleft = -57;
f = -17;
multiply = -21;
parenright = -34;
plus = -37;
question = -39;
v = -51;
};
Abreve = {
asterisk = -91;
at = -17;
backslash = -60;
braceleft = -57;
f = -17;
multiply = -21;
parenright = -34;
plus = -37;
question = -39;
v = -51;
};
Acircumflex = {
asterisk = -91;
at = -17;
backslash = -60;
braceleft = -57;
f = -17;
multiply = -21;
parenright = -34;
plus = -37;
question = -39;
v = -51;
};
Adieresis = {
asterisk = -91;
at = -17;
backslash = -60;
braceleft = -57;
f = -17;
multiply = -21;
parenright = -34;
plus = -37;
question = -39;
v = -51;
};
Agrave = {
asterisk = -91;
at = -17;
backslash = -60;
braceleft = -57;
f = -17;
multiply = -21;
parenright = -34;
plus = -37;
question = -39;
v = -51;
};
Amacron = {
asterisk = -91;
at = -17;
backslash = -60;
braceleft = -57;
f = -17;
multiply = -21;
parenright = -34;
plus = -37;
question = -39;
v = -51;
};
Aogonek = {
asterisk = -91;
at = -17;
backslash = -60;
braceleft = -57;
f = -17;
multiply = -21;
parenright = -34;
plus = -37;
question = -39;
v = -51;
};
Aring = {
asterisk = -91;
at = -17;
backslash = -60;
braceleft = -57;
f = -17;
multiply = -21;
parenright = -34;
plus = -37;
question = -39;
v = -51;
};
Atilde = {
asterisk = -91;
at = -17;
backslash = -60;
braceleft = -57;
f = -17;
multiply = -21;
parenright = -34;
plus = -37;
question = -39;
v = -51;
};
B = {
X = -23;
imacron = 20;
};
C = {
imacron = 30;
itilde = 30;
};
Cacute = {
imacron = 30;
itilde = 30;
};
Ccaron = {
imacron = 30;
itilde = 30;
};
Ccedilla = {
imacron = 30;
itilde = 30;
};
Cdotaccent = {
imacron = 30;
itilde = 30;
};
E = {
imacron = 51;
itilde = 33;
};
Eacute = {
ibreve = 39;
imacron = 51;
itilde = 33;
};
Ebreve = {
ibreve = 39;
imacron = 51;
itilde = 33;
};
Ecaron = {
ibreve = 39;
imacron = 51;
itilde = 33;
};
Ecircumflex = {
ibreve = 39;
imacron = 51;
itilde = 33;
};
Edieresis = {
ibreve = 39;
imacron = 51;
itilde = 33;
};
Edotaccent = {
ibreve = 39;
imacron = 51;
itilde = 33;
};
Egrave = {
ibreve = 39;
imacron = 51;
itilde = 33;
};
Emacron = {
ibreve = 39;
imacron = 51;
itilde = 33;
};
Eogonek = {
ibreve = 39;
imacron = 51;
itilde = 33;
};
Euro = {
imacron = 30;
itilde = 30;
};
F = {
J = -57;
ampersand = -20;
at = -40;
comma = -60;
imacron = 70;
multiply = -20;
underscore = -40;
};
G = {
imacron = 20;
};
Gbreve = {
imacron = 20;
};
Gdotaccent = {
imacron = 20;
};
H = {
imacron = 40;
itilde = 4;
};
I = {
imacron = 40;
itilde = 4;
};
Iacute = {
imacron = 40;
itilde = 4;
};
Ibreve = {
imacron = 40;
itilde = 4;
};
Icircumflex = {
imacron = 40;
itilde = 4;
};
Idieresis = {
imacron = 40;
itilde = 4;
};
Idotaccent = {
imacron = 40;
itilde = 4;
};
Igrave = {
imacron = 40;
itilde = 4;
};
Imacron = {
imacron = 40;
itilde = 4;
};
Iogonek = {
imacron = 40;
itilde = 4;
};
Itilde = {
imacron = 40;
itilde = 4;
};
J = {
igrave = 0;
imacron = 61;
};
K = {
icircumflex = 0;
imacron = 60;
};
L = {
V = -75;
};
Lacute = {
V = -75;
};
Lcaron = {
V = -75;
};
Ldot = {
V = -75;
};
Lslash = {
V = -75;
};
M = {
imacron = 40;
itilde = 4;
};
N = {
imacron = 40;
itilde = 4;
};
Nacute = {
imacron = 40;
itilde = 4;
};
Ncaron = {
imacron = 40;
itilde = 4;
};
Ntilde = {
imacron = 40;
itilde = 4;
};
OE = {
ibreve = 39;
imacron = 51;
itilde = 33;
};
Oslash = {
igrave = 59;
imacron = 53;
slash = -41;
underscore = -40;
};
P = {
J = -77;
X = -30;
Z = -20;
Zacute = -20;
Zcaron = -20;
Zdotaccent = -20;
ampersand = -39;
at = -47;
comma = -83;
itilde = 40;
parenright = -30;
plus = -17;
slash = -79;
underscore = -77;
};
Q = {
Wacute = -34;
Wcircumflex = -34;
Wdieresis = -34;
Wgrave = -34;
X = -34;
at = -26;
};
R = {
imacron = 20;
itilde = 15;
};
Racute = {
imacron = 20;
itilde = 15;
};
Rcaron = {
imacron = 20;
itilde = 15;
};
S = {
imacron = 40;
itilde = 20;
};
Sacute = {
imacron = 40;
itilde = 20;
};
Scaron = {
imacron = 40;
itilde = 20;
};
Scedilla = {
imacron = 40;
itilde = 20;
};
Thorn = {
X = -70;
parenright = -39;
};
U = {
imacron = 45;
itilde = 20;
};
Uacute = {
imacron = 45;
itilde = 20;
};
Ubreve = {
imacron = 45;
itilde = 20;
};
Ucircumflex = {
imacron = 45;
itilde = 20;
};
Udieresis = {
imacron = 45;
itilde = 20;
};
Ugrave = {
imacron = 45;
itilde = 20;
};
Uhungarumlaut = {
imacron = 45;
itilde = 20;
};
Umacron = {
imacron = 45;
itilde = 20;
};
Uogonek = {
imacron = 45;
itilde = 20;
};
Uring = {
imacron = 45;
itilde = 20;
};
Utilde = {
imacron = 45;
itilde = 20;
};
V = {
imacron = 61;
};
W = {
ibreve = 40;
imacron = 71;
itilde = 40;
};
Wacute = {
ibreve = 40;
imacron = 71;
itilde = 40;
};
Wcircumflex = {
ibreve = 40;
imacron = 71;
itilde = 40;
};
Wdieresis = {
ibreve = 40;
imacron = 71;
itilde = 40;
};
Wgrave = {
ibreve = 40;
imacron = 71;
itilde = 40;
};
X = {
ampersand = -10;
at = -26;
ibreve = 30;
imacron = 50;
itilde = 20;
multiply = -39;
question = -21;
v = -30;
};
Y = {
ibreve = 40;
imacron = 63;
itilde = 20;
};
Yacute = {
ibreve = 40;
imacron = 63;
itilde = 20;
};
Ycircumflex = {
ibreve = 40;
imacron = 63;
itilde = 20;
};
Ydieresis = {
ibreve = 40;
imacron = 63;
itilde = 20;
};
Ygrave = {
ibreve = 40;
imacron = 63;
itilde = 20;
};
Z = {
imacron = 61;
itilde = 31;
};
Zacute = {
imacron = 61;
itilde = 31;
};
Zcaron = {
imacron = 61;
itilde = 31;
};
Zdotaccent = {
imacron = 61;
itilde = 31;
};
ampersand = {
asterisk = -38;
backslash = -43;
question = -40;
quotedblright = -8;
quoteright = -8;
v = -3;
};
asterisk = {
J = -69;
ampersand = -41;
at = -51;
exclam = -6;
imacron = 77;
itilde = 6;
questiondown = -90;
slash = -104;
underscore = -96;
};
at = {
X = -57;
asterisk = -33;
backslash = -50;
comma = -33;
greater = -49;
less = -30;
parenright = -69;
question = -30;
slash = -50;
underscore = -60;
};
b = {
lslash = 0;
};
backslash = {
backslash = -137;
comma = 57;
question = -30;
quotedblbase = 47;
quotedblleft = -77;
quotedblright = -70;
quoteleft = -77;
quoteright = -70;
quotesinglbase = 47;
underscore = 41;
};
bar = {
imacron = 40;
itilde = 4;
};
braceright = {
comma = -31;
};
bracketleft = {
imacron = 8;
};
bracketright = {
imacron = 60;
itilde = 23;
};
brokenbar = {
imacron = 40;
itilde = 4;
};
comma = {
backslash = -53;
v = -49;
};
d = {
imacron = 49;
};
dcaron = {
questiondown = -44;
};
dcroat = {
imacron = 81;
};
dollar = {
imacron = 40;
itilde = 20;
};
e = {
T = -90;
Tcaron = -90;
uni0162 = -90;
uni021A = -90;
};
eth = {
imacron = 30;
};
exclam = {
asterisk = -6;
igrave = 49;
imacron = 60;
};
f = {
at = -37;
ibreve = 30;
igrave = 40;
imacron = 60;
itilde = 33;
};
fl = {
imacron = 49;
};
g = {
lslash = 5;
};
gbreve = {
lslash = 5;
};
gdotaccent = {
lslash = 5;
};
germandbls = {
asterisk = -60;
v = -49;
};
greater = {
at = -67;
parenright = -59;
};
i = {
lslash = 10;
};
iacute = {
asterisk = 52;
b = 60;
backslash = 71;
braceright = 4;
bracketleft = 60;
bracketright = 8;
exclam = 49;
f = 40;
idieresis = 80;
imacron = 66;
itilde = 41;
k = 60;
lacute = 60;
lcaron = 60;
ldot = 60;
lslash = 57;
parenright = 8;
question = 67;
quotedblleft = 47;
quotedblright = 74;
quoteleft = 47;
quoteright = 74;
uni0137 = 60;
uni013C = 60;
};
ibreve = {
backslash = 60;
question = 31;
};
idieresis = {
b = 30;
f = 20;
h = 30;
i = 40;
j = 40;
k = 30;
};
imacron = {
B = 40;
D = 40;
Dcaron = 40;
E = 40;
Eacute = 40;
Ebreve = 40;
Ecaron = 40;
Ecircumflex = 40;
Edieresis = 40;
Edotaccent = 40;
Egrave = 40;
Emacron = 40;
Eogonek = 40;
F = 40;
H = 40;
I = 40;
Iacute = 40;
Ibreve = 40;
Icircumflex = 40;
Idieresis = 40;
Idotaccent = 40;
Igrave = 40;
Imacron = 40;
Itilde = 40;
K = 40;
L = 40;
Lacute = 40;
Lcaron = 40;
Ldot = 40;
M = 40;
N = 40;
Nacute = 40;
Ncaron = 40;
Ntilde = 40;
P = 40;
R = 40;
Racute = 40;
Rcaron = 40;
Thorn = 40;
asterisk = 77;
b = 60;
backslash = 73;
bar = 40;
bracketleft = 60;
bracketright = 8;
brokenbar = 40;
exclam = 60;
f = 4;
germandbls = 60;
k = 60;
l = 60;
lacute = 60;
lcaron = 60;
ldot = 60;
lslash = 60;
question = 63;
quotedblleft = 69;
quotedblright = 57;
quoteleft = 69;
quoteright = 57;
thorn = 60;
uni0136 = 40;
uni0137 = 60;
uni013B = 40;
uni013C = 60;
uni0145 = 40;
uni0156 = 40;
uni02B9 = 100;
uni02BA = 100;
uni1EBC = 40;
z = 41;
zacute = 41;
zcaron = 41;
zdotaccent = 41;
};
itilde = {
asterisk = 4;
b = 6;
bracketleft = 23;
f = 30;
j = 31;
k = 6;
l = 6;
lacute = 6;
lcaron = 6;
ldot = 6;
question = 40;
quotedblleft = 17;
quotedblright = 37;
quoteleft = 17;
quoteright = 37;
uni0137 = 6;
uni013C = 6;
uni02B9 = 61;
uni02BA = 61;
};
j = {
itilde = 31;
};
l = {
imacron = 49;
};
lacute = {
imacron = 49;
};
lcaron = {
questiondown = -44;
};
less = {
at = -40;
parenright = -40;
};
lslash = {
imacron = 60;
};
multiply = {
X = -39;
};
n = {
T = -75;
Tcaron = -75;
uni0162 = -75;
uni021A = -75;
};
o = {
lslash = 0;
};
oacute = {
lslash = 0;
};
obreve = {
lslash = 0;
};
ocircumflex = {
lslash = 0;
};
odieresis = {
lslash = 0;
};
ograve = {
lslash = 0;
};
ohungarumlaut = {
lslash = 0;
};
omacron = {
lslash = 0;
};
otilde = {
lslash = 0;
};
p = {
lslash = 0;
};
parenleft = {
ampersand = -40;
at = -39;
};
plus = {
slash = -47;
};
q = {
backslash = -39;
j = 26;
};
question = {
J = -49;
X = -20;
at = -57;
comma = -70;
ibreve = 31;
igrave = 40;
imacron = 60;
itilde = 41;
parenright = -54;
questiondown = -110;
quotedblbase = -40;
quotesinglbase = -40;
slash = -71;
underscore = -90;
};
questiondown = {
backslash = -31;
question = -39;
quotedblbase = 39;
quotesinglbase = 39;
v = -26;
};
quotedbl = {
ibreve = 37;
imacron = 57;
itilde = 29;
};
quotedblbase = {
backslash = -81;
question = -3;
};
quotedblleft = {
J = -80;
at = -89;
ibreve = 26;
imacron = 69;
itilde = 21;
questiondown = -81;
slash = -100;
};
quotedblright = {
ibreve = 37;
imacron = 57;
itilde = 29;
};
quoteleft = {
J = -80;
at = -89;
ibreve = 26;
imacron = 69;
itilde = 21;
questiondown = -81;
slash = -100;
};
quoteright = {
ibreve = 37;
imacron = 57;
itilde = 29;
};
quotesinglbase = {
backslash = -81;
question = -3;
};
quotesingle = {
ibreve = 37;
imacron = 57;
itilde = 29;
};
slash = {
B = 57;
D = 57;
Dcaron = 57;
E = 57;
Eacute = 57;
Ebreve = 57;
Ecaron = 57;
Ecircumflex = 57;
Edieresis = 57;
Edotaccent = 57;
Egrave = 57;
Emacron = 57;
Eogonek = 57;
F = 57;
H = 57;
I = 57;
Iacute = 57;
Ibreve = 57;
Icircumflex = 60;
Idieresis = 43;
Idotaccent = 57;
Igrave = 57;
Imacron = 63;
Itilde = 57;
J = -40;
K = 57;
L = 57;
Lacute = 57;
Lcaron = 57;
Ldot = 57;
M = 57;
N = 57;
Nacute = 57;
Ncaron = 57;
Ntilde = 57;
Oslash = -30;
P = 57;
R = 57;
Racute = 57;
Rcaron = 57;
Thorn = 57;
ampersand = -50;
asterisk = -6;
at = -96;
bar = 57;
brokenbar = 57;
comma = -60;
ibreve = 40;
icircumflex = 40;
idieresis = 33;
igrave = 70;
imacron = 73;
plus = -57;
questiondown = -61;
quotedblbase = -89;
quotesinglbase = -89;
slash = -120;
underscore = -149;
uni0136 = 57;
uni013B = 57;
uni0145 = 57;
uni0156 = 57;
uni1EBC = 57;
};
space = {
X = -15;
};
thorn = {
lslash = 0;
};
underscore = {
ampersand = -40;
asterisk = -96;
backslash = -166;
j = 8;
question = -49;
underscore = -120;
};
uni0122 = {
imacron = 20;
};
uni0123 = {
lslash = 5;
};
uni0136 = {
icircumflex = 0;
imacron = 60;
};
uni013B = {
V = -75;
};
uni013C = {
imacron = 49;
};
uni0145 = {
imacron = 40;
itilde = 4;
};
uni0156 = {
imacron = 20;
itilde = 15;
};
uni0218 = {
imacron = 40;
itilde = 20;
};
uni0259 = {
lslash = 0;
};
uni02B9 = {
J = -70;
at = -80;
imacron = 100;
itilde = 61;
};
uni02BA = {
J = -70;
at = -80;
imacron = 100;
itilde = 61;
};
uni1EBC = {
ibreve = 39;
imacron = 51;
itilde = 33;
};
uni1EF8 = {
ibreve = 40;
imacron = 63;
itilde = 20;
};
v = {
ampersand = -19;
at = -49;
comma = -50;
f = 20;
questiondown = -47;
};
z = {
imacron = 40;
};
zacute = {
imacron = 40;
};
zcaron = {
imacron = 40;
};
zdotaccent = {
imacron = 40;
};
};
m01 = {
"@MMK_L_A" = {
"@MMK_R_C" = -40;
"@MMK_R_N" = -8;
"@MMK_R_S" = -10;
"@MMK_R_T" = -77;
"@MMK_R_U" = -30;
"@MMK_R_V" = -93;
"@MMK_R_W" = -70;
"@MMK_R_X" = -10;
"@MMK_R_Y" = -82;
"@MMK_R_a" = -20;
"@MMK_R_ampersand" = -13;
"@MMK_R_asterisk" = -94;
"@MMK_R_at" = -13;
"@MMK_R_backslash" = -60;
"@MMK_R_braceleft" = -53;
"@MMK_R_c" = -25;
"@MMK_R_f" = -13;
"@MMK_R_g" = -14;
"@MMK_R_hyphen" = -30;
"@MMK_R_multiply" = -24;
"@MMK_R_parenright" = -26;
"@MMK_R_plus" = -33;
"@MMK_R_question" = -37;
"@MMK_R_space" = -13;
"@MMK_R_t" = -46;
"@MMK_R_u" = -11;
"@MMK_R_v" = -54;
"@MMK_R_w" = -37;
"@MMK_R_y" = -60;
};
"@MMK_L_B" = {
"@MMK_R_A" = -14;
"@MMK_R_AE" = -33;
"@MMK_R_T" = -13;
"@MMK_R_V" = -21;
"@MMK_R_W" = -20;
"@MMK_R_Y" = -30;
"@MMK_R_a" = -5;
"@MMK_R_c" = -5;
"@MMK_R_y" = -20;
};
"@MMK_L_C" = {
"@MMK_R_A" = -13;
"@MMK_R_AE" = -20;
"@MMK_R_T" = -13;
"@MMK_R_W" = -10;
"@MMK_R_X" = -20;
"@MMK_R_Y" = -34;
"@MMK_R_a" = -8;
"@MMK_R_ampersand" = -3;
"@MMK_R_parenright" = -30;
};
"@MMK_L_D" = {
"@MMK_R_A" = -43;
"@MMK_R_AE" = -47;
"@MMK_R_T" = -31;
"@MMK_R_V" = -25;
"@MMK_R_W" = -40;
"@MMK_R_X" = -49;
"@MMK_R_Y" = -50;
"@MMK_R_a" = -8;
"@MMK_R_ampersand" = -8;
"@MMK_R_backslash" = -20;
"@MMK_R_braceright" = -34;
"@MMK_R_comma" = -40;
"@MMK_R_g" = -15;
"@MMK_R_parenright" = -63;
"@MMK_R_period" = -30;
"@MMK_R_slash" = -44;
"@MMK_R_underscore" = -32;
};
"@MMK_L_E" = {
"@MMK_R_a" = -5;
};
"@MMK_L_F" = {
"@MMK_R_A" = -74;
"@MMK_R_a" = -38;
"@MMK_R_c" = -24;
"@MMK_R_period" = -60;
"@MMK_R_s" = -20;
};
"@MMK_L_G" = {
"@MMK_R_T" = -3;
"@MMK_R_W" = -15;
"@MMK_R_Y" = -40;
};
"@MMK_L_H" = {
"@MMK_R_a" = -9;
"@MMK_R_c" = -8;
};
"@MMK_L_I" = {
"@MMK_R_a" = -5;
};
"@MMK_L_J" = {
"@MMK_R_A" = -30;
"@MMK_R_a" = -10;
"@MMK_R_c" = -8;
"@MMK_R_period" = -20;
};
"@MMK_L_K" = {
"@MMK_R_C" = -46;
"@MMK_R_Y" = -10;
"@MMK_R_a" = -28;
"@MMK_R_ampersand" = -20;
"@MMK_R_c" = -42;
"@MMK_R_guillemotleft" = -40;
"@MMK_R_hyphen" = -60;
"@MMK_R_plus" = -50;
"@MMK_R_question" = -15;
"@MMK_R_registered" = -20;
"@MMK_R_s" = -8;
"@MMK_R_t" = -24;
"@MMK_R_u" = -13;
"@MMK_R_v" = -30;
"@MMK_R_w" = -30;
"@MMK_R_y" = -60;
};
"@MMK_L_L" = {
"@MMK_R_C" = -64;
"@MMK_R_S" = -30;
"@MMK_R_T" = -114;
"@MMK_R_U" = -30;
"@MMK_R_V" = -120;
"@MMK_R_W" = -75;
"@MMK_R_X" = -10;
"@MMK_R_Y" = -100;
"@MMK_R_a" = -10;
"@MMK_R_ampersand" = -5;
"@MMK_R_asterisk" = -97;
"@MMK_R_backslash" = -40;
"@MMK_R_c" = -26;
"@MMK_R_hyphen" = -67;
"@MMK_R_i" = -8;
"@MMK_R_percent" = -55;
"@MMK_R_plus" = -53;
"@MMK_R_question" = -27;
"@MMK_R_t" = -50;
"@MMK_R_u" = -10;
"@MMK_R_uni018F" = -30;
"@MMK_R_uni02BA" = -60;
"@MMK_R_v" = -63;
"@MMK_R_w" = -30;
"@MMK_R_y" = -64;
};
"@MMK_L_M" = {
"@MMK_R_A" = -5;
"@MMK_R_a" = -5;
"@MMK_R_c" = -8;
};
"@MMK_L_N" = {
"@MMK_R_a" = -5;
"@MMK_R_c" = -8;
};
"@MMK_L_Oslash" = {
"@MMK_R_period" = -26;
};
"@MMK_L_P" = {
"@MMK_R_A" = -82;
"@MMK_R_AE" = -126;
"@MMK_R_Y" = -9;
"@MMK_R_a" = -32;
"@MMK_R_c" = -27;
"@MMK_R_dotlessi" = -5;
"@MMK_R_g" = -32;
"@MMK_R_period" = -70;
};
"@MMK_L_Q" = {
"@MMK_R_A" = -20;
"@MMK_R_T" = -30;
"@MMK_R_V" = -25;
"@MMK_R_W" = -29;
"@MMK_R_Y" = -43;
"@MMK_R_a" = -3;
"@MMK_R_g" = -10;
"@MMK_R_u" = 7;
"@MMK_R_w" = 7;
};
"@MMK_L_R" = {
"@MMK_R_C" = -20;
"@MMK_R_S" = -5;
"@MMK_R_T" = -23;
"@MMK_R_U" = -5;
"@MMK_R_V" = -33;
"@MMK_R_W" = -33;
"@MMK_R_X" = -20;
"@MMK_R_Y" = -33;
"@MMK_R_a" = -25;
"@MMK_R_ampersand" = -8;
"@MMK_R_c" = -43;
"@MMK_R_g" = -8;
"@MMK_R_i" = -10;
"@MMK_R_plus" = -13;
"@MMK_R_s" = -29;
"@MMK_R_u" = -10;
};
"@MMK_L_REbackwards" = {
"@MMK_R_T" = 3;
};
"@MMK_L_S" = {
"@MMK_R_A" = -5;
"@MMK_R_T" = -19;
"@MMK_R_V" = -20;
"@MMK_R_W" = -17;
"@MMK_R_Y" = -30;
"@MMK_R_a" = -8;
"@MMK_R_c" = -5;
};
"@MMK_L_T" = {
"@MMK_R_A" = -77;
"@MMK_R_AE" = -97;
"@MMK_R_C" = -30;
"@MMK_R_J" = -87;
"@MMK_R_S" = -18;
"@MMK_R_a" = -93;
"@MMK_R_ampersand" = -25;
"@MMK_R_at" = -93;
"@MMK_R_backslash" = 11;
"@MMK_R_braceleft" = -30;
"@MMK_R_c" = -100;
"@MMK_R_comma" = -80;
"@MMK_R_dotlessi" = -79;
"@MMK_R_exclamdown" = -43;
"@MMK_R_g" = -90;
"@MMK_R_hyphen" = -50;
"@MMK_R_iacute" = 8;
"@MMK_R_ibreve" = 53;
"@MMK_R_multiply" = -60;
"@MMK_R_p" = -48;
"@MMK_R_period" = -80;
"@MMK_R_plus" = -57;
"@MMK_R_question" = 20;
"@MMK_R_questiondown" = -93;
"@MMK_R_s" = -100;
"@MMK_R_semicolon" = -54;
"@MMK_R_slash" = -64;
"@MMK_R_t" = -26;
"@MMK_R_u" = -70;
"@MMK_R_underscore" = -60;
"@MMK_R_v" = -60;
"@MMK_R_w" = -55;
"@MMK_R_x" = -43;
"@MMK_R_y" = -75;
"@MMK_R_z" = -75;
};
"@MMK_L_Thorn" = {
"@MMK_R_A" = -47;
"@MMK_R_T" = -66;
"@MMK_R_V" = -47;
"@MMK_R_W" = -40;
"@MMK_R_Y" = -67;
"@MMK_R_period" = -53;
};
"@MMK_L_U" = {
"@MMK_R_A" = -30;
"@MMK_R_AE" = -47;
"@MMK_R_a" = -8;
"@MMK_R_g" = -18;
"@MMK_R_period" = -20;
"@MMK_R_slash" = -30;
"@MMK_R_underscore" = -40;
};
"@MMK_L_V" = {
"@MMK_R_A" = -85;
"@MMK_R_AE" = -120;
"@MMK_R_C" = -25;
"@MMK_R_J" = -60;
"@MMK_R_S" = -30;
"@MMK_R_a" = -70;
"@MMK_R_ampersand" = -60;
"@MMK_R_at" = -94;
"@MMK_R_backslash" = 15;
"@MMK_R_c" = -85;
"@MMK_R_colon" = -30;
"@MMK_R_comma" = -74;
"@MMK_R_dotlessi" = -27;
"@MMK_R_exclamdown" = -34;
"@MMK_R_g" = -73;
"@MMK_R_hyphen" = -37;
"@MMK_R_multiply" = -67;
"@MMK_R_period" = -80;
"@MMK_R_plus" = -53;
"@MMK_R_s" = -59;
"@MMK_R_slash" = -77;
"@MMK_R_t" = -20;
"@MMK_R_u" = -9;
"@MMK_R_underscore" = -97;
"@MMK_R_v" = -13;
"@MMK_R_y" = -10;
};
"@MMK_L_W" = {
"@MMK_R_A" = -90;
"@MMK_R_AE" = -93;
"@MMK_R_C" = -41;
"@MMK_R_J" = -40;
"@MMK_R_Oslash" = -20;
"@MMK_R_S" = -17;
"@MMK_R_a" = -78;
"@MMK_R_ampersand" = -50;
"@MMK_R_at" = -80;
"@MMK_R_braceleft" = -30;
"@MMK_R_c" = -93;
"@MMK_R_comma" = -60;
"@MMK_R_dotlessi" = -31;
"@MMK_R_exclamdown" = -30;
"@MMK_R_g" = -70;
"@MMK_R_hyphen" = -37;
"@MMK_R_i" = -19;
"@MMK_R_multiply" = -32;
"@MMK_R_period" = -70;
"@MMK_R_plus" = -53;
"@MMK_R_s" = -55;
"@MMK_R_semicolon" = -34;
"@MMK_R_slash" = -60;
"@MMK_R_u" = -38;
"@MMK_R_underscore" = -70;
"@MMK_R_v" = -13;
};
"@MMK_L_X" = {
"@MMK_R_A" = -10;
"@MMK_R_C" = -49;
"@MMK_R_a" = -28;
"@MMK_R_c" = -34;
"@MMK_R_s" = -18;
"@MMK_R_u" = -27;
"@MMK_R_w" = -30;
"@MMK_R_y" = -50;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -80;
"@MMK_R_AE" = -127;
"@MMK_R_C" = -50;
"@MMK_R_J" = -84;
"@MMK_R_Oslash" = -47;
"@MMK_R_S" = -40;
"@MMK_R_a" = -94;
"@MMK_R_ampersand" = -40;
"@MMK_R_at" = -110;
"@MMK_R_braceleft" = -50;
"@MMK_R_c" = -101;
"@MMK_R_colon" = -34;
"@MMK_R_comma" = -71;
"@MMK_R_dotlessi" = -37;
"@MMK_R_exclamdown" = -34;
"@MMK_R_g" = -84;
"@MMK_R_hyphen" = -57;
"@MMK_R_multiply" = -60;
"@MMK_R_period" = -87;
"@MMK_R_plus" = -74;
"@MMK_R_questiondown" = -87;
"@MMK_R_s" = -70;
"@MMK_R_semicolon" = -45;
"@MMK_R_slash" = -64;
"@MMK_R_t" = -30;
"@MMK_R_u" = -28;
"@MMK_R_underscore" = -70;
"@MMK_R_uni02BA" = 37;
"@MMK_R_v" = -39;
"@MMK_R_w" = -13;
"@MMK_R_y" = -20;
"@MMK_R_z" = -20;
};
"@MMK_L_Z" = {
"@MMK_R_C" = -20;
"@MMK_R_a" = -5;
"@MMK_R_c" = -10;
};
"@MMK_L_a" = {
"@MMK_R_asterisk" = -27;
"@MMK_R_backslash" = -40;
"@MMK_R_g" = -4;
"@MMK_R_registered" = -43;
"@MMK_R_uni02BA" = -50;
"@MMK_R_v" = -8;
"@MMK_R_y" = -16;
};
"@MMK_L_aacute" = {
"@MMK_R_asterisk" = -37;
"@MMK_R_backslash" = -44;
"@MMK_R_c" = -10;
"@MMK_R_g" = -3;
"@MMK_R_i" = -3;
"@MMK_R_quotesingle" = -15;
"@MMK_R_registered" = -43;
"@MMK_R_s" = -4;
"@MMK_R_t" = -20;
"@MMK_R_v" = -33;
"@MMK_R_w" = -18;
"@MMK_R_y" = -16;
"@MMK_R_z" = 12;
};
"@MMK_L_ae" = {
"@MMK_R_Y" = -98;
"@MMK_R_asterisk" = -27;
"@MMK_R_backslash" = -54;
"@MMK_R_g" = -5;
"@MMK_R_question" = -20;
"@MMK_R_registered" = -43;
"@MMK_R_t" = -13;
"@MMK_R_uni02BA" = -47;
"@MMK_R_v" = -20;
"@MMK_R_w" = -20;
"@MMK_R_x" = -25;
"@MMK_R_y" = -22;
};
"@MMK_L_ampersand" = {
"@MMK_R_C" = -7;
"@MMK_R_T" = -47;
"@MMK_R_V" = -54;
"@MMK_R_W" = -44;
"@MMK_R_Y" = -64;
"@MMK_R_percent" = -27;
"@MMK_R_uni02BA" = -23;
"@MMK_R_w" = -7;
"@MMK_R_y" = -7;
};
"@MMK_L_asterisk" = {
"@MMK_R_A" = -94;
"@MMK_R_AE" = -117;
"@MMK_R_a" = -21;
"@MMK_R_c" = -27;
"@MMK_R_s" = -27;
};
"@MMK_L_at" = {
"@MMK_R_A" = -44;
"@MMK_R_AE" = -60;
"@MMK_R_T" = -53;
"@MMK_R_V" = -60;
"@MMK_R_W" = -44;
"@MMK_R_Y" = -87;
"@MMK_R_percent" = -40;
"@MMK_R_period" = -30;
"@MMK_R_uni02BA" = -25;
"@MMK_R_w" = -13;
"@MMK_R_y" = -20;
};
"@MMK_L_at.case" = {
"@MMK_R_A" = -13;
};
"@MMK_L_b" = {
"@MMK_R_T" = -100;
"@MMK_R_V" = -85;
"@MMK_R_asterisk" = -41;
"@MMK_R_backslash" = -77;
"@MMK_R_braceright" = -50;
"@MMK_R_g" = -8;
"@MMK_R_i" = -3;
"@MMK_R_parenright" = -44;
"@MMK_R_question" = -30;
"@MMK_R_registered" = -43;
"@MMK_R_slash" = -14;
"@MMK_R_t" = -20;
"@MMK_R_uni02BA" = -47;
"@MMK_R_v" = -25;
"@MMK_R_w" = -19;
"@MMK_R_x" = -24;
"@MMK_R_y" = -38;
};
"@MMK_L_backslash" = {
"@MMK_R_C" = -13;
"@MMK_R_T" = -18;
"@MMK_R_V" = -60;
"@MMK_R_W" = -53;
"@MMK_R_Y" = -70;
"@MMK_R_c" = -21;
"@MMK_R_hyphen" = -30;
"@MMK_R_uni02BA" = -46;
};
"@MMK_L_braceleft" = {
"@MMK_R_C" = -34;
"@MMK_R_c" = -50;
};
"@MMK_L_braceright" = {
"@MMK_R_A" = -53;
"@MMK_R_AE" = -63;
"@MMK_R_T" = -30;
"@MMK_R_W" = -30;
"@MMK_R_Y" = -50;
"@MMK_R_period" = -50;
};
"@MMK_L_c" = {
"@MMK_R_asterisk" = -27;
"@MMK_R_backslash" = -47;
"@MMK_R_parenright" = -11;
"@MMK_R_question" = -30;
"@MMK_R_registered" = -43;
"@MMK_R_t" = -9;
"@MMK_R_v" = -17;
};
"@MMK_L_colon" = {
"@MMK_R_V" = -30;
"@MMK_R_Y" = -34;
};
"@MMK_L_comma" = {
"@MMK_R_C" = -20;
"@MMK_R_T" = -80;
"@MMK_R_V" = -74;
"@MMK_R_W" = -54;
"@MMK_R_Y" = -81;
"@MMK_R_percent" = -51;
"@MMK_R_t" = -30;
"@MMK_R_w" = -30;
"@MMK_R_y" = -54;
};
"@MMK_L_dcaron" = {
"@MMK_R_b" = 100;
};
"@MMK_L_exclamdown" = {
"@MMK_R_T" = -43;
"@MMK_R_V" = -34;
"@MMK_R_W" = -30;
"@MMK_R_Y" = -34;
};
"@MMK_L_f" = {
"@MMK_R_a" = -20;
"@MMK_R_c" = -20;
"@MMK_R_g" = -40;
"@MMK_R_period" = -30;
"@MMK_R_s" = -18;
};
"@MMK_L_fl" = {
"@MMK_R_c" = -3;
};
"@MMK_L_g" = {
"@MMK_R_a" = -5;
"@MMK_R_c" = -12;
"@MMK_R_f" = 15;
"@MMK_R_j" = 20;
"@MMK_R_v" = 7;
};
"@MMK_L_germandbls" = {
"@MMK_R_c" = -9;
"@MMK_R_y" = -40;
};
"@MMK_L_greater" = {
"@MMK_R_period" = -60;
};
"@MMK_L_hyphen" = {
"@MMK_R_A" = -30;
"@MMK_R_T" = -53;
"@MMK_R_V" = -38;
"@MMK_R_W" = -45;
"@MMK_R_X" = -38;
"@MMK_R_Y" = -63;
"@MMK_R_backslash" = -47;
"@MMK_R_slash" = -47;
};
"@MMK_L_i" = {
"@MMK_R_g" = -3;
"@MMK_R_z" = 13;
};
"@MMK_L_iacute" = {
"@MMK_R_T" = 8;
"@MMK_R_b" = 10;
"@MMK_R_uni02BA" = 9;
};
"@MMK_L_ibreve" = {
"@MMK_R_T" = 53;
"@MMK_R_b" = 30;
};
"@MMK_L_igrave" = {
"@MMK_R_T" = 8;
};
"@MMK_L_k" = {
"@MMK_R_a" = -26;
"@MMK_R_c" = -39;
"@MMK_R_g" = -20;
"@MMK_R_quotesingle" = -5;
"@MMK_R_s" = -27;
"@MMK_R_y" = -5;
};
"@MMK_L_l" = {
"@MMK_R_c" = -3;
"@MMK_R_ibreve" = 20;
};
"@MMK_L_lslash" = {
"@MMK_R_c" = 3;
"@MMK_R_t" = 15;
"@MMK_R_u" = 10;
"@MMK_R_y" = 10;
"@MMK_R_z" = 18;
};
"@MMK_L_multiply" = {
"@MMK_R_A" = -24;
"@MMK_R_AE" = -39;
"@MMK_R_T" = -60;
"@MMK_R_V" = -67;
"@MMK_R_W" = -32;
"@MMK_R_Y" = -60;
"@MMK_R_y" = -13;
};
"@MMK_L_parenleft" = {
"@MMK_R_A" = -26;
"@MMK_R_C" = -63;
"@MMK_R_a" = -44;
"@MMK_R_c" = -44;
"@MMK_R_s" = -20;
"@MMK_R_t" = -13;
};
"@MMK_L_period" = {
"@MMK_R_C" = -30;
"@MMK_R_T" = -80;
"@MMK_R_U" = -20;
"@MMK_R_V" = -80;
"@MMK_R_W" = -70;
"@MMK_R_Y" = -87;
"@MMK_R_backslash" = -60;
"@MMK_R_braceleft" = -50;
"@MMK_R_less" = -60;
"@MMK_R_question" = -37;
"@MMK_R_v" = -40;
"@MMK_R_w" = -26;
"@MMK_R_y" = -40;
};
"@MMK_L_plus" = {
"@MMK_R_A" = -33;
"@MMK_R_T" = -57;
"@MMK_R_V" = -53;
"@MMK_R_W" = -53;
"@MMK_R_Y" = -74;
};
"@MMK_L_question" = {
"@MMK_R_A" = -70;
"@MMK_R_AE" = -97;
"@MMK_R_period" = -94;
};
"@MMK_L_questiondown" = {
"@MMK_R_T" = -57;
"@MMK_R_Y" = -57;
"@MMK_R_c" = -20;
"@MMK_R_percent" = -25;
"@MMK_R_z" = 20;
};
"@MMK_L_quotedblright" = {
"@MMK_R_J" = -75;
"@MMK_R_ampersand" = -54;
"@MMK_R_at" = -100;
"@MMK_R_c" = -35;
"@MMK_R_s" = -67;
"@MMK_R_slash" = -117;
};
"@MMK_L_r" = {
"@MMK_R_a" = -5;
"@MMK_R_c" = -15;
"@MMK_R_colon" = 13;
"@MMK_R_comma" = -34;
"@MMK_R_f" = 13;
"@MMK_R_g" = -8;
"@MMK_R_period" = -40;
"@MMK_R_t" = 5;
"@MMK_R_u" = 10;
};
"@MMK_L_s" = {
"@MMK_R_asterisk" = -38;
"@MMK_R_backslash" = -50;
"@MMK_R_parenright" = -7;
"@MMK_R_question" = -27;
"@MMK_R_registered" = -43;
"@MMK_R_t" = -14;
"@MMK_R_v" = -25;
"@MMK_R_w" = -17;
"@MMK_R_y" = -24;
};
"@MMK_L_semicolon" = {
"@MMK_R_T" = -47;
"@MMK_R_Y" = -7;
};
"@MMK_L_slash" = {
"@MMK_R_C" = -30;
"@MMK_R_T" = 20;
"@MMK_R_V" = 30;
"@MMK_R_W" = 7;
"@MMK_R_Y" = 24;
"@MMK_R_a" = -54;
"@MMK_R_c" = -48;
"@MMK_R_dotlessi" = -19;
"@MMK_R_g" = -37;
"@MMK_R_hyphen" = -61;
"@MMK_R_period" = -119;
"@MMK_R_s" = -30;
};
"@MMK_L_space" = {
"@MMK_R_A" = -3;
"@MMK_R_T" = -35;
"@MMK_R_V" = -13;
"@MMK_R_W" = -15;
};
"@MMK_L_t" = {
"@MMK_R_c" = -14;
"@MMK_R_comma" = 39;
"@MMK_R_f" = 10;
"@MMK_R_space" = 8;
};
"@MMK_L_underscore" = {
"@MMK_R_C" = -32;
"@MMK_R_T" = -60;
"@MMK_R_U" = -40;
"@MMK_R_V" = -97;
"@MMK_R_W" = -70;
"@MMK_R_Y" = -70;
};
"@MMK_L_uni018E" = {
"@MMK_R_T" = 3;
};
"@MMK_L_v" = {
"@MMK_R_A" = -53;
"@MMK_R_a" = -25;
"@MMK_R_c" = -25;
"@MMK_R_g" = -24;
"@MMK_R_period" = -40;
"@MMK_R_s" = -23;
"@MMK_R_t" = 7;
};
"@MMK_L_w" = {
"@MMK_R_a" = -22;
"@MMK_R_at" = -40;
"@MMK_R_c" = -19;
"@MMK_R_comma" = -30;
"@MMK_R_g" = -20;
"@MMK_R_period" = -26;
"@MMK_R_questiondown" = -20;
"@MMK_R_t" = 5;
};
"@MMK_L_x" = {
"@MMK_R_a" = -7;
"@MMK_R_c" = -24;
"@MMK_R_t" = 8;
};
"@MMK_L_y" = {
"@MMK_R_T" = -65;
"@MMK_R_a" = -35;
"@MMK_R_ampersand" = -7;
"@MMK_R_at" = -57;
"@MMK_R_c" = -41;
"@MMK_R_comma" = -64;
"@MMK_R_g" = -34;
"@MMK_R_multiply" = -13;
"@MMK_R_period" = -74;
"@MMK_R_questiondown" = -57;
"@MMK_R_quotesingle" = 8;
"@MMK_R_s" = -22;
"@MMK_R_slash" = -40;
};
A = {
T = -75;
Tcaron = -75;
W = -88;
Wacute = -88;
Wcircumflex = -88;
Wdieresis = -88;
Wgrave = -88;
uni0162 = -75;
uni021A = -75;
};
AE = {
ibreve = 37;
imacron = 54;
itilde = 37;
};
AEacute = {
ibreve = 37;
imacron = 54;
itilde = 37;
};
Aacute = {
asterisk = -94;
at = -13;
backslash = -60;
braceleft = -53;
f = -13;
multiply = -24;
parenright = -26;
plus = -33;
question = -37;
v = -54;
};
Abreve = {
asterisk = -94;
at = -13;
backslash = -60;
braceleft = -53;
f = -13;
multiply = -24;
parenright = -26;
plus = -33;
question = -37;
v = -54;
};
Acircumflex = {
asterisk = -94;
at = -13;
backslash = -60;
braceleft = -53;
f = -13;
multiply = -24;
parenright = -26;
plus = -33;
question = -37;
v = -54;
};
Adieresis = {
asterisk = -94;
at = -13;
backslash = -60;
braceleft = -53;
f = -13;
multiply = -24;
parenright = -26;
plus = -33;
question = -37;
v = -54;
};
Agrave = {
asterisk = -94;
at = -13;
backslash = -60;
braceleft = -53;
f = -13;
multiply = -24;
parenright = -26;
plus = -33;
question = -37;
v = -54;
};
Amacron = {
asterisk = -94;
at = -13;
backslash = -60;
braceleft = -53;
f = -13;
multiply = -24;
parenright = -26;
plus = -33;
question = -37;
v = -54;
};
Aogonek = {
asterisk = -94;
at = -13;
backslash = -60;
braceleft = -53;
f = -13;
multiply = -24;
parenright = -26;
plus = -33;
question = -37;
v = -54;
};
Aring = {
asterisk = -94;
at = -13;
backslash = -60;
braceleft = -53;
f = -13;
multiply = -24;
parenright = -26;
plus = -33;
question = -37;
v = -54;
};
Atilde = {
asterisk = -94;
at = -13;
backslash = -60;
braceleft = -53;
f = -13;
multiply = -24;
parenright = -26;
plus = -33;
question = -37;
v = -54;
};
B = {
Aacute = -9;
Abreve = -9;
Acircumflex = -9;
Adieresis = -9;
Agrave = -9;
Amacron = -9;
Aogonek = -9;
Aring = -9;
Atilde = -9;
X = -23;
imacron = 20;
};
C = {
imacron = 30;
itilde = 30;
};
Cacute = {
imacron = 30;
itilde = 30;
};
Ccaron = {
imacron = 30;
itilde = 30;
};
Ccedilla = {
imacron = 30;
itilde = 30;
};
Cdotaccent = {
imacron = 30;
itilde = 30;
};
E = {
imacron = 54;
itilde = 37;
};
Eacute = {
ibreve = 37;
imacron = 54;
itilde = 37;
};
Ebreve = {
ibreve = 37;
imacron = 54;
itilde = 37;
};
Ecaron = {
ibreve = 37;
imacron = 54;
itilde = 37;
};
Ecircumflex = {
ibreve = 37;
imacron = 54;
itilde = 37;
};
Edieresis = {
ibreve = 37;
imacron = 54;
itilde = 37;
};
Edotaccent = {
ibreve = 37;
imacron = 54;
itilde = 37;
};
Egrave = {
ibreve = 37;
imacron = 54;
itilde = 37;
};
Emacron = {
ibreve = 37;
imacron = 54;
itilde = 37;
};
Eogonek = {
ibreve = 37;
imacron = 54;
itilde = 37;
};
Euro = {
imacron = 30;
itilde = 30;
};
F = {
J = -53;
ampersand = -20;
at = -40;
comma = -60;
i = 0;
imacron = 70;
multiply = -20;
underscore = -40;
};
G = {
imacron = 20;
};
Gbreve = {
imacron = 20;
};
Gdotaccent = {
imacron = 20;
};
H = {
imacron = 40;
itilde = 15;
};
I = {
imacron = 40;
itilde = 15;
};
Iacute = {
imacron = 40;
itilde = 11;
};
Ibreve = {
imacron = 40;
itilde = 11;
};
Icircumflex = {
imacron = 40;
itilde = 11;
};
Idieresis = {
imacron = 40;
itilde = 11;
};
Idotaccent = {
imacron = 40;
itilde = 11;
};
Igrave = {
imacron = 40;
itilde = 11;
};
Imacron = {
imacron = 40;
itilde = 11;
};
Iogonek = {
imacron = 40;
itilde = 11;
};
Itilde = {
imacron = 40;
itilde = 11;
};
J = {
igrave = 0;
imacron = 64;
};
K = {
ibreve = 15;
icircumflex = 0;
imacron = 60;
};
L = {
V = -80;
};
Lacute = {
V = -80;
};
Lcaron = {
V = -80;
};
Ldot = {
V = -80;
};
Lslash = {
V = -80;
};
M = {
imacron = 40;
itilde = 15;
};
N = {
i = -3;
imacron = 40;
itilde = 11;
};
Nacute = {
imacron = 40;
itilde = 11;
};
Ncaron = {
imacron = 40;
itilde = 11;
};
Ntilde = {
imacron = 40;
itilde = 11;
};
OE = {
ibreve = 37;
imacron = 54;
itilde = 37;
};
Oslash = {
igrave = 57;
imacron = 57;
slash = -44;
underscore = -40;
};
P = {
J = -73;
X = -30;
Z = -20;
Zacute = -20;
Zcaron = -20;
Zdotaccent = -20;
aacute = -27;
abreve = -27;
acircumflex = -27;
adieresis = -27;
ae = -27;
agrave = -27;
amacron = -27;
ampersand = -37;
aogonek = -27;
aring = -27;
at = -43;
atilde = -27;
comma = -87;
e = -32;
icircumflex = 10;
itilde = 40;
parenright = -30;
plus = -13;
slash = -77;
underscore = -73;
};
Q = {
Wacute = -26;
Wcircumflex = -26;
Wdieresis = -26;
Wgrave = -26;
X = -26;
at = -20;
};
R = {
imacron = 18;
itilde = 18;
};
Racute = {
imacron = 18;
itilde = 18;
};
Rcaron = {
imacron = 18;
itilde = 18;
};
S = {
imacron = 40;
itilde = 20;
};
Sacute = {
imacron = 40;
itilde = 20;
};
Scaron = {
imacron = 40;
itilde = 20;
};
Scedilla = {
imacron = 40;
itilde = 20;
};
T = {
adieresis = -68;
amacron = -78;
atilde = -85;
edieresis = -85;
emacron = -90;
odieresis = -90;
omacron = -95;
racute = -59;
rcaron = -44;
scaron = -90;
udieresis = -60;
uni1EBD = -95;
ydieresis = -65;
};
Tcaron = {
adieresis = -68;
amacron = -78;
atilde = -85;
edieresis = -85;
emacron = -90;
odieresis = -90;
omacron = -95;
racute = -59;
rcaron = -44;
scaron = -90;
udieresis = -60;
uni1EBD = -95;
ydieresis = -65;
};
Thorn = {
X = -70;
parenright = -37;
};
U = {
imacron = 45;
itilde = 23;
};
Uacute = {
imacron = 45;
itilde = 23;
};
Ubreve = {
imacron = 45;
itilde = 23;
};
Ucircumflex = {
imacron = 45;
itilde = 23;
};
Udieresis = {
imacron = 45;
itilde = 23;
};
Ugrave = {
imacron = 45;
itilde = 23;
};
Uhungarumlaut = {
imacron = 45;
itilde = 23;
};
Umacron = {
imacron = 45;
itilde = 23;
};
Uogonek = {
imacron = 45;
itilde = 23;
};
Uring = {
imacron = 45;
itilde = 23;
};
Utilde = {
imacron = 45;
itilde = 23;
};
V = {
adieresis = -58;
edieresis = -78;
emacron = -80;
ibreve = 25;
imacron = 64;
rcaron = -25;
};
W = {
edieresis = -85;
ibreve = 20;
icircumflex = 10;
imacron = 66;
itilde = 35;
rcaron = -21;
uni1EF9 = -15;
y = -15;
yacute = -15;
ycircumflex = -15;
ydieresis = -15;
ygrave = -15;
};
Wacute = {
edieresis = -85;
ibreve = 20;
icircumflex = 10;
imacron = 66;
itilde = 35;
rcaron = -21;
};
Wcircumflex = {
edieresis = -85;
ibreve = 20;
icircumflex = 10;
imacron = 66;
itilde = 35;
rcaron = -21;
};
Wdieresis = {
edieresis = -85;
ibreve = 20;
icircumflex = 10;
imacron = 66;
itilde = 35;
rcaron = -21;
};
Wgrave = {
edieresis = -85;
ibreve = 20;
icircumflex = 10;
imacron = 66;
itilde = 35;
rcaron = -21;
};
X = {
X = -5;
aacute = -24;
abreve = -24;
acircumflex = -24;
adieresis = -24;
ae = -24;
agrave = -24;
amacron = -24;
ampersand = -23;
aogonek = -24;
aring = -24;
at = -20;
atilde = -24;
ibreve = 30;
imacron = 50;
itilde = 20;
multiply = -37;
question = -24;
v = -30;
};
Y = {
ibreve = 40;
imacron = 67;
itilde = 20;
};
Yacute = {
ibreve = 40;
imacron = 67;
itilde = 20;
};
Ycircumflex = {
ibreve = 40;
imacron = 67;
itilde = 20;
};
Ydieresis = {
ibreve = 40;
imacron = 67;
itilde = 20;
};
Ygrave = {
ibreve = 40;
imacron = 67;
itilde = 20;
};
Z = {
imacron = 64;
itilde = 34;
};
Zacute = {
imacron = 64;
itilde = 34;
};
Zcaron = {
imacron = 64;
itilde = 34;
};
Zdotaccent = {
imacron = 64;
itilde = 34;
};
a = {
uni1EF9 = -25;
y = -25;
yacute = -25;
ycircumflex = -25;
ydieresis = -25;
ygrave = -25;
};
aacute = {
v = -18;
};
abreve = {
v = -18;
};
acircumflex = {
v = -18;
};
adieresis = {
v = -18;
};
ae = {
lslash = 5;
};
aeacute = {
lslash = 5;
};
agrave = {
v = -18;
};
amacron = {
v = -18;
};
ampersand = {
Wacute = -34;
Wcircumflex = -34;
Wdieresis = -34;
Wgrave = -34;
asterisk = -51;
backslash = -47;
question = -40;
quotedblright = -21;
quoteright = -21;
v = -7;
};
aogonek = {
v = -18;
};
aring = {
v = -18;
};
asterisk = {
J = -67;
ampersand = -44;
at = -54;
exclam = -15;
imacron = 73;
itilde = 15;
questiondown = -90;
slash = -111;
underscore = -90;
};
at = {
X = -53;
asterisk = -37;
backslash = -50;
comma = -37;
greater = -47;
less = -30;
parenright = -67;
question = -30;
slash = -50;
underscore = -60;
};
atilde = {
v = -18;
};
b = {
l = -3;
lslash = 8;
};
backslash = {
backslash = -133;
comma = 53;
question = -30;
quotedblbase = 43;
quotedblleft = -73;
quotedblright = -70;
quoteleft = -73;
quoteright = -70;
quotesinglbase = 43;
underscore = 44;
};
bar = {
imacron = 40;
itilde = 11;
};
braceright = {
comma = -34;
};
bracketleft = {
imacron = 21;
};
bracketright = {
imacron = 60;
itilde = 27;
};
brokenbar = {
imacron = 40;
itilde = 11;
};
comma = {
backslash = -57;
v = -47;
};
d = {
imacron = 47;
};
dcaron = {
questiondown = -51;
};
dcroat = {
imacron = 84;
};
dollar = {
imacron = 40;
itilde = 20;
};
e = {
T = -100;
Tcaron = -100;
lslash = 5;
uni0162 = -100;
uni021A = -100;
};
eacute = {
lslash = 5;
};
ebreve = {
lslash = 5;
};
ecaron = {
lslash = 5;
};
ecircumflex = {
lslash = 5;
};
edieresis = {
lslash = 5;
};
edotaccent = {
lslash = 5;
};
egrave = {
lslash = 5;
};
emacron = {
lslash = 5;
};
eogonek = {
lslash = 5;
};
eth = {
imacron = 30;
};
exclam = {
asterisk = -15;
igrave = 47;
imacron = 60;
};
f = {
at = -33;
e = -23;
f = 5;
i = -3;
ibreve = 30;
igrave = 40;
imacron = 60;
itilde = 37;
};
fl = {
imacron = 47;
};
g = {
lslash = 8;
};
gbreve = {
lslash = 8;
};
gdotaccent = {
lslash = 8;
};
germandbls = {
asterisk = -60;
v = -47;
};
greater = {
at = -63;
parenright = -57;
};
i = {
lslash = 10;
};
iacute = {
asterisk = 39;
b = 60;
backslash = 74;
braceright = 11;
bracketleft = 60;
bracketright = 21;
exclam = 47;
f = 40;
idieresis = 80;
imacron = 60;
itilde = 44;
k = 60;
lacute = 60;
lcaron = 60;
ldot = 60;
lslash = 53;
parenright = 21;
question = 63;
quotedblleft = 43;
quotedblright = 66;
quoteleft = 43;
quoteright = 66;
uni0137 = 60;
uni013C = 60;
};
ibreve = {
backslash = 60;
l = 20;
question = 34;
};
icircumflex = {
l = 20;
};
idieresis = {
b = 45;
f = 30;
h = 45;
i = 60;
j = 65;
k = 45;
l = 20;
t = 15;
tcaron = 15;
uni0163 = 15;
uni021B = 15;
};
imacron = {
B = 40;
D = 40;
Dcaron = 40;
E = 40;
Eacute = 40;
Ebreve = 40;
Ecaron = 40;
Ecircumflex = 40;
Edieresis = 40;
Edotaccent = 40;
Egrave = 40;
Emacron = 40;
Eogonek = 40;
F = 40;
H = 40;
I = 40;
Iacute = 40;
Ibreve = 40;
Icircumflex = 40;
Idieresis = 40;
Idotaccent = 40;
Igrave = 40;
Imacron = 40;
Itilde = 40;
K = 40;
L = 40;
Lacute = 40;
Lcaron = 40;
Ldot = 40;
M = 40;
N = 40;
Nacute = 40;
Ncaron = 40;
Ntilde = 40;
P = 40;
R = 40;
Racute = 40;
Rcaron = 40;
Thorn = 40;
asterisk = 73;
b = 60;
backslash = 77;
bar = 40;
bracketleft = 60;
bracketright = 21;
brokenbar = 40;
exclam = 60;
f = 11;
germandbls = 60;
k = 60;
l = 60;
lacute = 60;
lcaron = 60;
ldot = 60;
lslash = 60;
question = 67;
quotedblleft = 67;
quotedblright = 53;
quoteleft = 67;
quoteright = 53;
thorn = 60;
uni0136 = 40;
uni0137 = 60;
uni013B = 40;
uni013C = 60;
uni0145 = 40;
uni0156 = 40;
uni02B9 = 50;
uni02BA = 50;
uni1EBC = 40;
z = 44;
zacute = 44;
zcaron = 44;
zdotaccent = 44;
};
itilde = {
asterisk = 11;
b = 15;
bracketleft = 27;
f = 30;
j = 34;
k = 15;
l = 15;
lacute = 15;
lcaron = 15;
ldot = 15;
question = 40;
quotedblleft = 13;
quotedblright = 33;
quoteleft = 13;
quoteright = 33;
uni0137 = 15;
uni013C = 15;
uni02B9 = 31;
uni02BA = 31;
};
j = {
itilde = 34;
};
l = {
f = 3;
imacron = 47;
};
lacute = {
imacron = 47;
};
lcaron = {
questiondown = -51;
};
less = {
at = -40;
parenright = -40;
};
lslash = {
imacron = 60;
};
multiply = {
X = -37;
};
n = {
T = -80;
Tcaron = -80;
uni0162 = -80;
uni021A = -80;
};
o = {
l = -3;
lslash = 8;
};
oacute = {
l = -3;
lslash = 8;
};
obreve = {
l = -3;
lslash = 8;
};
ocircumflex = {
l = -3;
lslash = 8;
};
odieresis = {
l = -3;
lslash = 8;
};
oe = {
lslash = 5;
};
ograve = {
l = -3;
lslash = 8;
};
ohungarumlaut = {
l = -3;
lslash = 8;
};
omacron = {
l = -3;
lslash = 8;
};
otilde = {
l = -3;
lslash = 8;
};
p = {
l = -3;
lslash = 8;
};
parenleft = {
ampersand = -40;
at = -37;
};
plus = {
slash = -43;
};
q = {
backslash = -37;
j = 29;
};
question = {
J = -47;
X = -20;
at = -53;
comma = -70;
ibreve = 34;
igrave = 40;
imacron = 60;
itilde = 44;
parenright = -61;
questiondown = -110;
quotedblbase = -40;
quotesinglbase = -40;
slash = -74;
underscore = -90;
};
questiondown = {
backslash = -34;
question = -37;
quotedblbase = 37;
quotesinglbase = 37;
v = -20;
};
quotedbl = {
ibreve = 33;
imacron = 53;
itilde = 27;
};
quotedblbase = {
backslash = -84;
question = -7;
};
quotedblleft = {
J = -80;
at = -87;
ibreve = 20;
imacron = 67;
itilde = 24;
questiondown = -84;
slash = -100;
};
quotedblright = {
ibreve = 33;
imacron = 53;
itilde = 27;
};
quoteleft = {
J = -80;
at = -87;
ibreve = 20;
imacron = 67;
itilde = 24;
questiondown = -84;
slash = -100;
};
quoteright = {
ibreve = 33;
imacron = 53;
itilde = 27;
};
quotesinglbase = {
backslash = -84;
question = -7;
};
quotesingle = {
ibreve = 33;
imacron = 53;
itilde = 27;
};
s = {
lslash = 5;
};
sacute = {
lslash = 5;
};
scaron = {
lslash = 5;
};
scedilla = {
lslash = 5;
};
slash = {
B = 53;
D = 53;
Dcaron = 53;
E = 53;
Eacute = 53;
Ebreve = 53;
Ecaron = 53;
Ecircumflex = 53;
Edieresis = 53;
Edotaccent = 53;
Egrave = 53;
Emacron = 53;
Eogonek = 53;
F = 53;
H = 53;
I = 53;
Iacute = 53;
Ibreve = 53;
Icircumflex = 60;
Idieresis = 47;
Idotaccent = 53;
Igrave = 53;
Imacron = 67;
Itilde = 53;
J = -40;
K = 53;
L = 53;
Lacute = 53;
Lcaron = 53;
Ldot = 53;
M = 53;
N = 53;
Nacute = 53;
Ncaron = 53;
Ntilde = 53;
Oslash = -30;
P = 53;
R = 53;
Racute = 53;
Rcaron = 53;
Thorn = 53;
ampersand = -50;
asterisk = -15;
at = -90;
bar = 53;
brokenbar = 53;
comma = -60;
ibreve = 40;
icircumflex = 38;
idieresis = 35;
igrave = 70;
imacron = 77;
plus = -53;
questiondown = -64;
quotedblbase = -87;
quotesinglbase = -87;
slash = -120;
underscore = -147;
uni0136 = 53;
uni013B = 53;
uni0145 = 53;
uni0156 = 53;
uni1EBC = 53;
};
space = {
X = -18;
};
thorn = {
l = -3;
lslash = 8;
};
underscore = {
ampersand = -40;
asterisk = -90;
backslash = -160;
j = 21;
question = -47;
underscore = -115;
};
uni0122 = {
imacron = 20;
};
uni0123 = {
lslash = 8;
};
uni0136 = {
ibreve = 15;
icircumflex = 0;
imacron = 60;
};
uni013B = {
V = -80;
};
uni013C = {
imacron = 47;
};
uni0145 = {
imacron = 40;
itilde = 11;
};
uni0156 = {
imacron = 18;
itilde = 18;
};
uni0162 = {
adieresis = -68;
amacron = -78;
atilde = -85;
edieresis = -85;
emacron = -90;
odieresis = -90;
omacron = -95;
racute = -59;
rcaron = -44;
scaron = -90;
udieresis = -60;
uni1EBD = -95;
ydieresis = -65;
};
uni0218 = {
imacron = 40;
itilde = 20;
};
uni0219 = {
lslash = 5;
};
uni021A = {
adieresis = -68;
amacron = -78;
atilde = -85;
edieresis = -85;
emacron = -90;
odieresis = -90;
omacron = -95;
racute = -59;
rcaron = -44;
scaron = -90;
udieresis = -60;
uni1EBD = -95;
ydieresis = -65;
};
uni0259 = {
l = -3;
lslash = 8;
};
uni02B9 = {
J = -35;
at = -40;
imacron = 50;
itilde = 31;
};
uni02BA = {
J = -35;
at = -40;
imacron = 50;
itilde = 31;
};
uni1EBC = {
ibreve = 37;
imacron = 54;
itilde = 37;
};
uni1EBD = {
lslash = 5;
};
uni1EF8 = {
ibreve = 40;
imacron = 67;
itilde = 20;
};
uni20A8 = {
lslash = 5;
};
v = {
aacute = -28;
abreve = -28;
acircumflex = -28;
adieresis = -28;
ae = -28;
agrave = -28;
amacron = -28;
ampersand = -18;
aogonek = -28;
aring = -28;
at = -47;
atilde = -28;
comma = -50;
f = 20;
questiondown = -43;
};
x = {
i = 5;
};
z = {
imacron = 40;
};
zacute = {
imacron = 40;
};
zcaron = {
imacron = 40;
};
zdotaccent = {
imacron = 40;
};
};
"8CD6E66A-5EC1-48C9-AF39-4C08F2C8B7A6" = {
"@MMK_L_A" = {
"@MMK_R_C" = -40;
"@MMK_R_N" = -10;
"@MMK_R_S" = -13;
"@MMK_R_T" = -76;
"@MMK_R_U" = -30;
"@MMK_R_V" = -92;
"@MMK_R_W" = -70;
"@MMK_R_X" = -13;
"@MMK_R_Y" = -84;
"@MMK_R_a" = -20;
"@MMK_R_ampersand" = -15;
"@MMK_R_asterisk" = -94;
"@MMK_R_at" = -12;
"@MMK_R_backslash" = -60;
"@MMK_R_braceleft" = -52;
"@MMK_R_c" = -24;
"@MMK_R_f" = -12;
"@MMK_R_g" = -15;
"@MMK_R_hyphen" = -30;
"@MMK_R_multiply" = -24;
"@MMK_R_parenright" = -23;
"@MMK_R_plus" = -32;
"@MMK_R_question" = -36;
"@MMK_R_space" = -13;
"@MMK_R_t" = -47;
"@MMK_R_u" = -10;
"@MMK_R_v" = -54;
"@MMK_R_w" = -36;
"@MMK_R_y" = -60;
};
"@MMK_L_B" = {
"@MMK_R_A" = -14;
"@MMK_R_AE" = -32;
"@MMK_R_T" = -12;
"@MMK_R_V" = -21;
"@MMK_R_W" = -20;
"@MMK_R_Y" = -30;
"@MMK_R_a" = -7;
"@MMK_R_c" = -7;
"@MMK_R_y" = -23;
};
"@MMK_L_C" = {
"@MMK_R_A" = -12;
"@MMK_R_AE" = -20;
"@MMK_R_T" = -12;
"@MMK_R_W" = -12;
"@MMK_R_X" = -20;
"@MMK_R_Y" = -34;
"@MMK_R_a" = -10;
"@MMK_R_ampersand" = -3;
"@MMK_R_parenright" = -30;
};
"@MMK_L_D" = {
"@MMK_R_A" = -40;
"@MMK_R_AE" = -46;
"@MMK_R_T" = -29;
"@MMK_R_V" = -24;
"@MMK_R_W" = -40;
"@MMK_R_X" = -50;
"@MMK_R_Y" = -50;
"@MMK_R_a" = -10;
"@MMK_R_ampersand" = -8;
"@MMK_R_backslash" = -17;
"@MMK_R_braceright" = -34;
"@MMK_R_comma" = -40;
"@MMK_R_g" = -17;
"@MMK_R_parenright" = -62;
"@MMK_R_period" = -30;
"@MMK_R_slash" = -44;
"@MMK_R_underscore" = -28;
};
"@MMK_L_E" = {
"@MMK_R_a" = -7;
};
"@MMK_L_F" = {
"@MMK_R_A" = -74;
"@MMK_R_a" = -39;
"@MMK_R_c" = -24;
"@MMK_R_period" = -60;
"@MMK_R_s" = -20;
};
"@MMK_L_G" = {
"@MMK_R_T" = -3;
"@MMK_R_W" = -17;
"@MMK_R_Y" = -40;
};
"@MMK_L_H" = {
"@MMK_R_a" = -11;
"@MMK_R_c" = -10;
};
"@MMK_L_I" = {
"@MMK_R_a" = -7;
};
"@MMK_L_J" = {
"@MMK_R_A" = -30;
"@MMK_R_a" = -13;
"@MMK_R_c" = -10;
"@MMK_R_period" = -20;
};
"@MMK_L_K" = {
"@MMK_R_C" = -48;
"@MMK_R_Y" = -13;
"@MMK_R_a" = -30;
"@MMK_R_ampersand" = -23;
"@MMK_R_c" = -44;
"@MMK_R_guillemotleft" = -40;
"@MMK_R_hyphen" = -60;
"@MMK_R_plus" = -50;
"@MMK_R_question" = -15;
"@MMK_R_registered" = -27;
"@MMK_R_s" = -7;
"@MMK_R_t" = -24;
"@MMK_R_u" = -12;
"@MMK_R_v" = -30;
"@MMK_R_w" = -30;
"@MMK_R_y" = -63;
};
"@MMK_L_L" = {
"@MMK_R_C" = -64;
"@MMK_R_S" = -30;
"@MMK_R_T" = -114;
"@MMK_R_U" = -30;
"@MMK_R_V" = -120;
"@MMK_R_W" = -77;
"@MMK_R_X" = -13;
"@MMK_R_Y" = -100;
"@MMK_R_a" = -13;
"@MMK_R_ampersand" = -7;
"@MMK_R_asterisk" = -98;
"@MMK_R_backslash" = -40;
"@MMK_R_c" = -27;
"@MMK_R_hyphen" = -66;
"@MMK_R_i" = -10;
"@MMK_R_percent" = -57;
"@MMK_R_plus" = -52;
"@MMK_R_question" = -26;
"@MMK_R_t" = -50;
"@MMK_R_u" = -13;
"@MMK_R_uni018F" = -30;
"@MMK_R_uni02BA" = -60;
"@MMK_R_v" = -62;
"@MMK_R_w" = -30;
"@MMK_R_y" = -64;
};
"@MMK_L_M" = {
"@MMK_R_A" = -7;
"@MMK_R_a" = -7;
"@MMK_R_c" = -10;
};
"@MMK_L_N" = {
"@MMK_R_a" = -7;
"@MMK_R_c" = -10;
};
"@MMK_L_Oslash" = {
"@MMK_R_period" = -23;
};
"@MMK_L_P" = {
"@MMK_R_A" = -79;
"@MMK_R_AE" = -123;
"@MMK_R_Y" = -8;
"@MMK_R_a" = -34;
"@MMK_R_c" = -26;
"@MMK_R_dotlessi" = -7;
"@MMK_R_g" = -34;
"@MMK_R_period" = -70;
};
"@MMK_L_Q" = {
"@MMK_R_A" = -17;
"@MMK_R_T" = -28;
"@MMK_R_V" = -24;
"@MMK_R_W" = -25;
"@MMK_R_Y" = -42;
"@MMK_R_a" = -3;
"@MMK_R_g" = -10;
"@MMK_R_u" = 8;
"@MMK_R_w" = 8;
};
"@MMK_L_R" = {
"@MMK_R_C" = -20;
"@MMK_R_S" = -7;
"@MMK_R_T" = -25;
"@MMK_R_U" = -7;
"@MMK_R_V" = -33;
"@MMK_R_W" = -33;
"@MMK_R_X" = -22;
"@MMK_R_Y" = -33;
"@MMK_R_a" = -28;
"@MMK_R_ampersand" = -10;
"@MMK_R_c" = -47;
"@MMK_R_g" = -8;
"@MMK_R_i" = -13;
"@MMK_R_plus" = -12;
"@MMK_R_s" = -32;
"@MMK_R_u" = -13;
};
"@MMK_L_REbackwards" = {
"@MMK_R_T" = 3;
};
"@MMK_L_S" = {
"@MMK_R_A" = -7;
"@MMK_R_T" = -19;
"@MMK_R_V" = -20;
"@MMK_R_W" = -14;
"@MMK_R_Y" = -30;
"@MMK_R_a" = -10;
"@MMK_R_c" = -7;
};
"@MMK_L_T" = {
"@MMK_R_A" = -76;
"@MMK_R_AE" = -96;
"@MMK_R_C" = -28;
"@MMK_R_J" = -88;
"@MMK_R_S" = -18;
"@MMK_R_a" = -98;
"@MMK_R_ampersand" = -27;
"@MMK_R_at" = -92;
"@MMK_R_backslash" = 13;
"@MMK_R_braceleft" = -30;
"@MMK_R_c" = -103;
"@MMK_R_comma" = -80;
"@MMK_R_dotlessi" = -86;
"@MMK_R_exclamdown" = -42;
"@MMK_R_g" = -90;
"@MMK_R_hyphen" = -50;
"@MMK_R_iacute" = 10;
"@MMK_R_ibreve" = 58;
"@MMK_R_multiply" = -60;
"@MMK_R_p" = -47;
"@MMK_R_period" = -80;
"@MMK_R_plus" = -56;
"@MMK_R_question" = 20;
"@MMK_R_questiondown" = -92;
"@MMK_R_s" = -103;
"@MMK_R_semicolon" = -54;
"@MMK_R_slash" = -64;
"@MMK_R_t" = -23;
"@MMK_R_u" = -77;
"@MMK_R_underscore" = -60;
"@MMK_R_v" = -60;
"@MMK_R_w" = -56;
"@MMK_R_x" = -42;
"@MMK_R_y" = -80;
"@MMK_R_z" = -80;
};
"@MMK_L_Thorn" = {
"@MMK_R_A" = -46;
"@MMK_R_T" = -63;
"@MMK_R_V" = -46;
"@MMK_R_W" = -40;
"@MMK_R_Y" = -66;
"@MMK_R_period" = -52;
};
"@MMK_L_U" = {
"@MMK_R_A" = -30;
"@MMK_R_AE" = -46;
"@MMK_R_a" = -10;
"@MMK_R_g" = -20;
"@MMK_R_period" = -20;
"@MMK_R_slash" = -30;
"@MMK_R_underscore" = -40;
};
"@MMK_L_V" = {
"@MMK_R_A" = -85;
"@MMK_R_AE" = -117;
"@MMK_R_C" = -24;
"@MMK_R_J" = -60;
"@MMK_R_S" = -30;
"@MMK_R_a" = -75;
"@MMK_R_ampersand" = -60;
"@MMK_R_at" = -94;
"@MMK_R_backslash" = 17;
"@MMK_R_c" = -88;
"@MMK_R_colon" = -30;
"@MMK_R_comma" = -74;
"@MMK_R_dotlessi" = -26;
"@MMK_R_exclamdown" = -34;
"@MMK_R_g" = -75;
"@MMK_R_hyphen" = -36;
"@MMK_R_multiply" = -66;
"@MMK_R_period" = -80;
"@MMK_R_plus" = -52;
"@MMK_R_s" = -59;
"@MMK_R_slash" = -76;
"@MMK_R_t" = -20;
"@MMK_R_u" = -8;
"@MMK_R_underscore" = -96;
"@MMK_R_v" = -12;
"@MMK_R_y" = -13;
};
"@MMK_L_W" = {
"@MMK_R_A" = -93;
"@MMK_R_AE" = -92;
"@MMK_R_C" = -41;
"@MMK_R_J" = -40;
"@MMK_R_Oslash" = -20;
"@MMK_R_S" = -14;
"@MMK_R_a" = -82;
"@MMK_R_ampersand" = -50;
"@MMK_R_at" = -80;
"@MMK_R_braceleft" = -30;
"@MMK_R_c" = -95;
"@MMK_R_comma" = -60;
"@MMK_R_dotlessi" = -36;
"@MMK_R_exclamdown" = -30;
"@MMK_R_g" = -73;
"@MMK_R_hyphen" = -36;
"@MMK_R_i" = -18;
"@MMK_R_multiply" = -28;
"@MMK_R_period" = -70;
"@MMK_R_plus" = -52;
"@MMK_R_s" = -58;
"@MMK_R_semicolon" = -34;
"@MMK_R_slash" = -60;
"@MMK_R_u" = -38;
"@MMK_R_underscore" = -70;
"@MMK_R_v" = -12;
};
"@MMK_L_X" = {
"@MMK_R_A" = -13;
"@MMK_R_C" = -50;
"@MMK_R_a" = -30;
"@MMK_R_c" = -34;
"@MMK_R_s" = -18;
"@MMK_R_u" = -28;
"@MMK_R_w" = -30;
"@MMK_R_y" = -53;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -83;
"@MMK_R_AE" = -126;
"@MMK_R_C" = -50;
"@MMK_R_J" = -84;
"@MMK_R_Oslash" = -46;
"@MMK_R_S" = -40;
"@MMK_R_a" = -101;
"@MMK_R_ampersand" = -43;
"@MMK_R_at" = -110;
"@MMK_R_braceleft" = -50;
"@MMK_R_c" = -106;
"@MMK_R_colon" = -34;
"@MMK_R_comma" = -73;
"@MMK_R_dotlessi" = -36;
"@MMK_R_exclamdown" = -34;
"@MMK_R_g" = -84;
"@MMK_R_hyphen" = -56;
"@MMK_R_multiply" = -60;
"@MMK_R_period" = -88;
"@MMK_R_plus" = -74;
"@MMK_R_questiondown" = -86;
"@MMK_R_s" = -70;
"@MMK_R_semicolon" = -47;
"@MMK_R_slash" = -64;
"@MMK_R_t" = -30;
"@MMK_R_u" = -28;
"@MMK_R_underscore" = -70;
"@MMK_R_uni02BA" = 36;
"@MMK_R_v" = -38;
"@MMK_R_w" = -12;
"@MMK_R_y" = -20;
"@MMK_R_z" = -20;
};
"@MMK_L_Z" = {
"@MMK_R_C" = -20;
"@MMK_R_a" = -7;
"@MMK_R_c" = -13;
};
"@MMK_L_a" = {
"@MMK_R_asterisk" = -28;
"@MMK_R_backslash" = -40;
"@MMK_R_g" = -5;
"@MMK_R_registered" = -45;
"@MMK_R_uni02BA" = -50;
"@MMK_R_v" = -7;
"@MMK_R_y" = -16;
};
"@MMK_L_aacute" = {
"@MMK_R_asterisk" = -38;
"@MMK_R_backslash" = -44;
"@MMK_R_c" = -9;
"@MMK_R_g" = -3;
"@MMK_R_i" = -3;
"@MMK_R_quotesingle" = -20;
"@MMK_R_registered" = -45;
"@MMK_R_s" = -5;
"@MMK_R_t" = -21;
"@MMK_R_v" = -37;
"@MMK_R_w" = -20;
"@MMK_R_y" = -16;
"@MMK_R_z" = 13;
};
"@MMK_L_ae" = {
"@MMK_R_Y" = -103;
"@MMK_R_asterisk" = -28;
"@MMK_R_backslash" = -54;
"@MMK_R_g" = -7;
"@MMK_R_question" = -20;
"@MMK_R_registered" = -45;
"@MMK_R_t" = -12;
"@MMK_R_uni02BA" = -48;
"@MMK_R_v" = -20;
"@MMK_R_w" = -20;
"@MMK_R_x" = -25;
"@MMK_R_y" = -23;
};
"@MMK_L_ampersand" = {
"@MMK_R_C" = -8;
"@MMK_R_T" = -48;
"@MMK_R_V" = -54;
"@MMK_R_W" = -48;
"@MMK_R_Y" = -64;
"@MMK_R_percent" = -28;
"@MMK_R_uni02BA" = -15;
"@MMK_R_w" = -8;
"@MMK_R_y" = -8;
};
"@MMK_L_asterisk" = {
"@MMK_R_A" = -94;
"@MMK_R_AE" = -118;
"@MMK_R_a" = -23;
"@MMK_R_c" = -28;
"@MMK_R_s" = -26;
};
"@MMK_L_at" = {
"@MMK_R_A" = -44;
"@MMK_R_AE" = -60;
"@MMK_R_T" = -52;
"@MMK_R_V" = -60;
"@MMK_R_W" = -44;
"@MMK_R_Y" = -86;
"@MMK_R_percent" = -40;
"@MMK_R_period" = -30;
"@MMK_R_uni02BA" = -16;
"@MMK_R_w" = -12;
"@MMK_R_y" = -20;
};
"@MMK_L_at.case" = {
"@MMK_R_A" = -17;
};
"@MMK_L_b" = {
"@MMK_R_T" = -103;
"@MMK_R_V" = -88;
"@MMK_R_asterisk" = -43;
"@MMK_R_backslash" = -76;
"@MMK_R_braceright" = -50;
"@MMK_R_g" = -8;
"@MMK_R_i" = -3;
"@MMK_R_parenright" = -44;
"@MMK_R_question" = -30;
"@MMK_R_registered" = -45;
"@MMK_R_slash" = -14;
"@MMK_R_t" = -20;
"@MMK_R_uni02BA" = -48;
"@MMK_R_v" = -24;
"@MMK_R_w" = -18;
"@MMK_R_x" = -24;
"@MMK_R_y" = -37;
};
"@MMK_L_backslash" = {
"@MMK_R_C" = -12;
"@MMK_R_T" = -22;
"@MMK_R_V" = -60;
"@MMK_R_W" = -52;
"@MMK_R_Y" = -70;
"@MMK_R_c" = -23;
"@MMK_R_hyphen" = -30;
"@MMK_R_uni02BA" = -30;
};
"@MMK_L_braceleft" = {
"@MMK_R_C" = -34;
"@MMK_R_c" = -50;
};
"@MMK_L_braceright" = {
"@MMK_R_A" = -52;
"@MMK_R_AE" = -62;
"@MMK_R_T" = -30;
"@MMK_R_W" = -30;
"@MMK_R_Y" = -50;
"@MMK_R_period" = -50;
};
"@MMK_L_c" = {
"@MMK_R_asterisk" = -28;
"@MMK_R_backslash" = -48;
"@MMK_R_parenright" = -13;
"@MMK_R_question" = -30;
"@MMK_R_registered" = -45;
"@MMK_R_t" = -8;
"@MMK_R_v" = -17;
};
"@MMK_L_colon" = {
"@MMK_R_V" = -30;
"@MMK_R_Y" = -34;
};
"@MMK_L_comma" = {
"@MMK_R_C" = -20;
"@MMK_R_T" = -80;
"@MMK_R_V" = -74;
"@MMK_R_W" = -54;
"@MMK_R_Y" = -83;
"@MMK_R_percent" = -53;
"@MMK_R_t" = -30;
"@MMK_R_w" = -30;
"@MMK_R_y" = -54;
};
"@MMK_L_dcaron" = {
"@MMK_R_b" = 107;
};
"@MMK_L_exclamdown" = {
"@MMK_R_T" = -42;
"@MMK_R_V" = -34;
"@MMK_R_W" = -30;
"@MMK_R_Y" = -34;
};
"@MMK_L_f" = {
"@MMK_R_a" = -20;
"@MMK_R_c" = -20;
"@MMK_R_g" = -40;
"@MMK_R_period" = -30;
"@MMK_R_s" = -18;
};
"@MMK_L_fl" = {
"@MMK_R_c" = -3;
};
"@MMK_L_g" = {
"@MMK_R_a" = -7;
"@MMK_R_c" = -13;
"@MMK_R_f" = 15;
"@MMK_R_j" = 20;
"@MMK_R_v" = 8;
};
"@MMK_L_germandbls" = {
"@MMK_R_c" = -8;
"@MMK_R_y" = -37;
};
"@MMK_L_greater" = {
"@MMK_R_period" = -60;
};
"@MMK_L_hyphen" = {
"@MMK_R_A" = -30;
"@MMK_R_T" = -53;
"@MMK_R_V" = -38;
"@MMK_R_W" = -47;
"@MMK_R_X" = -38;
"@MMK_R_Y" = -63;
"@MMK_R_backslash" = -46;
"@MMK_R_slash" = -46;
};
"@MMK_L_i" = {
"@MMK_R_g" = -3;
"@MMK_R_z" = 17;
};
"@MMK_L_iacute" = {
"@MMK_R_T" = 10;
"@MMK_R_b" = 13;
"@MMK_R_uni02BA" = 6;
};
"@MMK_L_ibreve" = {
"@MMK_R_T" = 58;
"@MMK_R_b" = 40;
};
"@MMK_L_igrave" = {
"@MMK_R_T" = 10;
};
"@MMK_L_k" = {
"@MMK_R_a" = -31;
"@MMK_R_c" = -39;
"@MMK_R_g" = -20;
"@MMK_R_quotesingle" = -7;
"@MMK_R_s" = -26;
"@MMK_R_y" = -7;
};
"@MMK_L_l" = {
"@MMK_R_c" = -3;
"@MMK_R_ibreve" = 27;
};
"@MMK_L_lslash" = {
"@MMK_R_c" = 3;
"@MMK_R_t" = 17;
"@MMK_R_u" = 13;
"@MMK_R_y" = 7;
"@MMK_R_z" = 18;
};
"@MMK_L_multiply" = {
"@MMK_R_A" = -24;
"@MMK_R_AE" = -35;
"@MMK_R_T" = -60;
"@MMK_R_V" = -66;
"@MMK_R_W" = -28;
"@MMK_R_Y" = -60;
"@MMK_R_y" = -12;
};
"@MMK_L_parenleft" = {
"@MMK_R_A" = -23;
"@MMK_R_C" = -62;
"@MMK_R_a" = -44;
"@MMK_R_c" = -44;
"@MMK_R_s" = -20;
"@MMK_R_t" = -12;
};
"@MMK_L_period" = {
"@MMK_R_C" = -30;
"@MMK_R_T" = -80;
"@MMK_R_U" = -20;
"@MMK_R_V" = -80;
"@MMK_R_W" = -70;
"@MMK_R_Y" = -88;
"@MMK_R_backslash" = -60;
"@MMK_R_braceleft" = -50;
"@MMK_R_less" = -60;
"@MMK_R_question" = -36;
"@MMK_R_v" = -40;
"@MMK_R_w" = -23;
"@MMK_R_y" = -40;
};
"@MMK_L_plus" = {
"@MMK_R_A" = -32;
"@MMK_R_T" = -56;
"@MMK_R_V" = -52;
"@MMK_R_W" = -52;
"@MMK_R_Y" = -74;
};
"@MMK_L_question" = {
"@MMK_R_A" = -70;
"@MMK_R_AE" = -96;
"@MMK_R_period" = -94;
};
"@MMK_L_questiondown" = {
"@MMK_R_T" = -56;
"@MMK_R_Y" = -56;
"@MMK_R_c" = -20;
"@MMK_R_percent" = -25;
"@MMK_R_z" = 20;
};
"@MMK_L_quotedblright" = {
"@MMK_R_J" = -77;
"@MMK_R_ampersand" = -54;
"@MMK_R_at" = -100;
"@MMK_R_c" = -47;
"@MMK_R_s" = -74;
"@MMK_R_slash" = -116;
};
"@MMK_L_r" = {
"@MMK_R_a" = -7;
"@MMK_R_c" = -13;
"@MMK_R_colon" = 12;
"@MMK_R_comma" = -34;
"@MMK_R_f" = 17;
"@MMK_R_g" = -8;
"@MMK_R_period" = -40;
"@MMK_R_t" = 7;
"@MMK_R_u" = 9;
};
"@MMK_L_s" = {
"@MMK_R_asterisk" = -38;
"@MMK_R_backslash" = -50;
"@MMK_R_parenright" = -8;
"@MMK_R_question" = -26;
"@MMK_R_registered" = -45;
"@MMK_R_t" = -11;
"@MMK_R_v" = -24;
"@MMK_R_w" = -16;
"@MMK_R_y" = -24;
};
"@MMK_L_semicolon" = {
"@MMK_R_T" = -46;
"@MMK_R_Y" = -8;
};
"@MMK_L_slash" = {
"@MMK_R_C" = -30;
"@MMK_R_T" = 20;
"@MMK_R_V" = 30;
"@MMK_R_W" = 8;
"@MMK_R_Y" = 24;
"@MMK_R_a" = -54;
"@MMK_R_c" = -48;
"@MMK_R_dotlessi" = -19;
"@MMK_R_g" = -38;
"@MMK_R_hyphen" = -59;
"@MMK_R_period" = -119;
"@MMK_R_s" = -30;
};
"@MMK_L_space" = {
"@MMK_R_A" = -3;
"@MMK_R_T" = -35;
"@MMK_R_V" = -13;
"@MMK_R_W" = -17;
};
"@MMK_L_t" = {
"@MMK_R_c" = -13;
"@MMK_R_comma" = 35;
"@MMK_R_f" = 13;
"@MMK_R_space" = 10;
};
"@MMK_L_underscore" = {
"@MMK_R_C" = -28;
"@MMK_R_T" = -60;
"@MMK_R_U" = -40;
"@MMK_R_V" = -96;
"@MMK_R_W" = -70;
"@MMK_R_Y" = -70;
};
"@MMK_L_uni018E" = {
"@MMK_R_T" = 3;
};
"@MMK_L_v" = {
"@MMK_R_A" = -54;
"@MMK_R_a" = -25;
"@MMK_R_c" = -24;
"@MMK_R_g" = -24;
"@MMK_R_period" = -40;
"@MMK_R_s" = -21;
"@MMK_R_t" = 8;
};
"@MMK_L_w" = {
"@MMK_R_a" = -23;
"@MMK_R_at" = -40;
"@MMK_R_c" = -18;
"@MMK_R_comma" = -30;
"@MMK_R_g" = -20;
"@MMK_R_period" = -23;
"@MMK_R_questiondown" = -17;
"@MMK_R_t" = 7;
};
"@MMK_L_x" = {
"@MMK_R_a" = -8;
"@MMK_R_c" = -24;
"@MMK_R_t" = 10;
};
"@MMK_L_y" = {
"@MMK_R_T" = -63;
"@MMK_R_a" = -36;
"@MMK_R_ampersand" = -8;
"@MMK_R_at" = -56;
"@MMK_R_c" = -39;
"@MMK_R_comma" = -64;
"@MMK_R_g" = -34;
"@MMK_R_multiply" = -12;
"@MMK_R_period" = -74;
"@MMK_R_questiondown" = -56;
"@MMK_R_quotesingle" = 10;
"@MMK_R_s" = -20;
"@MMK_R_slash" = -40;
};
A = {
T = -73;
Tcaron = -73;
W = -90;
Wacute = -90;
Wcircumflex = -90;
Wdieresis = -90;
Wgrave = -90;
uni0162 = -73;
uni021A = -73;
};
AE = {
ibreve = 36;
imacron = 54;
itilde = 38;
};
AEacute = {
ibreve = 36;
imacron = 54;
itilde = 38;
};
Aacute = {
asterisk = -94;
at = -12;
backslash = -60;
braceleft = -52;
f = -12;
multiply = -24;
parenright = -23;
plus = -32;
question = -36;
v = -54;
};
Abreve = {
asterisk = -94;
at = -12;
backslash = -60;
braceleft = -52;
f = -12;
multiply = -24;
parenright = -23;
plus = -32;
question = -36;
v = -54;
};
Acircumflex = {
asterisk = -94;
at = -12;
backslash = -60;
braceleft = -52;
f = -12;
multiply = -24;
parenright = -23;
plus = -32;
question = -36;
v = -54;
};
Adieresis = {
asterisk = -94;
at = -12;
backslash = -60;
braceleft = -52;
f = -12;
multiply = -24;
parenright = -23;
plus = -32;
question = -36;
v = -54;
};
Agrave = {
asterisk = -94;
at = -12;
backslash = -60;
braceleft = -52;
f = -12;
multiply = -24;
parenright = -23;
plus = -32;
question = -36;
v = -54;
};
Amacron = {
asterisk = -94;
at = -12;
backslash = -60;
braceleft = -52;
f = -12;
multiply = -24;
parenright = -23;
plus = -32;
question = -36;
v = -54;
};
Aogonek = {
asterisk = -94;
at = -12;
backslash = -60;
braceleft = -52;
f = -12;
multiply = -24;
parenright = -23;
plus = -32;
question = -36;
v = -54;
};
Aring = {
asterisk = -94;
at = -12;
backslash = -60;
braceleft = -52;
f = -12;
multiply = -24;
parenright = -23;
plus = -32;
question = -36;
v = -54;
};
Atilde = {
asterisk = -94;
at = -12;
backslash = -60;
braceleft = -52;
f = -12;
multiply = -24;
parenright = -23;
plus = -32;
question = -36;
v = -54;
};
B = {
Aacute = -8;
Abreve = -8;
Acircumflex = -8;
Adieresis = -8;
Agrave = -8;
Amacron = -8;
Aogonek = -8;
Aring = -8;
Atilde = -8;
X = -22;
imacron = 20;
};
C = {
imacron = 30;
itilde = 30;
};
Cacute = {
imacron = 30;
itilde = 30;
};
Ccaron = {
imacron = 30;
itilde = 30;
};
Ccedilla = {
imacron = 30;
itilde = 30;
};
Cdotaccent = {
imacron = 30;
itilde = 30;
};
E = {
imacron = 54;
itilde = 38;
};
Eacute = {
ibreve = 36;
imacron = 54;
itilde = 38;
};
Ebreve = {
ibreve = 36;
imacron = 54;
itilde = 38;
};
Ecaron = {
ibreve = 36;
imacron = 54;
itilde = 38;
};
Ecircumflex = {
ibreve = 36;
imacron = 54;
itilde = 38;
};
Edieresis = {
ibreve = 36;
imacron = 54;
itilde = 38;
};
Edotaccent = {
ibreve = 36;
imacron = 54;
itilde = 38;
};
Egrave = {
ibreve = 36;
imacron = 54;
itilde = 38;
};
Emacron = {
ibreve = 36;
imacron = 54;
itilde = 38;
};
Eogonek = {
ibreve = 36;
imacron = 54;
itilde = 38;
};
Euro = {
imacron = 30;
itilde = 30;
};
F = {
J = -52;
ampersand = -20;
at = -40;
comma = -60;
i = 0;
imacron = 70;
multiply = -20;
underscore = -40;
};
G = {
imacron = 20;
};
Gbreve = {
imacron = 20;
};
Gdotaccent = {
imacron = 20;
};
H = {
imacron = 40;
itilde = 18;
};
I = {
imacron = 40;
itilde = 18;
};
Iacute = {
imacron = 40;
itilde = 13;
};
Ibreve = {
imacron = 40;
itilde = 13;
};
Icircumflex = {
imacron = 40;
itilde = 13;
};
Idieresis = {
imacron = 40;
itilde = 13;
};
Idotaccent = {
imacron = 40;
itilde = 13;
};
Igrave = {
imacron = 40;
itilde = 13;
};
Imacron = {
imacron = 40;
itilde = 13;
};
Iogonek = {
imacron = 40;
itilde = 13;
};
Itilde = {
imacron = 40;
itilde = 13;
};
J = {
igrave = 0;
imacron = 64;
};
K = {
ibreve = 20;
icircumflex = 0;
imacron = 60;
};
L = {
V = -82;
};
Lacute = {
V = -82;
};
Lcaron = {
V = -82;
};
Ldot = {
V = -82;
};
Lslash = {
V = -82;
};
M = {
imacron = 40;
itilde = 18;
};
N = {
i = -3;
imacron = 40;
itilde = 13;
};
Nacute = {
imacron = 40;
itilde = 13;
};
Ncaron = {
imacron = 40;
itilde = 13;
};
Ntilde = {
imacron = 40;
itilde = 13;
};
OE = {
ibreve = 36;
imacron = 54;
itilde = 38;
};
Oslash = {
igrave = 56;
imacron = 58;
slash = -44;
underscore = -40;
};
P = {
J = -72;
X = -30;
Z = -20;
Zacute = -20;
Zcaron = -20;
Zdotaccent = -20;
aacute = -28;
abreve = -28;
acircumflex = -28;
adieresis = -28;
ae = -28;
agrave = -28;
amacron = -28;
ampersand = -36;
aogonek = -28;
aring = -28;
at = -42;
atilde = -28;
comma = -88;
e = -33;
icircumflex = 13;
itilde = 40;
parenright = -30;
plus = -12;
slash = -76;
underscore = -72;
};
Q = {
Wacute = -23;
Wcircumflex = -23;
Wdieresis = -23;
Wgrave = -23;
X = -23;
at = -17;
};
R = {
imacron = 17;
itilde = 18;
};
Racute = {
imacron = 17;
itilde = 18;
};
Rcaron = {
imacron = 17;
itilde = 18;
};
S = {
imacron = 40;
itilde = 20;
};
Sacute = {
imacron = 40;
itilde = 20;
};
Scaron = {
imacron = 40;
itilde = 20;
};
Scedilla = {
imacron = 40;
itilde = 20;
};
T = {
adieresis = -65;
amacron = -78;
atilde = -88;
edieresis = -83;
emacron = -90;
odieresis = -90;
omacron = -97;
racute = -59;
rcaron = -39;
scaron = -90;
udieresis = -63;
uni1EBD = -97;
ydieresis = -67;
};
Tcaron = {
adieresis = -65;
amacron = -78;
atilde = -88;
edieresis = -83;
emacron = -90;
odieresis = -90;
omacron = -97;
racute = -59;
rcaron = -39;
scaron = -90;
udieresis = -63;
uni1EBD = -97;
ydieresis = -67;
};
Thorn = {
X = -70;
parenright = -36;
};
U = {
imacron = 45;
itilde = 23;
};
Uacute = {
imacron = 45;
itilde = 23;
};
Ubreve = {
imacron = 45;
itilde = 23;
};
Ucircumflex = {
imacron = 45;
itilde = 23;
};
Udieresis = {
imacron = 45;
itilde = 23;
};
Ugrave = {
imacron = 45;
itilde = 23;
};
Uhungarumlaut = {
imacron = 45;
itilde = 23;
};
Umacron = {
imacron = 45;
itilde = 23;
};
Uogonek = {
imacron = 45;
itilde = 23;
};
Uring = {
imacron = 45;
itilde = 23;
};
Utilde = {
imacron = 45;
itilde = 23;
};
V = {
adieresis = -58;
edieresis = -78;
emacron = -82;
ibreve = 33;
imacron = 64;
rcaron = -23;
};
W = {
edieresis = -85;
ibreve = 13;
icircumflex = 13;
imacron = 64;
itilde = 33;
rcaron = -22;
uni1EF9 = -20;
y = -20;
yacute = -20;
ycircumflex = -20;
ydieresis = -20;
ygrave = -20;
};
Wacute = {
edieresis = -85;
ibreve = 13;
icircumflex = 13;
imacron = 64;
itilde = 33;
rcaron = -22;
};
Wcircumflex = {
edieresis = -85;
ibreve = 13;
icircumflex = 13;
imacron = 64;
itilde = 33;
rcaron = -22;
};
Wdieresis = {
edieresis = -85;
ibreve = 13;
icircumflex = 13;
imacron = 64;
itilde = 33;
rcaron = -22;
};
Wgrave = {
edieresis = -85;
ibreve = 13;
icircumflex = 13;
imacron = 64;
itilde = 33;
rcaron = -22;
};
X = {
X = -7;
aacute = -24;
abreve = -24;
acircumflex = -24;
adieresis = -24;
ae = -24;
agrave = -24;
amacron = -24;
ampersand = -27;
aogonek = -24;
aring = -24;
at = -17;
atilde = -24;
ibreve = 30;
imacron = 50;
itilde = 20;
multiply = -36;
question = -24;
v = -30;
};
Y = {
ibreve = 40;
imacron = 68;
itilde = 20;
};
Yacute = {
ibreve = 40;
imacron = 68;
itilde = 20;
};
Ycircumflex = {
ibreve = 40;
imacron = 68;
itilde = 20;
};
Ydieresis = {
ibreve = 40;
imacron = 68;
itilde = 20;
};
Ygrave = {
ibreve = 40;
imacron = 68;
itilde = 20;
};
Z = {
imacron = 64;
itilde = 34;
};
Zacute = {
imacron = 64;
itilde = 34;
};
Zcaron = {
imacron = 64;
itilde = 34;
};
Zdotaccent = {
imacron = 64;
itilde = 34;
};
a = {
uni1EF9 = -28;
y = -28;
yacute = -28;
ycircumflex = -28;
ydieresis = -28;
ygrave = -28;
};
aacute = {
v = -17;
};
abreve = {
v = -17;
};
acircumflex = {
v = -17;
};
adieresis = {
v = -17;
};
ae = {
lslash = 7;
};
aeacute = {
lslash = 7;
};
agrave = {
v = -17;
};
amacron = {
v = -17;
};
ampersand = {
Wacute = -34;
Wcircumflex = -34;
Wdieresis = -34;
Wgrave = -34;
asterisk = -55;
backslash = -48;
question = -40;
quotedblright = -25;
quoteright = -25;
v = -8;
};
aogonek = {
v = -17;
};
aring = {
v = -17;
};
asterisk = {
J = -66;
ampersand = -44;
at = -54;
exclam = -17;
imacron = 72;
itilde = 17;
questiondown = -90;
slash = -113;
underscore = -87;
};
at = {
X = -52;
asterisk = -38;
backslash = -50;
comma = -38;
greater = -46;
less = -30;
parenright = -66;
question = -30;
slash = -50;
underscore = -60;
};
atilde = {
v = -17;
};
b = {
l = -3;
lslash = 10;
};
backslash = {
backslash = -132;
comma = 52;
question = -30;
quotedblbase = 42;
quotedblleft = -72;
quotedblright = -70;
quoteleft = -72;
quoteright = -70;
quotesinglbase = 42;
underscore = 44;
};
bar = {
imacron = 40;
itilde = 13;
};
braceright = {
comma = -34;
};
bracketleft = {
imacron = 25;
};
bracketright = {
imacron = 60;
itilde = 28;
};
brokenbar = {
imacron = 40;
itilde = 13;
};
comma = {
backslash = -58;
v = -46;
};
d = {
imacron = 46;
};
dcaron = {
questiondown = -53;
};
dcroat = {
imacron = 84;
};
dollar = {
imacron = 40;
itilde = 20;
};
e = {
T = -103;
Tcaron = -103;
lslash = 7;
uni0162 = -103;
uni021A = -103;
};
eacute = {
lslash = 7;
};
ebreve = {
lslash = 7;
};
ecaron = {
lslash = 7;
};
ecircumflex = {
lslash = 7;
};
edieresis = {
lslash = 7;
};
edotaccent = {
lslash = 7;
};
egrave = {
lslash = 7;
};
emacron = {
lslash = 7;
};
eogonek = {
lslash = 7;
};
eth = {
imacron = 30;
};
exclam = {
asterisk = -17;
igrave = 46;
imacron = 60;
};
f = {
at = -32;
e = -23;
f = 7;
i = -3;
ibreve = 30;
igrave = 40;
imacron = 60;
itilde = 38;
};
fl = {
imacron = 46;
};
g = {
lslash = 8;
};
gbreve = {
lslash = 8;
};
gdotaccent = {
lslash = 8;
};
germandbls = {
asterisk = -60;
v = -46;
};
greater = {
at = -62;
parenright = -56;
};
i = {
lslash = 10;
};
iacute = {
asterisk = 35;
b = 60;
backslash = 74;
braceright = 13;
bracketleft = 60;
bracketright = 25;
exclam = 46;
f = 40;
idieresis = 80;
imacron = 57;
itilde = 44;
k = 60;
lacute = 60;
lcaron = 60;
ldot = 60;
lslash = 52;
parenright = 25;
question = 62;
quotedblleft = 42;
quotedblright = 63;
quoteleft = 42;
quoteright = 63;
uni0137 = 60;
uni013C = 60;
};
ibreve = {
backslash = 60;
l = 27;
question = 34;
};
icircumflex = {
l = 27;
};
idieresis = {
b = 50;
f = 33;
h = 50;
i = 67;
j = 73;
k = 50;
l = 27;
t = 20;
tcaron = 20;
uni0163 = 20;
uni021B = 20;
};
imacron = {
B = 40;
D = 40;
Dcaron = 40;
E = 40;
Eacute = 40;
Ebreve = 40;
Ecaron = 40;
Ecircumflex = 40;
Edieresis = 40;
Edotaccent = 40;
Egrave = 40;
Emacron = 40;
Eogonek = 40;
F = 40;
H = 40;
I = 40;
Iacute = 40;
Ibreve = 40;
Icircumflex = 40;
Idieresis = 40;
Idotaccent = 40;
Igrave = 40;
Imacron = 40;
Itilde = 40;
K = 40;
L = 40;
Lacute = 40;
Lcaron = 40;
Ldot = 40;
M = 40;
N = 40;
Nacute = 40;
Ncaron = 40;
Ntilde = 40;
P = 40;
R = 40;
Racute = 40;
Rcaron = 40;
Thorn = 40;
asterisk = 72;
b = 60;
backslash = 78;
bar = 40;
bracketleft = 60;
bracketright = 25;
brokenbar = 40;
exclam = 60;
f = 13;
germandbls = 60;
k = 60;
l = 60;
lacute = 60;
lcaron = 60;
ldot = 60;
lslash = 60;
question = 68;
quotedblleft = 66;
quotedblright = 52;
quoteleft = 66;
quoteright = 52;
thorn = 60;
uni0136 = 40;
uni0137 = 60;
uni013B = 40;
uni013C = 60;
uni0145 = 40;
uni0156 = 40;
uni02B9 = 33;
uni02BA = 33;
uni1EBC = 40;
z = 44;
zacute = 44;
zcaron = 44;
zdotaccent = 44;
};
itilde = {
asterisk = 13;
b = 17;
bracketleft = 28;
f = 30;
j = 34;
k = 17;
l = 17;
lacute = 17;
lcaron = 17;
ldot = 17;
question = 40;
quotedblleft = 12;
quotedblright = 32;
quoteleft = 12;
quoteright = 32;
uni0137 = 17;
uni013C = 17;
uni02B9 = 20;
uni02BA = 20;
};
j = {
itilde = 34;
};
l = {
f = 3;
imacron = 46;
};
lacute = {
imacron = 46;
};
lcaron = {
questiondown = -53;
};
less = {
at = -40;
parenright = -40;
};
lslash = {
imacron = 60;
};
multiply = {
X = -36;
};
n = {
T = -82;
Tcaron = -82;
uni0162 = -82;
uni021A = -82;
};
o = {
l = -3;
lslash = 10;
};
oacute = {
l = -3;
lslash = 10;
};
obreve = {
l = -3;
lslash = 10;
};
ocircumflex = {
l = -3;
lslash = 10;
};
odieresis = {
l = -3;
lslash = 10;
};
oe = {
lslash = 7;
};
ograve = {
l = -3;
lslash = 10;
};
ohungarumlaut = {
l = -3;
lslash = 10;
};
omacron = {
l = -3;
lslash = 10;
};
otilde = {
l = -3;
lslash = 10;
};
p = {
l = -3;
lslash = 10;
};
parenleft = {
ampersand = -40;
at = -36;
};
plus = {
slash = -42;
};
q = {
backslash = -36;
j = 29;
};
question = {
J = -46;
X = -20;
at = -52;
comma = -70;
ibreve = 34;
igrave = 40;
imacron = 60;
itilde = 44;
parenright = -63;
questiondown = -110;
quotedblbase = -40;
quotesinglbase = -40;
slash = -74;
underscore = -90;
};
questiondown = {
backslash = -34;
question = -36;
quotedblbase = 36;
quotesinglbase = 36;
v = -17;
};
quotedbl = {
ibreve = 32;
imacron = 52;
itilde = 26;
};
quotedblbase = {
backslash = -84;
question = -8;
};
quotedblleft = {
J = -80;
at = -86;
ibreve = 17;
imacron = 66;
itilde = 24;
questiondown = -84;
slash = -100;
};
quotedblright = {
ibreve = 32;
imacron = 52;
itilde = 26;
};
quoteleft = {
J = -80;
at = -86;
ibreve = 17;
imacron = 66;
itilde = 24;
questiondown = -84;
slash = -100;
};
quoteright = {
ibreve = 32;
imacron = 52;
itilde = 26;
};
quotesinglbase = {
backslash = -84;
question = -8;
};
quotesingle = {
ibreve = 32;
imacron = 52;
itilde = 26;
};
s = {
lslash = 7;
};
sacute = {
lslash = 7;
};
scaron = {
lslash = 7;
};
scedilla = {
lslash = 7;
};
slash = {
B = 52;
D = 52;
Dcaron = 52;
E = 52;
Eacute = 52;
Ebreve = 52;
Ecaron = 52;
Ecircumflex = 52;
Edieresis = 52;
Edotaccent = 52;
Egrave = 52;
Emacron = 52;
Eogonek = 52;
F = 52;
H = 52;
I = 52;
Iacute = 52;
Ibreve = 52;
Icircumflex = 60;
Idieresis = 48;
Idotaccent = 52;
Igrave = 52;
Imacron = 68;
Itilde = 52;
J = -40;
K = 52;
L = 52;
Lacute = 52;
Lcaron = 52;
Ldot = 52;
M = 52;
N = 52;
Nacute = 52;
Ncaron = 52;
Ntilde = 52;
Oslash = -30;
P = 52;
R = 52;
Racute = 52;
Rcaron = 52;
Thorn = 52;
ampersand = -50;
asterisk = -17;
at = -87;
bar = 52;
brokenbar = 52;
comma = -60;
ibreve = 40;
icircumflex = 37;
idieresis = 36;
igrave = 70;
imacron = 78;
plus = -52;
questiondown = -64;
quotedblbase = -86;
quotesinglbase = -86;
slash = -120;
underscore = -146;
uni0136 = 52;
uni013B = 52;
uni0145 = 52;
uni0156 = 52;
uni1EBC = 52;
};
space = {
X = -18;
};
thorn = {
l = -3;
lslash = 10;
};
underscore = {
ampersand = -40;
asterisk = -87;
backslash = -157;
j = 25;
question = -46;
underscore = -113;
};
uni0122 = {
imacron = 20;
};
uni0123 = {
lslash = 8;
};
uni0136 = {
ibreve = 20;
icircumflex = 0;
imacron = 60;
};
uni013B = {
V = -82;
};
uni013C = {
imacron = 46;
};
uni0145 = {
imacron = 40;
itilde = 13;
};
uni0156 = {
imacron = 17;
itilde = 18;
};
uni0162 = {
adieresis = -65;
amacron = -78;
atilde = -88;
edieresis = -83;
emacron = -90;
odieresis = -90;
omacron = -97;
racute = -59;
rcaron = -39;
scaron = -90;
udieresis = -63;
uni1EBD = -97;
ydieresis = -67;
};
uni0218 = {
imacron = 40;
itilde = 20;
};
uni0219 = {
lslash = 7;
};
uni021A = {
adieresis = -65;
amacron = -78;
atilde = -88;
edieresis = -83;
emacron = -90;
odieresis = -90;
omacron = -97;
racute = -59;
rcaron = -39;
scaron = -90;
udieresis = -63;
uni1EBD = -97;
ydieresis = -67;
};
uni0259 = {
l = -3;
lslash = 10;
};
uni02B9 = {
J = -23;
at = -27;
imacron = 33;
itilde = 20;
};
uni02BA = {
J = -23;
at = -27;
imacron = 33;
itilde = 20;
};
uni1EBC = {
ibreve = 36;
imacron = 54;
itilde = 38;
};
uni1EBD = {
lslash = 7;
};
uni1EF8 = {
ibreve = 40;
imacron = 68;
itilde = 20;
};
uni20A8 = {
lslash = 7;
};
v = {
aacute = -28;
abreve = -28;
acircumflex = -28;
adieresis = -28;
ae = -28;
agrave = -28;
amacron = -28;
ampersand = -18;
aogonek = -28;
aring = -28;
at = -46;
atilde = -28;
comma = -50;
f = 20;
questiondown = -42;
};
x = {
i = 7;
};
z = {
imacron = 40;
};
zacute = {
imacron = 40;
};
zcaron = {
imacron = 40;
};
zdotaccent = {
imacron = 40;
};
};
"59E4F189-9048-43B1-80D4-C98F20AC972F" = {
"@MMK_L_A" = {
"@MMK_R_C" = -40;
"@MMK_R_N" = -15;
"@MMK_R_S" = -20;
"@MMK_R_T" = -74;
"@MMK_R_U" = -30;
"@MMK_R_V" = -89;
"@MMK_R_W" = -70;
"@MMK_R_X" = -20;
"@MMK_R_Y" = -90;
"@MMK_R_a" = -20;
"@MMK_R_ampersand" = -20;
"@MMK_R_asterisk" = -96;
"@MMK_R_at" = -9;
"@MMK_R_backslash" = -60;
"@MMK_R_braceleft" = -49;
"@MMK_R_c" = -23;
"@MMK_R_f" = -9;
"@MMK_R_g" = -18;
"@MMK_R_hyphen" = -30;
"@MMK_R_multiply" = -26;
"@MMK_R_parenright" = -17;
"@MMK_R_plus" = -29;
"@MMK_R_question" = -34;
"@MMK_R_space" = -15;
"@MMK_R_t" = -49;
"@MMK_R_u" = -10;
"@MMK_R_v" = -56;
"@MMK_R_w" = -34;
"@MMK_R_y" = -60;
};
"@MMK_L_B" = {
"@MMK_R_A" = -15;
"@MMK_R_AE" = -29;
"@MMK_R_T" = -9;
"@MMK_R_V" = -21;
"@MMK_R_W" = -20;
"@MMK_R_Y" = -30;
"@MMK_R_a" = -10;
"@MMK_R_c" = -10;
"@MMK_R_y" = -30;
};
"@MMK_L_C" = {
"@MMK_R_A" = -9;
"@MMK_R_AE" = -20;
"@MMK_R_T" = -9;
"@MMK_R_W" = -15;
"@MMK_R_X" = -20;
"@MMK_R_Y" = -36;
"@MMK_R_a" = -15;
"@MMK_R_ampersand" = -5;
"@MMK_R_parenright" = -30;
};
"@MMK_L_D" = {
"@MMK_R_A" = -35;
"@MMK_R_AE" = -44;
"@MMK_R_T" = -25;
"@MMK_R_V" = -23;
"@MMK_R_W" = -40;
"@MMK_R_X" = -51;
"@MMK_R_Y" = -50;
"@MMK_R_a" = -15;
"@MMK_R_ampersand" = -10;
"@MMK_R_backslash" = -13;
"@MMK_R_braceright" = -36;
"@MMK_R_comma" = -40;
"@MMK_R_g" = -20;
"@MMK_R_parenright" = -59;
"@MMK_R_period" = -30;
"@MMK_R_slash" = -46;
"@MMK_R_underscore" = -21;
};
"@MMK_L_E" = {
"@MMK_R_a" = -10;
};
"@MMK_L_F" = {
"@MMK_R_A" = -76;
"@MMK_R_a" = -42;
"@MMK_R_c" = -26;
"@MMK_R_period" = -60;
"@MMK_R_s" = -20;
};
"@MMK_L_G" = {
"@MMK_R_T" = -5;
"@MMK_R_W" = -20;
"@MMK_R_Y" = -40;
};
"@MMK_L_H" = {
"@MMK_R_a" = -17;
"@MMK_R_c" = -15;
};
"@MMK_L_I" = {
"@MMK_R_a" = -10;
};
"@MMK_L_J" = {
"@MMK_R_A" = -30;
"@MMK_R_a" = -20;
"@MMK_R_c" = -15;
"@MMK_R_period" = -20;
};
"@MMK_L_K" = {
"@MMK_R_C" = -51;
"@MMK_R_Y" = -20;
"@MMK_R_a" = -34;
"@MMK_R_ampersand" = -30;
"@MMK_R_c" = -50;
"@MMK_R_guillemotleft" = -40;
"@MMK_R_hyphen" = -60;
"@MMK_R_plus" = -50;
"@MMK_R_question" = -15;
"@MMK_R_registered" = -40;
"@MMK_R_s" = -5;
"@MMK_R_t" = -26;
"@MMK_R_u" = -9;
"@MMK_R_v" = -30;
"@MMK_R_w" = -30;
"@MMK_R_y" = -70;
};
"@MMK_L_L" = {
"@MMK_R_C" = -63;
"@MMK_R_S" = -30;
"@MMK_R_T" = -116;
"@MMK_R_U" = -30;
"@MMK_R_V" = -120;
"@MMK_R_W" = -80;
"@MMK_R_X" = -20;
"@MMK_R_Y" = -100;
"@MMK_R_a" = -20;
"@MMK_R_ampersand" = -10;
"@MMK_R_asterisk" = -101;
"@MMK_R_backslash" = -40;
"@MMK_R_c" = -30;
"@MMK_R_hyphen" = -64;
"@MMK_R_i" = -15;
"@MMK_R_percent" = -63;
"@MMK_R_plus" = -49;
"@MMK_R_question" = -24;
"@MMK_R_t" = -50;
"@MMK_R_u" = -20;
"@MMK_R_uni018F" = -30;
"@MMK_R_uni02BA" = -60;
"@MMK_R_v" = -59;
"@MMK_R_w" = -30;
"@MMK_R_y" = -66;
};
"@MMK_L_M" = {
"@MMK_R_A" = -10;
"@MMK_R_a" = -10;
"@MMK_R_c" = -15;
};
"@MMK_L_N" = {
"@MMK_R_a" = -10;
"@MMK_R_c" = -15;
};
"@MMK_L_Oslash" = {
"@MMK_R_period" = -17;
};
"@MMK_L_P" = {
"@MMK_R_A" = -75;
"@MMK_R_AE" = -117;
"@MMK_R_Y" = -6;
"@MMK_R_a" = -40;
"@MMK_R_c" = -25;
"@MMK_R_dotlessi" = -10;
"@MMK_R_g" = -39;
"@MMK_R_period" = -70;
};
"@MMK_L_Q" = {
"@MMK_R_A" = -13;
"@MMK_R_T" = -25;
"@MMK_R_V" = -23;
"@MMK_R_W" = -17;
"@MMK_R_Y" = -39;
"@MMK_R_a" = -5;
"@MMK_R_g" = -10;
"@MMK_R_u" = 11;
"@MMK_R_w" = 11;
};
"@MMK_L_R" = {
"@MMK_R_C" = -20;
"@MMK_R_S" = -10;
"@MMK_R_T" = -30;
"@MMK_R_U" = -10;
"@MMK_R_V" = -35;
"@MMK_R_W" = -35;
"@MMK_R_X" = -25;
"@MMK_R_Y" = -35;
"@MMK_R_a" = -35;
"@MMK_R_ampersand" = -15;
"@MMK_R_c" = -55;
"@MMK_R_g" = -10;
"@MMK_R_i" = -20;
"@MMK_R_plus" = -9;
"@MMK_R_s" = -40;
"@MMK_R_u" = -20;
};
"@MMK_L_REbackwards" = {
"@MMK_R_T" = 5;
};
"@MMK_L_S" = {
"@MMK_R_A" = -10;
"@MMK_R_T" = -20;
"@MMK_R_V" = -20;
"@MMK_R_W" = -9;
"@MMK_R_Y" = -30;
"@MMK_R_a" = -15;
"@MMK_R_c" = -10;
};
"@MMK_L_T" = {
"@MMK_R_A" = -74;
"@MMK_R_AE" = -94;
"@MMK_R_C" = -25;
"@MMK_R_J" = -91;
"@MMK_R_S" = -20;
"@MMK_R_a" = -110;
"@MMK_R_ampersand" = -30;
"@MMK_R_at" = -89;
"@MMK_R_backslash" = 17;
"@MMK_R_braceleft" = -30;
"@MMK_R_c" = -110;
"@MMK_R_comma" = -80;
"@MMK_R_dotlessi" = -100;
"@MMK_R_exclamdown" = -39;
"@MMK_R_g" = -90;
"@MMK_R_hyphen" = -50;
"@MMK_R_iacute" = 15;
"@MMK_R_ibreve" = 70;
"@MMK_R_multiply" = -60;
"@MMK_R_p" = -45;
"@MMK_R_period" = -80;
"@MMK_R_plus" = -54;
"@MMK_R_question" = 20;
"@MMK_R_questiondown" = -89;
"@MMK_R_s" = -110;
"@MMK_R_semicolon" = -56;
"@MMK_R_slash" = -66;
"@MMK_R_t" = -17;
"@MMK_R_u" = -90;
"@MMK_R_underscore" = -60;
"@MMK_R_v" = -60;
"@MMK_R_w" = -57;
"@MMK_R_x" = -39;
"@MMK_R_y" = -90;
"@MMK_R_z" = -90;
};
"@MMK_L_Thorn" = {
"@MMK_R_A" = -44;
"@MMK_R_T" = -57;
"@MMK_R_V" = -44;
"@MMK_R_W" = -40;
"@MMK_R_Y" = -64;
"@MMK_R_period" = -49;
};
"@MMK_L_U" = {
"@MMK_R_A" = -30;
"@MMK_R_AE" = -44;
"@MMK_R_a" = -15;
"@MMK_R_g" = -25;
"@MMK_R_period" = -20;
"@MMK_R_slash" = -30;
"@MMK_R_underscore" = -40;
};
"@MMK_L_V" = {
"@MMK_R_A" = -85;
"@MMK_R_AE" = -113;
"@MMK_R_C" = -23;
"@MMK_R_J" = -60;
"@MMK_R_S" = -30;
"@MMK_R_a" = -85;
"@MMK_R_ampersand" = -60;
"@MMK_R_at" = -96;
"@MMK_R_backslash" = 23;
"@MMK_R_c" = -95;
"@MMK_R_colon" = -30;
"@MMK_R_comma" = -76;
"@MMK_R_dotlessi" = -25;
"@MMK_R_exclamdown" = -36;
"@MMK_R_g" = -80;
"@MMK_R_hyphen" = -34;
"@MMK_R_multiply" = -64;
"@MMK_R_period" = -80;
"@MMK_R_plus" = -49;
"@MMK_R_s" = -60;
"@MMK_R_slash" = -74;
"@MMK_R_t" = -20;
"@MMK_R_u" = -6;
"@MMK_R_underscore" = -94;
"@MMK_R_v" = -9;
"@MMK_R_y" = -20;
};
"@MMK_L_W" = {
"@MMK_R_A" = -100;
"@MMK_R_AE" = -89;
"@MMK_R_C" = -40;
"@MMK_R_J" = -40;
"@MMK_R_Oslash" = -20;
"@MMK_R_S" = -9;
"@MMK_R_a" = -90;
"@MMK_R_ampersand" = -50;
"@MMK_R_at" = -80;
"@MMK_R_braceleft" = -30;
"@MMK_R_c" = -100;
"@MMK_R_comma" = -60;
"@MMK_R_dotlessi" = -45;
"@MMK_R_exclamdown" = -30;
"@MMK_R_g" = -80;
"@MMK_R_hyphen" = -34;
"@MMK_R_i" = -17;
"@MMK_R_multiply" = -21;
"@MMK_R_period" = -70;
"@MMK_R_plus" = -49;
"@MMK_R_s" = -65;
"@MMK_R_semicolon" = -36;
"@MMK_R_slash" = -60;
"@MMK_R_u" = -40;
"@MMK_R_underscore" = -70;
"@MMK_R_v" = -9;
};
"@MMK_L_X" = {
"@MMK_R_A" = -20;
"@MMK_R_C" = -51;
"@MMK_R_a" = -35;
"@MMK_R_c" = -36;
"@MMK_R_s" = -18;
"@MMK_R_u" = -31;
"@MMK_R_w" = -30;
"@MMK_R_y" = -60;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -90;
"@MMK_R_AE" = -124;
"@MMK_R_C" = -50;
"@MMK_R_J" = -86;
"@MMK_R_Oslash" = -45;
"@MMK_R_S" = -40;
"@MMK_R_a" = -115;
"@MMK_R_ampersand" = -50;
"@MMK_R_at" = -110;
"@MMK_R_braceleft" = -50;
"@MMK_R_c" = -115;
"@MMK_R_colon" = -36;
"@MMK_R_comma" = -77;
"@MMK_R_dotlessi" = -34;
"@MMK_R_exclamdown" = -36;
"@MMK_R_g" = -86;
"@MMK_R_hyphen" = -54;
"@MMK_R_multiply" = -60;
"@MMK_R_period" = -91;
"@MMK_R_plus" = -76;
"@MMK_R_questiondown" = -84;
"@MMK_R_s" = -70;
"@MMK_R_semicolon" = -53;
"@MMK_R_slash" = -66;
"@MMK_R_t" = -30;
"@MMK_R_u" = -28;
"@MMK_R_underscore" = -70;
"@MMK_R_uni02BA" = 34;
"@MMK_R_v" = -36;
"@MMK_R_w" = -9;
"@MMK_R_y" = -20;
"@MMK_R_z" = -20;
};
"@MMK_L_Z" = {
"@MMK_R_C" = -20;
"@MMK_R_a" = -10;
"@MMK_R_c" = -20;
};
"@MMK_L_a" = {
"@MMK_R_asterisk" = -31;
"@MMK_R_backslash" = -40;
"@MMK_R_g" = -8;
"@MMK_R_registered" = -50;
"@MMK_R_uni02BA" = -50;
"@MMK_R_v" = -5;
"@MMK_R_y" = -17;
};
"@MMK_L_aacute" = {
"@MMK_R_asterisk" = -41;
"@MMK_R_backslash" = -46;
"@MMK_R_c" = -8;
"@MMK_R_g" = -5;
"@MMK_R_i" = -5;
"@MMK_R_quotesingle" = -30;
"@MMK_R_registered" = -50;
"@MMK_R_s" = -8;
"@MMK_R_t" = -25;
"@MMK_R_v" = -45;
"@MMK_R_w" = -25;
"@MMK_R_y" = -17;
"@MMK_R_z" = 15;
};
"@MMK_L_ae" = {
"@MMK_R_Y" = -115;
"@MMK_R_asterisk" = -31;
"@MMK_R_backslash" = -56;
"@MMK_R_g" = -10;
"@MMK_R_question" = -20;
"@MMK_R_registered" = -50;
"@MMK_R_t" = -9;
"@MMK_R_uni02BA" = -51;
"@MMK_R_v" = -20;
"@MMK_R_w" = -20;
"@MMK_R_x" = -26;
"@MMK_R_y" = -24;
};
"@MMK_L_ampersand" = {
"@MMK_R_C" = -11;
"@MMK_R_T" = -51;
"@MMK_R_V" = -56;
"@MMK_R_W" = -56;
"@MMK_R_Y" = -66;
"@MMK_R_percent" = -31;
"@MMK_R_w" = -11;
"@MMK_R_y" = -11;
};
"@MMK_L_asterisk" = {
"@MMK_R_A" = -96;
"@MMK_R_AE" = -121;
"@MMK_R_a" = -27;
"@MMK_R_c" = -31;
"@MMK_R_s" = -24;
};
"@MMK_L_at" = {
"@MMK_R_A" = -43;
"@MMK_R_AE" = -60;
"@MMK_R_T" = -49;
"@MMK_R_V" = -60;
"@MMK_R_W" = -46;
"@MMK_R_Y" = -84;
"@MMK_R_percent" = -40;
"@MMK_R_period" = -30;
"@MMK_R_w" = -9;
"@MMK_R_y" = -20;
};
"@MMK_L_at.case" = {
"@MMK_R_A" = -25;
};
"@MMK_L_b" = {
"@MMK_R_T" = -110;
"@MMK_R_V" = -95;
"@MMK_R_asterisk" = -47;
"@MMK_R_backslash" = -74;
"@MMK_R_braceright" = -50;
"@MMK_R_g" = -10;
"@MMK_R_i" = -5;
"@MMK_R_parenright" = -46;
"@MMK_R_question" = -30;
"@MMK_R_registered" = -50;
"@MMK_R_slash" = -16;
"@MMK_R_t" = -20;
"@MMK_R_uni02BA" = -51;
"@MMK_R_v" = -24;
"@MMK_R_w" = -18;
"@MMK_R_x" = -26;
"@MMK_R_y" = -35;
};
"@MMK_L_backslash" = {
"@MMK_R_C" = -9;
"@MMK_R_T" = -29;
"@MMK_R_V" = -60;
"@MMK_R_W" = -49;
"@MMK_R_Y" = -70;
"@MMK_R_c" = -27;
"@MMK_R_hyphen" = -30;
};
"@MMK_L_braceleft" = {
"@MMK_R_C" = -36;
"@MMK_R_c" = -50;
};
"@MMK_L_braceright" = {
"@MMK_R_A" = -49;
"@MMK_R_AE" = -59;
"@MMK_R_T" = -30;
"@MMK_R_W" = -30;
"@MMK_R_Y" = -50;
"@MMK_R_period" = -50;
};
"@MMK_L_c" = {
"@MMK_R_asterisk" = -31;
"@MMK_R_backslash" = -51;
"@MMK_R_parenright" = -17;
"@MMK_R_question" = -30;
"@MMK_R_registered" = -50;
"@MMK_R_t" = -7;
"@MMK_R_v" = -17;
};
"@MMK_L_colon" = {
"@MMK_R_V" = -30;
"@MMK_R_Y" = -36;
};
"@MMK_L_comma" = {
"@MMK_R_C" = -20;
"@MMK_R_T" = -80;
"@MMK_R_V" = -76;
"@MMK_R_W" = -56;
"@MMK_R_Y" = -87;
"@MMK_R_percent" = -57;
"@MMK_R_t" = -30;
"@MMK_R_w" = -30;
"@MMK_R_y" = -56;
};
"@MMK_L_dcaron" = {
"@MMK_R_b" = 120;
};
"@MMK_L_exclamdown" = {
"@MMK_R_T" = -39;
"@MMK_R_V" = -36;
"@MMK_R_W" = -30;
"@MMK_R_Y" = -36;
};
"@MMK_L_f" = {
"@MMK_R_a" = -20;
"@MMK_R_c" = -20;
"@MMK_R_g" = -40;
"@MMK_R_period" = -30;
"@MMK_R_s" = -17;
};
"@MMK_L_fl" = {
"@MMK_R_c" = -5;
};
"@MMK_L_g" = {
"@MMK_R_a" = -10;
"@MMK_R_c" = -15;
"@MMK_R_f" = 15;
"@MMK_R_j" = 20;
"@MMK_R_v" = 11;
};
"@MMK_L_germandbls" = {
"@MMK_R_c" = -6;
"@MMK_R_y" = -33;
};
"@MMK_L_greater" = {
"@MMK_R_period" = -60;
};
"@MMK_L_hyphen" = {
"@MMK_R_A" = -30;
"@MMK_R_T" = -55;
"@MMK_R_V" = -40;
"@MMK_R_W" = -50;
"@MMK_R_X" = -40;
"@MMK_R_Y" = -65;
"@MMK_R_backslash" = -44;
"@MMK_R_slash" = -44;
};
"@MMK_L_i" = {
"@MMK_R_g" = -5;
"@MMK_R_z" = 25;
};
"@MMK_L_iacute" = {
"@MMK_R_T" = 15;
"@MMK_R_b" = 20;
};
"@MMK_L_ibreve" = {
"@MMK_R_T" = 70;
"@MMK_R_b" = 60;
};
"@MMK_L_igrave" = {
"@MMK_R_T" = 15;
};
"@MMK_L_k" = {
"@MMK_R_a" = -41;
"@MMK_R_c" = -41;
"@MMK_R_g" = -20;
"@MMK_R_quotesingle" = -10;
"@MMK_R_s" = -24;
"@MMK_R_y" = -10;
};
"@MMK_L_l" = {
"@MMK_R_c" = -5;
"@MMK_R_ibreve" = 40;
};
"@MMK_L_lslash" = {
"@MMK_R_c" = 5;
"@MMK_R_t" = 20;
"@MMK_R_u" = 20;
"@MMK_R_z" = 20;
};
"@MMK_L_multiply" = {
"@MMK_R_A" = -26;
"@MMK_R_AE" = -26;
"@MMK_R_T" = -60;
"@MMK_R_V" = -64;
"@MMK_R_W" = -21;
"@MMK_R_Y" = -60;
"@MMK_R_y" = -9;
};
"@MMK_L_parenleft" = {
"@MMK_R_A" = -17;
"@MMK_R_C" = -59;
"@MMK_R_a" = -46;
"@MMK_R_c" = -46;
"@MMK_R_s" = -20;
"@MMK_R_t" = -9;
};
"@MMK_L_period" = {
"@MMK_R_C" = -30;
"@MMK_R_T" = -80;
"@MMK_R_U" = -20;
"@MMK_R_V" = -80;
"@MMK_R_W" = -70;
"@MMK_R_Y" = -91;
"@MMK_R_backslash" = -60;
"@MMK_R_braceleft" = -50;
"@MMK_R_less" = -60;
"@MMK_R_question" = -34;
"@MMK_R_v" = -40;
"@MMK_R_w" = -17;
"@MMK_R_y" = -40;
};
"@MMK_L_plus" = {
"@MMK_R_A" = -29;
"@MMK_R_T" = -54;
"@MMK_R_V" = -49;
"@MMK_R_W" = -49;
"@MMK_R_Y" = -76;
};
"@MMK_L_question" = {
"@MMK_R_A" = -70;
"@MMK_R_AE" = -94;
"@MMK_R_period" = -96;
};
"@MMK_L_questiondown" = {
"@MMK_R_T" = -54;
"@MMK_R_Y" = -54;
"@MMK_R_c" = -20;
"@MMK_R_percent" = -25;
"@MMK_R_z" = 20;
};
"@MMK_L_quotedblright" = {
"@MMK_R_J" = -83;
"@MMK_R_ampersand" = -56;
"@MMK_R_at" = -100;
"@MMK_R_c" = -70;
"@MMK_R_s" = -90;
"@MMK_R_slash" = -114;
};
"@MMK_L_r" = {
"@MMK_R_a" = -10;
"@MMK_R_c" = -10;
"@MMK_R_colon" = 9;
"@MMK_R_comma" = -36;
"@MMK_R_f" = 25;
"@MMK_R_g" = -10;
"@MMK_R_period" = -40;
"@MMK_R_t" = 10;
"@MMK_R_u" = 8;
};
"@MMK_L_s" = {
"@MMK_R_asterisk" = -38;
"@MMK_R_backslash" = -50;
"@MMK_R_parenright" = -11;
"@MMK_R_question" = -24;
"@MMK_R_registered" = -50;
"@MMK_R_t" = -5;
"@MMK_R_v" = -23;
"@MMK_R_w" = -15;
"@MMK_R_y" = -26;
};
"@MMK_L_semicolon" = {
"@MMK_R_T" = -44;
"@MMK_R_Y" = -11;
};
"@MMK_L_slash" = {
"@MMK_R_C" = -30;
"@MMK_R_T" = 20;
"@MMK_R_V" = 30;
"@MMK_R_W" = 11;
"@MMK_R_Y" = 26;
"@MMK_R_a" = -56;
"@MMK_R_c" = -49;
"@MMK_R_dotlessi" = -19;
"@MMK_R_g" = -41;
"@MMK_R_hyphen" = -57;
"@MMK_R_period" = -119;
"@MMK_R_s" = -30;
};
"@MMK_L_space" = {
"@MMK_R_A" = -5;
"@MMK_R_T" = -35;
"@MMK_R_V" = -15;
"@MMK_R_W" = -20;
};
"@MMK_L_t" = {
"@MMK_R_c" = -13;
"@MMK_R_comma" = 26;
"@MMK_R_f" = 20;
"@MMK_R_space" = 15;
};
"@MMK_L_underscore" = {
"@MMK_R_C" = -21;
"@MMK_R_T" = -60;
"@MMK_R_U" = -40;
"@MMK_R_V" = -94;
"@MMK_R_W" = -70;
"@MMK_R_Y" = -70;
};
"@MMK_L_uni018E" = {
"@MMK_R_T" = 5;
};
"@MMK_L_v" = {
"@MMK_R_A" = -56;
"@MMK_R_a" = -25;
"@MMK_R_c" = -24;
"@MMK_R_g" = -26;
"@MMK_R_period" = -40;
"@MMK_R_s" = -19;
"@MMK_R_t" = 11;
};
"@MMK_L_w" = {
"@MMK_R_a" = -25;
"@MMK_R_at" = -40;
"@MMK_R_c" = -18;
"@MMK_R_comma" = -30;
"@MMK_R_g" = -20;
"@MMK_R_period" = -17;
"@MMK_R_questiondown" = -13;
"@MMK_R_t" = 10;
};
"@MMK_L_x" = {
"@MMK_R_a" = -11;
"@MMK_R_c" = -26;
"@MMK_R_t" = 15;
};
"@MMK_L_y" = {
"@MMK_R_T" = -60;
"@MMK_R_a" = -39;
"@MMK_R_ampersand" = -11;
"@MMK_R_at" = -54;
"@MMK_R_c" = -35;
"@MMK_R_comma" = -66;
"@MMK_R_g" = -36;
"@MMK_R_multiply" = -9;
"@MMK_R_period" = -76;
"@MMK_R_questiondown" = -54;
"@MMK_R_quotesingle" = 15;
"@MMK_R_s" = -15;
"@MMK_R_slash" = -40;
};
A = {
T = -70;
Tcaron = -70;
W = -95;
Wacute = -95;
Wcircumflex = -95;
Wdieresis = -95;
Wgrave = -95;
uni0162 = -70;
uni021A = -70;
};
AE = {
ibreve = 34;
imacron = 56;
itilde = 41;
};
AEacute = {
ibreve = 34;
imacron = 56;
itilde = 41;
};
Aacute = {
asterisk = -96;
at = -9;
backslash = -60;
braceleft = -49;
f = -9;
multiply = -26;
parenright = -17;
plus = -29;
question = -34;
v = -56;
};
Abreve = {
asterisk = -96;
at = -9;
backslash = -60;
braceleft = -49;
f = -9;
multiply = -26;
parenright = -17;
plus = -29;
question = -34;
v = -56;
};
Acircumflex = {
asterisk = -96;
at = -9;
backslash = -60;
braceleft = -49;
f = -9;
multiply = -26;
parenright = -17;
plus = -29;
question = -34;
v = -56;
};
Adieresis = {
asterisk = -96;
at = -9;
backslash = -60;
braceleft = -49;
f = -9;
multiply = -26;
parenright = -17;
plus = -29;
question = -34;
v = -56;
};
Agrave = {
asterisk = -96;
at = -9;
backslash = -60;
braceleft = -49;
f = -9;
multiply = -26;
parenright = -17;
plus = -29;
question = -34;
v = -56;
};
Amacron = {
asterisk = -96;
at = -9;
backslash = -60;
braceleft = -49;
f = -9;
multiply = -26;
parenright = -17;
plus = -29;
question = -34;
v = -56;
};
Aogonek = {
asterisk = -96;
at = -9;
backslash = -60;
braceleft = -49;
f = -9;
multiply = -26;
parenright = -17;
plus = -29;
question = -34;
v = -56;
};
Aring = {
asterisk = -96;
at = -9;
backslash = -60;
braceleft = -49;
f = -9;
multiply = -26;
parenright = -17;
plus = -29;
question = -34;
v = -56;
};
Atilde = {
asterisk = -96;
at = -9;
backslash = -60;
braceleft = -49;
f = -9;
multiply = -26;
parenright = -17;
plus = -29;
question = -34;
v = -56;
};
B = {
Aacute = -6;
Abreve = -6;
Acircumflex = -6;
Adieresis = -6;
Agrave = -6;
Amacron = -6;
Aogonek = -6;
Aring = -6;
Atilde = -6;
X = -22;
imacron = 20;
};
C = {
imacron = 30;
itilde = 30;
};
Cacute = {
imacron = 30;
itilde = 30;
};
Ccaron = {
imacron = 30;
itilde = 30;
};
Ccedilla = {
imacron = 30;
itilde = 30;
};
Cdotaccent = {
imacron = 30;
itilde = 30;
};
E = {
imacron = 56;
itilde = 41;
};
Eacute = {
ibreve = 34;
imacron = 56;
itilde = 41;
};
Ebreve = {
ibreve = 34;
imacron = 56;
itilde = 41;
};
Ecaron = {
ibreve = 34;
imacron = 56;
itilde = 41;
};
Ecircumflex = {
ibreve = 34;
imacron = 56;
itilde = 41;
};
Edieresis = {
ibreve = 34;
imacron = 56;
itilde = 41;
};
Edotaccent = {
ibreve = 34;
imacron = 56;
itilde = 41;
};
Egrave = {
ibreve = 34;
imacron = 56;
itilde = 41;
};
Emacron = {
ibreve = 34;
imacron = 56;
itilde = 41;
};
Eogonek = {
ibreve = 34;
imacron = 56;
itilde = 41;
};
Euro = {
imacron = 30;
itilde = 30;
};
F = {
J = -49;
ampersand = -20;
at = -40;
comma = -60;
i = 0;
imacron = 70;
multiply = -20;
underscore = -40;
};
G = {
imacron = 20;
};
Gbreve = {
imacron = 20;
};
Gdotaccent = {
imacron = 20;
};
H = {
imacron = 40;
itilde = 25;
};
I = {
imacron = 40;
itilde = 25;
};
Iacute = {
imacron = 40;
itilde = 17;
};
Ibreve = {
imacron = 40;
itilde = 17;
};
Icircumflex = {
imacron = 40;
itilde = 17;
};
Idieresis = {
imacron = 40;
itilde = 17;
};
Idotaccent = {
imacron = 40;
itilde = 17;
};
Igrave = {
imacron = 40;
itilde = 17;
};
Imacron = {
imacron = 40;
itilde = 17;
};
Iogonek = {
imacron = 40;
itilde = 17;
};
Itilde = {
imacron = 40;
itilde = 17;
};
J = {
imacron = 66;
};
K = {
ibreve = 30;
imacron = 60;
};
L = {
V = -85;
};
Lacute = {
V = -85;
};
Lcaron = {
V = -85;
};
Ldot = {
V = -85;
};
Lslash = {
V = -85;
};
M = {
imacron = 40;
itilde = 25;
};
N = {
i = -5;
imacron = 40;
itilde = 17;
};
Nacute = {
imacron = 40;
itilde = 17;
};
Ncaron = {
imacron = 40;
itilde = 17;
};
Ntilde = {
imacron = 40;
itilde = 17;
};
OE = {
ibreve = 34;
imacron = 56;
itilde = 41;
};
Oslash = {
igrave = 54;
imacron = 61;
slash = -46;
underscore = -40;
};
P = {
J = -69;
X = -30;
Z = -20;
Zacute = -20;
Zcaron = -20;
Zdotaccent = -20;
aacute = -31;
abreve = -31;
acircumflex = -31;
adieresis = -31;
ae = -31;
agrave = -31;
amacron = -31;
ampersand = -34;
aogonek = -31;
aring = -31;
at = -39;
atilde = -31;
comma = -91;
e = -35;
icircumflex = 20;
itilde = 40;
parenright = -30;
plus = -9;
slash = -74;
underscore = -69;
};
Q = {
X = -17;
at = -13;
};
R = {
imacron = 15;
itilde = 20;
};
Racute = {
imacron = 15;
itilde = 20;
};
Rcaron = {
imacron = 15;
itilde = 20;
};
S = {
imacron = 40;
itilde = 20;
};
Sacute = {
imacron = 40;
itilde = 20;
};
Scaron = {
imacron = 40;
itilde = 20;
};
Scedilla = {
imacron = 40;
itilde = 20;
};
T = {
adieresis = -60;
amacron = -80;
atilde = -95;
edieresis = -80;
emacron = -90;
odieresis = -90;
omacron = -100;
racute = -60;
rcaron = -30;
scaron = -90;
udieresis = -70;
uni1EBD = -100;
ydieresis = -70;
};
Tcaron = {
adieresis = -60;
amacron = -80;
atilde = -95;
edieresis = -80;
emacron = -90;
odieresis = -90;
omacron = -100;
racute = -60;
rcaron = -30;
scaron = -90;
udieresis = -70;
uni1EBD = -100;
ydieresis = -70;
};
Thorn = {
X = -70;
parenright = -34;
};
U = {
imacron = 45;
itilde = 25;
};
Uacute = {
imacron = 45;
itilde = 25;
};
Ubreve = {
imacron = 45;
itilde = 25;
};
Ucircumflex = {
imacron = 45;
itilde = 25;
};
Udieresis = {
imacron = 45;
itilde = 25;
};
Ugrave = {
imacron = 45;
itilde = 25;
};
Uhungarumlaut = {
imacron = 45;
itilde = 25;
};
Umacron = {
imacron = 45;
itilde = 25;
};
Uogonek = {
imacron = 45;
itilde = 25;
};
Uring = {
imacron = 45;
itilde = 25;
};
Utilde = {
imacron = 45;
itilde = 25;
};
V = {
adieresis = -60;
edieresis = -80;
emacron = -85;
ibreve = 50;
imacron = 66;
rcaron = -20;
};
W = {
edieresis = -85;
icircumflex = 20;
imacron = 60;
itilde = 30;
rcaron = -25;
uni1EF9 = -30;
y = -30;
yacute = -30;
ycircumflex = -30;
ydieresis = -30;
ygrave = -30;
};
Wacute = {
edieresis = -85;
icircumflex = 20;
imacron = 60;
itilde = 30;
rcaron = -25;
};
Wcircumflex = {
edieresis = -85;
icircumflex = 20;
imacron = 60;
itilde = 30;
rcaron = -25;
};
Wdieresis = {
edieresis = -85;
icircumflex = 20;
imacron = 60;
itilde = 30;
rcaron = -25;
};
Wgrave = {
edieresis = -85;
icircumflex = 20;
imacron = 60;
itilde = 30;
rcaron = -25;
};
X = {
X = -10;
aacute = -26;
abreve = -26;
acircumflex = -26;
adieresis = -26;
ae = -26;
agrave = -26;
amacron = -26;
ampersand = -35;
aogonek = -26;
aring = -26;
at = -13;
atilde = -26;
ibreve = 30;
imacron = 50;
itilde = 20;
multiply = -34;
question = -26;
v = -30;
};
Y = {
ibreve = 40;
imacron = 71;
itilde = 20;
};
Yacute = {
ibreve = 40;
imacron = 71;
itilde = 20;
};
Ycircumflex = {
ibreve = 40;
imacron = 71;
itilde = 20;
};
Ydieresis = {
ibreve = 40;
imacron = 71;
itilde = 20;
};
Ygrave = {
ibreve = 40;
imacron = 71;
itilde = 20;
};
Z = {
imacron = 66;
itilde = 36;
};
Zacute = {
imacron = 66;
itilde = 36;
};
Zcaron = {
imacron = 66;
itilde = 36;
};
Zdotaccent = {
imacron = 66;
itilde = 36;
};
a = {
uni1EF9 = -35;
y = -35;
yacute = -35;
ycircumflex = -35;
ydieresis = -35;
ygrave = -35;
};
aacute = {
v = -15;
};
abreve = {
v = -15;
};
acircumflex = {
v = -15;
};
adieresis = {
v = -15;
};
ae = {
lslash = 10;
};
aeacute = {
lslash = 10;
};
agrave = {
v = -15;
};
amacron = {
v = -15;
};
ampersand = {
Wacute = -36;
Wcircumflex = -36;
Wdieresis = -36;
Wgrave = -36;
asterisk = -64;
backslash = -51;
question = -40;
quotedblright = -34;
quoteright = -34;
v = -11;
};
aogonek = {
v = -15;
};
aring = {
v = -15;
};
asterisk = {
J = -64;
ampersand = -46;
at = -56;
exclam = -23;
imacron = 69;
itilde = 23;
questiondown = -90;
slash = -117;
underscore = -83;
};
at = {
X = -49;
asterisk = -41;
backslash = -50;
comma = -41;
greater = -44;
less = -30;
parenright = -64;
question = -30;
slash = -50;
underscore = -60;
};
atilde = {
v = -15;
};
b = {
l = -5;
lslash = 15;
};
backslash = {
backslash = -129;
comma = 49;
question = -30;
quotedblbase = 39;
quotedblleft = -69;
quotedblright = -70;
quoteleft = -69;
quoteright = -70;
quotesinglbase = 39;
underscore = 46;
};
bar = {
imacron = 40;
itilde = 17;
};
braceright = {
comma = -36;
};
bracketleft = {
imacron = 34;
};
bracketright = {
imacron = 60;
itilde = 31;
};
brokenbar = {
imacron = 40;
itilde = 17;
};
comma = {
backslash = -61;
v = -44;
};
d = {
imacron = 44;
};
dcaron = {
questiondown = -57;
};
dcroat = {
imacron = 86;
};
dollar = {
imacron = 40;
itilde = 20;
};
e = {
T = -110;
Tcaron = -110;
lslash = 10;
uni0162 = -110;
uni021A = -110;
};
eacute = {
lslash = 10;
};
ebreve = {
lslash = 10;
};
ecaron = {
lslash = 10;
};
ecircumflex = {
lslash = 10;
};
edieresis = {
lslash = 10;
};
edotaccent = {
lslash = 10;
};
egrave = {
lslash = 10;
};
emacron = {
lslash = 10;
};
eogonek = {
lslash = 10;
};
eth = {
imacron = 30;
};
exclam = {
asterisk = -23;
igrave = 44;
imacron = 60;
};
f = {
at = -29;
e = -25;
f = 10;
i = -5;
ibreve = 30;
igrave = 40;
imacron = 60;
itilde = 41;
};
fl = {
imacron = 44;
};
g = {
lslash = 10;
};
gbreve = {
lslash = 10;
};
gdotaccent = {
lslash = 10;
};
germandbls = {
asterisk = -60;
v = -44;
};
greater = {
at = -59;
parenright = -54;
};
i = {
lslash = 10;
};
iacute = {
asterisk = 26;
b = 60;
backslash = 76;
braceright = 17;
bracketleft = 60;
bracketright = 34;
exclam = 44;
f = 40;
idieresis = 80;
imacron = 53;
itilde = 46;
k = 60;
lacute = 60;
lcaron = 60;
ldot = 60;
lslash = 49;
parenright = 34;
question = 59;
quotedblleft = 39;
quotedblright = 57;
quoteleft = 39;
quoteright = 57;
uni0137 = 60;
uni013C = 60;
};
ibreve = {
backslash = 60;
l = 40;
question = 36;
};
icircumflex = {
l = 40;
};
idieresis = {
b = 60;
f = 40;
h = 60;
i = 80;
j = 90;
k = 60;
l = 40;
t = 30;
tcaron = 30;
uni0163 = 30;
uni021B = 30;
};
imacron = {
B = 40;
D = 40;
Dcaron = 40;
E = 40;
Eacute = 40;
Ebreve = 40;
Ecaron = 40;
Ecircumflex = 40;
Edieresis = 40;
Edotaccent = 40;
Egrave = 40;
Emacron = 40;
Eogonek = 40;
F = 40;
H = 40;
I = 40;
Iacute = 40;
Ibreve = 40;
Icircumflex = 40;
Idieresis = 40;
Idotaccent = 40;
Igrave = 40;
Imacron = 40;
Itilde = 40;
K = 40;
L = 40;
Lacute = 40;
Lcaron = 40;
Ldot = 40;
M = 40;
N = 40;
Nacute = 40;
Ncaron = 40;
Ntilde = 40;
P = 40;
R = 40;
Racute = 40;
Rcaron = 40;
Thorn = 40;
asterisk = 69;
b = 60;
backslash = 81;
bar = 40;
bracketleft = 60;
bracketright = 34;
brokenbar = 40;
exclam = 60;
f = 17;
germandbls = 60;
k = 60;
l = 60;
lacute = 60;
lcaron = 60;
ldot = 60;
lslash = 60;
question = 71;
quotedblleft = 64;
quotedblright = 49;
quoteleft = 64;
quoteright = 49;
thorn = 60;
uni0136 = 40;
uni0137 = 60;
uni013B = 40;
uni013C = 60;
uni0145 = 40;
uni0156 = 40;
uni1EBC = 40;
z = 46;
zacute = 46;
zcaron = 46;
zdotaccent = 46;
};
itilde = {
asterisk = 17;
b = 23;
bracketleft = 31;
f = 30;
j = 36;
k = 23;
l = 23;
lacute = 23;
lcaron = 23;
ldot = 23;
question = 40;
quotedblleft = 9;
quotedblright = 29;
quoteleft = 9;
quoteright = 29;
uni0137 = 23;
uni013C = 23;
};
j = {
itilde = 36;
};
l = {
f = 5;
imacron = 44;
};
lacute = {
imacron = 44;
};
lcaron = {
questiondown = -57;
};
less = {
at = -40;
parenright = -40;
};
lslash = {
imacron = 60;
};
multiply = {
X = -34;
};
n = {
T = -85;
Tcaron = -85;
uni0162 = -85;
uni021A = -85;
};
o = {
l = -5;
lslash = 15;
};
oacute = {
l = -5;
lslash = 15;
};
obreve = {
l = -5;
lslash = 15;
};
ocircumflex = {
l = -5;
lslash = 15;
};
odieresis = {
l = -5;
lslash = 15;
};
oe = {
lslash = 10;
};
ograve = {
l = -5;
lslash = 15;
};
ohungarumlaut = {
l = -5;
lslash = 15;
};
omacron = {
l = -5;
lslash = 15;
};
otilde = {
l = -5;
lslash = 15;
};
p = {
l = -5;
lslash = 15;
};
parenleft = {
ampersand = -40;
at = -34;
};
plus = {
slash = -39;
};
q = {
backslash = -34;
j = 31;
};
question = {
J = -44;
X = -20;
at = -49;
comma = -70;
ibreve = 36;
igrave = 40;
imacron = 60;
itilde = 46;
parenright = -67;
questiondown = -110;
quotedblbase = -40;
quotesinglbase = -40;
slash = -76;
underscore = -90;
};
questiondown = {
backslash = -36;
question = -34;
quotedblbase = 34;
quotesinglbase = 34;
v = -13;
};
quotedbl = {
ibreve = 29;
imacron = 49;
itilde = 24;
};
quotedblbase = {
backslash = -86;
question = -11;
};
quotedblleft = {
J = -80;
at = -84;
ibreve = 13;
imacron = 64;
itilde = 26;
questiondown = -86;
slash = -100;
};
quotedblright = {
ibreve = 29;
imacron = 49;
itilde = 24;
};
quoteleft = {
J = -80;
at = -84;
ibreve = 13;
imacron = 64;
itilde = 26;
questiondown = -86;
slash = -100;
};
quoteright = {
ibreve = 29;
imacron = 49;
itilde = 24;
};
quotesinglbase = {
backslash = -86;
question = -11;
};
quotesingle = {
ibreve = 29;
imacron = 49;
itilde = 24;
};
s = {
lslash = 10;
};
sacute = {
lslash = 10;
};
scaron = {
lslash = 10;
};
scedilla = {
lslash = 10;
};
slash = {
B = 49;
D = 49;
Dcaron = 49;
E = 49;
Eacute = 49;
Ebreve = 49;
Ecaron = 49;
Ecircumflex = 49;
Edieresis = 49;
Edotaccent = 49;
Egrave = 49;
Emacron = 49;
Eogonek = 49;
F = 49;
H = 49;
I = 49;
Iacute = 49;
Ibreve = 49;
Icircumflex = 60;
Idieresis = 51;
Idotaccent = 49;
Igrave = 49;
Imacron = 71;
Itilde = 49;
J = -40;
K = 49;
L = 49;
Lacute = 49;
Lcaron = 49;
Ldot = 49;
M = 49;
N = 49;
Nacute = 49;
Ncaron = 49;
Ntilde = 49;
Oslash = -30;
P = 49;
R = 49;
Racute = 49;
Rcaron = 49;
Thorn = 49;
ampersand = -50;
asterisk = -23;
at = -83;
bar = 49;
brokenbar = 49;
comma = -60;
ibreve = 40;
icircumflex = 35;
idieresis = 37;
igrave = 70;
imacron = 81;
plus = -49;
questiondown = -66;
quotedblbase = -84;
quotesinglbase = -84;
slash = -120;
underscore = -144;
uni0136 = 49;
uni013B = 49;
uni0145 = 49;
uni0156 = 49;
uni1EBC = 49;
};
space = {
X = -20;
};
thorn = {
l = -5;
lslash = 15;
};
underscore = {
ampersand = -40;
asterisk = -83;
backslash = -153;
j = 34;
question = -44;
underscore = -110;
};
uni0122 = {
imacron = 20;
};
uni0123 = {
lslash = 10;
};
uni0136 = {
ibreve = 30;
imacron = 60;
};
uni013B = {
V = -85;
};
uni013C = {
imacron = 44;
};
uni0145 = {
imacron = 40;
itilde = 17;
};
uni0156 = {
imacron = 15;
itilde = 20;
};
uni0162 = {
adieresis = -60;
amacron = -80;
atilde = -95;
edieresis = -80;
emacron = -90;
odieresis = -90;
omacron = -100;
racute = -60;
rcaron = -30;
scaron = -90;
udieresis = -70;
uni1EBD = -100;
ydieresis = -70;
};
uni0218 = {
imacron = 40;
itilde = 20;
};
uni0219 = {
lslash = 10;
};
uni021A = {
adieresis = -60;
amacron = -80;
atilde = -95;
edieresis = -80;
emacron = -90;
odieresis = -90;
omacron = -100;
racute = -60;
rcaron = -30;
scaron = -90;
udieresis = -70;
uni1EBD = -100;
ydieresis = -70;
};
uni0259 = {
l = -5;
lslash = 15;
};
uni1EBC = {
ibreve = 34;
imacron = 56;
itilde = 41;
};
uni1EBD = {
lslash = 10;
};
uni1EF8 = {
ibreve = 40;
imacron = 71;
itilde = 20;
};
uni20A8 = {
lslash = 10;
};
v = {
aacute = -30;
abreve = -30;
acircumflex = -30;
adieresis = -30;
ae = -30;
agrave = -30;
amacron = -30;
ampersand = -17;
aogonek = -30;
aring = -30;
at = -44;
atilde = -30;
comma = -50;
f = 20;
questiondown = -39;
};
x = {
i = 10;
};
z = {
imacron = 40;
};
zacute = {
imacron = 40;
};
zcaron = {
imacron = 40;
};
zdotaccent = {
imacron = 40;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright 2022 The Rethink Sans Project Authors (https://github.com/hans-thiessen/Rethink-Sans)";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "The Rethink Sans project authors (Hans Thiessen). DM Sans designed by Colophon Foundry.";
}
);
},
{
key = designerURL;
value = "https://www.hansthiessen.com/";
},
{
key = licenses;
values = (
{
language = ENG;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL";
}
);
},
{
key = licenseURL;
value = "https://scripts.sil.org/OFL";
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Rethink Communications LLC";
}
);
},
{
key = manufacturerURL;
value = "https://rethinkideas.com/";
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 1000;
versionMajor = 1;
versionMinor = 1;
}
